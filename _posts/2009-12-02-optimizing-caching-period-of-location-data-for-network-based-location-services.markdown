---
title: Optimizing caching period of location data for network based location services
abstract: A system and associated method for optimizing caching period of location data for network based location services. A location caching server receives a location request from a mobile device. The location caching server calculates, pursuant to a predefined calculation rule, a caching period of a location cache entry for the mobile device based on a precision level requested by the mobile device and a service precision level assigned for a type of location service for which the location request was made. The location caching server obtains real location data of the mobile device of the calculated caching period is expired. The location caching server subsequently adjusts the caching period based on a distance traveled by the mobile device pursuant to a predefined adjustment rule, and updates the location cache entry.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08131818&OS=08131818&RS=08131818
owner: International Business Machines Corporation
number: 08131818
owner_city: Armonk
owner_country: US
publication_date: 20091202
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention discloses a system and associated method for automatically optimizing caching period of location data for network based location services. Conventional network based location service methods caches the location data to overcome inaccuracy of the location data caused by latency for processing location requests and to support more transactions per a network location server. Conventional network based location service methods statically determine caching periods for various types of services without taking dynamic changes of circumstances into account, which degrades accuracy of the serviced location data.","According to one embodiment of the present invention, a method for optimizing caching period of location data for network based location services comprises: receiving a location request for a location service from a network location server, comprising parameters of MSISDN, Precision, TimeStamp, and ServiceType, wherein MSISDN is an identifier for a mobile device that has sent the location request to the network location server, wherein Precision is a precision level requested from the mobile device, wherein TimeStamp is a first time value when the network location server received the location request, wherein ServiceType is a service precision level that is assigned for the location service, and wherein ServiceType corresponds to a respective default caching period CachePeriod; determining that current location data of the mobile device needs to be obtained; obtaining the current location data from the network location server responsive to sending a real location query to the network location server; a processor of a computer adjusting CachePeriod corresponding to ServiceType based on a distance that the mobile device has traveled during a time lapse between the first time value TimeStamp and a second time value when the network location server received the real location query; and setting a new location cache entry to a location cache, the new location cache entry comprising parameters of MSISDN, NewServiceType, NewCachePeriod, PriorLocation, and PriorTimeStamp, wherein NewServiceType is selected from the group consisting of ServiceType and Precision, wherein NewCachePeriod is the adjusted CachePeriod, wherein PriorLocation is the obtained current location data, and wherein PriorTimeStamp is the second time value.","According to one embodiment of the present invention, a computer program product comprises a computer readable memory unit that embodies a computer readable program code. The computer readable program code contains instructions that, when run by a processor of a computer system, implement a method for optimizing caching period of location data for network based location services.","According to one embodiment of the present invention, a computer system comprises a processor and a computer readable memory unit coupled to the processor, wherein the computer readable memory unit containing instructions that, when run by the processor, implement a method for optimizing caching period of location data for network based location services.","According to one embodiment of the present invention, a process for supporting computer infrastructure, said process comprising providing at least one support service for at least one of creating, integrating, hosting, maintaining, and deploying computer-readable code in a computing system, wherein the code in combination with the computing system is capable of performing a method for optimizing caching period of location data for network based location services.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":"10"},"The system  comprises a carrier and a third party. The carrier, also referred to as a service provider, comprises a carrier data network , a network location server , a service delivery platform (SDP) , and a location caching server . The third party comprises a virtual private network (VPN)  and a third party application server .","The carrier data network  interconnects a location based server , at least one base station, and at least one base mobile device, to the network location server . The carrier data network  provides data services to said at least one mobile device. The carrier data network  may be a wireless network, an Internet Protocol (IP) based network, or a combination thereof.","A mobile device  of said at least one base mobile device is a cellular terminal device that has positioning functionality. The mobile device may utilize an embedded Assisted Global Positioning System (GPS) processor to support more accurate network based location positioning.","A base station  of said at least one base station connects the mobile device  to the carrier data network  through the location based server . The base station  is commonly referred to as a cell tower, which supports wireless data and voice communication of multiple mobile devices within a coverage area referred to as a cell.","The location based server  determines a position coordinates associated with the mobile device  by use of predefined positioning technologies. Examples of positioning technologies may be, inter alia, cell tower identification, triangulation across multiple base stations. The cell tower identification is utilized for low level accuracy positioning. The triangulation is utilized for high level accuracy positioning.","The network location server  is a server platform that provides network based location services. The network location server  comprises various components performing service delivery platform functions such as determining location by use of various positioning technologies, processing location requests from mobile devices, throttling, billing, etc. The network location server  consolidates multiple location information from various location based servers  which may utilize different positioning technologies. The network location server  communicates consolidated location information and coordinates to the service delivery platform (SDP)  using various open application programming interfaces (APIs) such as Parlay X, OpenLS, and LIF\/MLP. See description of , infra, for steps performed by the network location server .","The service delivery platform (SDP)  delivers location services offered by the carrier to the third party application server . The SDP  interacts with the network location server  and the location caching server  to obtain location information, either a current coordinates or a location cache entry for the mobile device . Examples of the location services may be, inter alia, group location service that provides location information for a group of mobile devices within a geographic area, specific location coordinates for a mobile device, geospatial mapping information for a device location, performing of a location aware application, etc.","The location caching server  provides caching services of location information and coordinates for the carrier. The location caching server  comprises a location caching process , a service cache , and a location cache . The service cache  comprises at least one service cache entry CacheDefault (ServiceType, CachePeriod), wherein ServiceType indicates a service precision level offered by the carrier, and wherein CachePeriod indicates a default caching period associated with the service precision level ServiceType. The default caching period CachePeriod is dynamically optimized by the location caching process . The location cache  comprises at least one location cache entry in a tuple (MSISDN, CacheDefault, PriorLocation, PriorTimeStamp). See description of , infra, for steps performed by the location caching process  and details of attributes the location cache entry.","The virtual private network (VPN)  is a secure Internet Protocol (IP) based network that connects the third party application server  to the service delivery platform (SDP)  for location services offered by the carrier. The third party application server  requests and consumes location information. Examples of third party application may be, inter alia, an enterprise Sales Force Automation system, an Application Service Provider application such as Google Maps, etc.","The system  improves accuracy of location information provided by the network location server  by use of the location caching server . End users on the side of the mobile device  or connected to the third party application server  perceive the location server as more accurate proportional to the precision level requested by the end users. The location caching process  dynamically and automatically determines when to use cached location data stored in the location cache  or when to queries the mobile device  for a real location, according to default caching period per service precision level, accuracy requested by the mobile device , and distance the mobile device  traveled.","The embodiments of the present invention may vary according to specifics of the location caching server  for non-functional requirements that are unrelated to caching functions such as number of subscribers, location throughput, latency requirements, etc. The location caching server  may utilize application server software to support scaling of the algorithms, process, and caches to meet the non-functional requirements. Examples of the application server software may be, inter alia, IBM\u00ae WebSphere\u00ae Application Server, Oracle\u00ae WebLogic, etc. (IBM and WebSphere are registered trademarks of International Business Machines Corporation in the United States; Oracle is a registered trademark of Oracle Corporation and\/or its affiliates in the United States) The network location server  and the service delivery platform  may be integrated through common application program interfaces (APIs) or custom integration. Examples of the common APIs may be, inter alia, web services, OpenLS, LIF\/MLP, etc. Examples of technology employed in the custom integration may be, inter alia, EJBs, SOAP, or Web Service interfaces. In embodiments in which a large number of location cache entries are required, the service cache  and the location cache  are implemented as a separate in-memory database such as TimesTen or SolidDB.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 2","FIG. 1"]},"In step , the network location server receives a location request (MSISDN, Precision) from a mobile device that requests location data, also referred to as a two-dimensional (XY) coordinate, of the mobile device. A first parameter MSISDN of the location request indicates a unique identifier of the mobile device from which the location request has originated. The term MSISDN is an acronym of Mobile Station Integrated Services Digital Network, which commonly refers to a Mobile Station ISDN Number, or a cell phone number in wireless communication. A second parameter Precision of the location request indicates a precision level requested by the mobile device. The location request is formatted pursuant to an industry standard definition employed in the system. Examples of industry standard definitions of the location request may be, inter alia, Parlay\/X, LIF MLP, Open LS, etc. In one embodiment of the present invention, the second parameter Precision of the location request has the precision level selected from a set {HIGH, MEDIUM, LOW} according to precision levels of the Parlay\/X standard definition. Then the network location server proceeds with step .","In step , the network location server determines a third parameter TimeStamp and a fourth parameter ServiceType and adds the parameters TimeStamp and ServiceType to the received location request. The third parameter TimeStamp is a timestamp that logs a point of time when the network location server has received the location request. The fourth parameter ServiceType is a service precision level of the network location server, which indicates accuracy of the location data serviced in response to the received location request. The service precision level of the fourth parameter ServiceType is determined by a type of service requested but independent from the precision level Precision requested by the mobile device in the location request. The network location server determines the fourth parameter ServiceType by use of domain and sub-domain names, bindings or coupling techniques. Then the network location server proceeds with step .","In one embodiment of the present invention, the fourth parameter ServiceType is selected from a set {UNKNOWN, HIGH, MEDIUM, LOW} for compatible operations with the second parameter PRECISION. If the service precision level is HIGH, the network location server provides highly accurate location data in response to the received location request. Thus a caching period associated with the service precision level ServiceType=HIGH is shorter than other service precision levels. Examples of services associated with HIGH service precision level may be, inter alia, navigation services, emergency call services, dispatching services, etc. If the service precision level is MEDIUM, the network location server provides moderately accurate location data in response to the received location request. Examples of services associated with HIGH service precision level may be, inter alia, location services such as finding friend, dating services, local shop search, phone book search, etc. If the service precision level is LOW, the network location server provides minimally accurate location data in response to the received location request. Thus a caching period associated with the service precision level ServiceType=LOW is the longest of all service precision levels. Examples of services associated with HIGH service precision level may be, inter alia, weather information service, traffic information service, local news, local sports team standings report, outdoor activity conditions report, etc. The service precision level UNKNOWN is a default value for any service precision level, which returns a moderate to highly accurate location data in response to the received location request. See  for an example of caching periods for respective service precision levels.","In step , the network location server sends the location request comprising four parameters (MSISDN, Precision, TimeStamp, ServiceType) to the location caching process. See description of step  of  infra for steps performed by the location caching process in response to step . Then the network location server proceeds with step .","In step , the network location server receives a response of the location request sent in step  from the location caching process and determines whether the location caching process has sent a location cache entry or a real location query to the network location server. If the network location server has received the real location query from the location caching process, in response to step  of  infra, then the network location server proceeds with step  to process the received real location query. If the network location server has received the location cache entry from the location caching process, in response to step  of  infra, then the network location server proceeds with step  to process the received location cache entry.","In step , the network location server obtains a new location data of the mobile device by performing a real location query across the carrier data network. Then the network location server proceeds with step .","In step , the network location server sends the new location data to the location caching process for an update of a location cache entry associated with the location request and to the mobile device as a response to the location request. Then the network location server terminates processing the location request.","In step , the network location server forwards the received location cache entry to the mobile device as a response to the location request. In steps  and , the network location server captures billing and usage information based on services rendered to the mobile device. Then the network location server terminates processing the location request.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 3","FIG. 1"]},"In step , the location caching process receives the location request (MSISDN, Precision, TimeStamp, ServiceType) from the network location server, in response to step  of  supra. The location caching process subsequently retrieves a location cache entry that corresponds to the first parameter MSISDN of the received location request by searching the location cache with MSISDN. The location cache entry comprises (MSISDN, CacheDefault, PriorLocation, PriorTimeStamp). A first attribute MSISDN indicates a unique identifier of the location cache entry, which matches to the first parameter MSISDN of the location request. A second attribute CacheDefault indicates cache default information stored in a respective service cache entry comprising a service precision level and a caching period associated with the service precision level (ServiceType, CachePeriod). The caching period associated with the service precision level CachePeriod is subject to reset. A third attribute PriorLocation indicates a location data sampled in a most recent location request. A fourth attribute PriorTimeStamp indicates a timestamp when the most recent location request was made. Then the location caching process proceeds with step .","In step , the location caching process determines whether a location cache entry that corresponds to the received location request is available by searching the location cache with the first parameter MSISDN. If the location caching process determines that the location cache entry corresponding to the received location request is available, then the location caching process proceeds with step . If the location caching process determines that the location cache entry corresponding to the received location request is not available, then the location caching process proceeds with step .","In step , the location caching process calculates a caching period of the retrieved location cache entry. See descriptions of  infra for detailed steps of step . Then the location caching process proceeds with step .","In step , the location caching process determines whether the caching period has already expired by adding the caching period CachePeriod of the cache default to a time value of PriorTimeStamp and subsequently comparing the added result with a time value of TimeStamp. If the added result is less than the time value of TimeStamp, then the caching period has expired since the latest caching. If the added result is greater than or equal to the time value of TimeStamp, then the caching period is not expired yet, and consequently the location cache entry is still effective. If the location caching process determines that the caching period has already expired, then the location caching process proceeds with step . If the location caching process determines that the caching period has not expired yet, then the location caching process proceeds with step .","In step , the location caching process returns the location cache entry from step  to the network location server. Then the location caching process terminates.","In step , the location caching process sends a real location query to network location server, because the location caching process do not have an unexpired location cache entry for the location request. See description of step  of  supra for steps performed by the network location server in response to the real location query. Then the location caching process proceeds with step .","In step , the location caching process receives a result of the real location query from the network location server, in response to step  of  supra. The result of the real location query comprises (MSISDN, CacheDefault, PriorLocation, PriorTimeStamp), wherein CacheDefault comprises (ServiceType, CachePeriod). Then the location caching process proceeds with step .","In step  the location caching process adjusts the caching period by examining a distance that the mobile device has traveled since the most recent location request. Then the location caching process proceeds with step .","In one embodiment of the present invention, the adjusted caching period is calculated according to various ranges of distance that the mobile device has traveled. See descriptions of  infra for an example of distance ranges to the caching period.","In step , the location caching process updates the location cache entry corresponding to the location request with the new location from step . See descriptions of  infra for detailed steps of step .",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 4","FIG. 1"]},"In step , the location caching process determines whether the service precision level ServiceType of the retrieved location cache entry is equal to the requested precision level Precision of the location request. If the location caching process determines that the service precision level ServiceType of the location cache entry is not equal to the requested precision level Precision of the location request, then the location caching process proceeds with step . If the location caching process determines that the service precision level ServiceType of the location cache entry is equal to the requested precision level Precision of the location request, then the location caching process proceeds with step .","In step , the location caching process calculates the caching period by use of the cache default information CacheDefault (ServiceType, CachePeriod) and the requested precision level Precision of the location request according to a caching period calculation rule. The caching period calculation rule is devised to resolve caching period discrepancy between the service precision level ServiceType provided by the network location server and the precision level Precision specified in the location request. Then the location caching process proceeds with step  of  supra.","In one embodiment of the present invention, the caching period calculation rule is defined according to the precision level Precision of the location request. See descriptions of  infra for an example of the caching period calculation rule.","In step , the location caching process sets the caching period with the default caching period CachePeriod for ServiceType. Then the location caching process proceeds with step  of  supra.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 5","FIG. 1"]},"In step , the location caching process determines a default caching period per service precision level from a service cache entry. The service cache entry is identical to the second attribute of the location cache entry CacheDefault, which indicates cache default information comprising the service precision level and the caching period associated with the service precision level, (ServiceType, CachePeriod).","In step , the location caching process determines whether the precision level of the location request Precision is equal to the service precision level of the service cache entry ServiceType. If the location caching process determines that the precision level of the location request Precision is not equal to the service precision level of the service cache entry ServiceType, then the location caching process proceeds with step . If the location caching process determines that the precision level of the location request Precision is equal to the service precision level of the service cache entry ServiceType, then the location caching process proceeds with step .","In step , the location caching process selects a higher precision level among the requested precision level Precision and the service precision level ServiceType as the service precision level of the location cache entry ServiceType. Selecting the higher precision level enables the mobile device having the unique identifier MSISDN to concurrently execute multiple location services of various requested precision. Then the location caching process proceeds with step .","In step , the location caching process updates the location cache entry to set the service precision level ServiceType with the selected service precision level from step , the location data PriorLocation with the location data received from step  of  supra, the timestamp PriorTimeStamp with the timestamp received from step  of  supra, and the caching period CachePeriod with the caching period adjusted in step  of  supra. Then the location caching process terminates procession the location request.","In step , the location caching process adds a new location cache entry (MSISDN, CacheDefault, PriorLocation, PriorTimeStamp), wherein CacheDefault comprises (ServiceType, CachePeriod), to the location cache with the result received from the real location query in step  of  supra. Location data PriorLocation is a latest real location received in response to the real location query. The new location cache entry for MSISDN is created only when the location cache entry was determined to be not available from step  of  supra. Then the location caching process terminates procession the location request.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIGS. 6A","b":["6","6"]},{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 6A","FIG. 6A"]},{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 6B","FIG. 6B"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 6C","FIG. 6C"]},{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIGS. 7A","FIG. 3"],"b":["7","7"]},"The examples of location requests and the optimized caching period utilize the default values and the rules of , B, and C, supra. As noted in description of  supra when the location data was provided by the network location server in response to the real location query. The caching period calculated by precision requested Precision, that is P\u2032, is used only to determine whether or not a real location query should be made to service a current location request, but does not affect the location cache entries. The precision level Precision of the location request is set pursuant to demand of the mobile device and varies for each location request. The location cache entry is set based on how far the mobile device had traveled and which level of precision is proper to service the location request. Regardless of the requested precision level Precision in an individual location request, the location caching process optimizes the caching period in the location cache entry according to the service precision level ServiceType that is necessary to properly service the location request.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 7A","FIG. 6A"]},"For a first location request in column , a requested precision level is high, that is Precision=HIGH. In step  of , supra, the caching period is calculated as five (p\u2032=10\u00d70.5=5) seconds according to the caching period calculation rule of , supra. Time lapse of the first location request is six (6) seconds, which is larger than the calculated caching period of five (5) seconds, indicating that the location cache entry of the mobile device of MSISDN=X is determined to be expired in step  of , supra. The location caching process consequently sends a real location query to the network location server in step  of , supra, and receives new location data from the network location server in step  of , supra, as represented in Location Source row of . In step , the location caching process checks traveled distance of the mobile device of MSISDN=X as zero (0) meter. According to , supra, the location caching process does not adjust the caching period because the mobile device of MSISDN=X did not traveled. The location caching process maintains the default caching period CachePeriod=10 for the services ServiceType=HIGH for the service cache entry. The location caching process subsequently updates the location cache entry for the mobile device of MSISDN=X with the caching period, the new location data and a new timestamp when the real location query is made.","For a second location request in column , a requested precision level is low, that is Precision=LOW. In step  of , supra, the caching period is calculated as fifteen (p\u2032=10\u00d71.5=15) seconds according to the caching period calculation rule of , supra. Time lapse of the second location request is three (3) seconds, which is smaller than the calculated caching period of fifteen (15) seconds, indicating that the location cache entry of the mobile device of MSISDN=X is determined to be still effective in step  of , supra. The location caching process returns location data of the location cache entry to the mobile device of MSISDN=X in step  of , supra. Because the location cache entry for the mobile device of MSISDN=X was effective, the location caching process does not update the location cache entry and does not check traveled distance.","For a third location request in column , a requested precision level is high, that is Precision=HIGH. In step  of , supra, the caching period is calculated as five (p\u2033=10\u00d70.5=5) seconds according to the caching period calculation rule of , supra. Time lapse of the third location request is six (6) seconds, which is larger than the calculated caching period of five (5) seconds, indicating that the location cache entry of the mobile device of MSISDN=X is determined to be expired in step  of , supra. The location caching process consequently sends a real location query to the network location server in step  of , supra, and receives new location data from the network location server in step  of , supra, as represented in Location Source row of . In step , the location caching process checks traveled distance of the mobile device of MSISDN=X as sixty (60) meters. According to , supra, the location caching process adjusts the caching period by reducing the caching period by fifty percent (50%), that is two and a half seconds (p\u2033=5\u00d70.5=2.5). The location caching process resets the default caching period CachePeriod=2.5 for the services ServiceType=HIGH for the service cache entry. The location caching process subsequently updates the location cache entry for the mobile device of MSISDN=X with the caching period, the new location data and a new timestamp when the real location query is made.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 7B","FIG. 6A"]},"For a fourth location request in column , a requested precision level is medium, that is Precision=MEDIUM. In step  of , supra, the caching period is calculated as thirty (p\u2032=p=30) seconds according to the caching period calculation rule of , supra. Time lapse of the fourth location request is forty (40) seconds, which is larger than the calculated caching period of thirty (30) seconds, indicating that the location cache entry of the mobile device of MSISDN=Y is determined to be expired in step  of , supra. The location caching process consequently sends a real location query to the network location server in step  of , supra, and receives new location data from the network location server in step  of , supra, as represented in Location Source row of . In step , the location caching process checks traveled distance of the mobile device of MSISDN=Y as fifty-five (55) meters. According to , supra, the location caching process adjusts the caching period by reducing the caching period by fifty percent (50%), that is fifteen seconds (p\u2033=30\u00d70.5=15). The location caching process resets the default caching period CachePeriod=15 for the services ServiceType=MEDIUM for a service cache entry. The location caching process subsequently updates the location cache entry for the mobile device of MSISDN=Y with the caching period, the new location data and a new timestamp when the real location query is made.","For a fifth location request in column , a requested precision level is low, that is Precision=LOW. In step  of , supra, the caching period is calculated as twenty two and a half (p\u2032=p\u00d71.5=22.5) seconds according to the caching period calculation rule of , supra. The default caching period of the medium service precision level is fifteen (15) seconds, that is CacheDefault (ServiceType, CachePeriod)=(MEDIUM, 15), after the service cache entry update from the fourth location request. Time lapse of the fifth location request is seventeen (17) seconds, which is smaller than the calculated caching period of twenty two and a half (22.5) seconds, indicating that the location cache entry of the mobile device of MSISDN=Y is determined to be still effective in step  of , supra. The location caching process returns location data of the location cache entry to the mobile device of MSISDN=Y in step  of , supra. Because the location cache entry for the mobile device of MSISDN=Y was effective, the location caching process does not update the location cache entry and does not check traveled distance.","For a sixth location request in column , a requested precision level is low, that is Precision=LOW. In step  of , supra, the caching period is calculated as twenty two and a half (p\u2032=p\u00d71.5=22.5) seconds according to the caching period calculation rule of , supra. The default caching period of the medium service precision level is fifteen (15) seconds, that is CacheDefault (ServiceType, CachePeriod)=(MEDIUM, 15), after the service cache entry update from the fourth location request, since the fifth location request did not result in update of the service cache entry. Time lapse of the sixth location request is twenty five (25) seconds, which is larger than the calculated caching period of twenty two and a half (22.5) seconds, indicating that the location cache entry of the mobile device of MSISDN=Y is determined to be expired in step  of , supra. The location caching process consequently sends a real location query to the network location server in step  of , supra, and receives new location data from the network location server in step  of , supra, as represented in Location Source row of . In step , the location caching process checks traveled distance of the mobile device of MSISDN=Y as zero (0) meter. According to , supra, the location caching process does not adjust the caching period because the mobile device of MSISDN=Y did not traveled. The location caching process restores the default caching period CachePeriod=30 for the services ServiceType=MEDIUM for the service cache entry. The location caching process subsequently updates the location cache entry for the mobile device of MSISDN=Y with the caching period, the new location data and a new timestamp when the real location query is made.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 7C","FIG. 6A"]},"For a seventh location request in column , a requested precision level is high, that is Precision=HIGH. In step  of , supra, the caching period is calculated as thirty (p\u2032=60\u00d70.5=30) seconds according to the caching period calculation rule of , supra. Time lapse of the seventh location request is twenty five (25) seconds, which is smaller than the calculated caching period of thirty (30) seconds, indicating that the location cache entry of the mobile device of MSISDN=Z is determined to be still effective in step  of , supra. The location caching process returns location data of the location cache entry to the mobile device of MSISDN=Z in step  of , supra. Because the location cache entry for the mobile device of MSISDN=Z was effective, the location caching process does not update the location cache entry and does not check traveled distance.","For an eighth location request in column , a requested precision level is high, that is Precision=HIGH. In step  of , supra, the caching period is calculated as thirty (p\u2032=60\u00d70.5=30) seconds according to the caching period calculation rule of , supra. Time lapse of the eighth location request is thirty three (33) seconds, which is larger than the calculated caching period of thirty (30) seconds, indicating that the location cache entry of the mobile device of MSISDN=Z is determined to be expired in step  of , supra. The location caching process consequently sends a real location query to the network location server in step  of , supra, and receives new location data from the network location server in step  of , supra, as represented in Location Source row of . In step , the location caching process checks traveled distance of the mobile device of MSISDN=Z as eight (8) meters. According to , supra, the location caching process adjusts the caching period by reducing the caching period by twenty percent (20%), that is forty eight seconds (p\u2033=60\u00d70.8=48). The location caching process resets the default caching period CachePeriod=48 for the services ServiceType=LOW for the service cache entry. The location caching process subsequently updates the location cache entry for the mobile device of MSISDN=Z with the caching period, the new location data and a new timestamp when the real location query is made.","For a ninth location request in column , a requested precision level is high, that is Precision=HIGH. In step  of , supra, the caching period is calculated as twenty four (p\u2032=48\u00d70.5=24) seconds according to the caching period calculation rule of , supra. The default caching period of the low service precision level is forty eight (48) seconds, that is CacheDefault (ServiceType, CachePeriod)=(MEDIUM, 15), after the service cache entry update from the eighth location request. Time lapse of the ninth location request is twenty five (25) seconds, which is larger than the calculated caching period of twenty four (24) seconds, indicating that the location cache entry of the mobile device of MSISDN=Z is determined to be expired in step  of , supra. The location caching process consequently sends a real location query to the network location server in step  of , supra, and receives new location data from the network location server in step  of , supra, as represented in Location Source row of . In step , the location caching process checks traveled distance of the mobile device of MSISDN=Z as zero (0) meter. According to , supra, the location caching process does not adjust the caching period because the mobile device of MSISDN=Z did not traveled. The location caching process restores the default caching period CachePeriod=60 for the services ServiceType=LOW for the service cache entry. The location caching process subsequently updates the location cache entry for the mobile device of MSISDN=Z with the caching period, the new location data and a new timestamp when the real location query is made.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 8"},"The computer system  comprises a processor , an input device  coupled to the processor , an output device  coupled to the processor , and computer readable memory units comprising memory devices  and  each coupled to the processor . The input device  may be, inter alia, a keyboard, a mouse, a keypad, a touch screen, a voice recognition device, a sensor, a network interface card (NIC), a Voice\/video over Internet Protocol (VOIP) adapter, a wireless adapter, a telephone adapter, a dedicated circuit adapter, etc. The output device  may be, inter alia, a printer, a plotter, a computer screen, a magnetic tape, a removable hard disk, a floppy disk, a NIC, a VOIP adapter, a wireless adapter, a telephone adapter, a dedicated circuit adapter, an audio and\/or visual signal generator, a light emitting diode (LED), etc. The memory devices  and  may be, inter alia, a cache, a dynamic random access memory (DRAM), a read-only memory (ROM), a hard disk, a floppy disk, a magnetic tape, an optical storage such as a compact disk (CD) or a digital video disk (DVD), etc. The memory device  includes a computer code  which is a computer program code that comprises computer-executable instructions. The computer code  includes, inter alia, an algorithm used for optimizing caching period of location data for network based location services according to the present invention. The processor  executes the computer code . The memory device  includes input data . The input data  includes input required by the computer code . The output device  displays output from the computer code . Either or both memory devices  and  (or one or more additional memory devices not shown in ) may be used as a computer readable storage medium (or a computer usable storage medium or a program storage device) having a computer readable program code embodied therein and\/or having other data stored therein, wherein the computer readable program code comprises the computer code . Generally, a computer program product (or, alternatively, an article of manufacture) of the computer system  may comprise said computer readable storage medium (or said program storage device).","Any of the components of the present invention can be deployed, managed, serviced, etc. by a service provider that offers to deploy or integrate computing infrastructure with respect to a process for dynamically building a web interface per data collecting rules of the present invention. Thus, the present invention discloses a process for supporting computer infrastructure, comprising integrating, hosting, maintaining and deploying computer-readable code into a computing system (e.g., computing system ), wherein the code in combination with the computing system is capable of performing a method for optimizing caching period of location data for network based location services.","In another embodiment, the invention provides a business method that performs the process steps of the invention on a subscription, advertising and\/or fee basis. That is, a service provider, such as a Solution Integrator, can offer to create, maintain, support, etc. a process for optimizing caching period of location data for network based location services of the present invention. In this case, the service provider can create, maintain, support, etc. a computer infrastructure that performs the process steps of the invention for one or more customers. In return, the service provider can receive payment from the customer(s) under a subscription and\/or fee agreement, and\/or the service provider can receive payment from the sale of advertising content to one or more third parties.","While  shows the computer system  as a particular configuration of hardware and software, any configuration of hardware and software, as would be known to a person of ordinary skill in the art, may be utilized for the purposes stated supra in conjunction with the particular computer system  of . For example, the memory devices  and  may be portions of a single memory device rather than separate memory devices.","As will be appreciated by one skilled in the art, the present invention may be embodied as a system, method or computer program product. Accordingly, the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, the present invention may take the form of a computer program product embodied in any tangible medium of expression having computer-usable program code embodied in the medium.","Any combination of one or more computer usable or computer readable medium(s) ,  may be utilized. The term computer usable medium or computer readable medium collectively refers to computer usable\/readable storage medium , . The computer-usable or computer-readable medium ,  may be, for example but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, a device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer-readable medium ,  would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. Note that the computer-usable or computer-readable medium ,  could even be paper or another suitable medium upon which the program is printed, as the program can be electronically captured, via, for instance, optical scanning of the paper or other medium, then compiled, interpreted, or otherwise processed in a suitable manner, if necessary, and then stored in a computer memory. In the context of this document, a computer-usable or computer-readable medium ,  may be any medium that can contain, or store a program for use by or in connection with a system, apparatus, or device that executes instructions.","Computer code  for carrying out operations of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The computer code  may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","The present invention is described with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. The term \u201ccomputer program instructions\u201d is interchangeable with the term \u201ccomputer code \u201d in this specification. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in the computer-readable medium ,  that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable medium produce an article of manufacture including instruction means which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be run substantially concurrently, or the blocks may sometimes be run in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 6A","b":["6","6"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIGS. 7A","FIG. 3"],"b":["7","7"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
