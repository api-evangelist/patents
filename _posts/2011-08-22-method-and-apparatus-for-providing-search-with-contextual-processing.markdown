---
title: Method and apparatus for providing search with contextual processing
abstract: An approach is provided for providing search with contextual processing. A contextual search platform processes and/or facilitates a processing of one or more data requests data to generate at least one query. The contextual search platform further determines one or more algorithms for bounding, at least in part, result data responsive to the one or more data requests, the at least one query, or a combination thereof. The contextual search platform also causes, at least in part, an association of the one or more algorithms with the at least one query.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09043323&OS=09043323&RS=09043323
owner: Nokia Corporation
number: 09043323
owner_city: Espoo
owner_country: FI
publication_date: 20110822
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SOME EXAMPLE EMBODIMENTS","DESCRIPTION OF SOME EMBODIMENTS"],"p":["Service providers (e.g., wireless, cellular, etc.) and device manufacturers are continually challenged to deliver value and convenience to consumers by, for example, providing compelling network services. These services are leading to vast amounts of data (structured and binary) which need to be managed, stored, searched, analyzed, etc. A recent popular application is delivering services to a user of a wireless device based on the device's location, and many mobile devices include Global Positioning System (GPS) receivers that provide geo-location of the device or provide information to the device user around a certain location. More recently location based services, such as geo-spatial searches, have become very prominent by providing value to the user, based on their location. Current geo-spatial services provide information search results based on distance from one or more locations, using bounding box filters that search matches within a specific area. However, with recent advances in navigation services, the capabilities of bounding box filtering are not sufficient for users' navigation needs involving specific business contexts such as, for example, linear searches along a certain stretch of a road, a power line, a river, etc.","Therefore, there is a need for an approach for providing search with contextual processing.","According to one embodiment, a method comprises processing and\/or facilitating a processing of one or more data requests data to generate at least one query. The method also comprises determining one or more algorithms for bounding, at least in part, result data responsive to the one or more data requests, the at least one query, or a combination thereof. The method further comprises causing, at least in part, an association of the one or more algorithms with the at least one query.","According to another embodiment, an apparatus comprises at least one processor, and at least one memory including computer program code for one or more computer programs, the at least one memory and the computer program code configured to, with the at least one processor, cause, at least in part, the apparatus to process and\/or facilitate a processing of one or more data requests data to generate at least one query. The apparatus is also caused to determine one or more algorithms for bounding, at least in part, result data responsive to the one or more data requests, the at least one query, or a combination thereof. The apparatus is further caused to cause, at least in part, an association of the one or more algorithms with the at least one query.","According to another embodiment, a computer-readable storage medium carries one or more sequences of one or more instructions which, when executed by one or more processors, cause, at least in part, an apparatus to process and\/or facilitate a processing of one or more data requests data to generate at least one query. The apparatus is also caused to determine one or more algorithms for bounding, at least in part, result data responsive to the one or more data requests, the at least one query, or a combination thereof. The apparatus is further caused to cause, at least in part, an association of the one or more algorithms with the at least one query.","According to another embodiment, an apparatus comprises means for processing and\/or facilitating a processing of one or more data requests data to generate at least one query. The apparatus also comprises means for determining one or more algorithms for bounding, at least in part, result data responsive to the one or more data requests, the at least one query, or a combination thereof. The apparatus further comprises means for causing, at least in part, an association of the one or more algorithms with the at least one query.","In addition, for various example embodiments of the invention, the following is applicable: a method comprising facilitating a processing of and\/or processing (1) data and\/or (2) information and\/or (3) at least one signal, the (1) data and\/or (2) information and\/or (3) at least one signal based, at least in part, on (or derived at least in part from) any one or any combination of methods (or processes) disclosed in this application as relevant to any embodiment of the invention.","For various example embodiments of the invention, the following is also applicable: a method comprising facilitating access to at least one interface configured to allow access to at least one service, the at least one service configured to perform any one or any combination of network or service provider methods (or processes) disclosed in this application.","For various example embodiments of the invention, the following is also applicable: a method comprising facilitating creating and\/or facilitating modifying (1) at least one device user interface element and\/or (2) at least one device user interface functionality, the (1) at least one device user interface element and\/or (2) at least one device user interface functionality based, at least in part, on data and\/or information resulting from one or any combination of methods or processes disclosed in this application as relevant to any embodiment of the invention, and\/or at least one signal resulting from one or any combination of methods (or processes) disclosed in this application as relevant to any embodiment of the invention.","For various example embodiments of the invention, the following is also applicable: a method comprising creating and\/or modifying (1) at least one device user interface element and\/or (2) at least one device user interface functionality, the (1) at least one device user interface element and\/or (2) at least one device user interface functionality based at least in part on data and\/or information resulting from one or any combination of methods (or processes) disclosed in this application as relevant to any embodiment of the invention, and\/or at least one signal resulting from one or any combination of methods (or processes) disclosed in this application as relevant to any embodiment of the invention.","In various example embodiments, the methods (or processes) can be accomplished on the service provider side or on the mobile device side or in any shared way between service provider and mobile device with actions being performed on both sides.","For various example embodiments, the following is applicable: An apparatus comprising means for performing the method of any of originally filed claims.","Still other aspects, features, and advantages of the invention are readily apparent from the following detailed description, simply by illustrating a number of particular embodiments and implementations, including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments, and its several details can be modified in various obvious respects, all without departing from the spirit and scope of the invention. Accordingly, the drawings and description are to be regarded as illustrative in nature, and not as restrictive.","Examples of a method, apparatus, and computer program for providing search with contextual processing are disclosed. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent, however, to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention.","As used herein, the term \u201ccomputation closure\u201d identifies a particular computation procedure together with relations and communications among various processes including passing arguments, sharing process results, selecting results provided from computation of alternative inputs, flow of data and process results, etc. The computation closures (e.g., a granular reflective set of instructions, data, and\/or related execution context or state) provide the capability of slicing of computations for processes and transmitting the computation slices between devices, infrastructures and information sources.","As used herein, the term \u201ccloud\u201d refers to an aggregated set of information and computation closures from different sources. This multi-sourcing is very flexible since it accounts and relies on the observation that the same piece of information or computation can come from different sources. In one embodiment, information and computations within the cloud are represented using Semantic Web standards such as Resource Description Framework (RDF), RDF Schema (RDFS), OWL (Web Ontology Language), FOAF (Friend of a Friend ontology), rule sets in RuleML (Rule Markup Language), etc. Furthermore, as used herein, RDF refers to a family of World Wide Web Consortium (W3C) specifications originally designed as a metadata data model. It has come to be used as a general method for conceptual description or modeling of information and computations that is implemented in web resources; using a variety of syntax formats. Although various embodiments are described with respect to clouds, it is contemplated that the approach described herein may be used with other structures and conceptual description methods used to create distributed models of information and computations.","In one embodiment, according to a definition by the National Institute of Standards and Technology (NIST) (see \u201cThe NIST Definition of Cloud Computing (Draft),\u201d Mell, P. and Grance, T., January 2011, NIST, U.S. Department of Commerce, Special Publication 800-145 (Draft)), cloud computing is a model for enabling convenient, on-demand network access to a shared pool of configurable computing resources (e.g., networks, servers, storage, applications, and services) that can be rapidly provisioned and released with minimal management effort or service provider interaction. This cloud model promotes availability and is composed of five essential characteristics, three service models, and four deployment models. The essential characteristics of the cloud model consist of on-demand self-service, broad network access, resource pooling, rapid elasticity, and measured Service.","The on-demand self-service characteristic of the cloud model enables a consumer to unilaterally provision computing capabilities, such as server time and network storage, as needed automatically without requiring human interaction with each service's provider.","The broad network access characteristic of the cloud model provides capabilities available over the network that can be accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms (e.g., mobile phones, laptops, and PDAs).","Based on the resource pooling characteristic of the cloud model, the provider's computing resources are pooled to serve multiple consumers using a multi-tenant model, with different physical and virtual resources dynamically assigned and reassigned according to consumer demand. There is a sense of location independence in that the customer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction (e.g., country, state, or datacenter). Examples of resources include storage, processing, memory, network bandwidth, and virtual machines.","The rapid elasticity of the cloud model provides rapid and elastic, and in some cases automatic, provision of capabilities to quickly scale out and rapid release to quickly scale in. To the consumer, the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.","According to the measured service characteristic, cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service (e.g., storage, processing, bandwidth, and active user accounts). Resource usage can be monitored, controlled, and reported providing transparency for both the provider and consumer of the utilized service.","Furthermore, the service models associated with the cloud model include Cloud Software as a Service (SaaS), Cloud Platform as a Service (PaaS), and Cloud Infrastructure as a Service (IaaS).","The Cloud Software as a Service (SaaS) provides, to the customer, the capability to use the provider's applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser (e.g., web-based email). According to this service model, the consumer does not manage or control the underlying cloud infrastructure including network, servers, operating systems, storage, or even individual application capabilities, with the possible exception of limited user-specific application configuration settings.","The Cloud Platform as a Service (PaaS) provides, to the customer, the capability to deploy onto the cloud infrastructure consumer-created or acquired applications created using programming languages and tools supported by the provider. According to this service model, the consumer does not manage or control the underlying cloud infrastructure including network, servers, operating systems, or storage, but has control over the deployed applications and possibly application hosting environment configurations.","The Cloud Infrastructure as a Service (IaaS) provides, to the customer, the capability to provision processing, storage, networks, and other fundamental computing resources where the consumer is able to deploy and run arbitrary software, which can include operating systems and applications. According to this service model, the consumer does not manage or control the underlying cloud infrastructure but has control over operating systems, storage, deployed applications, and possibly limited control of select networking components (e.g., host firewalls).","Additionally, a cloud model can be deployed as a private cloud, a community cloud, a public cloud, or a hybrid cloud. In one embodiment, according to a private cloud model, the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on premise or off premise. Alternatively, a community cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns (e.g., mission, security requirements, policy, and compliance considerations). It may be managed by the organizations or a third party and may exist on premise or off premise. A public cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services. Finally, a hybrid cloud infrastructure is a composition of two or more clouds (private, community, or public) that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability (e.g., cloud bursting for load-balancing between clouds).",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 1"},"However there are search cases that require results much different than what bounding box method can provide. For example, in one embodiment, a user may need information related to traffic in a five miles stretch on a highway from point A to point B. In order to provide the requested information, the related application can do bounding box search multiple times and aggregate the results to present to the user. This requires aggregation layer capabilities on the application side which the underlying geo-spatial search is unable to understand.","In another embodiment, a user may want to find businesses having certain properties (e.g. discounts, reviews, etc.) on the stretch of a specific road. However, as previously discussed, current standard geo-spatial search methods provide results to user requests by creating bounding boxes which are squares around the particular point the user is searching on and the user will get all the points that he\/she is looking for and then the user can sort the data based on various criteria for example based on number of stars reviewers have given the business, comments from reviewers, etc. Alternatively, a geo-spatial search method may include radius search around the particular search point. There are many open source tools for these kinds of search.","However, in many occasions bounding box search or radius search are not sufficient for answering user queries. For example, if a user is trying to find traffic on highway H in an M miles stretch, what the application has to do is to create a bounding box which has a circumference along the highway H and it will also have to create many bounding boxes on the M miles stretch to actually get the traffic situation through those bounding boxes. Upon retrieving the traffic information, an information aggregation is done in order to get a holistic picture of the traffic within the M miles stretch of the highway H. This is because the retrieved traffic information on a highway will not be through the whole road stretch that the user needs and if the user is travelling across multiple highways within a small stretch, since highways bend in different directions, the application will have to do lots of different searches automatically and then pull them all together. These applications use various kinds of aggregation logic to aggregate the query results. However, radius and bounding box searches, which today are standard search methods, are not sufficient for queries such as the above example.","Base on the bounding box search method, the bounding boxes may be around the M miles stretch or may consider alternate routes. The application my divide up the M miles stretch into M one mile radius searches. Additionally, since there are curves on a road, the radius points identified by the radius method need to be constantly updated. For example, circular searches for traffic events may be done along the road stretch from south to north-east and then the traffic events are aggregated to get a complete picture of the traffic situations on that road. For alternate routes, a wider search may be done (e.g., 3 miles radius each), and across multiple roads at the same time.","It is clear from the above examples that one bounding box or one radius search will not be able to provide the results to user's request. On the contrary, the searches have to be repeated many times, depending on what the user is looking for such as, for example, traffic on their route, alternative routes with less traffic, etc. Furthermore, the results from many searches should be aggregated for generating a combined search results.","To address this problem, a system  of  introduces the capability to provide search with contextual processing.","In one embodiment, the business contexts associated with applications -of User Equipments (UEs) -of UE sets -is plugged into the geo-spatial search by search nodes  while the search process is taking place. This can lead to lowering the complexity on the applications -side, and more importantly the search nodes  can use the business contexts to optimize the geo-spatial search, while it is underway, to provide only relevant results to the user of UEs -","However, despite the fact that search can be bounded with business logic and distributed with different granularity, still there is a challenge to achieve scalable contextual information processing within heterogeneous environments such as computation clouds -. Therefore the main challenge is to create such adaptive computing platform that provides granular and reflective business logic and corresponding computational balancing capability for a contextual search platform  to enhance the information processing power of the search nodes  as it interacts with various external information providers, clouds -, etc.","In one embodiment, an application -knows what the user of UE -is looking for, however, if this knowledge is transferred to the contextual search platform , the hook points (e.g. function calls, events, messages, etc. that are used to intercept business contexts into the search) can be used by various services, including new services that are being introduced. This will lead to an optimal search by the search nodes .","In another embodiment, an application -is capable of performing result aggregation. As a result, when a new service provided to UEs -via geo-spatial search by search nodes , the application -can merge and aggregate all the results produced. Typically, search nodes  associated with map operating systems perform radius or bounding box searches but most of the process is performed by the application -. However, in this embodiment, a generic way for providing search services is presented that leverages the search to the contextual search platform .","In one embodiment, business context is sent from applications -to the actual search nodes  rather than the aggregation nodes that process queries. Furthermore, a contextual search platform  may as well be equipped with aggregation layers of its own.","In one embodiment, the business context can be decomposed to (characterized by) certain amounts of data and the relevant computations, by the contextual search platform . The business context data is decomposed into its primitive components that can be accessed by the application -, the contextual search platform , or a combination thereof. The decomposed computations can be serialized into certain forms and formats. For applicability to most of the existing platforms in the industry, the format of the computations can be any standard widely used format, such as for example RDF, Raw XML, etc.","In one embodiment, the data accompanying the computations can include map related data, corresponding layering such as points of interests, roads, etc., represented through various graphs. The data is serialized and represented in certain data management systems in cloud environments -usually in RDF or a similar format.","In one embodiment, by combining different layers, business context (decomposed to computation primitives and relevant data) can be combined with representation of the geo-spatial data which is embedded or represented by map information such as Point of Interest (POI) metadata, road representation data, etc. As a result, the process for providing results to a user query remains independent from facts such as where the actual search is taking place (in a search node , in one or more clouds -, or a combination thereof) or where the aggregation is nominated to (applications -, clouds -, etc.) In this embodiment, the query results are provided based on a set of serialized computations, in computation spaces -, and related data, in information spaces -, in a specific format (e.g., RDF). Additionally, search nodes  are able to create more efficient queries compared to the multiple bounding boxes typically used.","As shown in , the system  comprises sets -of user equipments (UEs) having connectivity to the contextual search platform  via a communication network . By way of example, the communication network  of system  includes one or more networks such as a data network, a wireless network, a telephony network, or any combination thereof. It is contemplated that the data network may be any local area network (LAN), metropolitan area network (MAN), wide area network (WAN), a public data network (e.g., the Internet), short range wireless network, or any other suitable packet-switched network, such as a commercially owned, proprietary packet-switched network, e.g., a proprietary cable or fiber-optic network, and the like, or any combination thereof. In addition, the wireless network may be, for example, a cellular network and may employ various technologies including enhanced data rates for global evolution (EDGE), general packet radio service (GPRS), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., worldwide interoperability for microwave access (WiMAX), Long Term Evolution (LTE) networks, code division multiple access (CDMA), wideband code division multiple access (WCDMA), wireless fidelity (WiFi), wireless LAN (WLAN), Bluetooth\u00ae, Internet Protocol (IP) data casting, satellite, mobile ad-hoc network (MANET), and the like, or any combination thereof.","The UEs -is any type of mobile terminal, fixed terminal, or portable terminal including a mobile handset, station, unit, device, multimedia computer, multimedia tablet, Internet node, communicator, desktop computer, laptop computer, notebook computer, netbook computer, tablet computer, personal communication system (PCS) device, personal navigation device, personal digital assistants (PDAs), audio\/video player, digital camera\/camcorder, positioning device, television receiver, radio broadcast receiver, electronic book device, game device, or any combination thereof, including the accessories and peripherals of these devices, or any combination thereof. It is also contemplated that the UE  can support any type of interface to the user (such as \u201cwearable\u201d circuitry, etc.).","In one embodiment, the granular and reflective representation of operational context allows real-time data integration across various data providers. This integration can be used for providing dynamic data models, flexible clustering\/partitioning, etc. Additionally, the geo-spatial integration in granular and reflective representation enables mashup or combination of data, presentation or functionality across multiple sources of geo-spatially aware data sets along with the operational context (e.g. business context) for example in social networking applications, cross-organizational data platforms, logistics, command and control sources.","In one embodiment, structured (or binary) storage and in-place analytics processing provided by the contextual search platform  and by the information spaces -of clouds -with an ability to use business and situational context, provide real-time insight into the data. Such binding is based on the fact that the related computations in computation spaces -can be presented as a part of the structured (or binary) data object. Therefore, the data and the computations can be serialized along with structured data object as annotation enclosed by granular and reflective run-time environment, wherein such run-time environment is based on computation closures and every process can be defined by a number of recombined computation closures or by a chain of computation closures. Additionally, applications -can be defined as sets of computation closures with predefined functional flows. Therefore, the applications themselves can also be reflected onto run-time environment and vice versa.","By way of example, the UEs -, and the contextual search platform  communicate with each other and other components of the communication network  using well known, new or still developing protocols. In this context, a protocol includes a set of rules defining how the network nodes within the communication network  interact with each other based on information sent over the communication links. The protocols are effective at different layers of operation within each node, from generating and receiving physical signals of various types, to selecting a link for transferring those signals, to the format of information indicated by those signals, to identifying which software application executing on a computer system sends or receives the information. The conceptually different layers of protocols for exchanging information over a network are described in the Open Systems Interconnection (OSI) Reference Model.","Communications between the network nodes are typically effected by exchanging discrete packets of data. Each packet typically comprises (1) header information associated with a particular protocol, and (2) payload information that follows the header information and contains information that may be processed independently of that particular protocol. In some protocols, the packet includes (3) trailer information following the payload and indicating the end of the payload information. The header includes information such as the source of the packet, its destination, the length of the payload, and other properties used by the protocol. Often, the data in the payload for the particular protocol includes a header and payload for a different protocol associated with a different, higher layer of the OSI Reference Model. The header for a particular protocol typically indicates a type for the next protocol contained in its payload. The higher layer protocol is said to be encapsulated in the lower layer protocol. The headers included in a packet traversing multiple heterogeneous networks, such as the Internet, typically include a physical (layer 1) header, a data-link (layer 2) header, an internetwork (layer 3) header and a transport (layer 4) header, and various application (layer 5, layer 6 and layer 7) headers as defined by the OSI Reference Model.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 2","b":["103","201","203","205","207","209","211","213"]},{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 2","FIG. 3","FIG. 3","FIG. 9","FIG. 3"],"b":["300","103","300","301","300","201","103","107","107","201"],"i":["a","i"]},"In one embodiment, per step  of  the algorithm selector  determines one or more algorithms for bounding, at least in part, result data responsive to the one or more data requests, the at least one query, or a combination thereof. The algorithm selector  may analyze the request data, the query or a combination thereof to determine the algorithm for bounding the query results. The algorithm selector  may select one or more algorithms from an algorithm repository stored in storage , in clouds -, or a combination thereof.","In one embodiment, per step  of , the algorithm selector  causes, at least in part, an association of the one or more determined algorithms with the at least one query. The queries and their associated algorithms may be stored in storage , in clouds -or a combination thereof.","In one embodiment, per step  of , the algorithm selector  determines whether the data request is associated with one or more applications -, one or more services, or a combination thereof of UE -. If associated applications and\/or services exist, per step  the algorithm selector  determines the one or more algorithms based, at least in part, on one or more applications -, one or more services (not shown), or a combination thereof associated with the one or more data requests from UE -, the at least one query generated by the query generator , or a combination thereof.","In one embodiment, per step  of , the algorithm selector  determines one or more business contexts associated with the one or more applications -, the one or more services, or a combination thereof. The business contexts may be extracted from the applications -, the services, etc. The one or more determined business contexts can be used for bounding the query result data.","In one embodiment, per step  of , the closure generator  causes, at least in part, a representation of the at least one query, the one or more algorithms, the one or more business contexts, or a combination thereof as one or more computation closures. The computation closures can be sent to clouds -to be stored in the computation spaces -and executed by processing entities within the environment of clouds -. The one or more computation closures may comprise one or more functional flows defining, at least in part, the one or more applications -, the one or more services, or a combination thereof.","In one embodiment, per step  of , the model selector  determines one or more models associated with the one or more algorithms for the bounding of the result data, wherein the one or more models represent, at least in part, one or more data transformations, one or more data extractions, one or more data loadings, or a combination thereof.","In one embodiment, per step  of , the closure generator  determining respective operational granularities of the one or more algorithms, the one or more business contexts, or a combination thereof. The operational granularities enables breaking down of processes into sets of primitive simpler processes that can be executed independently and in a distributed manner (e.g., on a cloud -).","In one embodiment, per step  of , the closure generator  causes, at least in part, a serialization of the one or more algorithms, the one or more business contexts, or a combination thereof based, at least in part, on the respective operational granularities. The serialization process provides links and metadata that each operational granularity needs in order to be executed independently. The serialization also provides data for construction of final results based on the executed operational granularities.","In one embodiment, per step  of , the transmission module  causes, at least in part, a transmission of the query and the one or more algorithms to a search node  to cause, at least in part, an initiation of a processing of the at least one query, the one or more algorithms, or a combination thereof to generate the result data. The search node  may access the clouds -in order to retrieve and use computation closures generated by the closure generator  and stored in computation spaces -. The search node  may also determine related data from the information spaces -","In one embodiment, per step  of , the query processing module  causes, at least in part, a caching of at least a portion of the at least one query, the one or more algorithms, the result data, or a combination thereof. The cached data may be stored in storage .","In one embodiment, per step  of , the query processing module  processes and\/or facilitates a processing of one or more subsequent queries based, at least in part, on the caching. In this embodiment, the cached queries and algorithms can be reused which will increase the efficiency. For example, if an application is frequently used by a user of UE , the cached queries and algorithms from earlier uses can be applied to next occasions of using the application without the need to be generated repeatedly.","In one embodiment, the at least one query is a geo-spatial search query.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIGS. 4A-4B","FIG. 4A"],"b":["107","109","401","109","403","109","405","400","111","111","103","117","107","105","400","407","107","409","411","411","415"],"i":["a","n"]},"In one embodiment, per step  the application  initiates a search session via a device provider . The device provider , which is directly communicating with the cloud front-end  generates and sends a search request to the cloud front-end  per step .","In one embodiment, per step  the query generator  generates a skyline query that is being sent by the cloud front-end , by contextual search platform , or a combination thereof, to the cloud backend . A skyline query is a query with some boundaries associated to it. The two storages, the binary storage  and the structured storage  are bound by particular models provided by the model selector . As a result, there is a reflective process within the backend  environment wherein the models provide boundaries for various storages.","In one embodiment, per step  the cloud backend  accesses the clustered data of the binary storage, the structured storage, or a combination thereof. Per steps  and , the models identifying the data are retrieved from analytics  by the model selector . The models apply overall structure to the binary , to the structured data , or a combination thereof. The models also identify how the data is related to producing an answer to the query.","In one embodiment, per step  the clustered data is updated by the closure generator , based on the retrieved models and the response is sent to the front-end  per step .","In one embodiment, per step  the transmission module  synchronizes the master data content associated with the query response with the data locally stored on UE . In step , the device provider  confirms the synchronization using the context models  of UE .","In one embodiment, per step  the context model  releases the model data of the application  to the contextual search platform , wherein the contextual search platform  binds the models with the contextual data  received from cloud front-end  as response to the query.","In one embodiment, before providing the response to application , the contextual search platform  confirms disintegration of the data from contextual components of the cloud . In one embodiment, in series of steps , , , , and  the contextual search platform  accesses the contextual models of cloud  and retrieves one or more reflective and granular representation of the models. Then contextual data is released. The granular models can be applied independently and therefore enables the UE  to apply the models on the received response without having to communicate with the cloud .","In one embodiment, per step  the retrieved granular context models are applied to the contextual data  and in step  and  the models and the data are synchronized across the UE  and cloud .","In one embodiment, if the synchronization process shows missing data or information, per steps  and  the contextual search platform  accesses the structured storage  and retrieves data. Upon receiving the data, per step , , , the contextual search platform  synchronizes the content of UE  with the received data of step  and confirms the synchronization. Per steps  the application  is notified by the transmission module  of the response to search request  being ready. Per step , the application  retrieves the response form the device provider  and presents the response to the user of UE .",{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 4B","b":["419","447","400","471","203","207","411","413","421","201","473","103","475"]},"In one embodiment, at every step of the search process, the contextual search platform  checks whether the data needs to be transformed. A transformation is performed when, for example, a model, an algorithm, or a combination thereof associated with the data exists in storage , in information spaces -, or a combination thereof. The reflective nature of computation closures in computation spaces -provides reflective transformation of query responses provided by the contextual search platform .","In one embodiment, the data transformation can be categorized into three groups as Extraction (E), Transformation (T), and Loading (L). Steps , , and  represent various stages of extraction, transformation and loading of the response data. The clustered data, when necessary, is updated with appropriate serialized parts of business context provided by application .","In one embodiment, per step , updates to the models are applied. For example, if a user of UE  downloads a newer version of application  with updated models, the updates are applied to models in storage , in information spaces, -, or a combination thereof, by the contextual search platform . The consolidated updates may be propagated from the cloud  to UE  through updating or fetching the contextual data.","It is noted that the cloud environment discussed here as an environment of distributed information and computation is exemplary and the embodiments discussed above can be implemented on any types of distributed information and computation platforms.","In one embodiment, when a user is searching for traffic status in a M miles stretch along a highway H, the embodiments discussed collects the data just along the highway instead of generating multiple bounding boxes and then aggregating them.","In one embodiment, if there are multiple data requests on the same route (e.g. highway H) for traffic status within or around the same M miles stretch, other clients can use the pre-computed and serialized results from the first client's query. In one embodiment, as described in , the query generator  caches at least a portion of at least one query, the one or more algorithms, the result data, or a combination thereof in storage . Additionally, the query processing module  while processing the subsequent queries from other UEs -based, at least in part, on the cached data.","It is noted that, the results from previous queries can be reused because the data is represented based on models in the backend environment. In the above environment, if a new query that is based on a certain model is received and the results have been already computed and cached for that specific model query, then the query processing module  can provide the cached results to the new query.","In one embodiment, for the contextual search platform to determine for how long the pre-computed results should be cached and when they can be discarded, various factors can be considered such as, for example, capacity, performance, and power consumption. The analysis of these factors defined for the cached data, can provide insights into whether the data should be saved or discarded.","It is noted that the contextual models can be represented in various formats such as, for example, RDF format including the granularity of computations and data but common denominator will be the least meaningful information set. Important thing about models is the granularity and denomination of models. For example, a traffic-related model may consist of current location of traffic accidents. On the other hand, the binary storage may contain images of the traffic to be tied to the model. Furthermore, the data can be merged by means of geo-tagging mechanisms. In the same manner, the UE  may have a simple picture related to the traffic (e.g., the driver using UE  may capture a photo by their mobile phone and attach GPS coordinates to the image and share it on the cloud . The image provided by the UE  may also be merged into the response data.",{"@attributes":{"id":"p-0095","num":"0094"},"figref":"FIG. 5","b":["107","107","503","107","107"],"i":["a","i","a","i "]},"In one embodiment, UEs , , and belong to the same user and in combination provide a personal cloud  for the user. A UE or may include data logs and respectively, as part of their storage , and . In this embodiment, UE does not include a data log. Furthermore, a UE -may include a collection of applications -which may include trusted application such as, for example, a navigation application that functions in accordance with the contextual search platform .","In one embodiment, each user has a personal profile stronghold (PPS) that can be accessed by the UE , , or as a website via a URL, by a Uniform Resource Identifier (URI), or a combination thereof via PPS endpoints , , or . The PPS allows the user to select their trusted applications to be included in applications -, configure the trusted applications, visualize data collected by the trusted applications, etc.","In one embodiment, a user may set a default as to how they desire to be seen by third party tracking sites, etc. For example, a user may choose to be anonymous (completely invisible to the entities external to the personal cloud ), pseudo anonymous (anonymous to any entities outside their current session), or fully disclosed (visible to all entities). An anonymous user will be seen as a different person by other entities with each web hit. However, a pseudo anonymous user will be seen as the same person within a session, but not between different sessions. For example, after closing a browser screen and starting a new session other entities are not able to recognize the user as the same user from previous session.","In one embodiment, the applications  may include a personal data collector application to collect data from communications between UEs -, between UEs -and cloud , or a combination thereof.","In one embodiment, each application  can access a data log , extract relevant information and write the extracted information into a local storage unit, an information space -, or a combination thereof. Furthermore, the computations associated with personalization process and creation of personal cloud  can be decomposed into their elemental computation closures in computation spaces -of clouds -","In one embodiment, the stored information on UEs , , and are synchronized with each other and with computation clouds -as shown by arrows . The synchronization enables the user to run their processes on clouds -whenever resources on UEs -are insufficient for the personal cloud  to perform the required processes.",{"@attributes":{"id":"p-0102","num":"0101"},"figref":["FIGS. 6A-6B","FIG. 6A","FIG. 6A"],"b":["601","111","107","107","601","649","607","107","107","605","605","609","649","5","607","649","3","4","601","605","605","107","1","107","2","3","4","107","107","613","613","111","615","615","613","613","617","617","601"],"i":["a ","b ","a ","b ","a ","b","a ","b ","a ","b ","a ","b ","a ","b ","a","e ","a","b "]},"In one embodiment, the backend device  may be equipped with a closure recycling and marshaling component  that monitors and manages any access to the computation closures store . In other embodiments the closure recycling and marshaling (i.e. standardization for uniform use) may be a function of the contextual search platform .","In one embodiment, the computation closures within environments , and the computation closures store  may be composed based on anonymous function objects and automatically created by a compiling system using methods for generating anonymous function objects such as lambda expressions.",{"@attributes":{"id":"p-0105","num":"0104"},"figref":["FIG. 6B","FIG. 6A","FIG. 1","FIG. 2","FIG. 3"],"b":["613","613","613","623","107","107","623","103","1","623","649","623","649","641"]},"In another embodiment, the computation closure environment  has a developer experience module  that provides various tools for a developer for manipulating services offered by the UE . The tools may include standardized and\/or abstract data types and services allowing the developers to chain processes together across development platforms. In one embodiment, the developer experience module  provides cross platform support for abstract data types and services under the supervision of a contextual search platform  as discussed in . The agent Agent retrieves the computation closures required by the developer experience module  from the computation closures store  and stores the newly generated computation closures by the developer experience module  into the computation closures store  for distribution purposes per arrow .","In yet another embodiment, the computation closure environment  has a scalable computing module  that provides an abstract wrapper (i.e. monadic wrapper) for the transmitting closures . This abstraction provides computation compatibility between the closure sets  and the UE . The abstract wrapper may provide scheduling, memory management, system calls and other services for various processes associated with the closures . These services are provided under the supervision of the contextual search platform  as discussed in . The agent Agent retrieves the computation closures required by the scalable computing module  from the computation closures store  and stores the newly generated computation closures by the scalable computing module  into the computation closures store  for distribution purposes per arrow . In one embodiment, the backend environment  may access the computation closures store  and exchange\/transmit one or more computer closures  between the computation closures store  and the backend computation closures store .",{"@attributes":{"id":"p-0108","num":"0107"},"figref":["FIGS. 7A-7B","FIG. 7A","FIG. 7A"],"b":["701","701","703","703","705","705","703","703"],"i":["a","d","a","c ","a","d"]},"In one embodiment, connectors may contain information about parameters such as capabilities, functional flows, distribution maps, links between closures and architectural levels, etc. Arrows connecting closures to connectors and connectors to next closures show the functional flow adopted based on the parameters. As seen in , the closures have been distributed from component  to component  via communication between connector and connector . The computation branch of component  includes closures -communicating via connectors and , while branches  and  communicate via connectors and . Similarly, a third branch  has been formed of closures -being executed at component  and connected by connectors and , while the branch communicates with other branches via connector . The final results from closure execution of the three branches , , and  are aggregated () by the search nodes , by applications -, or a combination thereof, and forwarded to the requesting device.","In one embodiment, the initial branch  may be in a UE -, the second branch  in a component of the infrastructure -, and the third branch in another component of the same infrastructure, a different infrastructure, in a cloud, or a combination thereof.",{"@attributes":{"id":"p-0111","num":"0110"},"figref":["FIG. 7B","FIG. 7B"],"b":["731","731","741","741","735","735","733","733"],"i":["a","d","a","c ","a","d"]},"In one embodiment, connectors may contain information about parameters such as capabilities, functional flow specifications, distribution maps, links between closures and architectural levels, etc. Arrows connecting closures to connectors and connectors to next closures show the functional flow adopted based on the parameters. For example, star signs -, -, and -may represent capability parameters associated with each closure -, -, and -respectively. Additionally, blocks -, -, -, and -may represent cost values. For example, the cost value may show the cost for binding closure to closure and directs closure to branch , via connector , as the next closure to be executed after closure . The closures may be initially assigned with priority levels, so that less important closures can be omitted if necessary. Similarly, cost values and direct closures and in branch  via connectors and . In a higher level of hierarchy, the cost value directs closures -to component  and similarly the cost value directs closures -to component . Additionally in branch , connectors -and cost values and direct closures -down the path of branch . Similarly, in branch , connectors -and cost values and direct closures -down the path of branch . The final results from closure execution of the three branches , , and  are aggregated (shown by arrow ) and forwarded to the requesting device.","The processes described herein for providing search with contextual processing may be advantageously implemented via software, hardware, firmware or a combination of software and\/or firmware and\/or hardware. For example, the processes described herein, may be advantageously implemented via processor(s), Digital Signal Processing (DSP) chip, an Application Specific Integrated Circuit (ASIC), Field Programmable Gate Arrays (FPGAs), etc. Such exemplary hardware for performing the described functions is detailed below.",{"@attributes":{"id":"p-0114","num":"0113"},"figref":["FIG. 8","FIG. 8"],"b":["800","800","800","800","810","800","800"]},"A bus  includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors  for processing information are coupled with the bus .","A processor (or multiple processors)  performs a set of operations on information as specified by computer program code related to providing search with contextual processing. The computer program code is a set of instructions or statements providing instructions for the operation of the processor and\/or the computer system to perform specified functions. The code, for example, may be written in a computer programming language that is compiled into a native instruction set of the processor. The code may also be written directly using the native instruction set (e.g., machine language). The set of operations include bringing information in from the bus  and placing information on the bus . The set of operations also typically include comparing two or more units of information, shifting positions of units of information, and combining two or more units of information, such as by addition or multiplication or logical operations like OR, exclusive OR (XOR), and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions, such as an operation code of one or more digits. A sequence of operations to be executed by the processor , such as a sequence of operation codes, constitute processor instructions, also called computer system instructions or, simply, computer instructions. Processors may be implemented as mechanical, electrical, magnetic, optical, chemical or quantum components, among others, alone or in combination.","Computer system  also includes a memory  coupled to bus . The memory , such as a random access memory (RAM) or any other dynamic storage device, stores information including processor instructions for providing search with contextual processing. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory  is also used by the processor  to store temporary values during execution of processor instructions. The computer system  also includes a read only memory (ROM)  or any other static storage device coupled to the bus  for storing static information, including instructions, that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus  is a non-volatile (persistent) storage device , such as a magnetic disk, optical disk or flash card, for storing information, including instructions, that persists even when the computer system  is turned off or otherwise loses power.","Information, including instructions for providing search with contextual processing, is provided to the bus  for use by the processor from an external input device , such as a keyboard containing alphanumeric keys operated by a human user, a microphone, an Infrared (IR) remote control, a joystick, a game pad, a stylus pen, a touch screen, or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus , used primarily for interacting with humans, include a display device , such as a cathode ray tube (CRT), a liquid crystal display (LCD), a light emitting diode (LED) display, an organic LED (OLED) display, a plasma screen, or a printer for presenting text or images, and a pointing device , such as a mouse, a trackball, cursor direction keys, or a motion sensor, for controlling a position of a small cursor image presented on the display  and issuing commands associated with graphical elements presented on the display . In some embodiments, for example, in embodiments in which the computer system  performs all functions automatically without human input, one or more of external input device , display device  and pointing device  is omitted.","In the illustrated embodiment, special purpose hardware, such as an application specific integrated circuit (ASIC) , is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor  quickly enough for special purposes. Examples of ASICs include graphics accelerator cards for generating images for display , cryptographic boards for encrypting and decrypting messages sent over a network, speech recognition, and interfaces to special external devices, such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.","Computer system  also includes one or more instances of a communications interface  coupled to bus . Communication interface  provides a one-way or two-way communication coupling to a variety of external devices that operate with their own processors, such as printers, scanners and external disks. In general the coupling is with a network link  that is connected to a local network  to which a variety of external devices with their own processors are connected. For example, communication interface  may be a parallel port or a serial port or a universal serial bus (USB) port on a personal computer. In some embodiments, communications interface  is an integrated services digital network (ISDN) card or a digital subscriber line (DSL) card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments, a communication interface  is a cable modem that converts signals on bus  into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example, communications interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN, such as Ethernet. Wireless links may also be implemented. For wireless links, the communications interface  sends or receives or both sends and receives electrical, acoustic or electromagnetic signals, including infrared and optical signals, that carry information streams, such as digital data. For example, in wireless handheld devices, such as mobile telephones like cell phones, the communications interface  includes a radio band electromagnetic transmitter and receiver called a radio transceiver. In certain embodiments, the communications interface  enables connection to the communication network  for providing search with contextual processing to the UEs -","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing information to processor , including instructions for execution. Such a medium may take many forms, including, but not limited to computer-readable storage medium (e.g., non-volatile media, volatile media), and transmission media. Non-transitory media, such as non-volatile media, include, for example, optical or magnetic disks, such as storage device . Volatile media include, for example, dynamic memory . Transmission media include, for example, twisted pair cables, coaxial cables, copper wire, fiber optic cables, and carrier waves that travel through space without wires or cables, such as acoustic waves and electromagnetic waves, including radio, optical and infrared waves. Signals include man-made transient variations in amplitude, frequency, phase, polarization or other physical properties transmitted through the transmission media. Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, any other magnetic medium, a CD-ROM, CDRW, DVD, any other optical medium, punch cards, paper tape, optical mark sheets, any other physical medium with patterns of holes or other optically recognizable indicia, a RAM, a PROM, an EPROM, a FLASH-EPROM, an EEPROM, a flash memory, any other memory chip or cartridge, a carrier wave, or any other medium from which a computer can read. The term computer-readable storage medium is used herein to refer to any computer-readable medium except transmission media.","Logic encoded in one or more tangible media includes one or both of processor instructions on a computer-readable storage media and special purpose hardware, such as ASIC .","Network link  typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example, network link  may provide a connection through local network  to a host computer  or to equipment  operated by an Internet Service Provider (ISP). ISP equipment  in turn provides data communication services through the public, world-wide packet-switching communication network of networks now commonly referred to as the Internet .","A computer called a server host  connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example, server host  hosts a process that provides information representing video data for presentation at display . It is contemplated that the components of system  can be deployed in various configurations within other computer systems, e.g., host  and server .","At least some embodiments of the invention are related to the use of computer system  for implementing some or all of the techniques described herein. According to one embodiment of the invention, those techniques are performed by computer system  in response to processor  executing one or more sequences of one or more processor instructions contained in memory . Such instructions, also called computer instructions, software and program code, may be read into memory  from another computer-readable medium such as storage device  or network link . Execution of the sequences of instructions contained in memory  causes processor  to perform one or more of the method steps described herein. In alternative embodiments, hardware, such as ASIC , may be used in place of or in combination with software to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware and software, unless otherwise explicitly stated herein.","The signals transmitted over network link  and other networks through communications interface , carry information to and from computer system . Computer system  can send and receive information, including program code, through the networks ,  among others, through network link  and communications interface . In an example using the Internet , a server host  transmits program code for a particular application, requested by a message sent from computer , through Internet , ISP equipment , local network  and communications interface . The received code may be executed by processor  as it is received, or may be stored in memory  or in storage device  or any other non-volatile storage for later execution, or both. In this manner, computer system  may obtain application program code in the form of signals on a carrier wave.","Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor  for execution. For example, instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system  receives the instructions and data on a telephone line and uses an infra-red transmitter to convert the instructions and data to a signal on an infra-red carrier wave serving as the network link . An infrared detector serving as communications interface  receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus  carries the information to memory  from which processor  retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory  may optionally be stored on storage device , either before or after execution by the processor .",{"@attributes":{"id":"p-0128","num":"0127"},"figref":["FIG. 9","FIG. 8"],"b":["900","900","900","900","900","900"]},"In one embodiment, the chip set or chip  includes a communication mechanism such as a bus  for passing information among the components of the chip set . A processor  has connectivity to the bus  to execute instructions and process information stored in, for example, a memory . The processor  may include one or more processing cores with each core configured to perform independently. A multi-core processor enables multiprocessing within a single physical package. Examples of a multi-core processor include two, four, eight, or greater numbers of processing cores. Alternatively or in addition, the processor  may include one or more microprocessors configured in tandem via the bus  to enable independent execution of instructions, pipelining, and multithreading. The processor  may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors (DSP) , or one or more application-specific integrated circuits (ASIC) . A DSP  typically is configured to process real-world signals (e.g., sound) in real time independently of the processor . Similarly, an ASIC  can be configured to performed specialized functions not easily performed by a more general purpose processor. Other specialized components to aid in performing the inventive functions described herein may include one or more field programmable gate arrays (FPGA), one or more controllers, or one or more other special-purpose computer chips.","In one embodiment, the chip set or chip  includes merely one or more processors and some software and\/or firmware supporting and\/or relating to and\/or for the one or more processors.","The processor  and accompanying components have connectivity to the memory  via the bus . The memory  includes both dynamic memory (e.g., RAM, magnetic disk, writable optical disk, etc.) and static memory (e.g., ROM, CD-ROM, etc.) for storing executable instructions that when executed perform the inventive steps described herein to provide search with contextual processing. The memory  also stores the data associated with or generated by the execution of the inventive steps.",{"@attributes":{"id":"p-0132","num":"0131"},"figref":["FIG. 10","FIG. 1"],"b":"1001"},"Pertinent internal components of the telephone include a Main Control Unit (MCU) , a Digital Signal Processor (DSP) , and a receiver\/transmitter unit including a microphone gain control unit and a speaker gain control unit. A main display unit  provides a display to the user in support of various applications and mobile terminal functions that perform or support the steps of providing search with contextual processing. The display  includes display circuitry configured to display at least a portion of a user interface of the mobile terminal (e.g., mobile telephone). Additionally, the display  and display circuitry are configured to facilitate user control of at least some functions of the mobile terminal. An audio function circuitry  includes a microphone  and microphone amplifier that amplifies the speech signal output from the microphone . The amplified speech signal output from the microphone  is fed to a coder\/decoder (CODEC) .","A radio section  amplifies power and converts frequency in order to communicate with a base station, which is included in a mobile communication system, via antenna . The power amplifier (PA)  and the transmitter\/modulation circuitry are operationally responsive to the MCU , with an output from the PA  coupled to the duplexer  or circulator or antenna switch, as known in the art. The PA  also couples to a battery interface and power control unit .","In use, a user of mobile terminal  speaks into the microphone  and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter (ADC) . The control unit  routes the digital signal into the DSP  for processing therein, such as speech encoding, channel encoding, encrypting, and interleaving. In one embodiment, the processed voice signals are encoded, by units not separately shown, using a cellular transmission protocol such as enhanced data rates for global evolution (EDGE), general packet radio service (GPRS), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., microwave access (WiMAX), Long Term Evolution (LTE) networks, code division multiple access (CDMA), wideband code division multiple access (WCDMA), wireless fidelity (WiFi), satellite, and the like, or any combination thereof.","The encoded signals are then routed to an equalizer  for compensation of any frequency-dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream, the modulator  combines the signal with a RF signal generated in the RF interface . The modulator  generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission, an up-converter  combines the sine wave output from the modulator  with another sine wave generated by a synthesizer  to achieve the desired frequency of transmission. The signal is then sent through a PA  to increase the signal to an appropriate power level. In practical systems, the PA  acts as a variable gain amplifier whose gain is controlled by the DSP  from information received from a network base station. The signal is then filtered within the duplexer  and optionally sent to an antenna coupler  to match impedances to provide maximum power transfer. Finally, the signal is transmitted via antenna  to a local base station. An automatic gain control (AGC) can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone, any other mobile phone or a land-line connected to a Public Switched Telephone Network (PSTN), or other telephony networks.","Voice signals transmitted to the mobile terminal  are received via antenna  and immediately amplified by a low noise amplifier (LNA) . A down-converter  lowers the carrier frequency while the demodulator  strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer  and is processed by the DSP . A Digital to Analog Converter (DAC)  converts the signal and the resulting output is transmitted to the user through the speaker , all under control of a Main Control Unit (MCU)  which can be implemented as a Central Processing Unit (CPU).","The MCU  receives various signals including input signals from the keyboard . The keyboard  and\/or the MCU  in combination with other user input components (e.g., the microphone ) comprise a user interface circuitry for managing user input. The MCU  runs a user interface software to facilitate user control of at least some functions of the mobile terminal  to provide search with contextual processing. The MCU  also delivers a display command and a switch command to the display  and to the speech output switching controller, respectively. Further, the MCU  exchanges information with the DSP  and can access an optionally incorporated SIM card  and a memory . In addition, the MCU  executes various control functions required of the terminal. The DSP  may, depending upon the implementation, perform any of a variety of conventional digital processing functions on the voice signals. Additionally, DSP  determines the background noise level of the local environment from the signals detected by microphone  and sets the gain of microphone  to a level selected to compensate for the natural tendency of the user of the mobile terminal .","The CODEC  includes the ADC  and DAC . The memory  stores various data including call incoming tone data and is capable of storing other data including music data received via, e.g., the global Internet. The software module could reside in RAM memory, flash memory, registers, or any other form of writable storage medium known in the art. The memory device  may be, but not limited to, a single memory, CD, DVD, ROM, RAM, EEPROM, optical storage, magnetic disk storage, flash memory storage, or any other non-volatile storage medium capable of storing digital data.","An optionally incorporated SIM card  carries, for instance, important information, such as the cellular phone number, the carrier supplying service, subscription details, and security information. The SIM card  serves primarily to identify the mobile terminal  on a radio network. The card  also contains a memory for storing a personal telephone number registry, text messages, and user specific mobile terminal settings.","While the invention has been described in connection with a number of embodiments and implementations, the invention is not so limited but covers various obvious modifications and equivalent arrangements, which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims, it is contemplated that these features can be arranged in any combination and order."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The embodiments of the invention are illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIGS. 4A-4B"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIGS. 6A-6B"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 7A-7B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
