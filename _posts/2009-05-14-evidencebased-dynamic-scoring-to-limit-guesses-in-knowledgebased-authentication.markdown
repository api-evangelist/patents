---
title: Evidence-based dynamic scoring to limit guesses in knowledge-based authentication
abstract: Techniques to provide evidence-based dynamic scoring to limit guesses in knowledge based authentication are disclosed herein. In some aspects, an authenticator may receive an input from a user in response to a presentation of a personal question that enables user access to a restricted resource. The authenticator may determine that the input is not equivalent to a stored value, and thus is an incorrect input. The authenticator may then determine whether the input is similar to a previous input received from the user. A score may be assigned to the input. When the input is determined to be similar to the previous input, the score may be reduced. Another request for an input may be transmitted by the authenticator when a sum of the score and any previous scores of the session is less than a threshold.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09124431&OS=09124431&RS=09124431
owner: Microsoft Technology Licensing, LLC
number: 09124431
owner_city: Redmond
owner_country: US
publication_date: 20090514
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION","CONCLUSION"],"p":["People use passwords and other personal authentication inputs frequently when accessing resources such as accounts, computers, and so forth. For example, a person may use a username, a password, and\/or a personal identification number (PIN) to gain access to various digital accounts such as a bank account, an email account, and other personal information. Some entities use personal questions to verify an identity of a person requesting accesses to a restricted resource in addition to (or in lieu of) usernames\/passwords. For example, a familiar personal question may ask for a maiden name of the requester's mother. In some instances, personal questions are used to recover a forgotten password.","Some people advise use of unique passwords for important accounts. A cautious person may use many unique combinations of usernames\/passwords to gain access to an array of resources. This may limit a potential unauthorized access to other resources if the person's username and password for a given resource become known (e.g., a security breach by hackers, etc.) However, this imposes a difficult task for the person to remember and manage their passwords, secret answers, and so forth.","In addition, many resources impose unique personal questions which require the person to enter (and remember) personal question responses. Unfortunately, some personal questions may be ambiguous and\/or and not direct the person to enter the exact personal question response upon presentation of the personal question.","Often, a guess limit is imposed by a resource when the person repeatedly enters an incorrect password or personal question response. For example, after five incorrect attempts, a resource may direct the person to an alternative method to gain access to the restricted resource, lock the resource for a predetermined amount of time, or take other action to limit improper or unauthorized access to the resource. In some instances, a person may reach a guess limit despite knowing the requested information, such as when the person repeatedly makes data entry mistakes or for other reasons, which may inconvenience the person, waste time, and impose an expense to pursue other resource access alternatives (e.g., calling a help desk).","Entities that control or design resources attempt to make it difficult for unauthorized users to gain access to their resources. The entities may take approaches to making it difficult to guess a person's username, password, PIN, or personal question response. For example, entities may use multiple personal questions when verifying the identity of a person. In this way, it would be difficult for an unauthorized person to correctly guess the correct response to multiple personal questions. However, entities must balance employing time-consuming and extensive security processes with allowing authorized people to have access to the resources.","Techniques to provide evidence-based dynamic scoring to limit guesses in knowledge based authentication are disclosed herein. In some aspects, an authenticator may receive an input from a user in response to a presentation of a personal question that enables a user to access a restricted resource. The authenticator may determine that the input is not equivalent to a stored value, and thus is an incorrect input. The authenticator may then determine whether the input is similar to a previous input received from the user. A score may be assigned to the input. When the input is determined to be similar to the previous input, the score may be reduced. Another request for an input may be transmitted by the authenticator when a sum of the score and any previous scores of the session is less than a threshold.","In another aspect, the authenticator may receive a new answer to a personal question. The authenticator may analyze a collection of received answers to the personal question to create a distribution of the received answers. Next, the authenticator may compare the new answer to the distribution of received answers. Finally, the authenticator may designate the new answer as a popular answer when an occurrence of the new answer in the distribution of received answers exceeds a popularity threshold. In some aspects, the authenticator may reject popular answers and request that a user enter a more specific answer. In further aspects, the authenticator may discontinue use of the personal question that generates the popular answer.","Overview","As discussed above, people typically have to input responses (answers) to authentication requests to gain access to a restricted resource. One way to make authentication requests more secure against unauthorized use, and yet more reliable in granting access to an authorized person, is to dynamically adjust scoring of wrong responses based on the type of response that is entered by the person. Thus, certain responses may be penalized more harshly when received in response to an authorization request, and thus reach a threshold faster, than other answers.","In some embodiments, answers may be assigned a score based on the popularity of the answer. The score may be summed after each answer and be periodically compared to the threshold, which may eventually trigger additional security to protect unauthorized access of the requested resource.","When the response is similar (e.g., lexicon or semantic variation, etc.) to an input (the correct answer, a previous response, etc.), then the response may receive a reduced score, which in effect would increase the margin between a summed score and the threshold as compared to a receipt of a response that is not similar to an entry.","In addition, answers to personal questions may be analyzed to determine whether an answer population or distribution indicates that the answer would be relatively easy to guess, and thus less secure than alternative answers. Similarly, answer distribution may be analyzed to selectively remove questions that do not result in selection of difficult-to-guess answers (i.e., favorite baseball team, favorite color, etc.).","The processes and systems described herein may be implemented in a number of ways. Example implementations are provided below with reference to the following figures.","Illustrative Environment",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":["100","100","102","102","104"]},"The authenticator  may be any computing device capable of receiving an input from the users , verifying the input against one or more stored instances of user information (text, hashes, etc.), and permitting the user access to a resource, either on the authentication device  or separate from the authentication device (e.g., residing a second computing device, etc.). For example, the authenticator  may be configured as one or more servers that are accessible via a network (e.g., the Internet). The authenticator  may also reside on a personal computer, such as a login prompt to gain access to an application, operating system (OS), or the like. Other examples of implementations of the authenticator  may include an electronic safe, a handheld computing device (mobile phone, voicemail server, video game console, music player, etc.), and so forth.","In some embodiments, the users  may communicate with the authenticator  via computing devices  (or simply \u201cclients\u201d). A non-exhaustive list of possible clients  may include a personal digital assistant (), a personal computer (), a mobile telephone (), and a music player (). For example, the user  may communicate with the authenticator  over the network  via the clients  such as by accessing a password protected website, a voicemail server, a download server, etc. In various embodiments, the users  may access the authenticator  directly without the use of one of the clients .","In embodiments where the authenticator  is accessed by one of the clients , information may be passed between the clients  and the authenticator . A user input  (response, answer, etc.) may be transmitted by the users  and received by the authenticator , such as in response to a personal authentication question presented to the user  by the authenticator . The authenticator  may then transmit a message  to the user  indicating a status of the input  as correct or incorrect, or the authenticator  may simply provide user access to the restricted resource. When the input  is an incorrect input in response to a request for personal authentication information, additional exchanges of data may occur between the users  and the authenticator  (via the clients  or by direct input). In particular, the authenticator  may provide the users  with additional attempts to provide the input  that is correct (i.e., matches a stored answer) by implementing evidence-based dynamic scoring to limit guesses in knowledge based authentication that does not terminate after receipt of a predetermined (static) number of incorrect instances of the inputs . When the authenticator is local (e.g., a personal computer, mobile phone, etc.), the user  may enter the input  directly into the authenticator (e.g., type, speak, etc.).","In various embodiments, the authenticator  may exchange communications with the users  to establish the correct input that is difficult to guess (strong), which is then stored by the authenticator  and used in comparisons with the input . The authenticator  may reject an input that is not strong, such that the input  exceeds a popularity threshold that may indicate the input  is relatively easy to guess or otherwise determine (e.g., systematic approach, etc.). Thus, the authenticator  may reject an attempt by the users  to establish an input  because the input  is too popular or for other reasons.","In some embodiments, the environment  may include a data provider , which may communicate with the authenticator  via data server(s) . In some embodiments, the data provider  may provide personal authentication questions during an authentication process with the users .","The data provider  may transmit data , such as personal question(s) and\/or answers to the personal question(s), to the authenticator  for a security strength analysis. In response, the authenticator  may transmit an analysis  of the data . The analysis  may include a recommendation to discontinue use of a personal authentication question that results in answers having a relatively low distribution of all received answers, a population of many popular answers, or other aspects that make the answers relatively easy to guess or ascertain by unauthorized users.","As illustrated, the authenticator  may be equipped with one or more processors  and memory . The memory  may include applications, modules, and\/or data. In some embodiments, the memory  may include an authentication manager , which may facilitate providing evidence-based dynamic scoring for personal knowledge based authentication. In some embodiments, the authentication manager  may also analyze personal knowledge based questions and\/or answers to determine a relative strength of questions\/answers such that they will provide relatively secure access to a resource.","The authentication manager  may include a number of modules such as a dynamic scoring module  and an authentication value strength module  (or simply \u201cstrength module\u201d). In some embodiments, the dynamic scoring module  may dynamically adjust a number of times the users  may submit the input  to a personal authentication question before additional security measures are enacted by the authenticator . In various embodiments, the authentication value strength module  may assess and report the relative strength of a personal authentication question and\/or answer. For example, the authentication value strength module  may reject a user selection of an answer as too popular and then prompt the authenticator  to request another answer from the user .","Illustrative Evidence-Based Dynamic Scoring",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 2","b":["200","200"]},"At  the authenticator  may receive an input from one of the users . The input (e.g., the input ) may be submitted by the user  in response to a request for personal information from a knowledge based authentication process. For example, the received input may be an answer to a personal question (e.g., \u201cWhat is your mother's maiden name?\u201d, \u201cWhat is the name of your high school?\u201d, etc.) and\/or a password, PIN, or other response to a knowledge based authentication question.","At , the authenticator  may determine if the received input is similar to a stored answer (correct answer) and\/or a previous input received from the user . For example, the user  may accidently hit an extra key when typing the input. In such an instance, the input may be a lexicon of a previous input (or stored answer) with the exception of the extra input (e.g., typed \u201csuperdaad\u201d instead of \u201csuperdad\u201d as password, etc.). In another example, the received input may be semantically similar to a previous input (or stored answer). For example, a personal knowledge question may ask \u201cWhere were you born?\u201d A received input of \u201cTwin Cities\u201d may be semantically similar to \u201cMinneapolis\u201d (previous input or stored answer).","At , the authenticator  may reduce a score associated with the input when the input is similar (e.g., lexicon, semantic, etc.) to a previous input and\/or stored answer. Each input may have an associated score that is ultimately used to restrict the user  from indefinitely providing inputs to the authenticator . The score may be reduced by a multiplier or a function to lessen a negative impact of an incorrect input when the incorrect input is similar to the previous input and\/or stored answer. For example, a score may be equal to 0.5, but reduced to 0.25 when the input is determined to be similar at the operation . In some embodiments, the score reduction may be based on an inverse function of the popularity of the score. Thus, a more popular input that is similar to another input may have a score reduced by a smaller amount that a score associated with an input that is less popular.","At , the authenticator  may provide another opportunity for the user  to submit an input to gain access to a resource when the score does not reach a threshold. For example, a threshold may be established that, when reached or exceeded, directs the authenticator  to enact additional security to protect unauthorized access to the restricted resource. The score may be summed (accumulated) after each incorrect input by the user. For example, the score may be 0.5 after a first input, 0.7 after a second input (+0.2) and 1.2 after a third input (+0.4). When the threshold is set to 1.0, the user  may not be provided with a fourth opportunity to provide the input to the personal knowledge based question and\/or additional security measures may be implemented before allowing the user  to gain access to the restricted resource.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIGS. 3 and 4","FIG. 3"],"b":"300"},"At , the authenticator  may receive an input (e.g., the input ) from one of the users . For example, the user  may submit the input in response to a presentation of a personal authentication question, username\/password request, or the like, which may ultimately enable the user  to obtain access to a restricted resource.","At , the authenticator  may determine whether the received input is a match with a stored (correct) answer (e.g., text, hash, etc.). The authenticator  may grant access to the restricted resource at  when the received input matches a stored answer. However, when the input is not a match with the stored answer, further processing may be warranted to enable the user  an additional opportunity to enter an input that matches the stored answer.","At , a score is assigned to the received input. The score may be a fixed score for each input or it may vary based on the input. For example, the score may always be assigned a valued of 0.25. In another example, the score may be based on the popularity of the input in comparison to other answers received by the authenticator , where an input that is popular may receive a higher score than an input that is unpopular.","At , the score may be compared to a threshold value. The threshold value may be a predetermined value that, when either reached or surpassed, triggers the authenticator  to deny access to the restricted resource at . In some embodiments, the threshold may be a fixed number (unchanging), however in various embodiments the threshold may be adjusted based on various factors that are described below.","At , the authenticator  may transmit another request for an input to the user  when the score does not reach (or exceed) the threshold at the operation . At , the authenticator  may receive the other input from the user . The received input from the operation  may then be compared to the stored answer at  (similar to the operation ). The authenticator  may grant access to the restricted resource at  when the received input matches the stored answer.","At , the authenticator  may determine whether the input is similar to a previous input. For example, the received input at  may be a same incorrect answer as received at , a lexicon string of characters (extra letter, missing letter, etc.), a semantically similar word (\u201cTwin Cities\u201d instead of \u201cMinneapolis\u201d), or similar by another metric.","At , the score is calculated as an incremental score without a reduction when no input similarity is determined at the operation . For example, the score may be computed as the score from the operation  in addition to a score assigned from the incorrect input determined at  (plus any other previous scores due to the loop of the process ) to generate a total score.","When the authenticator , via the dynamic scoring module , determines that the received input at  is similar to the input at  (or, in some embodiments, another previous input), then the authenticator  may calculate the score with a similarity reduction at . The similarity reduction may, in effect, act to increase a number of \u201ctries\u201d or times the user  can provide the input to gain access to the restricted resource, thus resulting in a \u201cdynamic scoring.\u201d In some embodiments, the similarity reduction may be a based on a grouping (bucket) where input ranges have fixed reduction values, reduction values that correlate to a popularity of the input, or by other relationships between the inputs that can be used to reduce the score.","In accordance with various embodiments, the score computed at either the operation  or the operation  may be compared to the threshold at the operation . In this way, the user may have additional opportunities to enter the input to gain access to the restricted resource. The user may be more likely to receive additional opportunities to submit an input when the user previously enters inputs that are determined to be similar at the operation , thus resulting in a reduced incremental score at the operation .",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 4","b":"400"},"At , the authenticator  may transmit a request for an input to one of the users . The input (e.g., a response to a personal authentication question, password, etc.) may enable the user to access a restricted resource when the input matches the stored answer. The authenticator  may receive the input at .","At , the authenticator  may determine whether the received input is a match with a stored (correct) answer (e.g., text, hash, etc.). The authenticator  may grant access to the restricted resource at  when the received input matches a stored answer. However, when the input is not a match with the stored answer, further processing may be warranted to enable the user  an additional opportunity to enter an input that matches the stored answer.","At , the authenticator  may determine an incremental score for the received input at  based on a popularity of the input. For example, an input that is relatively more popular may receive a higher score than an input that is relatively less popular. Popularity may be measured using historical data (previous inputs received by other users), by surveys, or by other sources.","In some embodiments, the score may be computed based on the percent of known answers received as the input (e.g., 30% of people provide this input, thus score is 0.3, etc.). In various embodiments, the incremental score for a range of scores may be assigned a single representative score (e.g., a grouped score, bucket score, etc.). For example, three groupings of scores may be used that correlate to the popularity of the input. Illustrative grouping values of 0.2, 0.35, and 0.5 may be used as group scores, such that each score may be assigned one of the grouping values (0.2, 0.35, 0.5). In an example, a score based on popularity of 0.11 may be assigned a grouping score of 0.2 while a score based on popularity of 0.38 may be assigned a grouping score of 0.35 (or in some instances 0.5 when values are rounded up). For purposes of discussion, the incremental score, whether a grouping score, pure popularity score, etc., will be referred to simply as the \u201cscore.\u201d","At , the authenticator  may determine whether the received input at  is a lexicon match to a stored value. In some embodiments, the stored value may be limited to previous inputs (via the operations  using a loop function). In various embodiments, the stored value may also include the stored answer, which is the correct answer necessary to grant access to the restricted resource at . A lexicon match may be determined using software algorithms that determine an edit distance. Further discussion of the lexicon match is provided in a discussion of ","At , the authenticator  may determine whether the received input at  is a semantic match to the stored value. A semantic match may be determined using comparison algorithms that compare data using lookup tables. For example, a semantic match may occur when the user  enters an input that is a synonym of a previous input, among other possible semantic matches. Further discussion of the semantic match is provided in a discussion of ","When either the lexicon match or the semantic match is positive (a match is made), then the authenticator  may assign a reduction value at . However, when both the lexicon match and the semantic match are false (no match), then the authenticator  may not assign a reduction value at . The reduction value may be a static number, vary based on the popularity of the received input at the operation , vary based on groupings (buckets) that each have a different reduction value, and so forth.","At , the authenticator , via the dynamic scoring module , may calculate the score and apply any reduction value from the operation . For example, a bucket score for an input may be assigned the score of 0.35. However, the received input at  (e.g., \u201csuperddad\u201d) may be a lexicon match of a previous input (e.g., \u201csuperdad\u201d). In this instance, a reduction value may be assigned, such as 25% or another value used to reduce the incremental score, such that the score 0.35 may be reduced to 0.0875 (0.35\u00d70.25=0.0875).","In some embodiments, the score that is reduced by the reduction value may be the lesser of two or more received scores, and not necessarily the determined incremental score from operation . For example, a first input may be assigned a score of 0.2 while a second input may be assigned a score of 0.5. When the second input is determined to be semantically similar (or a lexicon match) to the first input, a reduction value may be assigned at , which may then be applied to the lesser of the two scores (i.e. 0.2). In this way, it may not be advantageous for a user to provide a more popular input after providing a less popular input in order to receive additional opportunities at entering the input.","At , the score may be compared to a threshold value. The threshold value may be a predetermined value that, when either reached or surpassed, triggers the authenticator  to deny access to the restricted resource at . When the threshold is not either reached or exceeded (depending on the implementation), then the process  may continue at  where the authenticator  requests another input from the user .",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 4A","b":["426","412"]},"In some embodiments, a computer algorithm may compute an edit distance to determine whether a lexicon match exists based on evaluators ()-(). A non-exhaustive list of the evaluators may include an extra letter (), a missing letter (), a letter order (), a letter swap (), an inverted capitalization (), and other possible edit changes (). The evaluators may be used individually or in any combination to create a total edit distance. When the total edit distance is within a lexicon threshold, then the authenticator  may determine that a lexicon match exists at the operation . In an example, a first input of \u201cBrooklyn\u201d in comparison to a second input of \u201cBrooklyn, N.Y.\u201d may have an edit distance of three when using the evaluator of the extra letter (), which may be determined to be a lexicon match at the operation .","In some embodiments, the computed edit distance may be influence the size of the reduction in the incremental score received at . For example, a lower edit distance may result in a greater reduction in the incremental score at  because the input is closer to a previous input than when the edit distance is a larger value.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 4B","b":["428","414"]},"In some embodiments, an input may be determined to be semantically similar to another input and\/or the correct answer based on a term comparison (e.g., comparison of an input to another input, etc.). The term comparison may be made using one or more of the evaluators ()-(). A non-exhaustive list of the evaluators may include a thesaurus (), user survey data (), user history data (), search results\/queries (), and other databases ().","In an example, the term comparison using the thesaurus () may associate a first input as a synonym of a second input, and thus designate the input as a semantic match at the operation . In a second example, an input of a location (e.g., \u201cNew York\u201d) may be determined to be semantically similar to an input of another location that may be synonymous with the first inputted location (e.g., \u201cManhattan\u201d) via a database () of locations, which may result in a semantic match at the operation . In a third example, the search results\/queries () may be used to determine relationships between inputs based on terms two terms that are have a correlation based on search results and\/or search queries. For example, search results for an input that result in a predetermined percentage of results (hits) having the second term may result in a semantic match at the operation . In a final example, the first input of \u201cBrooklyn\u201d in comparison to the second input of \u201cBrooklyn, N.Y.\u201d may be determined to be a semantic match at the operation  because they identify the same location, which could again be verified by the database (). In such an instance, both a semantic match and lexicon match are possible.","Illustrative Authentication Strength Assessment","As discussed in the overview and with reference to  and the environment , the authenticator  may include an authentication value strength module  (or simply \u201cstrength module\u201d). An authentication value may be an authentication question and\/or an input in response to the authentication question, which may be analyzed to determine a strength (i.e., uniqueness).  provide processes to determine the strength of the authentication value using the authentication value strength module .  provides an illustrative login that may be implemented in conjunction with the processes described in .",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 5","b":["500","500","132"]},"At , the authenticator  may transmit a request for an answer to a new personal question, which may be used to enable the user  to gain access to a restricted resource, such as using one of the processes , , or  discussed above. At , the authenticator may receive an answer from the user  in response to the operation .","At , the authenticator  may determine the popularity of the answer in comparison to other users' answers (e.g., survey answers, actual answer stored in a database, etc.). At , the authenticator  may determine whether the received answer at  is within a threshold that determines that the answer is relatively difficult to guess (i.e., strong answer). In some embodiments, the threshold may be set at a percentage of the answers. For example, when the threshold is 10% and 11% of users have selected the received answer at the operation , the threshold would be surpassed and the authenticator  would request another answer at . For example, the authenticator  may request the user  to input a more specific answer (e.g., \u201cBronx\u201d instead of \u201cNew York\u201d, etc.). However, if the answer is within the threshold at , then the authenticator  may store the answer as a correct answer (input) at .",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 6","b":["600","600","132"]},"At , the authenticator  may transmit a question to one of the users  and receive an answer (i.e. the input ) at . The authenticator  may then evaluation the answer distribution to determine whether the answer distribution is large enough to continue use of the question at operation , which may be determined using a limit at .","When the answer distribution is too small (e.g., below a limit) at , the question may be discontinued at . At , a new question may be presented to the user. However, when the answer distribution is not too small (e.g., outside of a limit), then the authenticator  may store the answer as the correct answer (input) at .","In some embodiments, the data provider  may submit questions and\/or answers to the authenticator  via the data server(s)  for evaluation using the processes  and\/or . In this way, the data providers  may be able to offer restricted access to resources that is unlikely to be compromised by unauthorized users that exploit popular answers.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 7","b":["700","600","700","702","704","702","706","104","704","706","600","708","610","700","104","132","608"]},"Illustrative Computing System",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 8","FIG. 1","FIG. 8"],"b":["800","800","800"]},"In a very basic configuration, the authentication device  typically includes at least one processing unit  and system memory . Depending on the exact configuration and type of authentication device, the system memory  may be volatile (such as RAM), non-volatile (such as ROM, flash memory, etc.) or some combination of the two. The system memory  typically includes an operating system , one or more program modules , and may include program data . The operating system  includes a component-based framework  that supports components (including properties and events), objects, inheritance, polymorphism, reflection, and provides an object-oriented component-based application programming interface (API). The authentication device  is of a very basic configuration demarcated by a dashed line . Again, a terminal may have fewer components but will interact with a computing device that may have such a basic configuration.","The authentication device  may have additional features or functionality. For example, the authentication device  may also include additional data storage devices (removable and\/or non-removable). Such additional storage is illustrated in  by removable storage  and non-removable storage . Computer storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. The system memory , the removable storage , and the non-removable storage  are all examples of computer storage media. The authentication device  may also have input device(s)  (e.g., keyboard, etc.) and output device(s)  (e.g., display, etc.).","The authentication device  may also contain communication connections  that allow the device to communicate with other computing devices  (e.g., the data server(s) , etc.), such as over the network . The network(s)  may include wired networks as well as wireless networks. The communication connections  are one example of communication media. The communication media may typically be embodied by computer readable instructions, data structures, program modules, etc.","It is appreciated that the illustrated authentication device  is only one example of a suitable device and is not intended to suggest any limitation as to the scope of use or functionality of the various embodiments described. Other well-known computing devices, systems, environments and\/or configurations that may be suitable for use with the embodiments include, but are not limited to personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, game consoles, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and\/or the like. For example, some or all of the components of the authentication device  may be implemented in a cloud computing environment, such that resources and\/or services are made available via a computer network for selective use by client devices.",{"@attributes":{"id":"p-0081","num":"0080"},"figref":["FIG. 9","FIG. 8"],"b":["808","800","130","902","112","200","300","400","902"]},"The dynamic scoring module  may also include a similarity module  to determine whether an input is similar to a previous input, and in some embodiments, to the stored answer. The similarity module  may perform the lexicon match  using one or more of the evaluators ()-() and\/or the semantic match  using one or more of the evaluators ()-(). The dynamic scoring module  may then reduce an incremental score, which is ultimately compared to a threshold, which may enable the user  to enter another input to gain access to the restricted resource. The reduction may be based at least in part on an edit distance value.","The authentication value strength module  (or simply \u201cstrength module\u201d) may include an answer analyzer  and a question analyzer . The answer analyzer  may evaluate the answer distribution of answers as described in the process . The answer analyzer  may use one or more data sources, such as user history, survey data, etc., to determine whether an answer is too popular, and thus does not provide an acceptable selection as an answer to a knowledge based personal authentication questions used to allow a user to obtain access to a restricted resource.","In various embodiments, the question analyzer  may evaluate the answer distribution of answers to questions as described in the process . The question analyzer  may use one or more data sources, such as user history, survey data, etc., to determine whether a question leads to answers with a low answer distribution (e.g., popular answers), and thus does not generate answers that provide secure access to the requested resource.","Although the techniques have been described in language specific to structural features and\/or methodological acts, it is to be understood that the appended claims are not necessarily limited to the specific features or acts described. Rather, the specific features and acts are disclosed as exemplary forms of implementing such techniques."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The detailed description is described with reference to the accompanying figures. In the figures, the left-most digit(s) of a reference number identifies the figure in which the reference number first appears. The same reference numbers in different figures indicate similar or identical items.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 8","FIG. 1"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 9","FIG. 8"]}]},"DETDESC":[{},{}]}
