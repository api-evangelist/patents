---
title: Tenant management of a hosted multi-tenant application
abstract: A hosted multi-tenant application is provided that permits a tenant to self-manage aspects of the operation of the application. A tenant may be permitted to upgrade the multi-tenant application on-demand or according to a schedule, to place the multi-tenant application into a read-only mode of operation, to create a shadow copy of their unshared organization database, to merge changes to a shadow copy into a master version of the unshared organization database, to create and revert to snapshots of an unshared organization database, and to perform other functions. A computing architecture that utilizes site-wide server computers and scale groups may be utilized to implement this functionality.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09208188&OS=09208188&RS=09208188
owner: Microsoft Technology Licensing, LLC
number: 09208188
owner_city: Redmond
owner_country: US
publication_date: 20090217
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["A hosted application is a software application where the software resides on servers that are accessed through a wide-area network, such as the Internet, rather than more traditional on-premise software that is installed on a local server computer or on individual client computers. Hosted applications may also be known as Internet applications, application service providers (\u201cASPs\u201d), World Wide Web (\u201cWeb\u201d)-based applications, or on-line applications. Hosted applications are commonly utilized concurrently by multiple customers called \u201ctenants.\u201d Such applications are referred to herein as hosted multi-tenant applications.","As software is being more frequently offered as a service, such as through hosted multi-tenant applications for instance, customers are losing some of the flexibility that comes with on-premise software. For instance, when adopting a new version of on-premise software, customers often take actions such as training or testing with other integrated solutions. Even without a version upgrade, customers often have the need to make substantial changes to the software, such as importing a large amount of data, and would prefer to be able to practice these operations prior to executing them on production data. As a result, customers often create temporary \u201cproduction-like\u201d versions of their systems to accomplish these scenarios without affecting the day-to-day use of their production system. However, due to significant architectural limitations in current hosted applications, ASPs cannot typically provide this type of flexibility to the tenants of a hosted multi-tenant application.","It is with respect to these considerations and others that the disclosure made herein is provided.","Technologies are described herein for tenant management of a hosted multi-tenant application. Through the utilization of aspects presented herein, a hosted application can be provided in a manner that permits a tenant to self-manage aspects of the operation of the application. For instance, through an implementation of the embodiments presented herein, a tenant can upgrade the multi-tenant application on-demand or according to a schedule, place the hosted multi-tenant application into a read-only mode of operation, create and utilize a shadow copy of their tenant database, merge changes to a shadow copy into a master version of their tenant database, create and revert to snapshots of their database, and perform other functions.","According to one aspect presented herein, a hosted application is provided that supports concurrent use by multiple tenants. The hosted application may be a hosted business application, such as a customer relationship management (\u201cCRM\u201d) application, or another type of business application. The server computers (\u201cservers\u201d) utilized to provide the hosted application are organized into site-wide servers and scale groups. The site-wide server computers perform site-wide functions for the hosted application, including processing sign-in and sign-up requests, site-wide messaging, help functions, and domain name services (\u201cDNS\u201d) for mapping each tenant to an assigned scale group. The site-wide server computers may also provide facilities for site configuration, billing, customer support, and for performing other functions.","The scale groups represent logical groupings of servers. Each scale group includes a shared middle-tier and a database-tier for supporting tenants assigned thereto. When a new tenant is provisioned, the tenant is assigned to a scale group and a database server in the assigned scale group creates a private, unshared organization database for the tenant. An association between the tenant and the scale group is also created in a shared configuration database. When a request is received from a tenant to access the hosted application, the shared configuration database is consulted to locate the scale group hosting the private, unshared organization database for the tenant. Once the appropriate scale group has been located, the request is redirected to the middle-tier in the appropriate scale group for processing.","According to one embodiment presented herein, a tenant may be permitted to upgrade to a new version of the hosted multi-tenant application on-demand. An upgrade to the hosted application is first deployed to the site-wide server computers. Once the site-wide server computers have been upgraded, one or more upgraded scale groups are deployed. A notification may then be provided to tenants of the hosted multi-tenant application that an upgrade is available. If a request is received from a tenant to upgrade, the tenant's unshared organization database is placed into a read-only mode of operation. The tenant's unshared organization database is then migrated to an upgraded scale group. The unshared organization database is upgraded and enabled for use by the tenant at the upgraded scale group. For instance, the shared configuration database may be updated to reflect the tenant's new scale group.","According to other implementations, a tenant can also create and utilize a shadow copy of their tenant data, including their unshared organization database. The shadow copy is a new tenant within the CRM application that includes the tenant's unshared organization database. The shadow copy may be upgraded to a new version of the CRM application in the manner described above. Additionally, data is recorded indicating that the shadow copy was created from a \u201cmaster\u201d tenant so that changes to the shadow copy can later be merged into the tenant's original unshared organization database if desired.","According to other embodiments, a tenant can also place their unshared organization database into a read-only mode of operation. In the read-only mode of operation, no changes can be made to the database. In one embodiment, the read-only mode of operation is implemented by revoking privileges from user roles executing within the tenant, thereby restricting the ability of the user roles to modify the contents of the unshared organization database. According to other embodiments, other mechanisms are utilized to place the unshared organization database into a read-only mode of operation.","According to other embodiments, a tenant may also be permitted to create one or more snapshots of their unshared organization database. Functionality may also be provided for allowing the tenant to revert their unshared organization database to a previously created snapshot.","The above-described subject matter may also be implemented as a computer-controlled apparatus, a computer process, a computing system, or as an article of manufacture such as a computer-readable medium. These and various other features will be apparent from a reading of the following Detailed Description and a review of the associated drawings.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended that this Summary be used to limit the scope of the claimed subject matter. Furthermore, the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.","The following detailed description is directed to technologies for enabling tenant management of aspects of the operation of a hosted multi-tenant application. While the subject matter described herein is presented in the general context of program modules that execute in conjunction with the execution of an operating system and application programs on a computer system, those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally, program modules include routines, programs, components, data structures, and other types of structures that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the subject matter described herein may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers, and the like.","In the following detailed description, references are made to the accompanying drawings that form a part hereof, and which are shown by way of illustration specific embodiments or examples. Referring now to the drawings, in which like numerals represent like elements through the several figures, aspects of a computing system and methodology for providing tenant management of features within a hosted multi-tenant application program will be described. In particular,  is a network and software architecture diagram that shows one illustrative operating environment for the embodiments presented herein along with aspects of several software components presented herein.","As discussed briefly above, the illustrative computing system  shown in  provides a hosted multi-tenant application program. In the embodiments presented herein, the application program is a program for providing CRM functionality. CRM applications allow businesses to manage the relationships with their customers, including the capture, storage, and analysis of customer information. It should be appreciated, however, that any type of hosted application may be implemented utilizing the technologies presented herein, including other types of hosted business applications.","Through the use of the system  shown in , multiple organizations, referred to herein as \u201ctenants,\u201d may concurrently utilize the computing resources provided by the system . The illustrative computing system  shown in  includes a CRM server computer . The CRM server computer  executes a CRM application  and maintains one or more associated databases, described more fully herein. The CRM application  provides functionality for managing relationships with business customers, including the capture, storage, and analysis of customer information.","The CRM functionality provided by the CRM application  may be accessed through the use of a Web browser application  executing on a client computer, such as the CRM client computer . In this regard, the CRM application  includes a Web user interface (\u201cUI\u201d) module  for exposing a Web-compatible network interface. In this manner, the CRM client computer  can be utilized to access functionality provided by the CRM application  for creating and viewing customer information, for communicating with customers via the CRM application , and for performing other CRM-related functions. The CRM client computer  might also include a spreadsheet application .","According to embodiments presented herein, the CRM application  also includes a business object platform . The business object platform  is a software platform for executing software components that perform the actual business processing for the CRM application . The business object platform  operates in conjunction with the Web UI module  to make this functionality accessible through a Web interface. Aspects of the functionality provided by the CRM application  may also be accessed through a plug-in to a personal information manager (\u201cPIM\u201d) application . In one embodiment, a plug-in executing within the PIM application  communicates directly with the business object platform  to enable this functionality.","As shown in , the CRM application  operates in conjunction with a database server application , which also executes on the CRM server computer . The database server application  provides functionality for creating, maintaining, accessing, and updating one or more databases. According to embodiments, the database server application  comprises the SQL SERVER database server application from MICROSOFT CORPORATION of Redmond, Wash. It should be appreciated that any suitable database server application may be utilized in the manner described herein.","Through the use of the database server application , the CRM application  is operative to maintain several databases. In particular, the CRM application  maintains a shared configuration database  (also referred to herein as a \u201csite-wide configuration database\u201d). As will be described in greater detail herein, the CRM application  utilizes the shared configuration database  to store global system-level information and data that is shared by the tenants. For instance, according to embodiments, the shared configuration database  may be utilized to store information about tenants, such as their name and contact information, information about which tenant particular users are members of, and information mapping authentication data to a specific user. In one implementation presented herein, the shared configuration database  is also utilized to store data defining a scale group to which each tenant hosted by the CRM application  has been assigned. Additional details regarding the use of the data in this regard will be provided below.","The CRM application  also maintains the unshared organization databases A-N. The unshared organization databases A-N are utilized by the CRM application  to store private, unshared data for the tenants. Each unshared organization database A-N is associated with a particular tenant and its contents are inaccessible to the other tenants. According to aspects, each unshared organization database A-N is utilized to store private tenant data for the associated tenant. Each unshared organization database A-N may also be utilized to store customizations to the CRM application  made by the associated tenant including, but not limited to, customized entities, attributes, relationships, forms, views, code-level extensibility plug-ins, and any other type of customization to the CRM application . Additional details regarding the creation and use of the shared configuration database  and the unshared organization databases A-N will be provided below. It should be appreciated that other types of databases and database schema may be utilized to store the global system-level information and the tenant data according to embodiments.","Referring now to , another embodiment presented herein for providing a hosted multi-tenant application that utilizes per-tenant unshared private databases will be described. In this embodiment, a system  is provided wherein the servers that provide the CRM functionality described herein are organized into the scale groups A-N. The scale groups A-N are logical groupings of servers, each of which has one or more tenants assigned thereto.","In one implementation, each scale group A-N includes a shared middle-tier and a database-tier for supporting the tenants assigned to the scale group. The scale group Internet-facing servers  implement the middle-tier by executing the CRM application , while the scale group database servers  implement the database-tier by executing the database server application . One or more scale group utility servers  are also provided within each scale group A-N for performing utility functions, such as reporting services, load balancing, provisioning, configuration, statistics, and others. Each scale group may also include its own configuration database that is private to the scale group but shared amongst all of the tenants of the scale group. As will be described in greater detail below, the servers in each of the scale group A-N may be assigned to one or more roles for performing these functions.","When a new tenant is provisioned within the system , the tenant is assigned to one of the scale groups A-N. At this time, one of the scale group database servers  in the assigned scale group creates a private, unshared database  for the tenant. In this manner, the private, unshared database  for the new tenant is created and stored in the assigned scale group . An association, or mapping, between the tenant and the assigned scale group  is also created in the shared configuration database .","As shown in , the system  also includes one or more site-wide servers . In particular, one or more site-wide Internet-facing servers  are provided along with one or more site-wide utility servers . The site-wide Internet-facing servers  perform site-wide functions for the system , including processing sign-in and sign-up requests, site-wide messaging, help functions, and DNS functions for mapping each tenant to the appropriate scale group A-N. The site-wide utility servers  provide facilities for site configuration, billing, customer support, and others. As will also be discussed in greater detail below, the site-wide servers  may also be assigned to one or more roles for performing these functions.","As will be described in greater detail below, network client requests to access the hosted application are received at the site-wide Internet-facing servers . In response to receiving such requests, the shared configuration database  is consulted to locate the scale group A-N hosting the private, unshared database  for the tenant making the request. Once the appropriate scale group A-N has been located, the incoming request is redirected to the scale group Internet-facing servers  in the identified scale group A-N for processing.","Turning now to , additional details will be provided regarding the roles to which the site-wide server computers may be assigned. As shown in , the site-wide Internet-facing servers  may be assigned to a portal role A and\/or to a name role B. Server computers assigned to the portal role A are configured to provide the user interfaces (the \u201cportal\u201d) for the system  that are not tenant specific. For example, server computers assigned to the portal role A may be configured to provide sign-up and sign-in Web pages. Server computers assigned to the name role B are configured to provide DNS services. For instance, server computers assigned to the name role B may be configured to provide network addresses corresponding to sub-domains unique to each tenant. The definition of where tenant address records should point to comes from the configuration role C, described below. It should be appreciated that the site-wide Internet-facing servers  may be assigned to one or more of the roles shown in  or to other roles not illustrated or described herein.","As also shown in , the site-wide utility servers may be assigned to a configuration role C, an administration role D, and\/or a router role E. Servers assigned to the configuration role C are responsible for exposing configuration information from the shared configuration database  to other roles. For instance, servers assigned to the configuration role C may expose data regarding the available scale groups , data regarding the mapping of tenants to scale groups , and the resource limits for the scale groups . Other information may also be exposed.","Servers assigned to the administration role D are configured for performing administrative tasks for manipulating the system . For example, a server assigned to the administration role D may be configured to execute commands to create scale groups, move tenants between scale groups, and to provision tenants for testing, support, or monitoring purposes. Servers assigned to the router role E are configured to redirect certain actions to an appropriate scale group . For instance, a server assigned to the router role E may be configured to route a job to provision a new tenant, upgrade the data for a tenant, or to delete a tenant from the appropriate scale group . Other types of actions may be routed in a similar manner. It should be appreciated that the site-wide utility servers  may be assigned to one or more of the roles shown in  or to other roles not illustrated or described herein.","Referring now to , additional details will be provided regarding the roles to which the server computers in each of the scale groups  may be assigned. As shown in , the scale group Internet-facing servers  are assigned to the application role A. Servers assigned to this role are responsible for providing the actual application  that is used by the tenants. Servers assigned to the application role A may also be configured to assign long-running tasks to a server computer assigned to an asynchronous processing role B, described below. Server computers may also be assigned to an application programming interface (\u201cAPI\u201d) role E. The API role E allows its consumers to execute remote procedures through Web service APIs, thereby enabling rich clients and other integration applications to access features provided by the system .","As also shown in , the scale group utility servers  may be assigned to an asynchronous processing role B, the scale group configuration role C, and\/or the database role D. Servers assigned to the asynchronous processing role B are configured to off-load long running operations from the application role A. Some examples include provisioning a new tenant, upgrading tenant data, deleting a tenant, bulk data import to a tenant, and bulk data extraction. Servers assigned to the scale group configuration role C are responsible for maintaining configuration settings for the scale group. Examples include data identified the servers that have been assigned to a scale group and data identifying the physical server that a tenant's data resides on. Server computers assigned to the database role D are configured to maintain the unshared organization databases . It should be appreciated that the scale group Internet-facing servers  and the scale group utility servers  may be assigned to one or more of the roles shown in  or to other roles not illustrated or described herein.","It should be appreciated that, in one embodiment, each of the roles described above may be assigned to two or more computing systems. By assigning each role to two or more computers, redundancy can be achieved. Additionally, this architecture permits zero down time patching of the operating system, the application program, or other dependent programs. The roles and architecture described above also allow the system  to address numerous problems associated with previous architectures for hosted multi-tenant applications. For instance, using the roles discussed above, tenants can be provisioned on the system  by signing up through a server computer assigned to the portal role A. This triggers the router role E to decide on a target scale group  for the new tenant and to record this selection through the configuration role C and the scale group configuration role B. After this has been performed, the asynchronous processing role B will provision the tenant and initialize an unshared organization database  for the new tenant. Once the tenant has been provisioned, end users can sign on to the system  through the portal role A, where they will be redirected to the application role A at their assigned scale group  via the name role B.","The system  also permits the site-wide roles to be upgraded independently of any upgrade to the scale-group roles. In this regard, new site-wide facilities may be added that scale group roles will leverage, in which case the site-wide roles will be upgraded first and the scale group roles thereafter. It is possible, therefore, to operate the system  in this half-upgraded state indefinitely, while still permitting new tenants to be added. New scale groups would then generally be constructed with the new versions of the scale group roles. Provision requests that target the new scale groups  can take advantage of new functionality immediately. Tenants that require a data upgrade can be upgraded at any time during which they will experience an outage depending upon the nature of the upgrade. After the upgrade, the tenant can use the new functionality that required a data upgrade. Tenants also experience no service outage during system upgrades due to backward compatibility of newer versions of the software. Tenants will only experience an outage when their data is being upgraded to take advantage of new system features. Moreover, one tenant's outage does not affect any other tenant. It should be appreciated that a tenant may not experience an outage where data and code is upgraded that is not visible to the tenant. These types of upgrades can be accomplished completely online without any tenant downtime whatsoever.","Turning now to , additional details will be provided regarding the embodiments presented herein for enabling tenant management of various functions within a hosted multi-tenant application. In particular,  is a flow diagram showing a routine  that illustrates aspects of an illustrative process for permitting a tenant to manage the process of upgrading the CRM application  in the hosted multi-tenant system  in one implementation described herein.","It should be appreciated that the logical operations described herein with respect to  and the other FIGURES are implemented (1) as a sequence of computer implemented acts or program modules running on a computing system and\/or (2) as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance and other requirements of the computing system. Accordingly, the logical operations described herein are referred to variously as operations, structural devices, acts, or modules. These operations, structural devices, acts and modules may be implemented in software, in firmware, in special purpose digital logic, and any combination thereof. It should also be appreciated that more or fewer operations may be performed than shown in the FIGURES and described herein. These operations may also be performed in a different order than those described herein.","As discussed briefly above, the embodiments presented herein provide a mechanism by which a user of the hosted multi-tenant system  may upgrade the CRM application  according to a schedule or on-demand. The architecture of the hosted multi-tenant system  allows each of the tenants of the system to upgrade to a new version of the CRM application  at the time they desire to do so or upon a schedule of their choosing. In this manner, some tenants of the hosted multi-tenant system  may be utilizing a down level version of the CRM application  while other tenants may utilize an upgraded version. The routine  illustrates one mechanism for allowing a tenant of the hosted multi-tenant system  to upgrade the CRM application  and their tenant data on-demand.","The routine  begins at operation , where the site-wide roles A-E executing on the site-wide server computers  are upgraded to a new version. Once the site-wide roles A-E have been upgraded, the routine  proceeds to operation , where one or more new scale groups  are created having upgraded scale group roles A-D. In this manner, the site-wide roles A-E and new scale groups with upgraded scale group roles A-D are created prior to upgrading any tenant's unshared organization database . Once the site-wide roles A-E have been upgraded and one or more scale groups  with upgraded scale group roles A-D have been created, the tenants of the hosted multi-tenant system  may be notified that an upgrade is available. This occurs at operation .","At operation , a request is received from a tenant of the hosted multi-tenant system  to upgrade to a newer version of the CRM application . In response to receiving such a request, the routine  proceeds to operation , where a determination is made as to whether capacity is available in the newly created scale groups having upgraded scale group roles A-D. If no capacity is available on a scale group having upgraded scale group roles A-D, the routine  proceeds from operation  to operation .","At operation , the tenant is permitted to schedule their upgrade for a future point in time when capacity becomes available on a scale group having upgraded scale roles A-D. From operation , the routine  proceeds to operation , where the tenant's request to upgrade the CRM application  is queued until the scheduled time. When the scheduled time arrives, and if capacity is available at a scale group having upgraded scale group roles A-D, the tenant's requested upgrade will be performed in the manner described below. From operation , the routine  proceeds to operation , where it ends.","If, at operation , it is determined that capacity is available at a scale group having upgraded scale roles A-D, the routine  proceeds to operation . At operation , the tenant's unshared organization database  is placed into a read-only mode of operation. One mechanism for placing the tenant's unshared organization database  into read-only mode will be described below with reference to .","Once the unshared organization database  has been placed into read-only mode, the routine  proceeds from operation  to operation . At operation , the tenant's unshared organization database  is migrated to the scale group having the upgraded scale group roles A-D. In this manner, a copy of the tenant's unshared organization database  is made at the new scale group. Once the copy has been created, the routine  proceeds to operation , where the contents of the tenant's unshared organization database  are upgraded, if necessary.","Once the unshared organization database  has been upgraded, the routine  proceeds to operation , where the contents of the shared configuration database  are modified to reflect the tenant's new scale group. In this manner, future requests from the tenant to utilize the CRM application  can be redirected to the proper scale group A-N. Once the shared configuration database  has been updated, the routine  proceeds to operation  where the tenant's unshared organization database  is enabled for use at the new scale group. From operation , the routine  proceeds to operation , where it ends.","Turning now to , details of one embodiment presented herein for creating a shadow copy will be described. As discussed briefly above, a shadow copy is essentially a new tenant within the hosted multi-tenant system  that includes a copy of a tenant's unshared organization database . According to embodiments, the shadow copy operation copies the tenant's unshared organization database  to what is effectively a new tenant with all of the customer data carried over. This allows the tenant to utilize the shadow copy of their data separately from the master version of their unshared organization database. In this way, the tenant can test various modifications to the shadow copy rather than on their master version of their unshared organization database . For instance, as will be discussed in greater detail below, the tenant may upgrade the shadow copy of their unshared organization database  to an upgraded version of the CRM application . The tenant can then utilize their data with the upgraded version of the CRM application  without committing the master version of their unshared organization database  to the upgrade process. If the tenant desires to migrate to the updated version of the CRM application , the master version of the unshared organization database  may be upgraded and changes to the shadow copy of the unshared organization database  may be merged into the upgraded master unshared organization database . Additional details regarding this process will be provided below.","As shown in , the process of creating a shadow copy may include copying a tenant's unshared organization database A to a shadow copy  of the unshared organization database A. In the example shown in , the shadow copy has been created at the same scale group A. It should be appreciated, however, that the shadow copy  may be created at another scale group. In one embodiment, the shadow copy  of the unshared organization database A is accomplished through database backup and restore. According to embodiments, data is also recorded indicating that the shadow copy  was created from the \u201cmaster\u201d unshared organization database A. The shadow copy  is also provided a new name so that the tenant can log onto the shadow copy  uniquely.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 4B","FIG. 3","FIG. 4C"],"b":["402","202","216","216","120","202","202","402","202","402","120","202","402"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 4C","b":["400","200","120","400","401","402","120","402","202","216","216"]},"In response to receiving such a request, the routine  proceeds to operation , where a determination is made as to whether the tenant requested to upgrade the shadow copy . If the shadow copy is not to be upgraded, the routine  proceeds to operation , where the tenant's unshared organization database  is placed into a read-only mode of operation. As discussed above, a method for placing the unshared organization database into a read-only mode will be described below with respect to .","Once the tenant's unshared organization database  has been placed into read-only mode, the routine  proceeds from operation  to operation . At operation , the shadow copy  of the tenant's unshared organization database  is created at the same scale group A or at another scale group B. The scale group utilized for holding the shadow copy  may be based upon the available capacity at each of the scale groups.","Once the shadow copy  has been created, the routine  proceeds to operation , where the shared configuration database  is modified to reflect the new shadow copy . As discussed above, the shadow copy  may be given a distinct name so that the tenant can utilize the unshared organization database  and a shadow copy  concurrently. From operation , the routine  proceeds to operation , where it ends.","If, at operation , it is determined that the tenant has requested to upgrade the shadow copy  of the unshared organization database  at an upgraded scale group B, the routine  proceeds from operation  to operation . At operation , the unshared organization database  is placed into a read-only mode of operation. The routine  then proceeds to operation , where the shadow copy  is created and moved to the upgraded scale group B. The shadow copy  of the unshared organization database  is then upgraded at the upgraded scale group B for compatibility with the upgraded scale group roles A-D. This occurs at operation . Once the shadow copy  has been upgraded, the routine  proceeds to operation , where the shared configuration database  is modified in the manner described above in order to reflect the new shadow copy  at the upgraded scale group B. From operation , the routine  proceeds to operation , where it ends.","Turning now to , an illustrative routine  will be described showing one embodiment presented herein for placing the unshared organization database  into a read-only mode of operation. The routine  begins at operation , where a determination is made as to whether a request has been received to place an unshared organization database  into a read-only mode of operation. If such a request has been received, the routine  proceeds from operation  to operation , where privileges are revoked from the tenant such that the tenant cannot modify the contents of the unshared organization database A. If a request is not received at operation  to place the unshared organization database  into a read-only mode of operation, the routine  proceeds from operation  to operation .","At operation  a determination is made as to whether a request has been received to enable write functionality on the unshared organization database . If so, the routine  proceeds from operation  to operation , where privileges are restored to the tenant so that the contents of the unshared organization database  can once again be modified. From operation  and , the routine  returns to operation  where the above process is repeated. It should be appreciated that the mechanism described in  for placing the unshared organization database  into a read-only mode of operation may also be applied to the shadow copy  of the unshared organization database. It should also be appreciated that the mechanism illustrated in  for placing the unshared organization database  into a read-only mode of operation is but one illustrative example and that other mechanisms may be utilized in the embodiments herein for making the unshared organization database  read-only.","According to embodiments, the hosted multi-tenant system  provides a suitable user interface through which the tenants may provide a request to place their unshared organization database  into the read-only mode of operation. Through this user interface, a tenant may manually place their system into a read-only state for any reason that they may have. A suitable interface may also be provided through which a tenant may return their unshared organization database to a write-enabled mode of operation.","As discussed briefly above, the hosted multi-tenant system  also provides functionality for merging changes to a shadow copy  back into the unshared organization database  from which it was created (referred to herein as the \u201cmaster\u201d database).  shows a routine  that illustrates one mechanism for merging changes to a shadow copy  back into the master database.","The routine  begins at operation , where a determination is made as to whether the shadow copy  and the master database are the same version. If not, the routine  proceeds from operation  to operation  where the master database is upgraded to the same version as the shadow copy . Alternately, it may be necessary to upgrade the shadow copy  if the master version was upgraded subsequent to the creation of the shadow copy . Once the shadow copy  and the master database have been upgraded so that both are at the same version, the routine  proceeds from operation  to operation .","If, at operation , it is determined that the shadow copy  and the master database are at the same version number, the routine  proceeds from operation  to operation . At operation , a determination is made as to whether the master database has been in the read-only mode of operation since the time the shadow copy  was created. If the master database has been maintained in the read-only mode of operation, the routine  proceeds from operation  to operation .","At operation , the shadow copy  is copied over the master database, thereby updating the contents of the master database to the contents of the shadow copy . If, however, at operation , it is determined that the master database has not been in read-only mode of operation since the creation of the shadow copy , the routine  proceeds from operation  to operation .","At operation , changes to the shadow copy  are merged with the contents of the master database. It should be appreciated that mechanisms exist for identifying changes between two data sets and for merging the identified changes. It should also be appreciated that a user interface may be necessary for allowing a tenant to identify conflicts between the shadow copy  and the master database. From operation  and , the routine  proceeds to operation , where it ends.","Referring now to , details will be provided regarding one embodiment presented herein wherein the hosted multi-tenant system  is further configured to allow a tenant to create one or more snapshots of their unshared organization database . In this regard, the database role D is configured in one embodiment for allowing a tenant to specify that snapshots should be taken of their unshared organization database A, for instance, at a particular time or according to a particular schedule. As known to those skilled in the art, database snapshots are a feature of some database management systems (\u201cDBMSs\u201d) that allow a user to specify a point in time at which to preserve the contents of a database. Taking a snapshot of a database does not, however, actually make a copy of the database. Rather, a new database is created that is prepared to receive contents from the live database as the contents are replaced, changed, or overwritten. When a database snapshot is restored onto a database, the previous values are reapplied to the live database thereby bringing the database back to the state it was in at the point in time that the database snapshot was taken.","As shown in , a snapshot operation can be performed on the unshared organization database A to create a snapshot A of the database A at a particular point in time. A subsequent snapshot B may also be taken at a future point in time. Through an appropriate user interface, a tenant can specify that the snapshot A-B be taken. Additionally, a tenant may also be permitted to specify that the unshared organization database A be reverted to one of the snapshots A-B. Additional details regarding this process are provided below with respect to .",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 8","b":["800","702","702","120","800","802","120","120","120","800","804","216","120"]},"If, at operation , it is determined that a request to take a snapshot of the unshared organization database  has not been received, the routine  proceeds from operation  to operation . At operation , a determination is made as to whether a request has been received from a tenant to revert the unshared organization database  to a previous point in time utilizing one of the snapshots A-B. If so, the routine  proceeds from operation  to operation , where the unshared organization database  is reverted to the previously taken snapshot A-B specified by the tenant. As discussed briefly above, the underlying DBMS provides functionality for reverting to a previously taken snapshot . From operation , the routine  proceeds to operation , where it ends.","As discussed above, a tenant may be permitted to cause a snapshot to be created of their unshared organization database . As also discussed above, once the snapshot has been taken, the tenant may cause their unshared organization database  to be moved to an upgraded scale group B and upgraded in the manner described above. In one embodiment, the tenant may also be permitted to revert to a down-level version of the CRM application  by moving their unshared organization database  back to a down-level scale group A. In order to perform this operation, the snapshot of the unshared organization database  taken prior to the upgrade would be saved on the down-level scale group A for a period of time. The snapshot would then be utilized in response to a tenant request to revert to the down-level scale group A. It should be appreciated that in this scenario all changes made to the unshared organization database  after the creation of the snapshot would be lost. This operation may be desirable to a tenant in cases where the unshared organization database  is not compatible with other systems, where data is corrupt, or for other reasons deemed critical by the tenant.","Referring now to , an illustrative computer architecture for a computer  capable of executing the software components described above with respect to  will be discussed. The computer architecture shown in  illustrates a conventional desktop, laptop, or server computer and may be utilized to embody any of the computer systems described herein.","The computer architecture shown in  includes a central processing unit  (\u201cCPU\u201d), a system memory , including a random access memory  (\u201cRAM\u201d) and a read-only memory (\u201cROM\u201d) , and a system bus  that couples the memory to the CPU . A basic input\/output system containing the basic routines that help to transfer information between elements within the computer , such as during startup, is stored in the ROM . The computer  further includes a mass storage device  for storing an operating system , application programs, and other program modules, which will be described in greater detail below.","The mass storage device  is connected to the CPU  through a mass storage controller (not shown) connected to the bus . The mass storage device  and its associated computer-readable media provide non-volatile storage for the computer . Although the description of computer-readable media contained herein refers to a mass storage device, such as a hard disk or CD-ROM drive, it should be appreciated by those skilled in the art that computer-readable media can be any available computer storage media that can be accessed by the computer .","By way of example, and not limitation, computer-readable media may include volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules or other data. For example, computer-readable media includes, but is not limited to, RAM, ROM, EPROM, EEPROM, flash memory or other solid state memory technology, CD-ROM, digital versatile disks (\u201cDVD\u201d), HD-DVD, BLU-RAY, or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the computer .","According to various embodiments, the computer  may operate in a networked environment using logical connections to remote computers through a network such as the network . The computer  may connect to the network  through a network interface unit  connected to the bus . It should be appreciated that the network interface unit  may also be utilized to connect to other types of networks and remote computer systems. The computer  may also include an input\/output controller  for receiving and processing input from a number of other devices, including a keyboard, mouse, or electronic stylus (not shown in ). Similarly, an input\/output controller may provide output to a display screen, a printer, or other type of output device (also not shown in ).","As mentioned briefly above, a number of program modules and data files may be stored in the mass storage device  and RAM  of the computer , including an operating system suitable for controlling the operation of a networked desktop, laptop, or server computer. The mass storage device  and RAM  may also store one or more program modules. In particular, the mass storage device  and the RAM  may store the CRM application , the Web browser application , the database server application , and the unshared organization database , each of which has been described above with reference to . Other program modules and data files may also be stored in the mass storage device  and utilized by the computer .","Based on the foregoing, it should be appreciated that technologies for enabling customer management of a hosted multi-tenant application are presented herein. Although the subject matter presented herein has been described in language specific to computer structural features, methodological acts, and computer readable media, it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features, acts, or media described herein. Rather, the specific features, acts and mediums are disclosed as example forms of implementing the claims.","The subject matter described above is provided by way of illustration only and should not be construed as limiting. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described, and without departing from the true spirit and scope of the present invention, which is set forth in the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 1-2C"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 4A-4B"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 9","FIGS. 1-8"]}]},"DETDESC":[{},{}]}
