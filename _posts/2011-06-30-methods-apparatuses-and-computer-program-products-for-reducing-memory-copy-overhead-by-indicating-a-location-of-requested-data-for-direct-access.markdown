---
title: Methods, apparatuses and computer program products for reducing memory copy overhead by indicating a location of requested data for direct access
abstract: An apparatus for providing an efficient and reliable manner for transferring data via a network may include a processor and memory storing executable computer code causing the apparatus to at least perform operations including receiving a request for data from a device and enabling provision of information to a network stack. The information may include content indicating a location of the requested data for direct access by the network stack or a network driver, in response to receipt of the request. The computer program code may further cause the apparatus to enable provision of the requested data to the network driver, or enabling the network driver to retrieve the requested data, based at least in part on the indicated location of the requested data. Corresponding methods and computer program products are also provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08688799&OS=08688799&RS=08688799
owner: Nokia Corporation
number: 08688799
owner_city: Espoo
owner_country: FI
publication_date: 20110630
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNOLOGICAL FIELD","BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["An example embodiment of the present invention relates generally to wireless and\/or wired communication technology and more particularly, relates to an apparatus, method and a computer program product for facilitating an efficient and reliable mechanism of transferring data to one or more devices via a network(s).","The modern communications era has brought about a tremendous expansion of wireline and wireless networks. Computer networks, television networks, and telephony networks are experiencing an unprecedented technological expansion, fueled by consumer demand. Wireless and mobile networking technologies have addressed related consumer demands, while providing more flexibility and immediacy of information transfer.","Current and future networking technologies continue to facilitate ease of information transfer and convenience to users. Due to the now ubiquitous nature of electronic communication devices, people of all ages and education levels are utilizing electronic devices to communicate with other individuals or contacts, receive services and\/or share information, media and other content. One area in which there is a demand to increase ease of information transfer relates to services for transferring large amounts of data over a network.","For instance, currently, transferring large amounts of data over a network such as encoded videos, photos, Moving Picture Experts Group (MPEG) MPEG-2 Audio Layer III (MP3) files, and frame buffer data is quite common. One example of a large amount of data being transferred over a network relates to Virtual Network Computing (VNC) data. At present, VNC typically enables a graphical desktop to be shared remotely from one computer to another computer. For instance, VNC may relay graphical screen updates from one computer to another computer over a network. In this regard, VNC may typically be used to replicate a user interface of a VNC server to a display of a VNC client. In order to achieve a desirable user experience, a VNC server typically needs to transmit an entire frame buffer to a VNC client at a high frame rate. Transmitting large amounts of data from a VNC server to a VNC client typically consumes a number of computing resources. However, it may be beneficial to minimize processing load that may caused by a VNC server since the more processing load that a VNC server consumes, the less processing power a foreground application may be able to utilize.","Another example of a large amount of data being transferred over a network relates to Universal Plug and Play (UPnP) data. In this regard, an UPnP media server may be utilized to share and provide media such as music and video to UPnP clients. At present, UPnP media servers are supporting devices such as mobile phones, and it is becoming more beneficial to support such devices without consuming large amounts of processing power in order to reduce an undesirable impact on the existing software being executed in a system.","An additional example of a large amount of data being transferred over a network may relate to streaming data. For example, a web server streaming multiple videos simultaneously may require a large amount of data to be transferred across a network. If each stream causes too much processing capacity to be consumed, a processing load may limit the maximum number of streams a server may be able to support. However, decreasing processing load may result in better user experience or may increase the total capacity of a given server since large amounts of data transfer over a network typically consumes much power.","For instance, transmitting user interface frame data in a high frame rate or large media files may consume a lot of central processing unit (CPU) power such as, for example, sending Video Graphics Array (VGA) data of 30 fps over VNC may result in 36.9 MB\/s of data traffic which may result in more than 24,500 Ethernet packets. Handling such large amounts of packets using the software based Transmission Control Protocol (TCP) and the Internet Protocol (IP) (TCP\/IP) stack may be challenging, particularly for mobile systems with limited processing capability. The problem may become enhanced when such transmission is to occur in a background without affecting a foreground application. For example, CPU consumption of a VNC server or an UPnP media server executing in a background should be minimal to avoid affecting foreground applications being executed.","Naive transmission of data over a TCP\/IP stack typically involves copying the data at least once from kernel space to a background server, and then the data is typically copied again to a TCP\/IP stack. Due to the large amount of data being copied and transferred, a high quantity of processing capacity may be consumed.","In view of the foregoing drawbacks, it may be beneficial to provide a more efficient and reliable mechanism of transferring large amounts of data across a network that may reduce a quantity of computing resources for the data transfer.","A method, apparatus and computer program product are therefore provided that may enable an efficient and reliable manner for transferring data via a network. An example embodiment of the invention may reduce memory copy overhead associated with transmitting large amounts of data via a network to one or more devices. In this regard, some example embodiments may inform devices of an apparatus of the location in which requested data may be stored and may enable the devices to retrieve the data without copying the data in each instance of data retrieval in order to transfer requested data to one or more requesting devices.","An example embodiment may also enable removal of a memory copy altogether in instances in which direct access, to requested data, may be provided by a network driver. Some of the example embodiments may inform devices of the location of data being requested by one or more requesting devices and as such one or more of the devices involved in the retrieval of data for transfer may directly access the requested data from the location which may minimize the number of copies of the requested data prior to transfer of the requested data to the requesting devices. By minimizing the number of copies needed to enable transfer of requested data, some of the example embodiments may conserve processing and\/or memory capacity of apparatuses (e.g., mobile devices, for example mobile phones, etc.).","In one example embodiment, a method for enabling transfer of data via a network is provided. The method may include receiving a request for data from a device and enabling provision of information to a network stack. The information may include content indicating a location of the requested data for direct access by the network stack or a network driver, in response to receipt of the request. The method may further include enabling provision of the requested data to the network driver, or enabling the network driver to retrieve the requested data. The provision of the requested data may be based at least in part on the indicated location of the requested data.","In another example embodiment, an apparatus for enabling transfer of data via a network is provided. The apparatus may include a processor and memory including computer program code. The memory and the computer program code are configured to, with the processor, cause the apparatus to at least perform operations including receiving a request for data from a device and enabling provision of information to a network stack. The information may include content indicating a location of the requested data for direct access by the network stack or a network driver, in response to receipt of the request. The computer program code may further cause the apparatus to enable provision of the requested data to the network driver, or enable the network driver to retrieve the requested data. The provision of the requested data may be based at least in part on the indicated location of the requested data.","In another example embodiment, a computer program product for enabling transfer of data via a network is provided. The computer program product includes at least one computer-readable storage medium having computer-executable program code portions stored therein. The computer-executable program code instructions may include program code instructions configured to facilitate receipt of a request for data from a device and enable provision of information to a network stack. The information may include content indicating a location of the requested data for direct access by the network stack or a network driver, in response to receipt of the request. The program code instructions may also be configured to enable provision of the requested data to the network driver, or enable the network driver to retrieve the requested data. The provision of the requested data may be based at least in part on the indicated location of the requested data.","An example embodiment of the invention may provide a better user experience since a device may more efficiently and reliably facilitate transfer of data to requesting devices. As a result, the device may conserve processing and\/or memory resources and may perform with improved capabilities based on the conserved resources.","Some embodiments of the present invention will now be described more fully hereinafter with reference to the accompanying drawings, in which some, but not all embodiments of the invention are shown. Indeed, various embodiments of the invention may be embodied in many different forms and should not be construed as limited to the embodiments set forth herein; rather, these embodiments are provided so that this disclosure will satisfy applicable legal requirements. Like reference numerals refer to like elements throughout. As used herein, the terms \u201cdata,\u201d \u201ccontent,\u201d \u201cinformation\u201d and similar terms may be used interchangeably to refer to data capable of being transmitted, received and\/or stored in accordance with embodiments of the present invention. Thus, use of any such terms should not be taken to limit the spirit and scope of embodiments of the present invention.","Additionally, as used herein, the term \u2018circuitry\u2019 refers to (a) hardware-only circuit implementations (e.g., implementations in analog circuitry and\/or digital circuitry); (b) combinations of circuits and computer program product(s) comprising software and\/or firmware instructions stored on one or more computer readable memories that work together to cause an apparatus to perform one or more functions described herein; and (c) circuits, such as, for example, a microprocessor(s) or a portion of a microprocessor(s), that require software or firmware for operation even if the software or firmware is not physically present. This definition of \u2018circuitry\u2019 applies to all uses of this term herein, including in any claims. As a further example, as used herein, the term \u2018circuitry\u2019 also includes an implementation comprising one or more processors and\/or portion(s) thereof and accompanying software and\/or firmware. As another example, the term \u2018circuitry\u2019 as used herein also includes, for example, a baseband integrated circuit or applications processor integrated circuit for a mobile phone or a similar integrated circuit in a server, a cellular network device, other network device, and\/or other computing device.","As defined herein a \u201ccomputer-readable storage medium,\u201d which refers to a non-transitory, physical storage medium (e.g., volatile or non-volatile memory device), can be differentiated from a \u201ccomputer-readable transmission medium,\u201d which refers to an electromagnetic signal.","Referring now to , a schematic block diagram of a VNC server enabling copying and transfer of data is provided. In , a client device may send a conventional VNC server a request for display data. In this regard, the VNC server may request the corresponding data from a device driver and the device driver typically copies the requested display data and sends it to the VNC server. See operation . Upon receipt of the copied display data from the display driver, the conventional VNC server generally makes another copy (e.g., a second copy) of the received display data and sends the copy of display data to the TCP IP stack. See operation . The TCP IP stack may make another copy of displayed data (e.g., a third copy) and may send this copy of the displayed data to a network driver. See operation . The network driver typically sends the received copy of the display data to the requesting client device. As such, existing VNC servers may require up to three copies of the same display data for sending to a client device. Such existing VNC servers may be inefficient and may consume more processing and memory resources than desirable.","Referring now to , a schematic block diagram of a Hypertext Transfer Protocol (HTTP) server enabling copying and transfer of media data is provided. In , a client device may send the conventional HTTP server a request for a media file. In this regard, the request may be received via the TCP IP stack and sent to the HTTP server via an HTTP GET request. See operation . In this regard, the HTTP server may request the corresponding media file from a file system and the file system may read the corresponding media file and make a copy (e.g., a first copy) of the read media file which may be sent to the HTTP server. See operation . Thereafter, the conventional HTTP server typically makes another copy (e.g., a second copy) of the previously copied media file and sends the copied media file to a TCP IP stack. See operation . The TCP IP stack may send the copied media file received from the HTTP server to the network device. See operation . The network device may send the copied media file to the requesting client device. In some instances, the TCP IP stack may also copy the media file received from the HTTP server and thereafter send the copied media file (e.g., a third copy) to the network driver for sending to the requesting client device. As such, existing HTTP servers may generate up to three copies of the same media data for sending to a client device. In this regard, existing HTTP servers are generally inefficient in providing media data to requesting client devices and may consume more processing and memory resources than desirable.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 2","FIG. 2","FIG. 2"],"b":["10","10","20","30","25","10","20","25"]},"The network  may include a collection of various different nodes (of which the second and third communication devices  and  may be examples), devices or functions that may be in communication with each other via corresponding wired and\/or wireless interfaces. As such, the illustration of  should be understood to be an example of a broad view of certain elements of the system and not an all inclusive or detailed view of the system or the network . According to some example embodiments the network  may be capable of supporting communication in accordance with any one or more of a number of First-Generation (1G), Second-Generation (2G), 2.5G, Third-Generation (3G), 3.5G, 3.9G, Fourth-Generation (4G) mobile communication protocols, Long Term Evolution (LTE) or Evolved Universal Terrestrial Radio Access Network (E-UTRAN), Self Optimizing\/Organizing Network (SON) intra-LTE, inter-Radio Access Technology (RAT) Network and\/or the like. According to some example embodiments, the network  may be a point-to-point (P2P) network.","One or more communication terminals such as the mobile terminal  and the second and third communication devices  and  may be in communication with each other via the network  and each may include an antenna or antennas for transmitting signals to and for receiving signals from one or more base sites. The base sites could be, for example one or more base stations (BS) that is a part of one or more cellular or mobile networks or one or more access points (APs) that may be coupled to a data network, such as a Local Area Network (LAN), Wireless Local Area Network (WLAN), a Wi-Fi Network, a Metropolitan Area Network (MAN), and\/or a Wide Area Network (WAN), such as the Internet. In turn, other devices such as processing elements (for example, personal computers, server computers or the like) may be coupled to the mobile terminal  and the second and third communication devices  and  via the network . By directly or indirectly connecting the mobile terminal  and the second and third communication devices  and  (and\/or other devices) to the network , the mobile terminal  and the second and third communication devices  and  may be enabled to communicate with the other devices or each other. For example, the mobile terminal  and the second and third communication devices  and  as well as other devices may communicate according to numerous communication protocols including Hypertext Transfer Protocol (HTTP) and\/or the like, to thereby carry out various communication or other functions of the mobile terminal  and the second and third communication devices  and , respectively.","Furthermore the mobile terminal  and the second and third communication devices  and  may communicate in accordance with, for example, Universal Serial Bus (USB), Radio Frequency (RF), Cellular, Near Field Communication (NFC), Bluetooth (BT), Infrared (IR) or any of a number of different wireline or wireless communication techniques, including Local Area Network (LAN), Wireless LAN (WLAN), Worldwide Interoperability for Microwave Access (WiMAX), Wireless Fidelity (Wi-Fi), Ultra-Wide Band (UWB), Wibree techniques and\/or the like. As such, the mobile terminal  and the second and third communication devices  and  may be enabled to communicate with the network  and each other by any of numerous different access mechanisms. For example, mobile access mechanisms such as Wideband Code Division Multiple Access (W-CDMA), CDMA2000, Global System for Mobile communications (GSM), General Packet Radio Service (GPRS) and\/or the like may be supported as well as wireless access mechanisms such as WLAN, WiMAX, and\/or the like and fixed access mechanisms such as Digital Subscriber Line (DSL), cable modems, Ethernet and\/or the like.","According to some example embodiments, the first communication device (for example, the mobile terminal ) may be a mobile communication device such as, for example, a wireless telephone or other devices such as a personal digital assistant (PDA), mobile computing device, camera, video recorder, audio\/video player, positioning device, game device, television device, radio device, or various other like devices or combinations thereof. The second communication device  and the third communication device  may be mobile or fixed communication devices. However, in one example, the second communication device  and the third communication device  may be servers, remote computers or terminals such as personal computers (PCs) or laptop computers.","According to some example embodiments, the network  may be an ad hoc or distributed network arranged to be a smart space. Thus, devices may enter and\/or leave the network  and the devices of the network  may be capable of adjusting operations based on the entrance and\/or exit of other devices to account for the addition or subtraction of respective devices or nodes and their corresponding capabilities.","According to some example embodiments, the mobile terminal as well as the second and third communication devices  and  may employ an apparatus (for example, apparatus of ) capable of functioning according to example embodiments of the invention. In some example embodiments, the second and third communication devices  and  may, but need not, be client devices (e.g., communication device  of ). The communication devices  and  may request data from the mobile terminal  and\/or from each other.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["50","50","10","20","25","50","30","50","10"]},"Referring now to , the apparatus  may include or otherwise be in communication with a processor , a user interface , a communication interface , a memory device , a display , an optional file system(s) , an optional display driver(s) , an applications module , a network stack , an optional media driver(s) , a network driver(s)  and a host operating system (OS) . The OS  may coordinate some activities associated with the apparatus . For example, the OS  may coordinate activities for enabling transfer of data to one or more devices. In one example embodiment, the OS  may include a monolithic kernel architecture (e.g., the monolithic kernel architecture of ). In another alternative example embodiment, the OS  may include a micro kernel architecture (e.g., the micro kernel architecture of ). According to some example embodiments, the display  may be a touch screen display. The memory device  may include, for example, volatile and\/or non-volatile memory. For example, the memory device  may be an electronic storage device (for example, a computer readable storage medium) comprising gates configured to store data (for example, bits) that may be retrievable by a machine (for example, a computing device like processor ). In some embodiments, the memory device  may be a tangible memory device that is not transitory. The memory device  may be configured to store information, data, files, applications (e.g., Web applications (e.g., Hypertext Transfer Protocol (HTML) applications, etc.)), instructions or the like for enabling the apparatus to carry out various functions in accordance with example embodiments of the invention. For example, the memory device  could be configured to buffer input data for processing by the processor . Additionally or alternatively, the memory device  could be configured to store instructions for execution by the processor . As yet another alternative, the memory device  may be one of a plurality of databases that store information and\/or media content (for example, pictures, videos, graphical images of a desktop, etc.).","The apparatus  may, according to some example embodiments, be a mobile terminal (for example, mobile terminal ) or a fixed communication device or computing device configured to employ example embodiments of the invention. According to some example embodiments, the apparatus  may be embodied as a chip or chip set. In other words, the apparatus  may comprise one or more physical packages (for example, chips) including materials, components and\/or wires on a structural assembly (for example, a baseboard). The structural assembly may provide physical strength, conservation of size, and\/or limitation of electrical interaction for component circuitry included thereon. The apparatus  may therefore, in some cases, be configured to implement embodiments of the invention on a single chip or as a single \u201csystem on a chip.\u201d As such, in some cases, a chip or chipset may constitute means for performing one or more operations for providing the functionalities described herein. Additionally or alternatively, the chip or chipset may constitute means for enabling user interface navigation with respect to the functionalities and\/or services described herein.","The processor  may be embodied in a number of different ways. For example, the processor  may be embodied as one or more of various processing means such as a coprocessor, microprocessor, a controller, a digital signal processor (DSP), processing circuitry with or without an accompanying DSP, or various other processing devices including integrated circuits such as, for example, an ASIC (application specific integrated circuit), an FPGA (field programmable gate array), a microcontroller unit (MCU), a hardware accelerator, a special-purpose computer chip, or the like. In some example embodiments, the processor  may be configured to execute instructions stored in the memory device  or otherwise accessible to the processor . As such, whether configured by hardware or software methods, or by a combination thereof, the processor  may represent an entity (for example, physically embodied in circuitry) capable of performing operations according to embodiments of the invention while configured accordingly. Thus, for example, when the processor  is embodied as an ASIC, FPGA or the like, the processor  may be specifically configured hardware for conducting the operations described herein. Alternatively, as another example, when the processor  is embodied as an executor of software instructions, the instructions may specifically configure the processor  to perform the algorithms and operations described herein when the instructions are executed. However, in some cases, the processor  may be a processor of a specific device (for example, a mobile terminal or network device) adapted for employing embodiments of the invention by further configuration of the processor  by instructions for performing the algorithms and operations described herein. The processor  may include, among other things, a clock, an arithmetic logic unit (ALU) and logic gates configured to support operation of the processor .","In some example embodiments, the processor  may be configured to operate a connectivity program, such as a browser (e.g., Web browser) or the like. In this regard, the connectivity program may enable the apparatus  to transmit and receive Web content, such as for example location-based content or any other suitable content (e.g., applications), according to a Wireless Application Protocol (WAP) (e.g., an HTML Application Protocol), for example.","The communication interface  may be any means such as a device or circuitry embodied in either hardware, a computer program product, or a combination of hardware and software that is configured to receive and\/or transmit data from\/to a network and\/or any other device or module in communication with the apparatus . In this regard, the communication interface  may include, for example, an antenna (or multiple antennas) and supporting hardware and\/or software for enabling communications with a wireless communication network (for example, network ). In fixed environments, the communication interface  may alternatively or also support wired communication. As such, the communication interface  may include a communication modem and\/or other hardware\/software for supporting communication via cable, digital subscriber line (DSL), universal serial bus (USB), Ethernet or other mechanisms.","The user interface  may be in communication with the processor  to receive an indication of a user input at the user interface  and\/or to provide an audible, visual, mechanical or other output to the user. As such, the user interface  may include, for example, a keyboard, a mouse, a joystick, a display, a touch screen, a microphone, a speaker, or other input\/output mechanisms. In some example embodiments in which the apparatus is embodied as a server or some other network devices, the user interface  may be limited, remotely located, or eliminated. The processor  may comprise user interface circuitry configured to control at least some functions of one or more elements of the user interface, such as, for example, a speaker, ringer, microphone, display, and\/or the like. The processor  and\/or user interface circuitry comprising the processor  may be configured to control one or more functions of one or more elements of the user interface through computer program instructions (for example, software and\/or firmware) stored on a memory accessible to the processor  (for example, memory device , and\/or the like).","The file system(s)  may be, or include, a memory (e.g., volatile and\/or non-volatile memory), database or the like for storing and organizing collections of data, files (e.g., media files), folders, etc. that may be retrievable by the applications module , processor  and\/or the OS . In one example embodiment, the file system(s)  may be stored in memory device . The display driver(s)  may be any means such as a device or circuitry embodied in either hardware or a combination of hardware and software that is configured to enable applications to interact with a hardware device such as, for example, a display, as described herein. In one example embodiment, the display driver  may be a graphics driver for a video card(s). The display driver  may store data (e.g., a graphical screen of a desktop, other display data, etc.) in a frame buffer for display (e.g., via display  or any other display (for example, an external display of a communication device). The frame buffer may, but need not, be a video output device that may drive a display from a memory buffer (e.g., memory device ) storing one or more frames of data (e.g., one or more images, video data, etc.).","The network stack  may, for example, correspond to a set of communications protocols (e.g., Transmission Control Protocol (TCP) and the Internet Protocol (IP) (TCP\/IP)) used for enabling communications across a network (e.g., network  (for example, the Internet). The media driver(s)  may be a hard disk memory for storing media files and any other suitable data. In one example embodiment, the hard disk memory corresponding to the media driver(s)  may be stored in memory device . The network driver(s)  may be any means such as a device or circuitry embodied in either hardware or a combination of hardware and software that is configured to activate the transmission and receipt of data over a network, as described herein.","In some example embodiments, the processor  may be embodied as, include or otherwise control the applications module . The applications module  may be any means such as a device or circuitry operating in accordance with software or otherwise embodied in hardware or a combination of hardware and software (for example, processor  operating under software control, the processor  embodied as an ASIC or FPGA specifically configured to perform the operations described herein, or a combination thereof) thereby configuring the device or circuitry to perform the corresponding functions of the applications module , as described below. Thus, in an example in which software is employed, a device or circuitry (for example, the processor  in one example) executing the software forms the structure associated with such means.","In an example embodiment, the applications module  be configured to operate\/function as a server and may facilitate one or more requests for data received from one or more devices (for example, via a network). In one example embodiment, the applications module  may operate as a web server (e.g., a HTTP server) configured to deliver web pages, media files, documents (e.g., web documents, (e.g., HTML documents), images, videos, etc. that may be requested by one or more devices. The applications module  may deliver the requested data to one or more devices across a network (e.g., network  (e.g., the Internet)).","In another alternative example embodiment, the applications module  may be configured to operate\/function as a VNC server. In this regard, the applications module  may facilitate sharing of one or more items of data (e.g., graphical items (for example, desktop items), accessing files on one device (e.g., a work computer) from another device (e.g., a user's home computer, etc.) between devices remotely from one device to another device. In this regard, in response to receipt of a request from one or more devices for one or more items, the applications module  may send the send the corresponding item(s) (e.g., a graphical screen of a display) to the requesting device over a network.","In an example embodiment, the applications module  may enable a reduced number of memory copies for transferring data to one or more devices based in part on reading data directly via the network stack  relating to the location of the requested data. In this regard, instead of sending copied data to a network stack , the applications module  may provide information specifying the location of the corresponding data being requested to the network stack  and the network stack  may, but need not, copy the corresponding data for sending to a requesting device via the network driver , as described more fully below. In this manner, the applications module  may reduce the number of copies for sending requested data to devices via a network and may conserve processing resources of the processor , for example and may also conserve memory capacity of one or more memory devices (e.g., memory device ).","Referring now to , diagrams of operating systems according to some example embodiments are provided. In the example embodiment of , a monolithic kernel architecture according to an example embodiment is provided. In this regard, the kernel (e.g., host OS ) and the user space may be partitioned and a network stack (e.g., network stack  (e.g., a TCP\/IP stack)) and a file system(s) (e.g., file system(s) ) may belong to the kernel space. In the example embodiment of , a partitioned micro kernel architecture (e.g., host OS ) according to an example embodiment is provided. In the example embodiment of , the network stack (e.g., network stack  (e.g., TCP\/IP stack)) and the file system (e.g. file system(s) ) may belong to the user space.","In the example embodiments of , the application(s) (e.g., applications module ) may include but is not limited to servers such as, for example, a VNC server, a web server (e.g., a HTTP server, etc.) or any other suitable devices which may be executed in the user space, while hardware access may be performed in the kernel space by execution (for example, via execution of processor  of one or more device drivers (e.g., display driver(s) (e.g., display driver(s) ), media driver(s) (e.g., media driver(s) ), network driver(s) (e.g., network driver(s) ), etc.).","In the example embodiment of , a processor (e.g., processor ) and\/or the application(s) (e.g., applications module ) being executed in the user space may facilitate one or more copies of data for transfer via a network based in part on communicating with the network stack and the file system(s) being executed in the kernel space. On the other hand, in the example embodiment of , the application(s) (e.g., applications module ) being executed in the user space may facilitate a copy of data for transfer via a network based in part on communicating with the network stack and the file system(s) also being executed in the user space and enabling communications with one or more of the drivers (e.g., network driver(s), media driver(s), display driver(s), other drivers, etc.) executing in the kernel space.","Referring now to , a block diagram of an example embodiment of a communication device is provided. As shown in , the communication device  (e.g., a network device (e.g., a server), a personal computer, a laptop computer, a wireless telephone, a mobile phone, etc.) generally includes a processor  and an associated memory . The memory  may comprise volatile and\/or non-volatile memory, and may store content, data and\/or the like. The memory  may store client applications, instructions, and\/or the like for the processor  to perform the various operations of the communication device .","The processor  may also be connected to at least one communication interface  or other means for displaying, transmitting and\/or receiving data, content, and\/or the like. The user input interface  may comprise any of a number of devices allowing the network entity to receive data from a user, such as a keypad, a touch display , a joystick or other input device. In this regard, the processor  may comprise user interface circuitry configured to control at least some functions of one or more elements of the user input interface. The processor and\/or user interface circuitry of the processor may be configured to control one or more functions of one or more elements of the user interface through computer program instructions (e.g., software and\/or firmware) stored on a memory accessible to the processor (e.g., volatile memory, non-volatile memory, and\/or the like). In an example embodiment, the processor  may facilitate one or more communications with one or more devices (e.g., apparatuses ). In this regard, the processor  may generate one or more requests for data (e.g., VNC data (e.g., graphical items of display), media files, etc.) that may be sent to one or more apparatuses . In response to receipt of the request, the applications module  and\/or processor  may facilitate the retrieval of the requested data for sending to the communication device .","Referring now to , a diagram illustrating an efficient and reliable manner for transferring data via a network according to an example embodiment is provided. In the example embodiment of , an apparatus  may receive a request for data from a device such as, for example, communication device . In this example embodiment, the requested data may, but need not, relate to VNC data. For example, the request may relate to a request for a graphical display of another device (e.g., another communication device ). However, it should be pointed out that the requested data may correspond to any suitable data (e.g., media files, images, video data, audio data, etc.) and is not limited to VNC data. The applications module  may function\/operate as a VNC server, for example. In this regard, in response to receipt of the request, the applications module  may identify the location of the requested data (e.g., VNC data (e.g., a graphical display of another device)) and may send the network stack  a message indicating the location of the requested data (also referred to herein as frame buffer information). See operation . The message generated by the applications module  may also include data indicating the size of the data and may indicate the device (e.g., communication device ) requesting the data. In addition, the message may include data instructing the network stack  to obtain the requested data from the location for sending to the requesting device (e.g., communication device ).","In response to receipt of the message from the applications module , the network stack  (e.g., a TCP\/IP stack) may obtain the requested data from a frame buffer of the display driver(s)  (or a frame buffer associated with the display driver(s) ). In this regard, the network stack  may send a message to the display driver(s)  to obtain or get the requested data. See operation . In this regard, the display driver  may copy the requested data (e.g., VNC data (e.g., a graphical display of another device)) from the frame buffer and may send the copied data to the network stack . See operation . In response to receipt of the data (e.g., copied data) from the display driver(s) , the network stack  may, but need not, copy the received data and may send the copied data to the network driver(s) . See operation . In this regard, the network driver(s)  may send the data to the communication device  (e.g., the requesting device) that requested the data.","In an alternative example embodiment, a direct memory access (DMA) device controlled by the network driver(s)  may communicate directly with a frame buffer of the display driver  to read and retrieve the data without copying the data, in response to the network stack  sending a message to the network driver(s)  indicating that the location of requested data is in the frame buffer of the display driver(s) . As such, the network driver(s)  may send the data retrieved by the DMA to the requesting communication device . In this alternative example embodiment, the apparatus  may enable the requested data to be retrieved and sent to the requesting device by the network driver(s)  without copying the requested data.","By providing the location of requested data to a network stack (e.g., network stack ), the applications module  of an example embodiment may enable a reduction in a number of times that requested data is copied for sending to a requesting device via a network. This reduction in copying data may conserve processing resources and memory resources of the apparatus .","The table below illustrates an example embodiment of a direct access information data structure of a message or packet that may be provided by the applications module  to the network stack  to provide information identifying the data that may be directly accessed by the network stack. In the table below, the Packet offset (e.g., TCP Packet offset) and the Width may be optional. In addition, the file handle, source offset, and length may be repeated multiple times to allow combining data from different files or drivers into a single packet.",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Member","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["File handle","Unique identifier(s) for the file. This may be also used to"]},{"entry":[{},"uniquely identify non-file data like frame buffer or data"]},{"entry":[{},"from media like flash memory."]},{"entry":["Source offset","This offset tells transmission should be done from which"]},{"entry":[{},"part of the file (or frame buffer)"]},{"entry":["Length","Size of file or frame buffer to transfer."]},{"entry":["Packet offset","The location of file (or frame buffer) data inside a packet"]},{"entry":["(Optional)","(e.g., TCP packet) to send. This may be unnecessary if this"]},{"entry":[{},"structure is embedded into a packet from the applications"]},{"entry":[{},"module."]},{"entry":["Width","This may only be necessary for 2-D data like frame buffer"]},{"entry":["(Optional)","data. It tells the width of the image(s) to transmit."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The file handle may correspond to one or more unique identifiers indicating the location of data (e.g., VNC data, a media file(s), an image(s), etc.) being requested by a device (e.g., communication device ). The unique identifiers may, but need not, be an address indicating the location of the data in a memory (e.g., frame buffer in a display driver or in a memory device )) or storage of a device. The source offset may identify which part or location of the data (e.g., a file) to retrieve for sending to a device. For purposes of illustration and not of limitation, a portion of requested data may be in a file having a size of 1,000 GB. However, the requested data may be 100 kB in size. As such, the source offset information may indicate to start retrieving data at the beginning location of the 100 kB of data being requested and stop retrieving data at the ending location of the 100 kB of the data being requested.","The length content of the data access information data structure may specify the length of the data being requested by a device. The length data may also indicate the size of the file or data in a frame buffer to transfer to a requesting device. The packet offset (e.g., TCP packet offset) may indicate the location of data, a file, frame buffer data, etc., inside a packet (e.g., a TCP packet) being sent by the applications module  to a network stack (e.g., network stack ). The width content of the data access information data structure may specify the width of data or an image (e.g., two-dimensional (2D) data of a frame buffer) to transmit for a requesting device, for example.","Referring now to , a diagram of an example embodiment of a packet for sending from an applications module to a network stack is provided. In the example embodiment of , the applications module  (also referred to herein as application) may generate the packet (e.g., a TCP packet) such that it includes a word (also referred to herein as a magic word) denoting that direct access information (e.g., the information of the direct access information data structure of the table above) is being provided in the packet which may be different from other data (e.g., header A and\/or trailer B) and\/or different from a data structure of other data. The word, for example, may be a sequential string of characters (e.g., numbers). The word may also denote that the data following the word in the packet is direct access information indicating a location of data being requested by a device. Upon receipt of the packet, the network stack  may detect the presence of the data structure by checking all of the packet to search for the magic word characters (e.g., numbers) sequence, which may uniquely distinguish the data structure from other data.","Referring now to , a diagram of another example embodiment of a packet for sending from a network stack to a network driver is provided. In the example embodiment of , the network stack  may restructure the packet received from the applications module  to include the directly accessed data (e.g., the requested data (e.g., a graphical display of a desktop of another device, etc.)) that relates to the data requested by a device. In this regard, the network stack  may send the restructured packet to the network driver(s)  to enable the network driver(s)  to send the directly accessed data to the requesting device.","Referring now to , a diagram of another example embodiment of a packet for sending from an applications module to a network stack is provided. In the example embodiment of , the applications module  may generate a packet (e.g., TCP packet) to include direct access information identifying the location (e.g., a frame buffer of a display driver (e.g., display driver(s) )) of information (e.g., a media file) being requested by a device. The direct access information, as described above, for the whole packet may be sent by the applications module  to the network stack  via an Input Output Control (IOCTL) application programming interface (API) system call. In response to sending the packet with the direct access information, the applications module  may then send the header (e.g., header A) and trailer (e.g., trailer B) of the packet. In this regard, the trailer (e.g., trailer B) of the packet may be offset from the direct access information. By utilizing the IOCTL API system call to send the packet with the direct access information to the network stack , the network stack  may not need to detect the presence of direct access information by checking the entire packet data (e.g., the Direct Access Information, header A and trailer B) since there is no word (e.g., magic word) in the example embodiment of . Since there is typically no overhead involved with checking the entire packet data sent from the applications module  to search for a word (e.g., magic word), the example embodiment of the packet sent via the IOCTL API system call of  may lead to better performance.","Referring now to , a diagram of another example embodiment of a packet for sending from a network stack to a network driver is provided. In the example embodiment of , the network stack  may restructure the packet received from the applications module  to include the directly accessed data (e.g., the requested data (e.g., a media file, etc.) that relates to the data requested by a device. In this example embodiment, the network stack  may include the directly accessed data between the header A and the trailer B. The network stack  may send the restructured packet to network driver(s)  to enable the network driver(s)  to send the directly accessed data to the requesting device.","Referring to , a diagram illustrating an efficient and reliable mechanism for transferring data via a network according to an example embodiment is provided. In the example embodiment of , the applications module  may function\/operate as a server such as, for example, a web server (e.g., a HTTP server). In the example embodiment of , an apparatus  may receive a request for data from a device such as, for example, communication device . In this example embodiment, the requested data may, but need not, relate to a file, for example. However, the requested data may relate to any other suitable data. In this example, the requesting device may send a request such as, for example, an HTTP GET request to the apparatus .","The network stack  may receive the request from the requesting device (e.g., communication device ) and may send the request to the applications module . See operation . In response to receipt of the request, the applications module  may generate a message (e.g., a packet(s) (e.g., a packet(s) of  or A)) indicating the location of the requested data and may send this message to the network stack . See operation . The message generated by the applications module  may indicate that the location of the requested data (e.g., a file) is in the file system(s) . As such, the network stack  may directly access the corresponding file from the file system(s) . See operation . In an example embodiment, in an instance in which the network stack  may access the file, the file system(s)  may copy the corresponding file and send the copied file to the network stack . See operation . In response to receipt of the copied file, the network stack  may, but need not, generate another copy of the file and may send this copied file to the network driver(s)  to enable the network driver(s)  to send the copied file to the requesting device (e.g., communication device ). See operation .","In an alternative example embodiment, a direct memory access (DMA) device controlled by the network driver(s)  may communicate directly with the file system(s)  to read and retrieve the data such as, for example, the file without copying the file, in response to the network stack  sending a message to the network driver  indicating that the location of requested data is in the file system(s) . As such, the network driver(s)  may send the data retrieved by the DMA to the requesting device (e.g., communication device ). In this alternative example embodiment, the apparatus  may enable the requested data to be retrieved and sent to the requested device by the network driver(s)  without copying the requested data (e.g., the file).","Referring now to , a diagram illustrating an efficient and reliable mechanism for transferring data via a network according to an example embodiment is provided. In the example embodiment of , the applications module  may function\/operate as a server such as, for example, a web server (e.g., a HTTP server). In the example embodiment of , an apparatus  may receive a request for data from a device such as, for example, communication device . The requested data may, but need not, relate to media information, for example. However, the requested data may relate to any other suitable data without departing from the spirit and scope of the invention. The requesting device requesting the media information may send a request such as, for example, a HTTP GET request to the apparatus .","The request (e.g., HTTP GET request) may be received from the requesting device by the network stack  which may send the request to the applications module . See operation . In this regard, the applications module  may send the file system(s)  a message indicating that the applications module  would like to get or obtain the location of the requested media information. See operation . In response to receipt of the message from the applications module , the file system(s)  may send a message to the applications module  indicating the location of the requested media information (also referred to herein as file location). See operation . In the example embodiment of , the file system(s)  may include information in the message indicating that the requested media information is located on a hard disk of the media driver(s) . In response to receipt of the message from the file system(s)  indicating the location of the requested media information, the applications module  may generate a message and may send the message to the network stack  indicating the location of the requested media information. See operation . The message may correspond to a packet(s) including direct access information (e.g., packet(s) of  or A). In this regard, the network stack  may send a message to the network driver(s)  indicating the location of the requested media information for direct access by the network driver(s) . See operation . In this manner, the network driver(s)  may directly access and read the requested media information of the hard disk of the media driver(s) . See operation . In response to reading and accessing the requested media information from the hard disk of the media driver(s) , the network driver(s)  may send the requested media information to the requesting device (e.g., communication device ). Since the network driver(s)  of the example embodiment of  may read the file data directly from the media driver(s) , the example embodiment of the apparatus  of  may not need to copy the requested media information. In this regard, processing resources and\/or memory capacity resources of the apparatus  may be conserved and the apparatus  may operate more efficiently.","Referring now to , an example embodiment of a flowchart for providing an efficient and reliable manner for transferring data via a network is provided. At operation , an apparatus (e.g., applications module ) may receive a request (e.g., an HTTP GET request) for data (e.g., VNC data, a media file, an image(s), etc.) from a device (e.g., communication device ). At operation , an apparatus (e.g., applications module ) may enable provision of information to a network stack (e.g., network stack ). The information may include content indicating a location (e.g., a frame buffer associated with a display driver(s) , a memory of a file system(s) , etc.) of the requested data for direct access by the network stack or a network driver (e.g., network driver(s) ), in response to receipt of the request.","At operation , an apparatus (e.g., applications module ) may enable provision of the requested data to the network driver, or enable the network driver to retrieve the requested data, based at least in part on the indicated location of the requested data. Optionally, at operation , an apparatus may facilitate sending of the requested data to the device (e.g., communication device ), via the network driver.","It should be pointed out that  is a flowchart of a system, method and computer program product according to some example embodiments of the invention. It will be understood that each block of the flowchart, and combinations of blocks in the flowchart, can be implemented by various means, such as hardware, firmware, and\/or a computer program product including one or more computer program instructions. For example, one or more of the procedures described above may be embodied by computer program instructions. In this regard, in some example embodiments, the computer program instructions which embody the procedures described above are stored by a memory device (for example, memory device , memory ) and executed by a processor (for example, processor , processor , applications module ). As will be appreciated, any such computer program instructions may be loaded onto a computer or other programmable apparatus (for example, hardware) to produce a machine, such that the instructions which execute on the computer or other programmable apparatus cause the functions specified in the flowchart blocks to be implemented. In some example embodiments, the computer program instructions are stored in a computer-readable memory that can direct a computer or other programmable apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instructions which implement the function(s) specified in the flowchart blocks. The computer program instructions may also be loaded onto a computer or other programmable apparatus to cause a series of operations to be performed on the computer or other programmable apparatus to produce a computer-implemented process such that the instructions which execute on the computer or other programmable apparatus implement the functions specified in the flowchart blocks.","Accordingly, blocks of the flowchart support combinations of means for performing the specified functions. It will also be understood that one or more blocks of the flowchart, and combinations of blocks in the flowchart, can be implemented by special purpose hardware-based computer systems which perform the specified functions, or combinations of special purpose hardware and computer instructions.","In some example embodiments, an apparatus for performing the method of  above may comprise a processor (for example, the processor , the processor , the applications module ) configured to perform some or each of the operations (-) described above. The processor may, for example, be configured to perform the operations (-) by performing hardware implemented logical functions, executing stored instructions, or executing algorithms for performing each of the operations. Alternatively, the apparatus may comprise means for performing each of the operations described above. In this regard, according to some example embodiments, examples of means for performing operations (-) may comprise, for example, the processor  (for example, as means for performing any of the operations described above), the applications module , the processor  and\/or a device or circuitry for executing instructions or executing an algorithm for processing information as described above.","Many modifications and other embodiments of the inventions set forth herein will come to mind to one skilled in the art to which these inventions pertain having the benefit of the teachings presented in the foregoing descriptions and the associated drawings. Therefore, it is to be understood that the inventions are not to be limited to the specific embodiments disclosed and that modifications and other embodiments are intended to be included within the scope of the appended claims. Moreover, although the foregoing descriptions and the associated drawings describe example embodiments in the context of certain example combinations of elements and\/or functions, it should be appreciated that different combinations of elements and\/or functions may be provided by alternative embodiments without departing from the scope of the appended claims. In this regard, for example, different combinations of elements and\/or functions than those explicitly described above are also contemplated as may be set forth in some of the appended claims. Although specific terms are employed herein, they are used in a generic and descriptive sense only and not for purposes of limitation."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["Having thus described the invention in general terms, reference will now be made to the accompanying drawings, which are not necessarily drawn to scale, and wherein:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIGS. 7A & 7B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 8A & 8B"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
