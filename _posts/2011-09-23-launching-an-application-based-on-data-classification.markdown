---
title: Launching an application based on data classification
abstract: Apparatus and methods provide control of the launching of an application based on data classification relative to one of a plurality of workspaces of a system. The apparatus can include operations, with respect to applications that conduct file access, to force generation of a prompt, prior to the application being launched, to receive a signal corresponding to the file access related to selection of a particular workspace, where the workspace is arranged in a structure to provide security to the plurality of workspaces. Additional apparatus, systems, and methods are disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08959451&OS=08959451&RS=08959451
owner: BlackBerry Limited
number: 08959451
owner_city: Waterloo, Ontario
owner_country: CA
publication_date: 20110923
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION(S)","BACKGROUND","DETAILED DESCRIPTION"],"p":["This application claims the benefit of priority under 35 U.S.C. 119(e) to U.S. Provisional Patent Application Ser. No. 61\/386,303 filed 24 Sep. 2010, which is incorporated herein by reference in its entirety.","Electronic systems can be arranged to operate on data using applications that can modify the data. To provide flexibility, electronic systems can be arranged to segregate data into groups and operate separately on the segregated data, allowing the electronic device to be operational in different environments rather than using two separate electronic devices. The segregated data can be arranged according to different criteria, depending on the multiple uses of the electronic device. Improvements to the electronic management of data and data files in an electronic device can enhance the capability of the electronic device to manage different tasks in an efficient and timely manner.","The following detailed description refers to the accompanying drawings that show, by way of illustration and not limitation, details and embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice embodiments of the invention. Other embodiments may be utilized and structural, logical, and electrical changes may be made without departing from the inventive subject matter. The various embodiments disclosed herein are not necessarily mutually exclusive, as some embodiments can be combined with one or more other embodiments to form new embodiments. The following detailed description is, therefore, not to be taken in a limiting sense.","Systems that manage storage, access, manipulation, display of data, or combinations thereof may include various apparatus such as computer systems or other systems having hardware, software, and\/or hardware and software to control electronic and\/or optical apparatus. In various embodiments, a personal computer (PC) can be configured to manage the launching of applications based on data classification relative to a plurality of workspaces. The plurality of workspaces can be arranged as partitioned workspaces in which data files in each workspace are operated upon separately such that data is prevented from being moved among the plurality of partitioned workspaces. A personal computer, as is generally known, herein refers to computing devices having an operating system (OS) such that use of the personal computer may be conducted by individuals having little or no knowledge of the basics of the underlying hardware and software that operate the PC and whose operation may be conducted without individuals typically authoring computer programs to operate the computer. Portable computers may include portable personal computers. An example of a portable PC is a laptop computer or notebook computer that typically has a display screen, keyboard, underlying hardware and software, and a display pointing device that are all integrated in a housing that can easily be carried by an individual. Electronic tablets also provide the capabilities of a personal computer in a convenient portable structure. Some personal digital assistants (PDAs) may be viewed as a type of portable computer. In various embodiments, a PC may include instrumentality to operate as a wireless server. A wireless server is a server configuration that communicates with an entity over a channel established by the entities in a wireless network.","Other devices, such as mobile wireless communication devices, can be implemented to manage the launching of applications based on data classification within each mobile wireless communication device. The mobile wireless communications devices may include, but are not limited to, mobile telephones, portable computers, electronic tablets, PDAs, and other devices that may be conveniently carried by a user and provide wireless communication. Mobile telephones include wireless communication devices that have generally been referred to as cell phones. Mobile telephones may include phones capable of providing functionality of a personal computer, which portable phones may be referred to as smart phones.","Various instrumentalities can be realized in hardware implementations, software implementations, and combinations of hardware and software implementations. Some portions of the instrumentalities may be described in terms of algorithms and symbolic representations of operations on data bits within a machine memory. An algorithm is herein, and generally taken, to be a self-consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. The instrumentality may operate to process, compute, calculate, determine, display, and\/or conduct other activities correlated to processes of a machine, such as a computer system or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the machine's registers and memories into other data similarly represented as physical quantities within the machine memories or registers or other such information storage, transmission, or display devices. The instrumentality may provide personalized capabilities, provide a pathway to other content, or combinations thereof. The instrumentality may use distributed applications, different numbers and types of software based components that couple two or more applications to enable data transfer between the applications, hardware to provide services from a number of different sources, and may be realized on a variety of platforms such as servers and content management systems. The instrumentality may include or provide access to subroutine code, code libraries, application program interfaces such as interpreters utilizing Java EE\u2122, Simple DirectMedia Layer\u2122 (SDL) and DirectX\u2122, combinations thereof, or other such electronic based functionalities.","Files and applications that access the files can be classified according to a workspace in which the files and\/or applications are restricted. The workspace can be one of a plurality of partitioned workspaces in which each workspace is separate from each of the other workspaces such that a tightly-controlled set of resources for controlling entities such as, but not limited to, data files, network connections, and hardware and running applications that access the entities in the workspace provides a security mechanism for separating the launching and running of programs and entities in the different workspaces. Each such a workspace is generally referred to as a sandbox. Rule sets can be implemented to provide full control over what processes are started, spawned (by other applications), allowed to access entities such as, but not limited to, data files, network connections, and hardware, or allowed to inject code into other applications. Sandboxing provides a security system where data is prevented from movement between the different areas.","In an integrated sandbox model, there can be multiple modes or workspaces. An application running in one sandbox can access entities such as, but not limited to, data files, network connections, and hardware in the sandbox in which it is running, but can be restricted from accessing and operating on entities such as, but not limited to, data files, network connections, and hardware in another sandbox. In an embodiment, a single user interface (UI) can be constructed as an operating unit on top of an access control system. A user interface is a system component by which a user can interact with the system, where the system is a machine that typically includes a number of components that may be integrated or distributed. The user interface can include hardware and software components. The user interface can provide a mechanism for generating signals that generate input to the system, allowing users to utilize, manipulate, or manage the system to some degree. The user interface can provide a mechanism for generating signals that generate output from the system, allowing the system to indicate the effects of the operation of the system, which can include the effects of user input to some degree.","In various situations, different data files may be securely separated in different sandboxes, though an application may separately operate on the different data files in the different sandboxes without accessing data files outside the sandbox in which the application is running. Thus, associated with using a single user interface for multiple sandboxes is an issue as to which sandbox an application is to be launched. This issue arises because it is generally at a data or file level that some resource is flagged as falling into, or being restricted to, a sandbox. For example, the system may be partitioned into two workspaces (as secure workspaces, i.e., sandboxes) such as a corporate sandbox and a personal sandbox. The data and files in the corporate sandbox can be strictly controlled from applications or programs running the personal sandbox. This secure separation provides a security mechanism that allows a system to operate in numerous modes. The establishment of a secure separation to provide a security mechanism that allows a system to operate in numerous modes is not limited to two sandboxes and can be implemented for three or more sandboxes.","In a single user interface arrangement, icons can be displayed on a ribbon, where each icon represents a different application. An icon provides an access point to launch its respective application by selecting the icon using a selection mechanism of the user interface. When an application is launched from the icon on the ribbon in an integrated sandbox model, if the application is dedicated to a single data file or group of data files that are located in a single sandbox, then the application is placed and launched in the sandbox corresponding to the data files to which it is dedicated. If the application is not dedicated to data files in a single sandbox, the issue becomes in which sandbox to place and launch the application.","In an embodiment, for all applications that use file access or any resource that can be sandboxed (such as network connections, processors, memory chips, or other devices), prior to launching such applications, each application can be forced to prompt the user for a selection activity. A file chooser component can be activated to generate a prompt to make a selection. The file chooser component can be structured as a trusted system component that is able to view files in all sandboxes. The view and\/or access to these files can be total access, read only, file name and path mode only, other viewing and\/or access modes, or combinations thereof. With the files identified in all the sandboxes, a selector component for operation at the user interface can be activated that enables display of files to be accessed and\/or sandboxes to be accessed by the application for user selection. For example, prior to the application being launched, a user can be prompted with a File Chooser\/Explorer\/Selector UI component. A non-limiting example of an execution flow includes execution of the icon from its ribbon to a file chooser to a launched application. The application can be placed in the proper sandbox based on the type of file selected relative to a data classification as being tagged to a particular sandbox.","In various embodiments, an open application that is running on a system can be forced to a selection process prior to operating on a file that the open application has not opened in its current running mode. The file chooser component of a system can be exposed through an application programming interface (API) to allow an open application to perform the following tasks at runtime: create new and open another file or delete. In both cases, the file chooser system component can be launched prior to creating a new file or prior to opening another file. If a file in the sandbox of the calling application sandbox is selected, the file can be opened in the existing application process. If a different sandbox is selected in response to being prompted to make a selection by activating the file chooser component, the system can be structured to select one of various processes in response to the selection. With the selection of a different sandbox, the system can launch a new application in the sandbox of the target file. This new application can be realized as a new instance of the open application. With the selection of a different sandbox, the system can stay the existing process in its sandbox and move the target file to the sandbox of the open application, if stored system parameters for the target file and the respective sandboxes permit such a move. With the selection of a different sandbox, the system can change the processes of the open application to the new file in the sandbox of the new file. The selection of the process used in response to the selection can be set as an operating parameter in system memory. In addition, the selection of the process used in response to the selection can be realized according to a rule set that can be alternated, where the rule set may consider various system operating parameters.","In various embodiments, a data classification assigning a sandbox to the data, or data to a sandbox, can be implemented and individual application instances can be segregated based on the sandbox classification of the data that the individual applications are accessing. The individual application segregation based on such data classification can be realized through implementation of a single user interface. An individual application can reside in a single sandbox but can appear in all sandboxes that contain files operated on or managed by the individual application through implementation of a file chooser component configured similar or identical as discussed herein. Alternatively, each sandbox containing data files operated on or managed by an individual application may contain an instance of the individual application that can be viewed by a file chooser component of a system.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":["100","105","110","1","110","110","1","110","110","1","110","110","1","110"]},"Data files and applications can reside in each workspace. For example, workspace - can include data files -- . . . --R and applications -- . . . --L and workspace -N can include data files -N- . . . -N-P and applications -N- . . . -N-K. Workspace - and workspace -N can have a different number of data files and a different number of applications assigned to operate in the respective workspaces. Applications -- . . . --L may be different from applications -N- . . . -N-K or one or more of applications -- . . . --L may be different instances of the same respective applications as applications -N- . . . -N-K. For instance, a word processing application may reside as different instances of the same word processing application in both workspace - and workspace -N or other workspaces in the plurality of workspaces - . . . -N. However, an application in one workspace views or provides a view in user interface  of corresponding files in the same workspace and does not view or provide a view in user interface  of all the files across the full device. The application only views or provides a view in user interface  of files within its domain within its workspace, i.e., sandbox. Residing in different workspaces, different instances of the same base application can be provisioned with different permissions depending on the workspace in which it operates.","File chooser component  can be arranged as part of an access control system . Alternatively, file chooser component  can be configured as a separate entity in system . File chooser component  can be arranged with user interface  to launch an application that corresponds to one of icons - . . . -R that is selected or activated on ribbon  in interface . The activation of one of icons - . . . -R can be monitored such that a signal generated from the selection of the icon can be intercepted or used to activate file chooser component  prior to launching the application corresponding to the activated icon. In response to the icon activation, file chooser component  can generate to user interface an identification of all the files in workspaces - . . . -N and their corresponding workspaces to user interface  with a prompt for selection of the appropriate file to be accessed by the application corresponding to the selected icon. Upon determining selection of the target file to be accessed, the icon-identified application can be launched in the workspace corresponding to the selected file. If the selected icon represents a target file, file chooser component  can be launched to prompt the user interface with the file and workspace data of all files for user selection to allow operation of the application on the file in a desired workspace.","File chooser component  can be arranged to monitor commands in open applications that deal with accessing data files. For example, many applications provide a create new file (new, open new file, or similar nomenclature) command and\/or an open another file (open or other similar nomenclature) when the respective application is open and running. File chooser component  can be configured to response to a create new file command and\/or an open another file command prior to the calling application being launched with respect to a new file or another file. With respect to a new file command, file chooser component  can prompt user interface  with identification of workspaces in which a new file can be created and tagged with the classification of the workspace selected. Upon selection of the workspace, the calling application or another instance of the calling application can be launched, depending on the relationship of the workspace of the calling application and the selected workspace, in the selected workspace with respect to the new file generated. With respect to an open another file command, file chooser component  can prompt user interface  with identification of all files in all workspaces, where the identification may include identification of the corresponding workspace. Upon selection of the file and hence its workspace, the calling application or another instance of the calling application can be launched, depending on the relationship of the workspace of the calling application and the workspace of the selected file, in the workspace of the selected file to be opened.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2","b":["200","210","220","230"]},"The file selection command in the open application can include a create new file command or an open another file command. For an open another file command, method  can include: launching a file chooser component in response to receipt of the open another file command; providing, using the file chooser component, an identification of each file in each accessible workspace of the plurality of workspaces to the user interface with a prompt to select one of the files; if a signal representing selection of a file in response to the prompt to select one of the files indicates the selected file is in the workspace in which the open application exists, opening the selected file in the open application; and if the signal representing selection of the file in response to the prompt to select one of the files indicates the selected file is in a different workspace from the workspace in which the open application exists, launching a new instance of the application in the accessible workspace in which the selected file exists or moving the existing open application to the accessible workspace in which the selected file exists or, if allowed by policy, moving the selected file to the current workspace.","For a create new file command, method  can include: launching a file chooser component in response to the create new file command; providing, using the file chooser component, an identification of each accessible workspace of the plurality of workspaces to the user interface with a prompt to select one of the accessible workspaces; if a signal representing selection of an accessible workspace in response to the prompt to select one of the accessible workspaces indicates the selected accessible workspace is the workspace in which the open application exists, opening the new file in the open application; and if a signal representing selection of the accessible workspace in response to the prompt to select one of the accessible workspaces indicates the selected accessible workspace is different from the workspace in which the open application exists, launching a new instance of the application in the selected accessible workspace or moving the existing open application to the selected accessible workspace.","The signal representing receipt of the selection of an application can include a signal representing receipt of a selection of an icon representing the application. With respect to selection of an icon representing an application, method  can include: launching a file chooser component in response to the signal representing receipt of the selection of the icon; providing, using the file chooser component, an identification of each file in each accessible workspace of the plurality of workspaces to the user interface with a prompt to select one of the files; and opening the application in the accessible workspace to which the selected file is assigned.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3","b":["300","310","320","330","330"]},"Various embodiments or combination of embodiments for apparatus and methods for a system, such as a PC, a mobile device, such as a mobile wireless communications device, and\/or other computing device to manage execution of applications based on data classification of the data on which the applications are selected to operate, such as being launched based on data classification, as described herein, can be realized in hardware implementations, software implementations, and combinations of hardware and software implementations. The data classification can be realized by tagging a data file to one of a plurality of partitioned workspaces, which is a plurality of workspaces partitioned such that each workspace is separate from the other workspaces, where data is prevented from movement between the different workspaces. These implementations may include a machine-readable device having machine-executable instructions, such as a computer-readable device having computer-executable instructions, for operating a system having workspaces partitioned to provide a secure mechanism for operating on data files separately in each workspace. The machine-readable device is not limited to any one type of device. Machine-readable storage devices may include, but are not limited to, solid-state memories, optical devices, and magnetic devices. Non-limiting examples of machine-readable storage devices include, but are limited to, hard disks, removable magnetic disks, removable optical disks (e.g., compact disks and digital video disks), magnetic cassettes, memory cards, memory sticks, Random Access Memories (RAMs), Read Only Memories (ROMs), and other storage devices.","In various embodiments, a machine-readable storage device stores instructions, which when the instructions are executed by a processor, cause the machine to perform operations comprising: monitoring signals in a system under control of the processor; upon detection of a signal representing receipt of a selection of an application from a user interface of the system and prior to launching the application, generating a first prompt to a display to receive an input representing a selection of one of a first plurality of partitioned workspaces in the system, the partitioned workspaces of the first plurality configured such that data is prevented from moving between different partitioned workspaces, and receiving, at the user interface, a signal representing the selection in response to the first prompt; and upon detection of a signal representing receipt of a file selection command in an open application in a partitioned workspace of a second plurality of partitioned workspaces, the partitioned workspaces of the second plurality configured such that data is prevented from moving between different partitioned workspaces, and prior to executing the file selection command in the open application, generating a second prompt to the display to receive an input representing a selection of a file from a set of files including a file assigned to a partitioned workspace that is different from the workspace of the open application, and receiving, at the user interface, a signal representing the selection in response to the second prompt.","The file selection command in the open application can include a create new file command or an open another file command. For an open another file command, the instructions can include instructions to: launch a file chooser component in response to receipt of the open another file command; provide, using the file chooser component, an identification of each file in each accessible workspace of the plurality of workspaces to the user interface with a prompt to select one of the files; if a signal representing selection of a file in response to the prompt to select one of the files indicates the selected file is in the workspace in which the open application exists, opening the selected file in the open application; and if the signal representing selection of the file in response to the prompt to select one of the files indicates the selected file is in a different workspace from the workspace in which the open application exists, launch a new instance of the application in the accessible workspace in which the selected file exists or move the existing open application to the accessible workspace in which the selected file exists or, if allowed by policy, move the selected file to the current workspace.","For a create new file command, the instructions can include instructions to: launch a file chooser component in response to the create new file command; provide, using the file chooser component, an identification of each accessible workspace of the plurality of workspaces to the user interface with a prompt to select one of the accessible workspaces; if a signal representing selection of an accessible workspace in response to the prompt to select one of the accessible workspaces indicates the selected accessible workspace is the workspace in which the open application exists, open the new file in the open application; and if a signal representing selection of the accessible workspace in response to the prompt to select one of the accessible workspaces indicates the selected accessible workspace is different from the workspace in which the open application exists, launch a new instance of the application in the selected accessible workspace or move the existing open application to the selected accessible workspace.","The signal representing receipt of the selection of an application can include a signal representing receipt of a selection of an icon representing the application. With respect to the signal representing receipt of the selection of an icon representing an application, instructions can include instructions to: launch a file chooser component in response to the signal representing receipt of the selection of the icon; provide, using the file chooser component, an identification of each file in each accessible workspace of the plurality of workspaces to the user interface with a prompt to select one of the files; and open the application in the accessible workspace to which the selected file is assigned.","In various embodiments, a machine-readable storage device can store instructions, which when the instructions are executed by a processor, cause the machine to perform operations comprising: activating a file chooser component in a system under control of a processor in response to receipt of a signal representing a selection of an application in a user interface or in response to receipt of a signal representing a file selection command in the user interface; determining a plurality of partitioned workspaces in a memory of the system or accessible files assigned to each partitioned workspace or both the plurality of partitioned workspaces and the accessible files, the determination conducted using the file chooser component; generating a prompt to the user interface for receipt of a signal representing a selection associated with the plurality of partitioned workspaces; and in response to the receipt of the signal representing the selection, launching the application or launching an open application corresponding to the file selection command. The file chooser component can be activated in response to detection of a signal activating an icon representing the application, and generating the prompt to the user interface can include displaying the accessible files assigned to each partitioned workspace of the plurality. The file chooser component can be activated in response to receipt of a new file command in an open application, and generating the prompt to the user interface can include displaying each partitioned workspace of the plurality. The file chooser component can be activated in response to receipt of an open another file command in an open application, and generating the prompt to the user interface can include displaying the accessible files assigned to each partitioned workspace of the plurality. The identified accessible files in a partitioned workspace can be all the data files in the workspace. Depending on permissions for an authorized user or for an application, the accessible files in a workspace can be less than all the data files in the workspace.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 4","b":["400","455","475","400","477","485","465","465","400","465","465","455","465","485","475","485","495","465","495","455","475","455"]},"Controller , memory system , display , electronic apparatus , and peripheral devices  can be arranged to manage execution of applications based on data classification of the data on which the applications are selected to operate in system . Memory system  can be arranged as a number of different types of memory in which workspaces can be logically defined providing a plurality of partitioned workspaces. Memory system  can include logic to operate these partitioned workspaces as separate workspaces using an integrated sandbox model that provides a security mechanism in which data is prevented from moving from one workspace to another workspace. In addition, applications, which access and operate on the data, function within the workspace in which the data resides. This relationship between data and partitioned workspace provides a classification tag for the data that can be used when launching applications relative to the data. In various embodiments, a method and associated system components include reviewing data and\/or data files, assigning the data and\/or data files to one of a plurality of partitioned workspaces, and generating a data classification based on assigning the data and\/or data files to the respective partitioned workspace. The partitioned workspaces can be controlled according to an integrated sandbox model of a plurality of sandboxes.","In various embodiments, system  can be realized as a number of electronic systems. System  can be arranged as a mobile device. The mobile device can be a mobile wireless communications device. System  can be arranged as a PC. The PC can include instrumentality distributed throughout the PC to operate as a wireless server. System  can be arranged as an electronic tablet. System  can be arranged as any device that manages storage, access, manipulation, and display of data in which a plurality of workspaces are controlled as a plurality of partitioned workspaces in which data is stored and operated on within a workspace with a security mechanism that the data is prevented from moving from one workspace to another workspace. In such an arrangement, system  is configured in an integrated sandbox model with an additional parameter that data files are classified according to the workspace in which the data files reside. System  is configured to launch applications that access data based on the data classification associated with the plurality of partitioned workspaces of the integrated sandbox model. This data classification provides a mechanism for system  to prompt file selection based on identification of the appropriate workspace in which to launch the application to operate on the selected file prior to launching the application.","In various embodiments, a system, similar to or identical to systems described herein, can be realized as a mobile wireless communications device or an electronic tablet with a memory having two or more partitioned workspaces in which applications run separate from each other in these workspaces, where data is prevented from movement between the different areas. Such mobile wireless communications devices or electronic tablets can operate as having an integrated sandbox model having a plurality of sandboxes. For example, the set of workspaces can include a corporate space and a personal space, where, although on a single device, these workspaces can be fully separated. With this configuration data can be classification as belonging to a corporate workspace (or corporate sandbox), belonging to a personal workspace (or personnel sandbox), or belonging to some other workspace implemented as a secure separate workspace in the system. The system is not limited to implementation in a mobile wireless communications device or electronic tablet and can be implemented in personal computers and other computing devices.","In various embodiments, for launching an application, a file can be selected according to the sandbox in which the file resides. A system can be arranged to derive file selection such that the system can handle launching of the application according to the sandbox attributed to the selected file.","In various embodiments, an example embodiment of a system controls launching applications in the system based on data classifications. The data classification can be generated as assignments of data files to respective workspaces in a plurality of workspaces such that data is prevented from moving between the partitioned workspaces. The system can include a processor, a memory operably coupled to the processor, a display to operate a user interface, and a file chooser component such that the processor, the memory, the display, the user interface, and the file chooser component can be configured to: monitor signals in a system under control of the processor; upon detection of a signal representing receipt of a selection of an application from the user interface of the system and prior to launching the application, generate a first prompt to the display to receive an input representing a selection of one of a first plurality of partitioned workspaces in the system, the partitioned workspaces of the first plurality configured such that data is prevented from moving between different partitioned workspaces, and receive, at the user interface, a signal representing the selection in response to the first prompt; and upon detection of a signal representing receipt of a file selection command in an open application in a partitioned workspace of a second plurality of partitioned workspaces, the partitioned workspaces of the second plurality configured such that data is prevented from moving between different partitioned workspaces, and prior to executing the file selection command in the open application, generate a second prompt to the display to receive an input representing a selection of a file from a set of files including a file assigned to a partitioned workspace that is different from the workspace of the open application, and receive, at the user interface, a signal representing the selection in response to the second prompt.","The file selection command in the open application can include a create new file command or an open another file command. The processor, the memory, the display, the user interface, and the file chooser component can be configured to: launch the file chooser component in response to receipt of the open another file command; provide, using the file chooser component, an identification of each file in each accessible workspace of the plurality of workspaces to the user interface with a prompt to select one of the files; if a signal representing selection of a file in response to the prompt to select one of the files indicates the selected file is in the workspace in which the open application exists, open the selected file in the open application; and if the signal representing selection of the file in response to the prompt to select one of the files indicates the selected file is in a different workspace from the workspace in which the open application exists, launch a new instance of the application in the accessible workspace in which the selected file exists or move the existing open application to the accessible workspace in which the selected file exists or, if allowed by policy, move the selected file to the current workspace.","The processor, the memory, the display, the user interface, and the file chooser component can be configured to: launch the file chooser component in response to the create new file command; provide, using the file chooser component, an identification of each accessible workspace of the plurality of workspaces to the user interface with a prompt to select one of the accessible workspaces; if a signal representing selection of an accessible workspace in response to the prompt to select one of the accessible workspaces indicates the selected accessible workspace is the workspace in which the open application exists, open the new file in the open application; and if a signal representing selection of the accessible workspace in response to the prompt to select one of the accessible workspaces indicates the selected accessible workspace is different from the workspace in which the open application exists, launch a new instance of the application in the selected accessible workspace or move the existing open application to the selected accessible workspace.","The signal representing receipt of the selection of an application can include a signal representing receipt of a selection of an icon representing the application. The processor, the memory, the display, the user interface, and the file chooser component can be configured to: launch the file chooser component in response to the signal representing receipt of the selection of the icon; provide, using the file chooser component, an identification of each file in each accessible workspace of the plurality of workspaces to the user interface with a prompt to select one of the files; and open the application in the accessible workspace to which the selected file is assigned.","In various embodiments, an example embodiment of a system controls launching applications in the system based on data classifications. The data classification can be generated as assignments of data files to respective workspaces in a plurality of workspaces such that data is prevented from moving between the partitioned workspaces. The system can include a processor, a memory operably coupled to the processor, a display to operate a user interface, a file chooser component such that the processor, the memory, the display, the user interface, and the file chooser component can be configured to: activate the file chooser component under control of the processor in response to receipt of a signal representing a selection of an application in a user interface or in response to receipt of a signal representing a file selection command in the user interface; determine a plurality of partitioned workspaces in a memory of the system or accessible files assigned to each partitioned workspace or both the plurality of partitioned workspaces and the accessible files, the determination conducted using the file chooser component; generate a prompt to the user interface for receipt of a signal representing a selection associated with the plurality of partitioned workspaces; and in response to the receipt of the signal representing the selection, launch the application or launch an open application corresponding to the file selection command.","The file chooser component can be configured to be activated in response to detection of a signal activating an icon representing the application and configured to generate the prompt to the user interface to include displaying the accessible files assigned to each partitioned workspace of the plurality. The file chooser component can be configured to be activated in response to receipt of a new file command in an open application and configured to generate the prompt to the user interface to include displaying each partitioned workspace of the plurality. The file chooser component can be configured to be activated in response to receipt of an open another file command in an open application and configured to generate the prompt to the user interface to include displaying the accessible files assigned to each partitioned workspace of the plurality.","Various systems can be implemented similar to or identical to systems associated with . Various systems can be implemented similar to or identical to systems configured to operate in accordance with methods associated with . Features of the various methods and systems discussed herein may be interchanged in accordance with the teachings provided herein.","Although specific embodiments have been illustrated and described herein, it will be appreciated by those of ordinary skill in the art that any arrangement that is calculated to achieve the same purpose may be substituted for the specific embodiments shown. It is to be understood that the above description is intended to be illustrative, and not restrictive, and that the phraseology or terminology employed herein is for the purpose of description. Combinations of the above embodiments and other embodiments will be apparent to those of skill in the art upon studying the above description."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
