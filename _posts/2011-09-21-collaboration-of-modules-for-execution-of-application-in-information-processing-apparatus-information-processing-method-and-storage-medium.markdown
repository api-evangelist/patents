---
title: Collaboration of modules for execution of application in information processing apparatus, information processing method, and storage medium
abstract: An information processing apparatus includes an application and functional modules configured to collaborate with each other to provide an application function of the application. Each of the functional modules operates as a requester that requests a provider function and a provider that provides the provider function requested by the requester. Each of the functional modules includes a function availability query unit that, at the requester, queries the provider about whether the requested provider function is available, a function availability response unit that, at the provider, sends a response indicating whether the requested provider function is available to the requester, and a function execution determining unit that, at the requester, controls execution of a requester function of the requester based on the response sent from the function availability response unit.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08745623&OS=08745623&RS=08745623
owner: Ricoh Company, Ltd.
number: 08745623
owner_city: Tokyo
owner_country: JP
publication_date: 20110921
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The present application is based upon and claims the benefit of priority of Japanese Patent Application No. 2010-231950, filed on Oct. 14, 2010, the entire contents of which are incorporated herein by reference.","1. Field of the Invention","An aspect of this disclosure relates to an information processing apparatus, an information processing method, and a storage medium.","2. Description of the Related Art","In a typical software environment of an information processing apparatus, an application provides functions (application functions) to a user using multiple program modules (hereafter called functional modules) that provide basic (small or lower-level) functions. That is, an application function is implemented through the collaboration among functional modules.","In such a software environment, when the design or specification is changed, it is often necessary to change multiple functional modules that are affected by the change. Therefore, when changed (or updated) functional modules are installed (or replaced with original functional modules) in a software environment that has been released or marketed, it is necessary to manage combinations of functional modules based on their versions to prevent failure or malfunction resulting from invalid combinations of the functional modules.","For example, Japanese Laid-Open Patent Publication No. 2007-304639 discloses a technology where software configuration information on functional modules is registered in a database and an installer is generated based on the software configuration information to manage combinations of the functional modules to be installed.","With related-art technologies, however, even when one functional module is changed, it is necessary to also change other functional modules, which are to be used in combination with the changed functional module to provide an application function, according to the change made to the functional module. Also, with the technology disclosed in JP2007-304639, as the number of combinations of functional modules increases, the number of combinations registered in the software configuration information increases. This in turn makes it harder to manage the software configuration information itself and makes it difficult to maintain the consistency of the versions of the functional modules.","Thus, with the related-art technologies, software vendors (who provide functional modules) need to do complicated work in updating (or changing) and managing functional modules, and such complicated work may lead to errors.","In an aspect of this disclosure, there is provided an information processing apparatus including an application and functional modules configured to collaborate with each other to provide an application function of the application. Each of the functional modules operates as a requester that requests a provider function and a provider that provides the provider function requested by the requester. Each of the functional modules includes a function availability query unit that, at the requester, queries the provider about whether the requested provider function is available, a function availability response unit that, at the provider, sends a response indicating whether the requested provider function is available to the requester, and a function execution determining unit that, at the requester, controls execution of a requester function of the requester based on the response sent from the function availability response unit.","Preferred embodiments of the present invention are described below with reference to the accompanying drawings.","<Hardware Configuration>",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":"100"},"As illustrated in , the information processing apparatus  includes an input unit , a display unit , a drive unit , a random access memory (RAM) , a read only memory (ROM) , a central processing unit (CPU) , an interface unit , and a hard disk drive (HDD)  that are connected to each other via a bus B.","The input unit  includes, for example, a keyboard and a mouse, and is used to input instructions (or operation signals) to the information processing apparatus . The display unit  displays, for example, processing results of the information processing apparatus .","The interface unit  connects the information processing apparatus  to a data communication channel such as a network. The information processing apparatus  can communicate with other apparatuses via the interface unit .","The HDD  is a non-volatile storage medium for storing various programs and data. For example, the HDD  stores basic software (e.g., an operating system such as Windows (trademark\/registered trademark) or UNIX (trademark\/registered trademark)) for controlling the entire information processing apparatus , and applications that run on the operating system and provide various functions (e.g., screen customization function). The HDD  may manage the stored programs and data using a file system and\/or a database (DB).","The drive unit  is an interface between the information processing apparatus  and a removable storage medium . The information processing apparatus  can read and write data from and to the storage medium via the drive unit . Examples of the storage medium include a floppy (flexible) disk (FD), a compact disk (CD), a digital versatile disk (DVD), a secure digital (SD) memory card, and a universal serial bus (USB) memory.","The ROM  is a non-volatile semiconductor memory (storage unit) that can retain data even when the power is turned off. For example, the ROM  stores programs and data such as a basic input\/output system (BIOS) that is executed when the information processing apparatus  is turned on, and system and network settings of the information processing apparatus . The RAM  is a volatile semiconductor memory (storage unit) for temporarily storing programs and data. The CPU  loads programs and data from storage units (e.g., the HDD  and the ROM ) into the RAM  and executes the loaded programs to control the information processing apparatus  and to perform various functions.","With the above hardware configuration, the information processing apparatus  can provide various information processing functions (or services).","<Software Configuration>",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2","b":"100"},"As illustrated in , the information processing apparatus  includes an operating system (basic software) , a thread control unit , an interprocess communication (IPC) layer , a service layer , an application programming interface (API) , and an application .","The thread control unit  controls threads that are units of program execution (or units of CPU utilization). Accordingly, the OS  supports multithreading.","The IPC layer  controls interprocess communications. In other words, the IPC layer  controls data exchange between running programs.","The service layer  provides the application  with basic functions (functional modules) for implementing application functions. In other words, the application  provides application functions for a user using the basic functions. More specifically, the application  uses the basic functions provided by the service layer  via the API .","In the example illustrated in , the service layer  includes functional modules (may be called the functional module  or the functional modules  when distinction is not necessary) such as a Websys , a data encryption security service (DESS) , and a network control service (NCS) . The Websys is a functional module that implements a basic function for making various settings of the information processing apparatus  and for providing information on the information processing apparatus . The DESS is a functional module that implements a basic function for encrypting communications and data. The NCS is a functional module that implements a basic function for network control.","For example, the application  provides the user with an application function as described below using the Websys , the DESS) , and the NCS . Here, it is assumed that the application  is a Web browser. The application  calls the API  to request the Websys to set information for encrypted communications which is input via a graphical user interface (GUI) of the application . The Websys transfers the request to the DESS . Then, the DESS requests the NCS to set the input information for encrypted communications. The NCS accesses a storage area storing information items (or parameters) for encrypted communications and updates values of the corresponding information items with the input information for encrypted communications. Thus, an application function of the application  is provided through the collaboration of the functional modules  of the service layer .","With the above software configuration, the information processing apparatus  can provide various application functions.","<Information Processing Function>","An exemplary information processing function (or an execution control method) of the information processing apparatus  of this embodiment is described below.","In the information processing apparatus , the functional modules  collaborate with each other as described below to provide an application function. Here, for descriptive purposes, a functional module  that uses or requests a basic function (provider function) of another functional module  is called a requester functional module  (or simply a \u201crequester\u201d), and a functional module  that provides a basic function (provider function) to another functional module  is called a provider functional module  (or simply a \u201cprovider). The requester functional module  queries the provider functional module  about whether a requested provider function is available. When queried, the provider functional module  sends a response indicating whether the requested provider function is available. Based on the response, the requester functional module  controls execution of its basic function (requester function), i.e., determines whether to execute an original version of the requester function or an updated version of the requester function. In the information processing apparatus  of this embodiment, the functional modules  are executed or controlled as described above.","As described above, with the related-art technologies, software vendors need to do complicated work in updating and managing functional modules in an already-released software environment, and such complicated work may lead to errors.","To prevent or reduce problems with the related-art technologies, in the information processing apparatus  of this embodiment, the functional modules , which collaborate with each other to provide an application function, query each other to confirm \u201cfunction support status\u201d (e.g., whether the functional modules  support newly-introduced application functions).","This configuration makes it possible to easily manage combinations of the functional modules . That is, with the information processing apparatus  of this embodiment, even when one functional module  is changed, it is not necessary to change other functional modules , which collaborate with the changed functional module  to provide an application function, according to the change made to the changed functional module . Thus, this embodiment makes it possible to prevent the work of software vendors from being complicated even when the number of combinations of the functional modules  increases.","An exemplary functional configuration of the functional module  is described below.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 3","b":"17"},"As illustrated in , the functional module  includes a function execution control unit  and a function execution unit .","The function execution control unit  is a functional unit that controls execution of the functional module . The function execution unit  is a functional unit that executes or implements the basic function of the functional module . The function execution control unit  requests the function execution unit  to execute the basic function of the functional module .","The function execution control unit  includes a function availability response unit , a function availability query unit , an execution determining unit , a support level query unit , and a support level response unit .","In , it is assumed that a functional module is a requester functional module that requests a basic function of another functional module and a functional module is a provider functional module that provides the requested basic function.","The function availability response unit  is a functional unit that sends a response indicating whether a requested basic function (provider function) is available to a requester functional module. The function availability query unit  is a functional unit that queries a provider functional module about whether the requested provider function is available. In the example of , the function availability query unit  of the requester functional module queries the provider functional module about whether a requested provider function is available. When queried, the function availability response unit  of the provider functional module sends a response indicating whether the requested provider function is available.","The function availability response unit  includes a software interface for receiving a query about whether a requested provider function is available (or whether the provider function supports a newly-introduced application function). The function availability query unit  sends a query about the availability of the requested provider function to the function availability response unit  via the software interface and receives a response from the functional availability response unit  via the software interface.","The execution determining unit  is a functional unit that determines, based on the response received by the function availability query unit , whether to execute an original version of its basic function (requester function) that is not adapted for a newly-introduced application function of the application  or an updated version of the basic function (requester function) that is adapted for the newly-introduced application function. For example, when the response from the provider functional module indicates \u201cerror\u201d, the execution determining unit  of the requester functional module determines that the requested provider function is unavailable, i.e., the basic function of the provider functional module does not support the newly-introduced application function. Meanwhile, when the response from the provider functional module indicates \u201cavailable\u201d, the execution determining unit  of the requester functional module determines that the requested provider function is available, i.e., the basic function of the provider functional module supports the newly-introduced application function.","Based on the determination result, the function execution control unit  performs a process as described below. When the determination result is \u201cunavailable\u201d, the function execution control unit  of the requester functional module requests the function execution unit  of the same functional module to execute the original version of the requester function. Meanwhile, when the determination result is \u201cavailable\u201d, the function execution control unit  of the requester functional module requests the function execution unit  of the same functional module to execute the updated version of the requester function.","Thus, the requester functional module controls execution of the requester function based on whether the requested provider function is available from the provider functional module ","The support level query unit  is a functional unit that queries a provider functional module about function levels of the newly-introduced application function supported by the provider function. Meanwhile, the support level response unit  is a functional unit that sends a response indicating supported function levels of the newly-introduced application function to the requester functional module.","As described above, the requester functional module determines whether a requested provider function is available, i.e., whether the provider function of the provider functional module supports the newly-introduced application function, based on a response from the provider functional module . Here, it is more preferable to determine function levels of the newly-introduced application function supported by the provider function to more accurately determine the compatibility between the requester functional module and the provider functional module taking into account the history of design or specification changes and thereby to prevent errors.","For this reason, each of the functional modules  of this embodiment may further include definition information D including definition values that are used among the functional modules  to indicate supported function levels of the newly-introduced application function. In the example of , the definition information D of the requester functional module includes definition values \u201c1\u201d (level 1), \u201c2\u201d (level 2), and \u201c3\u201d (level 3) indicating that function levels A, B, and C of the newly-introduced application function are supported. Meanwhile, the definition information D of the provider functional module includes definition values \u201c1\u201d (level 1) and \u201c2\u201d (level 2) indicating that function levels A and B of the newly-introduced application function are supported. In this case, the requester functional module needs to control the execution of the requester function such that the requester function and the provider function collaborate with each other at the function levels A and B that are supported by both of the requester functional module and the provider functional module . For this reason, the requester functional module determines the function levels of the newly-introduced application function supported by the provider function of the provider functional module ","The support level query unit  of the requester functional module queries the provider functional module about the supported function levels (or the highest function level) of the newly-introduced application function. When queried, the support level response unit  of the provider functional module refers to the definition information D and sends a response including the definition values indicating the supported function levels of the newly-introduced application function to the requester functional module . Then, based on the response, the requester functional module determines the function levels (or the highest function level) of the newly-introduced application function supported by the provider functional module ","The support level response unit  includes a software interface for receiving a query about the supported function levels of the newly-introduced application function. The support level query unit  sends a query about the supported function levels of the newly-introduced application function to the support level response unit  via the software interface and receives a response indicating the supported function levels from the support level response unit  via the software interface. The support level query unit  operates only when the function availability query unit  receives a response indicating \u201cavailable\u201d from the function availability response unit .","Based on the response received by the support level query unit , the execution determining unit  of the requester functional module determines the function levels of the newly-introduced application function that are supported by both of the requester functional module and the provider functional module . More specifically, the execution determining unit  of the requester functional module determines executable function levels based on the response and the definition information D. For example, when the definition information D of the requester functional module includes definition values \u201c1\u201d through \u201c3\u201d corresponding to the function levels A through C (levels 1-3) and the response from the provider functional module includes definition values \u201c1\u201d and \u201c2\u201d corresponding to the function levels A and B (levels 1-2), the execution determining unit  of the requester functional module determines that the function level B is the highest function level that is executable (the highest executable function level). As another example, when the definition information D of the requester functional module includes definition values \u201c1\u201d and \u201c2\u201d corresponding to the function levels A and B (levels 1-2) and the response from the provider functional module includes definition values \u201c1\u201d through \u201c3\u201d corresponding to the function levels A through C (levels 1-3), the execution determining unit  of the requester functional module also determines that the function level B is the highest executable function level.","Thus, the execution determining unit  compares the definition values defined in a requester functional module and the definition values defined in a provider functional module (or a response) to determine the highest common definition value (\u201c2\u201d in the example of ) that is the highest one of definition values defined in both of the requester and provider functional modules, and determines the highest executable function level (the function level B in the example of ) based on the highest common definition value.","Based on the determined highest executable function level, the execution determining unit  of the requester functional module controls the execution of the updated version of the requester function. For example, when the function level B is determined as the highest executable function level, the function execution control unit  of the requester functional module requests the function execution unit  of the same functional module to execute the updated version of the requester function at the function level B that supports both the function levels A and B (levels 1 and 2).","Thus, the requester functional module controls execution of the requester function based on function levels of the newly-introduced application function that are supported by the provider function of the provider functional module ","Exemplary processes performed between a requester functional module and a provider functional module to provide an application function are described below.","<Exemplary Process (1)>",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 4","FIG. 4"],"b":["17","17","17","17"],"i":["a ","b","a ","b "]},"As illustrated in , the function availability query unit  of the requester functional module queries the provider functional module about whether a requested provider function supporting the newly-introduced application function is available (step S).","Since the provider function of the provider functional module does not support the newly-introduced application function, the function availability response unit  of the provider functional module sends a response indicating \u201cerror\u201d to the requester functional module (step S).","Based on the response indicating \u201cerror\u201d, the execution determining unit  of the requester functional module determines that the provider function does not support the newly-introduced application function (step S).","Then, the execution determining unit  of the requester functional module requests the function execution unit  of the same requester functional module to execute an original version of the requester function that is not adapted for the newly-introduced application function. Then, the function execution unit  of the requester functional module executes the original version of the requester function (step S).","<Exemplary Process (2)>",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 5","FIG. 5"],"b":["17","17","17","17"],"i":["a ","b","a ","b "]},"As illustrated in , the function availability query unit  of the requester functional module queries the provider functional module about whether a requested provider function supporting the newly-introduced application function is available (step S).","Since the provider function of the provider functional module supports the newly-introduced application function, the function availability response unit  of the provider functional module sends a response indicating \u201cavailable\u201d to the requester functional module (step S).","Based on the response indicating \u201cavailable\u201d, the execution determining unit  of the requester functional module determines that the provider functional module supports the newly-introduced application function (step S).","Then, the support level query unit  of the requester functional module queries the provider functional module about supported function levels of the newly-introduced application function (step S).","When queried, the support level response unit  of the provider functional module refers to the definition information D and obtains definition values \u201c1\u201d and \u201c2\u201d indicating the function levels A and B (levels 1 and 2) of the newly-introduced application function that are supported (step S). Next, the support level response unit  of the provider functional module sends a response including the definition values \u201c1\u201d and \u201c2\u201d indicating the supported function levels A and B to the requester functional module (step S).","When receiving the response, the execution determining unit  of the requester functional module compares the definition values \u201c1\u201d and \u201c2\u201d in the response and the definition values \u201c1\u201d (level 1), \u201c2\u201d (level 2), and \u201c3\u201d (level 3) in the definition information D of its own, and thereby determines that the function level B (level 2) is the highest executable function level. More specifically, the execution determining unit  identifies the highest common definition value (\u201c2\u201d in this example) based on the comparison results and thereby determines the highest executable function level (the function level B (level 2)). The execution determining unit  of the requester functional module reports the determined highest executable function level (level 2) to the provider functional module (step S).","In response to the report, the execution determining unit  of the provider functional module sends an acknowledgement to the requester functional module (step S) and requests the function execution unit  to execute the provider function at the reported highest executable function level. Then, the function execution unit  of the provider functional module executes the provider function at the reported highest executable function level (level 2 supporting both the function levels A and B) (step S).","When receiving the acknowledgement, the execution determining unit  of the requester functional module requests the functional execution unit  of the same requester functional module to execute the requester function at the determined highest executable function level (level 2). Then, the function execution unit  of the requester functional module executes the requester function at determined highest executable function level (level 2 supporting both the function levels A and B) (step S).","Thus, in the information processing apparatus  of this embodiment, the functional modules , which collaborate with each other to provide an application function, query each other to confirm \u201cfunction support status\u201d (e.g., whether the functional modules  support newly-introduced application functions).","As described above, in the information processing apparatus  of this embodiment, information processing functions are provided through collaboration among the above described functional units. The functional units are implemented by executing software programs installed in the information processing apparatus . For example, the software programs are loaded by a processing unit (e.g., the CPU ) from storage units (e.g., the HDD  and\/or the ROM ) into a memory (e.g., the RAM ) and are executed to implement the functional units of the information processing apparatus .","Exemplary processes performed among functional modules (or information processing functions provided by collaboration among functional modules) are described.","<Exemplary Process (3)>",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 6","FIG. 2","FIG. 6","FIG. 6"],"b":["17","17","17","14","16","17","17","17","17","17","17","17","17","17","17","17"],"sub":["1","2","3 ","1 ","2 ","1 ","2 ","2 ","1 ","3 "],"i":["a ","b","a ","b. "]},"As illustrated in , in response to a request from the application , the function availability query unit  of the Websys queries the DESS about whether the SSL encryption strength setting function (newly-introduced application function) is available (step S).","Since the DESS supports the newly-introduced application function, the function availability query unit  of the DESS queries the NCS about whether it is capable of accessing a storage area storing an SSL encryption strength parameter (step S).","Since the provider function of the NCS does not support the newly-introduced application function, the function availability response unit  of the NCS sends a response indicating \u201cerror\u201d to the DESS (step S).","Based on the response indicating \u201cerror\u201d, the execution determining unit  of the DESS determines that the NCS does not support the newly-introduced application function (step S). Then, the function availability response unit  of the DESS sends a response indicating \u201cunavailable\u201d to the Websys (step S).","Also, the execution determining unit  of the DESS requests the functional execution unit  to execute an original version of the basic function that is not adapted for the newly-introduced application function. In response, the function execution unit  of the DESS executes the original version of the basic function that is not adapted for the newly-introduced application function (the SSL encryption strength setting function) (step S).","Meanwhile, based on the response indicating \u201cunavailable\u201d, the execution determining unit  of the Websys determines that the DESS or the NCS does not support the newly-introduced application function (step S).","Then, the execution determining unit  of the Websys requests the functional execution unit  to execute an original version of the basic function that is not adapted for the newly-introduced application function. In response, the function execution unit  of the Websys executes the original version of the basic function that is not adapted for the newly-introduced application function (the SSL encryption strength setting function) (step S).","<Exemplary Process (4)>",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 7","FIG. 7","FIG. 6"],"b":["17","17","17","16","17","17","17"],"sub":["1","2","3 ","1","2","3 "]},"As illustrated in , in response to a request from the application , the function availability query unit  of the Websys queries the DESS about whether the SSL encryption strength setting function is available (step S).","Since the DESS supports the newly-introduced application function, the function availability query unit  of the DESS queries the NCS about whether it is capable of accessing a storage area storing an SSL encryption strength parameter (step S).","Since the NCS supports the newly-introduced application function, the function availability response unit  of the NCS sends a response indicating \u201ccapable\u201d to the DESS (step S).","Based on the response indicating \u201ccapable\u201d, the execution determining unit  of the DESS determines that the NCS supports the newly-introduced application function (step S). Then, the function availability response unit  of the DESS sends a response indicating \u201cavailable\u201d to the Websys (step S).","Based on the response indicating \u201cavailable\u201d, the execution determining unit  of the Websys determines that the DESS and the NCS support the newly-introduced application function (step S).","Next, the support level query unit  of the Websys queries the DESS about which function levels of the newly-introduced application function are supported by the DESS (step S).","When queried, the support level response unit  of the DESS refers to the definition information D and obtains definition values \u201c1\u201d and \u201c2\u201d indicating function levels \u201csetting SSL protocol\u201d (level 1) and \u201csetting encryption type\u201d (level 2) that are supported (step S). Then, the support level response unit  of the DESS sends a response including the definition values \u201c1\u201d and \u201c2\u201d indicating the supported function levels to the Websys (step S).","When receiving the response, the execution determining unit  of the Websys determines that the function level \u201csetting encryption type\u201d (level 2) is the highest executable function level based on the definition values \u201c1\u201d and \u201c2\u201d in the response and the definition values \u201c1\u201d (level 1), \u201c2\u201d (level 2), and \u201c3\u201d (level 3) in the definition information D of its own (step S). More specifically, the execution determining unit  compares the definition values in the response and the definition information D, identifies the highest common definition value (\u201c2\u201d in this example) based on the comparison results, and thereby determines that the function level \u201csetting encryption type\u201d (level 2) is the highest executable function level. Then, the execution determining unit  of the Websys reports the determined highest executable function level (level 2) to the DESS (step S).","In response to the report, the execution determining unit  of the DESS sends an acknowledgement to the Websys  (step S) and requests the function execution unit  to execute the basic function at the reported highest executable function level. Then, the function execution unit  of the DESS executes the basic function at the reported highest executable function level (level 2 that supports the function levels \u201csetting SSL protocol\u201d and \u201csetting encryption type\u201d) (step S).","When receiving the acknowledgement, the execution determining unit  of the Websys requests the functional execution unit  to execute the basic function at the determined execution level \u201c2\u201d. In response, the function execution unit  of the Websys executes the basic function at the determined highest executable function level (step S).","Thus, in the information processing apparatus  of this embodiment, even when there is a hierarchical relationship among the functional modules , the functional modules  query each other to confirm \u201cfunction support status\u201d (e.g., whether the functional modules  support newly-introduced application functions) and collaborate with each other to provide an application function.","<Summary>","In the information processing apparatus  of this embodiment, the functional modules  collaborate with each other as described below to provide an application function.","The function availability query unit  of the requester functional module queries the provider functional module about whether a requested provider function is available. When queried, the function availability response unit  of the provider functional module sends a response indicating whether the requested provider function is available.","Based on the response, the execution determining unit  of the requester functional module controls execution of the requester function (i.e., determines whether to execute an original version of the requester function or an updated version of the requester function).","With the information processing apparatus  configured as described above, even when one functional module  is changed, it is not necessary to change other functional modules , which collaborate with the changed functional module  to provide an application function, according to the change made to the changed functional module . Accordingly, the above embodiment makes it possible to prevent the work of software vendors from being complicated even when the number of combinations of the functional modules  increases. In other words, the above embodiment makes it possible to easily manage combinations of the functional modules .","The information processing functions of the above embodiment are implemented, for example, by executing a program(s), which is written in a programming language supported by the operating environment (platform) of the information processing apparatus , using a processing unit (e.g., the CPU ) of the information processing apparatus .","Such a program may be stored in a non-transitory computer-readable storage medium (e.g., the storage medium ) such as a floppy (flexible) disk (FD), a compact disk (CD), a digital versatile disk (DVD), a secure digital (SD) memory card, and a universal serial bus (USB) memory. For example, the program stored in the storage medium may be installed in the information processing apparatus  via the drive unit . Alternatively, the program may be installed via a telecommunication line and the interface unit  into the information processing apparatus .","In the above embodiment, the functional module  includes the definition information D. For example, the definition information D may be included in the functional module  when the functional module  is generated (or compiled) by referring to definition values written in a header file as program code (e.g., as \u201cDefine values\u201d).","An aspect of this disclosure provides an information processing apparatus, an information processing method, and a non-transitory storage medium storing program code for causing a computer to perform the information processing method that make it possible to easily manage combinations of functional modules.","The present invention is not limited to the specifically disclosed embodiments, and variations and modifications may be made without departing from the scope of the present invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
