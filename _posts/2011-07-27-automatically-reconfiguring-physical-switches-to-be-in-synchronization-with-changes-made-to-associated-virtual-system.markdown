---
title: Automatically reconfiguring physical switches to be in synchronization with changes made to associated virtual system
abstract: Changes to a virtual system, such as a set of virtual machines in a data center, may be automatically synchronized with the corresponding physical system. In one implementation, an application may receive information regarding changes made to a virtual system. The application may determine whether the information regarding the changes necessitates a change in the configuration of one or more physical switches, and may reconfigure affected ones of the physical switches for compatibility with the changes made to the virtual system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08954962&OS=08954962&RS=08954962
owner: Juniper Networks, Inc.
number: 08954962
owner_city: Sunnyvale
owner_country: US
publication_date: 20110727
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority to U.S. Provisional Patent Application No. 61\/385,482, filed Sep. 22, 2010, the disclosure of which is incorporated by reference herein in its entirety.","A virtual machine (VM) is a software implementation of a machine (i.e. a computer) that executes programs like a physical computer. Software running inside a virtual machine may be limited to the resources and abstractions provided by the virtual machine. Virtualization may allow the sharing of the underlying physical resource between different virtual machines. With virtual machines, multiple operating system (OS) environments, each a VM, can co-exist on the same physical host machine.","One common application of virtual machines is in data centers. Data centers may include facilities to house computer systems and associated components, such as telecommunications and storage systems. Virtual machines may be used in data centers to help manage the use of the data center hardware. For example, instead of dedicating each data center server to a single physical host device, the data center servers may be implemented as virtual machines in which multiple virtual machines are run on a single physical host device. As the computing demands of the data center changes, virtual machines can be dynamically added, removed, or moved between physical hosts.","One implementation is directed to a method that may include receiving information regarding changes made to a virtual system, the virtual system including one or more virtual machines that run on one or more physical devices, the physical devices being coupled to one another using one or more physical switches. The method may further include determining whether the information regarding the changes necessitates a change in the configuration of the one or more physical switches; and reconfiguring, when the information regarding the changes necessitates a change in the configuration of the one or more physical switches, affected ones of the one or more physical switches for compatibility with the changes made to the virtual system.","Another implementation is directed to a device that may include a processor and a memory. The memory may store instructions for execution by the processor, the instructions including instructions to receive information regarding changes made to a virtual system, the virtual system including one or more virtual machines that run on one or more physical devices, the physical devices being coupled to one another using one or more physical switches. The instructions may further include instructions to determine whether the information regarding the changes necessitates a change in the configuration of the one or more physical switches; and instructions to reconfigure, when the information regarding the changes necessitates a change in the configuration of the one or more physical switches, affected ones of the one or more physical switches for compatibility with the changes made to the virtual system.","Another implementation is directed to a number of servers, each of the servers to host one or more virtual machines; switches to couple the servers to an external network; a virtual machine control component to provision and manage the virtual machines, the virtual machine control component to transmit information regarding changes made to the virtual machines; and a network control component to manage the servers and switches, the network control component to receive the information regarding the changes made to the virtual machines, and in response, to determine whether the information regarding the changes necessitates a change in the configuration of the one or more of the switches, and, when the information regarding the changes necessitates a change, reconfiguring affected ones of the one or more switches for compatibility with the changes made to the virtual machines.","The following detailed description of the invention refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.","Virtual machines (VMs), which may run on a number of physical hosts, may be managed from a single interface. Changes to the configurations of the VMs may be automatically propagated to the underlying physical hardware that is used to support the VMs. In one implementation, changes to a VM, such as moving a VM to a different physical host, may require configuration changes in a switch in the data center. The configuration changes may be automatically made to the switch.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":["100","100","105","110","120","105","110","120"]},"Clients  may include a computing device, such as a personal computer, a wireless telephone, a personal digital assistant (PDA), smart phone, a laptop, a tablet computer, or another type of computation or communication device. Clients  may use services provided, through network , by data center . In one implementation, the services provided by data center  may be services in which a user of a client  may control or interact with the service, such as a web server that provides web pages that are directly viewable by users of clients . In another implementation, the services provided by data center  may be services designed to be used by other applications, such as business applications running on clients .","Data center  may include one or more network devices, computing devices, and\/or storage devices that collectively provide services to clients . For example, data center  may include web servers and database servers. Although shown as a single block in , each data center  may be associated with a number of network devices, computing devices, and\/or storage devices. In some implementations, a data center  may be geographically distributed.","Network  may include any type of network, such as a local area network (LAN), a wide area network (WAN), a telephone network (e.g., the Public Switched Telephone Network (PSTN) or a cellular network), an intranet, the Internet, or a combination of networks. Clients  and data center  may connect to network  via wired and\/or wireless connections.","Although  illustrates example components of environment , in other implementations, environment  may include additional, fewer, different, or differently arranged components than those illustrated in  and described herein. Alternatively, or additionally, one or more of the components shown in  may perform functions described as being performed by other of the components shown in .",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2","b":["110","110","210","1","210","210","210","220","1","220","110","110"]},"Hosts  may include the physical computing devices upon which VMs are executed. Hosts  may include, for example, server computers, such as computers that include a general purpose processor, memory, application specific circuits, and\/or other components. In one implementation, data center  may include a large number of hosts (e.g., N>100) mounted in a space efficient frame (a \u201crack\u201d).","Each host  may implement a number of software components. As shown, each host may include a hypervisor  and one or more VMs . Hypervisor , which may also be called a virtual machine manager, may run directly on the hardware of host  and may present a virtual operating platform to VMs . Hypervisor  may allow multiple VMs , potentially including VMs based on different operating systems, to run concurrently on a single host .","A host  may also include a virtual switch , which may be implemented by or within hypervisor . Virtual switch  may include a switch, implemented in software, that may act much like a physical switch. Virtual switch  may include multiple virtual ports, each of which can be connected to a single VM or to a physical switch, such as one of switches . The connections to a physical switch  may be through physical adapters, such as an Ethernet adapter. Multiple switches, such as either virtual switches  or physical switches , may be connected together to form a network, such as a local area network within data center .","VMs  may each include a software implementation of a computing system. Each VM  may include, for example, an operating system that executes on the abstract hardware system presented by hypervisor . VMs  may execute independently of one another. Each VM  may be limited to the resources presented by hypervisor  to the VM .","As one example, a single host  may include a number of executing VMs, such as operating system instances that run database servers, operating system instances that run web servers, and operating system instances that run email servers. Each VM instance  may be paused, re-started, terminated, or moved between hosts , as controlled by a system administrator communicating with hypervisors  of hosts .","Switches  may each include network devices that process and forward data. Switches  may include, for example, devices that process and route data at the data link (layer 2) layer of the Open Systems Interconnection (OSI) model. Alternatively, switches  may include devices that process data at the network layer (layer 3) of the OSI model, or multilayer switches that process data at both layer 2 and layer 3. In some implementations, switches  may include passive elements such as hubs or repeaters.","Switches  may each be configurable to implement various functions and\/or network policy objectives. As an example, traffic may be assigned to different virtual local area networks (VLANs). Switches  may be configured as to how traffic belonging to certain VLANs should be handled (e.g., traffic in a certain VLAN received at one port may be switched to a second port). Additionally, before switch  may accept traffic from a VLAN, switch  may need to be configured to accept the VLAN traffic. As another example, switches  may include configurable options relating to traffic quality of service (QoS) or security.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 3","FIG. 3"],"b":["110","110","110","310","320"]},"VM control component  may be used to provision, monitor, and\/or manage hypervisors  and VMs . VM control component  may provide a centralized platform through which system administrators  may manage the virtual environment implemented by VMs . For example, through VM control component , system administrators  may startup new VMs , shutdown VMs , pause VMs , or move VMs  between hosts . VM control component  may also provide status information indicating, for example, the current state or load of VMs  and hosts . Through VM control component , system administrators  may generally monitor and adjust the operational state of the virtual system (i.e., VMs ) provided by data center .","VM control component  may include, or be associated with, logic to provide status updates to network control component , illustrated as VM change updater (VMCU) . VMCU  may transmit virtual system update information , describing the installation and configuration of, for example, hosts , virtual switches , and VMs , to network control component . In general, virtual system update information  may provide network control component  with any information needed to make network control component  \u201caware\u201d of the system state, as implemented by VM  and\/or hypervisors . VMCU  may be implemented, for example, through application programming interfaces (APIs) provided for VM control component .","Network control component  may be used to manage the physical network implemented within data center , called the physical system herein. Through network control component , network administrators  may configure switches  and\/or other network devices in data center . Network control component  may provide a policy-based solution for managing both physical and virtual networks. Network control component  may, for instance, communicate with switches  and transmit configuration information to switches . The configuration information may be in response to changes made to the virtual system, such as changes made to VMs . Network control component  may thus act to keep the physical system in synchronization with the virtual system.","VM control component  and network control component  may be implemented as software applications running on separate computing devices in data center  or on VMs . In one implementation, VM control component  may include the vCenter product, from VMWare Corporation. In this situation, hypervisors  may include the VMWare vSphere hypervisor and virtual switches  may include the VMWare vSwitch. In alternative implementations, virtualization products from other vendors may alternatively be used.","Although  illustrate exemplary components of data center , in other implementations, data center  may include additional, fewer, different, or differently arranged components than those illustrated in  and described herein. Alternatively, or additionally, one or more of the components shown in  and  may perform functions described as being performed by other of the components shown in .",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 4","b":["400","105","210","310","320","400","410","420","430","440","450","460"]},"Bus  may permit communication among the components of device . Processing unit  may include one or more processors or microprocessors that interpret and execute instructions. Additionally or alternatively, processing unit  may be implemented as or include one or more application specific integrated circuits (ASICs), field programmable gate arrays (FPGAs), or the like.","Memory  may include a random access memory (RAM) or another type of dynamic storage device that stores information and instructions for execution by processing unit , a read only memory (ROM) or another type of static storage device that stores static information and instructions for the processing unit , and\/or some other type of magnetic or optical recording medium and its corresponding drive for storing information and\/or instructions.","Input device  may include a device that permits an operator to input information to device , such as a keyboard, a keypad, a mouse, a pen, a microphone, one or more biometric mechanisms, and the like. Output device  may include a device that outputs information to the operator, such as a display, a speaker, etc.","Communication interface  may include any transceiver-like mechanism that enables device  to communicate with other devices and\/or systems. For example, communication interface  may include mechanisms for communicating with other devices.","As described herein, device  may perform certain operations in response to processing unit  executing software instructions contained in a computer-readable medium, such as memory . A computer-readable medium may be defined as a non-transitory memory device. A memory device may include space within a single physical memory device or spread across multiple physical memory devices. The software instructions may be read into memory  from another computer-readable medium or from another device via communication interface . The software instructions contained in memory  may cause processing unit  to perform processes described herein. Alternatively, hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein. Thus, implementations described herein are not limited to any specific combination of hardware circuitry and software.","Although  shows example components of device , in other implementations, device  may contain fewer components, different components, differently arranged components, or additional components than depicted in . Alternatively, or additionally, one or more components of device  may perform one or more tasks described as being performed by one or more other components of device .",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 5","FIG. 5"],"b":["500","220","500","500","520","530"]},"Software portion  may include software designed to control network device . In general, software portion  may implement the functions of network device  that are not time critical. The functions described as being performed by software portion , may be implemented through, for example, one or more general purpose processors  and one or more computer memories . Processors  may include processors, microprocessors, or other types of processing logic that may interpret and execute instructions. Computer memories  (also referred to as computer-readable media herein) may include RAMs, ROMs, and\/or other types of dynamic or static storage devices that may store information and instructions for execution by one or more processors . In general, software portion  may perform certain functions in response to processor(s)  executing software instructions contained in a non-transitory computer-readable medium, such as memory .","Hardware portion  may include circuitry for efficiently processing packets received by network device . Hardware portion  may include, for example, logic, such as an ASIC, a FPGA, and\/or a content-addressable memory (CAM). When network device  is a router and\/or switch, hardware portion  may receive incoming traffic, extract header information for the traffic, and process the traffic based on the extracted header information.","Network device  may additionally include one or more input ports  for receiving incoming network traffic (e.g., packets) and one or more output ports  for transmitting outgoing traffic. In some implementations, a port may act as both or one of an input port  or an output port .","Although network device  is shown as including a software portion  and a hardware portion , network device  may, in some implementations, be implemented entirely through hardware. Additionally, network device  may include additional, fewer, different, or differently arranged components than those illustrated in .",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 6","b":["320","320","610","620","630","640"]},"Physical system state storage  may include logic to store information relating to the configuration and\/or layout of the physical components of data center . Physical system state storage  may include one or more data structures that may store the number of installed switches  and hosts , the cabling layout between the installed switches  and\/or hosts , configuration information relating to the installed switches  and\/or hosts , or other information relating to the physical system of data center . The stored configuration information relating to switches  may include, for instance, VLANs that are allowed for each switch, forwarding information for the VLANs, QoS rules that are to be implemented by switches , security information, etc.","Physical system state storage  may be updated based on automatic updates from the devices of data center  (e.g., from switches ) or through manual updating by an administrator . For example, network control component  may automatically query switches  for configuration information relating to switches , and\/or may automatically transmit changes to switches  as the changes are made. Alternatively or additionally, updates to switches  may be made through network control component , which may thus correspondingly update physical system state storage .","Virtual system state storage  may include logic to store information relating to the configuration and\/or layout of the virtual system (i.e., VMs , hypervisors , and\/or virtual switches ) of data center . Virtual system state storage  may include one or more data structures that may store the number of active VMs , performance information relating to the active VMs , host  upon which each active VM  is running, configuration information relating to virtual switches , or other information relating to the virtual system in data center . Virtual system state storage  may be updated based on virtual system update information , as received from VMCU . As previously mentioned, in one implementation, VMCU  may be implemented as programming instructions that conform to an API that is provided by the publisher of VM control component .","Physical\/virtual system viewer  may include logic to present administrators, such as network administrators , with information describing data center . Because physical\/virtual system viewer  has access to physical system state storage  and virtual system state storage , physical\/virtual system viewer  may present a unified view of the operational state of data center , in which both the configuration and layout of the physical and virtual systems may be presented to network administrators .","Physical system configuration update component  may generally update the physical system in response to changes in the virtual system. In one implementation, network administrators  may place physical system configuration update component  in an automatic mode, called an orchestration mode herein. In the orchestration mode, physical system configuration update component  may automatically update the configuration of the physical system, such as switches , in response to changes in the virtual system. The operation of physical system configuration update component  will be described in more detail below with reference to .","Although  shows example functional components of network control component , in other implementations, network control component  may contain fewer functional components, different functional components, differently functional arranged components, or additional functional components than depicted in . Alternatively, or additionally, one or more functional components of network control component  may perform one or more tasks described as being performed by one or more other functional components of device network control component .",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 7","b":["700","110"]},"Process  may include determining whether there has been a change in the status of the virtual system (block ). VMCU  may, for example, receive changes to the status of the virtual system from VM control component . The changes to the virtual system may be the result of system administrators  reconfiguring VMs , changes due to failure of a virtual system, or other changes. For example, a system administrator , through VM control component , may move a VM  from one host  to another host .","When there is a change in the status of the virtual system, (block \u2014YES), the information describing the change, such as virtual system update information , may be transmitted from VM control component  to network control component  (block ). As previously mentioned, VMCU  may receive the update information describing the change and may transmit the update information to network control component . The update information may be stored in virtual system state storage .","Process  may further include determining if network control component  is in an orchestration mode (block ). As previously mentioned, the orchestration mode may be a mode in which changes to the virtual system are automatically synchronized with the physical system. Whether network control component  is in the orchestration mode may be set by network administrators .","When network control component  is in orchestration mode (block \u2014YES), network control component  may update the physical system to reflect the changes to the virtual system (block ). Physical system update component  may, for instance, examine the changes to the virtual system and determine any configuration changes that need to be made to the physical system. In one implementation, physical system update component  may use heuristic techniques to determine the changes that need to be made to the physical system. The operation of physical system update component  is illustrated in more detail in the flow chart of .",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 8","FIG. 7"],"b":["800","800","740"]},"Process  may include determining whether configuration information for the physical system should be updated (block ). This determination may be made based on the state of the physical system and the virtual system (block ). Physical system configuration update component  may, for instance, compare the changes to the virtual system to the state of the physical system, as stored in physical system state storage , to determine whether configuration information for the physical system should be updated. In one implementation, the comparison may be made using predetermined rules, in which, for example, certain changes in the virtual system may correspond to specific changes in the configuration information. For example, the movement of a VM , which is assigned to a particular VLAN, between hosts , may require that the port of physical switch  to which the new host is connected be configured to accept traffic from the particular VLAN.","Process  may further include generating commands to change the configuration information of the physical system (block ). The configuration information of the physical system may be changed so that the physical system is compatible with the changed virtual system. In one implementation, the commands to change the configuration information may be text commands, such as commands that may be entered through a session initiated with the devices (e.g., switches ) that are affected by the changes. For example, if a VLAN is to be added to a particular switch , one or more command line interface (CLI) commands may be used to add the VLAN to the particular switch . The CLI commands may include commands to, for example, set a description of the VLAN, set the name for the VLAN, set the subnet for the VLAN, etc.","In one implementation, the commands to change the configuration information of the physical system may be based on a template. A template may define a physical configuration that a device, such as a switch , supports. Predefined fields in the template may be changed to customize the template for a particular physical device. Physical system configuration update component  may select a template and fill out the fields of the template based on the information relating to the changed state of the virtual system.","Process  may further include transmitting the generated commands to the affected devices (block ). In one implementation, physical system configuration update component  may remotely (i.e., over the LAN within data center ) login to a device (e.g., a switch ) and input the generated command. In this manner, the physical system may be automatically updated to reflect changes to the virtual system. Network administrators  may be relieved of the task of manually configuring the physical system when a change is made to the virtual system. As previously mentioned, in one implementation, the configuration changes relating to the physical system may include changes as to how VLANs are handled, QoS changes, security related changes, or other network policy related changes.","An example of the application of processes  and  will next be described with reference to .  is a diagram of an example data center similar to data center . In , two hosts  and , and two switches  and , are illustrated. Hosts  and  may include a number of VMs, each of which may be assigned to a VLAN. The VLANs are labeled as VLANs  (rectangles),  (triangles), and  (circles).","Assume that VM , which belongs to VLAN , is moved from host  to host  in response to a system administrator  initiating a move operation through VM control component . The move operation may generally include shutting down VM  at host , copying an image of VM  to host , and running the copied image at host . After the move operation, VM  may no longer be present at host  (shown crossed out in ).","Switch , which did not switch traffic from VLAN  before the move operation, may need to be configured to accept traffic from VLAN . Similarly, after the move operation, host  may no longer include any VMs that are in VLAN . In this situation, the physical system that includes switches  and  may thus need to be updated to remove VLAN  from the port of switch  connected to host  and to add VLAN  to the port of switch  connected to host .","Physical system configuration update component  may receive the indication of the move of VM  to host . In response, physical system configuration update component  may determine that switch  may need to be reconfigured to allow the port that connects to host  to accept traffic from VLAN . Physical system configuration update component  may automatically connect to switch  and update the configuration information for switch . Similarly, physical system configuration update component  may reconfigure switch  so that the port that previously allowed traffic for VLAN , from host , no longer accepts traffic from VLAN . A system administrator  may move a VM between physical host devices and the underlying physical system may be automatically configured to handle the changes.","The foregoing description of implementations provides illustration and description, but is not intended to be exhaustive or to limit the invention to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the invention.","For example, while series of blocks have been described with regard to , the order of the blocks may be modified in other implementations. Moreover, non-dependent blocks may be implemented in parallel.","It will be apparent that example aspects, as described above, may be implemented in many different forms of software, firmware, and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement these aspects should not be construed as limiting. Thus, the operation and behavior of the aspects were described without reference to the specific software code\u2014it being understood that software and control hardware could be designed to implement the aspects based on the description herein.","Further, certain aspects described herein may be implemented as \u201clogic\u201d or as a \u201ccomponent\u201d that performs one or more functions. This logic or component may include hardware, such as an application specific integrated circuit or a field programmable gate array, or a combination of hardware and software.","Even though particular combinations of features are recited in the claims and\/or disclosed in the specification, these combinations are not intended to limit the disclosure of the invention. In fact, many of these features may be combined in ways not specifically recited in the claims and\/or disclosed in the specification. Although each dependent claim listed below may directly depend on only one other claim, the disclosure of the invention includes each dependent claim in combination with every other claim in the claim set.","No element, act, or instruction used in the description of the invention should be construed as critical or essential to the invention unless explicitly described as such. Also, as used herein, the article \u201ca\u201d is intended to include one or more items. Where only one item is intended, the term \u201cone\u201d or similar language is used. Further, the phrase \u201cbased on\u201d is intended to mean \u201cbased, at least in part, on\u201d unless explicitly stated otherwise."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate one or more implementations described here and, together with the description, explain these implementations. In the drawings:",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 6","FIG. 3"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
