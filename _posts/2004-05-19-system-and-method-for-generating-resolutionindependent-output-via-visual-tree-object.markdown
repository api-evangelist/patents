---
title: System and method for generating resolution-independent output via visual tree object
abstract: A system and related techniques generate printing and other output operations via a resolution-independent visual tree object. According to embodiments the operating system or other resource may receive the visual tree object and related data from applications or other sources, and perform logic to scale or process the visual output for resolution, effects or other purposes directly from that object. The operating system or other resource itself may be configured to receive the componentized visual tree object and condition or render that object for output to a printer, facsimile machine, copy machine or other output device. The operating system may serialize or spool that object from the source object in native form, relieving applications of the need to prepare documents or other output objects to generate specified resolutions, effects or to adapt the output to specific output drivers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07777902&OS=07777902&RS=07777902
owner: Microsoft Corporation
number: 07777902
owner_city: Redmond
owner_country: US
publication_date: 20040519
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EMBODIMENTS"],"p":["This application claims the benefit of U.S. Provisional Application Ser. No. 60\/567,173 filed May 3, 2004, entitled \u201cSystem and Method for Generating Resolution-Independent Output Via Visual Tree Object\u201d, which application is assigned or under obligation of assignment to the same entity as this application, from which application priority is claimed, and which application is incorporated by reference herein.","Not applicable.","The invention relates to the field of computing, and more particularly to a platform for generating a universal visual tree object which may be accepted by an operating system or other resource to condition and prepare printed page or other output, with no dependencies on output resolution or requiring special preparation by the source application sending the object to a printer or other output device.","The problem of generating reliable, accurate printed output on a printer or other output device has occupied application programmers, operating system designers, printer and other hardware engineers and others for some time. In general, printed, facsimile or other output has been subject to inconsistencies such as misaligned pages, improperly formed characters or fonts, limited or poorly executed effects such as shadowing or keming, or other problems due to the technical issues surrounding the printing chain.","For one, and as illustrated in , generating a printed page or other output typically begins with an application such as a word processing package, presentation package, spreadsheet or other application generating a document, slide show, spreadsheet or other file, object or data to send to a printer or other output device.","The application usually accesses an application programming interface (API) in the operating system to transmit that file to the operating system for output spooling and processing. The application may be required to conform to the API for instance by passing constituent text, numerical, graphical or other data as well as arguments and variables related to the resolution, font, page size and other characteristics of the output file. The API may then invoke other resources of the operating system to serialize or spool the file for transmission to the printer or other output device.","The operating system may communicate the spooled file or other data to a printer driver, for example a software interpreter or commands and functions, resident in the operating system or supplied by the hardware manufacturer. The printer driver may then transmit the resulting processed output data to the printer hardware via a serial, parallel or other connection. The printer or other output device may then process the received document or other object to generate a printed page, for instance using a print engine containing routines, fonts, logic control and other information which is embedded in the printer.","The series of conventional processing and conversion steps which translate an original source file to a form for ultimate printing introduces multiple chances for errors and incompatibilities between source data and physical output. For one thing, not all applications are aware of the font, effects and other processing limitations of given printers or other output devices. For another, the APIs presented to applications may be hardwired to specifications which do not permit substitution or extension of fonts or other effects or processing. Moreover, interposing a manufacturer-specific printer driver or other driver between the operating system and output device only increases the possibility of incompatible fonts, routines or commands. Other problems in printing and other output technology exist.","The invention overcoming these and other problems in the art relates in one regard to a system and method for generating resolution-independent output via a visual tree object, in which an application or other source may create, store and manipulate an abstracted visual tree object. The application or other source may transmit that visual tree object to an operating system for print or other output conditioning, for instance to parse that object to spool or serialize the content. The conditioned visual tree object may be communicated to a printer, copy machine or other output device in that form, for printing or other output. In embodiments, the visual tree object may retain its resolution independence throughout the print output process. The operating system and related resources may therefore directly receive and manipulate the visual tree object without reliance on an intermediate API or similar interface, and applications need not conform file parameters to API requirements. Because the same visual tree object is used for on-screen visual display as well as for printing and other output activity, the ability to match visually perceived displays to printed or other output is greatly enhanced.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2","b":["108","110","112","102","112","114"]},"The visual tree object  may in embodiments be or include a hierarchical data schema encapsulating a screen, text file, image file or other object for printing, facsimile transmission, copying or other output. The visual tree object  may be encoded, for example, in extensible markup language (XML) or other code, instructions or formats. According to embodiments, the application  may build the visual tree object  based on the textual, graphical or other elements of the file or content which the user has generated in application . For example, application  may as shown operate on a graphical image, textual or other content, whose elements or components may be enumerated in a tree-style or hierarchical data object.","According to embodiments of the invention in one regard, the application  may communicate the visual tree object  or other output content to an operating system  operating on client , to condition and transmit that content to printer  for printing or other output. In embodiments as shown, the visual tree object  may be transmitted to a print manager , which may contain control logic for initiating and generating printed or other output. In embodiments print manager  may be or include a built-in facility within operating system , which however does not require or depend on the presentation of APIs to application  to conduct printing setup and output operations. In embodiments, the visual tree object  may be, include or be embedded in or associated with an electronic document of the type described in the aforementioned copending U.S. patent application Ser. No. 10\/836,327, entitled \u201cDocument Markup Methods and Systems\u201d, or others.","Print manager  may in turn communicate with a spool engine . Spool engine  may contain logic or intelligence to serialize or otherwise decompose the visual tree object  for transmission to the printer or other output device as encoded visual tree object . Spool engine  may likewise be hosted or included within operating system . Spool engine  may communicate the encoded visual tree object  to a driver , which may be or include general or specific codes or routines to drive the encoded visual tree object  to printer  for printing or other output.","The driver  may transit the encoded visual tree object  to the printer over a connection such as a serial connection, a parallel connection, a universal serial bus (USB) connection, a wireless connection or other port or connection. The printer  may receive the encoded visual tree object  for processing and output. In embodiments, the printer  may contain a print engine  including an interpreter  or other print control logic, which may parse the visual tree object  and generate pixels or other output to be printed on pages, for example via a line or other output buffer. In embodiments interpreter  may be configured to decode electronic documents or commands of the type described in the aforementioned U.S. patent application Ser. No. 10\/836,327, entitled \u201cDocument Markup Methods and Systems\u201d, or others.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3","b":["114","124","110","102","124","114","116","126","114","112","114"]},"Moreover, since the content may be completely represented in a standard visual tree object  without dependency on APIs or idiosyncratic print functions based on individual manufacturer specifications, the visual tree object  may be constructed in a resolution-independent format. The scaling and other conditioning of the content for printing or outputting the visual tree object  on a given printer  may instead be performed in printer manager , spool engine  or other operating system or other resources. Again, electronic documents of the type described in copending U.S. patent application Ser. No. 10\/836,327, entitled \u201cDocument Markup Methods and Systems\u201d or others may contain intermediate language or other interpretable or executable code, which may in one regard encode instructions for scaling, sizing, font or other content or effects. Further, since visual tree object  does not necessarily require conversion steps before being sent to print or other output, a round-trip transmission of the visual tree object  is possible according to embodiments of the invention. Thus for instance print manager  may store a visual tree object  before or after it has been printed or otherwise output to a file. A viewer tool or other application or resource may then be able to view that object in the form in which it was displayed, printed or otherwise processed or output, for instance to preview, print or otherwise manipulate that object at a later time.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4","b":["402","404","112","406","114","112"]},"In step , the visual tree object  may be communicated to print manager  or other print control logic, for instance hosted in an operating system or other resource. In step , the visual tree object  may be transmitted to spool engine  or other conditioning logic, for instance to generate an encoded visual tree object , for instance containing a corresponding sequence of serialized data or commands. In embodiments, the encoded visual tree object  may be, include or be embedded in or associated with an electronic document of the type described in the aforementioned U.S. patent application Ser. No. 10\/836,327, entitled \u201cDocument Markup Methods and Systems\u201d, or otherwise. The conditioning performed on visual tree object  may in one regard preserve the structure of that object, so that in one regard that change in form of the visual tree object  may be thought of as an isomorphic transform. In step , the encoded visual tree object  may be transmitted to driver , such as a printer driver or other output interface or resource. In step , the encoded visual tree object  may be transmitted to printer  or other output device, for instance via a serial port, parallel port, USB connection, wireless connection or other port or connection.","In step , the encoded visual tree object  may be received in printer  or other output device, for instance being stored into electronic memory or otherwise. In step , the encoded visual tree object  may be interpreted, executed, decoded or otherwise processed in print engine  of printer , for example rasterizing an image object or initiating fonts, routines, effects or other data. In step , the printed page or other physical or media output may be generated, for instance on paper or other media. In step , processing may repeat, return to a prior processing point, jump to a further processing point or end.","The foregoing description of the invention is illustrative, and modifications in configuration and implementation will occur to persons skilled in the art. For instance, while the invention has generally been described in terms of an application or other source passing a single visual tree object  to a printer , in embodiments multiple or combined visual tree objects may be transmitted to the printer or other o device for outputting.","Similarly, while the invention has in embodiments been described as involving a visual tree object  whose internal structure is built on a two dimensional descending tree, in embodiments the visual tree object  may contain other internal structures, such as three-dimensional trees or lattices, four (or more) dimensional objects, or other configurations structures. Other hardware, software or other resources described as singular may in embodiments be distributed, and similarly in embodiments resources described as distributed may be combined. Further, while the invention has generally as operating in conjunction with one or more local applications which generate the visual tree object , in embodiments the visual tree object  may originate from other sources, such as distributed Web or other applets, be read from media, downloaded from the Internet or be derived or receive from other sources. The scope of the invention is accordingly intended to be limited only by the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
