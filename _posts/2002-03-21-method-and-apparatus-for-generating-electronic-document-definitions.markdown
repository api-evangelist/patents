---
title: Method and apparatus for generating electronic document definitions
abstract: A method of automatically creating an electronic document definition can include querying an application using a meta data interface of the application to retrieve meta data describing at least one application specific object for interacting with the application. The meta data can be received responsive to the querying step. The meta data can be processed to determine an electronic document definition describing the at least one application specific object in accordance with the received meta data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07130842&OS=07130842&RS=07130842
owner: International Business Machines Corporation
number: 07130842
owner_city: Armonk
owner_country: US
publication_date: 20020321
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Technical Field","The invention relates to the field of application integration, and more particularly, to the generation of components for integrating different enterprise level applications.","2. Description of the Related Art","Enterprise resource planning (ERP) systems typically are multi-module software applications which help organizations manage diverse aspects of their business such as product planning, parts purchasing, maintaining inventories, interacting with suppliers, providing customer service, and tracking orders. ERP systems further can manage financial and human resource aspects of a business. For example, Ariba, Inc. of Sunnyvale, Calif., provides a comprehensive business-to-business commerce platform which includes an electronic procurement application known as Ariba\u2122 Buyer.","Presently, some conventional ERP systems exchange information as objects. The Ariba Buyer system, for example, utilizes Java objects for exchanging information with other applications or systems. Although this architecture can provide a robust platform for interaction among disparate applications and systems, conventional ERP system manufacturers typically utilize proprietary object based messaging formats within their ERP systems which are not common to other ERP systems. In consequence, a middleware messaging system often must translate one proprietary ERP system message format, whether an object, XML, or some other message format, to another proprietary ERP system message format. Further, the middleware messaging system often must translate the proprietary objects into an intermediate messaging format used by the middleware itself.","For example, MQSeries\u2122 is a middleware business integration software package available from International Business Machines Corporation of Armonk, N.Y. MQSeries provides messaging infrastructure to facilitate interactions between different ERP systems or applications. Through its various software components, MQSeries can provide a communication mechanism between applications on different platforms.","Middleware systems utilize software components referred to as adapters for converting one message format to another. Products such as IBM's MQSeries Adapter Builder, for example, can generate adapters for translating ERP system objects into XML representations. To generate such an adapter, a document type definition (DTD) describing the particular interface to the ERP system must be imported into the adapter generation tool. Unfortunately, many ERP systems do not specify the proper format of an XML representation of the ERP system objects. For example, the Ariba Buyer system does not specify the format of an XML representation of an Ariba Buyer Java object. Such ERP systems do not describe specific interfaces, nor do the ERP systems provide DTDs which are associated with specific interfaces.","In consequence, the DTD must be manually generated so that it can be imported into the adapter builder tool. The manual creation of a DTD, however, introduces the possibility of human error into the creation of adapters. Additionally, the manual nature of the process requires additional time not only for creating the DTDs and adapters, but also for future modifications of the DTDs and adapters.","The present invention provides for the automatic generation of electronic document definitions for specifying interfaces to enterprise resource planning (ERP) systems and applications. In particular, the present invention can query an ERP system and\/or application using an interface provided by the ERP system itself to obtain meta data describing the other various object interfaces of the ERP system. The meta data can be processed to determine an electronic document definition which describes a particular object interface to the ERP system. The electronic document definition can be an extensible markup language (XML) document type definition (DTD), an XML schema, or another markup language document such as a hypertext markup language (HTML) document.","One aspect of the present invention can include a method of automatically creating an electronic document definition. The method can include querying an application using a meta data interface of the application itself to retrieve meta data describing at least one application specific object for interacting with the application. The meta data can be received responsive to the querying step. The meta data then can be processed to determine an electronic document definition describing one or more application specific objects in accordance with the received meta data. For example, the electronic document definition can be specified as a markup language document, a document type definition, or an extensible markup language schema.","The processing step can include identifying at least one variant represented by the meta data. The variant can be defined by the application or can be at least one other variant being associated with a second application to be interfaced with the application.","The meta data can represent at least one variant; and the variant can represent at least one class. Each class further can represent at least one subclass. Accordingly, the processing step can include recursively identifying each variant, and representing the variant in the electronic document definition. Also, each class and subclass can be recursively identified and represented in the electronic document definition.","The electronic document definition can be specified as an inbound electronic document definition or an outbound electronic document definition. Accordingly, the processing step can include determining whether each class is to be represented by the inbound electronic document definition or the outbound electronic document definition, and generating the inbound or outbound electronic document definition respectively.","The present invention provides for the automatic generation of electronic document definitions for specifying interfaces to enterprise resource planning (ERP) systems and applications. In particular, the present invention can query an ERP system and\/or application using an interface provided by the ERP system itself to obtain meta data describing the other various object interfaces of the ERP system. The meta data can be processed to determine an electronic document definition which describes a particular object interface to the ERP system. The electronic document definition can be an extensible markup language (XML) document type definition (DTD), an XML schema, or another markup language document such as a hypertext markup language (HTML) document.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 1","FIG. 1"],"b":["100","115","130","100"]},"The ERP system  can include a defined application programming interface (API) having a meta data interface  and a meta data repository . The meta data interface  provides external applications and tools with a means by which to access the meta data repository . The meta data repository  stores meta data which describes the objects of the ERP system . The objects, for example the Java objects used to interact with the Ariba Buyer procurement application, allow applications and systems to exchange information with the ERP system , as well as access various functions of the ERP system . The objects can be pre-defined objects which are included within the base ERP system , or alternatively, can be provided by a user of the ERP system . Regardless, the meta data within the meta data repository  describes the various objects of the ERP system . In particular, the meta data can describe the data structures, methods, titles, and different subsections, including individual inputs, outputs, as well as data values for the various objects of the ERP system .","The generator  can be configured to access the ERP system  meta data interface  to obtain meta data from the meta data repository . The generator  can issue a request  through the meta data interface  of the ERP system . The request  can specify meta data for one or more objects of the ERP system . Responsive to the request , the ERP system  can provide the requested meta data . The generator  can be configured to process the received meta data , and then generate one or more electronic document definitions . The resulting electronic document definitions , for example, can be XML DTDs, XML schema, or other markup language documents such as HTML documents. In any case, an electronic document definition can be generated for each object for which meta data was received. In consequence, the resulting electronic document definitions describe the interface objects to which the electronic document is associated.","The adapter builder  can be configured to generate adapters for the ERP system  objects. One example of such an adapter builder tool is the MQSeries Adapter Builder which is available from International Business Machines Corporation of Armonk, N.Y. The adapter builder  can import an electronic document definition  such as an XML DTD. From the electronic document definition , the adapter builder  can generate an adapter for communicating with the ERP system . Accordingly, the adapter can be used to communicatively link an application or ERP system  with a middleware application or system. Additional adapters can be included for processing other message formats thereby enabling the middleware to mediate between multiple applications and\/or ERP systems. For example, the adapters can convert objects to other message formats including proprietary XML message formats and generalized XML message formats which are compliant with the business object definition structure (BOD) as promulgated by the Open Applications Group. Although the generator  and the adapter builder  are depicted as independent applications, those skilled in the art will recognize that the generator  and the adapter builder  can be included within a single larger tool for use in generating adapters for middleware systems.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 2","FIG. 1","FIG. 2"]},"A method for automatically generating an electronic document definition can begin in step . In step , the defined variants of the ERP system can be retrieved. As mentioned, the defined variants can include both the base variant utilized by the ERP system as well as any other variants to be used when interfacing the ERP system with other applications and\/or systems. In step , a determination can be made as to whether additional variants are to be processed. If not, the method can end. If variants remain which have not been processed, however, the method can continue to step  where the classes of the variant currently being processed can be determined. As is known to those skilled in the art, the classes are defined by the ERP system and correspond to items such as the type of ERP system order, an address, a user, or any other component part of a transaction for which the ERP system is designed to process.","Proceeding to step , a determination can be made as to whether more classes are to be processed. If so, the method can continue to step  to begin processing the classes of the present variant. If all of the classes have been processed, the method can loop back to step  to process the next variant until all of the variants have been processed, at which time the method can end. Continuing with step , the class information for the next class in the variant being processed can be determined. By way of example, the class information can include, but is not limited to, permissions, roles which are specific to an ERP system implementation, and items such as a user's suppliers and other like information.","In step , a determination can be made as to whether the class being processed is inbound. Inbound classes are included within an inbound electronic document definition. The inbound electronic document definition describes objects being received by the ERP system. If the class is inbound, the method can continue to step  where the subclass information can be recursively determined for each subclass of the current class. After step , the method can continue to step  where the data determined thus far can be included within the inbound electronic document definition. After step , the method can continue to jump circle A to continue processing further classes of the present variant.","If the class was not determined to be inbound in step , the method can continue to step , where the class can be identified as an outbound class. Outbound classes are included within an outbound electronic document definition. The outbound electronic document definition specifies objects being provided by the ERP system. In that case, the method can continue to step  where the subclass information can be recursively determined for each subclass of the current class. In step , the determined data can be added to the outbound electronic document definition.","It should be appreciated by those skilled in the art that the method described herein can be recursively applied to the meta data until the meta data has been completely processed. As mentioned, the electronic document definitions can describe one or more interface objects of the ERP system. For example, for meta data describing a small number of interface objects, a single electronic document definition can be created which describes each of the interface objects. In cases where a large number of interface objects are described by the meta data, more than one electronic document definition can be created. In particular, if desired, one electronic document definition can be created per ERP system interface object. Accordingly, although the flow chart of  depicts the situation where data is continually added to a single outbound or inbound electronic document definition, it should be appreciated that a new inbound or outbound electronic document definition can be created for each interface object. Further, the data can be continually written to the electronic document definitions as depicted in , or can be temporarily stored and then written to one or more electronic document definitions upon completion of the meta data processing.","In any case, after processing the meta data and generating the inbound and outbound electronic document definitions, both electronic document definitions can be provided to one or more other tools such as XML editors, integrated development tools, or adapter builders for further processing. Electronic document definitions formatted in HTML can be used as user documentation.","The invention disclosed herein provides an automated method of determining electronic document definitions. By accessing the meta data interface of an application or ERP system, the meta data describing one or more particular ERP system interface objects can be retrieved. The methods described herein provide for a recursive approach to processing the meta data.","The present invention can be realized in hardware, software, or a combination of hardware and software. The present invention can be realized in a centralized fashion in one computer system, or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system or other apparatus adapted for carrying out the methods described herein is suited. A typical combination of hardware and software can be a general purpose computer system with a computer program that, when being loaded and executed, controls the computer system such that it carries out the methods described herein.","The present invention also can be embedded in a computer program product, which comprises all the features enabling the implementation of the methods described herein, and which when loaded in a computer system is able to carry out these methods. Computer program in the present context means any expression, in any language, code or notation, of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following: a) conversion to another language, code or notation; b) reproduction in a different material form.","This invention can be embodied in other forms without departing from the spirit or essential attributes thereof. Accordingly, reference should be made to the following claims, rather than to the foregoing specification, as indicating the scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["There are shown in the drawings embodiments which are presently preferred, it being understood, however, that the invention is not limited to the precise arrangements and instrumentalities shown.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 2","FIG. 1"]}]},"DETDESC":[{},{}]}
