---
title: Cloud enabled filesystems provided by an agent which interfaces with a file system on a data source device
abstract: Information is managed by receiving at a data source device, from an application running on a data source device, an instruction associated with a file system object. It is determined at the data source device if the instruction is able to be satisfied by a file system running on the data source device. If it is determined that the instruction is not able to be satisfied by the file system, the instruction is performed without the services of the file system; the application is unaware that the file system object is managed by an entity other than the file system running on the data source device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09135116&OS=09135116&RS=09135116
owner: EMC Corporation
number: 09135116
owner_city: Hopkinton
owner_country: US
publication_date: 20110929
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION"],"p":["Devices such as computers and smartphones are storing more and more information, such as photographs, documents, videos, device configurations, applications settings and user preferences. It would be desirable if new techniques could be developed which enable existing data management and\/or access services (e.g., related to storage capacity limits and\/or backup and recovery) to be provided in a more efficient or convenient way, and\/or if such new techniques provided new ways of accessing and\/or managing information.","The invention can be implemented in numerous ways, including as a process; an apparatus; a system; a composition of matter; a computer program product embodied on a computer readable storage medium; and\/or a processor, such as a processor configured to execute instructions stored on and\/or provided by a memory coupled to the processor. In this specification, these implementations, or any other form that the invention may take, may be referred to as techniques. In general, the order of the steps of disclosed processes may be altered within the scope of the invention. Unless stated otherwise, a component such as a processor or a memory described as being configured to perform a task may be implemented as a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. As used herein, the term \u2018processor\u2019 refers to one or more devices, circuits, and\/or processing cores configured to process data, such as computer program instructions.","A detailed description of one or more embodiments of the invention is provided below along with accompanying figures that illustrate the principles of the invention. The invention is described in connection with such embodiments, but the invention is not limited to any embodiment. The scope of the invention is limited only by the claims and the invention encompasses numerous alternatives, modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the invention. These details are provided for the purpose of example and the invention may be practiced according to the claims without some or all of these specific details. For the purpose of clarity, technical material that is known in the technical fields related to the invention has not been described in detail so that the invention is not unnecessarily obscured.","What is described herein is a technique for managing information at a data source device using a storage device that accessible via a network (e.g., cloud storage). At the data source device, an instruction relating to a file system object is received from an application running on the data source device. For example, there may be an agent configured to operate between an application and a file system of an operating system, so that any instructions or communications between the two must first pass through the agent. It is determined where to send the instruction. For example, an agent may decide to send the instruction to the file system, the agent may divert an instruction to an entity other than the file system (such as a storage device accessible via a network) or the agent may process the instruction itself; the file system never receives the instruction in the latter two cases. The instruction is then sent appropriately. In some cases, the file system object is being migrated from the data source device to the storage and a delete instruction (e.g., generated by the agent as opposed to the application) is sent to the file system so that the copy of the file system object on the data source device is deleted. The agent may track where metadata and data corresponding to each file system object is stored (e.g., on a data source device, on a storage device accessible via a network or both) so that when an application requests information for a particular file system object the agent knows where to send the instruction to. In some cases, metadata for a given file system object is managed differently than the corresponding data (e.g., one is stored on multiple devices while the other is stored only on one device).",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","b":["100","106","104","104","100","106","106","100","106"]},"In various embodiments, information from data source device  is stored on storage  in a variety of ways. In some embodiments, information is stored on data source device  (e.g., on a local hard disk drive of data source device ) and a corresponding copy is also stored on storage . In some other embodiments, one or more pieces of metadata are stored on data source device , but the corresponding data is only kept on storage  and not on data source device . Using a file as an example (e.g., a Microsoft Word document), the contents of the file (i.e., the data, as opposed to the metadata, corresponding to the file) are only kept on storage  but not on data source device  and metadata for that file is stored on data source device . Some examples of metadata corresponding to a file include: the name of a file, a (e.g., file system) path at which a file is located, size of a file, a creator, a creation timestamp, a modification timestamp, permissions (e.g., read\/write\/execute permissions such as those set or modified using the UNIX chmod command, encryption or other security settings, etc.), one or more identifiers by which the file is known to other entities (e.g., an application on data source device  or an agent running on storage ), etc. In some embodiments, metadata is also stored on storage , for example because the system permits access of the data stored on storage  from remote device  and this metadata may be used in the process of providing a requested file (as an example) to remote device  in a form that is meaningful or comprehensible to an application or user on remote device . For example, the metadata may include the logical or physical locations of the content of a request file and this may be used by remote device  to retrieve the file in response to an access request. In some embodiments, metadata stored on storage device  includes some other information such as the identity of the data source .","In various embodiments, various techniques are used in deciding whether to store two copies (e.g., one copy on data source device  and one copy on storage ) as opposed to storing information on storage  and not on data source device . In some embodiments, register settings are used to configure data source device  to always operate in one manner (e.g., to always store a copy on data source device  and a copy on storage ). In some embodiments, a system is configured to make this determination, for example based on current conditions. For example, if the native or built-in storage capacity of data source device  is greater than a certain threshold, (e.g., 80 GB or more) then a first and second copy are stored on data source device  and storage , respectively. Should the storage capacity be less than the threshold, at least some information is stored only on storage  but not on data source device . In some embodiments, storage utilization (e.g., a percentage of storage occupied) is used. In some cases, one file system object is stored in one manner (e.g., on both data source device  as well as storage ) while simultaneously another is stored in another manner (e.g., only on storage  but not on data source device ). In some embodiments, a file system object is stored only on data source device  but not on storage  (e.g., because a user has indicated protection is not needed for that file system object).","In some embodiments, storage  is a subscription storage service. For example, a user may pay to have a certain amount of storage capacity on storage  and is given one or more credentials (e.g., a username, a key, and\/or a password) to add new data, access stored data, etc. Credentials may also be referred to as authentication information. In some embodiments, data source device  is configured to communicate or otherwise interoperate with a plurality of storage providers. For example, data source device  may have the ability to interoperate with multiple cloud storage providers such as EMC Atmos and Amazon Cloud Drive. An example of interaction with storage  (including how to specify at data source device  which storage provider to access and exchange of credentials between data source device  and storage ) is described in further detail below.","In some embodiments, one or more policies are applied at storage . For example, a policy may relate to retention compliance (e.g., document retention policies such as for discovery in litigation, record keeping, etc.). This may be desirable since data retention and\/or compliance needs can change over time and implementing a new policy may be difficult if information is spread out over many devices. Using the techniques described herein, there does not need to be an update at data source device  should a policy change. Rather, updates to policies or processes that enforce them are implemented on storage . For large corporations with many employees, updating a policy or process at a central server or central storage may be easier to manage than getting all of the employees to update their devices whenever a policy changes (e.g., keep email records for 7 years instead of 5 years, begin archiving, etc.). In some embodiments, the polices applied at storage  are based on the metadata stored by the data source .","One benefit to the techniques described herein is simplified and automated backup and recovery. For example, if data source device  fails or is misplaced, recovery of at least some information is possible because a copy is stored on storage . The transfer or copying of data from data source device  to storage  is performed automatically by data source device . In contrast, manual backup relies upon a user, leaving data vulnerable to failure or loss of the data source device since users may fail to perform backups on a frequent enough basis.","Another advantage to the technique described herein is that in some embodiments, maintenance is managed by another person. For example, if storage  is cloud storage and\/or subscription based, a storage service manages and maintains storage . This may be preferable to buying new hardware, maintaining it and replacing it when its useful lifetime is over. Another advantage is that storage capacity can be easily expanded. Instead of having to buy more storage, a person can contact a storage provider managing storage  and buy more storage.","Although remote device  is shown as a desktop computer and data source device  is shown as a laptop, a variety of device may be used. In various embodiments, data source device  is a laptop, a smart phone, etc.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","b":"200"},"The contents of the directory are grouped into two groups: group  and group . Group  (which includes the Music directory and all directories and files beneath it) is stored on a data source device (e.g.,  in ) but not on storage accessible via a network (e.g.,  in ). Group  (which includes the Pictures directory, all directories and files beneath the Pictures directory and the Resume file) is stored on remote storage (e.g.,  in ) but not on a data source device (e.g.,  in ). Metadata associated with group  in some embodiments is stored on a local source device.","The data management technique described herein is transparent to a user of a data source device, such as  in . For example, the dashed lines showing groups  and  in file system GUI  are not presented to the user and therefore the user is unaware of those groupings. From the point of view of other entities on a data source device, such as an application, they too are not necessarily aware of where or how a file system object is stored. For example, if the application Microsoft Word requested the Resume file, the application would not be able to detect whether the data came from a drive mounted on a data source device as opposed to being stored on remote storage. Similarly, file system GUI  (which may be thought of as an application) is not able to detect where group  or  is. To file system GUI  there is no difference between the two groups.","In some embodiments, a decision how or where to store information (e.g., store on both a data source device and remote storage, or store only on one of the two) is based upon frequency of access. Group  (comprising the resume file and Pictures directory) is accessed relatively infrequently whereas group  (the Music directory) is accessed more frequently. To reduce response time and\/or access requests over a network, frequently accessed information (e.g., on a relative scale or on an absolute scale) is stored on a local source device, at least in this embodiment.","Referring back to , file system objects originating from data source device  which are stored on storage  are available via remote device . For example, from an Internet browser application (e.g., Mozilla Firefox or Microsoft Internet Explorer) running on remote device , information stored on storage  may be accessed. This may be attractive if data source device  is not available, for example because it has been lost, is not powered on or is not connected to network . The following figure shows an example interface from which data on storage  is accessed from remote device .",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 3","FIG. 1"],"b":["106","300"]},"In this example, group  from  is not stored on a storage device accessible via a network and group  is. As a result, the contents of group  are not presented in interface  because they are not stored on such a storage device and the contents of group  are presented in interface  because they are. For each file system object, interface  shows the name (e.g., Resume), storage timestamp (e.g., Aug. 13, 2011 @ 6:00 PM), modification timestamp (e.g., Aug. 10, 2011 @ 2:15 PM) and size (e.g., 58 KB). In this example, two versions of each file system object are shown. If older versions are desired, a user can press one of buttons  and interface  will present one or more older versions. To access a particular file system object, a user may use a mouse and double click on the corresponding icon and\/or description. Double clicking on one of the Pictures directory will cause the contents of the Pictures directory (at the corresponding time of storage) to be presented to the user.","In various embodiments, interface  provides a variety of tools or services for accessing and manipulating data. For example, if the Internet browser application which presents interface  is running on remote device  from , then a user may be able to populate remote device  with the data shown. For example, by selecting one or more versions of a file system object and then using a right-select from a mouse (not shown), a \u201cdownload selected\u201d action may be initiated which causes the selected versions to be downloaded to a device on which the Internet browser application is running. In some embodiments (not shown), interface  includes a button labeled \u201cdownload latest versions of all\u201d to provide an easy way to populate a device with the latest versions of the stored file system objects. In one example application with reference to , a user has misplaced data source device  and is populating remote device  (a replacement for data source device ) with the latest version stored on storage .","The following figures show some embodiments of agents on a data source device which are configured to perform the data management techniques described herein. In some other embodiments, the techniques described herein are implemented in some other manner.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 4","FIG. 1"],"b":["100","400","402","404","404","406","408","408"]},"Application  provides access to and manipulation of file system objects, for example in response to user instructions. Some example applications include Windows Explorer, word processing applications, spreadsheet\/database applications, Internet browser applications, etc. In some cases, more than one application is installed on a data source device and in some cases a particular file system object can be accessed by more than one application. Instructions associated with a desired file system object are passed from application  to data manager . In one example, application  has a unique identifier for each file system object in a file system and some example commands passed from application  to data manager  include: \u201cread <file system object identifier>\u201d or \u201csave <data> as <file system object identifier>.\u201d In some embodiments, multiple versions of a file system object are stored and an application is interested in a specific version (e.g., application  is a backup and restore application). In such cases, application  may specify a version or timestamp to data manager .","Data manager  is responsible for handling instructions passed to it from application , as well as tracking where a file system object is stored (e.g., only on a data source device, only on remote storage or on both). For example, if application  requests access to information which is stored only on data source device , then the access request is passed to file system . If application  requests access to information which is only stored on storage , then the access request is passed to data mover . Upon return of the requested information from data mover  or file system , the returned information is presented to application . Requested information may include metadata for a file system object, data (e.g., contents) of a file system object or both metadata and data.","Data mover  is responsible for communicating with storage  to perform an instruction passed to it by data manager . This includes recording and exchanging a location or address associated with storage  (e.g., in the form of an IP address or a URL) and any credentials required by storage  (e.g., a username, password or token) in order to access user account  on storage . In some embodiments, storage  uses different identifiers and\/or manages data in smaller units compared to data manager  and data mover  maintains a mapping of identifiers from one format to another. For example, data manager  may specify data at a file system object level but storage  specifies information at the block level; data mover  in some embodiments is responsible for mapping a file identifier to one or more block identifiers.","Storage  includes user account  in which data from data source device  is stored. User account  may be a logical partition as opposed to a physical partition, and the size of user account  may depend upon a purchased plan. For example, storage  may be cloud storage where a user has a subscription for a specified amount of storage capacity which is accessible from anywhere via the Internet. In embodiments where data source device  and storage  are connected via the Internet, various Internet protocols and access techniques may be used, such as the representational state transfer application programming interface (REST API).","During an installation process, data manager  and data mover  are installed on a data source device. Data mover  and data manager  run on top of file system , which is part of an operating system. To install data manager  and data mover  therefore does not require modification of and\/or installation of a new operating system (e.g., Microsoft Windows), nor a new file system (e.g., New Technology File System (NTFS)). One benefit to this architecture is that the techniques described herein can be installed on a data source device without deleting existing data on that device. Installing a new operating system and\/or new file system may wipe out data stored on the data source device, which is undesirable. Another benefit is that no cooperation or agreement with companies that develop and produce operating systems or file systems is required. The techniques described herein can be performed without having to add any hooks into an operating system or file system.","The following figures show some examples of a data mover and a data manager.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 5","FIG. 4"],"b":["404","500","501","502","504","502","504","406"]},"In general, data manager  tracks and manages the locations of metadata and data and specifically if data and metadata are stored locally on a data source device (e.g., by a data manager or a file system), remotely on storage or some combination. In this example, a data manager only manages metadata but no data and only for certain file system object and\/or when certain conditions are satisfied. Data and its corresponding metadata can be stored in various combinations and some examples are described in further detail below. In some embodiments, a data manager is configured to always operate in a certain way (e.g., using register settings, a data manager is instructed to keep metadata for all file system objects under its management but no corresponding data and keep metadata and data for all file system objects on remote storage). In some embodiments, a data manager is configured to copy or migrate metadata and\/or data based on capacity and\/or a percent used.","Controller  interfaces with an application (e.g., application  in ), a data mover (e.g., data mover  in ) and a file system (e.g., file system  in ). Commands, requests and\/or instructions (hereinafter generally referred to as instructions) are intercepted by controller  from an application. For example, Windows Explorer may send an instruction to obtain the contents of a directory. Controller  determines where to send the instruction from the application (e.g., to a data mover or to a file system) and forwards it accordingly. This determination is done using the information stored in data manager catalog . In some embodiments, the instruction is processed by the data manager without sending the instruction to a data mover or a file system.","Data manager catalog  includes an identifier by which a file system object is known to an application (). An instruction intercepted from an application will include this identifier, and an appropriate row is looked up from data manager catalog  using this value. For each file system object tracked in data manager catalog , the metadata location (), data location (), identifier by which a file system object is known to a file system () and identifier by which a file system object is known to a data mover () is kept. In some cases, certain fields are not relevant and the field is blank or ignored. In a background process, data manager  may copy or migrate metadata or data from a data source device to remote storage and records this information in data manager catalog  by updating the appropriate entry or creating a new one.","To illustrate the various storage combinations for data and its corresponding metadata, as well as how data manager operates, the following read instruction examples are presented. Although not discussed in this figure, a copy or migration process would update the appropriate fields and\/or rows if needed.","In response to intercepting an instruction from an application to return the contents (i.e., data) of file system object A, controller  accesses row  in data manager catalog . The data and its corresponding metadata are managed by both the file system and remote storage as indicated in row , so the instruction can be passed to either a data mover (to obtain the requested information from remote storage) or a file system (to obtain the requested information from local or built in storage). In some embodiments, a data manager in this situation is configured to always send the instruction to the file system since execution of the instruction by the file system may be faster. In some embodiments, a decision is made based upon current conditions, such as available processing resources on the data source device, available network bandwidth to the remote storage, etc. Since the instruction is passed to a file system, in this example the identifier stored in column  is obtained and an appropriate instruction with the identifier B is passed to the file system. If an instruction were passed to a data mover, then the identifier C would be obtained from column  and the identifier C along with an appropriate instruction is passed to a data mover.","In the event a read instruction with the identifier A is intercepted from an application, row  is obtained from data manager catalog . In this case, the metadata is stored both by a storage device accessible via a network as well as the data manager and the data is only stored on storage. As such, there is no identifier by which the file system object is known to the file system since it is not kept or otherwise managed by the file system object. Accordingly, the instruction is passed on to and serviced by a data mover, which knows the file system object by the identifier C since both the metadata and data are required to satisfy the instruction. In this example, the metadata for this file system object is stored in metadata repository . Metadata repository is used to store metadata for those file system objects for which only the metadata (but not the corresponding data) is kept on a data source device by the data manager.","In the example of row , the metadata and data are stored on a storage device accessible via a network but not by a file system on a data source device. There is therefore no identifier by which the file system object is known to the file system () but there is an identifier by which the file system object is known to a data mover. No metadata for this file system object is stored by the data manager, so there would be no metadata corresponding to this file system object in metadata repository .","The metadata and data corresponding to row  are both stored by a file system on a data source device, but neither the metadata nor the data are stored on remote storage. Column  is therefore empty for this row.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 6","FIG. 4"],"b":["402","600","601","602","604","606","608","600"]},"Controller  receives an instruction from a data manager, for example to write (read) metadata and\/or data to (from) storage which is accessible via a network. To generate an instruction that the storage is able to process, various pieces of information are obtained. The follow steps may be performed in any order.","First, controller  determines which of the N storage interfaces  and  to use. In this example, data mover  is configured to support multiple storage types and each of storage interfaces - supports a different type of storage interface or storage provider. During an initialization process, it is determined which storage interface is the appropriate one to use (e.g., by asking a user or probing storage target). Once determined, the appropriate storage interface is stored in storage type  of settings and user information . In some embodiments, the same file system object may be stored on a plurality of storage interfaces, for example to provide redundancy.","Controller  then obtains any credentials required to access a user account on storage. In this example, this information is kept in settings and user information  in the username field (), token and\/or certificate field () and password field (). Settings and user information  may also be used to store any other storage settings. In one example, suppose a storage provider lets each user specify whether their account can only be accessed via encrypted communication. This setting may be recorded in storage settings . Provider specific storage settings (if any) may depend upon storage implementation and in some cases this field is empty or ignored. In some embodiments, a storage setting is used for load management by a data manager. For example, an amount of storage purchased from a storage provider is recorded in  so that a data manager can decide where or how to store information based on the storage capacity of the remote storage and\/or that of the data source device.","In some cases, remote storage uses its own set of identifiers. If needed, identifier mapping or translation is performed using data mover catalog . Using an identifier included in the instruction received from the data manager, controller  will (if needed) look up the identifier by which the file system object is known to a data manager () to determine the corresponding identifier by which the file system object is known to storage (). In some embodiments, a file system object is broken up into multiple pieces on storage and multiple identifiers are stored in column . In various embodiments, the identifiers stored in column  are (e.g., virtual or physical) storage locations, human-readable names, inode numbers, etc.","In some embodiments, a user specifies which of storage interfaces  and  to use during an initialization process. In some other embodiments, a user provides a storage location or storage address (e.g., a URL or IP address) and data mover  goes through the various storage interfaces, attempting to communicate with the storage via the network until one interface is successful. In some embodiments, only one storage interface is active at a time. In some embodiments, more than one storage interface is active at the same time (e.g., the user has an account with both EMC Atmos and Amazon Cloud Drive and wants to use both accounts).","In some embodiments, the configuration shown is attractive because it permits a system to store information with different storage providers and\/or permits easy switching from one storage service provider to another. In one example, a user is able to switch from one storage provider to another storage provider without having to reinstall a storage agent on the user's data source device. Settings and user information  and data mover catalog  would be updated to reflect the new storage provider; in some cases it is not necessary to update the information stored in data manager catalog  in  if that information is not storage provider specific.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 7","FIG. 1","FIG. 4"],"b":["100","404","402"]},"At , a data manager and data mover are downloaded to a data source device. In various embodiments, a download occurs off of removable media (e.g., a CD or a thumb drive) or from a network accessible site (e.g., going to a website and downloading the data mover and data manager from there).","At , relevant input\/output paths are reconnected on a data source device so that appropriate connections to\/from an application and to\/from a file system are rerouted to a data manager. For example, in , one or more connections between application  and file system  (not shown) are severed. Ports from application  are then connected to corresponding ports on data manager , and similarly ports from file system  are connected to corresponding ports on data manager  (not shown). In some embodiments, the data manager is configured as a file system filter driver.","Storage information used to access storage is obtained at . For example, a user interface may be presented to a user asking them for the URL, location or name of their storage provider. In some embodiments, a pull down menu (or other control in a user interface) is presented which includes all of the storage types or storage providers supported by a storage agent. In some embodiments, one selection is \u201cNone of the above.\u201d Other pieces of information obtained include user information and storage settings. For example, if the user indicated they have an EMC Atmos account, a user interface may ask for EMC Atmos storage specific options or settings. In some embodiments, additional information such an amount of storage is obtained at . The storage information is stored at . For example, fields - are populated in .","Referring back to , after the above initialization process is performed, settings and user information  in  may be populated, but data mover catalog  in  and data manager catalog  and metadata repository  in  may be empty. In some cases, those catalogs and repository are populated as a data manager intercepts instructions from an application and learns about existing metadata and existing data. As an example of a learning process, if data manager  in  receives an instruction with an identifier it cannot find in data manager catalog , it creates a new row for it with the data location and metadata location as \u201cfile system.\u201d In some embodiments, a data manager catalog is populated by a background task which runs periodically to identify files which need to be moved or migrated to storage.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 8","FIG. 4"],"b":["800","400","404"]},"It is determined at  if an instruction is able to be satisfied by a file system. For example, some information associated with the data may only be managed by one entity and if that entity is not the file system then the file system cannot satisfy the instruction. In some cases, both the file system and another entity (e.g., a storage accessible via a network) can satisfy the instruction and it is determined that the file system can satisfy the request. In some embodiments, records managed by a storage agent running on a data source device are searched using an identifier included in the received request to perform the determination at ; an example of this is described in further detail below.","If it is decided at  that an instruction is able to be satisfied by a file system, then at  an instruction is performed using the services of a file system. For example, an instruction may be sent from data manager  in  to file system ; in some embodiments a mapping is performed to map an identifier included in the instruction from the application to an identifier by which the file system knows it. In some embodiments performing an instruction at  includes returning a response to the application. For example, if the instruction is a read request then the requested information is received from the file system and returned to the application In some other examples, a confirmation is returned, for example a confirmation that a write instruction has been executed.","If it is determined at  that an instruction is not able to be satisfied by a file system, then an instruction is performed without the services of a file system. This is transparent to an application and the application is unaware that some file system objects are managed by an entity other than the file system running on the data source device. For example, the expected responses or behavior of a data manager would exactly mimic or match that of a file system so that an application would be unaware that a given file system object is being stored by and\/or managed by an entity other than the file system. The application is unaware that some information is kept on a storage device accessible via a network. In various embodiments, performing an instruction at  mapping an identifier included in the instruction from the application (if needed) and sending an instruction to the appropriate entity for execution.","In some embodiments, a storage device accessible via a network performs the instruction at . In some embodiments, one or more credentials are exchanged via a network to obtain access to the storage. Some examples of credentials exchanged include a username and password. In some embodiments, a storage device (e.g., specified by a URL or website) provides storage services to multiple users and the credentials exchanged are used (at least in part) to determine which one of the service provider's users is requesting access. In some embodiments, the storage is cloud storage where information is accessible via the web or Internet protocols. In one example, a data mover may communicate via a REST API to read or write information stored in a user's account with a cloud storage provider.","In some embodiments, an agent running on a data source device (e.g., a data manager) performs the instruction at . For example, a data manager may store metadata (but not necessarily data) for some\/all file system objects. A data manager may be able to satisfy the instruction if (for example) the file system object is not managed by the file system and the instruction relates only to metadata and the metadata in question is stored by the data manager.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 9","FIG. 8","FIG. 4","FIG. 5"],"b":["802","404","900","902","3","502"]},"A decision is made at  based on the records. If the records indicate 1) the information is stored only by a file system, 2) both the file system and a storage device accessible via network have the information or 3) the identifier cannot be found in the records then the instruction is sent to a file system of a data source device at .","If the records indicate the metadata in question is managed by a data manager, then the instruction is processed at the storage agent at . For example, data manager  in  stores metadata for some or all file system objects in metadata repository . Based on the records, the data manager is able to determine that the requested metadata is stored in metadata repository  (and no data is requested so the data manager can satisfy the request without requiring the services of a file system or remote storage).","If the records indicate the information is only stored on storage accessible via a network, then the instruction is sent to the storage accessible via a network at . For example, if metadata for a given file system object is stored both on remote storage as well as by a data manager on a data source device but the corresponding data is only stored on remote storage, then a request to append additional data to the file system object would be sent to the storage over the network.","After appropriate handling at ,  or , records maintained by a storage agent are updated if needed at . For example, if the instruction relates to a new file system object, then a new entry in a data manager catalog may be created, for example indicating where the metadata and data for the new file system object are located.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 10","FIG. 4","FIG. 4"],"b":["402","404","400"]},"It is determined at  if storage capacity is less than a first threshold. In one example, the first threshold is a certain number of bytes. In some embodiments, the decision at  does not take into consideration how much storage is used, but rather the size of a local memory on the data source device. Devices with relatively small local or built-in capacity may become full relatively quickly and it may be desirable to migrate file system objects now rather than waiting. If the storage capacity is greater than the first threshold at , it is determined at  if a percentage of storage utilization is greater than a second threshold (e.g., 90% utilization). If the percentage of storage utilization is less than a second threshold at , one or more file system objects are copied from a data source device to storage accessible via a network at . As described above, copying means that a version is kept on a data source device.","If storage capacity is less than a first threshold at  or a percentage of storage utilization is greater than a second threshold at , one or more file system objects are migrated from a data source device to storage accessible via a network at . In some embodiments, migrating at  includes deleting data and metadata for the migrated file system objects from the file system of a data source device and migration at  includes generating a delete instruction to be processed by the file system. In some embodiments, copying at  does not include such a delete instruction for the copied file system objects. In some embodiments, if a file system object is already copied to the storage (for example in step ), then step  involves only deletion of the object from the local file system.","It is determined at  which of the migrated file system objects to store metadata for on a data source device. In some embodiments, metadata for those file system objects which are most frequently accessed are stored on a data source device. In some embodiments, metadata for all migrated file system objects is stored on a data source device. At , metadata is stored on a data source device for those file system objects, outside of management by a data source device's file system. For example, the metadata may be stored in metadata repository  under the management of data mover  in . In some embodiments, the types or fields of metadata which are stored at  are those which would be requested by a file system (graphical) user interface, such as Microsoft Windows Explorer or a command in a command line interface to list directory contents (e.g., ls or dir). This may be desirable since contents of a directory may be presented to user, along with any pertinent or requested properties of the contents of the directory, without having to communicate over a network to access remote storage. In some embodiments, metadata for a file system object is stored in the same object as a file system extended attribute, in addition to, or instead of, the file data.","In various embodiments, various techniques may be used to migrate or copy file system objects at  and , respectively. In some embodiments, all file system objects are copied or migrated. In some embodiments, specific file system objects are selected for copying or migration based on user input. For example, a user may indicate certain types of files are to be protected (e.g., spreadsheets, word processing documents and database files) whereas others do not need to be protected or should only be protected if there is available space (e.g., photographs and music files). In some embodiments, if all file system objects can fit into a user account on remote storage then all file system objects are copied or migrated. In some embodiments, copying or migrating a file system object includes storing metadata for that file system object on the storage accessible via a network. This metadata may be used in presenting a copy of a file system object on remote storage to a user or application if so requested by a device other than the data source device (e.g., access to a file system object on storage  in  is requested by remote device ) and so keeping metadata with its corresponding data on remote storage may be useful since without metadata the corresponding data may be less useful. In some embodiments, metadata stored on storage device  includes additional information such as the identity of the data source , or the full file system path on the data source .",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 11","FIG. 5"],"b":["1100","1102","1104","1106","1102","1106","504","1102","1106","1100"]},"Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding, the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed embodiments are illustrative and not restrictive."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various embodiments of the invention are disclosed in the following detailed description and the accompanying drawings.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
