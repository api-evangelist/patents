---
title: System and method for enforcing application adoption
abstract: A method includes determining that a legacy application is executing on a client device. When the legacy application is open in the client device, an adoption rule is applied, wherein the adoption rule defines an instance in which a user is required to use a replacement application instead of the legacy application. When it is determined that the adoption rule is satisfied, the replacement application is executed and use of the legacy application is prevented.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09141384&OS=09141384&RS=09141384
owner: VERIZON PATENT AND LICENSING INC.
number: 09141384
owner_city: Basking Ridge
owner_country: US
publication_date: 20110726
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["Converting software applications in an enterprise setting can be a very costly and disruptive endeavor. Typically, companies must invest significant time and resources in training their staff to use the new applications. In addition, rapid switchover from a legacy application to a new application can result in significant lost productivity, while the employees learn the new system.","In some instances, enterprises allow users to use both applications for a prolonged period of time, thereby increasing productivity. However, the availability of a comfortable, known alternative often retards the time taken to learn the new system or application","The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. Also, the following detailed description does not limit the embodiments disclosed herein.","Consistent with implementations described herein, an upgraded or updated application adoption system may be provided that enforces an application upgrade path based user usage statistics and other heuristics. For example, an adoption enforcement application executing on a workstation may monitor a user's behavior with respect to a particular application. Characteristics of the monitored behavior may be compared to a number of adoption enforcement rules to identify appropriate adoption support measures. Exemplary adoption support measures could include forced execution of the updated application, tutorial execution, help screens, reminders, notifications to managers, time limitations for execution or removal of the old (e.g., non-updated application), etc.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1","b":["100","100","105","1","105","2","105","105","105","125","100","110"],"i":"x "},"Consistent with embodiments described herein, client devices  may include any suitable computing device capable of executing an application, such as desktop computers, laptop or notebook computers, tablet computers, workstations, smartphones, etc., or any device capable of initiating, transmitting, and receiving data communications via network . It should be understood that although environment  includes three client devices , in practice, a typical system may include any number and type of client devices .","As shown schematically in , client devices  may include a legacy application , a replacement (or upgraded\/updated) application , and an adoption client  executing thereon (among other devices and components). Legacy application  may include any type of software application, program, plugin, etc. that is being transitioned to replacement application . For example, legacy application  may include an customer resource management (CRM) application that is being phased out in favor of a new CRM application . Consistent with implementations described herein, both legacy application  and replacement application  may be resident and executable on client device  during the transition or adoption period.","As described in detail below, adoption client  may be a transparent application or process configured to monitor a user's usage of replacement application  and legacy application . In some embodiments, adoption client  may be configured to execute a number of adoption rules based on, for example, input or information received from users, such as keystroke input, commands, user interactions, duration of use, etc. to enforce a transition or adoption program associated with replacement application . In addition, adoption client  may communicate information relating to usage of replacement application  and legacy application  to IT infrastructure  via network .","IT infrastructure  may include one or more devices configured to facilitate management of client devices  and applications or systems executable by or available to client devices . For example, in one implementation, IT infrastructure  may include devices associated with an enterprise IT department, such as remote management workstations, server devices, printers, etc.","As shown schematically in , in some implementations, IT infrastructure  may include an application update server  (among other devices and components). Application update server  may include any device or combination of devices configured to support systematic and enterprise-level updating or replacement of applications or software programs resident or executing on client devices . For example, application update server  may be configured to communicate with adoption clients  on client devices  to enforce enterprise-wide adoption policies.","In some embodiments, application update server  may be configured to distribute updated or replacement application  (or plugins, patches, add-ons, extensions, etc.). Application update server  may be further configured to distribute an initial set of adoption rules to adoption clients . As described above, the adoption rules may indicate how and when adoption enforcement and\/or assistance is provided to users. Application update server  may receive data from adoption clients  indicative of an adoption effectiveness across the enterprise (e.g., across all client devices ). Based on this data, application update server  may heuristically update the adoption rules and may re-distribute the updated adoption rules to adoption clients . The approach to adoption rules may provide a more effective and efficient update transition with the lowest amount of lost time and productivity.","Network  may include any packet-based network capable of permitting devices - to communicate with each other. For example, network  may include a local area network (LAN), a wide area network (WAN), a metropolitan area network (MAN), a telephone network, such as the Public Switched Telephone Network (PSTN), an intranet, the Internet, an optical fiber (or fiber optic)-based network, or a combination of networks.","The exemplary configuration illustrated in  is provided for simplicity. It should be understood that a typical network may include more or fewer devices or entities than those illustrated in . For example, other devices that facilitate communications between the various entities illustrated in  may also be included in environment .","The environment described in  is over-simplified for the purposes of brevity and may include any number of client devices , networks , or infrastructure devices . In addition, environment  may include other devices not depicted in . In some embodiments, the functionality of application update server  and\/or adoption clients  may be implemented in other devices, such as a particular client device  (e.g., a desktop computer, laptop, or client device, such as a router, gateway or switch). Additional details regarding the operation of application update server  and adoption clients  are set forth in additional detail below.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 2","FIG. 2"],"b":["105","120","105","120","210","220","230","240","250","260","270","280","105","120","105","120"]},"Bus  may include a path that permits communication among the elements of device \/. Processor  may include one or more processors, microprocessors, application specific integrated circuits (ASICs), field programmable gate arrays (FPGAs), or other processing logic that may interpret and execute instructions. Memory  may include a random access memory (RAM) or another type of dynamic or static (e.g., read only memory (ROM)) storage device that may store information and instructions for execution by processor . Storage device  may include a magnetic and\/or optical recording medium and its corresponding drive. Power supply  may include a battery or other power source powering service provider .","Input device  may permit a user to input information to client device , such as a camera, a sensor (e.g., a motion detector), microphone, a keypad, a keyboard, a touch screen, a mouse, a pen, etc. Output device  may output information to the user, such as a display, a printer, one or more speakers, etc.","Communication interface  may include a transceiver that enables device \/ to communicate with other devices and\/or systems, such as other client devices  and\/or IT infrastructure . For example, communication interface  may include interfaces, such as a modem or Ethernet interface, for communicating via a network, such as network .","In implementations consistent with embodiments described herein, device \/ may perform processing associated with implementing and enforcing application update or replacement adoption. Device \/ may perform these operations in response to processor  executing sequences of instructions contained in a computer-readable medium, such as memory . A computer-readable medium may include a physical or logical memory device. The software instructions may be read into memory  from another computer-readable medium, such as data storage device , or from another device via communication interface . The software instructions contained in memory  may cause processor  to perform processes that are described below. Alternatively, hard-wired circuitry may be used in place of or in combination with software instructions to implement processes consistent with the embodiments described herein. Thus, implementations described herein are not limited to any specific combination of hardware circuitry and software. For the purposes of this application, a \u201ccomputer\u201d may be defined as a device, or combination of devices, that performs high-speed mathematical or logical operations, or that assembles, stores, correlates, or otherwise processes information.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 3","FIG. 1","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3"],"b":["114","115","230","305","310","315","320","220","230","105"]},"Legacy application monitoring logic  may include software or a combination of hardware and software configured to monitor user interactions with an original or legacy application  (e.g., the software application to be upgraded, updated, or replaced). As described briefly above, in some instances, it may be desirable and more efficient to enable users to transition from legacy application  to replacement application  over a period of time. This allows the user to perform their function to a desired level, while simultaneously building familiarity with the new software.","For example, legacy application monitoring logic  may be configured to monitor whether legacy application  is running and the length of time that a user uses legacy application . This time may be measured in absolute time (e.g. application running for x hours on mm\/dd\/yyyy) or in terms of active user engagement. Discerning user engagement may be based on a number of factors, such as determining whether legacy application  is running in an \u201cactive\u201d window on a client device , whether legacy application  is receiving affirmative user interactions (e.g., clicks, data entry, etc.). In other instances, replacement application usage time may be calculated relative to legacy application usage time.","Replacement application monitoring logic  include software or a combination of hardware and software configured to monitor user interactions with replacement or upgraded application . For example, similar to legacy application monitoring logic , replacement application monitoring logic  may monitor an execution state of replacement application  and the amount of time that the user interacts with replacement application .","In addition, replacement application monitoring logic  may be configured to monitor interaction with replacement application  in a more granular manner. For example, replacement application monitoring logic  may monitor keystrokes or input received in replacement application  and may determine an accuracy or efficiency of the interactions based on the features of replacement application  being used.","In one implementation, legacy application monitoring logic  and\/or replacement application monitoring logic  may identify executing or open applications by calling retrieving a list of all windows currently running or executing on client device . The text of any open windows may be retrieved and the text compared to identifiers associated with legacy application  and replacement application  to determine the execution state of each application. For example, in a Microsoft Windows\u00ae environment, application programming interfaces (APIs) for EnumWindows (to retrieve list of currently running windows), GetWindowHandler (to open the window handler), and SendMessage with parameter wm_gettext (to extract the text from each window caption.","For individual user interactions, replacement application monitoring logic  may be configured to identify user controls present in a particular window or application interface screen and to retrieve the content of the available controls. User selections of particular controls may then be determined and used as a basis for triggering various adoption actions, as described in addition detail below. For example, in a Microsoft Windows environment, a GetChildWindow API may be implemented to retrieve a list of user controls in a window and the SendMessage with parameter wm_gettext may be used to extract the text from each user control.","In addition, replacement application monitoring logic  may be configured to use a dynamic link library (DLL) to install a hook function into client device  to intercept all and handle all The keystrokes received in replacement application . The received keystrokes can be used (alone, or in combination with other elements, such as user control identification information) to trigger adoption client actions.","Replacement application monitoring logic  may be further configured to generate or compile statistics (also referred to as logs) regarding user interactions with replacement application , such as accuracy statistics, usage time statistics, etc. The generated statistics may be periodically transmitted to application update server  for use in adjusting the adoption rules or providing addition assistance to users via changes to replacement application  or adoption client .","As described below, the determined statistics may also be used by enforcement logic  to provide appropriate feedback and based on a number of adoption rules received from application update server  and stored in adoption rules logic . More specifically, the adoption rules received from application update server  may dictate responses to information determined by legacy application monitoring logic  and replacement application monitoring logic  implemented by enforcement logic . In some instances, adoption rules may be segmented based on a number of adoption stages, indicating a phase in a user's transition from legacy application  to replacement application . For example, first phase adoption rules may be applied upon initial installation of replacement application  and may be used until the user demonstrates a predetermined level of proficiency at using replacement application , as identified via a predetermined accuracy level in replacement application monitoring logic . Subsequent to the user demonstrating the predetermined level of proficiency, second phase adoption rules may be applied, etc.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 4","b":["400","400","405","1","405","405","405","405","405","400","114","112","405","410","415","420","425"],"i":"x "},"Legacy application identifier field  may include a value representing the legacy application  to which the rule applies. For example, entry - indicates a legacy application identifier of CRMPro v3.25. Although entry - designates an identified legacy application identifier that corresponds to an actual application name and version, in other implementations, the value provided in legacy application identifier field  may include a different identifier that corresponds to the particular application. For example, a value of 13546 may be associated with CRMPro v3.25.","Replacement application identifier field  may include a value representing the replacement application  to which the rule applies. For example, entry - indicates a replacement application identifier of ResourceTools v1.4.","Trigger field  may include a value indicative of the event or statistic that causes execution of the action designated in action field . Exemplary trigger field values may include time-based triggers, activity-based triggers, statistics-based triggers, or combinations thereof Time-based triggers may identify expiration of particular time periods, such as \u201clegacy time exceeds two successive hours,\u201d \u201ctime since last reminder is 60 minutes,\u201d legacy time exceeds two hours in last eight hours,\u201d etc. Activity-based triggers may identified monitored activities, such as \u201clegacy opened,\u201d \u201cincorrect command on screen ,\u201d \u201clegacy keystrokes detected,\u201d etc. Statistics-based triggers may identify statistical elements determined by replacement application monitoring application , such as error rates, etc, such as \u201c50%>error rate>25%,\u201d indicating that the generated error rate is between 25 and 50%, \u201c25%>error rate>15%,\u201d etc. Compound or combination triggers may include time-related elements and statistics related elements. For example, a compound trigger may include a time component, such as that the user has used the replacement application during weekends for the past two weeks, and an accuracy component, such as that the user's mistake count (during their most recent use) is less than 10. Additional exemplary triggers are illustrated in rules table .","Action field  may include a value indicative of an action to be performed by adoption client  upon satisfaction of the particular rule. Exemplary actions may include reminder display; data translation (e.g., copy from legacy application  to replacement application ); assistance offering (e.g., help screens, tutorials); forced use of replacement application  (e.g., by closing legacy application ), etc. In some implementations, multiple actions may be executed upon satisfaction of a particular rule, action field  may indicate that 1) current data from legacy application  is copied; 2) an element of replacement application  corresponding to the current element of legacy application  (e.g., an order placement screen) is opened; 3) and copied data is inserted into replacement application . In addition, in some embodiments, actions may be executed upon satisfaction of additional criteria, such as time of day, day of week, etc. In some instances, additional actions relating to instructing the user regarding what has occurred and what the next step is may be provided, such as via pop-ups, tool-tips, overlays, etc. In an event, each action may be established based on action field entries in rules database .","Returning to , enforcement logic  may include software or a combination of hardware and software configured to execute actions identified in satisfied adoption rules . For example, using rule - as an example, upon opening or startup (as identified in trigger field  of rule -) of legacy application  (as identified in legacy application field  of rule -), enforcement logic  may retrieve cause client device  to display a reminder indicating that replacement application  is available as an update to legacy application . The action is based on the action identifier from action field  in rule -. Based on the applicable action identifier, different actions may be performed. In this manner, adoption of replacement application and the enforcement mechanisms implemented based on a particular user's actions.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 5","FIG. 1","FIG. 5","FIG. 5","FIG. 5","FIG. 5","FIG. 5"],"b":["120","230","505","510","515","220","230","115"]},"Application distribution logic  may include software or a combination of hardware and software configured to distribute or deploy an application from IT infrastructure  to client devices  via network . For example, application distribution logic  may include systems for deploying replacement application  to client devices . In some instances, application distribution logic  may be configured to determine application requirements, such as libraries, related or dependent applications, etc. and may simultaneously distribute any such requirements to client devices .","Adoption client distribution logic  may include software or a combination of hardware and software configured to distribute or deploy adoption client  to client devices . As described above, adoption client  may include logic to monitor a user's usage of legacy application  and replacement application  and apply adoption rules based on the monitored usage, eventually requiring a user to fully transition from legacy application  to replacement application . Similar to application distribution logic , adoption client distribution logic may be configured to transmit and install adoption client  on client devices .","Consistent with implementations described herein, adoption client distribution logic  may be configured to provide a number of adoption rules within adoption client  for distribution to client devices . As described above, the adoption rules may designate the legacy and replacement applications, elements that trigger actions based on the rules, and enforcement actions for execution by adoption client . In some embodiments, adoption rules may be updated based on unilateral policy changes (e.g., by management, etc.), or based on statistics and data received from adoption clients  regarding accuracy, usage, etc. Adoption client distribution logic  may distribute the updated or modified adoption rules to client devices  within updated versions of adoption client , or via rules or rule definition updates to existing installations of adoption clients .","Adoption rules logic  may include software or a combination of hardware and software configured to maintain and update adoption rules (e.g., rule table ). For example, an initial rule set may be configured or established upon initial deployment of replacement application  to client devices . During the transition period, adoption rules logic  may receive usage statistics from adoption client  (e.g., from replacement application monitoring logic ) for each user device  in network . Based on the received statistics and\/or other data, adoption rules logic  may be configured to heuristically update the adoption rules to maximize the effectiveness and productivity of the users throughout the transition. For example, time-based rules may be decelerated or accelerated (e.g., forced adoption times may be increased or reduced), help\/tutorial text or helper actions may be updated, etc.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 6","b":["112","100","112","114","105","605","120","112","114","105","100","125","112","114","105","125"]},"Adoption client  may be executed on client device  (block ). In some embodiments, adoption client  may be configured to automatically run upon startup of client device  or login of a particular user.","Adoption client  may detect execution of legacy application  (block ). For example legacy application monitoring logic  may determine that legacy application  is running on client device . Next, it may be determined whether any adoption rules  are satisfied (block ). For example, adoption rules logic  may compare rules  in adoption rules table  to corresponding timing parameters, keystrokes, commands, activities to determine whether any adoption rules  should be applied. For example, it may be determined whether legacy application  has just been opened, whether a predetermined amount of time has passed since a last reminder regarding replacement application  has been provided, whether a predetermined limit to legacy application execution time has been exceeded, etc.","If it is determined that no adoption rule has been satisfied, processing returns to block  for a next sampling interval. However, if one or more adoption rules  is satisfied, actions associated with the rules are executed (block ). For example, if a time limit since a last reminder has lapsed, enforcement logic  may display a new reminder or notification regarding replacement application to the user of client device . In some implementations, the reminder may include a link to starting replacement application , etc.","Adoption client  may detect execution of replacement application  (block ). For example replacement application monitoring logic  may determine that replacement application  is running on client device .","User interactions with replacement application  may be monitored (block ). For example, replacement application monitoring logic  may detect interactions with replacement application , such as by monitoring receive keystrokes, user commands, etc. A user accuracy of interactions with replacement application  may be determined (block ). For example, replacement application monitoring logic  may determine instances of mistakes (e.g., incorrect commands, improper usage of legacy commands or keystrokes, etc.), log or track any identified mistakes, and store the log for use in determining adoption rule satisfaction (e.g., for rules based on predefined error rates or accuracy levels).","It may be determined whether a received command or keystroke corresponds to a legacy application command (such as particular keyboard shortcuts associated with legacy application , etc.)(block ). For example, replacement application monitoring logic  may compare received keystrokes or user commands with a table or database of known legacy application commands. In some implementations, the table or database of known legacy application commands includes information regarding corresponding comments in replacement application .","If it is determined that the received keystroke\/command does not correspond to a known or recognized legacy application command (block \u2014NO), processing may return to block  for a next monitoring interval or a next received user command or keystroke. However, if it is determined that the received keystroke\/command does correspond to a known or recognized legacy application command (block \u2014YES), adoption client  may display context-sensitive help to the user relating to the mistake (block ). For example, replacement application monitoring logic  may retrieve help information corresponding to an identified mistake and may display the retrieved help information to the user.","In some implementations, the help information may be displayed in an interactive manner, thereby allowing the user to interact with the help information to view additional help information, tutorial information, or to perform action corresponding to the identified legacy command or keystroke. For example, assume that keystroke F1 in legacy application  corresponds to an \u201cEnter Order\u201d command, but that keystroke F1 in replacement application  does not corresponding to such a command. Consistent with implementations described herein, replacement application monitoring logic  may identify a user's erroneous use of the F1 command and may provide help information that enables the user to determine the proper interaction\/command for attaining the desired result. Processing may return to block  for a next monitoring interval or a next received user command or keystroke.","As briefly described above, in some embodiments, adoption rules  may establish instances in which use of replacement application  is required and use of legacy application  is prevented.  is a flow diagram illustrating exemplary processing of block when such a rule is applied (e.g., a user has surpassed a predetermined length of time without executing replacement application ).","When it is determined that a rule requiring use of replacement application  has been satisfied (block ), adoption client  may display a notification regarding the required use of new application (block ). As described above, in some instances, this determination may be made within a current usage session in legacy application . In order to maximize efficiency and minimize the amount of lost\/redundant work, adoption client  may be configured to extract data from a current interface within legacy application , such as customer information, order information, input text data, etc. (block ). For example, enforcement logic  may be configured to copy the data to a clipboard or other temporary storage on client device .","Next, adoption client  may be configured to open or initiate execution of replacement application  (block ) and may cause execution of an element of replacement application  similar to the open element of legacy application  (block ). For example, enforcement logic  may determine a current element (e.g., screen, process, flow, etc.) associated with legacy application . Enforcement logic  may then open or run a corresponding element in replacement application .","Adoption client  may insert the extracted data into corresponding portions of replacement application  (block ). For example, enforcement logic  may retrieve the portions of extracted information from the storage in client device , and insert the information into corresponding fields within replacement application .","Adoption client  may then close legacy application  (block ). By provided a mechanisms for translating or moving current information from legacy application  to replacement application  in accordance with adoption rules , maximum efficiency may be realized.","Consistent with implementations described herein, a new application adoption system may include a client entity (referred to as an adoption client) that monitors use of both the new application and the original, legacy application that the new application is replacing. User activity with respect to both the legacy application and the new, replacement application may be monitored and compared to a number of adoption rules. The adoption rules may dictate the user's adoption path by enforcing use of the replacement application at various times and in various circumstances, as defined by the adoption rules. For example, one or more adoption rules may dictate that use of the replacement application is forced in the event of various time periods expiring, accuracy rates, etc. In the event of a forced use scenario, data received by the legacy application may be automatically transitioned to the replacement application.","In addition to forced usage of the replacement application, in some implementations, adoption client may also provide contextual help within the replacement application by monitoring user interaction with the replacement application in view of commands and interactions associated with the legacy application.","The foregoing description of exemplary implementations provides illustration and description, but is not intended to be exhaustive or to limit the embodiments described herein to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the embodiments.","Further, while series of blocks have been described with respect to , the order of the acts may be varied in other implementations. Moreover, non-dependent acts may be implemented in parallel.","It will also be apparent that various features described above may be implemented in many different forms of software, firmware, and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement the various features is not limiting. Thus, the operation and behavior of the features of the invention were described without reference to the specific software code\u2014it being understood that one would be able to design software and control hardware to implement the various features based on the description herein.","Further, certain features described above may be implemented as \u201clogic\u201d that performs one or more functions. This logic may include hardware, such as one or more processors, microprocessors, application specific integrated circuits, or field programmable gate arrays, software, or a combination of hardware and software.","In the preceding specification, various preferred embodiments have been described with reference to the accompanying drawings. It will, however, be evident that various modifications and changes may be made thereto, and additional embodiments may be implemented, without departing from the broader scope of the invention as set forth in the claims that follow. The specification and drawings are accordingly to be regarded in an illustrative rather than restrictive sense.","No element, act, or instruction used in the description of the present application should be construed as critical or essential to the invention unless explicitly described as such. Also, as used herein, the article \u201ca\u201d is intended to include one or more items. Further, the phrase \u201cbased on\u201d is intended to mean \u201cbased, at least in part, on\u201d unless explicitly stated otherwise."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 6","FIG. 1"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
