---
title: Dynamically determining whether to process requests synchronously or asynchronously
abstract: Heuristics are employed to dynamically determine whether a given request is to be driven synchronously or asynchronously. The average synchronous service time associated with previously processed requests is monitored and used, in real-time, along with other information, to determine whether the given request is to be driven synchronously or asynchronously.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07099935&OS=07099935&RS=07099935
owner: International Business Machines Corporation
number: 07099935
owner_city: Armonk
owner_country: US
publication_date: 20011001
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS\/PATENTS","TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","BEST MODE FOR CARRYING OUT THE INVENTION"],"p":["This application contains subject matter which is related to the subject matter of the following applications\/patents, each of which is assigned to the same assignee as this application. Each of the below listed applications\/patents is hereby incorporated herein by reference in its entirety:","\u201cTEST TOOL AND METHOD FOR FACILITATING TESTING OF DUPLEXED COMPUTER FUNCTIONS\u201d, Jones et al., U.S. Pat. No. 6,910,158 B2, issued Jun. 21, 2005;","\u201cRESTARTING A COUPLING FACILITY COMMAND USING A TOKEN FROM ANOTHER COUPLING FACILITY COMMAND\u201d, Elko et al., U.S. Pat. No. 6,818,726 B2, issued Nov. 2, 2004;","\u201cCOUPLING OF A PLURALITY OF COUPLING FACILITIES USING PEER LINKS\u201d, Brooks et al., U.S. Pat. No. 6,954,817 B2; issued Oct. 11, 2005;","\u201cMANAGING THE STATE OF COUPLING FACILITY STRUCTURES\u201d, Elko et al., Ser. No. 09\/968,248, filed Oct. 1, 2001;","\u201cSYNCHRONIZING PROCESSING OF COMMANDS INVOKED AGAINST DUPLEXED COUPLING FACILITY STRUCTURES\u201d, Elko et al., U.S. Pat. No. 6,859,866 B2, issued Feb. 22, 2005;","\u201cSYSTEM-MANAGED DUPLEXING OF COUPLING FACILITY STRUCTURES\u201d, Allen et al., U.S. Pat. No. 6,944,787 B2, issued Sep. 13, 2005;","\u201cMETHOD, SYSTEM AND PROGRAM PRODUCTS FOR PROVIDING USER-MANAGED DUPLEXING OF COUPLING FACILITY CACHE STRUCTURES\u201d, Elko et al., U.S. Pat. No. 6,539,495, issued Mar. 25, 2003;","\u201cCASTOUT PROCESSING FOR DUPLEXED CACHE STRUCTURES\u201d, Elko et al., U.S. Pat. No. 6,438,654, issued Aug. 20, 2002;","\u201cSYSTEM-MANAGED REBUILD OF COUPLING FACILITY STRUCTURES\u201d, Allen et al., U.S. Pat. No. 6,266,783, issued Jul. 24, 2001;","\u201cMETHOD, SYSTEM AND PROGRAM PRODUCTS FOR COPYING COUPLING FACILITY STRUCTURES\u201d, Allen et al., U.S. Pat. No. 6,609,214, issued Aug. 19, 2003;","\u201cMETHOD, SYSTEM AND PROGRAM PRODUCTS FOR MODIFYING COUPLING FACILITY STRUCTURES\u201d, Dahlen et al., U.S. Pat. No. 6,594,667, issued Jul. 15, 2003;","\u201cDIRECTED ALLOCATION OF COUPLING FACILITY STRUCTURES\u201d, Dahlen et al., U.S. Pat. No. 6,584,554, issued Jun. 24, 2003;","\u201cMETHOD, SYSTEM AND PROGRAM PRODUCTS FOR COPYING COUPLING FACILITY LOCK STRUCTURES\u201d, Allen et al., U.S. Pat. No. 6,545,414, issued Apr. 8, 2003;","\u201cMETHOD OF CONTROLLING THE FLOW OF INFORMATION BETWEEN SENDERS AND RECEIVERS ACROSS LINKS BEING USED AS CHANNELS\u201d, Gregg et al. U.S. Pat. No. 6,681,254, issued Jan. 20, 2004;","\u201cSYSTEM OF CONTROLLING THE FLOW OF INFORMATION BETWEEN SENDERS AND RECEIVERS ACROSS LINKS BEING USED AS CHANNELS\u201d, Gregg et al. U.S. Pat. No. 6,051,995, issued Apr. 18, 2000;","\u201cSYSTEM OF PERFORMING PARALLEL CLEANUP OF SEGMENTS OF A LOCK STRUCTURE LOCATED WITHIN A COUPLING FACILITY\u201d, Dahlen et al., U.S. Pat. No. 6,233,644 B1, issued May 15, 2001;","\u201cMULTI CHANNEL INTER-PROCESSOR COUPLING FACILITY PROCESSING RECEIVED COMMANDS STORED IN MEMORY ABSENT STATUS ERROR OF CHANNELS\u201d, Elko et al., U.S. Pat. No. 5,574,945, issued Nov. 12, 1996;","\u201cMETHOD, SYSTEM AND PROGRAM PRODUCTS FOR MANAGING CHANGED DATA OF CASTOUT CLASSES\u201d, Elko et al., U.S. Pat. No. 6,230,243 B1, issued May 8, 2001;","\u201cMETHOD AND SYSTEM FOR CAPTURING AND CONTROLLING ACCESS TO INFORMATION IN A COUPLING FACILITY\u201d, Neuhard et al., U.S. Pat. No. 5,630,050, issued May 13, 1997;","\u201cDYNAMICALLY ASSIGNING A DUMP SPACE IN A SHARED DATA FACILITY TO RECEIVE DUMPING INFORMATION TO BE CAPTURED\u201d, Elko et al., U.S. Pat. No. 5,664,155, issued Sep. 2, 1997;","\u201cMETHOD AND APPARATUS FOR DISTRIBUTED LOCKING OF SHARED DATA, EMPLOYING A CENTRAL COUPLING FACILITY\u201d, Elko et al., U.S. Pat. No. 5,339,427, issued Aug. 16, 1994;","\u201cMETHOD AND SYSTEM FOR LOG MANAGEMENT IN A COUPLED DATA PROCESSING SYSTEM\u201d, Geiner et al., U.S. Pat. No. 5,737,600, issued Apr. 7, 1998;","\u201cMETHOD OF PERFORMING PARALLEL CLEANUP OF SEGMENTS OF A LOCK STRUCTURE\u201d, Dahlen et al., U.S. Pat. No. 6,178,421 B1, issued Jan. 23, 2001;","\u201cSPEEDING-UP COMMUNICATION RATES ON LINKS TRANSFERRING DATA STRUCTURES BY A METHOD OF HANDING SCATTER\/GATHER OF STORAGE BLOCKS IN COMMANDED COMPUTER SYSTEMS\u201d, Gregg et al., U.S. Pat. No. 5,948,060, issued Sep. 7, 1999;","\u201cMETHOD OF MANAGING RESOURCES IN ONE OR MORE COUPLING FACILITIES COUPLED TO ONE OR MORE OPERATING SYSTEMS IN ONE OR MORE CENTRAL PROGRAMMING COMPLEXES USING A POLICY\u201d, Allen et al., U.S. Pat. No. 5,634,072, issued May 27, 1997;","\u201cMETHOD AND APPARATUS FOR OPTIMIZING THE HANDLING OF SYNCHRONOUS REQUESTS TO A COUPLING FACILITY IN A SYSPLEX CONFIGURATION\u201d, Kubala et al., U.S. Pat. No. 5,923,890, issued Jul. 13, 1999;","\u201cMETHOD FOR RECEIVING MESSAGES AT A COUPLING FACILITY\u201d, Elko et al., U.S. Pat. No. 5,706,432, issued Jan. 6, 1998;","\u201cCOMMAND EXECUTION SYSTEM FOR USING FIRST AND SECOND COMMANDS TO RESERVE AND STORE SECOND COMMAND RELATED STATUS INFORMATION IN MEMORY PORTION RESPECTIVELY\u201d, Elko et al., U.S. Pat. No. 5,392,397, issued Feb. 21, 1995;","\u201cSOFTWARE CACHE MANAGEMENT OF A SHARED ELECTRONIC STORE IN A SUPPLEX\u201d, Elko et al., U.S. Pat. No. 5,457,793, issued Oct. 10, 1995;","\u201cREQUESTING A DUMP OF INFORMATION STORED WITHIN A COUPLING FACILITY, IN WHICH THE DUMP INCLUDES SERVICEABILITY INFORMATION FROM AN OPERATING SYSTEM THAT LOST COMMUNICATION WITH THE COUPLING FACILITY\u201d, Neuhard et al, U.S. Pat. No. 5,860,115, issued Jan. 12, 1999;","\u201cAUTHORIZATION METHOD FOR CONDITIONAL COMMAND EXECUTION\u201d, Elko et al, U.S. Pat. No. 5,450,590, issued Sep. 12, 1995;","\u201cIN A MULTIPROCESSING SYSTEM HAVING A COUPLING FACILITY, COMMUNICATING MESSAGES BETWEEN THE PROCESSORS AND THE COUPLING FACILITY IN EITHER A SYNCHRONOUS OPERATION OR AN ASYNCHRONOUS OPERATION\u201d, Elko et al., U.S. Pat. No. 5,561,809, issued Oct. 1, 1996;","\u201cCOUPLING FACILITY FOR RECEIVING COMMANDS FROM PLURALITY OF HOSTS FOR ACTIVATING SELECTED CONNECTION PATHS TO I\/O DEVICES AND MAINTAINING STATUS THEREOF\u201d, Elko et al., U.S. Pat. No. 5,463,736, issued Oct. 31, 1995;","\u201cMETHOD AND SYSTEM FOR MANAGING DATA AND USERS OF DATA IN A DATA PROCESSING SYSTEM\u201d, Allen et al., U.S. Pat. No. 5,465,359, issued Nov. 7, 1995;","\u201cMETHODS AND SYSTEMS FOR CREATING A STORAGE DUMP WITHIN A COUPLING FACILITY OF A MULTISYSTEM ENVIRONMENT\u201d, Elko et al., U.S. Pat. No. 5,761,739, issued Jun. 2, 1998;","\u201cMETHOD AND APPARATUS FOR COUPLING DATA PROCESSING SYSTEMS\u201d, Elko et al., U.S. Pat. No. 5,317,739, issued May 31, 1994;","\u201cMETHOD AND APPARATUS FOR EXPANSION, CONTRACTION, AND REAPPORTIONMENT OF STRUCTURED EXTERNAL STORAGE STRUCTURES\u201d, Dahlen et al., U.S. Pat. No. 5,581,737, issued Dec. 3, 1996;","\u201cSYSPLEX SHARED DATA COHERENCY METHOD\u201d, Elko et al., U.S. Pat. No. 5,537,574, issued Jul. 16, 1996;","\u201cMULTIPLE PROCESSOR SYSTEM HAVING SOFTWARE FOR SELECTING SHARED CACHE ENTRIES ON AN ASSOCIATED CASTOUT CLASS FOR TRANSFER TO A DASD WITH ONE I\/O OPERATION\u201d, Elko et al., U.S. Pat. No. 5,493,668, issued Feb. 20, 1996;","\u201cINTEGRITY OF DATA OBJECTS USED TO MAINTAIN STATE INFORMATION FOR SHARED DATA AT A LOCAL COMPLEX\u201d, Elko et al., U.S. Pat. No. 5,331,673, issued Jul. 19, 1994;","\u201cCOMMAND QUIESCE FUNCTION\u201d, Elko et al., U.S. Pat. No. 5,339,405, issued Aug. 16, 1994;","\u201cMETHOD AND APPARATUS FOR PERFORMING CONDITIONAL OPERATIONS ON EXTERNALLY SHARED DATA\u201d, Elko et al., U.S. Pat. No. 5,742,830, issued Apr. 21, 1998;","\u201cMETHOD AND SYSTEM FOR RECONFIGURING A STORAGE STRUCTURE WITHIN A STRUCTURE PROCESSING FACILITY\u201d, Allen et al., U.S. Pat. No. 5,515,499, issued May 7, 1996;","\u201cMETHOD FOR COORDINATING EXECUTING PROGRAMS IN A DATA PROCESSING SYSTEM\u201d, Allen et al., U.S. Pat. No. 5,604,863, issued Feb. 18, 1997; and","\u201cSYSTEM AND METHOD FOR MANAGEMENT OF OBJECT TRANSITIONS IN AN EXTERNAL STORAGE FACILITY ACCESSED BY ONE OR MORE PROCESSORS\u201d, Dahlen et al., U.S. Pat. No. 5,887,135, issued Mar. 23, 1999.","This invention relates, in general, to data processing within a distributed computing environment, and in particular, to dynamically determining whether requests within the environment are to be processed synchronously or asynchronously.","Some distributed computing environments, such as Parallel Sysplexes, today provide a non-volatile shared storage device called the coupling facility, that includes multiple storage structures of either the cache or list type. These structures provide unique functions for the operating system and middleware products employed for the efficient operation of a Parallel Sysplex. For example, the cache structures provide directory structures and cross-invalidation mechanisms to maintain buffer coherency for multisystem databases, as well as a fast write medium for database updates. These are used by, for instance, the data sharing versions of DB2 and IMS, offered by International Business Machines Corporation, Armonk, N.Y.","The list structures provide many diverse functions. One such list structure function is to provide for high-performance global locking, and this function is exploited by such products as the IMS Resource Lock Manager (IRLM) and the Global Resource Serialization (GRS) function in OS\/390, offered by International Business Machines Corporation, Armonk, N.Y. Another list structure function is to provide a message passing mechanism with storage for maintaining multiple messages on a per system basis and a mechanism for notifying a system of the arrival of new messages. This function is exploited by the XCF component of OS\/390, which in turn is exploited by numerous multisystem applications for providing a capability to pass messages between their various instances. A third list structure function is to provide for shared queue structures that can be ordered and accessed by LIFO\/FIFO ordering, by key, or by name. Workload Manager (WLM), IMS Shared Message Queues and MQ Series, all offered by International Business Machines Corporation, Armonk, N.Y., are examples of exploiters of this feature. While these functions provide examples of the list structure uses, other uses exist.","Various components of a Parallel Sysplex have been documented in numerous applications\/patents, which are listed above and hereby incorporated herein by reference in their entirety. The capabilities defined in some of those patents provide the basic system structure to create and manage cache and list structure instances. Additionally, various of the applications\/patents listed above provide extensions to the base functions of the Parallel Sysplex.","Some coupling facility requests can be executed in a synchronous manner or an asynchronous manner. Often, executing a coupling facility request in a CPU-synchronous manner (where the issuing CPU waits for the completion of the synchronous request to the coupling facility) is the most efficient way to process a coupling facility request. Doing so avoids certain undesirable aspects of CPU-asynchronous execution of a coupling facility request, such as: the overhead of processor context-switching (giving up the CPU to another process or unit of work, while the coupling facility request executes asynchronously), overhead of back-end completion processing of system request blocks (SRBs) for the asynchronous request, and latencies associated with the asynchronous nature of the request itself.","However, there are exceptions to this general rule. When a synchronous request takes a long time to complete, for whatever reason, there is a high \u201copportunity cost\u201d associated with processor cycles on the issuing CPU being wasted, while waiting for the completion of that synchronous request. At some threshold point, in terms of synchronous service time for a request, there is a tradeoff between the cost of driving the request synchronously versus the cost of driving the request a synchronously\u2014shorter synchronous service times favor synchronous execution, longer synchronous service times favor asynchronous execution.","If synchronous coupling facility service times were easily predictable, then simple \u201crules of thumb\u201d and static tables would suffice to make this tradeoff reasonably well. However, in practice, coupling facility service times vary in response to many factors, including, for instance: workload peaks and valleys, distance between the Central Electronic Complex (CEC) where the operating system is running and the coupling facility, number and type of coupling facility links, amount of data transfer, whether or not the request is duplexed, what type of coupling facility request it is, the machine type of the coupling facility, the number of processors on the coupling facility, whether those coupling facility processors are shared or dedicated, and if shared, how much processing weight is assigned to the coupling facility image, and so on. Furthermore, many of these factors that influence the synchronous coupling facility request service time can change dynamically, so that a coupling facility that is providing good synchronous service time at one moment may provide poor service time at a later point in time, or vice versa. Thus, the rules of thumb and static tables have proven inadequate in determining whether a request is to be processed synchronously or asynchronously.","Based on the foregoing, a need exists for a capability that enables the manner in which a request is to be processed to be determined dynamically. In particular, a need exists for a capability that dynamically determines whether a request is to be processed synchronously or asynchronously. A further need exists for a capability that makes this determination based on observed synchronous service times.","The shortcomings of the prior art are overcome and additional advantages are provided through the provision of a method of managing the processing of requests. The method includes, for instance, obtaining a request to be processed; and determining whether the request is to be processed synchronously or asynchronously, the determining being based, at least in part, on an observed service time for at least one processed request.","Advantageously, a dynamic capability for determining whether a given request is to be processed synchronously or asynchronously is provided. As one example, this determination is based, at least in part, on observed synchronous service times for one or more previously processed requests.","In one example, the average synchronous service time associated with coupling facility requests is monitored, and used, in real-time, as input to a technique that decides whether to drive a request execution synchronously or asynchronously, based on information about the request itself and currently available information regarding the performance of requests of that same type on the same coupling facility.","Aspects of the present invention advantageously enable CPU overhead associated with synchronous requests (e.g., synchronous coupling facility requests) to be avoided, when the cost is likely to be high based on the expected service time, which is based on observations. The technique can adaptively react to high service times caused by a slow coupling facility, fluctuations in coupling facility workload (e.g., an overloaded coupling facility or channel subsystem), distance (e.g., propagation delays in a Geographically Dispersed Parallel Sysplex (GDPS) environment), protocol delays (e.g., exchange of coupling facility duplexing signals), or any other factors that might influence service time for any reason.","System and computer program products corresponding to the above-summarized methods are also described and claimed herein.","Additional features and advantages are realized through the techniques of the present invention. Other embodiments and aspects of the invention are described in detail herein and are considered a part of the claimed invention.","In one aspect of the present invention, a capability for dynamically determining whether a request is to be processed synchronously or asynchronously is provided. As one example, a dynamic, heuristic conversion of individual coupling facility requests from synchronous to asynchronous execution is provided, which is based on actual observed service times for synchronous coupling facility requests, rather than any hard-coded tables or static information. This allows the CPU overhead associated with synchronous coupling facility requests to be avoided, whenever the synchronous cost is likely to be high given the expected synchronous service time, based on these real-time observations. Conversely, it also allows the CPU overhead associated with asynchronous coupling facility requests to be avoided, whenever the synchronous cost is likely to be low given the expected synchronous service time, based on these observations.","In accordance with at least one aspect of the present invention, the system can adaptively and responsively react to high synchronous coupling facility service times caused by an inherently slow coupling facility (e.g., slow processors), temporary fluctuations in coupling facility workload (e.g., an overloaded coupling facility or channel subsystem), distance effects (e.g., propagation delays in a Geographically Dispersed Parallel Sysplex (GDPS) environment), protocol delays (e.g., exchange of coupling facility duplexing signals), or any other factors that might influence synchronous coupling facility request service time for any reason. When synchronous service times elongate to a particular coupling facility for any reason, this elongation is quickly observed, and future requests to that coupling facility are more likely to be processed asynchronously. This in turn optimizes the CPU utilization and throughput in the operating system image that is driving the requests to the coupling facility.","The synchronous coupling facility service time information that is observed is kept as a moving weighted average (moving weighted average synchronous service time, or MWASST) to skew the results in favor of recent history, so that the technique of an aspect of the present invention can react very responsively to any changes in the actual performance and service times a given coupling facility is providing.","Also, this synchronous coupling facility service time information is kept on a coupling facility by coupling facility basis, with granularity by type of command (specifically, both the opcode type, such as list\/lock versus cache, and the specific opcode of the command), the amount of data transfer requested on the command, and other special factors such as, for instance, request operands that are likely to strongly influence command execution time. In accordance with an aspect of the present invention, all types of coupling facility requests (e.g., list, cache, and lock structure requests) are eligible to participate in the capabilities described herein.","In one embodiment, once it has been determined for a particular type of coupling facility request that it should be driven asynchronously, then in general, future occurrences of that type of request are driven asynchronously, and not synchronously. This poses the following problem, however: if, in fact, the synchronous coupling facility service time for that type of request improves dynamically at some point in the future, how will this be observed if operations of that type are no longer being driven synchronously? One aspect of the present invention addresses this issue by occasionally sampling synchronous service times, even when the technique indicates that requests of a particular type should, in general, be processed asynchronously. This sampling results from the facility occasionally indicating that a request should be performed synchronously, even when the observed synchronous service times would normally result in asynchronous execution, so that any future improvement in synchronous service time can be observed, if it occurs.","Both simplex and duplexed coupling facility requests may participate in the various aspects of the present invention. A simplex request is a request driven against one coupling facility structure, while a duplexed request is a request split into a plurality of requests and driven against a plurality of coupling facility structures.","Synchronous service time statistics are kept separately for simplex and duplexed requests. Furthermore, for duplexed requests, the statistics are kept separately for each possible connected pair of coupling facilities in which the duplexed structure instances might reside. This reflects the fact that synchronous service times are likely to be qualitatively different for simplex versus duplexed requests (due to coupling facility duplexing protocol overhead); and it reflects the fact that different connected pairs of coupling facilities may have vastly different aggregate performance in processing duplexed requests between them. Averaging these different results together for simplex versus duplex, or for different pairs of duplexed coupling facility structures, would have yielded uninformative and unusable information having disparate synchronous service times. Keeping the statistics separately allows useful heuristic decisions to be made based on this information.","One embodiment of a computing environment incorporating and using one or more aspects of the present invention is depicted in  and described herein.",{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 1","b":["100","102","104","106","108","110","112","114"]},"Two instances of the coupling facility structure are maintained in separate coupling facilities, referred to as the primary coupling facility and the secondary coupling facility. A peer connection , such as an Intersystem Channel (ISC) link, couples the two coupling facilities. The peer ISC link can transmit both primary message commands and secondary message commands in either direction. This may be physically represented by either two unidirectional links, one with a sender channel on the primary coupling facility and a receiver channel on the secondary coupling facility, and the second link oppositely configured. This may also be represented by a single physical link where the channel interface in each coupling facility supports both sender and receiver functionality. This latter capability exists in ISC3 links and their variants: ICB3 and IC3, all of which are offered by International Business Machines Corporation, Armonk, N.Y.","The peer ISC link between the coupling facilities is used, for instance, to exchange message path commands on the primary message command interface to configure and couple the two coupling facilities. Once configured and coupled, the peer ISC link is also used to send secondary commands of the list-notification type to exchange signals as part of a signaling protocol for command execution. The sending and receiving of these secondary commands is managed by a coupling facility component called a signaling protocol engine . Requests by the cache and list component of the coupling facility for sending and receiving duplexing signals flow through the signaling protocol engine.","One embodiment of the steps in a normal command execution for a coupling facility-to-coupling facility duplexing model are shown in  in numeric sequence that approximates the time sequence of the command. In these steps, various components of the signaling protocol are described. Further details regarding the signaling protocol are described in detail in a co-filed patent application entitled \u201cCOUPLING OF A PLURALITY OF COUPLING FACILITIES USING PEER LINKS,\u201d Brooks et al., which is hereby incorporated herein by reference in its entirety.","Step 1. The user application generates a command and communicates this command to the LFSS through a system macro interface.","Step 2. The LFSS creates two copies of the command, sending one to the primary coupling facility and the second to the secondary coupling facility. The LFSS uses an asynchronous SEND MESSAGE interface without notification to allow the two commands to be initiated in parallel. The LFSS also sets a synchronous completion on initial status (SCIS) bit of the SEND MESSAGE to minimize the effects of any busy conditions encountered on the channel interface. A link-subsystem (LSS) component  of the coupling facility control code (CFCC) in the primary coupling facility receives the command and transfers control to the cache or list component, as appropriate. Likewise, the link-subsystem (LSS) component in the secondary coupling facility receives the command and transfers control to the cache or list component, as appropriate.","Step 3. The cache\/list component of the primary coupling facility executes the command to the point where a message response block (MRB) would be returned to the application. But, before sending the MRB and while the internal latches are held for the objects referenced by the command, a request is made to the signaling protocol engine in the primary coupling facility to send a completion signal on the peer ISC link to the secondary coupling facility. Likewise, the cache\/list component of the secondary coupling facility executes the command to the point where the MRB would be returned to the application. But, before sending the MRB and while the internal latches are held for the objects referenced by the command, a request is made to the signaling protocol engine in the secondary coupling facility to send a completion signal on the peer ISC link to the primary coupling facility.","Step 4. The signaling protocol engine in the primary coupling facility sends the completion signal to the secondary coupling facility and then waits for the reception of the completion signal from the secondary coupling facility. Likewise, the signaling protocol engine in the secondary coupling facility sends the completion signal to the primary coupling facility and then waits for the reception of the completion signal from the primary coupling facility.","Step 5. When the primary coupling facility recognizes the reception of the completion signal from the secondary coupling facility, the primary coupling facility sends the MRB and releases the latches. Likewise, when the secondary coupling facility recognizes the reception of the completion signal from the primary coupling facility, it also sends the MRB and releases the latches. If a failure occurs during this period of time and either the primary coupling facility or the secondary coupling facility fails to recognize the reception of a completion signal, then duplexing is broken by the coupling facility by, for instance, resetting a duplexing active indicator for the structure.","Step 6. Assuming no errors have occurred, the LFSS receives both MRBs from the two coupling facilities and constructs a single message response block by reconciling the results of the two MRBs and gives this response to the application. If, on the other hand, duplexing has been broken by one of the two coupling facilities, then the operating system invokes failover recovery and one of the two structures is selected as the surviving instance. Once the error is corrected, duplexing can be reestablished.","With the above processing, user transparency is provided because the duplexing functions are performed by the LFSS without awareness by the user application.","Failure isolation is also provided by creating two copies of the structure in separate facilities, each of which can continue as the surviving structure in a situation involving the failure of the other. Further, command atomicity is provided by maintaining latches on both structures until both commands complete.","Performance is optimized in several ways. First, sending the commands in parallel allows for maximum overlap of data transfer and command execution. Second, by exchanging completion signals immediately upon reaching the MRB send point in the command, the completion can be detected with minimal intervening latency. Third, the amount of data sent in the signal itself is small relative to the amount of data sent on the primary link for the command. So, a single peer ISC link can handle the combined signal traffic generated by commands sent on a significant number of primary ISC links. In fact, for small distances, a single ISC link can handle the combined traffic of the commands generated in a 32-system Parallel Sysplex. Fourth, by using list notification as the signaling transport mechanism, the signal can be processed by the receiver channel engine without needing to interrupt the coupling facility control code (CFCC) to process the signal. Fifth, by using the SCIS facility, contention detected by a SEND MESSAGE can be minimized by causing redrives to be performed substantially immediately.","Although in the embodiment described above, an ISC link is used to couple the two coupling facilities, this is only one example. Other links may be used, including, for instance, an ICB or IC link. Further, more than two coupling facilities may be coupled to one another. However, it is not necessary for all coupling facilities to be coupled to each other. For instance, a third coupling facility may be coupled to Coupling Facility  via a peer connection, but not to Coupling Facility .","In addition to the above, the coupling facilities that are coupled may be in separate Central Processing Complexes (CPC), in separate partitions of one CPC, or a combination thereof. In the situation that the facilities are in separate partitions of one CPC, the same links can be used for both duplexing and command traffic.","In another embodiment, multiple peer links can be configured as redundant connections. In this scenario, the duplexing protocol recognizes a link failure and maintains signal exchanges on surviving links.","In yet further embodiments, other environments may incorporate and use aspects of the present invention, including, for example, other sysplex environments that do not couple the coupling facilities to one another, or other environments that do not support duplexing. Further, aspects of the invention can be incorporated and used in environments that do not have coupling facilities. The above environment is only one example.","Overview of Sync\/Async Coupling Facility Request Conversion",{"@attributes":{"id":"p-0095","num":"0094"},"figref":"FIG. 2","b":["200","202"]},"If, on the other hand, the end user requested the coupling facility operation to be performed synchronously, then a further determination is made as to the availability of resources (such as, a subchannel), INQUIRY . Should the resources be unavailable to perform the request synchronously, then the request is set up for asynchronous execution, STEP . That is, the unavailability of the resources is a secondary reason for converting the request to asynchronous execution.","However, if the resources are available to perform the operation synchronously, then, in accordance with an aspect of the present invention, a determination is made as to whether or not it is desirable, from an overall system perspective, to continue with synchronous execution of this request, INQUIRY . One embodiment of the logic associated with this sync\/async conversion decision is described hereinafter with reference to \u2013. Depending on the results of this decision, the request is either set up for asynchronous execution, STEP , or it is driven in the requested CPU-synchronous fashion, STEP .","If the request is, for whatever reason, set up for asynchronous execution, STEP , then a further determination is made as to whether resources (e.g., a subchannel) are available to initiate the request asynchronously, at this time, INQUIRY . If so, the coupling facility operation is started asynchronously, STEP , and it completes asynchronously through existing mechanisms for completing asynchronous coupling facility operations (embodiments of which are described in one or more of the previously incorporated applications\/patents.) If not, then the coupling facility operation is queued for later asynchronous execution, when a subchannel becomes available, STEP , again as is known.","Referring again to INQUIRY , in one aspect of the present invention, the sync\/async heuristic conversion decision employs real-time information about synchronous service times, as input to its decision-making process. This information is maintained in a data structure, such as a sync\/async heuristic (SASH) data structure, one embodiment of which is described with reference to and . The collection of this information is described in more detail with reference to and , and the use of this information in implementing the decision is described in more detail with reference to and ","Sync\/Async Heuristic (SASH) Table Structure","In accordance with an aspect of the present invention, there is one SASH data structure per coupling facility, that is accessible from the current operating system image. As described below, the SASH structure includes one or more SASH tables, which are initialized as follows: when the coupling facility is accessible at system initialization time, the SASH tables for that coupling facility are initialized at system initialization time. However, when the coupling facility becomes accessible later, the SASH tables for that coupling facility are initialized at the time that the coupling facility becomes accessible. The initialization of the SASH tables is described in more detail with reference to .","For each coupling facility, a SASH structure  includes, for instance, a SASH header , a simplex SASH table , and zero or more pairs of duplex SASH tables , .","SASH header  includes, for instance, global information for the SASH, such as how large the SASH tables are in aggregate, and an indication of the message facility identifier (MFID) of the current coupling facility. The MFID is an existing designation that indexes the coupling facilities accessible to the operating system. For example, the first coupling facility has MFID , the second coupling facility has MFID , and so forth. The MFID is relevant to the SASH structure because, for a given coupling facility, the MFID of the coupling facility determines how many (and which) duplex SASH tables are to be used. In particular, the SASH structure for the coupling facility with MFID  has no duplex SASH tables; the SASH structure for the coupling facility with MFID  has 2 duplex SASH tables (one for operations whose primary structure is in coupling facility MFID  and whose secondary structure is in coupling facility MFID , the other for operations whose primary structure is in coupling facility MFID  and whose secondary structure is in coupling facility MFID ); the SASH table for the coupling facility with MFID  has 4 duplex SASH tables (one for operations whose primary structure is in coupling facility MFID  and whose secondary structure is in coupling facility MFID , another for operations whose primary structure is in coupling facility MFID  and whose secondary structure is in coupling facility MFID , another for operations whose primary structure is in coupling facility MFID  and whose secondary structure is in coupling facility MFID , and another for operations whose primary structure is in coupling facility MFID  and whose secondary structure is in coupling facility MFID ); and so on for higher-numbered coupling facility MFIDs.","Each of the individual SASH tables (, , ) has, in this example, the same internal structure. For instance, each SASH table is a three-dimensional array of cells, as shown in ","Referring to , a SASH table, such as SASH table , includes a three-dimensional array of cells , and the three dimensions of the array include, for example:\n\n","In one embodiment, each cell  in each of the tables (, , ) for a particular coupling facility includes several fields used in making a sync\/async heuristic conversion decision. The fields in each cell include, for instance:\n\n","The information that is maintained in cells  associated with SASH tables , ,  is derived from two sources. Some of it is preset at the time that the SASH tables are initialized for a particular coupling facility (as described in more detail with reference to ). However, a majority of the information in each SASH table is gathered in real-time as a result of observing the actual performance of synchronous coupling facility operations. The timing of synchronous coupling facility operations, and the recording of the relevant information in SASH cells  is further described with reference to \u2013","Timing of Synchronous Coupling Facility Operations","Synchronous execution of simplex coupling facility operations and duplexed coupling facility operations are performed, and timed, differently. Thus, initially a decision is made as to whether the synchronous request is simplex or duplexed, INQUIRY  ().","Should the request be a simplex synchronous operation, the execution and timing proceeds, as follows. A \u201cbefore\u201d timestamp is stored, prior to driving the operation to the coupling facility, STEP . The simplex operation is then driven to the target coupling facility, in a CPU-synchronous manner, STEP . The operating system then ensures that the coupling facility operation is completed by spinning in a polling loop, without giving up the CPU for use by other processes, until the coupling facility operation is determined to be complete, STEP . Once this is known, an \u201cafter\u201d timestamp is stored, STEP , and a delta between the before and after timestamps is computed to determine the actual observed synchronous service time for the simplex request, STEP .","Once the simplex request synchronous service time is known, this information is recorded in the appropriate cell  of simplex SASH table  for the coupling facility used for this operation, as described below. However, in order to do this, the appropriate cell is located based on the MFID of the coupling facility that was used, the coupling facility request opcode and opcode type, the data transfer size for the coupling facility request, and the presence of any special operands on the request, STEP  ().","Returning to INQUIRY  (), for a duplexed synchronous operation, in one example, the execution and timing proceeds, as follows. A \u201cbefore\u201d timestamp is stored, prior to driving the pair of duplexed operations to the coupling facilities, STEP . The pair of duplexed operations is then driven to the target coupling facilities, in a CPU-asynchronous manner, STEP . These operations are launched asynchronously relative to the CPU, so that they can be concurrently launched and execute in parallel at the pair of coupling facilities. The operating system then ensures that both of the coupling facility operations are completed by spinning in a polling loop, without giving up the CPU for use by other processes, until both coupling facility operations are determined to be complete, STEP . This makes the duplexed operation, in aggregate, appear to have been processed in a synchronous manner, even though, in reality, each of the requests was processed asynchronously with respect to the issuing CPU. Once the operations are both known to be complete, an \u201cafter\u201d timestamp is stored, STEP , and a delta between the before and after timestamps is computed to determine the actual observed synchronous service time for the duplexed request, STEP .","Once the duplexed request synchronous service time is known, this information is recorded in appropriate cell  of the appropriate duplex SASH table ,  for the pair of coupling facilities used as the primary and secondary coupling facilities for this duplexed operation, as described below.","In order to record the information, however, the appropriate cell  is located by first locating the appropriate duplex SASH table ,  based on the MFIDs of the two coupling facilities that were used. For example, suppose that a duplexed request is driven to a duplex pair of structures, the primary structure residing in the coupling facility with MFID  and the secondary structure residing in the coupling facility with MFID . The duplex SASH table for this combination (2,3) is found in the duplex SASH tables associated with the higher-numbered MFID of the pair, MFID .","Then, the particular cell is located within that SASH table based on the coupling facility request opcode and opcode type, the data transfer size for the coupling facility request, and the presence of any special operands on the request, STEP  ().","Once the relevant cell has been located, the logic associated with the timing for synchronous coupling facility requests converges into a common flow regardless of whether the request was simplex or duplexed. At this point, a determination is made as to whether the moving weighted average synchronous service time, or MWASST, that is currently recorded in the located cell is zero, INQUIRY . If MWASST is zero, then there is no prior knowledge of any synchronous requests for this cell, and thus, there is no need to average the current request's service time in with the prior average service time (which does not exist). Therefore, the current request's service time (e.g., the timestamp delta computed at STEP  or STEP  ()) is stored into the MWASST field  of the cell, STEP .","However, if the MWASST recorded in the cell is not zero, then the current request's service time is averaged with the MWASST information currently recorded in the cell, STEP . Any number of different \u201cweighted average\u201d schemes could be used to calculate the moving weighted average of STEP , without departing from or detriment to aspects of the present invention. As one example, the following can be used:\n\nNew ((Cell.(1))+(Current request's service time))\/\n","The choice of a weighting factor, N, is influenced by the following considerations. N should be a power of 2, so that the calculation can be performed efficiently. N should be large enough to \u201caverage out\u201d small and insignificant anomalies in the service time, which may result from transient factors, and yet, N should be small enough to allow responsiveness to any real, persistent change in the synchronous service times that are being observed for the coupling facility requests. A value of 1024 for N is probably a good tradeoff between these considerations, given a reasonably large coupling facility request access rate.","Subsequent to determining the new MWASST, it is stored back into the MWASST field of the cell, STEP . In addition to updating the MWASST at either STEP  or , RefreshCount field  in the cell is reset to zero, STEP . The RefreshCount is used to ensure that some requests for this cell continue to be \u201cforced\u201d to be driven synchronously, from time to time, in the absence of any ongoing synchronous coupling facility activity for this cell. This allows the sync\/async heuristic to continue to observe changes in synchronous coupling facility service times even when most operations for the cell are converted to asynchronous execution. However, as in this case, when operations are being performed synchronously, the RefreshCount is zeroed, since current information about synchronous service time for this cell is already provided.","As described above, SASH tables , ,  include information used in making a sync\/async heuristic conversion decision for a coupling facility request. One embodiment of the details of this decision-making process is described with reference to \u2013","Sync\/Async Heuristic Decision-Making Process","Referring to , initially, a determination is made as to whether the request under consideration is a simplex or duplexed request, INQUIRY . As described above (STEPS , ), this affects how the appropriate SASH table (, , ) and cell  is to be located for the current request. When the request is simplex, the relevant cell in simplex SASH table  is located, STEP . On the other hand, when the request is duplexed, the relevant duplex SASH table (, ) for the pair of coupling facilities containing the primary and secondary structure is used, and the relevant cell within that duplex SASH table is located, STEP .","Once the appropriate cell pertaining to the current coupling facility request under consideration has been located, the RefreshCount for that cell is checked, INQUIRY . If the RefreshCount is greater than or equal to the RefreshLimit defined for the cell, that implies that enough consecutive coupling facility operations using this cell have been performed asynchronously and thus, it is now time to \u201cforce\u201d a request of this type to be driven synchronously again, just to \u201ccheck on\u201d the synchronous service time that is now being observed. In this case, the heuristic decision is set to \u201csynchronous\u201d, STEP , and processing exits. Based on this decision, this coupling facility operation is performed synchronously.","However, if the RefreshCount for the cell is less than the RefreshLimit defined for the cell, INQUIRY , then a determination is made again as to whether this is a simplex or duplexed coupling facility request, INQUIRY . If it is a simplex case, then a determination is made as to the appropriate simplex conversion threshold to use in comparison to the cell's MWASST value, STEP . Similarly, if it is a duplex case, then a determination is made as to the appropriate duplex threshold, STEP . One embodiment of the logic associated with how these thresholds are determined is discussed hereinafter with reference to .","At this point, the cell's MWASST includes historical information collected over some period of time for requests similar to the current one, which can be inferred to be the \u201cexpected\u201d service time of the current request. If this \u201cexpected\u201d service time is short, that is, less than the threshold value that was determined (STEPS , ) above, INQUIRY , then the heuristic decision is set to \u201csynchronous\u201d, STEP . Based on this decision, this coupling facility operation is performed synchronously. On the other hand, if this \u201cexpected\u201d service time is long, that is, greater than or equal to the threshold value that was determined (STEPS , ) above, INQUIRY , then the heuristic decision is set to \u201casynchronous\u201d, STEP . Based on this decision, this coupling facility operation is performed asynchronously. When the decision is \u201casynchronous\u201d, the cell's RefreshCount is incremented by 1 to reflect that another consecutive asynchronous operation has been performed, since the last time that a synchronous operation was opted to be peformed for this type of request, STEP . Additionally, the cell's ConvertedRequests count is incremented by 1 to maintain statistics on how often this type of request was converted from synchronous to asynchronous execution based on the sync\/async conversion heuristic, STEP .","In both the synchronous and asynchronous cases, the cell's TotalRequests count is incremented by 1, to serve as a baseline for comparison to the ConvertedRequests count for this cell, STEP .","Described in detail above are the SASH tables from the perspective of their overall structure and content (\u2013), and their usage in timing synchronous coupling facility operations and recording historical information about synchronous service times for different types of coupling facility requests (\u2013), as well as for later use by the sync\/async heuristic decision-making process in determining whether to drive a particular coupling facility operation synchronously or asynchronously (\u2013). Described below is one embodiment of the processing employed to create\/initialize the SASH tables, and the processing to determine what values to use as the sync\/async conversion thresholds for both simplex and duplexed requests.","Sync\/Async Heuristic (SASH) Structure Initialization","Referring to , one embodiment of the logic associated with SASH structure initialization is described. Initialization of a SASH structure is performed for each coupling facility, when that coupling facility is initialized, either at system initialization time or when a coupling facility becomes accessible subsequent to system initialization. In either case, each coupling facility is assigned its own unique MFID at that time. This MFID value can be used to determine how many duplex SASH tables are to be included in the SASH structure for this coupling facility. In one example, this is determined as:\n\nNumber of duplex tables=(1)*2.\n","Therefore, at this time, storage is obtained for the coupling facility's SASH tables by obtaining an amount of storage equal to:\n\nStorage Amount=Size of a header+Size of a simplex table+(Number of duplex tables*Size of a duplex table), STEP .\n","Note that the size of a simplex and duplex SASH table depends on the value of each of the three dimensions of the tables. For example, there are two opcode types (list\/lock and cache), so that dimension of the table is 2. The data transfer size dimension depends on how the data sizes are \u201ccategorized\u201d, and in one implementation is 4. The opcode dimension depends on how many different coupling facility request opcodes there are, plus whatever additional pseudo-opcodes one might wish to define to accommodate \u201cspecial operands\u201d on coupling facility requests. As an example of this, some coupling facility operations have an operand called a \u201cname mask\u201d which, depending on the value specified, results in the operation executing quickly against a single coupling facility entry, or performing a long-running scan of the entire coupling facility structure. Obviously, the performance characteristics of these requests, which have the same actual opcode, are very different depending on the value specified for the name mask operand. To accommodate this, the actual opcode value's row is assigned in the table to come into play when the name mask designates a short-running single entry operation, and a higher pseudo-opcode row is assigned in the table to come into play when the name mask designates a long-running coupling facility structure scan. Additional space is provided in the table for these extra pseudo-opcode rows in the opcode dimension of the table.","The storage for the SASH tables is obtained from common storage accessible to all coupling facility end users, and is cleared to binary zeroes, STEP , effectively setting all SASH cell fields to zero in all cells in all SASH tables for this coupling facility.","Zero values for all of these fields is appropriate, except for one: the RefreshLimit . The RefreshLimit in each cell is set to a nonzero value, which reflects how many consecutive operations are allowed to be converted to asynchronous execution before one is forced to be performed synchronously, (if none are otherwise performed synchronously as a result of the sync\/async heuristic decision-making process). Therefore, the RefreshLimit field in the cells of the SASH tables for this coupling facility are set to the desired value, STEP . Note that the particular value chosen is not central to the present invention, and any value could be chosen without departing from or detriment to the present invention. If a small value is chosen, that will ensure that when synchronous coupling facility request service times return to a \u201cnormal\u201d value after having been elongated for some reason, that synchronous coupling facility requests will be \u201cforced\u201d often enough that this will be noticed responsively; however, if the elongated coupling facility request service times persist (perhaps indefinitely due to a static factor such as distance), then a small value will result in unnecessary overhead as coupling facility operations are \u201cneedlessly\u201d driven synchronously, when they should really have been performed asynchronously. On the other hand, if a large value is chosen, the converse is true.","The actual value chosen reflects a tradeoff between these conflicting considerations. In one implementation, a RefreshLimit of 100 is chosen, meaning that at most 1% of (every 100th) coupling facility operation is \u201cforced\u201d to be performed synchronously. Note also that it is possible to initialize different cells with different values for RefreshLimit, when the SASH tables are initialized with this value; there is no requirement for all cells to contain the same RefreshLimit value.","Threshold Initialization","One embodiment of the logic associated with the initialization of the threshold values, for both simplex and duplex requests, that are compared to a cell's MWASST value to make the sync\/async conversion decision, is described with reference to .","These thresholds are to be carefully chosen in order for an objective of an aspect of the present invention to be met. Once again, this objective is to dynamically convert requests to asynchronous, when synchronous request service times are expected to be \u201clong\u201d; and to process requests synchronously, when synchronous request service times are expected to be \u201cshort\u201d, and thereby, optimize the overall system throughput and minimize the system overhead associated with a given coupling facility request workload executing under a particular set of environmental conditions.","Underlying this objective is the assumption that a coupling facility request's synchronous request service time can be traded off against an equivalent amount of processor cycles spent performing a coupling facility request asynchronously. In the synchronous case, the CPU cycles are spent waiting for the synchronous coupling facility operation to complete, for an amount of time equal to the synchronous service time; in the asynchronous case, the CPU cycles are spent in launching the operation asynchronously, observing the asynchronous completion of the operation, notifying the end user of asynchronous request completion, as well as in whatever \u201ccontext switching\u201d losses accrue to give up control of the processor, so that other work units can run while the operation runs asynchronously. If the amount of CPU cycles spent in either case is the same, then it doesn't matter whether the operation is performed synchronously or asynchronously; this is the \u201cbreak-even point\u201d that is represented via the threshold values.","In one aspect of the present invention, the threshold is represented as a service time value in microseconds. It could, equivalently, be represented as a count of equivalent instructions that correlates to that number of microseconds spent on a processor executing instructions at the rate that the operating system image's CPU is executing. This equivalence between the synchronous service time (in microseconds) and the equivalent instruction cost of launching and completing the operation asynchronously (in instruction counts, which can be normalized to microseconds of CPU time on the processor) is important in determining the threshold values.","The equivalent instruction cost of performing an asynchronous simplex and duplexed request on a particular \u201cbase\u201d processor (executing at a particular processor speed) was measured, and it was found that the equivalent instruction costs for that processor equated to a simplex service time of 75 microseconds, and a duplexed service time of 125 microseconds. (The value is higher for duplexed requests because there is more system overhead involved in launching and completing two duplexed operations, than there is in launching and completing one simplex request). These particular values are not central to the various aspects of the present invention and could be different in other implementations, without departing from or detriment to aspects of the present invention. However, the \u201cbase\u201d thresholds are set based on these measurements, STEP  ().","These base thresholds apply only to the particular processor, and processor speed that goes along with it, on which the measurements were made, however. On a faster processor, the same number of equivalent instructions spent processing an asynchronous request will correlate to a smaller threshold service time; conversely, on a slower processor, it will correlate to a larger threshold service time. Therefore, the \u201cbase\u201d thresholds are adjusted accordingly for simplex, STEP , and duplexed requests, STEP , by applying the following calculation, as one example:\n\nEffective threshold=(base threshold*base processor speed)\/effective processor speed.\n","These effective thresholds then represent the break-even point in system overhead between synchronous and asynchronous request execution, given the actual effective speed of the processor on which the operating system image is running. These effective thresholds for simplex and duplex requests are calculated once at system initialization time, and saved for later use in the sync\/async heuristic decision-making for all coupling facility requests, STEP .","Described in detail above is a capability that monitors the average synchronous service time associated with requests, and uses this information in real-time as input to a technique that decides whether to drive command execution synchronously or asynchronously, based on the relevant information about the coupling facility request itself, and the currently-available information regarding the performance of requests of that same type on that same coupling facility. One objective is to optimize the overall CPU consumption, throughput, and responsiveness on the issuing operating system image, given a particular coupling facility request workload.","As a side benefit, this technique may substantially improve the coupling facility request overhead associated with data sharing and coupling facility usage in a Geographically Dispersed Parallel Sysplex (GDPS) environment. In such environments, the large distances that often lie between coupling facilities and the attached operating system images that are using them tend to lead requests to be converted to asynchronous, limiting the CPU consumption for a given amount of coupling facility activity in the attached systems.","The capabilities of the present invention provide advantages over previous techniques in the area of synchronous to asynchronous request conversion. In the original coupling facility support, all coupling facility operations that were requested to be performed synchronously by the end user were, in general, performed synchronously regardless of whether this was desirable from the standpoint of overall system CPU utilization and throughput. The only exception to this rule was caused by unavailability of I\/O resources, such as subchannels. If resources were not immediately available to process a synchronous request, then the request was converted to asynchronous and queued for later asynchronous execution.","Subsequently, some attempts were made to optimize coupling facility access by static, rules of thumb based sync\/async request conversion. In this support, a static comparison was made between the inherent processor speed of the CPU in the operating system image versus the inherent processor speed of the CPU in the coupling facility image. If the processor in the coupling facility is inherently significantly slower than the processor in the operating system image, then it is more likely that the service time of the coupling facility request is long enough that conversion to asynchronous execution is warranted. This static mechanism also took into account the amount of data transfer requested by the coupling facility operation (the more data, the more this tends to elongate the synchronous service time), and also statically singled out certain inherently long-running coupling facility request opcodes (such as commands which scanned the entire coupling facility structure) and always converted these to asynchronous execution.","However, because the prior technique was based on static rules of thumb, it was totally unable to compensate for dynamic factors such as reacting to spikes in the coupling facility workload, coupling facility link workload, or channel subsystem workload; and it was even unable to account for such pervasive static factors as the type of links to the coupling facility (inherent link speed), the distance to the coupling facility (propagation delays), low-weighted coupling facility images using shared CPUs (which tended to get elongated service times), and the like. Aspects of the present invention overcome these deficiencies.","Although the embodiments described herein refer to coupling facility requests, aspects of the present invention are not limited to such requests. Aspects of the present invention can be used with other requests that can be executed synchronously\/asynchronously.","Further, although in the embodiments described herein, duplexing refers to a pair of structures, duplexing can be extended to a plurality of structures in a plurality of coupling facilities.","The present invention can be included in an article of manufacture (e.g., one or more computer program products) having, for instance, computer usable media. The media has embodied therein, for instance, computer readable program code means for providing and facilitating the capabilities of the present invention. The article of manufacture can be included as a part of a computer system or sold separately.","Additionally, at least one program storage device readable by a machine, tangibly embodying at least one program of instructions executable by the machine to perform the capabilities of the present invention can be provided.","The flow diagrams depicted herein are just examples. There may be many variations to these diagrams or the steps (or operations) described therein without departing from the spirit of the invention. For instance, the steps may be performed in a differing order, or steps may be added, deleted or modified. All of these variations are considered a part of the claimed invention.","Although preferred embodiments have been depicted and described in detail herein, it will be apparent to those skilled in the relevant art that various modifications, additions, substitutions and the like can be made without departing from the spirit of the invention and these are therefore considered to be within the scope of the invention as defined in the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The subject matter which is regarded as the invention is particularly pointed out and distinctly claimed in the claims at the conclusion of the specification. The foregoing and other objects, features, and advantages of the invention are apparent from the following detailed description taken in conjunction with the accompanying drawings in which:",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIGS. 3","i":["a","b "],"b":"3"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIGS. 4","i":["a","b "],"b":"4"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIGS. 5","i":["a","b "],"b":"5"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
