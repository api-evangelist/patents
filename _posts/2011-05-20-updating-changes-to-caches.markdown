---
title: Updating changes to caches
abstract: Embodiments relate to systems and methods for updating changes to caches. In aspects, a provisioning server can receive by a hardware processor a security data provisioning request from a first application server in a set of application servers. In response to receiving the security data change provisioning request, identifying updated security data compatible with the cache of a second application server of the set of application servers. Further, sending a command to the second application server of the set of application servers to clear the cache of the second application server of the set of application servers. A provisioning server sending the updated security data to the cache of the second application server of the set of application servers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09129126&OS=09129126&RS=09129126
owner: Red Hat, Inc.
number: 09129126
owner_city: Raleigh
owner_country: US
publication_date: 20110520
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","DESCRIPTION"],"p":["The invention relates generally to systems and methods for maintaining security, and more particularly, to platforms and techniques for maintaining consistencies in security cache data across a cluster of application servers.","Application servers are entities in system and network environments in which various applications can execute or operate. In particular, application servers are dedicated to the efficient execution of processes, procedures, routines, scripts, and software code for supporting the functionalities of applications. Software developers can access application servers via various application programming interfaces (APIs).","The Java Platform, Enterprise Edition, Java EE, or J2EE are widely used platforms for server programming in the Java programming language. A J2EE container is a runtime entity that provides services to specialized Java components. Services provided by a container typically include life cycle management, security, deployment, and component-specific services. Containers are used in a wide variety of Java components, such as Enterprise Javabeans (EJB), Web pages, Java Server Pages (JSP), servlets, applets, and application clients.","For security information, J2EE containers typically cache their security caches in a Java Virtual Machine (JVM) to avoid round trip latency to third party sources like a database or a directory service. However, when these sources change information (e.g. passwords, login credentials, attributes, etc.), the security cache can become inconsistent with what is current.","Typically, J2EE containers employ a timeout feature to attempt to keep their security cache current. However, timeouts are generally insufficient in keeping security caches current in dynamic environments.","Therefore, it may be desirable to provide systems and methods for maintaining consistencies among security caches of application servers. In particular, it may be desirable to provide systems and methods for a provisioning server to provision security data updates to security caches of a requesting application server when updated data is available.","Embodiments of the present teachings relate to systems and methods for maintaining security in a network. In particular, embodiments relate to platforms and techniques for maintaining data consistencies among a plurality of security caches associated with a set of application servers. A server management system or other logic can comprise a provisioning server coupled to a directory server. The provisioning server and the directory server can be configured to connect to the set of application servers. Each of the set of application servers can comprise a security cache configured to store security data or other data for use in conjunction with the set of application servers.","According to embodiments, a provisioning application running in one of the application servers can send a provisioning request to the provisioning server, for example to change security data. The provisioning server can send the request to the directory server that can store the security data associated with the application servers. Further, the provisioning server can send a command to each of the application servers that causes a security cache in each of the application servers to be cleared of data. In embodiments, the directory server can send updated security data to each of the application servers. The updated security data can be stored in each of the security caches of the application servers, such that the security caches comprise data consistent across the application servers.","Referring to , illustrated is an exemplary system  in which the present systems and methods may be implemented. To help explain the principles of the present systems and methods, the system  is shown configured as a web application comprising functionality in which users must be authenticated via, for example, security cache data. Accordingly, as shown, the system  can comprise a client , a web server , an application server , a directory server , and a provisioning server . These components can be coupled together via networks  and , respectively, or other networks. It should be appreciated that other configurations and inclusions of other components are envisioned in accordance with the present systems and methods.","In embodiments, the client  can be any computer system that utilizes the services of another computer system, i.e., the web server  and the application server . As shown in , the client  can be implemented using components well known to those skilled in the art, such as a personal computer, laptop computer, personal digital assistant, mobile phone, tablet device, and the like. In the embodiments as shown in , the client  can be used to run Web applications via an application, such as a web browser.","In embodiments, the web server  can be a computer system configured to accept requests from clients, such as the client , and serve responses along with optional data contents. For example, a user of the client  can execute a Web application via the web server . In the embodiment as shown, the data content served by the web server  can be one or more Web pages that can include hypertext markup language (HTML) documents and linked objects such as, for example, images, video, audio, and the like.","The web server  can be implemented on a machine that comprises well known hardware and software. Well known software for the web server  can include, but is not limited to, software such as Apache HTTP Server from the Apache Software Foundation, Internet Information Services by Microsoft Corporation\u00ae, and Sun Java System Web Server from Sun Microsystems Inc\u00ae. One skilled in the art will recognize that any of the many different Web server programs available are consistent with the principles of the present invention.","The application server  can be software that provides applications to the client . In particular, the application server  can be configured to handle security, business logic, and data access for the applications provided to the client . In embodiments, the application server  can be configured to provide a variety of Web-based applications, such as e-commerce applications, content management applications, customer relations management applications, and the like.","The application server  can be implemented on various software platforms. For example, the application server  can be implemented on the well known J2EE platform from Sun Microsystems Inc\u00ae. In addition, the application server  can comprise middleware configured to enable applications to intercommunicate with dependent applications, such as the web server , database management systems, etc.","In further embodiments, the application server  can be implemented using well known software. For example, the application server  can be implemented using software, such WebLogic server from BEA Systems Inc\u00ae, JBoss from Red Hat Inc.\u00ae, Websphere from the IBM Corporation\u00ae, and the like. Accordingly, the application server  can implement the Java programming language and provide Web modules using servlets and JavaServer pages. Other functions of the application server  can also employ Java. For example, business logic provided by the application server  can be built into Enterprise JavaBeans (EJBs). J2EE can provide standards for containing, the Web components. In addition, security services, such as authentication and authorization, can be implemented using the Java Authentication and Authorization Service (JAAS) or similar service.","The directory server  can represent the components that store and organize information about the users of the system  and an administrator of the system  to manage those users' access to the resources of the system . In embodiments, the directory server  can comprise a database (not-shown) that can store information about named objects that are managed. The directory server  can also provide, the access interface to the data that is contained in this database. The directory server  can be implemented using well known technologies. For example, the directory server  can implemented as an X.509 directory service or Lightweight Directory Access Protocol (LDAP) service. In embodiments, the directory server  can be implemented as services from various vendors such as, for example, Red Hat Directory Server from Red Hat Inc.\u00ae; Active Directory by the Microsoft Corporation\u00ae; Apache Directory Server by the Apache Software Foundation; and Sun Java System Directory Server by Sun Microsystems Inc\u00ae.","In embodiments, the provisioning server  can be software, hardware, or a combination thereof that can be configured to listen for provisioning requests in the system  and return provisioning responses. In some embodiments, the provisioning server  can be configured as a service provisioning markup language (SPML) provisioning service provider. The provisioning server  can be implemented as a separate software component of the system  or can be integrated with other components of the system . For example, the provisioning server  can be a component that is installed as part of the directory server .","In embodiments, the network  can represent the communications infrastructure for allowing the client  and the web server  to communicate with each other. For example, the network  can represent the Internet, which is a worldwide, publicly accessible network that uses the Internet Protocol (IP) suite of standards. In embodiments, the network  can represent the communications infrastructure that allows the web server , the application server , the directory server , and the provisioning server  to communicate with each other. In embodiments, the network  can be implemented as a local area network or may utilize one or more larger networks, such as the Internet.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 2","b":["200","200","205","210","215","205","210","215","205","210","215","205","210","215"]},"Each of the application servers , ,  can comprise a security cache . In embodiments, the security cache  can store or be configured to store security data or other forms of data. For example, the security data can be related to user credentials such as user login and password information, or other attributes. It should be appreciated that the security cache  can be configured to be any size and to store any type of data over any period of time. As shown in , each of the application servers , ,  can be configured to connect to a provisioning server  and\/or a directory server  via a network such as the Internet (not shown in figures) or any other type of connection. In embodiments, the provisioning server  and the directory server  can be housed in the same location, or in separate locations. Further, in embodiments, the directory server  can comprise a local or remote database  configured to store provisioning, security, or other related data.","According to embodiments, one of the application servers can submit a provisioning request to the provisioning server . For example, as referenced by  in , the application server  can send the provisioning request. In embodiments, a provisioning application associated with the application server  can send the provisioning request. In embodiments, the application server  can be a member of a cluster with the other application servers , , or can be separate from the other application servers , .","In embodiments, once the provisioning server  receives the provisioning request, the provisioning server  can be configured to send the provisioning request to the directory server , as referenced by  in . Further, in embodiments, the provisioning server  can be configured to send a command, request, instruction, and\/or the like to any or all of the application servers , , , wherein the command, request, instruction, and\/or the like can be configured to cause data of the respective security cache  in each of the application servers , ,  to be cleared, invalidated, overwritten, and\/or the like. As shown in , reference  can refer to the provisioning server  sending a cache overwrite instruction to application servers , . In response to receiving the cache overwrite instruction, a processor, module, or other logic associated with the application servers ,  can be configured to overwrite appropriate data of each of the respective security caches . In embodiments, the provisioning server  can concurrently send the cache, overwrite instruction to the appropriate application servers and the provisioning request to the directory server .","In embodiments, in response to the respective application servers clearing the respective security caches , the directory server  can be configured to send security data to the respective application servers, to be stored in the respective security caches . The security data can be the most recent or updated security data available to the directory server . In embodiments, the security data can be retrieved from the database  or from other memory. As referenced by  in , the directory server  can be configured to send the security data to each of the application servers , , , including the application server  that originally sent the provisioning request (as referenced by ).","In response to receiving the security data, a processor, module, or other logic associated with the application servers , ,  can be configured to store the security data in each of the respective security caches . Accordingly, the security caches  of each of the application servers , ,  can comprise the most recent or updated security data available to the directory server . In embodiments, each of the application servers , ,  can execute their respective applications utilizing the updated security data of each of the security caches .","In embodiments, the provisioning server , the directory server , or other logic can be configured to receive an indication of updated security data. Further, the provisioning server , the directory server , or other logic can access the updated security data. For example, an administrator, owner, or other entity can modify a user credential entry, or any other type of security data, directly within the directory server , and the directory server  can notify the provisioning server  or any of the application servers , ,  of the updated data. In another example, the security data can be updated remotely from the directory server , and the updated security data can be provided to the directory server  for storage.","As an example of the present embodiments, a banking institution is provided with a plurality of application servers that perform applications related to account servicing. Employees of the bank have login credentials to access the applications and conduct the associated functionality, wherein the application servers can store the login credentials in respective security caches. Further, different application servers can comprise different applications. For example, one application server can comprise an application used to open accounts, and another application server can comprise another application used to transfer money among bank accounts. When the bank hires a new employee, the new employee can be assigned login credentials to access the applications. However, the security caches of the application servers may not have updated data with the new employee's login credentials. Therefore, the security caches need to be provisioned with updated security data so that the employee can access and execute the associated applications.","As discussed herein, a provisioning request can be received at a provisioning server of the bank, which can in turn be provided to a directory server that can store the most, recently-updated security data. The provisioning server can send cache invalidation requests to the application servers, which can cause the security caches of the application servers to be cleared. In response to clearing the security caches, the directory server can send the updated security data, comprising the login credentials for the new employee, to the application servers for storage in the security cache. Accordingly, when the new employee attempts to log, in or otherwise access any applications associated with the application servers, the updated security cache data will have the new employee's login credentials, as needed.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 3","b":["304","306","235","304","304","330","332","336","336","330","338","340","205","210","215","235","330","334","306","304"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 4","b":["402","404","406"]},"In , a cache invalidation request can be sent to each application server of the cluster of application servers. In embodiments, the cache invalidation request can be sent from the provisioning server. In , the security cache of each application server of the cluster of application servers can be cleared upon receiving the cache invalidation request. In embodiments, the cache invalidation request can serve to overwrite, erase, or otherwise clear data already in the security caches of the application servers. Further, the security data that is overwritten can be stored in a temporary buffer to ensure that backup data exists in case of, for example, a data write failure.","In , the directory server can send updated security data to the security cache of each application server of the cluster of application servers. In embodiments, the updated security data can be modified in the directory server by an administrator or another entity. In , the security cache of each application server of the cluster of application servers can store the updated security data received from the directory server. In embodiments, the updated security data can overwrite the all data of the corresponding security cache, or can be stored in addition to any data in the corresponding security cache. In , processing can repeat, return to a prior processing point, jump to a further processing point, or end.","The foregoing description is illustrative, and variations in configuration and implementation may occur to persons skilled in the art. For example, while embodiments have been described in which the provisioning server  resides in a single server or platform, in embodiments the provisioning server  and associated logic can be distributed among multiple servers, services, or systems. Similarly, while embodiments have been described in which one set of application servers , ,  can be provisioned with updated security data, in embodiments, multiple sets of application servers can be provisioned in conjunction with operations of the provisioning server  and\/or the directory server . Other resources described as singular or integrated can in embodiments be plural or distributed, and resources described, as multiple or distributed can in embodiments be combined. The scope of the invention is accordingly intended to be limited only by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
