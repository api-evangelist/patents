---
title: Application-specific group listing
abstract: A method, apparatus, and system for providing active contents between applications activated by a plurality of computer systems are provided. A list of one or more remote users is created. A determination is made whether a first application and a second application are being executed by the at least one or more remote users. The list is updated in response to determining a change in a status of the second application being executed by the one or more remote users using at least one communications feature associated with the first application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08209376&OS=08209376&RS=08209376
owner: Apple Inc.
number: 08209376
owner_city: Cupertino
owner_country: US
publication_date: 20040506
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF SPECIFIC EMBODIMENTS"],"p":["1. Field of the Invention","This invention relates generally to a user interface for sharing content, and, more particularly, to a method, apparatus and system for providing utilization of an intermediary module to share content relating to a particular application.","2. Description of the Related Art","Networks, such as the Internet, intranets, or other private or public networks, are ubiquitous. In fact, many computers are connected to one or more networks at the same time. For example, a business may have hundreds or even thousands of computers coupled to its own private network, which was, at least initially, used primarily for storage and exchange of computer files. At least some of these same business computers may also be coupled to the interne. Further, with the development of wireless devices, ad hoc networks may also be formed with properly configured portable devices. Even telephonic devices, such as cellular phones, pagers and the like, may be coupled to one or more of these networks. Small businesses and homes are also often connected in similar arrangements.","All of this connectivity has naturally led to communications between various users over these networks. For example, electronic mail (e-mail), because of its usefulness, is now commonplace. E-mail is now widely used by businesses and individuals, and in at least some instances has replaced more traditional forms of communications, such as mailed letters, facsimiles, telexes, and the like. However, e-mail has proven to be somewhat awkward when used to carry on an ongoing interaction.","Instant messaging, on the other hand, allows two or more users connected through these networks to carry on an interactive conversation. Exemplary instant messaging systems include Apple iChat\u00ae, AOL Instant Messenger\u00ae, Microsoft MSN Messenger\u00ae, Yahoo\u00ae and the like. Typically, two or more users type in messages or select icons, which they send to one another. The receiving party(ies) may immediately respond with an appropriate message or icon. These instant messages are commonly displayed on a participant's monitor in serial fashion, usually scrolling the user's screen from top to bottom.","Each user typically maintains a listing of other people or parties with whom they routinely communicate. Various instant messaging systems use different terminology to identify these other parties, but commonly they are referred to as users, contacts, buddies, or the like. The buddies list allows the user to initiate a conversation with a person on the list by simply selecting them from the list. Additionally, the user can readily determine which of his\/her buddies are available by checking a status flag. For example, the listing can be configured to display the status of each buddy. Thus, when a buddy is on-line or available to receive an instant message his\/her status is indicated as being on-line or available.","Among the problems associated with the state of the art includes the fact that there is a lack of ability among various users to interact efficiently in the context of an application. Generally, in order to share active contents of a particular application, the user generally has to terminate the activation of an application and separately send various contents to another user who may be on the buddy list of the first user. For example, if a first user is executing a first application, a second user who may be on the buddy list of the first user generally cannot efficiently receive or interact with the first application being executed by the first user. Generally, applications executed by various users are standalone type applications where interactivity between various users in a real-time fashion is generally not possible.","Since various applications are standalone entities, communicating using another module such as instant messaging or e-mailing features, may require actually moving from one platform to another on a multi-tasking-type computer. This requires leaving one application to be able to communicate using another application. For example, one user may have an instant messaging application running concurrently with various other applications, such as word processors, graphics applications, multi-media applications, and the like. In order to communicate with another user on the buddy list, a user would have to leave a particular active application and enter a communications application, such as an email application. In other words, the user would have to leave particular active applications (e.g., word processing application, graphics application, multi-media application, etc.) and enter the communications application in order to perform communications described above. Again, this would compromise the real-time interaction between various users within the context of a particular application.","Furthermore, in order to provide for access of active applications between various users, developers of various applications would have to build client server functionality for each application to provide a collaborative embodiment. Additionally, in order to provide the ability to share content and other aspects of particular applications among various users, a significant amount of work to build connectivity relationships, such as peer-to-peer relationships between various environments, would likely be required. This would call for generating a new class of interaction between various users instead of the traditional client\/server relationship.","E-mailing various portions of an application for sharing with another user would be difficult to implement in real-time. Generally, a user may have to close a particular application, extract a file, and e-mail that file to a second user, wherein the second user will have to open that particular file after leaving an active application to do so. Meanwhile, the real-time interaction would be lost in such a situation. Additionally, various applications are developed such that e-mailing various files associated with these applications may be difficult. One such example would be multimedia files because, generally, multimedia files tend to be large size files. E-mailing such large files may be problematic among various users.","The present invention is directed to overcoming or at least reducing one or more of the problems set forth above.","In one aspect of the present invention, a method is provided for providing active contents between applications activated by a plurality of computer systems. A list of one or more remote users is created. A determination is made whether a first application and a second application are being executed by the at least one or more remote users. The list is updated in response to determining a change in a status of the second application being executed by the one or more remote users using at least one communications feature associated with the first application.","In another aspect of the present invention, a system is provided for providing active contents between applications activated by a plurality of computer systems. The system of the present invention includes a first terminal that is capable of activating a first application, a second terminal capable of activating a second application, and a network system to operatively interconnect the first terminal to the second terminal. The system also includes an application interface that is adapted to create a list of users relating to the first and second terminals. The application interface is capable of determining whether at least one of the first and second applications is being executed by at least one of the first and second terminals. The application interface is also capable of updating the list in response to determining a change in a status of at least one of the first and second applications being executed by at least one of the first and second terminals.","In still another aspect of the present invention, a chat module is provided for providing active contents between applications activated by a plurality of computer systems. The chat module includes a communications unit to provide for log in of a first remote terminal into a network system and provide for communications with a second remote terminal operatively coupled to the network system. The chat module also includes a graphical user interface (GUI) module operatively coupled to the communications unit. The GUI module is adapted to receive a command to provide active content relating to at least one of a first application being executed by the first remote terminal and a second application being executed by the second remote terminal. The chat module is capable of creating a list of users relating to the first and second remote terminals. The chat module is also capable of determining whether at least one of the first and second applications are being executed by at least one of the first and second remote terminals. The chat module is also capable of updating the list in response to determining a change in a status of at least one of the first and second applications being executed by at least one of the first and second remote terminals.","In yet another aspect of the present invention, a computer readable program storage device encoded with instructions is provided for providing active contents between applications activated by a plurality of computer systems. The computer readable program storage device encoded with instructions that, when executed by a computer, performs a method, which comprises: creating a list of one or more remote users; determining whether a first application and a second application are being executed by the at least one or more remote users; and updating the list in response to determining a change in a status of the second application being executed by the one or more remote users using at least one communications feature associated with the first application.","While the invention is susceptible to various modifications and alternative forms, specific embodiments thereof have been shown by way of example in the drawings and are herein described in detail. It should be understood, however, that the description herein of specific embodiments is not intended to limit the invention to the particular forms disclosed, but on the contrary, the intention is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the invention as defined by the appended claims.","Illustrative embodiments of the invention are described below. In the interest of clarity, not all features of an actual implementation are described in this specification. It will of course be appreciated that in the development of any such actual embodiment, numerous implementation-specific decisions must be made to achieve the developers' specific goals, such as compliance with system-related and business-related constraints, which will vary from one implementation to another. Moreover, it will be appreciated that such a development effort might be complex and time-consuming, but would nevertheless be a routine undertaking for those of ordinary skill in the art having the benefit of this disclosure.","Embodiments of the present invention provide for real-time or near real-time interaction between various computer users in the context of a particular application. Utilizing embodiments of the present invention, a first user may be able to execute a particular application and communicate with a second user and provide various active contents relating to various aspects of the application to the second user based upon a communication platform, such as an instant messaging platform. For example, a contact list, such as a buddy list relating to an instant messaging platform, may be generated among various users and utilizing embodiments of the present invention, users may share various contents of particular applications via the application running the contact list. For example, a user executing a word processing application may communicate and send various aspects of the word processing application, such as a text document, to another user via a communication platform, such as an instant messaging platform. The contact list may be application specific, wherein each application may have a corresponding contact list. Other examples of applications that may be used in conjunction with embodiments of the present invention may include, but is not limited to, a graphics application, a photo-editing application, a game application, a database application, a presentation application, a organizer application, and\/or a drawing application","Utilizing embodiments of the present invention, a first user may recognize, based upon the updating of a contact list, when a second user is active within a similar application as the one being executed by the first user. The first user may then interface with the second user within the context of the application. Embodiments of the present invention may also provide status updates of various users becoming active or inactive in the application on their respective terminals\/computers, thereby providing a real-time status of various users utilizing a particular application. Therefore, utilizing embodiments of the present invention, real-time and\/or near real-time content sharing of a particular application or multiple applications may be performed utilizing an independent communication platform such as an instant messaging platform, e.g., the iChat\u00ae platform offered by Apple Computer, Inc. of Cupertino, Calif.","Turning now to , a block diagram depicting a system , in accordance with embodiments of the present invention, is illustrated. The system  includes a plurality of computing devices coupled together through one or more network connections. For example, a plurality of devices may be coupled together via a private or public network, such as a local area network (LAN) or the Internet . In an alternative embodiment, the plurality of devices may be coupled together via an Intranet system. The actual connection between the devices and the Internet  may take on one or more of any of a variety of forms, such as a network interface card (NIC), a modem, a digital subscriber line (DSL), a cable modem, a wireless connection, and the like. The devices coupled to the Internet  may include, for example, desktop computers or servers, such as an Apple Macintosh\u00ae , a classic Apple Mac\u00ae , a Power Mac G4\u00ae, a Power Mac G5\u00ae, an iMac\u00ae, an IBM compatible personal computer (PC) , and the like. Further, these desktop computers, such as the Apple Macintosh\u00ae , may be coupled together via a smaller sub-LAN , with the sub-LAN  being coupled to the Internet . Portable devices, such as the Apple PowerBook\u00ae or iBook\u00ae , may also be coupled to the Internet , either directly or as part of the sub-LAN . Further, other consumer devices, such as cell phones, personal data assistants (PDAs), network appliances, and other embedded devices may be connected to the Internet  to employ aspects of the present invention.","The system  includes a plurality of servers ,  associated with a plurality of instant messaging providers. The servers ,  are each capable of hosting one or more programs designed to facilitate an instant messaging session between two or more of the computing devices. For example, the server  may host programs designed to facilitate communications via iChat\u00ae or Microsoft MSN Messenger\u00ae. Likewise, the server  may host programs designed to facilitate communications via AOL Instant Messenger\u00ae or Yahoo\u00ae. In other embodiments of the present invention, additional servers may be present in the system  to host programs designed to facilitate communications via a plurality of other instant messaging systems. Using the communications application, such as iChat\u00ae, the server  may facilitate communications relating to active contents of various applications executed by users of the desktop or portable computers illustrated in .","While the invention has been illustrated herein as being useful in a network environment, it also has application in other connected environments. For example, two or more of the devices described above may be coupled together via device-to-device connections, such as by hard cabling, radio frequency signals (e.g., 802.11(a), 802.11(b), 802.11(g), Bluetooth, or the like), infrared coupling, telephone lines and modems, or the like. The present invention may have application in any environment where two or more users are interconnected and capable of communicating with one another.","Those skilled in the art will appreciate that network connections may include a variety of other equipment, such as routers, switches, telephone modems, wireless devices, cable modems, digital subscriber lines, and the like. This type of equipment is not illustrated or discussed in detail herein so as to avoid unnecessarily obfuscating the present invention. For purposes of understanding the present invention, it is sufficient to recognize that additional conventional equipment of this type may be useful in establishing and maintaining communications between the various users.","At least two of the devices in the system  have software, such as an application program or a software client, installed thereon to allow an instant messaging session to be initiated and conducted. Generally, operation of an instant messaging system also involves, at least initially, the servers , . The following description of the operation of an instant messaging system assumes that a user has previously obtained a copy of a software client for his\/her computing device, and installed the software client. Thus, the instant messaging session begins when a local user runs or opens the software client. The software client tries to connect to the associated server , using a predefined protocol. Once the client is connected to the server , , a log-on procedure is followed to access or create an account. The log-on procedure may be manual or automatic, but generally involves entry of a name and password to log on to the server , . If this is the first time that the local user has logged on, he\/she may be prompted to sign up for an account and begin using it. When the server ,  verifies the entered name and password, the local user is logged onto his\/her account.","The software client sends the server ,  information regarding the connection, such as an IP address and a number of the port assigned to the client. The server ,  accesses a database contained therein and provides the user with his\/her contact list or buddy list associated with the account. Initially, the buddy list may be empty, but over time, a user may enter a large number of buddies with which he\/she routinely communicates. The contact list or buddy list may be integrated into a particular independent application (e.g., a word processor application, a multi-media application, etc.) being executed by users of the desktop or portable computers illustrated in . The server ,  creates a temporary file and stores connection information regarding the user and the list of buddies\/contacts. The server ,  then checks the status of each of the remote users in the local user's buddy list to determine which, if any, are currently logged in\/active\/on-line.","If the server ,  finds any of the buddies logged on, it sends a message back to the software client on his\/her computing device with the connection information for those buddies. The server ,  also sends his\/her connection information to the other users in the local user's contact list that are signed (or logged) on to their respective accounts. When the client software gets the connection information for a remote user in the local user's buddy list, it changes the \u201cstatus\u201d of that person to \u201cOnline.\u201d","An instant messaging session can be initiated with any of these \u201conline\u201d buddies by selecting their name in the buddy list. A graphical user interface (GUI) opens, allowing the user to enter messages, manage the instant messaging session, and\/or exchange active content relating to applications being executed by various users of the desktop or portable computers illustrated in . The remote user receives the local user's \u201cinstant message\u201d and may respond. The GUI that each user sees on his\/her respective computer display expands to include a scrolling dialog of the conversation. Thereafter, each user's instant messages appear in the GUI on both computing devices.","When the conversation is completed, or a user exits a particular application, the users close the GUI, go offline from the application, and\/or exit the software client. When this happens, the software client sends a message to the server ,  to terminate the session. The server ,  sends a message to the software client of each user on the local user's buddy list that is currently online to indicate that the local user has logged off a particular application. Finally, the server deletes the log in the temporary file that contains the connection information for the local user's software client or the local user's active status in an application. Thus, in the buddy lists of the local user's contacts that are online, the local user's name moves to the \u201cOffline\u201d status section for a particular application.","Turning now to , a client\/server based system, in accordance with embodiments of the present invention, is illustrated. The system illustrated in  may comprise a plurality of users that may operate from various remote terminals\/computers, such as the terminals described in . A network system  may host various users. The network system  may comprise a server  that is capable of providing for communications between various users. The network system  may be linked to a first user , a second user , a third user , and a fourth user , to an Nuser . In one embodiment, the first through Nusers - may be of various types of computing devices, physical or virtual, such as a computer, a telephone, a settop box, a network appliance, or any device capable of connecting to the network system  and receiving active content.","Each of the users - may comprise an application interface (AI)  that is capable of providing a communication interface between an application executed by a first user , for example, to other users, for example a second user , via the network system . This communication interface may be facilitated by a communication application, such as an instant messaging application (e.g., iChat\u00ae). Utilizing embodiments of the present invention, a first user  may execute a particular application via the application interface , and may communicate within the context of the application to exchange active content with a second user , who is also executing a similar application. This communication may be performed at a real-time and\/or a near real-time fashion. A more detailed illustration of the application interface  is provided in various figures and accompanying descriptions below.","Turning now to , a more detailed illustration of various applications being executed by the first user  and the second user  is illustrated. This illustration of the execution of various applications is for illustrative purposes and those skilled in the art would appreciate that alternate execution of applications may be performed and remain within the spirit and scope of the present invention. As illustrated in , the first user  may execute one or more e.g., first application  as well as a second application , and\/or more applications. For example, the first application  may be a non-communications application, such as a word processing program and the second application  may be a another non-communications application such as a photo-editing program. The term non-communications application may include various types of applications that are not exclusively dedicated to providing communications, such as a chat application or an email application. Similarly, the second user  may execute the second application  and a third application . Utilizing embodiments of the present invention, the first user  may be able to view a contact list or a buddy list , which may provide an indication of the status of other users who are executing similar applications and are part of the contact list  implemented by the first user . For example, the contact list associated with the first application  may indicate that the third user  and the Nuser  are also active in the first application  on their respective remote terminals.","Similarly, for example, a second contact list associated with the second application  may indicate that the second user , the third user , as well as the fourth user  are active in the second application  on their respective remote terminals. Likewise as indicated in , the second user  may view a third contact list associated with the second application  that may indicate that the first user , third user  and the fourth user  are active in the second application . Furthermore, the second user  may recognize that a fourth contact list associated with the third application  indicates that the Nuser  is active in the third application  being executed on a remote terminal associated with the Nuser .","The users appearing on the various contact lists -, associated with particular applications being executed by the first user , generally belong to a contact list or a buddy list (-) created by the first user . In one embodiment, only preferred users -, which are selected by the first user , will appear on the first and second contact lists , . A particular user may register interest to be part of a buddy list. In one embodiment, a user may register interest in being part of a buddy list for a particular group of people. In one embodiment, the group of people to which a user is registering interest, may include a group of people who are active in a particular application. In an alternative embodiment, any one of the 1through Nth user -, or any one of the 1through Nth piers -, may perform a polling function to determine if a particular user is to be added to a buddy list, or determine if a particular user is active and available for communications via an active application. The first application  and the second application  will generally communicate via the application interface .","In one embodiment, the application interface  may comprise sub-application interfaces AI()  and AI() , which are respectively associated with the first application  and the second application . Similarly, the second user  may also comprise an application interface  that comprises an AI()  and an AI()  associated respectively with the second application  and third application . The application interface  is utilized by the first user  and the second user  to provide for a communications interface between the applications , , . Therefore, an intermediate module, such as a chat program or an instant messaging program, such as iChat\u00ae offered by Apple Computer, Inc. of Cupertino, Calif., may be utilized to facilitate active contact transactions and other communications between the applications being executed by the first user  and other users associated with the network system . Further details relating to the type of communications facilitated by the application interface  are provided below.","Turning now to , a more detailed illustration of an alternative embodiment of the first user  and the second user  executing various applications is illustrated. The embodiment illustrated in  provide for a general buddy list that may encompass a buddy list (communications list) for a plurality of applications. As illustrated in , the first user  may execute one or more applications, e.g., first application  and the second application . For example, the first application  may be a word processing program and the second application  may be a photo editing program. Similarly, the second user  may execute one or more applications, e.g., the second application  and a third application . The first user  may comprise a buddy list , which may list various users, such as the second user , a third user , and a fourth user .","The buddy list  may indicate the particular applications that are being executed by the users listed in the buddy list . For example, the buddy list  of the first user  may indicate that the second user  is executing the second and third applications , . Likewise, a buddy list  in the second user  will list various users and any particular applications executed by the user. For example, the buddy list  of the second user  may indicate that the first user  is executing the first and second applications , .","The listing of the applications and the users in the buddy lists ,  may generally be based upon a registration of various users that the first user  may register into the buddy list .","Additionally, the fact that the various applications executed by the second user  appear in the buddy list may be a result of the second user  having registered the fact that the second user is publicizing the execution of the second and third applications , . In other words, the information appearing on the buddy lists , , in one embodiment, is based upon volunteer registration performed by each of the users and the type of applications that each user is executing. The buddy lists ,  provide information relating to other users that may be logged in on a network system , and who have registered their interest in publicizing their status of executing various applications.","Furthermore, the embodiments illustrated in  provide for exchanging status of various applications being executed by the other users, as well as, active content relating to the particular applications being executed by various users. For example, an exchange of a photo file may be exchanged between the first and second users who are both executing the second application , which in one embodiment, may be a photo editing application. Since the first user  can see that in its buddy list  that the second user  is executing the second application , and also because the second user  can view in its buddy list  that the first user  is executing the second application , an exchange of active content may be initiated by the first user  or the second user .","Turning now to , another implementation of a peer-to-peer configuration in accordance with embodiments of the present invention is illustrated.  illustrates a first peer , a second peer , and a third peer  through an Nth peer , being interconnected for facilitating peer-to-peer communications via a network . In one embodiment, the peer-to-peer connections may be provided by the network , which in one embodiment may be a peer-to-peer network. The first through Npeers - may each comprise an application interface  that is capable of interfacing with one or more applications being executed by each of the peer stations or terminals. The application interface  is capable of interfacing with other peers via their respective application interfaces  through the peer cloud . Utilizing the application interface , active content relating to particular applications may be transferred to and from various peer-to-peer connections.","In one embodiment, the first peer  may be a sender peer and the second peer  may be a recipient peer. However, those skilled in the art would appreciate that the designation of a peer as a sender or receiver is not fixed and that in practice, a peer is sometimes sending data and sometimes receiving data. Active content, as used by embodiments of the present invention, may refer to a variety of data, such as, for example, data files in current use at a peer or a user station. The data file may be text data, or media content, such as an audio or video file being played in a media player, text, graphics, or numeric content, such as a document, spreadsheet, code file, graphics file, or any other file having data representing content that is capable of perception by a user or a peer. In one embodiment, the first peer  may activate various contents within the context of an application being executed by the first peer . The content(s) may then be synchronized into an active content stream and transmitted to other peers on the network . In one embodiment, the peers - may be of various types of computing devices, physical or virtual, such as a computer, a telephone, a settop box, a network appliance, or any device capable of connecting to the network  and receiving active content.","The second peer  may receive the active content from the first peer  and may be displayed in a graphic user interface (GUI). The active content transmitted by the first peer  to the second peer  may be based upon communications enabled by the application interface , which may include an intermediary module, such as a chat or instant messaging program (e.g., iChat\u00ae). Other applications may include the first peer  providing multimedia active content, such as music audio files that may be received and executed by the second peer , such as music files utilized by music programs, such as iTunes\u00ae offered by Apple Computer, Inc. of Cupertino, Calif. This type of communication may be used to perform file exchanges and other commerce activities, such as the first peer  providing a music file to the second peer  for purchase.","The network  may be public or private, including both wired and wireless portions. The network  may facilitate transmission and reception of data in packets or through circuits and use communications protocols such as Internet Protocol (IP) or Asynchronous Transfer Mechanism (ATM). Combinations of the previous variations of network communication are within the scope of the present invention since it is transport independent.","Whether embodiments of the present invention are implemented in a client server communication protocol, such as the system illustrated in , or in a peer-to-peer communication protocol, such as the system illustrated in , these embodiments may be used to achieve a real-time communication and updating of content or contact lists in the context of various applications executed by users of the systems. Embodiments of the present invention also provide for a non-polled system where a user or a peer may register for interest, either passively or actively, an inclusion in a contact list or a buddy list, which may be updated automatically. This allows for the creation of work-groups of people using similar applications on a real-time or a near real-time basis. Utilizing embodiments of the present invention, the applications utilized by various users - may be integrated into a work-group such that these applications or contents from these applications may be shared. In one such example, a user executing a word processing application may be able to communicate with another user in a remote location that is using similar word processing applications, and exchange files and various contents between each other via the application interface . The fact that one user has activated a similar application may automatically update another user's contact list or buddy list . Therefore, the contact\/buddy list  provides a particular user with the status of other interested users utilizing the same application.","Turning now to , a block diagram depiction of the application interface  in accordance with one embodiment of the present invention is illustrated. In one embodiment, the application interface  comprises a chat module  and an application programming interface . The application programming interface (API)  provides for programming an interface for a particular application such that a desired type of communication in the context of the application may be facilitated. Developers may customize interfacing of a particular application by programming various aspects of the interface using the API . Utilizing the chat module , updating of the contact\/buddy list  and\/or transfer of active content may be facilitated by the application interface . Therefore, the application interface  is able to communicate between a particular application being used by a user and to the network  for communication with other users. A more detailed description of the application interface  is illustrated in  and accompanying description below.","Turning now to , a block diagram depicting a communications flow relating to the application interface , in accordance with one embodiment of the present invention, is illustrated. The second application  being run on the first user , for example, communicates with the application interface . The application interface  then in turn, communicates with a server  or a peer cloud . The server  then communicates with another application interface , which in turn provides for communications with the second application  being executed on the second user . Therefore, the application interface  provides for data transactions via the server  or the peer cloud , between the first user  and the second user . Therefore, the second application  being run on the first user  will update a contact list or a buddy list  associated with that particular application, indicating to the first user  that the second application  is also being executed on the second user . Hence, updating of the contact list  may be facilitated; similarly, transfer of active contents relating to the second application  between the first user  and the second user  is also facilitated.","Turning now to , a block diagram depiction of the chat module , in accordance with one embodiment of the present invention, is illustrated. In one embodiment, the chat module  comprises a communications unit , a server\/client unit , a content information database , and a GUI module . In one embodiment, the communications unit  provides a communications pathway for the chat module  to transmit and receive messages and to share active content through a server\/client network and\/or a peer-to-peer network. The communications unit , in one embodiment, may log into a centralized chat server and establish a point-to-point communication between other users and\/or peers by exchanging network addresses, such as IP addresses. The communications unit  may also comprise a network interface, appropriate protocol stack, an operating system or port control, a client server network software, a peer network software, or an application software.","The server\/client unit  may send and receive active content information for output and input to and from other clients or peers. The server\/client unit  may perform synchronized data streaming of active content. Synchronization of data, however, may include substantially synchronizing data, since the operation is dependent on network load, streaming parameters, and\/or various other conditions. In one embodiment, the server\/client unit  may be an FTP, desktop sharing software, an audio video server, or any other device capable of sending and receiving active content via a network. The content information database  may store information regarding active content shared among various clients and\/or peers. Active content information may include, but is not limited to, meta-data about data files, such as its size, and auxiliary data files related to data files, such as a unique identifier, related image file, content file, content source, or any other information directly or indirectly related to the content. The content information database  may be queried by an identifier, such as an MP3 ID tag received by the chat module . In response, the content information database  may make matching information available, such as the MP3 content title. This information may be displayed by a client or a peer, or may be sent to another client or peer.","In one embodiment, the unique identifier may comprise an active content fingerprint, such as a hash key or wavelet. The hash key may be determined by an algorithm implementing a computational transform on binary data such as a SHA-1 or CRC32. The unique identifier may be used by a client or a peer to retrieve locally stored, active content information associated with a particular application being executed.","The GUI module  may provide user interface of the chat module  and receive user commands related to various contents associated with applications being executed by various clients or peers. In one embodiment, the GUI module  may integrate active content information relating to a particular application into the chat module  and provide for communications with other clients or peers via the communication unit . The GUI module  may also receive commands to initiate various synchronized data streams or initiate and execute a transaction. The GUI module  may include a graphical engine, an audio\/video CODEC, a processor, an operating system, graphics software, and other graphic enhancing devices or software. The chat module  allows for updating various content lists associated with particular applications utilized by users and\/or providing for active content relating to particular applications being executed by various clients or peers.","Turning now to , a block diagram for implementing the methods associated with embodiments of the present invention is illustrated. The peer-to-peer and\/or the client\/server systems illustrated in the present disclosure may provide for a particular user, such as the first user , to log into a centralized network or server (block ). A peer station may log into a network or peer cloud , similarly, a first user  may log into a client server network system . Embodiments of the present invention may be implemented into a server centric model and\/or into a peer-to-peer model. Upon logging into a centralized system or into a peer-to-peer system, a user, by implementing embodiments of the present invention, may be able to detect whether another user involved with the system may be interested and\/or had activated a similar application as one that is being run by the original user.","A user may receive notification from the server centric or peer-to-peer system that the implementation of a particular application has changed state in some interesting manner, such as quitting, launching, sleeping, crashing, or various other status updates. The server centric or peer-to-peer system may then perform an application interface function to provide for communication of contact lists or buddy lists  and\/or active contents between various users of the system(s) (block ). A more detailed description of the application interface function described in block  is provided in  and accompanying description below.","Upon performing the application interface function, the server centric system or the peer-to-peer system may then allow for application spaced transactions, such as updating of contact lists or buddy lists , providing transactions of active contents of various applications between various users in the system, and the like (block ).","Turning now to , a more detailed block diagram depiction of performing the application interface function described in block  of , is illustrated. In one embodiment, the user of a user centric system or a peer of a peer-to-peer system may activate a particular application (block ). Examples of the application may include a word processing software, a graphic software, a music software, a photo editing software, and\/or other applications. The user may determine whether the use of this particular application is to be publicized or not (block ). In some cases, for uses of a particular application, it may be desirable not to publicize the activation of the application for various security reasons or privacy reasons. For example, a user may decide that the application of activating a music program is not to be published to a server centric or a peer-to-peer system. Additionally, applications relating to access to private intranet or Internet access may not be published to preserve security integrity.","There are various methods of determining whether a particular application is to be published. One option is to have an intermediary program in the application interface , such as iChat\u00ae, maintain a list of particular applications that are to be excluded or included for publication to the server centric or the peer-to-peer system. In an alternative embodiment, the particular applications themselves may have a preference setting that can be set or reset to indicate whether the activation of the application may be published. If such an activation is to be published, this status may be communicated via the application interface  (e.g., iChat\u00ae).","If it is determined that implementation of the application is not to be published to a server centric or a peer-to-peer model, the application interface function may not be performed and is terminated (block ). If it is determined that the activation of the application is to be published, the remote terminal of the user then activates the chat module  (block ). Activation of the chat module , as described above, provides for communications between various applications being executed by various users on a server centric system or a peer-to-peer system in the context of the particular application. Upon activation of the chat module , other entities, such as other users or peers, are informed of the activation of the application by the user (block ). Informing other users and\/or peers of the activation of the application may include transferring contents that includes information such that contacts lists or buddy lists  may be updated. Therefore, for example, a second user  may receive an update on its third contact list associated with the second application , which is also being executed by the first user .","Once the users\/peers are aware of activation of a particular application, i.e., the contact lists or buddy lists  are updated, a particular user may monitor for information relating to activation of the application by other entities for status updates. This monitoring may be handled in a variety of manners, such as by the use of a polling system or a non-polling system, upon which an update of an activation of an application is detected by the application interface  (block ).","Monitoring for information related to the activation of a particular application may be performed by identifying a particular identifier relating to a particular application. One such option may be to implement a typing creator, which may be two to four character codes relating to a particular application and monitoring the activation or de-activation of that particular code. In an alternative embodiment, a mine type arrangement may be made where the signature of the application may be detected to determine whether a particular application is being executed by a remote entity. In yet another alternative embodiment, a URL access or URL description may be detected to determine whether a particular application is being executed by a remote entity.","The embodiments of the present invention may be applied such that a particular application will only see information relating to the status of other people that are utilizing that particular application who are selected to be on contact list or buddy list . The application interface , which may employ programs, such as iChat\u00ae, may itself maintain a list of how many users are using different applications. However, the particular application, such as the first application , will only see information relating to other users that are also executing the first application  on their remote terminal. An updating of the execution of a particular application may be performed by the application directly communicating with the network, or alternatively, the application communicating through an intermediary module such as iChat\u00ae via the application interface .","While monitoring the activation or de-activation of applications by other entities, a determination is made whether an activation status change has occurred (block ). If no status change has occurred, the monitoring of status of the activation or de-activation of applications continues as illustrated in .","Upon a detection that an activation has occurred, an updating and displaying of the active list is provided (block ). In other words, the contact list or buddy list  associated with a particular application is updated to reflect the new status relating various entities executing the particular application. A determination is then made regarding the routing information relating to communication with other entities. This routing information may include determining the IP address and other routing information that may be used to facilitate communications from one application to another via the intermediary programs, such as iChat\u00ae (block ). Upon determining the routing information, the application interface  may monitor requests for transactions relating to a particular application and facilitate transactions responsive to request(s) for transmission or reception of active contents relating to a particular application (block ).","Utilizing the methods described above, a contact list or buddy list may be maintained and updated in real-time or near real-time relating as to which other users of a server centric system or peers of a peer-to-peer model system is active in a particular application of interest. Furthermore, communication within the context of transmitting and receiving contents of a particular application may be facilitated utilizing the methods described above. Utilizing embodiments of the present invention, various users on a client\/server system or various peers in a peer-to-peer system may communicate and send and receive active contents relating to a particular application among various users. A contact list or a buddy list may be maintained to update a list when a particular user activates or de-activates a particular application. This provides for efficient communication with other users relating to particular applications, which in turn may increase efficiency, creativity, and productivity among various work-groups.","The particular embodiments disclosed above are illustrative only, as the invention may be modified and practiced in different but equivalent manners apparent to those skilled in the art having the benefit of the teachings herein. Furthermore, no limitations are intended to the details of construction or design herein shown, other than as described in the claims below. It is therefore evident that the particular embodiments disclosed above may be altered or modified and all such variations are considered within the scope and spirit of the invention. Accordingly, the protection sought herein is as set forth in the claims below."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention may be understood by reference to the following description taken in conjunction with the accompanying drawings, in which like reference numerals identify like elements, and in which:",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 3B","FIG. 3A"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 5","FIGS. 2 and 4"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 7","FIG. 5"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 9","FIG. 8"]}]},"DETDESC":[{},{}]}
