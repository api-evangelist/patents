---
title: Entry of a password through a touch-sensitive computer screen
abstract: A keyboard graphic is displayed on a touch-sensitive display screen of a computing system when it is determined that a password should be entered, so that the password can be entered by touching individual spaces within the keyboard graphic. The keyboard graphic may be thus displayed several times during the operation of the system, including following a predetermined period in which no user input is made to the computing system, under control of a subroutine operating as a screen saver subroutine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07308652&OS=07308652&RS=07308652
owner: Lenovo Singapore Pte. Ltd
number: 07308652
owner_city: Singapore
owner_country: SG
publication_date: 20010608
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","This invention relates to providing a means within a computer system for receiving a user password and, more particularly, for providing a system-generated keyboard graphic through which a such a password is entered when it is needed.","2. Background Art","Passwords are often used to prevent surreptitious use of a personal computing system. Operation of such a system for number of different purposes may be prevented until a previously determined password has been supplied by the user. For example, during a system initialization process, before the operating system is booted, a power-on password may be required. Then, after providing the power-on password, and after an operating system, such as Windows 9x, Windows ME, or Windows 2000, is loaded, the user is required to provide an operating system password before proceeding. Then, if user inputs are not made to the system within a predetermined time period, a screen saver routine is started, requiring the user to input a screen saver password before continuing to use the computer.","Screen saver routines were originally developed to provide moving images to be displayed on the screen of a computer not being actively used, so that a static image could not be burned into the phosphorus coating of the cathode ray tube in a display of a computer which had been left on with the same image being displayed for an extended period of time. More recent improvements in the art of building computer displays have made this use of screen saver routines generally unnecessary, as a static image remaining on the screen for a long time is still not burned into the phosphorus.","Nevertheless, screen saver routines are very popular, being used to provide attractive images when a computer is not being actively used. Modern screen savers also provide a security function in the form of a password, which can optionally be set by the computer user to prevent, or at least discourage, unauthorized use of the computer and its stored data. For example, if a password function has been set in a conventional computing system, running a conventional operating system, such as Windows 9x or Windows 2000, and displaying a screen saver, a password must be entered by a potential system user before the operating system moves on to allow access to computer functions and data. Under these conditions, when a potential user provides an input to the system by depressing a key on the keyboard or by moving a pointing device, such as a mouse, the system displays an instruction to enter the password. The predetermined password is then entered by means of the keyboard.","After the password has been entered correctly, the operating system proceeds to display a screen from which the user can proceed to use the system. The nature of this screen typically depends on what was occurring before the screen saver routine was started. For example, the screen saver routine can be set to start when the system enters a suspense mode following a predetermined elapsed time without an input through the keyboard or pointing device. If the screen saver routine has been started in this way, the system returns to the program being executed before the suspense mode was entered. While alphanumeric data is generally entered into a computing system by the system user through the system keyboard, such data may also be entered using a touch-sensitive display. For example, Japanese Patent Application No, 62-276617 describes a touch-sensitive display screen having a thin, transparent overlay with a printed keybutton pattern attached to an outer screen surface, with the overlay being used to locate positions used as input keys in entering a password. What is needed is a keyboard or keypad graphic which is displayed only when it is needed, so that the entire display screen can be used for other purposes when this particular graphic is not needed.","Several patents describe a computer in which entry of data from an area provided on a display, touchscreen, or the like is facilitated by the provision of a \u201csoft keyboard.\u201d For example, U.S. Pat. No. 5,784,060 describes such a computer, in which the data entry area is defined, by the cooperation of a control program and a processor, to have a central zone in which data entry keys are displayed, and peripheral zones, in which function keys and a list of entry options are displayed. A user can change the keyboard into any desired one of a variety of configurations. U.S. Pat. No. 5,805,157 describes such a computer having keys programmable as hexagonal cells, which enable the display of larger areas for engagement by the finger or other input pointer. The user is permitted a choice between hexagonal and rectangular cells. U.S. Pat. No. 5,818,451 describes such a computer in which misentry of data is avoided by providing for the adjustment of the input by raising the entry of input by providing for the adjustment of the input by a fixed percentage of the size of the target soft key. U.S. Pat. No. 5,801,941 describes such a computer in which misentry of data is avoided by providing for the calculation of an offset as may be required by the entry habits of a user which target areas of a defined key cell spaced from the center of the cell.","In accordance with a first aspect of the invention, a method for entry of a password is provided in a computer system having a user interface including a touch-sensitive display screen. The method includes determining that the password is required, and, in response to determining that it is required, displaying a keyboard graphic on the touch-sensitive display screen and providing for the conversion of output signals from the touch-sensitive display screen. The keyboard graphic includes a first number of spaces, each of which is defined by surrounding lines within the keyboard graphic, and each of which includes a symbol representing an alphanumeric character. The output signals are converted so that a signal caused by touching the touch-sensitive display screen in one of the first number of spaces produces a code representing the alphanumeric character within the space. The method preferably also includes sequentially receiving codes representing alphanumeric characters, determining that the characters represented by these codes form a predetermined password, and removing the keyboard graphic from the touch-sensitive screen.","The keyboard graphic may additionally include a second number of spaces, each of which includes a graphical representation of a function performed within the computer system. Further in response to determining that the password is required, the output signals are converted so that a signal caused by touching the touch-sensitive display screen in one of the second number of spaces produces a code representing the function represented by the graphical representation within the space.","In accordance with a second aspect of the invention, the method starts with receiving a user input to the computer system. Then, a timer is reset and started.","When a predetermined time has elapsed since starting the timer, it is determined whether a keyboard graphic is visible on the touch-sensitive display screen. Then, if the keyboard graphic is not visible, it is displayed on the screen. In either case, output signals from the touch-sensitive display screen are converted to produce a code representing an alphanumeric character representing a symbol included within the space as codes representing alphanumeric characters. After it is determined that the alphanumeric character represented by these codes form a predetermined password, if the keyboard graphic was not previously visible, it is removed from the screen.","In accordance with a third aspect of the invention, a computer system is provided, including a touch-sensitive display screen, information storage, and a processor. The touch-sensitive display screen has a display surface and generates output signals in response to the display surface being touched, with the output signal indicating a position in which the display surface is touched. The information storage stores an operating system and a soft keyboard subroutine. The operating system, executing within the processor, determines that a password is required and causes the soft keyboard subroutine to display a keyboard graphic on the touch-sensitive display screen and to cause a conversion of the output signals. The keyboard graphic includes a first number of spaces, each of which is defined by surrounding lines within the keyboard graphic, and each of which includes a symbol representing an alphanumeric character within the keyboard graphic. The conversion of the output signals causes signals generated in response to touching the touch-sensitive display screen within a space in the first plurality of spaces produces a code representing the alphanumeric character represented by the symbol included within the space.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["10","12","14","16","14","12","12","18","20","16"]},"In accordance with the present invention, the computing system  provides for the use of one or more passwords to prevent operation of the system under control of a user until the user has successfully entered a predetermined password. For example, a password may be required before finishing the process of booting the operating system and again after the system has apparently been left unattended for a predetermined time, as evidenced by a lack of operator inputs. While the user may supply a password required by the system  by typing it on the keyboard , the system  is often configured to make using the keyboard  inconvenient. With the keyboard in the raised position of , the keyboard  is exposed so that it can be easily used. However, the display screen  is pivotally mounted on a support bracket , which is itself pivotally mounted on the system housing . From the position of , the keyboard  may be pivoted in the direction of arrow  into a horizontal position, and the support bracket  may be lowered by pivoting in the direction of arrow  until the display screen  extends horizontally over the keyboard . The digital notepad  may also be rotated in the direction of arrow  to be folded under the system housing , as a flexible central section  is formed into a curved shape.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 2","FIG. 2"],"b":["10","12","10","10","16","12","12","14"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3","b":["12","10","10","32","34","32","32","12"]},"A keyboard graphic  is also displayed, being associated with various areas of the display screen  being defined as pressure-sensitive for providing particular user inputs, for example in the manner generally described in U.S. Pat. Nos. 5,784,060, and 5,805,157 the disclosure of which is incorporated herein by reference. In this way, the user is preferably provided with an ability to choose between a keyboard configuration presenting hexagonally shaped key areas, as shown in , and a keyboard configuration presenting rectangularly shaped key areas. The methods described in U.S. Pat. Nos. 5,818,451 and 5,801,941, the disclosure of which is also incorporated herein by reference, may also be used to reduce the possibility that data may be entered incorrectly.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 4","FIG. 1"],"b":["10","40","14","16","42","44","12","45","10","48","14","10","46","48","50","52","10","54","55","52","10","10","56","10","10"]},"The processor  executes instructions of an operating system  and an application program  stored within system memory . Both the operating system  and the application program  may be stored in one or more computer readable media  to be read in the drive unit  and then stored in the non-volatile storage . Alternatively, either or both the operating system  and the application program  may be transmitted in the form of electrical signals over a telephone network and through the modem , or over a LAN and through the LAN adapter , being downloaded for storage in the non-volatile storage .","In accordance with the present invention, one or more password routines  executing in the processor  provide for one or more types of instances in which a password is required, and a soft keyboard subroutine , also being executed from the system memory , causes the keyboard graphic  (shown in ) to be presented. When this screen is presented, output signals from the touch pad  are interpreted to represent specific keyboard key strokes, for example in the manner generally as described in U.S. Pat. Nos. 5,784,060 and 5,805,157.","Specifically, referring to , the keyboard graphic  includes a number of spaces defined by a pattern of lines , with each of the spaces including either an alphanumeric character or a symbolic representation of a function to be performed by the computing system , such as \u201cEnter\u201d for the entry of data. The touch pad  produces an electrical signal representing a position in which the display screen  is touched. This electrical signal is processed and provided as an input to the processor . When the keyboard graphic  is displayed, the soft keyboard subroutine  causes the electrical signal from the touch pad , resulting from touching the display screen  in one of the spaces , to be interpreted within the computing system  as a code representing the alphanumeric character shown within the space or the function graphically represented within the space ","Thus, the can enter a password by touching the appropriate spaces with his finger, or, for example, with the rounded end of the special pen , (shown in ). The spaces including alphanumeric characters are used to enter the individual alphanumeric characters of the password, while at least some of the functions graphically represented within the keyboard graphic  may also be used. For example, the data entry function, represented by \u201cEnter\u201d may be used to enter data which has been provided through the soft keyboard. The capitalization function, represented by \u201cCaps\u201d may be used to change the case of alphabetic symbols in a case-sensitive password, and the backspace function, represented by \u201cBack\u201d may be used to prepare for entering over an erroneously entered alphanumeric character.","Before the operating system  is loaded from nonvolatile storage , an initialization program stored in the EEPROM  and executing within the processor  may require that a password by entered by the user. Then, the operating system may require an operating system password before proceeding to run an application program. A network password may also be required before the user is allowed to log on to a network. In general, the user is allowed to set the individual passwords and to determine, during a set up process, whether password protection will be used. Thus, the dialog box  and keyboard graphic  are displayed for use in entering a password when a predetermined point is reached within the execution of a subroutine in the processor , and when it is further determined that the use of a password at the predetermined point has been previously selected.","In accordance with a preferred version of the present invention, the application program  is executed to load the touchscreen password subroutine  into storage within a folder  in nonvolatile storage , with the folder  being otherwise used for the storage of one or more conventional screen saver subroutines. In this way, the touchscreen password subroutine is made available for selection by the user as a screen saver. After such a selection is made, the touchscreen password subroutine is executed in response to a call issued by the operating system for a screen saver subroutine. A conventional screen saver subroutine provides a number of patterns of moving images on the display screen when the system has apparently been left unattended for a predetermined period of time, as evidenced by a lack of inputs from the system user through a keyboard or pointing device. A password function associated with a conventional screen saver subroutine prevents operation of the computing system under the control of a user until he has correctly entered a predetermined screen saver password. Since examples of an operating system suitable for this type of operation are found in the Microsoft operating systems sold as Windows 95, Windows 98, Windows ME, and Windows 2000, the following description assumes the use of one of these operating systems, hereinafter called \u201cWINDOWS.\u201d","WINDOWS conventionally provides for the execution of subroutines causing various different series of screen saver images to be displayed during performance of the screen saver function, with such subroutines being stored in a folder  in nonvolatile storage . The folder  has the address C:\\WINDOWS\\SYSTEM, and such subroutines are stored with the file extension .SCR. WINDOWS provides a dialog box, which is accessed by selecting a Screen Saver tab on the Display Properties Panel from the Control Panel, on which the user can determine the screen saver subroutine to be used from a list of stored screen saver subroutines. For example, the touchscreen password subroutine  is stored as a screen saver subroutine named \u201cIBM TouchBoard Screen Saver.\u201d After this name is selected from a list of names in the dialog box, the screen shown in  is presented whenever WINDOWS determines that a sufficient period of inactivity, without a user input to the system , has occurred.","WINDOWS also provides for user to determine a sequence of alphanumeric symbols to be used as a password. The dialog box accessed by selecting the Screen Saver also includes a check box for indicating if the screen saver is to be password protected. When this check box is selected, a Change button is made available. After this button is selected, the password is typed and retyped for confirmation.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 5","FIG. 5","FIG. 5A","FIG. 5","FIG. 5B"],"b":["60","63","48","58","61","62","63"]},"The processes of  begin in step , with electrical power being turned on in the computing system . Next, in step , the initialization program is run. After this initialization process has been completed, the operating system  is loaded from nonvolatile storage  to system memory  and started in step . Then, in step , a determination is made of whether an operating system password is required. If it is not required, the operating system continues to step , in which a determination is made of whether a screen saver has been selected. Otherwise, the soft keyboard subroutine is called by the initialization program to display the keyboard configuration  in step  and to cause outputs of the touch pad  to be converted to codes representing the characters of the keyboard configuration  in step . In step , the operating system displays a dialog box  requesting the password. Then, if the password is entered correctly, as determined in step , the dialog box  is removed in step , the conversion of codes begun in step  is terminated in step , and the keyboard configuration  is removed in step . Then, the operating system continues to step .","If it is determined in step  that a screen saver has not been selected, the system continues to run in step , under control of the operating system, the user, and other routines and applications which may be loaded. Otherwise, a timer subroutine is started in step . Until the timer expires, as determined in step , the timer is restarted in step  following each input by the user, as determined in step . The time previously specified by the user to wait before starting a screen saver is used to determine the elapsed time at which the timer expires. When the timer expires, the system proceeds from step  to step , in which a determination is made of whether the touchscreen screen saver has been previously selected. If it has not, the operating system  continues to run in step , providing a selected screen saver from the conventional screen saver routines stored in folder .","On the other hand, if the touchscreen screen saver has been selected, the system proceeds to step , in which it is determined whether the keyboard is displayed. If it is displayed at this time, it must be present as a result of a program executing within the computer system , or as a result of a decision by the system user to use the keyboard before the system  was left without a user input long enough to allow the expiration of the timer. A preferred version of the present invention requires that, upon the successful entry of the password, the system is to be restored to its operating condition before the timer expired to initiate this process; if the keyboard graphic  is present in step , it must be retained following successful entry of the password; and, if the keyboard graphic  is not present in step , it must be removed from the display screen  upon successful entry of the password. To make this possible, only if the keyboard graphic is present in step , a flag is set in step . If the keyboard graphic  is not displayed in step , the soft keyboard subroutine is called by the touchscreen password subroutine  to display the keyboard graphic  on the screen  in step , and, in step , to cause outputs of the touch pad  to be converted to codes representing the characters and functions of the keyboard configuration .","After steps  and , the system waits to recognize a user input in step . Steps  and  are each steps in which a user input is used to determine that the system is attended. In step , before the timer has expired, this fact is used to reset the timer. The input may be made through the keyboard , through the touch pad  of the display screen , through the digital notepad , or through an attached pointing device . In each case, an electrical signal is generated as a result of an operator action is recognized as the input.","After such an input is recognized in step , the system proceeds to step  to determine whether, in a previous session, the user has selected a password for this situation. If he has not, the system proceeds to step , in which it is determined whether the flag has previously been set in step . If it has been set, it is known that the keyboard graphic  was previously visible, so the keyboard graphic  continues to be displayed as the system returns to its previous state in step . If the flag has not been set, the process of conversion of output signals from the touch pad , which has been started in step , is ended in step , and the keyboard graphic  is removed from the display screen . Thus, if a password has not been previously selected for this use, the system is returned to its previous state following the detection of a user input in step .","On the other hand, if it is determined in step  that the user has previously selected a password for this purpose, the system proceeds to step , in which the dialog box  is presented, providing an indication that the password should be entered. If the password is then entered correctly, as determined in step , the system causes the dialog box  to be removed from the display screen  in step . Then the system proceeds to step , so that the system is returned to its previous state in step , with or without continued display of the keyboard graphic , as determined by whether the flag has been set.","The password is preferably composed of alphanumeric characters previously submitted by the user, who determines its length. Therefore, the \u201center\u201d function is used to indicate that all of the characters have been entered. Alternately, all allowable passwords may be the same length, with the data being automatically entered when the correct number of characters have been selected. Otherwise, the password may be recognized when it is completely entered, so that the use of the \u201center\u201d function is unnecessary.","TABLE 1 is a listing of source code used to write the main function and startup code of the application program . This listing is written to interface with the WINDOWS (Microsoft\u00ae Win 32\u00ae) application programming interface (API) supporting screen saver applications, with portions of the listing being written as described in an Internet document \u201cHandling Screen Savers,\u201d which is incorporated herein by reference, available at:\n\n",{"@attributes":{"id":"p-0044","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["#include <windows.h>","\/\/Always required for Windows"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"applications"},{"entry":"#include <stdlib.h>"},{"entry":"#include <scrnsave.h>"},{"entry":"#include \u201cresource.h\u201dinclude <stdio.h>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["#define TOUCHBOARD_CLASS","TEXT(\u201cIBM TouchBoard\u201d)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"static BOOL AppStarted, AppWasVisible; \/\/If & Who started"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/Touch Board Flags"]},{"entry":["AppStarted = FALSE;","\/\/initialize to FALSE"]},{"entry":["AppWasVisible = FALSE;","\/\/initialize to FALSE"]},{"entry":["HANDLE hlnst;","\/\/current instance"]},{"entry":["UINT wTimer = 0;","\/\/ Timer id"]},{"entry":["HWND hProcWnd;","\/\/Handle to TouchBoard Window"]},{"entry":["int rc;","\/\/Return value"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/*"},{"entry":"* RegisterDialogClasses -- Entry point for registering window"},{"entry":"*classes required by configuration dialog box."},{"entry":"*\/"},{"entry":"BOOL WINAPI RegisterDialogClasses(HINSTANCE hlnst)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return 1;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"* ScreenSaverConfigureDialog -- Process the screen saver"},{"entry":"* configuration messages for the config dialog"},{"entry":"*\/"},{"entry":"BOOL CALLBACK ScreenSaverConfigureDialog(HWND hWnd,"},{"entry":"UINT Msg, WPARAM wParam, LPARAM IParam)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"switch(Msg)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"case WM_COMMAND:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"switch(LOWORD(wParam))"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"case IDOK:","\/\/Exit the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"dialog"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"case IDC_EXIT:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"EndDialog(hWnd, 42);","\/\/End the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Dialog"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"break;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"break;"]},{"entry":[{},"default:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return FALSE;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"break;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"return TRUE;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In the main function listing of TABLE 1, standard files required for WINDOWS applications are included, the window class for this application is defined as TOUCHBOARD_CLASS, the name of the screen saver is defined as \u201cIBM Touchboard,\u201d and AppStarted and AppWasVisible flags are defined. Since the soft keyboard subroutine  displaying the keyboard graphic   may be started either by this screen saver subroutine being stored in the screen savers folder  or by another means, the AppStarted and AppWasVisible flags are used to determine whether the keyboard graphic  is visible when the touchscreen password subroutine  is started, and whether it has been made visible by another means. Since the keyboard graphic  can be used for may purposes to provide user data inputs, this graphic  may have been made visible, before the initiation of the touchscreen password subroutine , in response to a call from another subroutine executing within the processor , or in response to a user input. When a password has been successfully entered following a period of inactivity, it is desirable for a computer system to be returned to the state in which it was operating before the period of inactivity. Thus, if the keyboard graphic  was visible before initiation of the touchscreen password subroutine , as indicated by a TRUE value of the variable AppWasVisible, it is retained in place on the display screen , without forming a second instance of the keyboard graphic , and it is further retained after the password has been successfully entered. On the other hand, if the keyboard graphic  was not visible before initiation of the touchscreen password subroutine , as indicated by a FALSE value of the variable AppWasVisible, a new instance of the keyboard graphic  is started, but this keyboard graphic  is removed from the display screen  following the successful entry of the password. In the main function, AppStarted and AppWasVisible are initialized as FALSE.","The ScreenSaverConfigureDialog function in the listing of TABLE 1, which is required by WINDOWS, displays a screen saver configuration dialog box, which enables the user to configure the screen saver. The RegisterDialogClasses function is required by WINDOWS to be called by all screen saver applications. However, applications, such as the touchscreen password subroutine , which do not require special windows or custom controls in the screen saver configuration dialog box, can simply return TRUE for this function, as implemented in the listing of TABLE 1 by setting a value of 1.","Thus, the touchscreen password subroutine  is chosen for operation as a screen saver by the user, through the screen saver configuration dialog box, which is conventionally presented by WINDOWS after the user selects first the WINDOWS Control Panel, then the Display option of the Control Panel, and then the Screen Saver tab of the dialog box shown in response to choosing the Display option. The screen saver configuration dialog box includes a drop-down list box, generally displaying a name of a screen saver and a drop down arrow. Clicking the arrow causes a list of available screen savers to be displayed. In accordance with a preferred version of the present invention, the name \u201cIBM Touchboard Saver\u201d is one of these. Choosing this name causes the touchscreen password subroutine  to be used when WINDOWS determines that a screen saver should be displayed. Before the password protection feature associated with the touchscreen password subroutine can be used, the user must also enable this feature by selecting a Password Protected checkbox also provided on the screen saver configuration dialog box.","TABLE 2 is a listing of source code to determine the operation of a ScreenSaverProc function, which is required by WINDOWS to process specific WINDOWS messages. This listing is also written in accordance with rules given in the Internet document \u201cHandling Screen Savers,\u201d referenced above relative to TABLE 1. TABLE 2 is also written in accordance with a second Internet document \u201cScreenSaverProc, which is incorporated herein by reference, available at:\n\n",{"@attributes":{"id":"p-0049","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"LONG CALLBACK ScreenSaverProc(HWND hWnd, UINT msg,"},{"entry":"WPARAM wParam, LPARAM IParam)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"switch (msg) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"case WM_CREATE:","\/\/Nothing to do"]},{"entry":[{},"return 0;"]},{"entry":[{},"case WM_TIMER:","\/\/Start SoftKeyboard"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"hProcWnd = FindWindow(TOUCHBOARD_CLASS, NULL);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if (!hProcWnd)","\/\/If SoftKeyboard isn't running already"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"StartApp(AppStarted); \/\/Use Function to start"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/TouchBoard using CreateProcess"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"AppStarted = TRUE;"]},{"entry":[{},"hProcWnd = FindWindow(TOUCHBOARD_CLASS,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"NULL);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}",{}]},{"entry":[{},"else","\/\/SoftKeyboard already running"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if(AppStarted == FALSE)","\/\/Get initial App State"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"AppWasVisible = TRUE;","\/\/Set flag"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"AppStarted = TRUE;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"ShowWindow(hProcWnd, SW_SHOW);"]},{"entry":[{},"SetWindowPos(hProcWnd, NULL, 0, 0, 0, 0,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SWP_NOMOVE | SWP_NOSIZE | SWP_NOACTIVATE);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EnableWindow(hProcWnd, TRUE);"]},{"entry":[{},"UpdateWindow(hProcWnd);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return 0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"case WM_ERASEBKGND: \/\/Seed the random number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/generator"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"srand(GetTickCount());","\/\/Tell windows to send us timer"]},{"entry":[{},{},"\/\/messages at 50 ms intervals"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"wTimer = SetTimer(hWnd, 0, 50, NULL);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/Update Screen for EraseBackGround Event"]},{"entry":[{},"hProcWnd = FindWindow(TOUCHBOARD_CLASS,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"NULL);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if (hProcWnd)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ShowWindow(hProcWnd, SW_SHOW);"]},{"entry":[{},"SetWindowPos(hProcWnd, NULL, 0, 0, 0, 0,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SWP_NOMOVE"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"| SWP_NOSIZE | SWP_NOACTIVATE);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EnableWindow(hProcWnd, TRUE);"]},{"entry":[{},"UpdateWindow(hProcWnd);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"break;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"case WM_LBUTTONDOWN:"]},{"entry":[{},"case WM_MOUSEMOVE:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"hProcWnd = FindWindow(TOUCHBOARD_CLASS,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"NULL);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if (hProcWnd)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ShowWindow(hProcWnd, SW_SHOW);"]},{"entry":[{},"SetWindowPos(hProcWnd, NULL, 0, 0, 0, 0,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SWP_NOMOVE"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"| SWP_NOSIZE | SWP_NOACTIVATE);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EnableWindow(hProcWnd, TRUE);"]},{"entry":[{},"UpdateWindow(hProcWnd);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"break; \/\/return 0;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"case WM_DESTROY:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/* message: window being destroyed *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (wTimer)","\/\/ Stop our timer if it was created"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"KillTimer(hWnd, wTimer);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (AppWasVisible == FALSE)\/\/Close"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/TouchBoard if we started"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"SendMessage(hProcWnd,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["WM_CLOSE, 0, 0);","\/\/Close TouchBoard"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"168pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"break;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"return DefScreenSaverProc(hWnd, msg, wParam, IParam);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0050","num":"0051"},"figref":"FIG. 6","b":["10","63"]},"One WINDOWS message handled by the ScreenSaverProc function is WM_CREATE. This message is intended to allow a conventional screen saver subroutine to retrieve any initialization data from the Regedit.ini file, to set a window timer for the screen saver window, and to perform any other required initialization. However, which the touchscreen password subroutine  does not require this initialization process, this message is not used. Therefore, when a determination is made in step  that the WM_CREATE message has been received, nothing is done except to return a value of zero.","Another WINDOWS message handled by the ScreenSaverProc function is WM_TIMER. This message is intended to allow a conventional screen saver subroutine to perform the drawing operations needed to generate the screen saver image. According to the present invention, this message is used to start the display of the keyboard graphic . However, when this message is received, the keyboard graphic  may already be displayed, either as a result of the operation of another program, as a result of a user determination to display and use the keyboard graphic , or because the touchscreen password subroutine itself has already started displaying the keyboard graphic . Regardless of the reason why the keyboard graphic  is displayed, a second instance of the keyboard graphic  is not created at this point. Thus, when the WM_TIMER is received, as determined in step , a determination is made in step  of whether the keyboard is displayed. This determination is based on examining the variable !hProcWnd to determine if a handle to the touchboard keyboard can be found. This handle is present if the soft keyboard routine  has already started displaying the keyboard graphic . If this has not occurred, the soft keyboard subroutine  is called with StartApp in step , and the AppStarted flag is set to TRUE in step . On the other hand, if !hProcWnd indicates that the soft keyboard routine  has already started displaying the keyboard graphic , a determination is made in step  of whether the AppStarted flag has been set. Since the AppStarted flag is only sent in step , if this flag is found to be set, it is known that the keyboard graphic  is being displayed because the touchboard password subroutine  has already started. If this flag is found not to be set with the keyboard graphic  being displayed, it is known that the display of the keyboard graphic is due to another program or a previous user action, so the AppWasVisible flag is set in step .","Another WINDOWS message handled by the ScreenSaverProc function is WM_ERASEBKGND. This message is intended to allow a conventional screen saver subroutine to erase the screen saver window in preparation for subsequent drawing operations. When this message is received, as determined in step , WINDOWS is told in step  to provide timer messages at 50 ms intervals. Other WINDOWS messages handled by the ScreenSaverProc function are WM_LBUTTONDOWN and WM_MOUSEMOVE. These messages are generated by WINDOWS when the left button of a conventional mouse is depressed and when a conventional mouse is moved, respectively. In the computing system , a driver module provides for these inputs to also be provided through the touch pad  of the touch-sensitive display screen . When this screen  is touched at one point, the WM_LBUTTONDOWN message is generated. When the screen  is touched by a finger or stylus which is dragged along the screen, the WM_MOUSEMOVE message is generated. Since the WM_ERASEBKGND, WM_LBUTTONDOWN, and WM_MOUSEMOVE messages may be received either while the keyboard graphic  is displayed or when it is not displayed. Thus, after each of these messages is received, as determined in steps , , and , respectively, the variable !hProcWnd is examined in step  to determine if a handle to the touchboard keyboard can be found. This handle is present if the soft keyboard routine  has already started displaying the keyboard graphic . If this handle cannot be found, the system returns to step  to await another WINDOWS message.","If the keyboard is determined to be displayed in step , and additionally after step  following a determination that the WM_TIMER has been received, a function call is made in step  to make the keyboard graphic window visible, another function call is made in step  to move the keyboard graphic window to the \u201ctop,\u201d so that it is visible over any other window which may be displayed, a function call is made in step  to enable the keyboard graphic window to receive inputs, and yet another function call is made in step  to update the keyboard graphic window.","Another WINDOWS message handled by the ScreenSaverProc function is WM_DESTROY. This message is intended to allow a conventional screen saver subroutine to destroy the timer(s) created when the subroutine processed the WM_CREATE message and to perform any additional required cleanup. In the present invention, when this message is determined to have been received in step , a determination is made in step  of whether the timer is running. If it is, it is stopped in step . In either case, a determination is made in step  of whether the AppWasVisible flag has been set in step . If it has been set, it is known that the keyboard graphic  was visible before the operation of the touchscreen password subroutine , so the touchboard is not closed. Otherwise, the display of the keyboard graphic  is ended in step . In either case, the operation of the touchscreen password subroutine is ended in step .","The preferred version of the present invention provides an advantage of allowing the display and use of the keyboard graphic  to provide for entry of a screen saver password in the computing system  which is executing instructions from a standard WINDOWS subroutine providing a number of different screen saver images. If the keyboard graphic  is not presented by a subroutine operating as a screen saver subroutine, in the manner described above, the standard operating system overwrites the keyboard graphic  with a screen saver image, so that the keyboard graphic  cannot be seen or used.","While the present invention has been described in its preferred forms or embodiments with some degree of particularity, it is understood that this description has been given only by way of example, and that numerous changes in the arrangement of process steps can be made without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 5","FIG. 1","FIG. 5A","FIG. 5","FIG. 5B"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 6","FIG. 1","FIG. 4"]}]},"DETDESC":[{},{}]}
