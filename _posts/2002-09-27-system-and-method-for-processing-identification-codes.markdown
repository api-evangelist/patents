---
title: System and method for processing identification codes
abstract: A method is described comprising: associating a plurality of data object types with a plurality of data object identification (ID) codes within a first database on a data service and within a second database on a wireless device; querying the second database on the wireless device to determine whether an associated object ID code exists for a first data object type; transmitting the object ID code from the wireless device to the service if the associated object ID code exists, responsive to the first data object type being employed by an application on the device; and transmitting a string representing the first data object type from the wireless device if no associated object ID code exists for the first data object type.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07062512&OS=07062512&RS=07062512
owner: Danger, Inc.
number: 07062512
owner_city: Palo Alto
owner_country: US
publication_date: 20020927
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS","Embodiments of a Data Processing Service","Object Identification Code Processing"],"p":["1. Field of the Invention","This invention relates generally to the field of data processing systems. More particularly, the invention relates to an improved system and method for mapping and processing data object identification codes shared between a device and a service.","2. Description of the Related Art","A variety of wireless data processing devices have been introduced over the past several years. These include wireless personal digital assistants (\u201cPDAs\u201d) such as the Palm\u00ae VIIx handheld, cellular phones equipped with data processing capabilities, and, more recently, corporate wireless messaging devices such as the Blackberry\u2122 wireless pager developed by Research In Motion (\u201cRIM\u201d).\u2122","The wireless networks over which these data processing devices communicate typically allocate a relatively small amount of bandwidth per device. For example, Cellular Digital Packet Data (\u201cCDPD\u201d) and ARDIS networks provide a data throughput of only 19.2 Kbps and the BellSouth Intelligent Wireless Network, which employs Mobitex technology, provides a data throughput of only 8 Kbps.","As such, data compression techniques are particularly important on these networks. One type of data compression replaces common character strings with relatively shorter code words. For example, the string \u201capps.email.mailmessage\u201d may be replaced by an identification code which consumes substantially less bandwidth (e.g., a 16-bit or 32-bit identification code).","In order to use identification code words in this manner, however, the same ID code table must be maintained at both the originating end (e.g., a data processing device) and the receiving end (e.g., a client or server with which the data processing device is communicating). Maintaining up-to-date tables on hundreds or potentially thousands of data processing devices may be difficult, particularly when the character strings used on these devices may change over time. As such, what is needed is an improved system and method for maintaining synchronized ID code tables on data processing devices and the clients and\/or servers with which they communicate.","A method is described comprising: associating a plurality of data object types with a plurality of data object identification (ID) codes within a first database on a data service and within a second database on a wireless device; querying the second database on the wireless device to determine whether an associated object ID code exists for a first data object type; transmitting the object ID code from the wireless device to the service if the associated object ID code exists, responsive to the first data object type being employed by an application on the device; and transmitting a string representing the first data object type from the wireless device if no associated object ID code exists for the first data object type.","Described below is a system and method for processing code words. Throughout the description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent, however, to one skilled in the art that the present invention may be practiced without some of these specific details. In other instances, well-known structures and devices are shown in block diagram form to avoid obscuring the underlying principles of the present invention.","As described above, a variety of portable\/wireless data processing devices are currently available. One particular wireless data processing device which operates in conjunction with a data processing service is described in co-pending application entitled NPS, AM, Ser. No. 09\/714,897, Filed Nov. 15, 2000 (hereinafter \u201cNetwork Portal Application\u201d), which is assigned to the assignee of the present application and which is incorporated herein by reference. Certain aspects of this data processing device and data processing service will now be described, followed by a detailed description of an advanced system and method for processing data object identification codes. It should be noted, however, that the underlying principles of the invention are not limited to the specific type of service set forth in the Network Portal Application.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 1","FIG. 1"],"b":["100","110","130","100","110","110","120","140","100","110","140","141","130","110","130","142","110"]},"For example, the conversion module  may include a hypertext markup language (\u201cHTML\u201d) rendering module (not shown) for interpreting HTML code and downloading any embedded content in the HTML code (e.g., graphics, video, sound, . . . etc) to the service . The conversion module  may then combine the HTML code and embedded content and generate a set of bytecodes for accurately reproducing the requested content on the data processing device . As described above, in one embodiment, the bytecodes may be Java bytecodes\/applets. However, the conversion module  may generate various other types of interpreted and\/or non-interpreted code, depending on the particular type of data processing device  being used (e.g., one with an interpreter module or one without).","Because one embodiment of the service  maintains an intimate knowledge of the capabilities\/configuration of each data processing device  (e.g., screen size, graphics\/audio capabilities, available memory, processing power, user preferences, . . . etc) it can reconstruct the requested Internet content accurately, while at the same time minimizing the bandwidth required to transmit the content to the device . For example, the conversion module  may perform pre-scaling and color depth adjustments to the requested content so that it will be rendered properly within the data processing device's 's display. In making these calculations, the conversion may factor in the memory and processing power available on the data processing device . In addition, the conversion module  may compress the requested content using a variety of compression techniques, and thereby preserve network bandwidth.","In one embodiment, the conversion module  will simply discard Internet content which either cannot be reproduced on the data processing device , or which the user has indicated that he\/she does not want to be reproduced on the wireless device. For example, a user may indicate that he\/she does not want sounds to be generated on the data processing device  or that he\/she does not want advertisements transmitted to the data processing device . The conversion module  will then remove any sounds or advertisements embedded in the requested Web page (or other requested Internet content). Because HTML rendering and other advanced processing of Internet content\/data is offloaded to the service  as described above, the data processing device  can be manufactured using a relatively low power microprocessor or microcontroller, thereby lowering the cost of manufacture and\/or the energy consumed by the device .","In one embodiment, when a particular Web page or other Internet object has been converted into a format suitable for rendering\/execution on the data processing device  the formatted page\/object may be stored locally on a cache  maintained at the service . The next time the content is requested, the conversion module  may simply read the previously-generated code from the local cache  (i.e., it will no longer need to retrieve the content from remote locations to reconstruct the code).","Various caching techniques and algorithms may be implemented to ensure that the cache  is storing Internet data efficiently (i.e., resulting in an acceptable percentage of cache \u2018hits\u2019) and that the data is current. For example, the service  may cache the most frequently-requested Internet data (e.g., the Yahoo\u2122 home page), and may remove content from the cache based on a least-recently used caching policy. In addition, to ensure that data stored in the cache is current, the service  may compare the version of the data stored in the cache  with the version of data stored at the remote Internet site  when the data is requested. Similarly, the service  may store data in the cache  for some predetermined period of time before checking the remote server  for a new version. Various other Internet caching techniques may be employed while still complying with the underlying principles of the invention (e.g., those defined in the Internet Caching Protocol (\u201cICP\u201d) and\/or the Cache Array Routing Protocol (\u201cCARP\u201d)).","One embodiment of the data processing device  may support audio communications as well as (or in lieu of) data communications. In fact, the underlying principles of the invention are not limited to any particular type of wireless communication.","One embodiment of a system for processing object identification codes is illustrated generally in . Both the data processing device  and the service  with which the data processing device communicates maintain object identification code databases,  and , respectively. When an application  executed on the data processing device employs a particular type of data object such as, for example, a new e-mail message, it identifies the data object type using a data object string (e.g., \u201capps.email.mailmessage\u201d). The application  transmits the new e-mail message, or other data object, to the service  via a transport layer . In one embodiment of the invention, the transport layer  is comprised of an object ID code processing module  which performs a database lookup in the device's ID code database  to locate an identification code to represent the data object type.","One particular example of an ID code database  is illustrated in , in which a plurality of data object types  are represented by an equal plurality of 16-bit identification codes . If it is assumed that each character of the data object strings  is represented by 8 bits of data, a significant amount of bandwidth is saved using this coding scheme. For example, assuming 8 bits per character, the string \u201capps.email.mailmessage\u201d requires 176 bits (22 characters\u00d78 bits) or 22 bytes (176 bits\/8 bits per byte) to encode, resulting in a bandwidth savings of 11:1 (i.e., 22 bytes\/2 bytes per ID code). Of course, various alternate object ID code lengths may be employed while still complying with the underlying principles of the invention (e.g., 32 bits, 64 bits, . . . etc).","Once the ID code has been located, the transport layer  reliably transmits the ID code and the underlying data to the service  or, more specifically, to the service's transport layer . In one embodiment, the transport layer  packetizes the ID code and data provided by the application , embedding the ID code within the data packet header and the underlying data (e.g., e-mail message text) within the data packet body. Various transport mechanisms may be employed while still complying with the underlying principles of the invention including, by way of example but not limitation, the Transmission Control Protocol (\u201cTCP\u201d) used for reliable communication over the Internet (i.e., the \u201cTCP\u201d in TCP\/IP).","As indicated in , various additional network layers ,  may be employed between the transport layers ,  to support data transmissions between the device  and the service  including, for example, a physical\/data-link layer and a network layer, as defined by the Open System Interconnection (\u201cOSI\u201d) model developed by the International Standards Organization (\u201cISO\u201d). The additional network layers ,  may include those supported by packet-based wireless networks such as Cellular Digital Packet Data (\u201cCDPD\u201d), the General Packet Radio Service (\u201cGPRS\u201d) and Mobitex. It should be noted, however, that the underlying principles of the invention are not limited to any particular type of network layers and\/or protocols.","An object ID code processing module  executed with the service's transport layer  extracts the object ID code from the data transmission and uses the ID code to locate the object type in the ID code database . Once the object type is identified, in one embodiment of the invention, a data services module  then routes the underlying data to an appropriate data processing module (i.e., a module designed specifically to process the particular data type in question). For example, if the object type is a new e-mail message, then the underlying data is routed to an e-mail module  (e.g., an e-mail server), which processes the new e-mail message according to a specified e-mail message protocol (e.g., POP, IMAP, . . . etc). Similarly, the data services module  may forward instant messaging object types or Web-based object types to an instant messaging module  and a World Wide Web module , respectively, executed on the service . Of course, once the object type is identified by the transport layer , the service  may process the data object in a variety of ways while still complying with the underlying principles of the invention.","The foregoing encoding techniques work properly if both the data processing device  and the service  maintain synchronized ID code tables. If all applications executed on the device  are provided by the individuals and\/or organization supporting the service , then maintaining consistent ID code tables may not be an overly complex task. Whenever a new application using new data object types is developed by the service , the service  may simply update all device ID code tables accordingly. However, if third parties are permitted to design applications, maintaining consistent ID code tables becomes more complex. One possible solution is for the service  to pre-allocate a block of ID codes for each third party application developer. However, tracking which ID codes are allocated to which third parties may require a significant amount of coordination and maintenance on the part of the service  operator.","One embodiment of a method for dynamically allocating ID codes is outlined in . At , an instance of a particular data object type is executed by the device . For example, the user may create a new e-mail message or instant message, or may be browsing a Web page. The underlying principles of the invention are not limited to any particular type of application or data object.","At , the data object is passed to the transport layer  for transmission to the data service . At , the transport layer  searches the ID code database  for an object ID code associated with the object to be transmitted to the service . If an ID code exists, determined at , then at , the ID code and underlying data are transmitted to the service  (e.g., as described above). The transport layer  on the service  subsequently uses the object ID code to identify the object type.","If, however, an ID code for the object does not exist in the ID code database  then, in one embodiment, the string identifying the object type (e.g., \u201capps.email.mailmessage\u201d) is transmitted to the service . An object ID code processing module  executed within the service's transport layer  queries the master ID code database  to determine if an object ID code exists for the data object. If one exists, determined by the ID processing module  at , then, at , the existing object ID code is transmitted to the device , which updates its object ID code database  accordingly. In one embodiment, the service  may transmit an entire copy of the master ID code database  to the device  (i.e., rather than one or more individual database entries). The decision as to whether to transmit an entire new copy of the master database  may be based on the extent to which the device's database  is out of date. For example, if the device's database  has not been updated for over a year, or if the device is communicating with the service  for the first time (e.g., because the user has just purchased or leased the device), updating the entire database  may be a more efficient solution.","At , if the ID processing module  determines that no object identification code exists for the data object type within the master ID code database  then, in one embodiment, the ID processing module  dynamically generates a new ID code for the new data object type. New object ID codes may be generated in a variety of ways including randomly, or consecutively, while still complying with the underlying principles of the invention. The new ID code may then be transmitted to the device at . In addition, any other devices which subsequently use the data object type may be updated by the service  with the new object ID code.","Using the dynamic ID code system and method set forth above, the device's ID code database  and the master ID code database  maintained on the service  are dynamically updated, without the need for manual intervention by a service operator. In addition, because the object ID code processing module  is employed within the transport layer , application programmers are not required to learn the nuances of the object ID code assignment process to build applications which will run on the wireless device , thereby simplifying application development for the device. Specifically, the applications programmers may simply refer to the data objects by the strings that represent them; the encoding process is then handled transparently within the transport layer .","If the data processing device  has an out of date object ID code database , it will not be able to identify certain object types using the object ID codes. Accordingly, in one embodiment, the service  is responsible for ensuring that the object ID code database  is up-to-date before initiating any transactions involving object ID codes.","Embodiments of the invention may include various steps as set forth above. The steps may be embodied in machine-executable instructions which cause a general-purpose or special-purpose processor to perform certain steps. Alternatively, these steps may be performed by specific hardware components that contain hardwired logic for performing the steps, or by any combination of programmed computer components and custom hardware components.","Elements of the present invention may also be provided as a machine-readable medium for storing the machine-executable instructions. The machine-readable medium may include, but is not limited to, floppy diskettes, optical disks, CD-ROMs, and magneto-optical disks, ROMs, RAMs, EPROMs, EEPROMs, magnetic or optical cards, propagation media or other type of media suitable for storing or transmitting electronic instructions. For example, the present invention may be downloaded as a computer program which may be transferred from a remote computer (e.g., a server) to a requesting computer (e.g., a client) by way of data signals embodied in a carrier wave or other propagation medium via a communication link (e.g., a modem or network connection).","Throughout the foregoing description, for the purposes of explanation, numerous specific details were set forth in order to provide a thorough understanding of the invention. It will be apparent, however, to one skilled in the art that the invention may be practiced without some of these specific details. For example, while the various ID code processing techniques were described above within the context of a network transport layer, the underlying principles of the invention may be employed at various other network layers, including the application layer. Moreover, while the embodiments described above focus on e-mail and instant messaging data objects, the underlying principles of the invention may be implemented using virtually any application or data object type. Accordingly, the scope and spirit of the invention should be judged in terms of the claims which follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A better understanding of the present invention can be obtained from the following detailed description in conjunction with the following drawings, in which:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
