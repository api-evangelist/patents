---
title: Managing a logically partitioned computing system through a virtual file system
abstract: A method, apparatus, and program product for managing partitionable resources in a logically partitioned computing system is disclosed. The method includes associating each of a plurality of partitionable resources in the logically partitioned computing system with a respective file entry in a virtual file system, associating each of a plurality of partitionable resources in the logically partitioned computing system with a respective file entry in a virtual file system, and allocating a first partitionable resource among the plurality of partitionable resources to a first logical partition among the plurality of logical partitions in response to a file system operation directed to the virtual file system to organize a respective file entry for the first partitionable resource within the respective directory for the first logical partition.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08516217&OS=08516217&RS=08516217
owner: International Business Machines Corporation
number: 08516217
owner_city: Armonk
owner_country: US
publication_date: 20090327
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","Hardware and Software Environment","Virtual File System Hierarchy","Managing Logically Partitioned Computers"],"p":["The present invention relates to computing systems, and more particularly to the management of logically partitioned computers.","Modern requirements for a computer system may require that a computer be utilized to run several operating environments, or operating systems, at once. In a typical embodiment, a single logically partitioned computer can run a plurality of operating systems in a corresponding plurality of logical partitions. Each operating system resides in its own logical partition, with each logical partition allocated a part of a processor, an entire processor, or multiple processors from the computer. Additionally, a portion of the computer's memory is allocated to each logical partition. All of the logical partitions are under the control of a partition manager. The partition manager is typically a part of the system firmware and manages the allocation of resources to the operating systems and logical partitions. As such, one logically partitioned computer may run one or more logical partitions and thus virtualize the operations of the applications, operating system, and other program code configured to operate in those logical partitions.","Logical partitions are typically configured by an information technology (\u201cIT\u201d) professional that has authority to access the partition manager and configure each logical partition. Logical partitions may also be configured by the manufacturer of the computer. For example, in a typical configuration, the resources of the computer (i.e., processors, memory, I\/O devices) are spread evenly amongst each logical partition. For example, if the computer has eight processors with four processor cores (i.e., the computer is a 32-way system), the computer may be configured with sixteen logical partitions utilizing two processor cores each. In this way, an operating system configured on a logical partition views the logical partition as a two-way computer system (i.e., each computer system having two processors). Similarly, the computer may be configured with eight logical partitions utilizing one processor (i.e., the logical partition utilizes four processor cores). In this way, an operating system configured on the logical partition views the logical partition as a four-way computer (i.e., a computer having four processors).","The logical partitions configured on many conventional logically partitioned computers generally remain static after configuration, with the allocation of the resources to the logically partitioned computer often unknown to users. However, this configuration often results in an inefficient use of the resources in the computer. The needs of an operating environment (or software running on the operating environment) typically vary over time. As such, the operating environment often struggles to conform to the configured logical partitions. In the end, users are typically forced to \u201cshoehorn\u201d data processing into an inadequate logical partition that does not meet resource needs and whose configuration cannot be changed. The operating environment, or applications thereon, configured on that inadequate logical partition is typically starved for resources while other resources in the computer may be unused or underutilized. An operating environment starved for resources is typically associated with a loss of productivity and\/or efficiency. Moreover, users are often unaware of the resource allocation to the logically partitioned computer and are typically unaware that free resources may be allocated to individual logical partitions without significantly and adversely affecting the operation of other logical partitions.","Furthermore, the problems and issues listed above are often compounded with logically partitioned computing systems that include a plurality of logically partitioned computers. For example, when it is desired to adjust the resources to one or more logically partitioned computer of a logically partitioned computing system, each adjustment to each desired logically partitioned computer may require those desired logically partitioned computers to be individually accessed by the IT professional. Moreover, resource allocation needs may change multiple times a day, and as such it is generally impossible for the IT professional to adjust the resource allocation of a logically partitioned computer and\/or a logically partitioned computing system multiple times per day.","Consequently, there is a continuing need for improving the management of partitionable resources in a logically partitioned computing system so as to minimize the complexity and provide a familiar interface for resource allocation as well as display.","Embodiments of the invention provide for a method, apparatus, and program product to facilitate the management of partitionable resources in a logically partitioned computing system by representing the entities in the logically partitioned computing system with entities in a virtual file system. By doing so, the allocation of particular resources in the logically partitioned computing system to particular logical partitions can be ascertained based upon the allocation of entities representing such resources within the virtual file system. Moreover, in many instances management of the resources in the logically partitioned computing system can be handled via file system-type operations that are readily understandable by users.","Consistent with one aspect of the invention, each of a plurality of partitionable resources in the logically partitioned computing system is associated with a respective file entry in a virtual file system, and each of a plurality of logical partitions in the logically partitioned computing system is associated with a respective directory in the virtual file system. By doing so, a partitionable resource may be allocated to a logical partition in response to a file system operation directed to the virtual file system to organize a respective file entry for the partitionable resource within the respective directory for the logical partition.","In some embodiments, a method consistent with the invention includes selectively controlling access to the directory for a logical partition with an access control list associated with the directory for the logical partition, while in alternative embodiments a method consistent with the invention includes selectively controlling access to operations on the directory for a logical partition with an access control list associated with the directory for the logical partition. In some embodiments, file system operations may be translated into partition management commands configured to be executed by a virtualization manager for a first logical partition.","Embodiments of the invention provide a method, apparatus, and program product to manage partitionable resources in a logically partitioned computing system.","With logical partitioning and other virtualization techniques becoming more common, it may be desirable to provide a way for users that may not be professional computer administrators to manage their logically partitioned computing system. Embodiments of the invention provide an existing interface that may be familiar to those users in order to allow management of a logically partitioned computing system. In some embodiments, embodiments of the invention provide a virtual file system to allow users to manage the logical partitions of a logically partitioned computing system, as well as the partitionable resources of that logically partitioned computing system (e.g., input\/output devices, processors, memory, etc.), in a conceptually similar manner to the way that files and other file system entities are conventionally managed in a file system. As such, resources of the logically partitioned computing system are associated with file entries in the virtual file system, while logical partitions of the logically partitioned computing system are associated with directories. The file entries of the resources are allocated to the directories of the logical partitions in a corresponding manner as are the actual resources allocated to the logical partitions. File entries of free resources may be allocated to a free resource directory. The virtual file system may be maintained by a configuration manager, such as a hardware management console, and interfaced through a file browser, command prompt, or application that may be familiar to the user. The user may access the virtual file system through the Network File System (NFS) protocol. Thus, the user may adjust the resource allocation of the logically partitioned computing system by adjusting the allocation of file entries to the logical partition directories through file system operations, or commands, on the virtual file system. The configuration manager may translate those file system operations to partition management commands, and the configuration manager may forward those partition management commands to a virtualization manager to adjust the allocation of physical resources to the logical partitions of the logically partitioned computing system.","Thus, embodiments consistent with the invention provide a method, apparatus, and program product to manage partitionable resources in a logically partitioned computing system. The method includes associating each of a plurality of partitionable resources in the logically partitioned computing system with a respective file entry in a virtual file system, and associating each of a plurality of logical partitions in the logically partitioned computing system with a respective directory in the virtual file system. The method further includes allocating a first partitionable resource among the plurality of partitionable resources to a first logical partition among the plurality of logical partitions in response to a file system operation directed to the virtual file system to organize a respective file entry for the first partitionable resource within the respective directory for the first logical partition.","In some embodiments, the method includes selectively controlling access to the directory for the first logical partition with an access control list associated with the directory for the first logical partition. In those embodiments, selectively controlling access to the directory for the first logical partition includes determining the identity of a user attempting to access the directory for the first logical partition and determining whether the user has access to the directory for the first logical partition based on the access control list. In alternative embodiments, the method includes selectively controlling access to operations on the directory for the first logical partition with an access control list associated with the directory for the first logical partition. In those alternative embodiments, selectively controlling access to operations on the directory for the first logical partition includes determining the identity of a user attempting to perform an operation on the directory for the first logical partition and determining whether the user has access to perform the operation on the directory for the first logical partition based on the access control list.","In some embodiments, the file system operation is at least one operation selected from the group consisting of a drag and drop operation, a cut and paste operation, an operation entered in a command prompt, an operation from an application, or combinations thereof. In other embodiments, the method includes translating the file system operation into at least one partition management command configured to be executed by a virtualization manager for the first logical partition. Moreover, in still other embodiments, the method includes archiving at least a portion of a configuration of the plurality of logical partitions in the logically partitioned computing system. This archiving includes copying at least the directory for the first logical partition from the virtual file system and storing said copy.","In some embodiments, the method includes generating the virtual file system in response to a mount command for at least one logical partition among the plurality of logical partitions and generating at least one directory for the file entries of the plurality of partitionable resources in response to generating the virtual file system. In other embodiments, the method includes generating the directory for the first logical partition in the virtual file system for the logically partitioned computing system in response to a mount command for the first logical partition. In those embodiments, the method includes generating at least one virtual resource file entry in response to the creation of the directory for the first logical partition and allocating the at least one virtual resource file entry to the directory for the first logical partition.","In some embodiments, the method further includes allocating a first partitionable resource among the plurality of partitionable resources to the directory for the first logical partition. In those embodiments, the method may include allocating a respective file entry for the first partitionable resource to the respective directory for the first logical partition. However, the method may further include allocating a free partitionable resource among the plurality of partitionable resources to a free partitionable resource pool of the logically partitioned computing system, and in those embodiments the method may include allocating a respective file entry for the free partitionable resource to a respective directory for free partitionable resources. As such, the first partitionable resource may be a free partitionable resource and the file system operation directed to the virtual file system to organize the file entry for the first partitionable resource within the directory for the first logical partition may include transferring the file entry for the first partitionable resource from the directory for partitionable resources to the directory for the first logical partition.","In addition, in some embodiments, the virtual file system is provided to a first computing system in communication with the logically partitioned computing system to manage the partitionable resources of the logically partitioned computing system.","Turning more particularly to the drawings, wherein like numbers denote like parts through the several views,  generally illustrates a data processing apparatus  consistent with the invention. Apparatus , in specific embodiments, may be a computer, computer system, computing device, server, disk array, or programmable device such as a multi-user computer, a single-user computer, a handheld device, a networked device (including a computer in a cluster configuration), a mobile phone, a video game console (or other gaming system), etc. Apparatus  may be referred to as \u201clogically partitioned computing system\u201d or \u201ccomputing system,\u201d but will be referred to as \u201ccomputer\u201d for the sake of brevity. One suitable implementation of computer  may be a multi-user computer, such as a computer available from International Business Machines Corporation (IBM).","Computer  generally includes one or more physical processors (\u201cprocessors\u201d)  coupled to a memory subsystem including main storage , e.g., an array of random access memory (RAM). Main storage  may be comprised of dynamic random access memory (DRAM), static random access memory (SRAM), flash memory, hard disk drive, and\/or another digital storage medium. Where desired, the processors  may be multithreaded and\/or have multiple cores. Also illustrated as interposed between processors  and main storage  is a cache subsystem , typically including one or more levels of data, instruction and\/or combination caches, with certain caches either serving individual processors or multiple processors as is well known in the art.","Main storage  may be coupled to a number of external input\/output (I\/O) devices via a system bus  and a plurality of interface devices, e.g., an I\/O bus attachment interface , a workstation controller , and\/or a storage controller , which respectively provide external access to one or more external networks , one or more workstations , and\/or one or more storage devices such as a direct access storage device (DASD) . System bus  may also be coupled to a user input (not shown) operable by a user of computer  to enter data (i.e., the user input may include a mouse, a keyboard, etc.) and a display (not shown) operable to display data from the computer  (i.e., the display may be a CRT monitor, an LCD display panel, etc.). Computer  may also be configured as a member of a distributed computing environment and communicate with other members of that distributed computing environment through network .",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 2","FIG. 2","FIG. 2","FIG. 2","FIG. 1","FIG. 2"],"b":["10","10","40","42","44","12","12","46","46","14","16","30","12","13","40","42","44"]},"The partitions , ,  may logically comprise a portion of the processors , memory , and\/or other resources of the computer . Each partition , ,  typically hosts a respective operating environment, or operating system , , . After being configured with resources and operating systems , , , each partition , ,  generally operates as if it were a separate computer.","An underlying program, called a partition manager, a virtualization manager, or more commonly a \u201chypervisor\u201d , may be operable to assign and adjust resources to each partition , , . For instance, the hypervisor  may intercept requests for resources from operating systems , ,  or applications configured thereon in order to globally share and allocate the resources of computer . For example, when the partitions , ,  within computer  are sharing processors , the hypervisor  may allocate physical processor cycles between the virtual processors  of the partitions , ,  sharing the processors . The hypervisor  may also share other resources of computer . Other resources of computer  that may be shared include the memory , other components of the computer , other devices connected to the computer , and other devices in communication with computer . Although not shown, one having ordinary skill in the art will appreciate that the hypervisor  may include its own firmware and compatibility table as is well known in the art. For purposes of this specification, a partition , ,  may use either or both the firmware of the partition , ,  and hypervisor .","The hypervisor  creates, adds, or adjusts physical resources utilized by logical partitions , ,  by adding or removing virtual resources from one or more of the logical partitions , , . For example, the hypervisor  controls the visibility of the physical processors  to each partition , , , aligning the visibility of the one or more virtual processors  to act as customized processors (i.e., the one or more virtual processors  may be configured with a different amount of resources than the physical processors ). Similarly, the hypervisor  may create, add, or adjust other virtual resources that align the visibility of other physical resources of computer .","Each operating system , ,  controls the primary operations of its respective logical partition , ,  in a manner similar to the operating system of a non-partitioned computer. For example, each logical partition , ,  may be a member of the same, or a different, distributed computing environment. As illustrated in , the operating system ,  and\/or  includes application . In one embodiment, application  is a \u201cmiddleware\u201d application that connects applications, processes, and\/or software components. In the illustrated embodiment, application  may consist of a set of enabling services that allow multiple processes running on one or more logical partitions of one or more computers to interact. As such, application  may be a distributed application configured across multiple logical partitions (i.e., as shown in , across logical partitions ,  and ) of one or more computers (i.e., as shown in , application is configured across computer ) as part of a distributed computing environment. One such distributed computing environment is a WebSphere architecture, as developed by IBM of Armonk, N.Y., such that a business may set up, operate, and integrate network-based websites, applications, or businesses across one or more computing systems.","Each operating system , ,  may execute in a separate memory space, represented by logical memory . For example and as discussed herein, each logical partition , ,  may share the processors  by sharing a percentage of processor resources as well as a portion of the available memory  for use in logical memory . In this manner, the resources of a given processor  may be utilized by more than one logical partition ,  and\/or . In similar manners, the other resources available to computer  may be utilized by more than one logical partition , , .","When resources of the computer  are not being utilized, the hypervisor  may track the free resources in one or more resource pools . A pool  may include a list of resources of the computer  (i.e., CPU's , memory , etc.) that are available for performing a task, available for processing data, available for access, or otherwise available to be allocated to a logical partitions , , .","The hypervisor  may include a dispatcher  that manages the dispatching of virtual resources to physical resources on a dispatch list, or ready queue . The ready queue  comprises memory that includes a list of virtual resources having work that is waiting to be dispatched to a resource of computer . As shown in , the hypervisor  includes processors  and processor control blocks . The processor control blocks  interface with the ready queue  and comprise memory that includes a list of virtual processors  waiting for access on a respective processor . Although  illustrates at least one processor control block  for each processor , one skilled in the art will appreciate that the hypervisor  may be configured with more or less processor control blocks  than there are processors .","The computer  may be configured with a virtual file system  to display a representation of the allocation of physical resources to the logical partitions ,  and\/or . The virtual file system  may include a plurality of file entries associated with respective portion of physical resources of the computer  disposed in at least one directory associated with at least one logical partition , , . As such, the virtual file system  may display the file entries in the respective directories in a manner that corresponds to the allocation of resources to the logical partitions , , . Moreover, the virtual file system  may include at least one virtual file entry associated with a respective virtual resource of at least one logical partition , , . Advantageously, a user may interface with the virtual file system  to adjust the allocation of resources to the logical partitions ,  and\/or  of the computer  by adjusting the allocation of the file entries among the directories of the virtual file system . As such, the computer  may include a configuration manager (illustrated as, and hereinafter, \u201cCM\u201d ), such as a hardware management console, in communication with the virtual file system  and responsive to the interaction with the virtual file system  allocate the physical resources of the computer .","In specific embodiments, the CM  is in communication with a hypervisor  that controls the logical partitions , ,  such that the CM  may translate file system operations performed on the virtual file system  into partition management commands operable to be executed by the hypervisor to adjust the allocation of resources of the computer . In specific embodiments, the hypervisor  is responsive to these partition management commands to configure the computer  appropriately. As such, the hypervisor  may be responsive to the configuration of file entries in folders of the virtual file system  to allocate resources to the logical partitions , , . Although the CM  is shown as an incorporated code within the hypervisor , it will be appreciated that the CM  may be incorporated as a separate component. Moreover, the CM  may reside elsewhere within computer , including in one of the partitions , ,  and\/or in a separate partition (not shown). Additionally, and although not illustrated, in specific embodiments the virtual file system  is incorporated with the CM . In those embodiments, the virtual file system may be a specific file system type configured to be shared through the network file system protocol such that the virtual file system may be accessed without additional hardware and\/or software components.","In some embodiments, the CM  tracks the resource utilization of the computer  by analyzing the resource pool , dispatcher , ready queue , control blocks  and\/or any other table or information. The CM  may thus update the virtual file system  to display the current allocation of resources of the computer , including an indication of free resources that may be allocated. In specific embodiments, the virtual file system  is configured to communicate with at least one of a graphical user interface, a scripting language, a command prompt, an application, and\/or combinations thereof through a network file system protocol to display the allocation of resources of the computer  as well as receive file system operations to adjust the allocation of resources of the computer . As such, the virtual file system  may be accessed by a user through a file browser and the file entries in the directories thereof may be manipulated to adjust the allocation of resources of the computer . As such, the virtual file system  may appear as a mounted or networked file system to the user through the file browser. In some embodiments, the virtual file system  may be dynamically provided by the CM  upon request from the user.","In addition to providing the interface between the virtual file system  and the hypervisor , the CM  may be configured to control access to the allocation of resources of the computer . The CM  may determine authority to modify the configuration of file entries in folders of the virtual file system , and thus to adjust the configuration of the resources of the computer , by analyzing access to and\/or a file system operation on (e.g., a file system command on) the virtual file system  and comparing that access and\/or operation to an access control list  (hereinafter, \u201cACL\u201d ). In one embodiment, the CM  may determine the identity of a user attempting to access a directory of the virtual file system  and determine whether that user is approved to do so by determining whether the user has access to the directory for based on the ACL . In an alternative embodiment, the CM  may determine the identity of a user attempting to perform an operation on a directory of the virtual file system  and determine whether the user has access to perform the operation on the directory based on the access control list. In further alternative embodiments, the CM  may translate a file system operation (e.g., an operation) into at least one partition management command, then analyze and compare that partition management command to the ACL  to determine whether the user has access to perform the partition management command on the computer .","Additional resources, e.g., mass storage, backup storage, user input, network connections, and the like, are typically allocated to the logical partitions , ,  in a manner well known in the art. Resources can be allocated in a number of manners, e.g., on a bus-by-bus basis, or on a resource-by-resource basis, with multiple logical partitions , ,  sharing resources on the same bus. Some resources may also be allocated to multiple logical partitions at a time.  illustrates, for example, three logical buses ,  and . Bus  is illustrated with a plurality of resources, including a DASD , a control panel , a tape drive  and an optical disk drive ; whereby all said resources may be allocated on a shared basis among logical partitions , , . Bus , on the other hand, may have resources allocated on a resource-by-resource basis, e.g., with local area network (LAN) adapter , optical disk drive  and DASD  allocated to logical partition , and LAN adapters  and  allocated to logical partition . Bus  may represent, for example, a bus allocated specifically to logical partition , such that all resources on the bus, e.g., DASD's  and , are allocated to the same logical partition.","Thus, a user may create, modify and delete logical partitions , ,  as well as adjust the resources allocated by the computer  through various operations on a virtual file system , including operations such as drag and drop operations, cut and paste operations, command prompt operations, operations from an application, or combinations thereof. The CM  may in turn detect and translate that operation into at least one partition management command for the hypervisor  to adjust the allocation of resources of the computer . Thus, and in response to the at least one partition management command from the CM , the hypervisor  may create, add, and\/or adjust resources utilized by logical partitions , ,  by adding or removing virtual and\/or physical resources, such as, for example, at least a portion of memory , at least a portion of logical memory , at least a portion of at least one physical processor , at least a portion of at least one virtual processor , and\/or at least a portion of at least one resource in communication with computer  (e.g., DASD , , , , control panel , tape drive , optical disk , , and\/or LAN adapter , , ) from one or more logical partitions , , . Similarly, the hypervisor  may also create or delete one or more logical partitions , ,  in response to at least one partition management command from the CM . The hypervisor  may then update the resource pool  to reflect the current availability of resources. The CM  may present the new allocation of resources and new free resources to the user by updating the respective virtual file system  directories and\/or file entries",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 3","b":["90","10","10","10","92","92","10","92","94","94","96","98","100","102","65","66","67","92","104","106","92","10","65","66","67"]},"In specific embodiments, the second computer  is in communication with the first computer , and more particularly the virtual file system  of the first computer . As such, the virtual file system  may be provided by the CM  and accessed by a user of the second computer  through a file browser (not shown), command prompt (not shown), application , and\/or combinations thereof of the second computer . Thus, the user of the second computer  may adjust the resources allocated to the logical partitions , ,  of the first computer  through the CM  by adjusting the file entries of the virtual file system .","In some embodiments, the CM  is configured to manage a logically partitioned computer upon which it is not configured, but with which it is otherwise in communication. For example, the CM  may be in communication with at least one remote logically partitioned computer through the logical buses , ,  and\/or through another network. As such, the CM  may be configured to communicate with the hypervisor of that at least one remote logically partitioned computer and create a mount point on that at least one remote logically partitioned computer along with at least one option to specify that the CM  will be managing that at least one remote logically partitioned computer. In response, the hypervisor of that at least one remote logically partitioned computer may provide information about that at least one remote logically partitioned computer, including the allocated resources, logical partition configuration, and free resources of that at least one remote logically partitioned computer.","Although a first computer  and second computer  are illustrated in , the system  may be configured with a plurality of logically partitioned computers (not shown). As such, the second computer  may manage the allocation of resources to the logical partition of the plurality of logically partitioned computers, including the first computer , without departing from the scope of the invention.","In general, the routines executed to implement the embodiments of the invention, whether implemented as part of an operating system or a specific application, component, algorithm, program, object, module or sequence of instructions, or even a subset thereof, will be referred to herein as \u201ccomputer program code\u201d or simply \u201cprogram code.\u201d Program code typically comprises one or more instructions that are resident at various times in memory and storage devices in a computer, and that, when read and executed by at least one processor in a computer, cause that computer to perform the steps necessary to execute steps or elements embodying the various aspects of the invention. Moreover, while the invention has and hereinafter will be described in the context of fully functioning computers and computer systems, those skilled in the art will appreciate that the various embodiments of the invention are capable of being distributed as a program product in a variety of forms, and that the invention applies regardless of the particular type of computer readable media used to actually carry out the invention. Examples of computer readable media include, but are not limited to, recordable type media such as volatile and non-volatile memory devices, floppy and other removable disks, hard disk drives, tape drives, optical disks (e.g., CD-ROM's, DVD's, HD-DVD's, Blu-Ray Discs), among others, and transmission type media such as digital and analog communications links.","In addition, various program code described hereinafter may be identified based upon the application or software component within which it is implemented in specific embodiments of the invention. However, it should be appreciated that any particular program nomenclature that follows is merely for convenience, and thus the invention should not be limited to use solely in any specific application identified and\/or implied by such nomenclature. Furthermore, given the typically endless number of manners in which computer programs may be organized into routines, procedures, methods, modules, objects, and the like, as well as the various manners in which program functionality may be allocated among various software layers that are resident within a typical computer (e.g., operating systems, libraries, Application Programming Interfaces [APIs], applications, applets, etc.), it should be appreciated that the invention is not limited to the specific organization and allocation of program functionality described herein.","Those skilled in the art will recognize that the environments illustrated in  are not intended to limit the present invention. Indeed, those skilled in the art will recognize that other alternative hardware and\/or software environments may be used without departing from the scope of the invention.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 4","b":["110","110"]},{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 4","FIG. 4"],"b":["110","112","114","116","118","112","120","112","112","120"]},"The next layer of the virtual file system may be the logical partition layer  configured with at least one logical partition directory , , , and at least one resource pool directory . In specific embodiments, the logical partition layer  includes a logical partition directory , ,  for each logical partition managed by the CM and a resource pool directory  for each logically partitioned computer managed by the CM. As illustrated in , the logical partition layer  is configured with three logical partition directories , ,  to allocate the resources amongst three logical partitions. In this manner, the hierarchical representation  of the virtual file system may be a hierarchical representation  of the virtual file system for the computer  of  or . In addition to the logical partition directories , , , the logical partition layer  includes at least one resource pool directory . In specific embodiments, the resource pool directory  is configured to manage file entries associated with free partitionable resources of at least one logically partitioned computer.","The next layer of the virtual file system may be the logical resource directory layer . For each logical partition directory , ,  in the logical partition layer  the logical resource directory layer  may include at least one virtual processor directory  (illustrated as \u201cVPD\u201d ), at least one input\/output (\u201cI\/O\u201d) device directory  (illustrated at \u201cI\/O DD\u201d ), and at least one logical memory directory  (illustrated as \u201cLMD\u201d ). Furthermore, for each resource pool directory  in the logical partition layer  the logical resource directory layer  may include at least one logical processing block (\u201cLPB \u201d) directory  (illustrated as \u201cLPBD\u201d ), at least one logical memory block (\u201cLMB\u201d) directory  (illustrated as \u201cLMBD\u201d ), and\/or at least one logical I\/O block (\u201cLIOB\u201d) directory  (illustrated as \u201cLIOBD\u201d ). Each LPB directory  includes at least one LPB file entry  corresponding to at least a portion of a physical processor that may be allocated to a logical partition, and in particular at least one LPB file entry  that may be moved from the LPB directory  to a virtual processor directory  to allocate the at least a portion of the physical processor to a logical partition. Similarly, each LMB directory  includes at least one LMB file entry  corresponding to at least a portion of a physical memory that may be allocated to a logical partition, and in particular at least one LMB file entry  that may be moved from the LMB directory  to a logical memory directory  to allocate the at least a portion of the physical memory to a logical partition. Finally, each LIOB directory  includes at least one LIOB file entry - corresponding to at least a portion of a physical I\/O device that may be allocated to a logical partition, and in particular at least one LIOB file entry - that may be moved from the LIOB directory  to an I\/O device directory  to allocate the at least a portion of the physical I\/O device to a logical partition.","In some embodiments, each LPB file entry  may be a file entry associated with a portion of a physical processor corresponding to the granular size at which that portion of a physical processor can be allocated. For example, if a processor (for example, processor  of computer ) may be allocated in one-fourth increments, there may be four LPB file entries  configured for that processor. Also for example, if a processor may only be allocated in whole, there may be one LPB file entry  configured for that processor. As such, a virtual file system associated with a logically partitioned computer that includes a plurality of processors may include at least one LPB file entry  for each of that plurality of physical processors such that the plurality of processors may be allocated across at least one logical partition in whole or in part by configuring LPB file entries  across the virtual processor directories  of the logical partition directories , , .","In some embodiments, each LMB file entry  may be a file entry associated with a portion of physical memory corresponding to the granular size at which that portion of physical memory can be allocated. This portion of physical memory may be designated by a user, by the hypervisor of a logically partitioned computer associated with that portion of physical memory, and\/or set by a manufacturer and\/or distributor of the logically partitioned computer associated with that portion of physical memory. Each LIOB file entry -, however, may be a file entry associated with a portion of an I\/O device corresponding to the granular size at which that portion of an I\/O device can be allocated. For example,  illustrates that the resource layer  includes at least one LIOB - each of a respective optical disk, LAN adapter, tape drive, DASD, and\/or control panel. In specific embodiments, this indicates that the logically partitioned computer is in communication with at least one respective optical disk, LAN adapter, tape drive, DASD, and\/or control panel that may be allocable in whole or in part to at least one logical partition.","As illustrated in , the next layer of the virtual file system may be the resource layer . In the resource layer , at least one LPB file entry , LMB file entry , and\/or LIOB file entry - may be collected in their respective virtual processor directories , I\/O device directories , and\/or logical memory directories  of the logical partition directories , , and\/or  according to their allocation to the respective logical partitions, while free LPB file entries , LMB file entries , and\/or LIOB file entries - may be collected in their respective LPB directory , LMB directory , and\/or LIOB directory  of the resource pool directory .","Moreover, and as illustrated in , each virtual processor directory , I\/O device directories , and\/or logical memory directories  may include at least one respective virtual resource file entry ,  and\/or . For example, although physical resources of a logically partitioned computer are limited (e.g., to those disposed in, or otherwise in communication with, that logically partitioned computer), virtual resources for the logical partitions are generally unlimited (although, as a practical consideration, the management of vast virtual resources may affect the performance of the logically partitioned computer disadvantageously). In some embodiments, these virtual resources appear to the logical partitions as physical resources. As such, the virtual resources may be associated with allocated physical resources and thus act to associate the physical resources of the logically partitioned computer with the logical partitions therein. As illustrated in the logical partition directory , the virtual processor directory  includes at least one virtual processor file entry , the I\/O device directory  includes at least one virtual device file entry , and the logical memory directory  includes at least one virtual logical memory file entry . It will be appreciated that remaining logical partition directories (e.g., for example, logical partition directory  and\/or logical partition directory ) may each also include the virtual processor directory , the I\/O device directory , the logical memory directory , file entries associated therewith, and\/or at least one virtual resource file entry ,  and\/or .","As discussed above, each virtual resource file entry ,  and\/or  is associated with the virtual resources of a logical partition. In specific embodiments, each virtual resource file entry ,  and\/or  may contain information about the configuration of the virtual resources of the logical partition in such a manner that the configuration can be modified by a user.  is a diagrammatic illustration  of at least a portion of a virtual resource file entry ,  and\/or , and in particular embodiments at least a portion of a virtual device file entry . As illustrated, the virtual resource file entry , ,  may indicate the type of virtual device configured (e.g., a network switch) and include an indication of which physical resources, or portions thereof, are allocated to that virtual device (e.g., two portions of LAN Adapter , and a portion of LAN Adapter ). Moreover, the virtual resource file entry , ,  may include a priority (for example, a plurality of virtual device file entries  for a corresponding plurality of virtual switches may be configured across at least one logical partition, and the priority may indicate the priority of those plurality of virtual device file entries  associated with respective virtual switches) and indicate the location, including the logical partition, associated with that virtual resource file entry , , .",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 6","FIG. 6"],"b":["170","172","61","61","62","10","62","61","172","62","61","172","61","172","10","172","172"]},"In some embodiments, the user interface  accepts operations, which may be in the form of keyboard strokes, mouse movements, combinations thereof, and\/or other input signals generated by the actions of the user and performed on the virtual file system . In turn, the CM  translates the operations on the virtual file system  into partition management commands and may issue the partition management commands to the at least one logically partitioned computer . In specific embodiments, the CM  translates an operation into at least one partition management command configured to be executed by a virtualization manager, or hypervisor, of a target logical partition on a target logically partitioned computer . In some embodiments, and in response to the virtualization manager completing the partition management command, the CM  updates the virtual file system  such that the user interface  displays an updated representation reflecting the configuration of the logically partitioned computer .",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 7","b":["182","184","186","188"]},"Returning to block , the program code may perform a plurality of steps to determine the configuration of the at least one logically partitioned computer and\/or the at least one logical partition. For example, at least one logically partitioned computer may be specified in block , and the program code may determine the configuration of at least one logical partition configured thereupon (block ). Alternatively, at least one logical partition may be specified in block , and the program code may determine the configuration of that at least one logical partition (block ). As such, the program code may determine the physical resources, such as physical processors, memory, and\/or I\/O devices, allocated to the at least one logical partition (block ). Similarly, the program code may also determine the free resources allocable to the at least one logical partition (block ). In some embodiments, the free resources allocable to the at least one logical partition include at least a portion of the free resources of the logically partitioned computer upon which the at least one logical partition is configured. The program code may also determine the access control to the at least one logically partitioned computer, the at least one logical partition, and\/or the resources thereof (block ). In various embodiments, the program code may determine the access control based upon an access control list or the program code may query a user as to which users are allowed to access and\/or perform operations on the at least one logically partitioned computer, the at least one logical partition, and\/or the resources thereof.","Returning to block , the program code may perform a plurality of steps to create the virtual file system. After determining the configuration of the at least one logically partitioned computer and\/or the at least one logical partition, the program code may create a root directory associated with that logically partitioned computer and\/or that logical partition (block ) as well as create a logical partition directory for each at least one logical partition (block ). Upon creation of a logical partition directory, the program code may automatically create default directories and\/or file entries for that logical partition directory (block ). The program code may create file entries associated with each resource allocated to a logical partition, each resource of a logically partitioned computer upon which that logical partition is configured, each free resource allocable to that logical partition, and\/or each free resource of the logically partitioned computer upon which that logical partition is configured (block ). After creating the file entries, the program code may allocate the file entries associated with allocated resources to the appropriate directories such that the allocated file entries correspond to the allocated resources of the at least one logical partition (block ). For example, if a logical partition is configured with two physical processors, the program code may create LPB file entries associated with those physical processors and allocate those LPB file entries to a virtual processor directory for that logical partition consistent with embodiments of the invention. The program code may also create at least one free resource directory (block ) and allocate file entries associated with free resources to the at least one free resource directory (block ).",{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 8","b":["210","212","214","212","212"]},"After determining the at least one logical partition associated with the file system operation, the program code may determine whether the file system operation violates access control rules in an access control list (block ). In some embodiments, the program code is configured to selectively control access to operations on a directory for a first logical partition with an access control list associated with that directory. In specific embodiments, the program code is configured to determine the identity of a user attempting to perform an operation on the directory for the first logical partition and determine whether the user has access to perform that operation on the directory for the first logical partition. In alternative embodiments, the program code is configured to selectively control access to the directory for the first logical partition. In specific embodiments, the program code is configured to determine the identity of the user attempting to access the directory for the first logical partition and determine whether the user has access to the directory for the first logical partition. When the file system operation violates access control rules (\u201cYes\u201d branch of block ), the program code denies the file system operation and may generate an error message (block ).","When the file system operation does not violate access control rules (\u201cNo\u201d branch of block ), the program code may translate the file system operation into at least one partition management command (block ). In specific embodiments, the file system operation may reallocate at least one file entry to and\/or from at least one file system directory associated with the at least one logical partition, and thus the program code may translate the file system operation into a partition management command to reallocate resources associated with the at least one file entry to and\/or from the at least one logical partition (block ). For example, the file system operation may be directed to the virtual file system to organize a respective file entry for a first partitionable resource within a respective directory for a first logical partition. As such, the file system operation may be translated into at least one partition management command to allocate a first partitionable resource associated with the respective file entry to the first logical partition. As such, the program code may issue the partition management command to the virtualization manager, or hypervisor, for the at least one logical partition (block ).","After issuing the partition management command (block ), the program code may confirm the execution of the partition management command (block ). In some embodiments, the program code may issue the partition management command and then wait for a time period, then query the virtualization manager for the at least one logical partition to determine whether the partition management command has been executed. In alternative embodiments, the program code may be responsive to a confirmation signal from the virtualization manager for the at least one logical partition to confirm the execution of the partition management command. The program code may thus determine whether execution of the partition management command has been confirmed (block ). When the execution of the partition management command has not been confirmed (\u201cNo\u201d branch of decision block ) the program code may commend error handling routines and generate an error message. When the execution of the partition management command has been confirmed (\u201cYes\u201d branch of decision block ) the program code may update the virtual file system appropriately (block ).",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 9","b":["240","242","244","244"]},"Advantageously, the use of a virtual file system allows an interface commonly presented to users to manage files in a file system be used to allocate resources in a logically partitioned computer system. Moreover, the use of a virtual file system allows easy retrieval of information. For example, searching for a particular file entry may allow the user to view the directory it is in, thus indicating the particular logical partition associated with that file entry. Moreover, the virtual file system allows archiving of at least one directory, or multiple directories, without querying logical partitions for their configuration.","Those skilled in the art will recognize that the environments illustrated in  are not intended to limit the present invention. Various modifications may be made to the illustrated embodiments without departing from the spirit and scope of the invention. For example, it will be appreciated that a plurality of logicality partitioned computers may be managed by a single hypervisor, and as such logical partitions in a hierarchical representation of a virtual file system may be configured across the plurality of logically partitioned computers. To further elaborate, rather than a root directory of a virtual file system being associated with logical partitions configured on one logically partitioned computer, the root directory may be associated with logical partitions configured across a plurality of logically partitioned computers. To analogize, the directory for logical partition \u201cA\u201d in  may be associated with a first logical partition on a first logically partitioned computer, while the directory for logical partition \u201cB\u201d may be associated with a second logical partition on a second logically partitioned computer. Thus, and to further analogize, the directory for the resource pool may be associated with free resources on the first and\/or second logically partitioned computer.","Moreover, it will be appreciated that the CM may be configured separate from the hypervisor, and in particular the CM may be configured in a separate logical partition (not shown). As such, the CM may be in communication with the hypervisor through a network and\/or intra-partition communications.","As a further example, it will be appreciated that additional I\/O devices may be included without departing from the scope of the invention. For example, although optical disks, LAN adapters, a tape drive, DASDs, and a control panel are illustrated in  and  (and their corresponding file entries are illustrated in ), additional I\/O devices may be included without departing from the scope of the invention. As such, and also for example, additional LIOB file entries associated with those additional I\/O devices may be included without departing from the scope of the invention.","Thus, the invention in its broader aspects is therefore not limited to the specific details, representative apparatus and method shown and described. In particular, any of the blocks of the above flowcharts may be deleted, augmented, made to be simultaneous with another, combined, or be otherwise altered in accordance with the principles of the present invention. For example, although the blocks of  are illustrated as being in a specific order, any of the blocks of  may be combined, made concurrent, and\/or re-ordered without departing from the scope of the invention. Accordingly, departures may be made from such details without departing from the spirit or scope of applicants' general inventive concept.","Other modifications will be apparent to one of ordinary skill in the art. Therefore, the invention lies in the claims hereinafter appended."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate embodiments of the invention and, together with a general description of the invention given above and the detailed description of the embodiments given below, serve to explain the principles of the invention.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 3","FIG. 2","FIG. 1","FIG. 2"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 6","FIG. 4","FIGS. 1-3"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 7","FIG. 4"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 8","FIG. 4"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 9","FIG. 4"]}]},"DETDESC":[{},{}]}
