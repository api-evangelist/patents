---
title: Automatically generating system restoration order for network recovery
abstract: Embodiments relate to systems and methods for automatically generating a system restoration order for network recovery. A set of managed machines, such as personal computers or servers, can be managed by a network management platform communicating with the machines via a secure channel. The network management platform can access a dependency map indicating a required order for restoration of machines or nodes on a network. The network management platform likewise access a reverse kickstart file for each machine to be automatically restored in order to ensure proper functioning of the network, and extract a current configuration of that machine for purposes of restoring the overall network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08667096&OS=08667096&RS=08667096
owner: Red Hat, Inc.
number: 08667096
owner_city: Raleigh
owner_country: US
publication_date: 20090227
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND OF RELATED ART","DESCRIPTION OF EMBODIMENTS"],"p":["The present teachings relate to systems and methods for automatically generating system restoration order for network recovery.","Network management platforms exist which permit a systems administrator to connect to a set of targets in a network, and perform maintenance and diagnostic activities on that group of managed machines. The network management platform can identify individual targets via a public key or other security credential, and identify the software provisioning requirements, obtain a hardware inventory, or perform other management tasks on validated machines. In general, existing network management platforms can be hosted on a central server or other facility that permits connection to, identification, and management of the set of targets.","In terms of the maintenance of machines populated on a network as well as the maintenance of the network on a comprehensive basis, systems administrators from time to time may need to take stock of individual machines and their network relationships. The managed network may need to be interrogated to determine installation configurations and network interconnections, for instance, to prepare for the possible restoration of the network or individual machines in the event of a crash, intrusion, disaster, or other unforeseen hazard.","Existing network management platforms suffer from various limitations of design and function, however, in terms of their ability to manage any low-level or high-level restoration process. For one, in the event of the failure of multiple servers, clients, or other nodes or machines, existing platforms are not equipped to identify the software dependencies of one machine on another. For instance, where one server supports a Web page for commercial online customers whose accounts are stored in a second remote database, it may be necessary to restore the database server first, before the Web server, to ensure account data can be retrieved using that networked software or service. Besides crash recovery, the ability to identify software-related dependencies would also prove useful for security management purposes, if that capability were available.","For further instance, in the case of the corruption or loss of individual machines, the particular configuration of those machines can be difficult or impossible to restore using existing network management platforms. While individual \u201ckickstart\u201d files reflecting initial configuration states can be received from targets or other machines during installation, those files can be lost or damaged in existing network management platforms, which have no facility for managing such files. Kickstart files can, in general, include any type of installation answer file, such as, for instance, JumpStart, AutoYast, preseed, or other files or protocols. In further regards, existing network management platforms or provisioning platforms provide no integrated tool to attempt the restoration of an entire datacenter or network, including all individual nodes and taking software dependency into account. Thus, there is a need in the art for methods and systems that provide centralized management of restoration and related operations.","Embodiments of the present teachings relate to systems and methods for automatically generating a system restoration order for network recovery. More particularly, embodiments relate to platforms and techniques for accessing a dependency map to identify an ordered list of nodes for restoration of a network, based on the dependency of software or services installed on the set of machines in a managed network. As each machine is processed in order for restoration, a network management platform can extract a reverse kickstart file to re-install a set of software and\/or other resources to the current configuration of that node. An entire network or datacenter can therefore be automatically be restored in an order that preserves proper function of the network and its nodes.","Reference will now be made in detail to exemplary embodiments of the present teachings, which are illustrated in the accompanying drawings. Where possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["100","102","116","148","148","148","116","112","180"]},"While secure channel  is illustratively shown as one channel to managed network  or devices therein, it will be understood that in embodiments, secure channel  can comprise multiple channels or connections. In embodiments, secure channel  can instead be replaced by a non-secure channel or connection. In general, network management platform  can communicate with the managed network  and its constituent machines and resources, which can for instance comprise personal computers, servers, network-enable devices, virtual machines, and\/or other devices, and manage the security of those machines under the supervision of network management platform . The network management platform  can host a set of engines, logic, and\/or other resources to interrogate managed network  and identify software dependencies, reverse kickstart files, and\/or network-wide restoration data or policies to manage the tracking, backup, and restoration of managed network  and\/or its constituent nodes, machines, and resources. Network management platform  can, in embodiments as shown, host engines or logic including dependency engine , reverse kickstart generator , and network reconstruction engine . Network management platform  can communicate with network store  to establish, maintain and store dependency map , set of reverse kickstart files , and network reconstruction data . Other logic and data stores can be used.","The network management platform  can also for instance establish a set of security policies for managed machines in its domain, including for example an access control list (ACL) and\/or other policies, lists, or parameters for the maintenance and management of managed network . Security policies and other data can for instance be stored in network store .","Network management platform  can establish secure connection  or other connection to managed network , and conduct network scanning, backup and restoration operations, according to various embodiments described herein.","According to embodiments in one regard, network management platform  can operate to connect to a given one or more of managed network  to probe managed network  for software-based dependencies in two or more nodes in the network. As for example more particularly shown in , network management platform  can host a dependency engine  to interrogate managed network  and identify software-based dependencies amongst targets, hosts, and\/or other nodes in managed network . Dependency engine  can for instance issue one or more discovery command  to cause set of targets , set of supervisory hosts , and\/or other nodes in managed network  to report applications or other software or services with which those nodes communicate, for instance to receive input or initiate services. According to various embodiments, one or more discovery command  can probe for, request, and transmit various types of data to dependency engine  to generate dependency map  based on the responses from nodes in managed network . One or more discovery command  can, for instance, probe for reports on virtual hosts and guests, including what virtual process runs on what node or machine. One or more discovery command  can likewise probe for reports on which nodes or machines have which other machines in an SSH (Secure Shell protocol) authorized keys file, and\/or which targets in set of targets  may have received authentication to communicate with\/act as a local supervisory node to other low-level targets. One or more discovery command  can, for instance, probe for reports on what configuration files indicate that network services, such as, for instance, sendmail, dns, syslog, or other services, reference other nodes or machines. One or more discovery command  can, for yet further instance, probe for reports on what network connections are present in a given node or machine, analogous to a \u201cnetstat-a-n\u201dcommand. Other commands, requests, reports, or other probes can be used.","After receiving responses to one or more discovery command , network management platform  can build dependency map  encoding the software-based dependencies between set of target , set of supervisory hosts , and\/or other nodes in managed network . Dependency map  can, for example, be configured as an ordered list, a tree, a graph, a database, a spreadsheet, and\/or other data structure or coding. Dependency map  can encode relationships between software, services, and\/or nodes of managed network , for instance to record that \u201cSoftware Application A running on node  requires Software Application B running on node ,\u201d or other orderings or relations. According to embodiments in further regards, network management platform  can thereby access dependency map  and reconstruct an ordered set of software installations and\/or machine re-initializations to be carried out after an interruption in managed network , such as a physical disaster, security intrusion, or other event. Network management platform  can also operate on dependency map  to examine managed network  for security, configuration or issues, and\/or carry out cloning operations for any nodes in the network, or the network itself. Because necessary relations between software, services and\/or nodes can be effectively encoded in dependency map , software restoration in a logically necessary order can be generated at any needed time, enhancing the security and reliability of managed network . According to embodiments in further regards, network management platform  can operate to connect to managed network  and extract or build a reverse kickstart file , as also for instance illustrated in .","In embodiments as shown, network management platform  can issue one or more discovery commands  to locate any original kickstart files generated during an installation or initialization process for any node of managed network . The kickstart files which one or more discovery commands  seek out can be kickstart files and related data such as that described in co-pending U.S. patent application Ser. No. 11\/763,315, U.S. patent application Publication No. 20080288938 and U.S. patent application Ser. No. 11\/763,333, U.S. patent Publication No. 20080288939, the disclosures of which are incorporated herein, in their entirety, by reference. According to various embodiments, network management platform  can locate any kickstart file copied by the installer and perform other operations using reverse kickstart generator , or other logic. If present, in embodiments \u201c\/root\/anaconda.ks can be used as a base point to locate any kickstart files. Network management platform  can further access a package management tool or application programming interfaces (APIs), such as \u201crpm-va\u201d or yum-based protocols, to determine what files that were originally present in installation packages have been user-modified. If user-modified files are found, those files can be embedded in reverse kickstart file , which in embodiments can be stored to \u201c% post\u201d or other locations. Network management platform  can further scan managed network, for instance using available storage APIs, to detect mounted file systems in a subject node and regenerate a new section of reverse kickstart file  that represents the storage section of the installation. This section can, in embodiments, replace the section in the original kickstart file whose image is being extracted. In embodiments, network mounted file systems can also be detected, and for instance stored to \u201c% post\u201d or other locations.","In embodiments, network management platform can likewise embed\/include any authorized keys in the reverse kickstart file , as well as any files not controlled by a package management tool. In embodiments, instead of embedding\/including said files in reverse kickstart file , that data can be stored to a backup system (such as, for example, bacula or rdiff-backup) and be made to include in the reverse kickstart file  the paths\/commands needed to restore them. Once the reverse kickstart file  is generated, it can then be used stand alone or with a provisioning platform  to recreate the systems, in current configurations, from scratch, effectively automatically reverse engineering their configuration from their current state. The systems administrator can later adjust the reverse kickstart file  as needed to begin maintaining and updating captured systems via that mechanism, or use that resource to clone or restore more systems as needed, for instance for disaster recovery purposes. In embodiments, the reverse kickstart file  and associated processes can be used to clone a network or datacenter, by effectively mirroring a set of machines to a new location. Other uses are possible.","According to embodiments in one regard, network management platform  can operate to connect to a given one or more of managed network  to generate a reconstruction of managed network  in the event of a significant or large-scale network malfunction, intrusion, or disaster. As for example also more particularly shown in , network management engine  can host network reconstruction engine  communicating with network reconstruction data  to perform an ordered restoration of a portion or all of managed network. In embodiments as shown, network reconstruction engine  can incorporate and\/or access both reverse kickstart files and software dependency mappings as described herein, to perform a comprehensive or large-sale restoration of managed network  in a logically structured physical order. In embodiments, network management engine  via network reconstruction engine  can operate to generate a set of reconstruction commands  by accessing dependency map , reverse kickstart file , network reconstruction data , and\/or other data or resources. In embodiments, the network reconstruction engine  can access dependency map , and identify a set of ordered nodes to restore to managed network . For each node, network reconstruction engine  can access a reverse kickstart file  or other source to re-provision the software resources of that node, or otherwise restore that node to managed network . Some or all of the restoration or re-provisioning of the nodes of managed network  can be performed by a provisioning platform , such as that described in the aforementioned in co-pending U.S. patent application Ser. No. 11\/763,315, U.S. patent application Publication No. 20080288938 and U.S. patent application Ser. No. 11\/763,333, U.S. patent Publication No. 20080288939, or other platforms or systems. In embodiments, files for restoration can be served from a backup server or system, if file sizes dictate. Once a network-wide or complete datacenter restoration has been performed in dependency or other order, network management platform  can execute one or more validation or debugging tests, using for example a secure connection and related resources such as those described in the afore-mentioned U.S. application Ser. No. 12\/130,424, filed May 30, 2008, entitled \u201cSystems and Methods for Remote Management of Networked Systems Using Secure Modular Platform,\u201d which published as U.S. patent application Publication No. 20090300180. Other network management platforms or systems can be used.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 3","FIG. 3"],"b":["102","116","102","124","126","130","130","124","104","124","128","110","124","186","188","190","102","102","102","102","102"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 4","b":["402","404","148","102","116","406","120","102","116","408","102","162","116","162","410","102","116","412","102","116","116","414","102","116","162","416","116","118","418","420"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 5","b":["502","504","102","116","116","506","166","508","102","166"]},"In , network management platform  can located a mounted file system(s) and regenerate a new section of the kickstart file representing a storage section of the installation. In , the storage part of the original installation file can be replaced, and\/or added or inserted in reverse kickstart file . In , network management platform  can generate a record of mounted file systems on the node associated with reverse kickstart file . In , any authorized keys or other security credentials from the subject node can be embedded in reverse kickstart file , and\/or the security data can be stored to a backup system in which the security data along with paths, commands, and\/or keys needed to restore the node can be inserted. In , any files not detected or controlled by the package management tool used by network management platform  can be embedded reverse kickstart file , or those files can be stored to a backup system in which those files along with paths, commands, and\/or keys needed to restore the node can be inserted. In , the network management platform  can access reverse kickstart file  and initiate a machine restoration process for one or more nodes in managed network , as appropriate. In , as understood by persons skilled in the art, processing can repeat, return to a prior processing point, jump to a further processing point, or end.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 6","b":["602","604","116","606","166","116","608","166","104","610","102","166"]},"In , the re-provisioning or re-installation of the first required node(s) can be initiated using a provisioning platform  and\/or other tools or resources. In embodiments, provisioning platform  and related processes can be or include those described in the aforementioned copending U.S. patent application Ser. No. 11\/763,315, U.S. patent application Publication No. 20080288938 and U.S. patent application Ser. No. 11\/763,333, U.S. patent Publication No. 20080288939. In , the identification of a next required node(s) based on dependency map  can be begun\/repeated, and the extraction of associated reverse kickstart file  can be begun\/repeated, until the last node of managed network  is processed\/re-installed. In , the re-installation of all nodes recovered in managed network  can be verified via network management platform  after all nodes have been processed. In , network management platform  can generate a record of re-installation or recovery activity, as appropriate. In , as understood by persons skilled in the art, processing can repeat, return to a prior processing point, jump to a further processing point, or end.","The foregoing description is illustrative, and variations in configuration and implementation may occur to persons skilled in the art. For example, while embodiments have been described in which a single network management platform  manages and maintains managed network , in embodiments, multiple engines, servers, or other entities can cooperate to perform network management functions. For further example, while embodiments have been described in which restoration, dependency, and\/or other operations can be performed on a single host or target, in embodiments, multiple diagnostic targets or an entire group of managed machines can be operated on at one time or together. Other resources described as singular or integrated in some embodiments can in embodiments be plural or distributed, and resources described as embodiments as multiple or distributed can in embodiments be combined. The scope of the present teachings is accordingly intended to be limited only by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate embodiments of the present teachings and together with the description, serve to explain the principles of the present teachings. In the figures:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
