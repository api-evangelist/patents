---
title: Post-beamforming compression in ultrasound systems
abstract: In an ultrasound imaging system that applies a beamformer to received ultrasound signal samples to form one or more beams represented by arrays of beamformed samples, a method and an apparatus compress each array of beamformed samples independently of the other arrays to form compressed beams. A plurality of analog to digital converters sample multiple analog ultrasound signals produced by a transducer array to provide multiple streams of ultrasound signal samples to the beamformer. The compressed beams are transferred via a digital interface to a signal processor. At the signal processor, the compressed beams are decompressed to form decompressed beams. The signal processor further processes the decompressed beams for diagnostic imaging, such as for B-mode and Doppler imaging, and scan conversion to prepare the resulting ultrasound image for display. This abstract does not limit the scope of the invention as described in the claims.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08317706&OS=08317706&RS=08317706
owner: White Eagle Sonic Technologies, Inc.
number: 08317706
owner_city: Santa Clara
owner_country: US
publication_date: 20090629
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention relates to compression of beamformed samples produced in an ultrasound imaging system by a receive beamformer applied to received ultrasound signal samples, particularly to compressing the beamformed samples of each beam independently and decompressing prior to processing for image formation.","Medical ultrasound systems scan the internal anatomy of a subject by transmitting ultrasound beams from a transducer placed on the subject by a clinician. The ultrasound waves are reflected at interfaces of internal tissues having different acoustic impedances, producing echoes. The transducer receives the echoes and converts them to electrical ultrasound signals. The ultrasound system applies a sequence of processing steps to the ultrasound signals to produce an image or series of images that are displayed at a control console for analysis by the clinician. Images formed based on the strength of the received echo are referred to as B-mode images. In addition, the system can measure the Doppler shifts of the ultrasound signals to produce color images indicating the flow of fluid, such as blood, and perform additional analyses useful for diagnosis.","A conventional medical ultrasound transducer includes an array of piezoelectric elements that transmit ultrasound waves when driven by electrical signals, receive the returning echoes and convert the received echoes to a plurality of analog signals. A plurality of analog to digital converters (ADCs) sample the analog signals, each producing a stream of digital signal samples. Typical digital signal processing of the signal samples includes beamforming, downconversion, B-mode (brightness) processing and\/or Doppler processing, scan-conversion and image processing for display. The beamformer applies delay and sum operations to the streams of signal samples to form an array of beamformed samples corresponding to a particular direction in the field of view. The beamformer can produce a number of arrays of beamformed samples corresponding to different directions in the field of view by applying different delay patterns to the streams of signal samples. Depending on the type of diagnostic information desired, B-mode processing and\/or Doppler processing are then performed on the beamformed samples to form B-mode detected samples and\/or Doppler detected samples. The spatial coordinates of the detected samples still correspond to the beam geometry of the beamformed samples. The scan converter performs coordinate transformations of the detected samples to produce frames of data having a raster format appropriate for display. Additional image processing is applied to the frames of samples to allow their display as two-dimensional (2-D) or three-dimensional (3-D) images.","Current efforts for improving medical ultrasound systems are directed to increasing the diagnostic capabilities of console\/cart systems and developing smaller portable devices with improved image quality. For the high-end console or cart systems, it is desirable to increase the number of transducer elements to produce higher resolution and\/or 3-D images to expand the diagnostic capability. Increasing the number of transducer elements increases the amount of data communicated from the transducer head to the console processor, which can require a higher bandwidth communication channel and a larger cable connection. The data acquisition capacity of the transducer head is constrained by requirements for manipulation and form factors. Hand-carried and handheld ultrasound devices are economical and desirable for use in small clinics, mobile treatment units and the home. For these devices, battery life is also a constraint. More efficient processing, transfer and storage of ultrasound signal data in the ultrasound system can conserve power, data transfer bandwidth and memory capacity.","Compression of ultrasound signal data can provide benefits for both console\/cart systems and portable systems. The benefits include reducing the data transfer bandwidth, memory capacity and power requirements of the system. For a portable or hand-carried ultrasound system, these benefits reduce weight and increase battery life. For a console system, compression mitigates the impact of increasing amounts of data acquired by the transducer head and transport of the data to the ultrasound signal processor. Compression that is computationally efficient introduces the benefits of compression with low or no impact on system complexity.","The present description uses the term \u201ccompression\u201d to refer to data compression of ultrasound signal samples where the number of bits representing the signal samples is reduced and the signal samples are later decompressed prior to processing for display. Some descriptions of ultrasound imaging systems use the term compression to mean \u201cpulse compression,\u201d not data compression. Pulse compression refers to filtering and\/or modulation of the transmitted ultrasound pulses and inverse filtering and\/or demodulation of the received ultrasound pulses. (For example, see \u201cParameter optimization of pulse compression in ultrasound imaging system with coded excitation,\u201d by V. Behar and D. Adam in Ultrasonics vol. 42, pp. 1101-1109, 2004.) Some descriptions of ultrasound imaging systems use the term compression to mean \u201clog compression,\u201d not data compression. In that context, log compression refers to calculating the logarithm of processed ultrasound data, typically the magnitude detected data prior to display. (For example, see \u201cSignal Processing Overview of Ultrasound Systems for Medical Imaging,\u201d by A. Murtaza et al., Texas Instruments SPRAB 12, pp. 1-26, November 2008). Both pulse compression and log compression intentionally change characteristics of the transmitted or received ultrasound signals in the time domain and frequency domain. Data compression of the received ultrasound signal samples followed later by decompression is a process that preserves the signal characteristics in the time and frequency domains. The present description refers to lossless and lossy compression of ultrasound signal samples. In lossless compression, the decompressed samples have identical values to the original samples. In lossy compression, the decompressed samples are similar, but not identical, to the original samples. The present description uses to the term \u201cframe\u201d to refer to an array of ultrasound data, either raw or processed, that is eventually processed to form an ultrasound image for display. Descriptions of ultrasound imaging systems in the art also use the term \u201cscreen\u201d to refer to a frame of ultrasound data. In the present description, \u201creal time\u201d means a rate that is at least as fast as the sample rate of a digital signal. The term \u201creal time\u201d can be used to describe rates for processing, transfer and storage of the digital signal. The sample rate is the rate at which an ADC forms samples of a digital signal during conversion of an analog signal. Some descriptions of ultrasound imaging systems in the art use the term \u201creal time\u201d to refer to the frame rate for display of the ultrasound images. The present description relates real time to the sample rate instead of the frame rate interpretation.","Previous applications of data compression in ultrasound systems have included alternatives for data compression before and after scan conversion for image formation. In U.S. Pat. No. 6,315,722 entitled \u201cUltrasonic Diagnostic Device,\u201d issued on Nov. 13, 2001, Yaegashi describes a time axis extension unit for storing ultrasound signal samples output from an ADC unit. The time axis extension unit writes the data at the rate output from the ADC unit and reads the data out at a lower rate. The time axis extension unit stores signal samples for one screen, or frame, and can be implemented using first-in first-out (FIFO) memories. A data compression unit compresses signal samples read from the time axis extension unit. Yaegashi describes applying image compression technologies, such methods based on the discrete cosine transform (DCT) for exploiting spatial correlation within one frame of data or MPEG compression methods for multiple frames of data. (MPEG refers to the video data compression standards developed by the Moving Picture Experts Group.) The compressed samples are stored in a mass memory device, such as a hard disk. The data compression reduces the storage capacity needed in the mass memory device. For producing an image, a data expanding unit decompresses the compressed samples retrieved from the mass memory device. Conventional operations, including filtering, logarithmic conversion, detection and digital scan conversion, are applied to the decompressed samples for image formation and display. Yaegashi does not disclose beamforming in the processing sequence.","In the US Patent Publication, publication number 2008\/0114246, entitled \u201cTransducer Array Imaging System,\u201d Randall et al describe compressing ultrasound digital data using mapping, resampling and\/or data windowing before and\/or after beamforming. The mapping can include requantizing or clipping signal samples. For example, the number of required bits decreases monotonically with depth so that fewer bits per sample may be assigned based on depth. In some embodiments, signal samples from receive channels extending beyond the transmit and receive apertures may be truncated. For imaging a region of interest (ROI), signal acquisition time may be proportional to depth range, so that data acquired before a minimum sample time and\/or after a maximum sample time may be truncated if they do not contribute to the formation of image pixels. In some embodiments, the data may be resampled to fewer samples if the display resolution is less than required for full resolution imaging, thus reducing the number of samples transferred.","In U.S. Pat. No. 6,042,545 entitled \u201cMedical Diagnostic Ultrasound System and Method for Transform Ultrasound Processing,\u201d issued Mar. 28, 2000, Hossack et al. describe transform compression techniques for ultrasound data after beamforming. Alternatives for beamforming include analog beamforming prior to the ADC or digital beamforming after the ADC. The beamformer generates in-phase and quadrature (I and Q) samples or, alternatively, radio frequency (RF) samples. Beamformed samples corresponding to a two-dimensional (2-D) frame are filtered and transformed to produce a transform domain representation. The transform domain samples are quantized and\/or encoded for compression. The compression may be lossless or lossy. Any transform, such as the DCT or the Discrete Wavelet Transform (DWT), quantization function and encoding function may be applied for compressing the frame of data. For example, JPEG compression includes dividing the frames of data into 2-D blocks of data, transforming using a 2-D DCT on each of the blocks, quantizing the transform domain samples, differentially encoding the DC (zero frequency) transform samples between blocks, and entropy encoding the 2-D blocks of quantized transform domain samples (e.g. Huffman encoding). The JPEG compression algorithms can be configured as lossy or lossless. (JPEG compression refers to the standard image compression methods developed by the Joint Photographic Experts Group.) Additional operations in the transform domain for various image processing functions, such as filtering, are more computationally efficient in the transform domain than the spatial domain. For example, 2-D filtering in the spatial domain uses 2-D convolution operations. In the transform domain 2-D filtering uses more efficient multiplications by the transform domain filter coefficients. The compressed transform domain data can be stored for later image formation. For decompression, the inverse encoding and transform functions are applied prior to processing for display.","In the U.S. Pat. No. 6,855,113, entitled \u201cDiagnostic Information Generation Apparatus and Ultrasonic Diagnostic System,\u201d issued Feb. 15, 2005, Amemiya et al. describe compressing frames of ultrasound data prior to wireless transmission from an ultrasonic wave unit to an information unit. The ultrasonic wave unit includes the transducer and a processer for subsequent beamforming, B-mode imaging and Doppler imaging. General purpose data compression standards are applied to the B-mode imaging data or Doppler imaging data, such as JPEG compression for single frame or MPEG compression for multiple frames. The compressed data are transmitted using a standard wireless communication modality to the information unit. The information unit includes a central processing unit (CPU) that decompresses the received data in accordance with the compression standard. The CPU further processes the decompressed B-mode imaging data and decompressed Doppler imaging data for display.","In the PCT published application, international publication number WO 97\/09930, entitled \u201cUltrasonic Diagnostic Apparatus for Compressing and Storing Data in CINE Memory,\u201d published Mar. 20, 1997, Lee describes compressing ultrasound data prior to storage in a CINE memory and decompressing data retrieved from the CINE memory. A CINE memory includes several banks organized by time. In this system, the ultrasonic probe performs beamforming prior to the ADC, so the ADC output data represent beamformed samples. Compression is applied to a frame of data and can be applied before or after scan conversion. The Lempel-Ziv-Welch (LZW) algorithm is applied for compression and decompression. The LZW algorithm is based on detecting repeated patterns of bits in the data and assigning codes to the repeated patterns. The compressed data for a frame retrieved from the CINE memory are decompressed and further processed for display.","In the Japanese patent application, publication number 2005-081082, entitled \u201cUltrasonograph and Ultrasonic Data Compression Method,\u201d published Mar. 31, 2005, Akihiro describes three embodiments for compressing ultrasound data after analog beamforming. In the first embodiment, an ADC generates I and Q samples of the analog beamformer output signals. The compressor calculates the differences between the I,Q samples of adjacent beams followed by run-length encoding of the differences to form the compressed data. The compressed data are stored in memory. Compressed data retrieved from memory are decompressed and processed for image display. In the second embodiment, an ADC generates RF samples of the analog beamformer output samples. The compressor calculates differences between the RF samples of adjacent beams followed by run-length encoding. The compressed samples are stored in memory, retrieved, decompressed and processed for image display. In the third embodiment, beamformer output is further processed to generate B-mode image frames and Doppler image frames prior to compression. The compressor calculates frame to frame differences to produce compressed data frames. The compressed data frames are stored in memory, retrieved, decompressed and further processed for display.","In the U.S. Pat. No. 4,751,929, entitled \u201cUltrasonic Bloodstream Diagnostic Apparatus with Dual Displays of Velocity Profiles and Average Flow Velocity,\u201d issued Jun. 21, 1988, Hayakawa et al. describe compressing Doppler frequency detected data. The compressor operates on the output of a squaring and adding circuit that calculates the magnitude squared of the real and imaginary parts of the frequency spectrum samples. The compressor re-encodes the bits of each sample output from the adder to reduce the number of bits in the representation. The compressor operates on the adder output sample to encode the location of the most significant bit in the mantissa, preserve a fixed number of most significant bits and remove the remaining least significant bits. The resulting compressed word for each sample includes the fixed number of most significant bits and a code indicating the number of least significant bits eliminated from the original sample. A variable number of least significant bits are removed from each sample, so the compression is lossy.","In the paper entitled \u201cA Novel B-Mode Ultrasound Image Compression Method Based on Beam Forming Data,\u201d 1998 Proc. Intl. Conf. IEEE Engineering in Medicine and Biology Society, Vol. 20 No. 3, pp. 1274-76, Li et al. describe compressing beamformed samples for transmission in a tele-ultrasound system. The DWT is applied to a frame of 128\u00d7512 beamformed samples. The coefficients of subimages in the vertical direction are quantized and encoded using arithmetic coding. After decompression, scan conversion is applied to the frame of 128\u00d7512 decompressed samples to form the frame of 512\u00d7512 samples for display.","Several papers describe different methods for compressing ultrasound images after scan conversion for image formation. A few examples include the following. In the paper entitled \u201cComparative Survey of Ultrasound Images compression Methods Dedicated to a Tele-Echography Robotic System,\u201d 2001 Proc. 23Annual IEEE Engineering in Medicine and Biology Society Intl. Conf., pp. 2461-64, Delgorge et al. describe applying different compression methods to ultrasound images. The methods include Fourier transform, DCT, quadtree decomposition, DWT, fractals, histogram thresholding and run length coding. The methods are applied to 512\u00d7512 ultrasound images after scan conversion. In the paper entitled \u201cDespeckling of Medical Ultrasound Images Using Data and Rate Adaptive Lossy Compression,\u201d IEEE Trans. Medical Imaging, vol. 24, No. 6, June 2005, pp. 743-54, Gupta et al. describe combining compression with an algorithm to remove speckle from the ultrasound image. The DWT is followed by the speckle removal algorithm, quantization and entropy encoding. In the paper entitled \u201cA Tele-Operated Mobile Ultrasound Scanner Using a Light-Weight Robot,\u201d IEEE Trans. Information Technology in Biomedicine, Vol. 9, No. 1, March 2005, pp. 50-58, Delgorge et al. describe applying various lossless and lossy compression methods to ultrasound images. The lossless methods include Huffman, arithmetic coding, Lempel-Ziv, run length coding and Fano coding. The lossy methods include various JPEG versions, including JPEG, JPEG-LS and JPEG2000. In the paper entitled \u201cMaximum Likelihood Motion Estimation in Ultrasound Image Sequences,\u201d IEEE Signal Processing Letters, Vol. 4, No. 6, June 1997, pp. 156-7, Strintzis et al. describe applying MPEG compression to a sequence of ultrasound images. The method includes detecting motion vectors for 8\u00d78 blocks of pixels between consecutive frames in the sequence of images. The motion vectors are encoded for frame to frame MPEG compression.","The commonly owned U.S. Pat. No. 7,009,533 (the '533 patent), entitled \u201cAdaptive Compression and Decompression of Bandlimited Signals\u201d, dated Mar. 7, 2006, describes algorithms for compression and decompression of certain bandlimited signals. The commonly owned and copending U.S. patent application Ser. No. 12\/477,062 (the '062 application), filed Jun. 2, 2000, entitled \u201cUltrasound Signal Compression,\u201d describes compression of ultrasound signal samples output from analog to digital converters and decompression prior to beamforming operations. The present application is directed to compression of the ultrasound beamformed samples resulting from beamforming operations applied to the ultrasound signal samples.","There is a need for efficient data transfer of ultrasound beamformed samples between components of the ultrasound imaging system. There is a need for computationally efficient data compression of ultrasound beamformed samples to improve data transfer with minimal impact on system complexity.","Embodiments of the present invention have been made in consideration of the foregoing conventional problems. The present invention provides an apparatus and method for compressing the beamformed samples representing one or more beams produced by a receive beamformer in an ultrasound imaging system. The receive beamformer is applied to a plurality of sequences of ultrasound signal samples received during a sampling window to form one or more beams, each represented by an array of beamformed samples. The sequences of ultrasound signal samples are produced by analog to digital conversion of analog ultrasound signals output by the transducer elements during the sampling window. The method and apparatus of the present invention provide for compressing the beams to form compressed beams, including compressing the beamformed samples in the array representing a particular beam to form the compressed beamformed samples of a corresponding compressed beam. The compression of a particular beamformed sample in the array depends in part on a characteristic of at least one other beamformed sample in the array. Each beam is compressed independently of another beam corresponding to the sampling window. The compressed beams are transferred across a digital interface to a signal processor. At the signal processor, the compressed beams are decompressed prior to processing for image formation.","In an embodiment of an apparatus for the present invention, the compressor includes one or more compression units. A corresponding compression unit applies the compression operations to a corresponding beam output from the receive beamformer independently of other beams corresponding to the sampling window. The corresponding compression unit is configured to compress a particular beamformed sample based in part on a characteristic of at least one other beamformed sample of the corresponding beam.","In another aspect of the present invention, the compression operations include applying block floating point encoding to groups of beamformed samples of a particular beam to form groups of compressed beamformed samples. A group multiplexer interleaves the groups corresponding to two or more compressed beams to form a multiplexed sequence for transfer across the digital interface. The compressed groups of the received multiplexed sequence are decompressed to form groups of decompressed beamformed samples. A group demultiplexer rearranges the decompressed groups to restore the original group order for the corresponding decompressed beams. In another embodiment of present invention the compression operations include calculating differences between beamformed samples of a corresponding beam followed by block floating point encoding of the difference samples to form the compressed beam.","The correlation among the beamformed samples within a beam is exploited by compressing a particular beamformed sample depending in part on a characteristic of another beamformed sample in the same beam. For an embodiment including block floating point encoding, the characteristic is the exponent value for the beamformed sample having the maximum magnitude in a group of beamformed samples within the beam. The block floating point encoding represents each beamformed sample in the group based on the exponent value and the value of the beamformed sample itself. For an embodiment including calculating differences between pairs of beamformed samples in the beam, the characteristic is the value of each beamformed sample in the pair. Compressing each beam independently of other beams in the sampling window allows efficient computations and low latency for producing the compressed beams.","An advantage of compressing the beamformed samples in an ultrasound imaging system includes reducing the bandwidth needed for transfer of the compressed beamformed samples over the digital interface to the signal processor. For a system architecture wherein the receive beamformer and compressor are housed in the transducer head, the digital interface may be a wired or a wireless communication link. For a wired communication link, the digital interface may be implemented by a lower cost cable assembly, such as PCIe (Peripheral Component Interconnect Express) cable link or an optical fiber link. For a wireless communication link, the reduced bandwidth required may reduce the cost and complexity of the transmitters and receivers implementing the wireless link. For a system architecture where the bandwidth of the digital interface is fixed, compression of the beamformed samples allows more beams in compressed form to be transferred to the signal processor for image formation. The signal processor may use the greater number of beamformed samples to produce an ultrasound image having improved resolution or a larger field of view.","Another advantage of the present invention includes efficient storage of the compressed beamformed samples. For a system architecture where the beamformed samples are stored in a memory or other storage media, the storage capacity required for storing the compressed beamformed samples is reduced compared to uncompressed beamformed samples.","Another advantage of the present invention includes computationally efficient compression and decompression. The implementations of compression and decompression are less complex, reducing the burden on system resources and reducing the cost. Other aspects and advantages of the present invention can be seen on review of the drawings, the detailed description and the claims, which follow.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 1","b":["104","104","102","104","110","112","110","110","110","110","112","112","104","110","112","110","114","110","110","104","110","110","112","110","114","102","112","112","114","114","113","120","115","121"],"i":["i","i ","i ","i ","i","i ","i"]},"The ultrasound signal processor  performs the operations that extract the diagnostic information from the ultrasound signal samples, including beamforming, downconversion, B-mode processing and\/or Doppler processing, described further with respect to . The ultrasound signal processor  can be implemented in one or more processors, such as a digital signal processor (DSP), field-programmable gate array (FPGA), microprocessor or CPU of a computer. The scan converter  performs coordinate transformations of a frame of processed samples to produce a frame of ultrasound image samples having a raster (rectilinear) format. The image processor  can apply additional image enhancement operations to the ultrasound image samples. The display  provides two-dimensional or three-dimensional images for analysis by a user.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 2","b":["130","120","160","160","160","160","162","164","164","162","164","160","161","160","161","121","170","170","170"],"i":["i","i ","i"]},"The diagnostic information processor  performs the appropriate operations on the I,Q samples for the desired type of ultrasound image. B-mode processing generates information representing the intensity of the echo signal. The magnitudes of the I,Q samples can be calculated to form the detected samples for B-mode imaging. Doppler processing estimates the velocity, variance of velocity and energy from the I,Q samples to form Doppler detected samples. The spatial coordinates of the B-mode detected samples and the Doppler-detected samples correspond to the geometry of the beamformed samples. The scan converter  performs coordinate transformations of the detected samples produce frames of data having raster format appropriate for display. The image processor  performs additional image processing of the frames of samples prior to display as two-dimensional or three-dimensional images.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 3","FIG. 4"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 5","b":["160","210","210","161","210","211","210","161","210","220","180","240","180","220"],"i":["i","i","i ","i","a ","i","a "]},"At some point in the processing sequence the processed ultrasound signals are downconverted to an IF or baseband. Downconversion may be applied before or after analog to digital conversion by the ADC bank , after beamforming and prior to compression, or after decompression. When downconversion is applied prior to compression, the beamformed samples input to the compressor  will have a center frequency at an intermediate frequency (IF) or at zero frequency (baseband). When downconversion is applied after decompression, the beamformed samples input to the compressor  will have an RF center frequency. The present description assumes that the beamformed samples are real-valued samples. Alternatively, if the ADCs perform quadrature sampling or if quadrature downconversion applied prior to compression, the beamformed samples will have of I and Q components. In this situation, the compressor  will process the I and Q components of the beamformed samples independently.","Since the compressed beamformed samples have fewer bits per sample, the data ports for connecting to the digital interface  may have excess bandwidth. The compressed beamformed samples may be multiplexed to form fewer data channels for transfer over the digital interface .  is a block diagram of an ultrasound system that includes multiplexing the compressed beamformed samples for transfer across fewer data ports. The receive beamformer  receives N streams of ultrasound signal samples, Xto X, from the respective ADC outputs and produces J beams, Bto B, at the beamformer output channels . The compression units produce J corresponding streams of compressed beamformed samples, Cto C. The compressed beamformed samples, having a reduced bit rate, are provided to the data ports . Preferably, the data ports provide low voltage differential signaling (LVDS) data transmission. Alternatively, the data ports can use serializer-deserializer (SerDes) interfaces for data transmission. The document entitled \u201cLVDS Owner's Manual Including High-Speed CML and Signal Conditioning\u201d, Fourth Edition, published in January 2008 by National Semiconductor describes LVDS devices and architectures. The LVDS data transmission has desirable characteristics, including a maximum data transfer rate of 3.125 Gbps, low noise and low power consumption. The differential signaling requires two I\/O pins per channel output, one for the positive differential output and one for the negative differential output, referred to as an LVDS pair. The data port has excess bandwidth when the bit rate of the compressed beam at compressor output Cis lower than the port's maximum data transfer rate. The excess bandwidth can be utilized by combining multiple compressed beams for transfer over a given data port . The multiplexer  combines J sequences of compressed beamformed samples to form M multiplexed sequences D, where M<J, for transfer over M data ports . The number of compressed beams that can be combined is limited by the bandwidth of the data transfer port . The serializer  provides the multiplexed sequences of bits to the corresponding data ports ","The advantages of multiplexing the compressed beamformed samples to use M data ports include using fewer physical data ports, which in turn reduces the connections and power consumption of the data ports. In applications where the bit rate of the compressed beamformed samples is fixed, the multiplexer  has a fixed number of multiplexer outputs for a fixed number of physical data ports . Alternatively, a flexible architecture can support a variable number active data ports among the fixed number of physical data ports depending on the bit rate of the compressed beamformed samples. For the flexible architecture, the compressor  provides compressed beamformed samples at various bit rates that depend on a user selectable compression ratio parameter. A compression controller (not shown in ) provides compression control parameters to the compression units so that the operations produce compressed beamformed samples with a bit rate that corresponds to the desired compression ratio. The compression controller provides multiplexing control parameters to the multiplexer  to indicate the number M of multiplexed sequences to produce. The compression controller can also respond to the user input to power down the inactive data ports, thus further conserving power.","The number of compressed beams that can be combined for one data port is limited by the bandwidth of the data port . For example, for J=8 beams B, where each beam has 16 bits per beamformed sample and a sample rate of 50 megasamples per sec. (Msps), the bit rate at each beamformer output channel is 800 Mbps. Suppose the data port has a data transfer rate of up to 800 Mbps and the compressor  produces a compression ratio of 2:1. The compressed beam Cat compressor output has a bit rate of 400 Mbps. In this case, one data port has sufficient bandwidth to transfer 2 compressed beams Cat the data transfer rate of 800 Mbps. The multiplexer  combines the compressed beamformed samples from a set of 2 compressed beams, Cand C, to form a corresponding sequence of multiplexed compressed samples Dat one multiplexer output . In this example, the number of multiplexed sequences provided to the corresponding active data ports is M=J\/2=4. The serializer  provides sequences of bits to the corresponding data ports . After transfer over the digital interface , a demultiplexer may receive the M multiplexed sequences and demultiplex them to restore the J compressed beams provided to the decompressor . Alternatively, the multiplexer  may interleave groups of compressed beamformed samples having a fixed number of samples per group. For this alternative, the decompressor  may decompress the groups of compressed beamformed samples prior to demultiplexing, as described below with respect to  and .","The compression methods applied by compression units operate on the beamformed samples of the each beamformer output channel independently of the other beams. The compression methods applied to the beamformed samples depend on the values of other samples within the beam. The compression methods include block floating point encoding and computing first or higher order derivatives of the beamformed samples followed by block floating point encoding. Huffman or other types of encoding can be alternatives to block floating point encoding.","The preferred embodiment of the compression unit applies block floating point encoding to groups of consecutive beamformed samples from the beamformer output channel , each group having N_GROUP samples. The maximum exponent for the N_GROUP samples is encoded and the N_GROUP samples are encoded according to the following steps.","For the first group of N_GROUP samples:\n\n","For the first group of samples, the exponent n_exp() is directly encoded. For example, the exponent n_exp() can be encoded as follows, where S is the original number of bits per sample:\n\n","For the igroup, the exponent n_exp(i) is differentially encoded using a prefix code, where no codeword is the prefix of another codeword. The preferred differential encoding is as follows:\n\n",{"@attributes":{"id":"p-0065","num":"0083"},"figref":["FIG. 7","FIG. 8","FIG. 7"],"b":["402","1","4","404","2","5","406","3","6","420","420","408","411","410","410","411","412","0","412","1","412","2","412","3","210","211"],"i":["a ","i"]},"Encoding the mantissas and exponents separately can provide additional compression and mitigate compression error. The difference values of consecutive exponents are calculated and encoded. The exponents vary slowly, so there are relatively few nonzero values separated by strings of zero values. The exponent difference values can be efficiently encoded by representing only the nonzero difference values and their corresponding positions. The position can be represented by the corresponding index value or relative to the position of last nonzero difference value. Encoding of the exponent difference values is lossless, which prevents relatively large errors. For decoding the exponents, the exponent values are reconstructed by integrating the exponent difference values and decoding the corresponding position locations. For decoding of the mantissas, each reconstructed mantissa value is restricted to so that it does not change the value of the corresponding exponent of the decoded sample. For a decoded exponent of n_exp, the reconstructed mantissa can have a maximum value of 2\u22121. This prevents compression error in the mantissa from changing the value of the exponent.","An alternative block floating point encoding method includes reducing the number of bits representing the mantissa and differential encoding of the exponents as described above. The number of bits representing the mantissas of the N_GROUP samples is reduced by selectively removing a number of least significant bits (LSBs) from each mantissa, depending on the value of n_exp for the group.  illustrates an example of selecting bits for representing the reduced mantissa. The n_exp is determined as in step  and step  above. Instead of encoding all of the n_exp lower bits of the mantissa, a number n_LSB of bits, starting with the least significant bit, are removed. The remaining m_exp bits (m_exp=n_exp\u2212n_LSB) are selected for encoding. The value of n_LSB depends on the value of n_exp according to a formula or a table.  is a table of exemplary values of n_exp, n_LSB and m_exp. For larger values of n_exp, more LSBs are removed by truncating or rounding to form the reduced mantissa having m_exp bits. For example, if n_exp is 12, 3 LSBs are removed so that 9 mantissa bits are retained for packing the N_GROUP reduced mantissas. The compressor  can store a lookup table of values of n_exp, n_LSB and m_exp. Alternatively, the compressor  can represent n_LSB and m_exp as a function of n_exp and calculate their values when needed.  is a block diagram of block floating point encoding using reduced mantissas. For the each group of N_GROUP samples, the exponent calculator  determines the maximum_exponent n_exp as described above. The mantissa bit calculator  determines the number of bits m_exp in the reduced mantissa using a lookup table or formula. The reduced mantissa packer  selects the m_exp bits for each of the N_GROUP samples. The multiplexer  then packs the exponent token  followed by the reduced mantissas -, -, - and - to form the compressed group . For some conditions, no LSBs are removed from the group of N_GROUP samples. For example, when the magnitude of one or more samples in the N_GROUP samples is less than an acceptable minimum, the N_GROUP mantissas including the original LSBs will be packed. The compressed beams can include compressed groups with or without reduced mantissas.","A compression controller provides compression control parameters to the compression units for block floating point encoding. There can be multiple alternatives lookup tables or formulas for n_LSB, m_exp and n_exp. The compression control parameters include N_GROUP and selection parameters for alternative lookup tables or formulas for n_LSB, m_exp and n_exp. The compression control parameters can be uniform for all the compression units . Alternatively, the compression control parameters can have different values for the different compression units . The compression controller can respond to user input to select the compression control parameters.","The compressed beamformed samples may be inserted into the data portions of compressed packets for transfer over the digital interface . The compressed beamformed samples of a compressed beam corresponding to a sample window may be arranged in one or more compressed packets. Alternatively, sequences of compressed beamformed samples corresponding to multiple compressed beams may be combined to form a compressed packet for transfer over a given data port , as described with respect to . The header portion of the compressed packet contains identifying information for the packet. The header can also contain control data that represent the compression control parameters for the compressed beamformed samples in the packet. The information on the compression control parameters can be used by the decompressor  to configure the decompression operations.","A preferred embodiment for the multiplexer  of  multiplexes groups of N_GROUP compressed beamformed samples. The multiplexer  produces M multiplexed sequences by interleaving the compressed groups of the J compressed beams. The J compressed beams are divided into M sets of compressed beams. For each set, the multiplexer  interleaves the compressed groups of those compressed beams in the set to form a corresponding multiplexed sequence D. The multiplexed sequence Dis a sequence of compressed groups from the corresponding set arranged in a group order by the multiplexer . The multiplexer  may be implemented as M parallel multiplexers, each receiving the compressed beams of a corresponding set.",{"@attributes":{"id":"p-0071","num":"0089"},"figref":["FIG. 12","FIG. 11"],"sub":["1 ","2","1j ","1 ","2j ","2 ","1","1 ","1j","2j","1(j+1)","2(j+1)","ij "],"b":["252","410","7","418"]},"For decompression, the decompressor  decodes and unpacks the compressed beamformed samples of the compressed groups corresponding to each compressed beam. For each group of N_GROUP compressed beamformed samples, the decompressor  decodes the exponent token to determine the value of n_exp. The differentially encoded exponents are integrated to form the value of n_exp. The N_GROUP mantissas are then reconstructed by unpacking the bits for each mantissa from the compressed group  or  and mapping the bits to the respective decompressed beamformed samples to form the decompressed group. The decompressed beamformed samples can be represented by the original number of bits per beamformed sample or a different number of bits per beamformed sample depending on the downstream processing requirements. For the block floating point encoder using reduced mantissas, the decompressor  also includes a lookup table or formula for determining the values n_LSB based on the decoded values of n_exp. The unpacked bits for the reduced mantissa are appended by n_LSB bits, which can be zeros or dithered values, to approximate the original beamformed sample value. The sequence of decompressed groups calculated from a particular compressed beam form a corresponding decompressed beam.","For decompression of a multiplexed sequence of compressed groups, the decompressor  may be applied to the multiplexed sequence prior to demultiplexing. Referring to , each compressed group Gthe multiplexed sequence Dincludes the exponent token which provides the necessary information for decompressing the N_GROUP compressed beamformed samples of that group. For a differentially encoded exponent token, the decompressor uses the group order of the multiplexed sequence Dto select exponent tokens corresponding to the same compressed beam for integration to determine the corresponding values of n_exp. The group order may be a fixed parameter for multiplexing and demultiplexing, in which case it is known to the decompressor  and the group demultiplexer . Alternatively, the group order maybe an adjustable parameter, in which case it can be included in the header portion of the compressed packet along with the other compression parameters. As stated previously, the compressed groups may have different numbers of bits. However, once the groups are decompressed, the N_GROUP decompressed beamformed samples for each group will have the same number of bits per sample. The group order of the decompressed groups is the same as that of the compressed groups. The group demultiplexer  reorders the decompressed groups to their original order to form a set of decompressed beams, each having decompressed beamformed samples in the original consecutive order.",{"@attributes":{"id":"p-0074","num":"0092"},"figref":["FIG. 13","FIG. 12"],"b":["240","241","254","253","255","254","253","255","254"],"sub":["1 ","ij ","1j","2j","1(j+1)","2(j+2)","ij "]},"Alternative methods for compression and decompression of the beamformed samples include performing computations on the beamformed samples within each beam prior to produce modified samples that have lower amplitudes, and therefore need fewer bits to represent them. The '533 patent describes algorithms for compression and decompression of certain bandlimited signals. Some of the alternative compression methods described below are modifications of the algorithms of the '533 patent for beamformed samples.","An alternative method for compression of beamformed samples includes calculating differences between the beamformed samples in each beam independently of the other beams followed by encoding. Calculating first or higher order differences of the beamformed samples can result in difference samples having smaller magnitudes than the original beamformed samples. Encoding the difference samples can result in greater compression than encoding the beamformed samples themselves.",{"@attributes":{"id":"p-0077","num":"0095"},"figref":["FIG. 14","FIGS. 7","FIG. 11"],"b":["210","210","161","340","330","332","210","330","330","332","332","401","332","332","210"],"i":["i ","a ","i","i ","i ","i","i ","i ","i ","i ","i ","i ","i. "]},"The compressor outputs corresponding to different compressed beams may be multiplexed to fewer output channels prior to transfer over the digital interface , as described above with respect to  and . The encoder can apply block floating point encoding to the difference samples to produce the compressed groups Gin  representing the groups of N_GROUP encoded difference samples that comprise the compressed beams Cand C. Alternatively, the encoder can apply Huffman encoding to the difference samples so that Grepresents groups of Huffman encoded difference samples having N_GROUP compressed beamformed samples per compressed group. The group multiplexer  combines the compressed groups of the compressed beams Cand Cto form the multiplexed sequence D.",{"@attributes":{"id":"p-0079","num":"0097"},"figref":["FIG. 15","FIG. 14"],"b":["240","220","352","332","352","354","180","354","350","352","354","350"],"i":"i "},"The decompressor  of  may be applied to a multiplexed sequence of compressed groups of difference samples prior to demultiplexing, as described with respect to . In this case, the decoder  decodes the compressed groups Gin the multiplexed sequence to form groups of decoded difference samples in the group order. For block floating point decoding, if the exponent tokens were differentially encoded, the decoder  uses the group order to integrate the exponent tokens corresponding to the same beam to determine the values of n_exp for the corresponding groups. The integration operator  uses the group order and n_exp to determine the groups of decoded difference samples corresponding to the same beam. The integration operator  integrates the respective groups decoded difference samples to form the decompressed groups Rof the sequence of . The group demultiplexer  then separates the decompressed groups Rinto the respective decompressed beams  and .","Alternatively, the groups of decoded difference samples may be demultiplexed prior to integration, as shown in . The decoder  receives the multiplexed sequence, such as represented by Din . The decoder  inverts the operations of the encoder to unpack and decode the compressed groups to form groups of decoded difference samples in the group order. For block floating point decoding where the exponent tokens are differentially encoded, the decoder  uses the group order to integrate the exponent tokens corresponding to the same beam. The groups of decoded difference samples have the same number of bits per sample and are in the group order corresponding to the multiplexed sequence of compressed groups. The group demultiplexer  separates the groups of decoded difference samples to form an array of decoded difference samples corresponding to each beam. The order of decoded difference samples in each array correspond to the order of difference samples output from the difference operator . The integration operators and perform the first or higher order integrations of the respective arrays of decoded difference samples to form the iand jdecompressed beams.","Another alternative for compression applies arithmetic operations to the beamformed samples based on the center frequency and sample rate for producing samples having lower amplitudes.  gives examples that illustrate principles underlying alternatives for compressing beamformed samples with different center frequencies. Beginning with the example of a baseband signal, corresponding to row labeled \u201cBand \u201d in , the center frequency is near DC (0 Hz) and the phase increase between consecutive samples is less than 10 degrees. The first phasor diagram  shows that since the phase changes between consecutive samples are small, the magnitudes of the differences of consecutive samples will be relatively small compared to the magnitudes of the samples themselves. The first example sequence  corresponds to samples of a Band  baseband signal. Since the differences between consecutive samples are small relative to the sample magnitudes, calculating first or higher order differences, or differential encoding, creates difference samples with smaller data widths than the original samples. Compression using differential encoding described with respect to  is effective for the baseband (Band ) example. In ultrasound systems where the ultrasound signal samples or the beamformed samples are downconverted to baseband, the compression units can apply differential encoding.",{"@attributes":{"id":"p-0083","num":"0101"},"figref":"FIG. 17","sub":["s","s"],"b":["2","720","720","0","720","3","720","1","720","4","720","2","720","5","722","722","0","722","3","2"]},"For the example of Band  in , the center frequency is near f\/4 and the phase increase between consecutive samples is about 90 degrees. The third phasor diagram  shows that samples separated by 180 degrees, or 2 sample intervals, have similar magnitude and opposite polarity. The third example sequence  also shows that every other sample has similar magnitudes and opposite polarities. For Band , adding together every other sample will result in modified samples with smaller data widths that can be encoded more efficiently than the original samples.","For the example of Band  in , the center frequency is near f\/3 and the phase increase between consecutive samples is about 120 degrees. The fourth phasor diagram  shows that samples separated by 360 degrees, or 3 sample intervals, will have similar magnitudes. The fourth example sequence  shows that every third sample has similar magnitudes. In this case, forming a difference between samples separated by 3 sample intervals will give a modified sample with a smaller data width that can be encoded more efficiently than the original samples.","For the example of Band  in , the center frequency is f\/2 and the phase increase between consecutive samples is about 180 degrees. The fifth phasor diagram  shows that samples separated by 180 degrees, or one sample interval, will have similar magnitudes but opposite polarities. The fifth example sequence  shows consecutive samples have similar magnitudes and opposite polarities. In this case, adding two consecutive samples will form a modified sample with a smaller data width that can be encoded more efficiently than the original samples.","The above examples described for  show that magnitude reduction can be achieved by performing operations such as addition (or inversion followed by subtraction) or subtraction (or inversion followed by addition) on beamformed samples that are separated by 1, 2 or 3 sample intervals, depending on the ratio of the sample rate to the center frequency. The resulting modified samples are then encoded to form compressed samples. Similar operations can be applied to samples that are separated by four or more sample intervals, depending on the ratio of the center frequency to the sample rate, to produce modified samples with smaller data widths than the original samples.",{"@attributes":{"id":"p-0088","num":"0106"},"figref":["FIG. 18","FIGS. 7 and 11"],"b":["161","810","810","852","812","830","812","856","832","830","812","840","832","840","832","401"],"i":"i "},"The compression controller  provides control parameters to the compressor elements based on the ratio of the sample rate to the center frequency of the beamformed samples. The reorder demux  and arithmetic operator  respond to the compression control parameters  and , respectively, to perform the appropriate operations.  shows the operations that produce modified samples  based on the center frequency. The first column  gives the possible center frequencies for this example. The second column  gives a corresponding frequency band indicator for each center frequency. The indicators can be used as parameters for compression controls  and . The third column  gives the different separations of samples x(i) and x(i\u2212j) at reorder demux output  that would be produced in accordance with compression control parameter . The fourth column  shows the result of selecting the arithmetic operations of addition or subtraction in accordance with compression control parameter . When the inverter is \u201con\u201d the delayed sample, x(i\u2212j) is subtracted. The fifth column  shows the mathematical results of the arithmetic operator  that produce the modified samples , or y(i). The compression controller  also provides control of the encoder . The compression control parameter  can indicate a parameter for block floating point encoding, Huffman encoding or other encoding technique.",{"@attributes":{"id":"p-0090","num":"0108"},"figref":["FIG. 20","FIG. 17","FIG. 18","FIG. 19","FIG. 17","FIG. 18"],"b":["912","942","922","932","952","932","840"]},"The compressed beam produced by the encoder  at compressor output in  may be multiplexed with other compressed beams to form fewer output channels prior to transfer over the digital interface , as described above with respect to  and . The encoder  may apply block floating point encoding to the modified samples so that compressed groups Gin  represent groups of N_GROUP encoded modified samples to form the compressed beams Cand C. Alternatively, the encoder  may apply Huffman encoding to the modified samples so that Grepresents compressed groups having N_GROUP Huffman encoded modified samples per group. The group multiplexer  combines the compressed groups of the compressed beams Cand Cto form the multiplexed sequence D.",{"@attributes":{"id":"p-0092","num":"0110"},"figref":["FIG. 21","FIG. 18"],"b":["240","910","920","830","930","940","910","920","930","940"]},"The decompressor  of  can be applied to a multiplexed sequence of compressed groups of modified samples prior to demultiplexing the groups. The decoder  inverts the operations of the encoder  to decode the compressed groups forming groups of decoded modified samples in the group order. For block floating point decoding where the exponent tokens are differentially encoded, the decoder  uses the group order to integrate the exponent tokens to determine the n_exp values for the compressed groups corresponding to the same beam. The inverse operator  and the restore order multiplexer  also use the group order and n_exp to apply their respective operations to the groups of decoded modified samples corresponding to the same beam. The restore order multiplexer  reorders the decompressed beamformed samples within each group to the original sample order to form decompressed groups; however, decompressed groups are still in the group order. Referring to , the output of the restore order multiplexer corresponds to the decompressed groups Rof the decompressed sequence . The group demultiplexer  separates the decompressed groups Rinto corresponding decompressed beams  and .","Alternatively, the groups of decoded modified samples may be demultiplexed prior to the inverse operator , as shown in . The decoder  inverts the operations of the encoder  to unpack and decode the compressed groups to form corresponding groups of decoded difference samples in the group order. For block floating point decoding where the exponent token is differentially encoded, the decoder  uses the group order to integrate the exponent tokens to determine the n_exp values for the compressed groups corresponding to the same beam. The groups of decoded modified samples have the same number of bits per modified sample. The group demultiplexer  separates the groups of decoded modified samples to form an array of decoded modified samples corresponding to each beam. The inverse operators and are applied to the respective arrays of decoded modified samples and the restore order multiplexers and restore the original sample order to form the iand jdecompressed beams, respectively.","The embodiments for the compressor  apply simple operations to the beamformed samples. The difference operator () includes one or more subtractors. The block floating point encoding ( and ) uses comparators, subtractors and lookup tables. Alternatively, Huffman encoding uses a lookup table to assign a code to a value. The compression operations described with respect to  include demultiplexing, adding and subtracting. The embodiments for the decompressor  apply simple operations to decompress the compressed sample. The decompressor  includes lookup tables and adders for block floating point decoding. The integration operator  () includes one or more adders for integrating the decoded samples. The operations of the decompressor  in  include adding, subtracting and multiplexing.","The preferred implementation of the present invention in an ultrasound system integrates the compressor  and the receive beamformer  in a single application specific integrated circuit (ASIC) device with input data channels coupled to receive the ultrasound signal samples from the ADC output channels . The preferred implementation of the compressor  includes multiple compression cores in parallel, where each compression core is coupled to one of the beamformer output channels and implements the compression operations of one compression unit on the corresponding beam. Alternatively, one compression core can implement multiple compression units to compress multiple beams. For this alternative, the compression core includes buffers to store beamformed samples corresponding to the different beams until they are processed. The beamforming and compression operations can also be implemented in a field programmable gate array (FPGA). The compressed beamformed samples can be output over LVDS ports to the digital interface . The IP cores for LVDS interfaces are commercially available for ASIC and FPGA implementations. Alternative architectures include implementing the compressor  in a separate device from the receive beamformer . The compressor  can be implemented in an ASIC, FPGA or a programmable processor, such as a digital signal processor (DSP), microprocessor, microcontroller, multi-core CPU (such as IBM Cell), or graphics processing unit (GPU; such as Nvidia GeForce).","Depending on the ultrasound system architecture, the decompressor  may be incorporated into the same device as or a different device from the diagnostic information processor . The decompression operations can be implemented in an ASIC or FPGA. Alternatively, the decompression operations can be implemented in software or firmware programs executable by a programmable processor, such as a DSP, microprocessor, microcontroller, CPU or GPU. The preferred implementation of the decompressor  is a software program having instructions for the decompression operations executable by a GPU. The GPU may also be programmed to implement at least a portion of the operations of the diagnostic information processor  and scan converter . Alternatively, the decompressed beamformed samples may be transferred to another programmable processor, such as a CPU, for the additional signal processing operations.",{"@attributes":{"id":"p-0098","num":"0116"},"figref":["FIG. 23","FIG. 23"],"b":["240","150","128","1000","240","180","140","150","1000","1002","1002","1010","1012","1000","1016","220","1014","220","1002","1016","1010","1000"]},"In a preferred system architecture, the system controller  may be embodied in a motherboard of a computer having a screen for the display . The GPU device  may be embodied in a graphics card, including the DRAM , in communication with the system controller  by a PCIe (Peripheral Component Interconnect Express) backplane link. Alternatively, the GPU device  may be embodied in an IC mounted on the motherboard. In a system architecture where the ADC bank , receive beamformer  and compressor  are mounted in a data acquisition card, the digital interface  may be embodied by a PCIe backplane link.","It will be appreciated that, in accordance with Moore's Law, higher levels of integration will provide for more compact devices so that the system controller  and the GPU device  may be implemented in a single IC. For example, Intel Corporation is developing a many-core IC architecture that includes multiple instantiations of an x86 CPU core augmented with a vector processing unit. The architecture, referred to as Larrabee, is described in the document entitled \u201cLarrabee: A Many-Core x86 Architecture for Visual Computing\u201d by Seiler et al., ACM Transactions on Graphics, Vol. 27, No. 3, Article 18, August 2008. The Larrabee architecture supports applications requiring parallel processing, including graphics processing. The \u201cLarrabee Native\u201d programming model includes a C\/C++ and APIs for parallel programming and vectorization.",{"@attributes":{"id":"p-0101","num":"0119"},"figref":"FIG. 24","b":["240","1020","240","130","140","150","1022","220","1020"]},"In a system architecture where the ADC bank , the receive beamformer  and compressor  are housed in the transducer head, the digital interface  may be a wired or a wireless communication link. For a wired communication link, the digital interface may be implemented by a PCIe cable link or an optical fiber link. For a wireless communication link, the digital interface may provide digital modulation and transmission of the compressed packets via a radio frequency channel and digital demodulation of the received compressed packets. The wireless link may comply with a wireless communication protocol, such as WiFi (IEEE 802.11) or an UWB (ultra-wideband) format.","While the preferred embodiments of the invention have been illustrated and described, it will be clear that the invention is not limited to these embodiments only. Numerous modifications, changes, variations, substitutions and equivalents will be apparent to those skilled in the art, without departing from the spirit and scope of the invention, as described in the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2","b":"130"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 13","FIG. 12"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 15","FIG. 14"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 19","b":"832"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 20","FIG. 17"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 21","FIG. 18"],"b":"240"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 24"}]},"DETDESC":[{},{}]}
