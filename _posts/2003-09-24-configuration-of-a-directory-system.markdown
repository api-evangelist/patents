---
title: Configuration of a directory system
abstract: Exemplary techniques are described for configuring a metadirectory system used to interact with a collection of connected directory sources via a respective collection of management agents. The techniques can involve importing new management agents to the metadirectory system, updating existing management agents, or configuring the entire metadirectory system (which can involve adding or updating plural management agents). Techniques are provided for ensuring that the configuration of the metadirectory system provides partitions which conform to expected partitions associated with existing management agents and/or connected directory sources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07620658&OS=07620658&RS=07620658
owner: Microsoft Corporation
number: 07620658
owner_city: Redmond
owner_country: US
publication_date: 20030924
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present application is related to co-pending U.S. patent application Ser. No. 10\/434,726, entitled \u201cRelational Directory,\u201d by Kim Cameron, Max L. Benson, Matthias Leibmann, Mark Brown, and James Booth; U.S. patent application Ser. No. 10\/434,725, entitled \u201cAttribute Value Selection for Entity Objects,\u201d by Kim Cameron, Max L. Benson, Matthias Leibmann, Edward H. Wayt, Kevin Miller and James Booth; U.S. patent application Ser. No. 10\/435,720, entitled \u201cAssociating and Using Information in a Metadirectory,\u201d by Max L. Benson; U.S. patent application Ser. No. 10\/435,712, entitled \u201cPreview Mode,\u201d by Kim Cameron, Max L. Benson, Derek Murman, Edward H. Wayt, Jeffrey Bisset, Jie Liu, and Jing Wu; U.S. patent application Ser. No. 10\/435,708, entitled \u201cRules Customization and Related Methods,\u201d by Kim Cameron, Matthias Leibmann, Max L. Benson, Jing Wu, Michael Jerger, Edward H. Wayt, and Kenneth Mark; U.S. patent application Ser. No. 10\/434,411, entitled \u201cAutomated Information Management and Related Methods,\u201d by Stephen Siu, Max L. Benson, and James Booth; and U.S. patent application Ser. No. 10\/435,113, entitled \u201cDeclarative Rules for Metadirectory,\u201d by Kim Cameron, Max L. Benson, and James H. Booth, all of which are assigned to the assignee of the present application and filed on May 8, 2003.","The described subject matter relates generally to configuring a data processing system, and in a more particularly implementation, to configuring a directory system, such as a metadirectory system.","Companies and other organizations typically maintain information about many different aspects of the organization in order to ensure efficient operation. This organizational information (or organizational data) describes people, resources, applications, and the like, which make up the organization. For example, organizational information descriptive of an employee may include his\/her name, job title, salary, telephone number, and\/or internet protocol (IP) address. Organizational information describing an application may include the application's name and associated services provided by the application. Organizational information describing a resource may describe the resource as a network device (e.g., a printer), the name of the device, and capabilities provided by the network device. Many other types of organizational information may be maintained.","The organizational information is typically maintained in a number of remote data storage repositories, such as databases, directories, text files, and so on. For example, the human resources (HR) department may have a data repository of all employees in the company, with employee information. The information technology (IT) department may have a data repository of all email accounts and internet protocol (EP) addresses associated with employees, applications, resources, etc. Data in the repositories frequently overlaps, meaning that some information may be common among more than one repository. In a typical organization, each of the data repositories is independently maintained by the department that owns the repository. For example, the HR department maintains its own employee information, while the IT department maintains its own network information.","Because each of the various remote data repositories is independently maintained by the department that owns the data repository, and there may be data common among them, inconsistencies may arise among the data repositories. For example, the HR department repository may have employee \u201cJohn Smith,\u201d and may list an email address of \u201cjohns@company.com\u201d; the IT department may initially have John Smith's email address as \u201cjohns@company.com,\u201d but may change the address to \u201cjohns@company.com\u201d when another employee, \u201cJohn Simpson,\u201d joined the company. Thus, when the IT department changes John Smith's email address in the IT repository, the email address is no longer consistent with John Smith's email address in the HR department repository. For many other reasons, information stored in data repositories may become inconsistent within an organization. Thus, organizations typically attempt to manage their various data repositories so as to keep the information in them consistent, as well as up-to-date, accurate, and readily available.","One technique for managing an organization's data repositories and their associated organizational information involves linking the multiple remote repositories, while allowing each department to independently modify its own repository. A so-called metadirectory system employs such a technique. A metadirectory system is essentially a directory of directories or repositories. In traditional metadirectories, data from each of a number of repositories is received by an associated interface that negotiates between the remote repository and a central repository. The central repository includes data representing a combination of data in all the remote repositories. Each of the interfaces typically executes scripts in response to specified events, such as the hiring\/firing of an employee, or the changing of an IP or email address.","Each of the individual remote repositories may employ complex data structures, schemas, and protocols for managing its stored information. The metadirectory system itself therefore may also need to employ a highly complex strategy in order to interact with these separate remote repositories. The complexity of the metadirectory system introduces a number of challenges. Those developing the metadirectory system face a first challenge in designing a metadirectory system that meets the myriad of requirements imposed by the separate data repositories. Developers face a second challenge in subsequently maintaining the metadirectory system so that it continues to meet the changing needs of the business for which it was developed. For instance, changes in the design of a remote repository may require a developer to make corresponding changes in the metadirectory system to ensure that the metadirectory system continues to interact with the remote repository in a desired manner. Alternatively, the business may decide to add a new remote repository or delete a previously used remote repository, which again requires changes to the metadirectory system. As used herein, the task of changing the metadirectory system in any manner is referred to as configuring the metadirectory system.","Configuring the metadirectory system is typically a very burdensome task, as a developer should take great care to ensure that the changes made to one part of the metadirectory system do not adversely affect another part of the metadirectory system. This task is all the more troubling in view of the fact that many businesses regard the integrity of their data repositories as essential to the success of their businesses. Thus, mistakes made in changing the metadirectory system can have the effect of literally crippling the business, resulting in loss of productivity and money. Needless to say, for example, a business will not look too favorably on a developer who introduces errors in a payroll system due to an errant update operation made to the metadirectory system.","In the computer fields, developers commonly test an upgrade on a test (or lab) system prior to implementing the upgrade on the working system used by the business. This working system is commonly called the production system of the business. The test system typically includes the same functionality as the production system, and may have access to all of the repositories used by the business, or some representative sample thereof. In using this approach, the developers aim to detect and remedy any errors in the upgrade prior to it being installed on the production system.","Nevertheless, it is not a simple task to apply this strategy to the configuration of metadirectory systems. This difficulty ensues, in part, from the sheer complexity of the metadirectory system. Even after reaching some assurance that the update is working properly on the test system, a developer may nevertheless introduce errors in duplicating the upgrade in the production system. This is because it is a difficult task to accurately \u201cfit\u201d an upgraded piece of the metadirectory system into its proper \u201clocation\u201d in the metadirectory system. The developer must worry about how the upgraded piece impacts and interacts with other pieces that have not been changed, and make appropriate modifications to ensure that the system runs smoothly following an upgrade. Further, there is a possibility that assumptions made in developing a new configuration on the test system do not completely match the conditions present in the production system, potentially resulting in a faulty upgrade. Again, the consequences of a misstep in performing this task can be severe.","Accordingly, there is a need in the art for a reliable and efficient technique for configuring data processing systems, such as metadirectory systems.","According to one exemplary implementation, a technique is described for configuring a data processing system that interacts with multiple data sources via a set of respective management agents. The technique includes: (a) creating configuration information used for modifying the data processing system; (b) exporting the configuration information to a storage location; (c) importing the configuration information from the storage location to the data processing system; and (d) applying the configuration information to modify the data processing system by making a change to the set of management agents.","Related infrastructures, data processing systems, apparatuses, computer readable media, data structures, etc. are also described herein.","Various methods are illustrated as being implemented in a suitable computing environment. Although not required, various exemplary methods will be described in the general context of computer-executable instructions, such as program modules, being executed by a computer server and\/or other computing device. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that various exemplary methods may be practiced with other computer system configurations, including hand-held devices, multi-processor systems, microprocessor based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. Various exemplary methods may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","In some diagrams herein, various algorithmic acts are summarized in individual \u201cblocks.\u201d Such blocks describe specific actions or decisions that are made or carried out as a process proceeds. Where a microcontroller (or equivalent) is employed, the flow charts presented herein provide a basis for a \u201ccontrol program\u201d or software\/firmware that may be used by such a microcontroller (or equivalent) to effectuate the desired control. As such, the processes are implemented as machine-readable instructions storable in memory that, when executed by a processor, perform the various acts illustrated as blocks.","The term \u201cconfiguring\u201d is used broadly herein. The term configuring may encompass any change made to a data processing system, including the introduction of a new part of the data processing system, the deletion of an existing part of the data processing system, or the modification of an existing part of the data processing system. Further, the term configuring may specifically target one or more parts of the data processing system, or may globally affect the entire data processing system. The term configuring also extends to an initial configuration of the data processing system.","This disclosure includes the following sections:","A. Overview of Techniques and Systems for Configuring a Metadirectory System","B. Overview of an Exemplary Metadirectory System\n\n","C. Exemplary Techniques and Systems for Configuring the Metadirectory System\n\n","D. Exemplary Computer Environment for Implementing the Configuration Techniques","E. Appendix: Exemplary Schemas and Rules\n\n","A. Overview of Techniques and Systems for Configuring a Metadirectory System",{"@attributes":{"id":"p-0039","num":"0050"},"figref":"FIG. 1","b":["100","100","102","104","102","104","104","102","104"]},"The production environment  and the lab environment  can include any type or combination of data processing equipment. The production environment  is shown as including a production system , and the lab environment  is shown as including a lab system . In one implementation, these systems (, ) can represent any kind of computing system, such as a server system (e.g., a computing system running Windows Server 2003 produced by Microsoft Corporation of Redmond, Wash.). Alternatively, each of these systems (, ) can represent a collection of computing devices coupled together via a network. Accordingly, the system entities shown in  are intended to represent any kind of computing functionality for performing the functions to be described below.",{"@attributes":{"id":"p-0041","num":"0052"},"figref":"FIG. 1","b":["106","110","112","114"]},"Although not shown, the lab system  can also couple to the CD's (, , ), or couple to some portion thereof, or couple to some copy or version thereof. However, as stated above, the lab system  is not intended to interact with these CD's (, , ) on a day-to-day basis to perform business transactions.","Information stored in the various CD's can be managed as objects having attributes. In the context of a business, such objects typically store identity information regarding individuals, applications, and resources associated with the business. Information associated with people can include name, mailbox, salary, job title, and so forth. Information regarding applications can include network addresses, lists of services, and so forth. Information regarding resources can include printers, network resources, and so forth. A data store used to manage these objects is referred to as a directory.","Both the production system  and lab system  can include functionality for implementing the role of a metadirectory. A metadirectory refers to a special form of a directory that can integrate and synchronize information that is stored in multiple CD's. By way of overview, the basic goal of a metadirectory system is to manage and coordinate identity information from the multiple CD's (, , . . . ). This provides numerous benefits. For instance, each of the CD's may maintain duplicative information regarding various individuals, assets, or other entities. There may be inconsistencies in this duplicative information. The metadirectory system allows the business to provide a unified view that can cull information from multiple CD's regardless of the compatibility of the CD's. This provides a convenient interface through which users can access and manage information in the CD's. Further, in the case of conflicting information, the metadirectory system provides a mechanism for identifying a version of duplicative information that is to serve as authoritative within the business. Further still, the metadirectory system provides a mechanism for propagating changes made to information in one CD to counterpart duplicative information stored in another CD. The metadirectory system described herein provides yet further benefits, as will be described below. In one exemplary implementation, the unique configuration functionality described herein can be implemented using Microsoft's Identity Integration Server (MIIS) system.","The production system  shown in  includes a high-level depiction of certain features provided by a metadirectory system. The production system  includes a database  for storing the metadirectory. In one implementation, the database  can be implemented using Microsoft SQL Server 2000 database. The database  can be implemented on the same server that implements other functional aspects of the metadirectory service, or can be implemented on a different server. Various indicia can be used to identify objects stored in the database , including Global Unique Identifiers (GUIDs), Distinguishing Names (DN's), and so forth. Objects may also be assigned an object class and an object type.","As will be described in detail in Section B, a core portion of the database  stores a so-called metaverse (MV). The metaverse is a storage area that contains the aggregated identity information from multiple connected directory sources, providing a single global, integrated view of all combined objects. The metaverse objects are based on the identity information that is retrieved from the CD's.","A collection of management agents (MA's) (, , . . . ) are coupled to respective CD's (, , . . . ). Generally, an MA moves data from a CD to the metadirectory in the database . Further, when data in the metadirectory is modified, the MA can also export the data out to the CD to keep the CD synchronized with the metadirectory. In one exemplary implementation, the MA's are uniquely designed to handle the requirements of particular CD's. An exemplary set of CD-specific MA's can be designed to interact with the following CD's: Active Directory (AD), Active Directory Application Mode, Attribute-value pair text files, Delimited text files, Directory Services Markup Language (DSML) 2.0, Exchange 5.5, Exchange 5.5 Bridgehead, Exchange 2000 Global Address List (GAL) synchronization, fixed-width text files, LDAP Data Interchange Format (LDIF), Lotus Notes 4.6\/5.0, Novell eDirectory, Sun\/iPlanet\/Netscape directory 4.x\/5.x (with \u201cchangelog\u201d support) (referred to simply as an iPlanet directory for ease of reference below), Microsoft SQL Server 7.0 & 2000, Microsoft Windows NT4 Domains, and Oracle 8i\/9i. This is merely an illustrative and non-limiting listing of possible CD-specific MA's.","A collection of rules governs the operation of the metadirectory service provided by the production system . These rules can be global or local. Global rules apply to all objects in the metaverse. Local rules are specific to a particular management agent. For instance, rules  govern the behavior of the metaverse stored in the database . Rules (, , . . . ) govern the behavior of respective MA's (, , . . . ). For instance, rules may be specified that govern the import and export behavior particular to an MA. Section B provides additional details regarding the role of rules in the metadirectory service.","The rules can be declaratively based (e.g., based on a mark-up language, such as XML). A schema can be specified that governs the permissible form of a rule. The schema itself can be declaratively specified (e.g., using XML). The declarative rules can also include extensions that make reference to other rule-based functionality. Custom extensions can be created using any .NET programming language, such as Microsoft Visual Basic, C#, and so forth. These rules can be implemented as a Microsoft .NET Framework class library, or dynamic link library (DLL). To facilitate illustration, the rules (-) are shown as separate from the database . However, these rules can be stored in the database  along with the object which they control.","Although not illustrated, the lab system  can include similar metadirectory functionality to the production system .","With the above introduction to an exemplary metadirectory system, an overview is now provided of techniques and systems used to configure such a metadirectory system. The task of configuring the metadirectory system can entail any change to the production environment. In one implementation, a user might want to configure the production system  by initially defining all of the rules used to govern its behavior. In another case, the production system  may already include an operational metadirectory system, but the user wishes to completely reconfigure it by revising all or some of its existing rules. In another case, the user may wish to simply add another MA (and associated rule set) to the production system  to address the introduction of a new CD in the business. Alternatively, the user may wish to delete an MA from the production system . Still alternatively, the user may wish to modify an existing MA (and its associated rule set) provided in the production system. This is a limited sampling of the actions encompassed by the term \u201cconfiguration\u201d as used herein.","Presume, to facilitate discussion, that lab system user  wishes to initiate a configuration session using the lab system . The lab system  is generically shown in  as including logic for modifying the metadirectory's configuration (). Such logic  can represent any combination of software and\/or firmware used to change the rules that govern the operation of the metadirectory system implemented on the production system . Such logic  can represent an interface utility provided by the metadirectory itself, e.g., with appropriate user interface (UI) functionality that allows the user to view and modify rules.","The operations performed using the lab system  produce configuration information . Such configuration information  may comprise one or more configuration files. These configuration files, in turn, can include information that will prompt the production system  to change its rules that govern the operation of the metadirectory service. In one case, a single file can be generated that will prompt the creation or modification of one MA provided in the production system , as well as handle any metaverse changes required by these MA-related changes. In another case, the configuration information  can include a suite of files that govern the configuration of the entire production system , or a part thereof. For example, this suite of files can include separate files that affect changes to the MA's (or which introduce new MA's). This suite of files can also include a file that affects changes to the metaverse (MV) provided by the production system .","In one implementation, the lab system  outputs the configuration information  to a storage location . The storage location  can physically represent a directory location of the user's  choosing. The storage location  can be physically associated with the lab environment , the production environment , or some other environment. The outputting of the configuration information from the lab system  to the storage location  is referred to herein as an export operation. To apply the configuration information  to the production environment, a user can retrieve the configuration information  from the storage location . This retrieval operation is referred to as an importing operation. The lab user  can perform both the exporting and importing operations. Alternatively, another user  associated with the production environment  can initiate the importing operation. The multidirectory service can provide UI specifically tailored to initiate the exporting and importing operations (as will be described with reference to ). In another implementation, there need not be such a firm separation between exporting and importing; a user can create the configuration information  and directly apply it to the production system .","In any case, the production system  is shown as including configuration logic . The configuration logic  generally represents any combination of software and\/or hardware for handling configuration tasks. For instance, the configuration logic can be implemented as a collection of API's associated with an executive\/service level of the metadirectory service. The role of the configuration logic  is to process the configuration information  provided by the lab system and make the changes in the production system  specified by the configuration information . More specifically, the configuration logic  processes the configuration information  in different ways depending on what changes are required by the configuration information . The configuration logic  can apply a first procedure in the event that the configuration information  prompts it to add a new MA to the production system . The configuration logic  can apply a second procedure in the event that the configuration information  prompts it to modify an existing MA already provided by the production system. And the configuration logic  can apply a third procedure in the event that the configuration information  prompts it to configure (or reconfigure) the entire production system , or multiple parts thereof. Section C (below) provides additional details regarding these three procedures.","The configuration logic  makes changes to the production system  on the basis of the configuration information  in the following manner. The production system  possesses an existing configuration defined by its existing collection of rules, etc. The configuration information  itself also contains a description of a metadirectory configuration, as it was defined in the lab system . The existing configuration and the configuration information  both include several constituent parts that describe the configuration of different corresponding parts of the metadirectory service. Generally, the configuration logic  modifies the existing configuration of the production system  by performing a part-by-part modification of the existing configuration based on the configuration information .","This part-by-part modification can entail performing a detailed comparison of the existing configuration with the configuration specified in the configuration information  to produce a comparison result, and then modifying the existing configuration based on the comparison result. For example, based on the comparison result, the configuration logic  can be used to modify the existing configuration by only changing those parts of the configuration that are \u201cnew\u201d within the file-specified configuration information .","This part-by-part modification can also entail matching information describing the existing configuration with the configuration information  to produce a matching result, and determining whether to modify parts of the existing configuration based on the matching result and various rules. These rules can vary depending on the type of MA being modified and its associated CD. This matching can result in replacing certain parts of the existing configuration in the production system  with counterpart information provided by the configuration information . In other cases, the configuration logic  may decide to ignore certain parts of the configuration information . More specifically, the configuration information  is generated in the lab system  based on a model of the production system  and its associated CD's. However, the lab environment  may differ from the production environment  in various respects. This difference can result in the production of configuration files that are not perfectly tailored to the production system  in all respects. During the configuration process, the configuration logic  can detect these differences by performing the above-described matching, and can determine what changes should be made (or not made) to the production system  based on this matching (and based on the above-described rules).","The above-described piecemeal matching particularly comes into play in the handling of MA partitions. Namely, an MA (and associated CD) can include multiple component parts. For instance, an MA associated with a system for an international company might contain different parts associated with separate business divisions in different countries. These parts are referred to as partitions. An exemplary partitioned MA is an LDAP directory with different domains or naming contexts. The configuration logic  can perform the above-described piecemeal matching to ensure that the assumptions made by the lab system  regarding the CD partitions accurately correspond to the actual partitions associated with the CD's available to the production system . This operation may entail matching partition information contained in the configuration information  with partition information extracted from the CD or the relevant existing MA (if it exists). In one example, for instance, the lab system  may employ a separate copy of an LDAP directory from that which is employed in the production system. This copy may vary slightly from the version used by the production system . In this case, the configuration logic  performs the above-described piecemeal matching to match up the domains\/naming context of the lab LDAP directory with those of the production LDAP directory.","More specifically, the configuration logic  can apply an automated routine to attempt to automatically perform the above-described matching operations. In the event that certain partitions cannot be matched, the configuration logic  can then activate a UI presentation that allows the user to manually specify partition matches. That is, the user can identify that certain partition information associated with the configuration information  pertains to partition information stored in an existing MA or in the CD.","Section C provides additional details regarding other unique features of the configuration process.","The above-described configuration process has a number of benefits. First, this process provides a reliable and convenient technique for transferring configuration information from a lab system to a production system. In contrast, a manual duplication of configuration information might introduce errors in a production system. Second, this process provides a reliable and convenient technique for piecemeal introduction of changes to the production system  based on a collection CD-specific rules. In contrast, an indiscriminate en bloc replacement of portions of an existing configuration with a lab-specified configuration can introduce errors in the production system, as the new portions may not \u201cfit\u201d well with existing parts of the production configuration, and might not even accurately reflect the CD environment of the production system. These are merely exemplary benefits; those skilled in the art will recognize additional merits of the configuration techniques described in greater detail below.","The above features and resultant benefits are also applicable to other types of data processing systems besides directory-related systems.","B. Overview of an Exemplary Metadirectory System","B.1. Exemplary Architecture of the Metadirectory System","An appreciation of the above-described configuration process can best be gleaned by an introductory discussion which provides greater detail regarding the metadirectory system itself. However, the details provided herein are merely illustrative and non-limiting. The general principles described herein can be used to configure other kinds of data processing systems, and in, particular, other kinds of directory and multidirectory systems.","To begin with,  shows a metadirectory system  implemented on the production system  (of ) in production environment . The multidirectory system  interacts with an information universe . The information universe  includes a collection of CD's (, , , ) (which may correspond to the same CD sources shown in ).","The metadirectory system  itself can be conceptualized as including a plurality of functional layers, including a rules layer , executive (or service) layer , and a storage layer . The rules layer  can be used to specify the behavior of the metadirectory system . For instance, this layer  can be used to specify the metaverse and MA rule sets (e.g., rules -) shown in . The executive layer  applies the rules in the rules layer  to provide a number of services for the metadirectory system . The executive layer  can also implement a variety of administrative functions that allow a user to interact with the metadirectory system . The executive layer  optionally includes APIs and\/or other interfaces to access hardware and\/or software functionality. The storage layer  stores objects in the course of providing the metadirectory service.","More specifically, the storage layer  is shown as including a core storage area  and a buffer area . The core storage area  can be viewed as an aggregated combination of organizational information from a number of data repositories (e.g., CD's) in the information universe . The core storage area  also implements the metaverse (MV) aspects of the multidirectory system . The buffer storage area , in turn, may be used as a staging area, wherein organizational data is received from one or more CD's and processed before affecting a change in the core storage area . As will be described in connection with later figures, the buffer area  is also referred to as connector space (CS).","The exemplary storage layer  can be implemented using any storage mechanism, such as using an SQL database in conjunction with any kind of physical storage medium. In an exemplary implementation, the core  and\/or the buffer  can be configured as respective flat namespaces.",{"@attributes":{"id":"p-0071","num":"0082"},"figref":["FIG. 3","FIG. 3"],"b":["202","204","202","302","304","306","202","204","302","304","306","202","302","304","306","216","204","202"]},{"@attributes":{"id":"p-0072","num":"0083"},"figref":"FIG. 3","b":["202","206","212","202","206","212","206","202","206","218","212"]},"More specifically, information  from the CD  is communicated to the metadirectory system . The exemplary staging functionality  buffers the information  in the buffer  in accordance with rules in the rules layer . The synchronizing functionality  may synchronize (e.g., reconcile) the information  with other information in the metadirectory system  according to rules in the rules layer . The exemplary synchronizing functionality  may include a synchronizing engine that performs various synchronizing functions. From the buffer , an association may be made between the information  in the buffer  and information in the core . This may entail moving the information  into the core . The information  can then be moved out of the core  again into the buffer , where it is prepared to be exported out to the remote repository . The exemplary export functionality  exports (e.g., propagates) the information out to target CD  according to the rules of the rules layer , thereby ensuring that CD  and CD  have consistent information.","As discussed in more detail below, in one implementation, objects in the buffer  can constitute connector objects or disconnector objects. A connector object is an object that is linked to an object in the core . A disconnector object is an object that is not linked to an object in the core . By linking, or not linking, objects in the buffer  to objects in the core , according to rules in the rules layer , unique combinations of data objects and attributes can be designed into the core , whereby the core  may be considered a rules-directed aggregate of information from the information universe . In this exemplary implementation, utilizing connector objects and disconnector objects, the buffer  may be referred to as a connector space, and the core  may be referred to as an aggregate space.","Rules Layer",{"@attributes":{"id":"p-0076","num":"0087"},"figref":["FIG. 4","FIGS. 2 and 3"],"b":["214","214","214","402","404","406","408","202","402","404"]},"Each of the exemplary schemas (, . . . ) provides a model or blueprint for describing the structure of information processed by the metadirectory system . The schemas (, . . . , ) also include criteria specifying how data is processed in the metadirectory system . In general, a separate schema may be developed and applied at any place within the metadirectory that information crosses a boundary. For example, with regard to the metadirectory  of , an import schema may be applied to the information  when the information  is received from the remote repository . As another example, a core schema may be applied to the information  when it is moved from the buffer  into the core . Schemas (, . . . ) may hold information such as system configuration information, data format specifications, and so on. As mentioned above, a markup language, such as XML, can be used to express the schemas (, . . . ).","More specifically, in an exemplary implementation, the metadirectory system  employs the following schemas: a) a management agent (MA) schema; b) a remote repository schema; c) a connector filter schema; d) a join schema; e) a project schema; f) an export attribute flow schema; g) a run configuration schema; h) a deprovisioning schema; i) an import attribute flow schema; and j) a metadirectory core schema.","The MA Schema (described in more detail below) specifies criteria for MA interactions with its associated CD. The remote repository (RR) schema models the structure of data received and processed by a management agent. For example, the RR schema may define the object types and attributes used by the remote repository. The connector filter schema models a rules engine filter that is employed by a synchronization engine during importing and\/or exporting of data objects. The join schema models one or more rules for joining an object in a metadirectory buffer (e.g., the buffer  in ) with an object in a metadirectory core (e.g., the core  in ).","The project schema models one or more rules for projecting an object into a metadirectory core (e.g., the core  in ). The export attribute flow schema models one or more rules for associating an attribute in a metadirectory core (e.g., the core  in ) with an object in a metadirectory buffer (e.g., the buffer  in ). The run configuration schema identifies various ways in which an MA is to run, e.g., as specified by a customer.","The import attribute flow schema describes how attribute values should flow from an object in a metadirectory buffer (e.g., the buffer  in ) to an object in a metadirectory core (e.g., the core  in ). The core data schema models the layout of the data in the core  in terms of different object types and attributes associated with these different object types.","The DLL's (, . . . ) include sets of rules and\/or specifications for managing data. For instance, an exemplary DLL  can include rules extensions that can be used by the metadirectory system  to combine data from two source attributes (e.g., surName and givenName) and flow this data to one target attribute (e.g., displayName).","The DLL's are useful in implementing custom rules to supplement the declarative rules governed by the schemas (, . . . ).","In an exemplary implementation, the following types of rules may be specified in the rules layer , using schemas, or otherwise: a) connector filter rules; b) deprovisioning rules; c) export attribute flow rules; d) import attribute flow rules; e) join rules; f) projection rules; and g) provisioning rules. Other rules may be implemented as may be useful to a particular metadirectory design. Brief descriptions of the rules mentioned above are as follows.","Connector filter rules (also called disconnector rules): These are rules that specify prevention of linking (connecting) objects in the metadirectory buffer to objects in the metadirectory core.","Deprovisioning rules: These are rules that specify how a metadirectory buffer object is processed after it has been disconnected (i.e., unlinked) from a metadirectory core object.","Export attribute flow rules: Export attribute flow refers to the process of flowing attributes of objects in the metadirectory core to objects in the metadirectory buffer. Export attribute flow rules specify the process of export attribute flow.","Import attribute flow rules: Import attribute flow refers to the process of flowing attributes of objects in the metadirectory buffer to objects in the metadirectory core. Import attribute flow rules specify the process of import attribute flow.","Join rules: These are rules that specify the process of linking an object in the metadirectory buffer to an object in the metadirectory core.","Projection rules: These are rules that specify the process of creating an object in the metadirectory core and linking the created object to another object in the metadirectory buffer.","Provisioning rules: Provisioning is the process of creating, renaming, and\/or deprovisioning objects in the metadirectory buffer based on a change to an object in the metadirectory core. Provisioning rules specify the process of provisioning.","Executive Layer",{"@attributes":{"id":"p-0093","num":"0104"},"figref":"FIG. 5","b":["216","202","216","216"]},"The exemplary executive layer  includes a synchronization engine , which, in turn, includes a rules engine . The executive layer  also includes one or more management agents (, , . . . ). The executive layer  also includes administrative logic , which, in turn, includes the configuration logic  introduced in . The executive layer  may also include Input\/Output (I\/O) logic .","The exemplary synchronization engine  performs synchronization of objects in the metadirectory buffer  and\/or the metadirectory core . Synchronization refers to a process of maintaining consistency among multiple sources of data. In the context of an exemplary metadirectory system, synchronization involves utilizing attribute flow precedence to combine similar data into a final version that is stored in the metadirectory core . This data is then exported from the metadirectory core  to remote CD's.","The exemplary synchronization engine  may include the rules engine  as part thereof. An exemplary rules engine , in conjunction with the rules in the rules layer , provide rules analysis functions that direct the creation of objects and the flow of attributes within the metadirectory system . For example, the rules engine  may analyze connector filter criteria of a buffer object to determine whether the buffer object should be connected (e.g., joined or projected) to an object in the metadirectory core .","The one or more exemplary MA's (, , . . . ) communicate with CD's to receive data objects, stage the objects, and transfer data objects out to the CD's. The exemplary MA's (, , . . . ) convert repository information received in one format (e.g., Active Directory\u00ae, Oracle\u00ae) into an isomorphic form, such that all data in the buffer is in a common form. Each of the exemplary MA's (, , . . . ) has a user interface (UI) associated with it, whereby a user can access an MA. Via an MA UI, a user may cause the MA to perform a specified run (e.g., execute a task), such as an import run or an export run. The user can also read and update various information (e.g., version, configuration, description) associated with an MA through an MA UI.","Applications may also communicate with MA's via application programming interfaces (APIs) provided by the I\/O logic . In addition to providing APIs, the exemplary I\/O logic  performs standard input\/output tasks to communicate from the metadirectory to one or more remote CD's. The exemplary I\/O logic  implements and supports any communications protocols suitable to the design, such as, but not limited to, Distributed Component Object Model (DCOM), Windows\u00ae Management Instrumentation (WMI), Hypertext Markup Language (HTML), and Simple Object Access Protocol (SOAP).","Finally, the administrative logic  generally represents any functionality by which a user can interact with the metadirectory system  and control its operation. For instance, the administrative logic  includes user interface logic for providing one or more user interface presentations that allow a user to interact with the metadirectory system . Such UI enables a user to access, update, and otherwise interact with the metadirectory modules used in the metadirectory system and the data therein. Reference to various \u201cpages\u201d in the ensuing discussion pertains to various UI presentations that facilitate user interaction with the metadirectory service. The administrative logic  also includes the configuration logic  as part thereof. The configuration logic coordinates the import configuration tasks described in Section A above, and to be elaborated on in Section C below.","Overview of Operation",{"@attributes":{"id":"p-0101","num":"0112"},"figref":["FIGS. 6 and 7","FIGS. 1-5","FIG. 6"],"b":["600","600","602","604","606","602","1","608","604","2","610","606","3","612"]},"MA , MA , and MA  are in operable communication with storage . The storage  is an exemplary implementation of the storage layer , shown in . The exemplary storage  is partitioned, or otherwise divided, into a first namespace, called a connector space (CS) , and a second namespace, called an aggregated space (AS) . The CS  is an exemplary implementation of the metadirectory buffer , shown in . The AS  is an exemplary implementation of the metadirectory core , shown in .","The connector space  is partitioned, or otherwise divided, into one or more connector space regions that are used by the MA's. MA  communicates with a first connector space region (CS) . MA  communicates with a second connector space region (CS) . MA  communicates with a second connector space region (CS) .","Each of the MA's uses the MA's associated connector space regions to import, and otherwise process objects from the MA's associated RD. For example, MA imports objects from the HR RD  and populates CS  with the imported objects. The MA's may import objects from the RDs at any time. For example, the MA's may import objects periodically, or upon the occurrence of a specified event, such as power-up, or user request. Each of the MA's may import objects independently from the other. In one exemplary implementation, MA  imports objects from IT RD  whenever IT RD  powers up, while MA  imports objects from telephone RD  once per day. In another exemplary implementation, a user may initiate a simultaneous import at MA, MA, and MA.","Each of MA , MA , and MA , has a schema, schema , schema , and schema , respectively, associated with the MA. The schemas each may have information, such as rules or data filters, that are specific to the MA associated with the schema. The exemplary schemas, , , and  may or may not be stored in the storage . In a particular implementation, the schemas are stored in a separate storage area that is accessible to the MA's and a synchronization engine.","To illustrate an exemplary metadirectory operation, an exemplary scenario is described. The exemplary HR RD  transmits one or more objects to the MA . The MA  populates the CS  with the one or more HR objects  that the MA  receives from the HR RD . The MA  may transform, or otherwise format the one or more received HR objects  according to rules specified in the schema . Similarly, the exemplary IT RD  transmits one or more IT objects to the MA . The MA  populates the CS  with the one or more IT objects  that the MA  receives from the IT RD . The MA  may transform, or otherwise format the one or more received IT objects  according to rules specified in the schema .","The exemplary HR objects  and the IT objects  may be aggregated into the aggregated space (AS)  during a synchronization process. For example, an HR object  may be joined with an exemplary aggregated objected , which corresponds to the HR object . The aggregated object  may correspond to the HR object  if the two objects are person objects, having the same \u201cname\u201d value for their \u201cname\u201d attributes.","Likewise, an IT object  and a Tele object  may be joined to the aggregated object . After the HR object , the IT object , and the Tele object  are joined to the aggregated object , attributes of the objects , , and  may be imported to the aggregated object . For example, the \u201cname\u201d attribute of the HR object  may be imported to the aggregated object , the \u201ce-mail address\u201d attribute of the IT object  may be imported to the aggregated object , and the \u201chome telephone\u201d attribute of the Tele object  may be imported to the aggregated object .","Attributes of the aggregated object  can be exported to joined objects in the connector space . For example, the \u201cname\u201d attribute of the aggregated object  may be exported to the IT object  and the Tele object . As another example, the \u201ce-mail address\u201d attribute of the aggregated object  may be exported to the HR object  and the Tele object . As a further example, the \u201chome telephone\u201d attribute of the aggregated object  may be exported to the IT object  and the HR object . After the attributes are exported, and the objects are synchronized, the HR objects, the IT objects, and the Tele objects may be transmitted to the HR RD , IT RD , and Tele RD , respectively.",{"@attributes":{"id":"p-0110","num":"0121"},"figref":["FIG. 7","FIGS. 2-6","FIG. 3","FIG. 3","FIG. 3"],"b":["700","700","302","308","306"]},"Such additional processes include, for example, data aggregating , and account managing . Further, such additional processes may have sub-processes. For example, data aggregating  may include joining , projecting , importing attributes , and join resolving . Joining , for example, is a process that may involve establishing a service to determine whether an attribute of an object in the connector space  will be joined with an object in the aggregated space . Account managing  may include provisioning , deprovisioning , exporting attributes , and object deleting . Staging  includes a data forming process  and a connector filtering process . Exporting  includes a data transforming process .","In general, such processes and\/or sub-processes may be carried out by any of a variety of modules described herein, including, one or more management agents (MA), a synchronization engine (SE), a rules engine (RE), or an MA controller. Any or all of such modules carry out the exemplary processes shown in  in accordance with rules and\/or specifications. Such rules and\/or specifications may be flexible and extensible and may be designed to ensure that the most valued, most correct, and\/or user-selected data reside in the aggregated space  and in one or more connected information sources , as appropriate to the particular setting.","In some implementations of the exemplary metadirectory  the processes in the exemplary OIMP  are executed in a relatively well-defined sequence; that is to say, the various parts of the exemplary OIMP  are not performed at random, haphazardly, or in total separation from each other. Many of the processes performed with respect to the OIMP  are done as specified in rules, as discussed throughout.","B.2. Exemplary <mv-data> and <ma-data> Formats","The configuration information  identified in  can include an MV.XML file (that contains changes that affect the metaverse), and also can contain a number of management agent (MA) files that each represent one management agent (MA). The file name for each MA consists of the prefix \u201cMA,\u201d followed by the MA's id. The lab system  can store these files with a read-only attribute so that they cannot be accidentally modified. The following excerpt identifies an exemplary listing of configuration files:",{"@attributes":{"id":"p-0116","num":"0127"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["07\/08\/2003 \u200208:23 AM","\u200210,457 MA-{2EC39297-5D21-4CAE-"]},{"entry":"8191-9E29AB0DD482} .XML"},{"entry":["07\/08\/2003 \u200208:23 AM","283,447 MA-{BA581110-8A6F-4BA4-"]},{"entry":"8135-FA1684FB6D4F} .XML"},{"entry":["07\/08\/2003 \u200208:23 AM","\u200220,651 MV.XML"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"However, before the details regarding the configuration process itself are disclosed, additional information is provided regarding the XML formats used in the XML files identified above. More specifically, the configuration of the production system  involves the creation and processing of two fragments: <ma-data> and <mv-data>. An exemplary composition of these fragments is set forth in the following sections.","The <mv-data> XML Element","The <mv-data> XML format can have the following exemplary high-level composition:",{"@attributes":{"id":"p-0120","num":"0131"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<mv-data>"]},{"entry":[{},"\u2003<format-version>1<\/format-version>"]},{"entry":[{},"\u2003Versioning information"]},{"entry":[{},"\u2003MV rule configuration"]},{"entry":[{},"\u2003Password sync configuration"]},{"entry":[{},"<\/mv-data>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"This format contains an element named \u201cformat-version\u201d which provides the version of XML formatting of this element.","The above-referenced versioning information may include the following elements:",{"@attributes":{"id":"p-0123","num":"0134"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<version>5<\/version>"]},{"entry":[{},"\u2003<schema>"]},{"entry":[{},"\u2003\u2003. . ."]},{"entry":[{},"\u2003<\/schema>"]},{"entry":[{},"\u2003<import-attribute-flow \/>"]},{"entry":[{},"\u2003<provisioning type=\u201cnone\u201d \/>"]},{"entry":[{},"\u2003<mv-deletion \/>"]},{"entry":[{},"\u2003<extension \/>"]},{"entry":[{},"\u2003<password-change-history-size \/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The version information generally conveys the version of the MV configuration. Higher numbers indicate later versions of the MV configuration. When the configuration logic  updates the MV, the old version number that the edit is based on is passed in. If this number is less than the current version stored in the metadirectory database , then the modification will fail. This behavior is designed to ensure that plural users that are concurrently editing the MV will not conflict with each other.","The schema element referred to above contains the schema of the metaverse. The schema can be implemented in DSML with extensions. The schema defines all attributes referred to by elements, such as import-attribute.","The import-attribute-flow element specifies the import attribute flow rules that govern how attributes of connector space (CS) objects are transferred to MV objects during import.","The provisioning element calls a provisioning script to handle object creation and deletion in all CD's. If the tag is missing or if the type attribute is \u201cnone,\u201d it means that no provisioning is specified for the installation of the metadirectory system.","The mv-deletion element specifies the import attribute flow rules that govern how attributes of connector space (CS) objects are transferred to Mv objects during import.","The extension element provides details regarding how to run an MV extension. Application protection can have two states: a \u201chigh\u201d state denotes out-of-proc and a \u201clow\u201d state denotes in-proc. If enable debugger is set to \u201ctrue,\u201d a script exception will result in launching a debugger; otherwise, the exception will be logged and the synchronization will continue. The complete exemplary format for this XML element is:",{"@attributes":{"id":"p-0130","num":"0141"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<extension>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<assembly-name>DLL name (string)<\/assembly-name>"]},{"entry":[{},"<application-protection> low | high <\/application-protection>"]},{"entry":[{},"<enable-debugger> true | false <\/enable-debugger>"]},{"entry":[{},"<timeout> integer value <\/timeout>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/extension>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The password-change-history-size element specifies the number of the password management operations that can be saved in the metadirectory database . In one exemplary implementation, the default value is 24.","The <ma-data> XML Element","An exemplary high level overview of the <ma-data> XML format is as follows:",{"@attributes":{"id":"p-0134","num":"0145"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<ma-data>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<format-version>1<\/format-version>"]},{"entry":[{},"Naming information"]},{"entry":[{},"Versioning information"]},{"entry":[{},"Generic MA rule configuration"]},{"entry":[{},"Controller configuration"]},{"entry":[{},"Password sync configuration"]},{"entry":[{},"UI configuration"]},{"entry":[{},"Private configuration"]},{"entry":[{},"Encrypted attribute configuration"]},{"entry":[{},"Partition configuration"]},{"entry":[{},"Run Profile configuration"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/ma-data>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The <format-version> element has the same meaning as described in the above <mv-data> section. The remainder of the sub-elements are described in the following sections.","Naming Information","In the above format, the naming information refers to a grouping of elements that provide the highest level information about the MA. In one exemplary implementation, all elements in this grouping should be specified to the DCOM interface when an MA is created. The following excerpt provides an example of the naming information.",{"@attributes":{"id":"p-0138","num":"0149"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<id>{3F5AA741-626E-483F-BB2D-EE0F5E73CE02}<\/id>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<name>Ad Shadow<\/name>"]},{"entry":[{},"<category>AD<\/category>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The id element refers to a GUID that uniquely defines the MA in the metadirectory system. It should be provided to the production system  on all calls involving creation or modification of an MA. Once the MA is created this id never changes. Some considerations applicable to the naming information are as follows. (1) When an MA is exported via an \u201cExport Management Agent\u201d or \u201cExport Server Configuration\u201d processes, a GUID corresponding to the MA is saved to the configuration file. (2) When a new MA is created using a \u201cCreate\u201d process provided by the configuration logic , the configuration logic  generates a new GUID and includes this new GUID when it sends the XML to the metadirectory system through DCOM. (3) When a new MA is created using an \u201cImport Management Agent\u201d process provided by the configuration logic , the configuration logic  generates a new GUID and uses this new GUID instead of whatever GUID may be in the exported configuration file when the XML is sent to the metadirectory system. This allows the exported MA configurations to be used as MA templates. (4) When a new MA is created as part of an \u201cupdate MA From File\u201d process or the \u201cImport Server Configuration\u201d process, the GUID in the export file is passed to the metadirectory system. This allows the production system  to update the existing design of the MA.","The \u201cname\u201d element refers to a non-empty string that provides the UI display name of an MA in the metadirectory system. The metadirectory system forces this string to be unique. The metadirectory system also places restrictions on the characters appearing in the name and the length of the name. This is because the metadirectory system uses this name as the name of a file system directory on the production system , and therefore it should meet certain requirements in connection therewith. In one exemplary implementation, the length limit is 80 characters. The name can be modified by the user, and if so, will be included in the MA XML on modify calls. If it is not being modified, it does not need to be included in the XML on modification calls.","The category information refers to \u201cMA type\u201d as shown by the user interface functionality of the metadirectory system. In one implementation, this type cannot be changed once the MA has been created. In one exemplary implementation, supported types include: LDAP types (e.g., AD, ADAM, AD GAL, iPlanet, Exchange, Exchange GAL, eDirectory, etc.); File types (e.g., FIXED, DELIMITED, AVP, LDIF, DSML, etc.); and various other types (e.g., MSSQL, Oracle, NT, Notes, etc.).","Versioning Information","The versioning information refers to a grouping of elements that provides versioning information regarding the MA design. All elements in this grouping are read-only and are returned by the production system  for informational purposes. An example of the versioning information is listed below:",{"@attributes":{"id":"p-0144","num":"0155"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<creation-time>2002-07-23 17:12:23.699<\/creation-time>"]},{"entry":[{},"<last-modification-time>2002-07-23 19:21:17.699<\/last-"]},{"entry":[{},"modification-time>"]},{"entry":[{},"<version>5<\/version>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In this excerpt, the element creation-time refers to the time (e.g., in GMT) when the MA was created on the metadirectory system.","The last-modification-time refers to the time (e.g., in GMT) when the design of the MA was last modified on the metadirectory system.","The version information indicates the version of the MA configuration. Higher numbers indicate later versions of the MA's configuration. When the configuration logic  updates an MA, the old version number that the edit is based on is passed in. If this number is less than the current version stored in the metadirectory system database , the modification will fail. This behavior is designed to prevent multiple users who may be editing the same MA from negatively impacting each other.","Generic MA Rule Configuration Information","The generic MA rule configuration information refers to a grouping of elements that convey the MA rule configuration that the user has configured for the MA in generic MA configuration pages. It also includes the schema and attribute inclusion which may be defaulted or obtained from the MA depending on the type of MA. The following excerpt provides an example of how the generic MA rule configuration information would appear if the user did not do any configuration in the generic MA configuration pages.",{"@attributes":{"id":"p-0150","num":"0161"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<schema>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/schema>"]},{"entry":[{},"<attribute-inclusion>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<attribute>description<\/attribute>"]},{"entry":[{},"<attribute>displayname<\/attribute>"]},{"entry":[{},"<attribute>givenname<\/attribute>"]},{"entry":[{},"<attribute>manager<\/attribute>"]},{"entry":[{},"<attribute>member<\/attribute>"]},{"entry":[{},"<attribute>samaccountname<\/attribute>"]},{"entry":[{},"<attribute>sn<\/attribute>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/attribute-inclusion>"]},{"entry":[{},"<stay-disconnector \/>"]},{"entry":[{},"<join \/>"]},{"entry":[{},"<projection \/>"]},{"entry":[{},"<export-attribute-flow \/>"]},{"entry":[{},"<provisioning-cleanup type=\u201cdeclared\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<action>make-explicit-disconnector<\/action>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/provisioning-cleanup>"]},{"entry":[{},"<extension>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<assembly-name>IFMA.dll<\/assembly-name>"]},{"entry":[{},"<application-protection>low<\/application-protection>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/extension>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The schema element referred to in the above-identified excerpt provides a description of the MA schema in DSML format. All attributes referred to by the elements which follow (attribute-inclusion, stay-disconnector, etc.) are defined in the schema. This schema is built up according to the following exemplary rules depending on the type of CD.","The following rules apply to LDAP types. (1) For AD and AD\/AM types, the schema is discovered dynamically by the MA from the AD forest. The MA formats that schema into DSML (this formatting process can include special case logic). The configuration logic  queries the MA for this schema and includes an indication in the XML when the MA is imported. (2) For IPLANET types, the schema is discovered dynamically by the MA from the IPLANET server. The MA formats that schema into DSML (again, this formatting process can include special case logic). In the case of IPLANET 4.0, the configuration logic  will post-decorate the schema from the MA, marking the attributes involved in the anchor construction as immutable. (3) For EXCHANGE 5.5 and EXCHANGE 5.5. GAL types, the schema is discovered dynamically by the MA from the Exchange server. The MA formats that schema into DSML (again, this formatting process includes some special case logic). (4) For eDirectory types, the schema is discovered dynamically by the MA from the eDirectory server and the MA formats that schema into DSML (again this formatting process includes some special case logic).","The following rules apply to File types. For all file types, the configuration logic  generates the DSML schema based on discovery of the sample file data and annotation the user enters using a wizard. Attributes that make up the anchor are declared as immutable. For FIXED, DELIMITED, and AVP formats, attributes that are specified as the hierarchical DN, change type, or object class will not be included in the schema unless they are also declared to be part of the overall anchor or a per object type anchor.","The following rules apply to so-called other types. (1) For MSSQL and ORACLE types, the MA reports the underlying database schema (in a private XML non-DSML format) to the configuration logic . The configuration logic  generates the DSML representation based on user selection. This is because the user can select which attributes form the primary key (and thus the user needs to mark these attributes as immutable). Also, the user can indicate that certain attributes are reference attributes. (2) For NT types, the MA reports a fixed schema to the configuration logic  that models the NT 4.0 SAM database structure. (3) For Notes types, forms and subforms are used in Notes for the schema information. From version 5.0, Notes supports LDAP v3. The Notes system generates a schema50.nsf file to map the Notes-specific schema to an LDAP schema. The schema50.nsf contains all the schema information that is needed. Since it is an .nsf file, the same method used for import can be used to retrieve the information from the file. (Basically, this application reads each of the Notes in the .nsf file and gets all the field information). An extra step converts the output to DSML format.","The attributes-inclusion element lists attributes from the CD that the MA should import. Only attributes that appear in this list can be part of any of the sub-elements which follow (e.g., stay-disconnector, join, project, import attribute flow, export attribute flow, etc). This list applies to all partitions in the MA. If this section is missing or empty, deltas will only be imported with DN, anchor, and modification type.","The stay-disconnector element specifies whether a CS entry should stay as a disconnector in CS, or get passed in the metadirectory system sync cycle. Exemplary functionality and formats for this element are described in the appendix section of this disclosure.","The join element governs how the synchronization engine should search the MV for CS objects to join. Exemplary functionality and formats for this element are described in the appendix section of this disclosure.","The project element governs how (if any) CS objects are projected as new entries in the MV. Exemplary functionality and formats for this element are described in the appendix section of this disclosure.","The export-attribute-flow element governs how values of attributes of MV objects should be flown back to connected CS objects. Exemplary functionality and formats for this element are described in the appendix section of this disclosure.","The provisioning-cleanup rule or extension is called for a CS object when either (1) the MV provisioning script disconnects that object or (2) the MV object (CS object) it is joined to is deleted. The default behavior is to make an explicit disconnector based on the CS object. This rule will not be called if the object is disconnected by the Account Joiner or a delete on this object is imported from the CD. An exemplary complete format for this XML sub-element is:",{"@attributes":{"id":"p-0161","num":"0172"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<provisioning-cleanup type=\u201cdeclared | scripted\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<action>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"delete-object |"]},{"entry":[{},"make-normal-disconnector |"]},{"entry":[{},"make-explicit-disconnector"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/action>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/provisioning-cleanup>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The extension element appears when one or more of the above sub-elements requires a .NET extension DLL for evaluation. It identifies the name of the assembly to use and indicates whether to run the extension within the metadirectory system process (application-protection=low) or outside the metadirectory system process (application-protection=high). A complete exemplary format for this XML sub-element is:",{"@attributes":{"id":"p-0163","num":"0174"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<extension>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<assembly-name>DLL name (string)<\/assembly-name>"]},{"entry":[{},"<application-protection>high|low<\/application-protection>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/extension>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Controller Configuration Information","The controller configuration information controls how the controller should run the MA. An exemplary XML structure for this element is as follows:",{"@attributes":{"id":"p-0166","num":"0177"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<controller-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<application-protection>low<\/application-protection>"]},{"entry":[{},"<impersonation>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<domain>ntdev<\/domain>"]},{"entry":[{},"<user>maxb<\/user>"]},{"entry":[{},"<password>mypassword <\/password>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/impersonation>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/controller-configuration>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The application-protection element in the above XML structure indicates whether the controller should run in a separate process (\u201chigh\u201d) or in the same process (\u201clow\u201d) as the metadirectory NT service.","The impersonation element is present only if the controller should impersonate another identity whenever it makes calls into the MA DLL. This feature is a general controller feature that has been added to make it possible to run the DBMA with the SQLOLEDB or ORACLE provider using Windows Authentication as a different user identity than the metadirectory service.","More specifically, if this element is present, the <domain> and <user> sub-elements should both be present (omission of the <password> element indicates that there is no password). If no impersonation context needs to be configured, the entire <impersonation> context is omitted. When the <controller-configuration> element is fetched from the metadirectory service, the password element is not returned (for security reasons).","Password Sync Configuration Information","The password sync configuration information controls whether the MA calls of \u201cset password\u201d and \u201cchange password\u201d can be used for this MA.","<password-sync-allowed>1|0<\/password-sync-allowed>","If the inner value is 1, the \u201cset password\u201d and \u201cchange password\u201d calls will be allowed (subject to whether this is supported by this MA type and normal security). If the inner value is 0, the calls will fail accompanied by a diagnostic error. The default value is 0.","UI Configuration Information","The UI configuration information refers to a grouping of sub-elements that saves information that is used by the UI. This information is ignored by both the production system  server and the MA DLL. An example of the UI configuration element follows:",{"@attributes":{"id":"p-0176","num":"0187"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<description>My description<\/description>"]},{"entry":[{},"<ma-ui-settings>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<account-joiner-queries>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/account-joiner-queries>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/ma-ui-settings>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In this example, the description element refers to a text description used to record any information about an MA that a user may wish to record. This description is shown on a first page of the MA property pages.","The ma-ui-settings element is used by the UI to describe per-MA settings made by the user. For instance, a setting can be recorded for an account joiner page. For reference, the inner XML contains the following sub-elements:","\u201cAttributes\u201d records the columns configured for the upper grid of CS objects and the lower grid of MV objects.",{"@attributes":{"id":"p-0180","num":"0191"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<attributes>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<cs>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<attribute name=\u201cDN\u201d header=\u201cDN\u201d size=\u201c100\u201d \/>"]},{"entry":[{},"<attribute name=\u201cobjectType\u201d header=\u201cobjectType\u201d size=\u201c100\u201d \/>"]},{"entry":[{},"<attribute name=\u201cdisplayname\u201d header=\u201cdisplayname\u201d size=\u201c100\u201d \/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/cs>"]},{"entry":[{},"<mv>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<attribute name=\u201cdisplayName\u201d header=\u201cdisplayName\u201d"]},{"entry":[{},"size=\u201c100\u201d \/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/mv>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/attributes>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"\u201cFilters\u201d records the filter used for searching for the MV objects which match the selected CS object.",{"@attributes":{"id":"p-0182","num":"0193"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<filters max_mv_search_results=\u201c\u2009\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<filter name=\u201cFilter 1\u201d"]},{"entry":[{},"collation=\u201cSQL_Latin1_General_CP1_CI_AS\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"searchscope=\u201cperson\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<element\u2003cdattribute=\u201cdisplayname\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"mvattribute=\u201cdisplayName\u201d mvtextflag=\u201ctrue\u201d"]},{"entry":[{},"elementoperator=\u201cexact\u201d \/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/filter>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/filters>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The reason that this information is stored with the MA instead of in a file on the local client machine is because this strategy allows the administrator to set up the display columns and filter criteria so that these can be used by persons using the account joiner screen.","In contrast, the MV and CS search settings are stored per machine. The users of MV and CS search are likely individual users with administrator privilege who each have their own personal search preferences.","Private Configuration Information","The private configuration information refers to the private configuration of the MA, as specified by the <private-configuration> element. Within this element, the format is MA-specific and is generally information that is shared between the MA UI and MA DLL.","The following examples apply to LDAP types. To begin with, the following provides an example of AD private configuration:",{"@attributes":{"id":"p-0188","num":"0199"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<private-configuration>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<adma-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<forest-guid>...<\/forest-guid>"]},{"entry":[{},"<forest-name>mms-sh1-corp.nttest.microsoft.com<\/forest-name>"]},{"entry":[{},"<forest-login-domain>mms-sh1-corp<\/forest-login-domain>"]},{"entry":[{},"<forest-login-user>administrator<\/forest-login-user>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/adma-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/private-configuration>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following provides an example of AD\/AM private configuration:",{"@attributes":{"id":"p-0190","num":"0201"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<private-configuration>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<adma-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<forest-name>mms-sh1-corp.nttest.microsoft.com<\/forest-name>"]},{"entry":[{},"<forest-port>389<\/forest-port>"]},{"entry":[{},"<forest-login-domain>mms-sh1-corp<\/forest-login-domain>"]},{"entry":[{},"<forest-login-user>administrator<\/forest-login-user>"]},{"entry":[{},"<sign-and-seal>1|\u20090<\/sign-and-seal>"]},{"entry":[{},"<ssl-bind>1|\u20090<\/ssl-bind>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/adma-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/private-configuration"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The following provides an example for iPlanet 5.x and iPlanet 4.x private configuration:",{"@attributes":{"id":"p-0192","num":"0203"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<private-configuration>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<ipma-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<default-server>mms-ip5-bvt<\/default-server>"]},{"entry":[{},"<default-login-user>cn=Directory Manager<\/default-login-user>"]},{"entry":[{},"<default-port>389<\/default-port>"]},{"entry":[{},"<default-ssl-bind>0<\/default-ssl-bind>"]},{"entry":[{},"<ui-data>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<session>{107D1AA1-49C6-4AA0-BC59-"]},{"entry":[{},"CC0DAC930311}<\/session>"]},{"entry":[{},"<server-type>SERVER_TYPE_IPLANET5<\/server-type>"]},{"entry":[{},"<supportchangelog>1<\/supportchangelog>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/ui-data>"]},{"entry":[{},"<\/ipma-configuration>"]},{"entry":[{},"<\/private-configuration>"]},{"entry":[{},"<private-configuration>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<ipma-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<default-server>nt4-riplanet<\/default-server>"]},{"entry":[{},"<default-login-user>cn=Directory Manager<\/default-login-user>"]},{"entry":[{},"<default-port>389<\/default-port>"]},{"entry":[{},"<default-ssl-bind>0<\/default-ssl-bind>"]},{"entry":[{},"<ui-data>"]},{"entry":[{},"<session><\/session>"]},{"entry":[{},"<server-type>SERVER_TYPE_IPLANET4<\/server-type>"]},{"entry":[{},"<supportchangelog>1<\/supportchangelog>"]},{"entry":[{},"<\/ui-data>"]},{"entry":[{},"<anchor-attributes>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<anchor-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<name>cn<\/name>"]},{"entry":[{},"<object-type>person<\/object-type>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/anchor-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/anchor-attributes>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/ipma-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/private-configuration>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The following provides an example of private configuration for EXCHANGE 5.5. GAL:",{"@attributes":{"id":"p-0194","num":"0205"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<private-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<exma-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<default-server>default server name for OU, schema,"]},{"entry":[{},"and server discovery<\/default-server>"]},{"entry":[{},"<default-login-domain>domain<\/default-login-domain>"]},{"entry":[{},"<default-login-user>user<\/default-login-user>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/exma-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/private-configuration>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following provides an example of private configuration for eDirectory:",{"@attributes":{"id":"p-0196","num":"0207"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<private-configuration>"},{"entry":"\u2003<edma-configuration>"},{"entry":"\u2003\u2003<default-server>mms-edirectory3<\/default-server>"},{"entry":"\u2003\u2003<default-login-user>cn=admin, o=mmstest<\/default-login-user>"},{"entry":"\u2003\u2003<default-ssl-bind>0<\/default-ssl-bind>"},{"entry":"\u2003\u2003<default-port>389<\/default-port>"},{"entry":"\u2003<\/edma-configuration>"},{"entry":"<\/private-configuration>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The following examples apply to so-called other types. To begin with, the following provides an example of SQLOLEDB private configuration:",{"@attributes":{"id":"p-0198","num":"0209"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<private-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<oledbma-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<connection-info>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<authentication>integrated<\/authentication>"]},{"entry":[{},"<provider>SQLOLEDB<\/provider>"]},{"entry":[{},"<server>....<\/server>"]},{"entry":[{},"<databasename>....<\/databasename>"]},{"entry":[{},"<tablename>....<\/tablename>"]},{"entry":[{},"<delta-tablename>....<\/delta-tablename>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/connection-info>"]},{"entry":[{},"<mms-info>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<column-info>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<column>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<name>id<\/name>"]},{"entry":[{},"<data-type>DBTYPE_STR<\/data-type>"]},{"entry":[{},"<length>11<\/length>"]},{"entry":[{},"<isnullable>0<\/isnullable>"]},{"entry":[{},"<isreadonly>0<\/isreadonly>"]},{"entry":[{},"<mms-type>String<\/mms-type>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/column>"]},{"entry":[{},"<column>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<name>manager<\/name>"]},{"entry":[{},"<data-type>DBTYPE_STR<\/data-type>"]},{"entry":[{},"<length>40<\/length>"]},{"entry":[{},"<isnullable>0<\/isnullable>"]},{"entry":[{},"<isreadonly>0<\/isreadonly>"]},{"entry":[{},"<mms-type dn=\u20181\u2019>String<\/mms-type>"]},{"entry":[{},"<\/column>"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/column-info>"]},{"entry":[{},"<delta-info>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<extra-columns> ... <\/extra-columns>"]},{"entry":[{},"<change-column> ... <\/change-column>"]},{"entry":[{},"<add> ... <\/add>"]},{"entry":[{},"<update> ... <\/update>"]},{"entry":[{},"<delete> ... <\/delete>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/delta-info>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<anchor>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<attribute>au_id<\/attribute>"]},{"entry":[{},"<\/anchor>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<object-type>person<\/object-type>"]},{"entry":[{},"<\/mms-info>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/oledbma-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/private-configuration>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In the above example, note that \u201cdelta-tablename\u201d is only included when deltas are configured. When deltas are configured, the \u201cdelta-info\u201d element should also be included. The \u201cextra-columns\u201d element is only used by the configuration logic UI; it indicates the columns not in the main table that can be displayed in the change column picker.","The following provides an example of ORACLE private configuration:",{"@attributes":{"id":"p-0201","num":"0212"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<private-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<oledbma-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<connection-info>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<authentication>integrated<\/authentication>"]},{"entry":[{},"<provider>MSDAORA<\/provider>"]},{"entry":[{},"<datasource>....<\/datasource>"]},{"entry":[{},"<tablename>....<\/tablename>"]},{"entry":[{},"<delta-tablename>....<\/delta-tablename>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/connection-info>"]},{"entry":[{},"<mms-info>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<column-info>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<column>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<name> id<\/name>"]},{"entry":[{},"<data-type>DBTYPE_STR<\/data-type>"]},{"entry":[{},"<length>11<\/length>"]},{"entry":[{},"<isnullable>0<\/isnullable>"]},{"entry":[{},"<isreadonly>0<\/isreadonly>"]},{"entry":[{},"<mms-type>String<\/mms-type>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/column>"]},{"entry":[{},"<column>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<name>manager<\/name>"]},{"entry":[{},"<data-type>DBTYPE_STR<\/data-type>"]},{"entry":[{},"<length>40<\/length>"]},{"entry":[{},"<isnullable>0<\/isnullable>"]},{"entry":[{},"<isreadonly>0<\/isreadonly>"]},{"entry":[{},"<mms-type dn =\u20181\u2019>String<\/mms-type>"]},{"entry":[{},"<\/column>"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/column-info>"]},{"entry":[{},"<delta-info>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<extra-columns> ... <\/extra-columns>"]},{"entry":[{},"<change-column> ... <\/change-column>"]},{"entry":[{},"<add> ... <\/add>"]},{"entry":[{},"<update> ... <\/update>"]},{"entry":[{},"<delete> ... <\/delete>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/delta-info>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<anchor>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002<attribute>au_id<\/attribute>"]},{"entry":[{},"<\/anchor>"]},{"entry":[{},"<object-type>person<\/object-type>"]},{"entry":[{},"<\/mms-info>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/oledbma-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/private-configuration>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The configuration format for ORACLE is very similar to SQLOLEDB except for the connection information.","The following provides an example of NT private configuration:",{"@attributes":{"id":"p-0204","num":"0215"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<private-configuration>"]},{"entry":[{},"\u2003<ntma-configuration>"]},{"entry":[{},"\u2003\u2003<domain>ntma1<\/domain>"]},{"entry":[{},"\u2003\u2003<login-user>administrator<\/login-user>"]},{"entry":[{},"\u2003\u2003<login-domain>ntma1<\/login-domain>"]},{"entry":[{},"\u2003<\/ntma-configuration>"]},{"entry":[{},"<\/private-configuration>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The following provides an example of NOTES private configuration:",{"@attributes":{"id":"p-0206","num":"0217"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<private-configuration>"},{"entry":"\u2003<lnma-configuration>"},{"entry":"\u2003\u2003<server>mms-domino4\/Redmond<\/server>"},{"entry":"\u2003\u2003<userid>C:\\mmsbvt\\Notes4Admin.id<\/userid>"},{"entry":"\u2003\u2003<cookie>PL1\/ABJtJQg=<\/cookie>"},{"entry":"\u2003\u2003<ou-list>"},{"entry":"\u2003\u2003\u2003<item>"},{"entry":"\u2003\u2003\u2003\u2003<nab>names.nsf<\/nab>"},{"entry":"\u2003\u2003\u2003\u2003<ou>0=Redmond<\/ou>"},{"entry":"\u2003\u2003\u2003\u2003<certifier-path>C:\\mmsbvt\\Notes4RCert.id<\/certifier-path>"},{"entry":"\u2003\u2003\u2003<\/item>"},{"entry":"\u2003\u2003<\/ou-list>"},{"entry":"\u2003<\/lnma-configuration>"},{"entry":"<\/private-configuration>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Encrypted Attributed Configuration Information","The encrypted attribute configuration information servers two purposes: (1) It is used by the configuration logic UI to convey password information from the MA UI to the metadirectory system when creating or updating MA credential information; (2) It is used by the metadirectory system to pass the MA DLL credentials information at the start of each run.","The basic exemplary format of this information is:",{"@attributes":{"id":"p-0210","num":"0221"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<encrypted-attributes>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<attribute name=\u201cfoo\u201d partition=\u201cbar\u201d>value<\/attribute>"]},{"entry":[{},"<attribute name=\u201cfoo\u201d partition=\u201cbar\u201d>value<\/attribute>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/encrypted-attributes>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The production system server implements the semantics when the UI submits a <encrypted-attributes> element. In connection therewith, each <attribute> element with a name\/partition value combination which is different from what is currently stored for the MA and has a non-empty value is added to the list of attribute> elements stored for the MA. Further, if an <attribute> element matches an existing element by name and partition and the value is nonempty, then the existing element's value is replaced with the one submitted. Further, if an <attribute> element matches an existing element by name and partition but its value is empty, then the existing element is removed from the list of encrypted attributes stored for the MA.","The meanings of the \u201cname\u201d and \u201cpartition\u201d attributes are MA-specific, and indeed, the partition attribute is not even required. Generally, \u201cname\u201d represents the name of the attribute that needs to be encrypted and the partition is the name of the partition that this attribute is associated with.","For AD LDAP types, one <attribute> element with name=\u201cpassword\u201d and no partition attribute is stored to record the credentials information for the forest.","For AD\/AM LDAP types, one <attribute> element with name=\u201cpassword\u201d and no partition attribute is stored to record the credentials information for the production system server.","For SQLOLEDB and ORACLE (other types), when using SQL or ORACLE security mode, there will be one <attribute> element with name=\u201cpassword\u201d and no partition attribute. This represents the database password of the account sent to the production system server.","Partition Configuration Information","The following section describes the \u201cpartitions\u201d of the MA. MA's consist of one or more partitions, each partition having a specified container\/object type filter criteria associated with it. By definition, the filter criteria of different partitions are required to be disjoint.","The overall exemplary format for this element is:",{"@attributes":{"id":"p-0219","num":"0230"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<ma-partition-data>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<partition> . . .<\/partition>"]},{"entry":[{},"<partition> . . .<\/partition>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/ma-partition-data>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The format for storing the configuration of a partition mimics the storage of the configuration of an MA on a whole in some ways:",{"@attributes":{"id":"p-0221","num":"0232"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<partition>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Naming information"]},{"entry":[{},"Versioning information"]},{"entry":[{},"Partition details"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/partition>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The above-identified partition naming information refers to a grouping of sub-elements that describes the highest level information regarding the partition. All sub-elements in this grouping should be specified when the partition is created through DCOM. The following shows how the naming information appears according to one implementation:",{"@attributes":{"id":"p-0223","num":"0234"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<id>{3F5AA741-626E-483F-BB2D-EE0F5E73CE02}<\/id>"]},{"entry":[{},"<name>DC=africa,DC=mms-sh1-corp,DC=nttest,"]},{"entry":[{},"DC=microsoft,DC=com<\/name>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In this excerpt, the id refers to a GUID that uniquely defines the partition in the system. It should be given to the production system server on all calls involving creation or modification of an MA partition. Once a partition is created, this id does not change. The following additional considerations apply to this topic: (1) When an MA is exported via the \u201cExport To File\u201d or \u201cSave Server Configuration\u201d processes, the id for each partition is saved to the file. (2) When a new MA is created using the \u201cCreate\u201d process from the configuration logic UI, the metadirectory system administrative client generates a new GUI) and includes it when it sends the XML to the metadirectory system through a DCOM call. (3) When a new MA is created using the \u201cImport Management Agent\u201d process from the configuration logic UI, the metadirectory system administrative client generates new GUID's for each of the partitions and uses these instead of the GUID's in the export file when it sends the XML to the metadirectory system. The reason for this is to enable the exported MA configurations to be used as MA templates. (4) When a new MA is created as part of the \u201cUpdate MA from File\u201d or the \u201cImport Server Configuration\u201d processes, the GUID in the export file is passed to the metadirectory system. This allows the server to match up the partitions in the file with those in the MA on the target production system.","The name element refers to a non-empty string that the configuration logic UI displays for the partition. In one exemplary implementation, the length limit can be 400 characters and characters \u2018<\u2019, \u2018>\u2019, \u2018&\u2019, \u2018\\\u2019, \u2018\\\u2033\u2019, and \u201c]\u201d are disallowed in the name. The configuration logic UI chooses the name according to the following rules:","The following rules apply to LDAP types. For AD or AD\/AM, a partition corresponds to a DNC or NDNC. The name is the DN of the DNC or NDNC in AD. For IPLANET, a partition corresponds to an iPlanet server partition. The name is the DN of the partition on the server. For EXCHANGE 5.5, a partition corresponds to an Exchange \u201csite.\u201d The name is the X.500 DN of the OU. For EXCHANGE 5.5. GAL, this MA has exactly one partition named \u201cdefault.\u201d For eDirectory, this MA has exactly one partition named \u201cdefault.\u201d","As to all File types, most users will have only one partition which is named \u201cdefault,\u201d but users can create additional partitions for different object types.","For all other types, these MA's each have exactly one partition named \u201cdefault.\u201d","The partition version information refers to a grouping of sub-elements that provides versioning information about the partition configuration. All sub-elements in this grouping are read-only and are returned by the server for informational purposes. The following provides an example of the structure of such information:",{"@attributes":{"id":"p-0230","num":"0241"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<creation-time>2002-07-23 17:12:23.699<\/creation-time>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<last-modification-time>2002-07-23 19:21:17.699<\/last-modification-"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"time>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<version>5<\/version>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The creation-time element refers to the time (in GMT) when the partition was created on the metadirectory system. The last-modification-time element refers to the time (in GMT) when the partition configuration was last modified on the metadirectory system. The version element indicates the version of the partition configuration. Higher numbers indicate later versions of the configuration. When a partition is updated, the old version number the edit is based on is passed in. If this number is less than the current version stored in the metadirectory system database , the modification will fail.","The partition details information refers to a grouping of elements that specifies the actual configuration of the partition. An exemplary structure for this element is as follows:",{"@attributes":{"id":"p-0233","num":"0244"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<selected>0<\/selected>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<filter>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<object-classes>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<object-class>contact<\/object-class>"]},{"entry":[{},"<object-class>container<\/object-class>"]},{"entry":[{},"<object-class>group<\/object-class>"]},{"entry":[{},"<object-class>user<\/object-class>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/object-classes>"]},{"entry":[{},"<containers>"]},{"entry":[{},"<exclusions\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<inclusions>"]},{"entry":[{},"<inclusion>DC=africa,DC=mms-sh1-"]},{"entry":[{},"\u2002corp,DC=nttest,DC=microsoft,DC=com<\/inclusion>"]},{"entry":[{},"<\/inclusions>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/containers>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/filter>"]},{"entry":[{},"<custom-data>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/custom-data>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In the above structure, the selected element provides a bit value (1 or 0) indicating whether the partition has been selected by the user in the configuration logic UI for configuration. The following breakdown indicates MA specific information about this bit:","For AD, AD\/AM, IPLANET, and Exchange 5.5 LDAP types, this bit corresponds to whether the partition has been \u201cchecked\u201d in the configuration logic UI.","For EXCHANGE 5.5. GAL LDAP types, the single partition is marked selected.","For all file types, all partitions are marked as selected.","For all other types, the single partition is marked selected.","As can seen from the above breakdown, this bit is really only of interest in the case of LDAP MA's such as AD, iPlanet, and Exchange 5.5, which have multiple partitions which the user can either configure or leave unconfigured. Runs against unconfigured (that is, unselected) partitions are expected to fail, and the configuration logic UI should not allow configuration of the partition (or creating run profiles) with unselected partitions.","The filter element is used by the MA to determine which objects to import into the CS. The metadirectory system architecture allows MA's to filter on both object types and containers (DN). Consequently, there are two elements to this XML format: \u201cobject-classes\u201d and \u201ccontainers.\u201d","In the \u201cobject-classes\u201d section, a user can specify what object type to participate in the synchronization process (inclusion). In the \u201ccontainers\u201d section, the user can specify which container to include as well as which to exclude (both inclusion and exclusion). During filtering, for each DN, the inclusion\/exclusion list is searched to find the longest ancestor. If the longest ancestor is included, the DN is included, if the longest ancestor is excluded, the DN is excluded.","The following breakdown provides the MA-specific semantics related to filtering for LDAP types (e.g., for AD, AD\/AM, IPLANET, Exchange 5.5, EXCHANGE 5.5. GAL, and eDirectory). Regarding object type inclusion, these MA's support a single object type inclusion filter that applies to all partitions. Even though the object type filter is specified for each partition, a properly configured MA of this type will have the same object type configuration for each of its partitions. Regarding container filtering, container filtering is per partition. The users can use the container picker to select the desired containers to import from. The MA-specific UI generates inclusion\/exclusion rules corresponding to the container picker selections. The MA adds in exclusion filter conditions to ensure there is no overlap between parent and child domains.","For all file types, there is no container filtering support. Partitions are defined exactly by what object types they contain.","The following considerations apply to so-called other types. For MSSQL and ORACLE, there is no filtering support. If users want a filtered view of the table they are expected to define a view and configure their MA to operate off that view. For NT 4.0, there is no container filtering support, but users can filter on object classes. For NOTES, there is no container filtering support, but users can filter on object classes.","The custom-data element refers to an MA-specific XML format to record additional information about the partition.","The following excerpt shows custom data for an AD partition:",{"@attributes":{"id":"p-0247","num":"0258"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<custom-data>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<adma-partition-data>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<dn>DC=africa,DC=mms-sh1-corp,DC=nttest,"]},{"entry":[{},"DC=microsoft,DC=com<\/dn>"]},{"entry":[{},"<name>africa.mms-sh1-corp.nttest.microsoft.com<\/name>"]},{"entry":[{},"<guid>{BA84A62C-504E-44B9-9FFE-CF52028B4A36}<\/guid>"]},{"entry":[{},"<is-domain>1<\/is-domain>"]},{"entry":[{},"<sign-and-seal>1<\/sign-and-seal>"]},{"entry":[{},"<preferred-dcs>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<preferred-dc> . . . <\/preferred-dc>"]},{"entry":[{},"<preferred-dc> . . . <\/preferred-dc>"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/preferred-dcs>"]},{"entry":[{},"<dc-failover>1<\/dc-failover>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/adma-partition-data>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/custom-data>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In this example, \u201cdn\u201d refers to the DN of AD naming context, \u201cname\u201d refers to the NetBIOS name of the naming context, \u201cGUID\u201d refers to the AD's GUID (unchanging id) for the naming context, \u201cis-domain\u201d indicates whether it is a DNC or NDNC, \u201csign-and-seal\u201d indicates whether the user has checked the sign-and-seal option in the UI, \u201cpreferred-dcs\u201d is the list of preferred DC's to use when connecting to this naming context in priority order, \u201cdc-failover\u201d indicates whether the user wants the MA to failover to DC's not specified in the preferred DC list, \u201clast-dc\u201d is the last DC used for a run on this partition (which is only present if MA has been run on this partition), \u201ccookie\u201d refers to the current watermark from DirSync from last import run (which is only present if MA has been run on this partition), \u201clogin-domain\u201d refers to a domain that, if the customer has configured specific credentials for this partition, then this gives the domain, \u201clogin-user\u201d refers to an account that, if the customer has configured specific credentials for this partition, then this gives the account.","The following provides an example of the custom data for an IPLANET partition:",{"@attributes":{"id":"p-0250","num":"0261"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<custom-data>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<ipma-partition-data>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<dn>o=bvts<\/dn>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<port>389<\/port>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<ssl-bind>0<\/ssl-bind>"]},{"entry":[{},"<last-change-number>10315<\/last-change-number>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/ipma-partition-data>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/custom-data>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following example provides custom data for EXCHANGE 5.5. GAL:",{"@attributes":{"id":"p-0252","num":"0263"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<custom-data>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<exma-partition-data>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<dn>partition DN<\/dn>"]},{"entry":[{},"<last-server>server<\/last-server>"]},{"entry":[{},"<preferred-servers>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<server>preferred server<\/server>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/preferred-servers>"]},{"entry":[{},"<available-servers>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<server>available server<\/server>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/available-servers>"]},{"entry":[{},"<server-failover>1 or 0<\/server-failover>"]},{"entry":[{},"<use-ssl>1 or 0<\/use-ssl>"]},{"entry":[{},"<highest-usn>primary watermark value<\/highest-usn>"]},{"entry":[{},"<highest-timestamp>secondary watermark"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"value<\/highest-timestamp>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/exma-partition-data>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/custom-data>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following example provides custom data for AD\/AM:",{"@attributes":{"id":"p-0254","num":"0265"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<custom-data>"},{"entry":"\u2003<adma-partition-data>"},{"entry":"\u2003\u2003<dn>CN=ADAM-BVTs<\/dn>"},{"entry":"\u2003\u2003<name>CN=ADAM-BVTs<name>"},{"entry":"\u2003\u2003<guid>{F08F99E2-B823-4AB5-9725-57F9949C251E}<\/guid>"},{"entry":"\u2003\u2003<sign-and-seal>1<\/sign-and-seal>"},{"entry":"\u2003\u2003<is-domain>1<\/is-domain>"},{"entry":"\u2003\u2003<dc-failover>1<\/dc-failover>"},{"entry":"\u2003<\/adma-partition-data>"},{"entry":"<\/custom-data>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The allowed-operations element refers to a completely internal read-only element that is used by the production system server to convey information to the configuration logic UI regarding what MA runs should bring up warnings or be disallowed. It is never emitted into files that customers can view. It is a DWORD with values:",{"@attributes":{"id":"p-0256","num":"0267"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["BFALLOWED_DELTA_IMPORT","= BIT( 0\u2002 ),"]},{"entry":["BFALLOWED_DELTA_NO_MA_CONFIG","= BIT( 1\u2002 ),"]},{"entry":"CHANGED"},{"entry":["BFALLOWED_DELTA_NO_MV_CONFIG","= BIT( 2\u2002 ),"]},{"entry":"CHANGED"},{"entry":["BFALLOWED_DELTA_NO_MV_DLL_CHANGED","= BIT( 3\u2002 ),"]},{"entry":["BFALLOWED_DELTA_NO_MA_DLL_CHANGED","= BIT( 4\u2002 ),"]},{"entry":["BFALLOWED_SUPPRESS_WARNINGS","= BIT( 29 ),"]},{"entry":["BFALLOWED_NO_OPERATION_RUN","= BIT( 30 ),"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Run Profile Configuration Information","The run profile configuration information describes the \u201crun profiles\u201d defined for the MA. The overall format for this element is:",{"@attributes":{"id":"p-0259","num":"0270"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<ma-run-data>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<run-configuration>...<\/run-configuration>"]},{"entry":[{},"<run-configuration>...<\/run-configuration>"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/ma-run-data>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"An exemplary format for the <run-configuration> element can be found in the appendix of this disclosure.","C. Exemplary Techniques and Systems for Configuring a Metadirectory System","Having described an exemplary implementation of a multidirectory system in Section B, the following section presents details regarding a process for configuring such a system. The specific information imparted herein is exemplary. Other processes can be developed based on the principles described herein for other kinds of directory management systems that differ from the process described below in various respects.","C.1. Overview of Export\/Import Processes","To begin with,  shows a general method  for moving configuration files from the lab production environment  to the production environment . Reference is made to the individual steps in  in tandem with the features described in .","In step , a user (such as user  or ) creates configuration information  that may comprise one or more configuration files. More specifically, this act of creation may constitute the generation of an MA that prompts the generation of an entirely new MA file. Alternatively, this act of creation may constitute the modification of an existing MA file that prompts the modification of an existing MA. Still alternatively, this act of creation may constitute the creation of an entire suite of MA files and an associated MV file for configuring the entire production system  (or multiple parts thereof).","Whatever the case, in step , the user exports the configuration information  to the storage location . For instance, the user can use file management UI functionality to identify a location in a directory that stores the configuration information . As stated, this storage  location can be physically associated with the lab environment , the production environment , or some other location.","In step , a user associated with the production environment  imports the configuration information  stored at the storage location  into the production system . The production system  thus assumes the role of a \u201ctarget\u201d system by receiving the configuration information, and is alternatively referred to in this section as the target production system . Step  involves different processes depending on the nature of the configuration task specified in the configuration information . In a first case (), the configuration logic  employs the process shown in  to import a new MA. In a second case (), the configuration logic  employs the process shown in  to update an existing MA. That is, in this case (), the production system  already stores an MA associated with the MA identified in the configuration information . The goal in this case is to modify or amend the existing MA in accordance with the information contained in the configuration information  (based on a comparison of the configuration of the existing MA and the configuration information ). In this context, the existing MA in the production system  assumes the role of a \u201ctarget\u201d MA. Finally, in a third case (), the configuration logic  employs the process shown in  to import configuration files that define the configuration of the entire production system . Such a configuration task can involve adding one or more new MA's, as well as updating one or more existing MA's, and therefore, this process draws from the first and second processes (, ) discussed above. This is illustrated in  by showing flow boxes labeled  and  within flow box .","The following sections describe the export and import processes in greater detail.","C.2. Export Processes","Exporting an MA","A user (e.g., user  or ) can use the user interface functionality, a command line utility, or some other functionality to save a created MA file to the storage location . In one implementation, the import process does not involve the transfer of any extension files referenced in the created MA file, such as DLLs. The user should therefore make special provisions to transfer these files. In other implementations, the export process can incorporate functionality for automatically transferring such extension files.","In one exemplary implementation, the lab system  produces an output MA file having the following form:",{"@attributes":{"id":"p-0273","num":"0284"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<export-ma server=\u2018name of server\u2019 export-date=\u2018date\u2019>"]},{"entry":[{},"<!--WARNING>"]},{"entry":[{},"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"]},{"entry":[{},"!!"]},{"entry":[{},"!! The contents of this file should not be edited."]},{"entry":[{},"!! Any such modifications to this file may result in errors during"]},{"entry":[{},"!! import."]},{"entry":[{},"!!"]},{"entry":[{},"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"]},{"entry":[{},"<\/WARNING -->"]},{"entry":[{},"\u2003<ma-data>"]},{"entry":[{},"\u2003\u2003. . ."]},{"entry":[{},"\u2003<\/ma-data>"]},{"entry":[{},"\u2003<mv-data>"]},{"entry":[{},"\u2003\u2003<import-attribute-flow>"]},{"entry":[{},"\u2003\u2003. . ."]},{"entry":[{},"\u2003\u2003<\/import-attribute-flow>"]},{"entry":[{},"\u2003<\/mv-data>"]},{"entry":[{},"<\/export-ma>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The <ma-data> element and the <import-attribute-flow> element have formats described in the previous section. In one implementation, the configuration logic  generates the outer elements of the file format described above. Other aspects of the production system  generate the inner elements of the file format, namely, the <ma-data> and <mv-data> and elements.","Exporting a System Configuration","The user can also create and export information that specifies the configuration of the entire production system , which may have multiple MA's associated therewith. As in the case of a single MA file, the user can use the user interface functionality, a command line utility, or some other functionality to export the server configuration information  to the storage location . In one implementation, the user should independently transfer any extension files or functionality associated with the server configuration information .","The server configuration information  can include a suite of server configuration files, including a file called \u201cMV.XML.\u201d The MV.XML file specifies the server-wide metaverse configuration of the production system . The following excerpt provides an exemplary high-level listing of an MV.XML file:",{"@attributes":{"id":"p-0278","num":"0289"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<saved-mv-configuration server=\u2018MAXBDESK2\u2019 export-date="]},{"entry":[{},"\u20182002-07-30 15:00:39.000\u2019>"]},{"entry":[{},"<!--WARNING>"]},{"entry":[{},"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"]},{"entry":[{},"!!"]},{"entry":[{},"!! The contents of this file should not be edited."]},{"entry":[{},"!! Any such modifications to this file may result in errors during"]},{"entry":[{},"!! import."]},{"entry":[{},"!!"]},{"entry":[{},"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"]},{"entry":[{},"<\/WARNING-->"]},{"entry":[{},"<mv-data>"]},{"entry":[{},"\u2003<format-version>1<\/format-version>"]},{"entry":[{},"\u2003<version>2<\/version>"]},{"entry":[{},"\u2003<schema>"]},{"entry":[{},"\u2003\u2003. . ."]},{"entry":[{},"\u2003<\/schema>"]},{"entry":[{},"\u2003<import-attribute-flow>"]},{"entry":[{},"\u2003\u2003. . ."]},{"entry":[{},"\u2003<\/import-attribute-flow>"]},{"entry":[{},"<\/mv-data>"]},{"entry":[{},"<\/saved-mv-configurations>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Again, Section B above describes the exemplary composition of the elements within the body the MV.XML file.","In addition to the MV.XML file, the server configuration information  can include multiple MA files. These files are respectively associated with each of the MA's in the production environment . These files are identified as MA.XML files. The export process generates the name of these files based on the id's of the respective MA's. The following excerpt identifies an exemplary format for an MA.XML file generated upon the export of the server configuration information .",{"@attributes":{"id":"p-0281","num":"0292"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<saved-ma-configuration server=\u2018name of server\u2019 export-date=\u2018date\u2019>"},{"entry":"<!--WARNING>"},{"entry":"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"},{"entry":"!!"},{"entry":"!! The contents of this file should not be edited."},{"entry":"!! Any such modifications to this file may result in errors during"},{"entry":"!! import."},{"entry":"!!"},{"entry":"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"},{"entry":"<\/WARNING-->"},{"entry":"\u2003<ma-data>"},{"entry":"\u2003\u2003..."},{"entry":"\u2003<\/ma-data>"},{"entry":"<\/ saved-ma-configuration >"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},"In one implementation, the configuration logic  generates the outer elements of the file format described above. Other aspects of the production system  generate the inner elements of the file format, namely, the <ma-data> and <mv-data> elements.","C.3. Import Processes","Importing an MA",{"@attributes":{"id":"p-0285","num":"0296"},"figref":"FIG. 9","b":["900","104","900","902","904"]},"The step  of processing ma-data includes multiple subprocesses to handle individual parts of the ma-data. That is, as previously described, the ma-data includes at least the following parts: naming information; versioning information; generic MA rule configuration information; controller configuration information; password sync configuration information; UI configuration information; private configuration information; encrypted attribute configuration information; partition configuration information; and run profile configuration information. Step  is expanded in the right side of  to yield box \u2032 that shows processing associated with each of these parts. Each of these parts is described below in turn.","Substep  involves processing naming information provided by the ma-data. As explained in Section B, the naming information includes elements <id>, <name>, and <category>. As to the <id> element, the configuration logic  generates a new GUID at the time of import (thus ignoring the GUID in the configuration file). By ignoring the GUID in the configuration file, the configuration logic  provides \u201ccreate from template\u201d functionality. As to the <name> element, the configuration logic  uses the name provided in the file as the name of the MA. If an MA with this name exists in the production system , then the configuration logic  will prompt the user to enter a new name. As to the <category> element, the configuration logic  accepts the category identified in the configuration file as the type of MA to be created.","Substep  involves processing versioning information provided in the ma-data. As explained in Section B, the versioning information includes elements <creation-time>, <last-modification-time>, and <version>. As to the <creation-time> element, the configuration logic  ignores the time specified in the configuration file. The configuration logic  sets this time to the time when the new MA is created. As to the <last-modification-time>, the configuration logic  likewise ignores the time specified in the configuration file. The configuration logic  initially sets this time to be the time when the new MA is created. As to the <version> element, the configuration logic  ignores the version specified in the file. The configuration logic  sets the version of the new MA to 1.","Substep  involves processing generic configuration information provided in the ma-data. As explained in Section B, the generic configuration information includes a schema> element. The configuration logic  determines an \u201cauthoritative schema,\u201d that is, a schema that is saved with the MA, according to the following considerations. (1) For call-based MA's other than MSSQL and ORACLE MA's, the configuration logic  will call the MA's GetSchema method to get an authoritative schema. (2) For File MA's, the configuration logic  takes the schema found in the file as authoritative. (3) For MSSQL and ORACLE MA's, the configuration logic  calls the MA to get the schema in the CD and compares it with the schema in the file. In this case, the configuration logic  builds the schema from the CD, but if the same column appears in both the CD schema and the file schema, then the configuration logic  applies the following logic: (a) if that column is declared to be a \u201creference\u201d in the file and has a type that permits it to be a reference attribute, then the configuration logic  makes it a reference; and (b) if that column is part of the primary key in the file, it will be part of the primary key in the final schema (and marked immutable). The configuration logic  defines other rule elements according to the contents of the configuration file. The configuration logic  will perform property page validation of these settings against the contents of the authoritative schema and allow the user to correct any mismatches.","Substep  involves processing controller configuration information provided in the ma-data. The configuration logic  uses the controller configuration specified in the file. If the file contains an impersonation element, the configuration logic  will bring up the property pages to prompt the user to enter a password. If the file does not include an impersonation element, the configuration logic  will assume that application protection is \u201clow\u201d and that there is no impersonation.","Substep  involves processing UI configuration information provided in the configuration file. For this piece of information, the configuration logic  uses the <description> and <ma-ui-settings> present in the file.","Substep  involves processing private configuration information provided in the configuration file. Generally the configuration logic  uses the private configuration information specified in the configuration file. For IPLANET and the FILE MA types, which allow per object anchor configuration, the configuration logic  will be run through a property page validation routine. This routine ensures that the attributes in the anchor are defined in the schema and that they are declared as immutable.","Substep  involves processing encrypted attribute configuration information. In one implementation, this information is omitted from the configuration file.","Substep  involves processing of partition configuration information in the configuration file. Generally, the configuration logic  handles partition information in an MA-specific manner. For LDAP MA's, the following considerations apply to the processing of the configuration file. (1) The configuration logic  discovers the actual partitions present in the CD. These partitions will form the list of actual partitions in the final configuration. The configuration logic  initially marks all of these CD partitions as UNSELECTED. (2) First, in the case of an AD, the configuration logic  tries to definitively match each SELECTED partition contained in the configuration file with a single CD partition. In the case of AD, the configuration logic  performs this task using the AD GUID of the partition. If this match occurs, the configuration logic  copies the information from the file partition to the CD partition: (a) selected (set to 1); (b) filter; and (c) custom-data (for AD, the configuration logic  copies sign-and-seal, preferred-dcs, dc-failover, login-domain, and login-user). (3) If the CD still has partitions that have not been matched up, the configuration logic  brings up a dialog interface that allows users to manually match up unmatched SELECTED partitions in the configuration file with unmatched CD partitions. In this matching process, the configuration logic  will pre-match by partition name (if provided) to assist the user. The user can undo these approximate matches or accept them and match other pairs as well. ( illustrates this procedure by showing a step  of automatic matching, a step  of assessing whether there are any unmatched partitions, and a step  of manually matching any assessed unmatched partitions.) (4) For the matches that the user finally decides on, MA-specific configuration logic  will propagate partition details from the configuration file partition to the CD partition. These details can include: selected (set to 1); filter (where it is assumed that the container structure is the same on the test forest as the production forest; since the domain DN's may differ, the configuration logic  will manage the inclusion\/exclusion lists appropriately); custom-data (for AD, if there is exact domain-to-domain match-up, the configuration logic  copies sign-and-seal, preferred-dcs, dc-failover, login-domain, and login-user; for iPlanet, the configuration logic  copies ssl-bind, providing similar behavior for Exchange). (5) The user need not match all the partitions in the file. If the user cancels a matching session, the configuration logic  will ask the user whether the user wants to quit creating the MA or wants to go on ignoring the unmatched partitions in the file.","For File MA's, the configuration logic  copies all File MA partitions to the new MA and marks these as SELECTED.","For other MA's, the configuration logic  should have a single default partition in the file as well as in the new MA. The configuration logic  copies the filter element of the file to the CD partition.","In general, in all cases, the configuration logic  generates a new GUID for the id of the partition in the new MA. In one implementation, it never reuses the partition id's found in the configuration file.","Finally, substep  involves processing run profile configuration information provided in the ma-data. The following considerations apply to the execution of this substep. (1) The configuration logic  scans the run profiles in the configuration file which only refer to MATCHED, SELECTED file partitions. It copies those run profiles to the new MA configuration, making appropriate modifications based on information obtained from the matching CD partition. For instance, configuration logic  will change the partition name specified in the file to the partition name of the associated CD partition. (2) The configuration logic  does not copy run profiles from the file which refer to either UNMATCHED or UNSELECTED file partitions. (3) In one implementation, in all cases, the configuration logic  generates a new GUID for the id of a run profile propagated to the new MA. It does not reuse the run profile id's found in the file.","Having completed the processing of the ma-data, the process  advances to the processing of the mv-data in step . The following considerations apply to the processing performed in this step (). (1) If any of the import attribute flow rules are incompatible with the MA or MV schema, the configuration logic  will bring up the import attribute flow property page so that the user can manually address the problem. (2) The configuration logic  appends the import attribute flow rules in the file to the import attribute flow configuration of the production system . If any of these rules flow into the same MV attribute as an existing import attribute flow rule for another MA, the configuration logic  assigns these lower precedence.","Updating an MA",{"@attributes":{"id":"p-0301","num":"0312"},"figref":"FIG. 10","b":["1000","104","104","106"]},"In one implementation, the user applies the process  to a specific MA identified by the user. That is, in this implementation, the configuration logic  does not automatically perform a search to match information in the configuration file with an MA in the system  (although, in another implementation, matching can be performed). In using this process , there is an expectation that the Mv schema elements referred to by the exported configured file agree with the MV schema of the target production system . Errors may be produced if this assumption does not hold true; for instance, the update of an MA may fail halfway through without restoring the original design of the MA. The user should in general perform a full new import\/reevaluate rules run when the user updates a new version of the MA design, but the process need not require deletion of connector space to execute the process.","By way of overview, the process  involves replacing the configuration of the existing MA with information provided in the configuration file. As shown in , the process  includes the general steps of comparing flow rules , processing ma-data , and inserting new import attribute flow rules . The following discussion clarifies the purpose of each of these steps.","In step , the configuration logic  compares the import attribute flow rules specified in the file with those rules currently applied to the MA in the target production system . For the MA under consideration, the configuration logic  removes any flow rule present in the target production system  that differs from a counterpart rule in the configuration file (except for precedence). This process leaves a subset of rules specified in the configuration file (the \u201cnew\u201d rules) that do not match any rule in the target production system. The configuration logic  reserves these non-matching rules so that they can be added in a later stage in the process.","The step  of processing ma-data includes multiple subprocesses to handle individual parts of the ma-data: naming information; versioning information; generic MA rule configuration information; controller configuration information; UI configuration information; private configuration information; encrypted attribute configuration information; partition configuration information; and run profile configuration information. As in the case of , in , step  is expanded in the right side of  to yield box \u2032 that shows processing associated with each of these parts. Each of these parts is described below in turn.","Substep  involves processing naming information provided by the ma-data. As explained in Section B, the naming information includes elements <id>, <name>, and <category>. As to the <id> element, the configuration logic  ignores the id information provided in the configuration file. As to the <name> element, the configuration logic  determines whether the name identified in the configuration file differs from the name of the MA in the target production system . If so, the configuration logic  uses the name from the configuration file as the name of the MA. However, if another MA has the same name in the target production system , the configuration logic  will prompt the user to enter a new name for the MA under consideration. As to the <category> element, in one implementation, the configuration logic  requires that the category in the configuration file match the category of the selected MA; otherwise the update will fail.","Substep  involves processing version information provided by the ma-data. As explained in Section B, the version information includes the elements of <creation-time>, <last-modification-time>, and <version>. As to the creation-time> element, the configuration logic  ignores the time specified in the configuration file. As to the <last-modification-time> element, the configuration logic  again ignores the time specified in the configuration file. The configuration logic  updates the modification time to a prevailing current time when the update completes. As to the <version> element, the configuration file ignores the version information specified in the file. The configuration logic  will update the version number when the update completes.","Substep  involves processing MA rule configuration information provided in the ma-data. As to the <schema> element associated with the MA rule configuration information, the configuration logic  determines the \u201cauthoritative\u201d schema (e.g., a schema that will be saved with the MA) based on the following considerations. (1) For call-based MA's other than database MA's, the configuration logic  regards the schema saved with the MA in the target production system  as authoritative. That is, in this case, the configuration logic  ignores the contents of the configuration file. (2) For File MA's, the configuration logic  takes the schema found in the file as authoritative. (3) For MSSQL and ORACLE MA's, the configuration logic  calls the MA to get the schema in the CD and compares it with the schema in the configuration file. In this case, the configuration logic  builds the schema from the CD, but if the same column appears in both the CD schema and the file schema, then the configuration logic  applies the following logic: (a) if that column is declared to be a \u201creference\u201d in the configuration file and has a type that permits it to be a reference attribute, the configuration logic  will make it a reference; (b) if that column is part of the primary key in the configuration file, it will be part of the primary key in the final schema (and marked as immutable). The configuration logic  defines other rule elements from what appears in the configuration file and uses this information to replace counterpart information associated with the MA in the target production system . The configuration logic  will validate these settings against the contents of the authoritative schema and allow the user to correct any mismatches.","Substep  involves processing controller configuration information. The configuration logic  uses the controller configuration information specified in the configuration file, overwriting the corresponding existing MA information stored in the target production system . If the configuration file omits the controller configuration information, the configuration logic  assumes that the application protection is \u201clow\u201d and there is no impersonation. The configuration logic  applies an MA-specific check to obtain this information. The database MA will check whether it is operating in Windows\u00ae operating system authentication mode. If so, it will compare the user\/domain information in the configuration file with the stored information currently associated with the MA. If they differ, the configuration logic  can bring up a dialog to obtain the password from the user and call a DBMA support routine to validate the credentials.","Substep  involves processing UI configuration information. The configuration logic  uses the <description> and <ma-ui-settings> from the configuration file, overwriting the corresponding MA information stored in the target production system . In another implementation, the <ma-ui-settings> element settings stored on the target production system  are regarded as authoritative.","Substep  involves processing private configuration information. The configuration logic  generally uses the private configuration information specified in the configuration file. For IPLANET and the File MA types, which allow per object anchor configuration, the configuration logic  should validate that the attributes in the anchor are defined in the schema and that they are declared immutable. MA-specific callouts should check each pair of credentials (such as \u201cuser\u201d for SQL, \u201csecurity\u201d on DBMA, or \u201cdomain\/user\u201d for AD forest or partition) to see if the credentials differ from that specified in the configuration file and the CD. If so, the configuration logic  can bring up password dialogs to prompt the user to enter a password and then call MA-specific validation routines to make sure the password they enter is correct.","Substep  involves processing encrypted attribute configuration information. In one implementation, this information is omitted from the configuration file.","Substep  involves the processing of partition configuration information in the configuration file. Generally, the configuration logic  handles partition information in an MA-specific manner. For LDAP MA's, the following considerations apply to the processing of the configuration file. (1) In the update case, the configuration logic  considers the list of saved partitions associated with the MA on the target production system  to be the authoritative list of CD partitions. (That is, the configuration logic  performs no discovery of the actual partitions present in the CD during update MA. If changes in partitions have occurred, the user should have previously performed the discovery.) The configuration logic  initially resets each of these partitions to UNSELECTED. Through automatic and manual means, the user attempts to match SELECTED partitions in the file with the CD partitions. When match-ups occur, the configuration logic  copies the following information from the file partition to the CD partition: (a) selected (set to 1); (b) filter (it is assumed that the container structure is the same on the test forest as the production forest; since the domain DN's may be different, the configuration logic  will manage the inclusion\/exclusion lists appropriately); and (c) custom-data (for AD, the configuration logic  copies sign-and-seal, preferred-dcs, dc-failover, login-domain, and login-user; for iPlanet, the configuration logic  copies ssl-bind). (2) The configuration logic  does not necessarily require that all the SELECTED file partitions get matched to CD partitions and vice versa. The file configuration logic  drops file partitions that do not get matched to CD partitions. The configuration logic  marks CD partitions that do not get matched as UNSELECTED, but these partitions will nevertheless be saved with the MA.","For File MA's, configuration logic  regards the partitions in the file as authoritative. One reason not to simply remove all the partitions in the CD is to avoid deleting the CS objects in connector space. Once again, these partitions are generally processed by matching the partitions in the configuration file with those in the CD. In the event that a file partition is matched up with a CD partition, the configuration logic  copies over the filter criteria (note that if the filter changes then the configuration logic  should mark this partition as needing full import). The configuration logic  creates a new partition for any configuration file partition that does not match up. The configuration logic  deletes any CD partition that does not match up. This deletion operation may involve bringing up a progress dialog while all the CS objects under it are deleted.","Other MA's should have a single default partition in the configuration file as well as in the new MA. This should make matching easy. The filter information associated with the file partition should overwrite the MA filter information. If the filter actually changes, the configuration logic  should mark the partition as requiring full import.","A partly generic and partly MA-specific technique is used to perform matching between file partitions. The following considerations apply to the process. (1) First, the configuration logic  attempts to definitely match up partitions in the file with partitions in the CD by id. This represents an MA-independent matching, but it only works if a user first stores a server configuration on a first server, stores this configuration on another server, changes an MA, and then brings back an export of the modified MA to the first server. (For example, this situation applies when a user first transferred a server configuration from the lab system  to the production system  using the export and import operations. Then, the user modified one of the MA's on the lab system  and transferred this MA to the production system  using the export and import operations. In this case, the GUID's identifying the partitions would be the same on the lab system  as on the production system ; as a result, it is possible to match the partitions by their GUID's without user intervention.) For all matches found, the configuration logic  copies information from the file partition to the CD partition. (2) In the case of an AD using the AD partition GUID, the configuration logic  performs an MA-specific match to definitely match each SELECTED partition contained in the file with a single CD partition. (3) If unmatched partitions remain in the CD, the configuration logic  brings up a dialog that allows users to manually match up unmatched SELECTED partitions in the configuration file with unmatched CD partitions. The configuration logic  will pre-match by partition name (if any) to assist the user. The user can undo these suggested matches or accept these suggestions and match other pairs as well. ( illustrates this procedure by showing a step  of automatic matching, a step  of assessing whether there are any unmatched partitions, and a step  of manually matching any assessed unmatched partitions.) (4) The configuration logic  permits the user to not match all the partitions in the file. If the user cancels a matching session in progress, the user will be asked whether the user wants to quit creating the MA or wants to continue.","In one implementation, in all cases, when the configuration logic  creates a new partition in the MA, it generates a new GUID for the id of the partition in the new MA. It does not reuse the partition id's found in the configuration file.","Substep  involves the processing of run profile configuration information. The following considerations apply to the processing of this information. (1) The configuration logic  scans the run profiles in the configuration file to identify the ones which refer to MATCHED, SELECTED file partitions. The configuration logic  automatically matches by id these run profiles in the configuration file with counterpart profiles that already exist in the MA. As a fall-back, the configuration logic  attempts to match by name. For each pair that match, the configuration logic  propagates the information from the file version to the existing MA. The configuration logic  creates new run profiles for any run profiles in the configuration file that do not match up. (2) The configuration logic  does not copy run profiles from the configuration file which refer to either UNMATCHED or UNSELECTED file partitions. (3) Note that the exemplary technique described above does not remove run profiles currently associated with the MA; the technique creates new run profiles or modifies existing run profiles.","After processing the ma-data, the configuration logic  advances to step . In this step, configuration logic  inserts the \u201cnew\u201d import attribute flow rules with lowest precedence into the system configuration. The MA update will fail at this point with the updates from steps  and  if any of the import attribute flow rules are incompatible with the MA or MV schema.","Importing a System Configuration",{"@attributes":{"id":"p-0321","num":"0332"},"figref":["FIGS. 9 and 10","FIG. 11","FIG. 11","FIGS. 9 and 10","FIG. 11"],"b":["1100","106","106","106","106","1100"]},"In one exemplary implementation, the process  includes seven principal steps. Step  involves matching up the management agents in the configuration files with those stored on the target production system  using id (e.g., GUID). The process  fails if the configuration logic  determines that the target production system includes any management agent that is missing from the configuration files. However, the configuration logic  permits the case where the configuration files specify additional management agents that are not included in the target production system .","In step , the configuration logic  removes the import attribute flow rules from the server configuration.","In step , the configuration logic  removes the export attribute flow rules from each MA in the target production system.","In step , the configuration logic  imports the saved schema specified in the file MV.XML. This operation functions in a non-data-destructive manner like the standalone schema import feature provided by the configuration logic  (e.g., for an individual MA). The following considerations apply to the processing provided by step . (1) Object types on the target production system  that do not appear in the configuration files are not removed. Object types that appear in the configuration file but do not appear on the target production system are added. (2) Attributes belonging to an object type that do not appear in the file are not removed. Attributes of an object type that appear in the configuration file but not on the target production system  are added. (3) If there are simple indexing changes (e.g., whether an indexable attribute is marked \u201cindexed\u201d or \u201cunique-indexed\u201d), the configuration file's specification of the indexing state is applied to the target production system . This step will fail if an attribute in the configuration file has any other schema differences (such as a different type, e.g., when one version is indexable while another is not).","In step , the configuration logic  applies the following procedure for each MA file in the saved configuration. (1) The configuration logic  takes the id of the MA stored in the configuration file and looks for an MA on the system with the same id. (2) If no such MA is found, then the configuration logic  creates a new MA using the configuration specified in the configuration file. Processing of ma-data proceeds according to the procedure described above with respect to  (\u201cImporting an MA From File\u201d). However, in this case, the configuration logic  creates the MA in the target production system  using the id in the configuration file. Further, when the configuration logic  creates a partition or run profile that matches with an MA in the configuration file, it should reuse the corresponding id's that are found in the file. (3) On the other hand, if the configuration logic  finds a matching MA, then it processes the \u201cma-data\u201d in the same manner described above with respect to  (\u201cupdating MA From File\u201d). However, in this case, when the configuration logic  adds a new partition or run profile that matches with one in the configuration file, the configuration logic  should reuse the corresponding id's that are found in the configuration file.","In step , the configuration logic  places the import attribute flow rules from the configuration file onto the target production system.","In step , the configuration logic  replaces the object deletion rules (also as known as metaverse or mv deletion rules) on the target production system  with the mv-deletion rules in the configuration files.","In one exemplary implementation, the process  does not handle DLL extensions. To fully complete the configuration, the user should copy relevant DLLs into an Extensions directory on the target production system.","C.4. UI Functionality",{"@attributes":{"id":"p-0331","num":"0342"},"figref":"FIGS. 12-16","b":["512","512","512","106","108"]},"The first UI presentation  shown in  allows the user to enter commands that initiate various stages of the configuration procedure. Namely, a first command field  prompts the configuration logic  to initiate the export procedure described above. In the export procedure, one or more files are transferred from the lab system  to the storage location  specified by the user. Accordingly, in one implementation, the UI presentation  can be presented on a computer monitor (not shown) associated with the lab system , allowing a user who is interacting with that system  to transport one or more configuration files to the storage location . However, a user at a remote station, such as the production system , can also use the UI presentation  to remotely command the transfer of configuration files from the lab system  to the storage location .","A second command field  allows a user to transfer the files from the storage location  into the production system  where they are incorporated into the relevant databases of the production system . The user that initiates the import command can be the same user that initiated the export command, or a different user.","Another UI presentation  shown in  allows the user to specify a directory location that can be used to implement the storage location . More specifically, the UI presentation  can be used to initially specify the directory location where one or more configuration files are to be stored in the course of an export operation. Also, the UI presentation  can be used to inform the import process of the directory location that already stores one or more configuration files provided by the export process. In the exemplary case shown in , a folder  within a directory of folders  is used to store the configuration files.","Once the import procedure is underway, another UI presentation  shown in  can be used to monitor the progress of the configuration process. Namely, an input directory field  identifies the location of the configuration files that are driving the configuration process. A progress field  presents real time feedback regarding the progress of the configuration process. Namely, the configuration logic  forwards notifications regarding when it has commenced and finished different parts of the configuration process. The progress log receives these notifications and displays the names of the parts that have commenced or finished. The user can be kept apprised of the progress of the configuration of the production system  by monitoring the progress field . In the event of an error that halts the configuration of the production system , the progress field  provides information that can quickly pinpoint the part of the configuration task that may have caused the error.","The UI presentation  shown in  prompts the user to enter credential information. This UI presentation  may come into play at different junctures in the configuration procedure. In one case, the configuration logic  may prompt the user to enter credential information to implement the creation of a specific new MA. More specifically, consider the case in which the user imports an MA (or the configuration logic  determines that a new MA needs to be created in the course of performing the import server configuration process). In this case, the configuration logic  will need to connect to the CD that the MA interacts with in order to determine the partitions that this CD employs. To perform this function, the configuration logic  requires the credentials used to connect to the associated CD. The UI presentation  is used to obtain such credentials, which are subsequently used to access the CD. These credentials are also saved along with the configuration of the new MA. After configuration of the MA, these stored credentials can be used in importing and exporting data to and from the MA during the normal use of the metadirectory service.","The above-identified credential information can include a user name (provided in field ) and a password (provided in field ). A forest name (provided in field ) and a domain name (provided in field ) provide other identifying information used in granting a user permission to a CD.","The UI presentation  shown in  provides a mechanism for matching partitions. That is, during the import or updating of an MA, the configuration logic  attempts to match partitions specified in the configuration information  with partitions that already exist (e.g., as reflected by information associated with the existing MA provided on the production system  or actual partitions used in the associated connected directory source (CD). The configuration logic  may be able to automatically match some of the partitions specified in the configuration information  with existing partitions (e.g., by id, name, and\/or on some other basis). However, the configuration logic  may be unsuccessful in matching other partitions specified in the configuration information . The UI presentation  displays these file-specified and existing partitions and allows a user to manipulate these partitions and the associations between these partitions.","More specifically, field  shows unmatched partitions as specified in the configuration information . Field  shows unmatched partitions reflected in the existing MA. Field  shows the association between file-specified and existing partitions. (If the checkbox beneath the field  is checked, then the field  only presents pairs of partitions that have been automatically matched by the configuration logic , reflected by the operational label of \u201cExact Match\u201d that appears in a column of this field.) Command button , , and  allow a user to modify the designations of partitions and\/or modify the association between partitions. For example, the \u201cNew\u201d command button  allows a user to designate a partition in field  as new, to indicate that this partition is not present in the existing set of partitions. The result of designating a file-specified partition as \u201cnew\u201d can be reflected in the field  by showing this new partition with the operational label of \u201cSew.\u201d The \u201cMatch\u201d command button  allows a user to add a selected pair of partitions that appear in fields  and  to the field  as manually matched partitions. The result of manually matching a selected pair in fields  and  can be reflected in the field  by showing the manually matched pair with the operational label of \u201cManual Match.\u201d The \u201cDelete\u201d command button  allows a user to delete\/deselect a partition in the exiting partitions field  (because, for instance, it describes a partition that will no longer exist after the configuration operation has completed). The result of designating an existing partition as deleted can be reflected in the field  by showing this deleted partition with the operational label of \u201cDeleted.\u201d The \u201cRemove\u201d command button  allows a user to undo the effects of any of the command buttons , , or . Further, the configuration logic  may have erroneously matched a file-specified partition with an existing partition. In this case, the user can undo this automatic match using the \u201cRemove\u201d command button , whereupon this pair of partitions will appear in fields  and  to be processed by the user in manual fashion. Generally, the user can select partitions and actuate command buttons in conventional fashion by using a graphical input device, such as a mouse, or some other input device.","D. Exemplary Computer Environment for Implementing the Configuration Techniques",{"@attributes":{"id":"p-0341","num":"0352"},"figref":["FIG. 17","FIG. 17"],"b":["1700","142","1700","1702","1704","1700","1700","1700","1700"]},"Exemplary computer  includes one or more processors or processing units , a system memory , and a bus . The bus  connects various system components together. For instance, the bus  connects the processor  to the system memory . The bus  can be implemented using any kind of bus structure or combination of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. For example, such architectures can include an Industry Standard Architecture (ISA) bus, a Micro Channel Architecture (MCA) bus, an Enhanced ISA (EISA) bus, a Video Electronics Standards Association (VESA) local bus, and a Peripheral Component Interconnects (PCI) bus also known as a Mezzanine bus.","Computer  can also include a variety of computer readable media, including a variety of types of volatile and non-volatile media, each of which can be removable or non-removable. For example, system memory  includes computer readable media in the form of volatile memory, such as random access memory (RAM) , and non-volatile memory, such as read only memory (ROM) . ROM  includes an input\/output system (BIOS)  that contains the basic routines that help to transfer information between objects within computer , such as during start-up. RAM  typically contains data and\/or program modules in a form that can be quickly accessed by processing unit .","Other kinds of computer storage media include a hard disk drive  for reading from and writing to a non-removable, non-volatile magnetic media, a magnetic disk drive  for reading from and writing to a removable, non-volatile magnetic disk  (e.g., a \u201cfloppy disk\u201d), and an optical disk drive  for reading from and\/or writing to a removable, non-volatile optical disk  such as a CD-ROM, DVD-ROM, or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are each connected to the system bus  by one or more data media interfaces . Alternatively, the hard disk drive , magnetic disk drive , and optical disk drive  can be connected to the system bus  by a SCSI interface (not shown), or other coupling mechanism. Although not shown, the computer  can include other types of computer readable media, such as magnetic cassettes or other magnetic storage devices, flash memory cards, CD-ROM, digital versatile disks (DVD) or other optical storage, electrically erasable programmable read-only memory (EEPROM), etc.","Generally, the above-identified computer readable media provide non-volatile storage of computer readable instructions, data structures, program modules, and other data for use by computer . For instance, the readable media can store the operating system , one or more application programs , other program modules , and program data .","The computer environment  can include a variety of input devices. For instance, the computer environment  includes the keyboard  and a pointing device  (e.g., a \u201cmouse\u201d) for entering commands and information into computer . The computer environment  can include other input devices (not illustrated), such as a microphone, joystick, game pad, satellite dish, serial port, scanner, card reading devices, digital or video camera, etc. Input\/output interfaces  couple the input devices to the processing unit . More generally, input devices can be coupled to the computer  through any kind of interface and bus structures, such as a parallel port, serial port, game port, universal serial bus (USB) port, etc.","The computer environment  also includes the display device . A video adapter  couples the display device  to the bus . In addition to the display device , the computer environment  can include other output peripheral devices, such as speakers (not shown), a printer (not shown), etc.","Computer  can operate in a networked environment using logical connections to one or more remote computers, such as a remote computing device . The remote computing device  can comprise any kind of computer equipment, including a general purpose personal computer, portable computer, a server, a router, a network computer, a peer device or other common network node, etc. Remote computing device  can include all of the features discussed above with respect to computer , or some subset thereof.","Any type of network can be used to couple the computer  with remote computing device , such as a local area network (LAN) , or a wide area network (WAN)  (such as the Internet). When implemented in a LAN networking environment, the computer  connects to local network  via a network interface or adapter . When implemented in a WAN networking environment, the computer  can connect to the WAN  via a modem  or other connection strategy. The modem  can be located internal or external to computer , and can be connected to the bus  via serial I\/O interfaces  other appropriate coupling mechanism. Although not illustrated, the computing environment  can provide wireless communication functionality for connecting computer  with remote computing device  (e.g., via modulated radio signals, modulated infrared signals, etc.).","In a networked environment, the computer  can draw from program modules stored in a remote memory storage device . Generally, the depiction of program modules as discrete blocks in  serves only to facilitate discussion; in actuality, the programs modules can be distributed over the computing environment , and this distribution can change in a dynamic fashion as the modules are executed by the processing unit .","Wherever physically stored, one or more memory modules , , , etc. can be provided to store the various rules, objects, schemas, etc. described above.","E. Appendix: Exemplary Schemas and Rules","The following appendix, which forms an integral part of this specification, provides various rules and schemas used in the metadirectory service.","E.1. Join Rules","Referring to the generic MA rule configuration schema shown above, the <join> sub-element governs how a metadirectory synchronization engine should join an object in the metadirectory buffer to an object in the metadirectory core. In one implementation, a join operation involves searching the metadirectory core for an object that corresponds to an object in the metadirectory buffer, and then linking the corresponding objects.","In one implementation, joining two objects involves establishing a link between the two objects that enables subsequent attribute flow to occur between the two objects. Until a metadirectory buffer object is joined to a metadirectory core object, the metadirectory buffer object does not affect the metadirectory core because no relationship to the metadirectory core exists. After a metadirectory buffer object is joined to a metadirectory core object, the buffer object can affect the core object (and vice versa) in various ways, examples of which are discussed in more detail herein.","In one implementation, when an object is received by the metadirectory buffer, an attempt is made to join the metadirectory buffer object to an object in the metadirectory core. If an object exists in the core that corresponds to the buffer object, the two objects will be joined. In cases where no corresponding object can be found in the metadirectory core, a new core object is projected (if enabled by the core projection rules and the run configuration rules) and the metadirectory buffer object is automatically joined to the new core object. The join rules are also applied during \u201capply rules runs\u201d that apply to pending updates to the metadirectory core when a disconnector object in the metadirectory buffer is changed to a connector object.","Maintenance processing may be employed to re-evaluate all existing joins against the defined join rules, as well as to evaluate normal disconnectors for potential joining. During both updating and maintenance processing, explicit disconnectors (those created with account joiner or buffer deprovisioning rules) are not evaluated for joining and will remain as disconnectors. In one implementation, whenever a normal disconnector object is run through the connector filter the object will be projected and\/or joined to a core object if the disconnector object passes the filter.","A join is performed for a metadirectory buffer object by initiating a search for objects in the metadirectory core that match defined search criterion. Any join candidates found during the search are then passed to a resolution handler to perform validation of the result (in the case of a single join candidate) or to identify a single join target (in the case of multiple join candidates). After a metadirectory core object has been identified as the join target, the metadirectory core object is joined to the metadirectory buffer object. In one implementation, the join rules specify the search criterion, the method of join resolution\/validation, handling of ambiguous results, and scoping of join rules by CD object types.","Exemplary join rules for an MA are expressed in XML and specify criterion for joining two objects. In one implementation, the user defines the join rules through a UI that will create and store these rules in XML on the metadirectory server. The rules engine will employ these stored rules in the course of executing join actions initiated by either a MA run or by account joiner. Exemplary join rules for an MA can be defined in a declarative manner, with provision for programmatic rules via a user-written script where complexity requires it. Exemplary XML Join rules schema is shown below:",{"@attributes":{"id":"p-0361","num":"0372"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<join >"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<join-profile cd-object-type-\u201ccdObjectType\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<join-criterion id=\u201cGUID1\u201d>joinCriterion1<\/join-criterion>"]},{"entry":[{},"<join-criterion id=\u201cGUID2\u201d>joinCriterion2<\/join-criterion>"]},{"entry":[{},"<join-criterion id=\u201cGUID3\u201d>joinCriterion3<\/join-criterion>"]},{"entry":[{},"\u2003. . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/join-profile>"]},{"entry":[{},"\u2003. . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/join >"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The <join> element can encapsulate multiple <join-profile> elements. Each <join-profile> specifies the join search criterion that are specific to a particular object type. Users, for example, might be configured with one <join-profile>, whereas contacts might be configured with a different profile.","Each <join-profile> specifies the object type to which it applies to by means of a \u201ccd-object-type\u201d attribute. In a particular implementation, only one <join-profile> is allowed with the same \u201ccd-object-type.\u201d Within each <join-profile>, multiple <join-criterion> elements can be configured with an implicit priority order (i.e., a prioritized \u201cor\u201d exists between each <join-criterion>). An exemplary join process evaluates each <join-criterion> in priority sequence in search of a join target until either a single join target is identified or the search is exhausted and no join target has been identified.","Within a <join-profile> element, the <join_criterion> element is responsible for configuring the search criterion as well as the method of join resolution. In a particular implementation, each <join-criterion> operates independently as there is no relationship between <join-criterion> searches. The following exemplary <join_criterion> schema illustrates join criterion:",{"@attributes":{"id":"p-0365","num":"0376"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<join-criterion id=\u201cGUID\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<collation-order>CollationOrder string<\/collation-order>"]},{"entry":[{},"<search mv-object-type-\u201cmvObjectType\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<attribute-mapping"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"intrinsisc-attribute=(true | false)"]},{"entry":[{},"mv-attribute=\u201cmvAttributeName\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002attributeMapping"]},{"entry":[{},"<\/attribute-mapping>"]},{"entry":[{},"\u2003. . ."]},{"entry":[{},"<\/search>"]},{"entry":[{},"<resolution type=(none | scripted)>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<script-context>contextString<\/script-context>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/resolution>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/join-criterion>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In the <join-criterion> schema above, the \u201cid\u201d for <join-criterion> is a GUID that uniquely identifies the join criterion rule (e.g., \u201c{934A9523-A3CA4BC5-ADA0-D6D95D979429}\u201d). In one implementation of the metadirectory, the UI will generate a GUID) and set it as an attribute of the join-criteria element when a new one is added.","The exemplary <collation-order> element specifies how any string comparisons that need to be done by the search should be performed by an SQL Server. For each locale id there is generally more than one collation order that the user can choose, allowing the user to choose whether to be case insensitive, accent insensitive, and the like. The <collation-order> tag is optional and defaults to the default SQL Server collation for an exemplary metadirectory database.","The exemplary <search> element specifies a set of AND-ed conditions on the values of the metadirectory core object being searched for. Each condition is specified by an attribute-mapping> element. The exemplary content of the <attribute-mapping> element, \u201cattributeMapping,\u201d may be a direct or scripted attribute mapping fragment such as:",{"@attributes":{"id":"p-0369","num":"0380"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute>cdAttributeName<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"or"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<scripted-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<src-attribute>cdAttributeName<\/src-attribute>"]},{"entry":[{},". . ."]},{"entry":[{},"<script-context>contextString<\/script-context>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/scripted-mapping>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Although these mappings have the same syntax as used in attribute flow, the semantic meaning is different. Each mapping means that a value(s) from the metadirectory buffer attribute (direct-mapping) or a calculated value(s) (script-mapping) is compared to the metadirectory core attribute given by \u201cmv-attribute\u201d according to the table below. There is an optional Boolean attribute \u201cintrinsic-attribute\u201d used to signify that the metadirectory core attribute designated by the \u201cmv-attribute\u201d attribute is an \u201cintrinsic\u201d metadirectory attribute (not an attribute in the schema, but metadata exposed by metadirectory for an object). The default value for the \u201cintrinsic-attribute\u201d attribute is \u201cfalse.\u201d","Table 1 illustrates exemplary actions to take in response to successful comparisons of attributes in objects from remote repositories to attributes from objects in the metadirectory core.",{"@attributes":{"id":"p-0372","num":"0383"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Remote Repository","Core object","Successful"]},{"entry":[{},"Attribute","attribute","comparison"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Direct mapping of","Single valued","RR attribute value"]},{"entry":[{},"single valued","core attribute","equals the core"]},{"entry":[{},"attribute in RR",{},"attribute value"]},{"entry":[{},"Direct mapping of","Single valued","One of RR attribute"]},{"entry":[{},"multi-valued","core attribute","values equal to the"]},{"entry":[{},"attribute in RR",{},"core attribute value"]},{"entry":[{},"Direct mapping of","Multi-valued","RR attribute value"]},{"entry":[{},"single valued","core attribute","equal to one of the"]},{"entry":[{},"attribute in RR",{},"core attribute values"]},{"entry":[{},"Direct mapping of","Multi-valued","One of RR attribute"]},{"entry":[{},"multi-valued","core attribute","values equal to one"]},{"entry":[{},"attribute in RR",{},"of the core"]},{"entry":[{},{},{},"attribute values"]},{"entry":[{},"Scripted mapping","Single valued","Scripted value"]},{"entry":[{},"generates a","core attribute","equals the core"]},{"entry":[{},"single value",{},"attribute value"]},{"entry":[{},"Scripted mapping","Single value core","One of scripted"]},{"entry":[{},"generates","attribute","values equals the"]},{"entry":[{},"multiple values",{},"core attribute value"]},{"entry":[{},"Scripted mapping","Multi-valued","Scripted value"]},{"entry":[{},"generates a","core attribute","equals one of the"]},{"entry":[{},"single value",{},"core attribute values"]},{"entry":[{},"Scripted mapping","Multi-valued","One of the scripted"]},{"entry":[{},"generates","core attributes","values equals one of"]},{"entry":[{},"multiple values",{},"the core attribute"]},{"entry":[{},{},{},"values"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"In an exemplary implementation, the object search can be further scoped by specifying an \u201cmv-object-type.\u201d The \u201cmv-object-type\u201d attribute is optional. If it is omitted, then the object type will match all core object types. The search element includes one or more mapping sub-elements. The <resolution> sub-element is used when the \u201ctpe\u201d attribute is \u201cscripted.\u201d The <resolution> sub-element indicates that a user-written script entry point should be called to validate a single result or pick between multiple search results coming back from the search. The actual script will be defined in the scripting object for the MA. The user-defined <script-context> string allows the script to determine the context in which it has been invoked (i.e., from which <join-criterion> element). The callout to the script will return a BOOL to indicate whether the join target has been successfully resolved. It will also be possible to return a new object type for the metadirectory core object in the case of successful comparison. If the script is unable to resolve the join target because of further ambiguous results, then an exception may be issued.","In one implementation, the <resolution> element is mandatory. The <resolution> element may specify a desired resolution script, or the <resolution> element may be left empty with \u201ctype\u201d set to \u201cnone.\u201d An exemplary resolution script has the following parameter list:","IN: buffer object to join","IN: join criterion context string so the script knows how it is being invoked","IN: array of core join candidates","OUT: index of the resolved join target in the core join candidates array","OUT: optional authoritative core object type to be updated on join target","The optional core object type parameter is employed when the resolution script has the ability to determine updates to the object type of the core join target object. This ability might be beneficial in interforest-type scenarios where temporary placeholder objects (e.g., a \u201ccontact\u201d) may be initially imported into the core from a non-authoritative source, and it may be desirable to have the authoritative source override the object type when joining to it (e.g., change a \u201ccontact\u201d to a \u201cuser\u201d).","When a resolution script indicates that the object type of the core object must change, the connector object in the buffer is joined to the core object. Subsequently, all attribute values contributed by the metadirectory buffer objects joined to a core object, will be recalled, the object type of the core object will be changed, and attributes will be re-imported from all the buffer objects joined to the core object. After doing so, provisioning and export flow processes are performed.","An ambiguous result may occur if multiple potential join candidate objects are found during the join search and a single join target object cannot be identified. In one implementation, if the <join-criterion> ends with such ambiguous results, or no results, the join process will advance to the next <join-criterion>.","To further illustrate the join rules schema, another detailed exemplary join rules schema is shown below:",{"@attributes":{"id":"p-0384","num":"0395"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<join>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<join-profile\u2003cd-object-type=\u201cuser\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<join-criterion\u2003id=\u201c{934A9523-A3CA-4BC5-ADA0-"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"D6D95D979429}\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<search\u2003mv-object-type=\u201cuser\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<attribute-mapping\u2003mv-attribute=\u201cuid\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute>empId<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/attribute-mapping>"]},{"entry":[{},"<attribute-mapping\u2003mv-attribute=\u201ccompany\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<constant-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<constant-value>Microsoft<\/constant-value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/constant-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/attribute-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/search>"]},{"entry":[{},"<resolution type=\u201cscripted\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<script-context>Criterion1<\/script-context>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/resolution>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/join-criterion>"]},{"entry":[{},"<join-criterion\u2003id=\u201c{534A9523-A3CA-4BC5-ADA0-"]},{"entry":[{},"D6D95D979425}\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<search\u2003mv-object-type=\u201cuser\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<attribute-mapping\u2003mv-attribute=\u201cmail\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute>alias<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/attribute-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/search>"]},{"entry":[{},"<resolution type=\u201cscripted\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<script-context>Criterion2<\/script-context>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/resolution>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/join-criterion>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/join-profile>"]},{"entry":[{},"<join-profile\u2003cd-object-type=\u201cprov-user\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<join-criterion\u2003id=\u201c{5C875108-D0CD-471a-9D9C-"]},{"entry":[{},"BC3E9C2C4A12}\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<search\u2003mv-object-type=\u201cuser\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<attribute-mapping intrinsic-attribute=\u201ctrue\u201d mv-"]},{"entry":[{},"attribute=\u201cobject-id\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute>mv-object-id<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/attribute-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/search>"]},{"entry":[{},"<resolution\u2003type=\u201cnone\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/join-criterion>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/join-profile>"]},{"entry":[{},"<join-profile\u2003cd-object-type=\u201ccontact\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<join-criterion\u2003id=\u201c{134A9523-A3CA-4BC5-ADA0-"]},{"entry":[{},"D6D95D979421}\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<search\u2003mv-object-type=\u201cuser\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<attribute-mapping intrinsic-attribute=\u201cfalse\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"mv-attribute=\u201cmail\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute>mail<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/attribute-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/search>"]},{"entry":[{},"<resolution\u2003type=\u201cnone\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/join-criterion>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/join-profile>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/join >"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"E.2. Projection Rules","The projection rules schema specifies how metadirectory buffer objects, if any, are projected as new entries in the core. As described herein, an exemplary metadirectory includes a core synchronization engine and a rules engine for employing the projection rules. Such an implementation provides for separation of the rules logic from the synchronization duties, thereby dividing up tasks among distinct modules that specialize in those tasks.","In an exemplary metadirectory implementation, a set of projection rules is associated with an MA. Projection rules specify the manner in which metadirectory buffer objects are projected into the metadirectory core. Projections rules may be defined either in a declarative manner, or programmatically via a user-written script. When the user defines the rules declaratively the mappings may be specified by the user in the configuration UI.","In a particular implementation, the projection rules specify enabling and\/or disabling projection of buffer space objects into the core space, declaratively mapping of remote repository objects into core space object types, and\/or programmatically projecting objects via user-written script(s).","In a particular implementation, two properties are set when creating a new metadirectory core object: a distinguished name (DN) and an object type. In this implementation, the DN may be a persistent system generated GUID. The projection rules may specify whether an object is to be projected from a remote repository into the metadirectory core, and, if so, the appropriate object type to employ for the projection of objects from. Exemplary object type mappings (discussed further below) specify types which indicate whether a mapping is prohibited, scripted, or declarative. Thus, the projection rules are an exemplary mechanism by which object type mappings can be specified.","Declarative mappings allow a user to specify types of metadirectory core objects that should be created when a given remote repository object type is to be projected. Each declarative mapping is an object type pair that identifies both a source remote repository object type and a destination metadirectory core object type. Such declarative mappings may be one-to-one mappings or many-to-one mappings. An example of a many-to-one mapping is a mapping of both \u201cemployee\u201d object types and \u201ccontact\u201d object types to a \u201cuser\u201d object type in the core. A many-to-one mapping may be accomplished by employing two distinct mappings (e.g., one mapping for \u201cemployee\u201d to \u201cuser,\u201d and another for mapping \u201ccontact\u201d to \u201cuser\u201d).","A user-written script can be used in scenarios where simple declarative mappings are not sufficient to determine the metadirectory core object type. An exemplary implementation of a mapping script accepts a metadirectory buffer object as input and, based on the object type and\/or attributes, the script determines an appropriate metadirectory core object type. The mapping script may also selectively determine whether or not to project a buffer object into the core.","The following exemplary pseudo-schema outlines how the projection rules may be configured in XML:",{"@attributes":{"id":"p-0393","num":"0404"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<projection>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<class-mapping id=\u201cGUID\u201d cd-object-type=\u201ccdClass\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"type={\u201cnone\u201d|\u201cdeclared\u201d|\u201cscripted\u201d}>"]},{"entry":[{},"<mv-object-type>mvClass<\/mv-object-type>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/class-mapping>"]},{"entry":[{},". . . additional <class-mapping> elements . . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/projection>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A particular implementation of a projection rule schema includes an ID GUID associated with the mapping rule, <class-mapping>. The GUID may be used to identify lineage properties on the associated object for object change tracking purposes. The UI randomly generates these GUIDs as the user modifies\/creates the projection rules.","If the type is \u201cscripted\u201d then a user-written script determines whether to project and, if so, the appropriate object type to employ. Note that the name of the script method is not specified in the schema shown above. However, in a particular implementation, there may be a specified naming convention (e.g., method named Project( ), etc.) that a customer may follow when authoring a script. An exemplary script has the following parameter list:","IN: CS object to project","OUT: TRUE\/FALSE projection status","OUT: MV object type if projected","In exemplary projecting rules, if the type is \u201cnone\u201d the imported objects will be staged in the metadirectory buffer as normal disconnectors, but will not be projected into metadirectory core.","To further illustrate the projection rules, the following exemplary detailed schema may be used to implement projection rules:",{"@attributes":{"id":"p-0401","num":"0412"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<projection>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<class-mapping type=\u201cdeclared\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"id=\u201c{934A9523-A3CA-4BC5-ADA0-"]},{"entry":[{},"D6D95D979429}\u201d"]},{"entry":[{},"cd-object-type=\u201ccontact\u201d>"]},{"entry":[{},"<mv-object-type>user<\/mv-object-type>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/class-mapping>"]},{"entry":[{},"<class-mapping type=\u201cdeclared\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"id=\u201c{734A9523-A3CA-4BC5-ADA0-"]},{"entry":[{},"D6D95D979427}\u201d"]},{"entry":[{},"cd-object-type=\u201cuser\u201d>"]},{"entry":[{},"<mv-object-type>user<\/mv-object-type>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/class-mapping>"]},{"entry":[{},"<class-mapping type=\u201cdeclared\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"id=\u201c{534A9523-A3CA-4BC5-"]},{"entry":[{},"ADA0-D6D95D979425}\u201d"]},{"entry":[{},"\u2002cd-object-type=\u201cgroup\u201d>"]},{"entry":[{},"\u2002<mv-object-type>group<\/mv-object-type>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/class-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/projection>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The foregoing example demonstrates a many-to-one mapping where both the remote repository object types \u201ccontact\u201d and \u201cuser\u201d are mapped to the metadirectory core \u201cuser\u201d object type. Additionally, the remote repository object type \u201cgroup\u201d is to be mapped to the metadirectory core object type \u201cgroup.\u201d","The following provides an example of how a user-written script can be configured to control buffer to core projection:",{"@attributes":{"id":"p-0404","num":"0415"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<projection>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<class-mapping type=\u201cscripted\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"id=\u201c{934A9523-A3CA-4BC5-ADA0-D6D95D97942A}\u201d"]},{"entry":[{},"cd-object-type=\u201ccontact\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/class-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/projection>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In the above example case, the rules specify that a script should be called to project objects received from a remote repository that have a \u201ccontact\u201d object type. Note that in the scripted case, the mv-object-type element is not specified.","The following provides an example of how to configure the projection rules to disable projection into the metadirectory core:",{"@attributes":{"id":"p-0407","num":"0418"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<projection>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<class-mapping type=\u201cnone\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"id=\u201c{934A9523-A3CA-4BC5-ADA0-D6D95D97942A}\u201d"]},{"entry":[{},"cd-object-type=\u201ccontact\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/projection>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In the above example, the rules specify that remote repository \u201ccontact\u201d object type should not be projected into the metadirectory core.","E.3. Stay Disconnector Rules","This subsection describes an XML format of the stay disconnector rules. The stay disconnector (SD) rules describe a rules engine filter that is employed by the sync engine during the process of importing\/exporting objects. The SD filter is scoped by object type and has the ability to express filtering conditions based on characteristics of the imported object.","The exemplary semantics of the SD rules are as defined by the following considerations: (1) When an object is first imported, it is evaluated against the SD filter before join\/projection is attempted. If the object satisfies the filter, then the sync engine will mark that object as a normal disconnector and will not attempt to join\/project the object. Conversely, if the object does not satisfy the filter, then the sync engine will pursue join\/projection actions for the object. (2) As deltas to the object are imported, the SD filter will be reevaluated regardless of whether the object is currently a disconnector or a connector. If it is a normal connector, and it now satisfies the filter criteria, the join will be broken and it will be turned into a normal disconnector. If it is a normal disconnector and it no longer satisfies the criteria, it will be sent through the join\/project rules for processing. (3) A reapply-rules run will apply the SD filter to all normal connectors and disconnectors, handling them as described in the preceding paragraph. (4) The SD filter is not applied to explicit connectors\/disconnectors because their explicit status exempts them. (5) When any one of the following export scenarios occurs, the SD filter will be applied to the outgoing CS object before it is pushed out to the connected directory: a new object is provisioned; an object rename occurs; or export attribute flow is performed. If the CS object satisfies the SD filter, then an error will be generated and the transaction will be rolled back. This is done to maintain data consistency by avoiding the export of changes to a connected directory that would lead to subsequent disconnection when objects are re-imported.","The stay disconnector rules are encapsulated in a top-level <stay-disconnector> element which may contain multiple children <filter-set> elements, each of which specify filter conditions for specific CD object types.","The following provides the full XML format for these rules. Each portion will be discussed in detail individually in the sections that follow.",{"@attributes":{"id":"p-0414","num":"0425"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<stay-disconnector>"]},{"entry":[{},"\u2003<filter-set cd-object-type=\u201ccdObjectType\u201d type=(declared |"]},{"entry":[{},"\u2003scripted) id=\u201cguid\u201d>"]},{"entry":[{},"\u2003\u2003<filter-alternative id=\u201cguid\u201d>"]},{"entry":[{},"\u2003\u2003\u2003<condition cd-attribute=\u201cattributeName\u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003intrinsic-attribute=(true | false)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003operator=(equality |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003inequality |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003less-than |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003less-than-or-equal |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003greater-than |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003greater-than-or-equal |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003present |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003not-present |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003substring-start |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003not-substring-start |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003substring-end |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003not-substring-end |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003substring-any |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003not-substring-any |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003bit-on |"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003bit-off )>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<value ui-radix=\u201cradix\u201d>operandValue<\/value>"]},{"entry":[{},"\u2003\u2003\u2003<\/condition>"]},{"entry":[{},"\u2003\u2003\u2003..."]},{"entry":[{},"\u2003\u2003<\/filter-alternative>"]},{"entry":[{},"\u2003\u2003..."]},{"entry":[{},"\u2003<\/filter-set>"]},{"entry":[{},"\u2003..."]},{"entry":[{},"<\/stay-disconnector>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The stay disconnector rules are configured within a top-level <stay-disconnector> element. The following provides a high-level outline of how these rules are structured in",{"@attributes":{"id":"p-0416","num":"0427"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<stay-disconnector>"]},{"entry":[{},"\u2003<filter-set cd-object-type=\u201ccdObjectType1\u201d type=(declared |"]},{"entry":[{},"\u2003scripted) id=\u201cguid\u201d>"]},{"entry":[{},"\u2003\u2003<filter-alternative>filterConditions1<\/filter-alternative>"]},{"entry":[{},"\u2003\u2003<filter-alternative>filterConditions2<\/filter-alternative>"]},{"entry":[{},"\u2003\u2003<filter-alternative>filterConditions3<\/filter-alternative>"]},{"entry":[{},"\u2003\u2003..."]},{"entry":[{},"\u2003<\/filter-set>"]},{"entry":[{},"\u2003<filter-set cd-object-type=\u201ccdObjectType2\u201d type=(declared |"]},{"entry":[{},"\u2003scripted) id=\u201cguid\u201d>"]},{"entry":[{},"\u2003..."]},{"entry":[{},"\u2003<\/filter-set>"]},{"entry":[{},"\u2003..."]},{"entry":[{},"<\/stay-disconnector>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The <stay-disconnector> element may encapsulate multiple <filter-set> child elements. An undefined filter or an empty <stay-disconnector> element (e.g., one with no children) means that no filtering is configured and that join\/projection is attempted on all imported objects.","Each <filter-set> element describes filtering conditions for a specific CD object type as configured by the attribute \u201ccd-object-type.\u201d Each <filter-set> should be configured as either declarative or scripted by setting the attribute \u201ce\u201d to either \u201cdeclared\u201d or \u201cscripted,\u201d respectively. The \u201cid\u201d attribute is optional and its presence depends on the configured \u201ctype\u201d as described below.","A declarative <filter-set> is configured with one or more <filter-alternative> child elements and, in one exemplary implementation, should have no \u201cid\u201d attribute (instead, it is specified within each child <filter-alternative> for declarative). Each <filter-alternative> defines a series of conditions involving the DN and\/or attributes of an imported object. An object is said to satisfy a <filter-alternative> if the object's DN and attributes meet all the defined conditions. An implicit \u201cor\u201d exists between all <filter-alternative> elements, such that an object need only satisfy one alternative in order to satisfy the filter.","A scripted <filter-set> is used in scenarios where simple declarative rules are insufficient to describe the filtering requirements and is expressed as an empty <filter-set> element (i.e., it does not have any <filter-alternative> child nodes). A scripted <filter-set> should specify an \u201cid\u201d attribute that uniquely identifies the rule and its value should be a GUID in brace format (e.g., \u201c{534A9523-A3CA-4BC5-ADA0-D6D95D979425}\u201d). The user-written script will take a CS object as input and will determine if the object satisfies the filter based on the CD properties of the object. The script will have this parameter list:","IN: CS object","OUT: Boolean status indicating whether the filter was satisfied.","The filtering process will apply the appropriate <filter-set> based on the object type of the imported object. If no applicable <filter-set> is found, then no filtering is performed on the object and the sync engine will proceed to attempt join\/projection. However, if an appropriate <filter-set> has been identified then the imported object is either evaluated against each <filter-alternative> (if declarative), or passed to the user-written script for evaluation (if scripted). If the imported object satisfies the filter, then the sync engine will mark the object in the CS as a normal disconnector without attempting join\/projection. Conversely, if the filter is not satisfied, then the normal join\/projection process will be attempted for the object.","The <filter-alternative> element encapsulates a set of logical conditions expressed in XML that is used to evaluate the suitability of an object for processing based on its attribute values and\/or DN. If the object satisfies every condition, then a TRUE result is yielded and the alternative is considered to have been satisfied.","These conditions are expressed in this exemplary format:",{"@attributes":{"id":"p-0426","num":"0437"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<filter-alternative\u2003id=\u201cguid\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<condition\u2003cd-attribute=\u201cattributeName1 \u201d"]},{"entry":[{},"operator=\u201coperation\u201d>attrValue1<\/condition>"]},{"entry":[{},"<condition\u2003cd-attribute=\u201cattributeName2 \u201d"]},{"entry":[{},"operator=\u201coperation\u201d>attrValue2<\/condition>"]},{"entry":[{},"<condition\u2003cd-attribute=\u201cattributeName3 \u201d"]},{"entry":[{},"operator=\u201coperation\u201d>attrValue3<\/condition>"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/filter-alternative>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The \u201cid\u201d attribute uniquely identifies the filter alternative and its value should be a GUID in brace format (eg. \u201c{534A9523-A3CA-4BC5-ADA0-D6D95D979425}\u201d). No two filter alternatives may have the same value for the \u201cid\u201d attribute.","The application of an individual condition can yield a TRUE result if the object meets the condition, or a FALSE result if it does not. The condition expressions are effectively and'ed together in order to compute an overall result for the <filter-alternative>. That is, all child node conditions should resolve to TRUE in order for the <filter-alternative> to be satisfied.","Filter conditions are logical expressions that describe the attribute or DN requirements that an object should satisfy. If the object satisfies the requirements, then a TRUE result is yielded.","The filter conditions are expressed in the following exemplary format:",{"@attributes":{"id":"p-0431","num":"0442"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<condition\u2003cd-attribute=\u201cattributeName\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"intrinsic-attribute=(true | false)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"operator=(equality |"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"inequality |"]},{"entry":[{},"less-than |"]},{"entry":[{},"less-than-or-equal |"]},{"entry":[{},"greater-than |"]},{"entry":[{},"greater-than-or-equal |"]},{"entry":[{},"present |"]},{"entry":[{},"not-present |"]},{"entry":[{},"substring-start |"]},{"entry":[{},"not-substring-start |"]},{"entry":[{},"substring-end |"]},{"entry":[{},"not-substring-end |"]},{"entry":[{},"substring-any |"]},{"entry":[{},"not-substring-any |"]},{"entry":[{},"bit-on |"]},{"entry":[{},"bit-off )>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<value\u2003ui-radix=\u201cradix\u201d>operandValue<\/value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/condition>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"\u201ccd-attribute\u201d identifies the directory attribute to which the condition applies. Supported attribute types are string, reference-based*, numeric, and Boolean. \u201cintrinsic-attribute\u201d is set to \u201ctrue\u201d if \u201ccd-attribute\u201d identifies an MMS-intrinsic attribute, namely \u201cdn.\u201d By default, \u201cintrinsic-attribute\u201d is \u201cfalse.\u201d The \u201coperator\u201d attribute defines the operation to perform. The general purpose \u201cequality\u201d and \u201cinequality\u201d operators allow for direct comparison of the complete DN or attribute of an object against a specified value. They apply to both string and non-string attributes. The \u201cless-than,\u201d \u201cless-than-or-equal,\u201d \u201cgreater-than,\u201d and \u201cgreater-than-or-equal\u201d operators apply to numeric attributes only and allow the attributes of an object to be compared against a specified value.","To test for the presence or absence of an attribute from an object, the respective \u201cpresent\u201d and \u201cnot-present\u201d operators can be used. For these operators, the <value> element should be empty or unspecified.","If only a portion of a string attribute or the DN is of interest, then the \u201csubstring-start\u201d or \u201csubstring-end\u201d operators can be employed to check for equality at the start or end, respectively. To match any part of a string attribute, the \u201csubstring-any\u201d operator can be employed for this purpose. Negative substring operators are also available, namely \u201cnot-substring-start,\u201d \u201cnot-substring-end,\u201d and \u201cnot-substring-any.\u201d All string comparisons are case insensitive and accent sensitive.","The bitwise operators \u201cbit-on\u201d and \u201cbit-off\u201d allow individual bits of a numeric attribute to be checked against a bit mask that is specified by the <value> element. In the case of the former, a TRUE condition is obtained if the attribute value \u201cand\u201ded with the bit mask yields a result equal to the bit mask, whereas the latter operation is TRUE if the \u201cand\u201d operation yields 0.","In cases where the attribute value is absent in the imported object, a condition involving an \u201cinequality\u201d operator or any of the \u201cnot\u201d prefixed operators will resolve to TRUE, whereas all other operators will resolve to FALSE.","The contents of the <value> element specify one of the operands employed in the comparison (the other operand is sourced from the object itself). When specifying a value for a numeric attribute type, the value should be expressed in hex format with a \u201c0x\u201d prefix. The \u201cui-radix\u201d attribute allows the UI to preserve the radix in which user numeric data was originally entered. This is required so that the UI can redisplay the value to the user in the original radix because the actual value is stored internally in hex. When dealing with multi-valued attributes, the condition is interpreted as a test to determine if any value in the object matches that specified by the <value> element. For the \u201cbit-on\u201d and \u201cbit-off\u201d operators, the <value> element specifies the bit mask used in the operation.","The following provides an example of the <stay-disconnector> element.",{"@attributes":{"id":"p-0439","num":"0450"},"tables":{"@attributes":{"id":"TABLE-US-00052","num":"00052"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<stay-disconnector>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<filter-set\u2003cd-object-type=\u201ccontact\u201d type=\u201cdeclared\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<filter-alternative id=\u201c{234A9523-A3CA-4BC5-"]},{"entry":[{},"ADA0-D6D95D979422}\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<condition\u2003cd-attribute=\u201cemployeeID\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"intrinsic-attribute=\u201cfalse\u201d operator=\u201cnot-present\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<value\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/condition>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/filter-alternative>"]},{"entry":[{},"<filter-alternative\u2003id=\u201c{334A9523-A3CA-4BC5-ADA0-"]},{"entry":[{},"D6D95D979423}\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<condition\u2003cd-attribute=\u201crdn\u201d intrinsic-"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"attribute=\u201cfalse\u201d operator=\u201cequality\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<value>Jane Doe<\/value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/condition>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/filter-alternative>"]},{"entry":[{},"<filter-alternative\u2003id=\u201c{434A9523-A3CA-4BC5-ADA0-"]},{"entry":[{},"D6D95D979424}\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<condition\u2003cd-attribute=\u201cdn\u201d intrinsic-attribute="]},{"entry":[{},"\u201ctrue\u201d operator=\u201cequality\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<value>cn=Jane Doe,o=Microsoft<\/value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/condition>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/filter-alternative>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/filter-set>"]},{"entry":[{},"<filter-set\u2003cd-object-type=\u201cuser\u201d type=\u201cdeclared\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<filter-alternative\u2003id=\u201c{534A9523-A3CA-4BC5-"]},{"entry":[{},"ADA0-D6D95D979425}\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<condition\u2003cd-attribute=\u201ctitle\u201d operator="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u201csubstring-start\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<value>administrator<\/value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/condition>"]},{"entry":[{},"<condition\u2003cd-attribute=\u201ccompany\u201d"]},{"entry":[{},"operator=\u201cequality\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<value>Microsoft<\/value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/condition>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/filter-alternative>"]},{"entry":[{},"<filter-alternative id=\u201c{634A9523-A3CA-4BC5-"]},{"entry":[{},"ADA0-D6D95D979426}\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<condition\u2003cd-attribute=\u201cmail\u201d operator= \u201cequality\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<value>administrator@Microsoft.com<\/value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/condition>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/filter-alternative>"]},{"entry":[{},"<!\u2212\u2212 filter out if not a normal account (0x200) \u2212\u2212>"]},{"entry":[{},"<filter-alternative id=\u201c{734A9523-A3CA-4BC5-"]},{"entry":[{},"ADA0-D6D95D979427}\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<condition\u2003cd-attribute=\u201cuserAccountControl\u201d"]},{"entry":[{},"operator=\u201cbit-off\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<value\u2003ui-radix=\u201c16\u201d>0x200<\/value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/condition>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/filter-alternative>"]},{"entry":[{},"<!\u2212\u2212 filter out if a disabled account (0x2) \u2212\u2212>"]},{"entry":[{},"<filter-alternative\u2003id=\u201c{834A9523-A3CA-4BC5-"]},{"entry":[{},"ADA0-D6D95D979428}\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<condition\u2003cd-attribute=\u201cuserAccountControl\u201d"]},{"entry":[{},"operator=\u201cbit-on\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<value\u2003ui-radix=\u201c10\u201d>0x2<\/value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/condition>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/filter-alternative>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/filter-set>"]},{"entry":[{},"<filter-set\u2003cd-object-type=\u201corganization\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"type=\u201cscripted\u201d"]},{"entry":[{},"id=\u201c{934A9523-A3CA-"]},{"entry":[{},"4BC5-ADA0-D6D95D979429}\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<filter-set\u2003cd-object-type=\u201corganizationalUnit\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"type=\u201cscripted\u201d"]},{"entry":[{},"id=\u201c{A34A9523-"]},{"entry":[{},"A3CA-4BC5-ADA0-D6D95D97942A}\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/stay-disconnector>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"E.4. Import Attribute Flow XML Format and Runtime Behavior","An exemplary <import-attribute-flow> element includes rules or script, which govern how attributes on objects in the metadirectory buffer are imported to objects in the metadirectory core. Import attribute flow (IAF) rules describe how attribute values should flow from metadirectory buffer objects to linked metadirectory core objects. They are declared in metadirectory core-centric fashion, so that all import flows for all MAs may be defined in one document.","At the lowest level of exemplary IAF rules is a mapping, which describes how to generate a destination attribute value given a set of source attribute values. At the next level is a flow, which encapsulates the mapping, providing metadata (a unique ID) and criteria by source MA and source buffer object type (primary object class). Flows are then grouped and scoped by destination core attribute and, finally, groups of flows are then grouped into flow sets and defined by destination core object type. Thus, a flow ends up defining a relationship between a single destination core attribute and any number of source buffer attributes from a single object type. More details are given in the sections below.","An exemplary <import-attribute-flow> element specifies import attribute flow (IAF) rules. Within an exemplary <import-attribute-flow> are defined multiple flow sets, which describe the attribute flows or associations for a particular set of metadirectory buffer and metadirectory core object types. An exemplary <import-attribute-flow> element is given below:",{"@attributes":{"id":"p-0444","num":"0455"},"tables":{"@attributes":{"id":"TABLE-US-00053","num":"00053"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<import-attribute-flow>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<import-flow-set mv-object-type=\u201cobject type\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<import-flows mv-attribute=\u201cattribute name\u201d"]},{"entry":[{},"type=\u201cranked\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<import-flow src-ma=\u201cguid\u201d cd-object-type=\u201cobject type\u201d"]},{"entry":[{},"id=\u201cguid\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/import-flow>"]},{"entry":[{},"<import-flow src-ma=\u201cguid\u201d cd-object-type=\u201cobject type\u201d"]},{"entry":[{},"id=\u201cguid\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute intrinsic=\u201ctrue\u201d>dn<\/src attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/import-flow>"]},{"entry":[{},"<import-flow src-ma=\u201cguid\u201d cd-object-type=\u201cobject type\u201d"]},{"entry":[{},"id=\u201cguid\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<scripted-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]},{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]},{"entry":[{},"<script-context>context string<\/script-context>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/scripted-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/import-flow>"]},{"entry":[{},"<import-flow src-ma=\u201cguid\u201d cd-object-type=\u201cobject type\u201d"]},{"entry":[{},"id=\u201cguid\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<constant-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<constant-value>value<\/constant-value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/constant-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/import-flow>"]},{"entry":[{},"<import-flow src-ma=\u201cguid\u201d cd-object-type=\u201cobject type\u201d"]},{"entry":[{},"id=\u201cguid\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<dn-part-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<dn-part>part index<\/dn-part>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/dn-part-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/import-flow>"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/import-flows>"]},{"entry":[{},"<import-flows mv-attribute=\u201cattribute name\u201d"]},{"entry":[{},"type=\u201cranked\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/import-flows>"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/import-flow-set>"]},{"entry":[{},"<import-flow-set mv-object-type=\u201cobject type\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/import-flow-set>"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/import-attribute-flow>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In a particular implementation, IAF mappings describe how to generate a destination metadirectory core attribute value (or values) given a set of source metadirectory buffer attribute values. Four exemplary types of mappings are direct, scripted, constant, and Distinguished Name-part. Each type of mapping has an associated element type: <direct-mapping>, <scripted-mapping>, <constant-mapping>, and <dn-part-mapping>, respectively. Examples of such elements are shown below:",{"@attributes":{"id":"p-0446","num":"0457"},"tables":{"@attributes":{"id":"TABLE-US-00054","num":"00054"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/direct-mapping>"]},{"entry":[{},"<direct-mapping>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute intrinsic=\u201ctrue\u201d>dn<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/direct-mapping>"]},{"entry":[{},"<scripted-mapping>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]},{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]},{"entry":[{},"<src-attribute intrinsic=\u201ctrue\u201d>dn<\/src-attribute>"]},{"entry":[{},"<script-context>context string<\/script-context>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/scripted-mapping>"]},{"entry":[{},"<constant-mapping>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<constant-value>value<\/constant-value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/constant-mapping>"]},{"entry":[{},"<dn-part-mapping>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<dn-part>part index<\/dn-part>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/dn-part-mapping>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Exemplary flows encapsulate mappings, providing metadata (a unique ID) and scoping by source MA and source buffer object type. Flows are defined via the <import-flow> element, which should have exactly one mapping sub-element. An exemplary <import-flow> elements defines the attributes src-ma, cd-object-type, and id. Below is an example of an <import-flow> element:",{"@attributes":{"id":"p-0448","num":"0459"},"tables":{"@attributes":{"id":"TABLE-US-00055","num":"00055"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<import-flow src-ma=\u201cguid\u201d cd-object-type=\u201cobject type\u201d id=\u201cguid\u201d>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/import-flow>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Within the top-level <import-attribute-flow> element can be multiple <import-flow-set> elements, which themselves can contain multiple <import-flows> elements. The <import-flows> elements can then contain any number of <import-flow> elements. Taken together, the <import-flow-set> and <import-flows> elements define child flow declarations by destination core object type and destination core attribute. Exemplary <import-flow-set> and <import-flows> attribute elements are shown below:",{"@attributes":{"id":"p-0450","num":"0461"},"tables":{"@attributes":{"id":"TABLE-US-00056","num":"00056"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<import-flow-set mv-object-type=\u201cobject type\u201d>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<import-flows mv-attribute=\u201cattribute name\u201d type=\u201cranked\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<import-flow src-ma=\u201cguid\u201d cd-object-type=\u201cobject type\u201d"]},{"entry":[{},"id=\u201cguid\u201d>"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/import-flow>"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/import-flows>"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/import-flow-set>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"E.5. Export Attribute Flow XML","The export-attribute-flow element may be used to specify how values of attributes on metadirectory core objects should be flown back to connected metadirectory buffer objects (i.e., be exported). Export attribute flow (EAF) rules describe how attribute values should flow from core objects to linked buffer objects. In one implementation, the EAF rules are declared in an MA-centric fashion, and thus, may be specified for each MA.","In an exemplary implementation, the EAF rules provide a mapping, which describes how to generate a destination attribute value given a set of source attribute values. The EAF rules may also provide a flow, which encapsulates the mapping, providing metadata (a unique ID and mapping configuration) and scoping based on the destination attribute. Attribute flows are grouped into flow sets, wherein the groups are based on source object type and destination object type. Thus, a flow can be used to define a relationship between a single destination attribute in the metadirectory buffer, and any number of source attributes from a single object type in the metadirectory core.","Exemplary export attribute flow (EAF) rules may be encapsulated in a top-level <export-attribute-flow> element. Multiple flow sets are defined within the <export-attribute-flow> element. The flow sets define how object types in the metadirectory buffer are related to object types in the metadirectory core. To illustrate and exemplary <export-attribute-flow> format, an XML schema is shown below:",{"@attributes":{"id":"p-0455","num":"0466"},"tables":{"@attributes":{"id":"TABLE-US-00057","num":"00057"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<export-attribute-flow>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<export-flow-set cd-object-type=\u201cobject type\u201d"]},{"entry":[{},"mv-object-type=\u201cobject type\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<export-flow cd-attribute=\u201cattribute name\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"id=\u201cguid\u201d"]},{"entry":[{},"suppress-deletions=\u201ctrue\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/export-flow>"]},{"entry":[{},"<export-flow cd-attribute=\u201cattribute name\u201d id=\u201cguid\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute intrinsic=\u201ctrue\u201d>object-id<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/export-flow>"]},{"entry":[{},"<export-flow cd-attribute=\u201cattribute name\u201d id=\u201cguid\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<scripted-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]},{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]},{"entry":[{},"<script-context>context string<\/script-context>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/scripted-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/export-flow>"]},{"entry":[{},"<export-flow cd-attribute=\u201cattribute name\u201d id=\u201cguid\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<constant-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<constant-value>value<\/constant-value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/constant-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/export-flow>"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/export-flow-set>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<export-flow-set cd-object-type=\u201cobject type\u201d"]},{"entry":[{},"mv-object-type=\u201cobject type\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/export-flow-set>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/export-attribute-flow>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Exemplary <export-attribute-flow> mappings describe how to generate a destination metadirectory buffer attribute value (or values) given one or more source metadirectory core attribute values. Three exemplary types of mappings are shown: direct, scripted, and constant. Each type of mapping has an associated XML element: <direct-mapping>, <scripted-mapping>, and constant-mapping>, respectively. A general format for attribute mappings is illustrated in the following exemplary schemas:",{"@attributes":{"id":"p-0457","num":"0468"},"tables":{"@attributes":{"id":"TABLE-US-00058","num":"00058"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/direct-mapping>"]},{"entry":[{},"<direct-mapping>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute intrinsic=\u201ctrue\u201d>object-id<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/direct-mapping>"]},{"entry":[{},"<scripted-mapping>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]},{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]},{"entry":[{},"<src-attribute intrinsic=\u201ctrue\u201d>object-id<\/src-attribute>"]},{"entry":[{},"<script-context>context string<\/script-context>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/scripted-mapping>"]},{"entry":[{},"<constant-mapping>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<constant-value>value<\/constant-value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/constant-mapping>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Flows encapsulate mappings, providing metadata (a unique ID and mapping configuration) and scoping by destination CS attribute. In one implementation, flows are defined via the <export-flow> element, which may have a mapping sub-element. Exemplary <export-flow> elements may define the attributes cd-attribute and id, and may optionally define the attribute suppress-deletions. Below is an example of an <export-flow> element XML.",{"@attributes":{"id":"p-0459","num":"0470"},"tables":{"@attributes":{"id":"TABLE-US-00059","num":"00059"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<export-flow cd-attribute=\u201cattribute name\u201d id=\u201cguid\u201d"]},{"entry":[{},"suppress-deletions=\u201cfalse\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute>attribute name<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/export-flow>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The exemplary cd-attribute attribute provides scoping for the mapping sub-element by defining the mapping's destination metadirectory buffer attribute associated with the mapping. The value of cd-attribute may be the name of a schema-defined buffer attribute that is a member of the destination buffer object type (as defined by the <export-flow-set> element-see below) or an auxiliary class that can possibly be found associated with the destination buffer object type.","Associated with each exemplary mapping is metadata that may be used to identify and configure the mapping. A unique GUID ID associated with a mapping is defined by an id attribute whose value may be a GUID in normal brace format (i.e., \u201c{66069022-6C8C-d90-A706-17B96A70A4F9}\u201d). This mapping ID may be used when tracking rules contributions during preview mode runs.","In one implementation, a mapping configuration indicates whether or not deletions should be suppressed for the mapping; i.e., whether or not NULL values and deletions on source attributes are to be transferred to destination attributes as a delete or suppressed\/ignored. This configuration option may be specified via the optional suppress-deletions attribute, which may take on the values \u201ctrue\u201d and \u201cfalse,\u201d the default being \u201cfalse.\u201d Exemplary actions taken based on mapping configurations are discussed in further detail below.","Within an exemplary top-level <export-attribute-flow> element can be one or more <export-flow-set> elements, each of which can contain one or more <export-flow> elements. The <export-flow-set> elements act to define child flow declarations by a source metadirectory core object type and destination metadirectory buffer object type. The following exemplary schema illustrate an exemplary <export-flow> element:",{"@attributes":{"id":"p-0464","num":"0475"},"tables":{"@attributes":{"id":"TABLE-US-00060","num":"00060"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<export-flow-set cd-object-type=\u201cobject type\u201d"]},{"entry":[{},"mv-object-type=\u201cobject type\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<export-flow cd-attribute=\u201cattribute name\u201d id=\u201cguid\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/export-flow>"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/export-flow-set>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Flow and mapping sub-elements of the <export-flow-set> element define flows or relationships between a metadirectory buffer object type and metadirectory core object type pair. More specifically, the exemplary <export-flow-set> element shown above defines cd-object-type and mv-object-type attributes that serve to define the scope of sub-elements by source metadirectory core object type and destination metadirectory buffer object type. In an exemplary implementation, the value of the cd-object-type attribute is the name of a buffer object type defined in a destination MA's schema, and the value of the mv-object-type attribute is the name of an object type defined in the core schema (described in further detail below). In one implementation, each flow set corresponds to one source core object type and one destination buffer object type. An exemplary <export-attribute-flow> element is shown below in XML:",{"@attributes":{"id":"p-0466","num":"0477"},"tables":{"@attributes":{"id":"TABLE-US-00061","num":"00061"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<export-attribute-flow>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<export-flow-set cd-object-type=\u201cUser\u201d mv-object-type=\u201cperson\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<export-flow cd-attribute=\u201cemail\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"id=\u201c{9E691F4E-4301-4112-B964-CE7E8A\\F7CAC}\u201d"]},{"entry":[{},"suppress-deletions=\u201ctrue\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute>email<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/export-flow>"]},{"entry":[{},"<export-flow cd-attribute=\u201cdescription\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"id=\u201c{8F15B855-0517-40f8-9AE9-0565600C0017}\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<scripted-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<src-attribute>email<\/src-attribute>"]},{"entry":[{},"<src-attribute>description<\/src-attribute>"]},{"entry":[{},"<script-context>contextString<\/script-context>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/scripted-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/export-flow>"]},{"entry":[{},"<export-flow cd-attribute=\u201cuid\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"id=\u201c{DCC92CCA-A2DA-4060-8605-78755F072616}\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<src-attribute intrinsic=\u201ctrue\u201d>object-id<\/src-attribute>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/direct-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/export-flow>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/export-flow-set>"]},{"entry":[{},"<export-flow-set cd-object-type=\u201cContact\u201d mv-object-type=\u201cperson\u201d>"]},{"entry":[{},"<export-flow cd-attribute=\u201clinked\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"id=\u201c{A3D569E9-5DD9-4ece-8AB6-4A4BA4b5554A}\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<constant-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<constant-value>some value<\/constant-value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/constant-mapping>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/export-flow>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/export-flow-set>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/export-attribute-flow>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"As discussed, mappings defined in the <export-attribute-flow> elements, a destination buffer attribute value (or values) may be generated, based on one or more source core attribute values. In one exemplary implementation, EAF mappings include a \u201csuppress deletions\u201d configuration option that can be used to keep NULL values and deletes from flowing from the core to the buffer. The behavior of this option is detailed below in the section entitled \u201cEAF Operations.\u201d The EAF element may or may not be used to validate calculated destination values against a destination remote repository schema. For example, pending exports may be compared to objects\/values in a remote repository schema by requesting a buffer object. A user can perform such a validation check if an object fails to export, to determine why the failure occurred.","A mapping in the <export-attribute-flow> may be a \u201cdirect mapping.\u201d More specifically, the intrinsic attribute core object ID may be declared as the source attribute for an EAF direct mapping. In an exemplary implementation, the core object ID is treated a string value that is directly mapped to the associated destination (i.e., buffer object) attribute. For example, individual bytes in a core (source) GUID of \u201c{befa5fc6-1661-47b4-9c34-deff19525cda}\u201d will be formatted as a string prior to being exported to the associated buffer space attribute.","Four exemplary operations related to EAF are described below. These exemplary operations include full synchronization, delta synchronization, reference synchronization, and \u201cback-to-source\u201d synchronization. These operations may be referred to as full sync, delta sync, ref sync or ref-retry, and \u201cback-to-source\u201d sync, respectively. In a particular implementation, the synchronization engine (SE) determines when to invoke any of the EAF operations.","Full sync may be called the first time a source core object is synchronized to a newly connected destination metadirectory buffer object. The full sync may also be run when running in re-evaluate rules mode. During full sync, all objects and attributes are exported from the metadirectory core to the metadirectory buffer.","Delta sync may be called when a source metadirectory core object has previously been synchronized to a destination metadirectory buffer object. During a delta sync, only values that have changed in the core object are exported to the corresponding object in the metadirectory buffer.","An attribute in a first object in the metadirectory core may reference a second metadirectory core object. If the second metadirectory core object is linked to or unlinked from a metadirectory buffer object, the attribute values (called reference attribute values) related to the first core object may be changed as a result. The ref sync operation may be called to export the reference attribute values to an object in the buffer that corresponds to the first object in the core.","Some SE operations that change metadirectory buffer objects (and\/or attributes) can trigger another synchronization involving updating the core based on the change in the buffer, and again updating the buffer based on the update to the core. The \u201cback-to-source\u201d sync operation may be called when such a \u201cre-synchronization\u201d occurs. When executing a mapping, all values are flowed from core to metadirectory buffer.","The ref sync operation \u201creverts\u201d updates imported attribute values to match attribute values calculated in the EAF process.","For a given source metadirectory core object and destination metadirectory buffer object, an EAF mapping is said to be \u201cin-scope\u201d if the mapping's source core object type (mv-object-type) and destination buffer object type (cd-object-type) match those of the core and buffer objects, respectively.","For a given source core object and destination buffer object, an EAF mapping is said to be \u201csatisfied\u201d if the core object has a value for at least one of the mapping's source attributes (src-attribute).","In general, sync operations take a source core object and a destination buffer object as input and attempt to execute in-scope, satisfied mappings to flow attributes from the core object to the buffer object. Each sync operation may differ from the other synch operations with regard to which attributes are considered when checking to determine if a mapping is satisfied, and which values are flowed when executing a direct mapping.","When determining which mappings are satisfied during a full sync, all source attributes are considered. When determining which mappings are satisfied during a delta sync, only those source attributes that have a changed value (have a pending delta) are considered. When determining which mappings are satisfied during a ref sync, only those to source attributes of reference type are considered.","\u201cExport precedence\u201d refers to calculations made to determine if an export flow that overlaps with an import flow will be allowed to execute. The calculation may be made by comparing the precedence of the overlapping import flow with the precedence of the import flow that supplied the values for the core attribute that is the source of the overlapping export flow. Only when the precedence of the source values is higher than that of the overlapping import flow will the export flow be allowed to execute.","In one implementation, an export flow and import flow are said to overlap if the export flow has exactly one source attribute which is also the destination attribute for the import flow and\/or the destination attribute of the export flow is one of the source attributes of the import flow.","E.6. Run Configuration XML Format","An exemplary Run Profile Configuration Element in an MA schema section describes \u201crun profiles\u201d defined for the MA. The following schema illustrates an exemplary format for a Run Profile Configuration Element:",{"@attributes":{"id":"p-0483","num":"0494"},"tables":{"@attributes":{"id":"TABLE-US-00062","num":"00062"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<ma-run-data>"]},{"entry":[{},"\u2003<run-configuration>...<\/run-configuration>"]},{"entry":[{},"\u2003<run-configuration>...<\/run-configuration>"]},{"entry":[{},"\u2009..."]},{"entry":[{},"<\/ma-run-data>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In a particular metadirectory implementation, the metadirectory server instantiates a MA run by passing a run configuration XML fragment parameter to an Execute( ) function in the MA. The XML fragment contains execution parameters describing how the MA should run.","An exemplary run configuration schema is shown in the following XML fragment:",{"@attributes":{"id":"p-0486","num":"0497"},"tables":{"@attributes":{"id":"TABLE-US-00063","num":"00063"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<ma-run-data>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<run-configuration>"]},{"entry":[{},"<id> guid <\/id>"]},{"entry":[{},"<name> string <\/name>"]},{"entry":[{},"<creation-time> time (read only) <\/creation-time>"]},{"entry":[{},"<last-modification-time> time (read only) <\/last-modification-time>"]},{"entry":[{},"<version> integer <\/version>"]},{"entry":[{},"<configuration>"]},{"entry":[{},"<step>"]},{"entry":[{},"<step-type type=\u201cfull-import | delta-import | export | apply-rules\u201d>"]},{"entry":[{},"<import-subtype> to-file <\/import-subtype>"]},{"entry":[{},"<import-subtype> resume-from-file <\/import-subtype>"]},{"entry":[{},"<import-subtype> to-cs <\/import-subtype>"]},{"entry":[{},"<export-subtype> to-file <\/export-subtype>"]},{"entry":[{},"<export-subtype> resume-from-file <\/export-subtype>"]},{"entry":[{},"<apply-rules-subtype> apply-pending <\/apply-rules-subtype>"]},{"entry":[{},"<apply-rules-subtype> reevaluate-flow-connectors <\/apply-rules-"]},{"entry":[{},"subtype>"]},{"entry":[{},"<\/step-type>"]},{"entry":[{},"<dropfile-name> string <\/dropfile-name>"]},{"entry":[{},"<threshold>"]},{"entry":[{},"<object> integer <\/object>"]},{"entry":[{},"<\/threshold>"]},{"entry":[{},"<partition> string <\/partition>"]},{"entry":[{},"<custom-data> XML fragment <\/custom-data>"]},{"entry":[{},"<step>"]},{"entry":[{},"<step>"]},{"entry":[{},". . ."]},{"entry":[{},"<\/step>"]},{"entry":[{},". . ."]},{"entry":[{},"<\/configuration>"]},{"entry":[{},"<\/run-configuration>"]},{"entry":[{},"<run-configuration>"]},{"entry":[{},". . ."]},{"entry":[{},"<\/run-configuration>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/ma-run-data>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Exemplary sub-element <id> is a unique identifier (GUID) associated with the run configuration. Exemplary sub-element <name> is the display name for the run configuration. Exemplary sub-element creation-time is the time (e.g., GMT) at which the run profile was created. Exemplary sub-element last-modification-time is the time (e.g., GMT) when the run profile was last modified. Exemplary sub-element version is the version number (e.g., integer) of the run configuration.","Exemplary sub-element <step> include information about steps and types of steps in the MA run. The user can configure multiple \u201crun profiles\u201d for an MA. Each \u201crun profile\u201d consists of 1 or more steps. Each step may include of an operation involving import, synchronization, or export. Within the <step> sub-element are descriptions associated with one or more types of steps. In the exemplary <step-type> sub-element, possible step-types are \u201cfull-import,\u201d \u201cdelta-import,\u201d \u201cexport,\u201d and \u201capply rules.\u201d Each step-type can be further described in sub-elements for the particular type. Examples of the step-types and their associated values are given in Table 2, Table 3, and Table 4.","Table 2 illustrates exemplary values that may be used in <import-subtype> and <delta-subtype> sub-elements.",{"@attributes":{"id":"p-0490","num":"0501"},"tables":{"@attributes":{"id":"TABLE-US-00064","num":"00064"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Import subtype(s)","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["None","An import run without any subtype means that"]},{"entry":[{},"the synchronization is from remote repository"]},{"entry":[{},"all the way to the metadirectory core."]},{"entry":["to-file","This subtype drops a file during import"]},{"entry":[{},"and stop without staging the import data in"]},{"entry":[{},"metadirectory buffer. With this sub-type,"]},{"entry":[{},"watermark will not be updated for delta import."]},{"entry":["Resume-from-file","This subtype resumes an import run from a"]},{"entry":[{},"drop file. With this sub-type, watermark"]},{"entry":[{},"will not be updated for delta import."]},{"entry":["to-file, resume-from-","These subtypes drop an audit file and"]},{"entry":["file","continue the import run without stopping."]},{"entry":["to-cs","This subtype stages the import data in"]},{"entry":[{},"metadirectory buffer and stops the import run."]},{"entry":["resume-from-file, to-","These subtypes resume an import run from"]},{"entry":["cs","a drop file, stage the import data in"]},{"entry":[{},"metadirectory buffer and stop the import"]},{"entry":[{},"run. With this sub-type, watermark will"]},{"entry":[{},"not be updated for delta import."]},{"entry":["to-file, resume-from-","This drops an audit file during import,"]},{"entry":["file, to-cs","stages import data in metadirectory buffer"]},{"entry":[{},"and stop the import run."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table 3 illustrates exemplary values that may be used in <export-subtype> sub-elements.",{"@attributes":{"id":"p-0492","num":"0503"},"tables":{"@attributes":{"id":"TABLE-US-00065","num":"00065"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Import subtype(s)","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["None","An export run without any substep means"]},{"entry":[{},"that the synchronization is from metadirectory"]},{"entry":[{},"buffer all the way to the remote repository."]},{"entry":["to-file","This will drop a file during export and"]},{"entry":[{},"stop. With this sub-type, export"]},{"entry":[{},"batch number will not be updated."]},{"entry":["resume-from-file","This will resume an export run from a"]},{"entry":[{},"drop file. With this sub-type, export batch"]},{"entry":[{},"number will not be updated."]},{"entry":["to-file, resume-from-","This implies that we will drop an audit"]},{"entry":["file","file but will not stop at the drop file"]},{"entry":[{},"during an export run."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table 4 illustrates exemplary values that may be used in <apply-rules-subtype> sub-elements.",{"@attributes":{"id":"p-0494","num":"0505"},"tables":{"@attributes":{"id":"TABLE-US-00066","num":"00066"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Import subtype(s)","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["apply-pending","It attempts to synchronize all connectors with"]},{"entry":[{},"staged pending imports and also attempts to"]},{"entry":[{},"join\/project (and flow attributes) on all"]},{"entry":[{},"normal disconnectors even if they have failed"]},{"entry":[{},"to join during previous apply-pending runs."]},{"entry":["reevaluate-flow-","It attempts to reevaluate attribute flow for all"]},{"entry":["connectors","connectors in metadirectory buffer under this MA."]},{"entry":["Reevaluate-join-flow-","Reevaluate join and attribute flow for all entries"]},{"entry":["all","in CS (connectors an disconnectors). Explicit"]},{"entry":[{},"connectors\/disconnectors will not be reevaluated"]},{"entry":[{},"(can only be changed using account joiner)."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"An exemplary <dropfile-name> sub-element can be provided, whereby the user may specify the name of a drop file associated with the MA run. In a particular implementation, one file name may be provided per step.","An exemplary <threshold> sub-element is a sync engine threshold for all MAs. In a particular implementation, all of the specified thresholds are given in absolute numbers. Within a <threshold> sub-element, an <object sub-element specifies the number of objects to process for the run.","An exemplary <partition> sub-element identifies a partition associated with the associated run steps. In a particular implementation, the format of the partition is MA-specific.","An exemplary custom-data> sub-element contains MA-specific data for an associated step. Exemplary information that can be provided in the custom-data> sub-element are step custom data, ad-step-data, time-limit, page-size, batch-size, granular-security, bulk-export, and permissive-write.","To further illustrate an exemplary <ma-run-data> element, the following schema is provided. The schema contains a delta import of objects from an Active Directory\u00ae (AD) repository. The delta import data is dropped into a file for audit and then staged in the metadirectory buffer. Then, the run stops so the user can examine the metadirectory buffer to see what will be propagated to the metadirectory core before committing any changes to the core. In this particular example, the drop file path is \u201cC:\\temp\\test.xml.\u201d Also, in this example two thresholds are set and the import run terminates if either one of the thresholds is reached.",{"@attributes":{"id":"p-0500","num":"0511"},"tables":{"@attributes":{"id":"TABLE-US-00067","num":"00067"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<ma-run-data>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<run-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<name> My Typical Delta Import <\/name>"]},{"entry":[{},"<id> 934A9523-A3CA-4BC5-ADA0-D6D95D979421 <\/id>"]},{"entry":[{},"<version> 3 <\/version>"]},{"entry":[{},"<configuration>"]},{"entry":[{},"<step>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<step-type type=\u201cdelta-import\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<import-subtype> to-file <\/import-subtype>"]},{"entry":[{},"<import-subtype> resume-from-file <\/import-subtype>"]},{"entry":[{},"<import-subtype> to-cs <\/import-subtype>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/step-type>"]},{"entry":[{},"<dropfile-name> c:\\temp\\test.xml <\/dropfile-name>"]},{"entry":[{},"<threshold>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<object> 100 <\/Object>"]},{"entry":[{},"<delete> 20 <\/Delete>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/threshold>"]},{"entry":[{},"<partition> cn=ssiu1,ou=nttest,dc=Microsoft,dc=com"]},{"entry":[{},"<\/partition>"]},{"entry":[{},"<custom-data>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<timeout>1000<\/timeout>"]},{"entry":[{},"<page-size>500<\/page-size>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/custom-data>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<step>"]},{"entry":[{},"<\/configuration>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/run-configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/ma-run-data>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Although some exemplary methods, exemplary devices, exemplary systems, and exemplary schemas have been illustrated in the accompanying Drawings and described in the foregoing Detailed Description, it will be understood that the methods, devices, systems, and schemas are not limited to the exemplary embodiments disclosed, but are capable of numerous rearrangements, modifications and substitutions without departing from the spirit set forth and defined by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more complete understanding of the various methods and arrangements described herein, and equivalents thereof, may be had by reference to the following detailed description when taken in conjunction with the accompanying drawings wherein:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 5","FIG. 2"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 6","FIG. 2"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 12-16"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 17"}]},"DETDESC":[{},{}]}
