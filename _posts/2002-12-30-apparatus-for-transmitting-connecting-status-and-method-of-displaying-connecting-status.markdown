---
title: Apparatus for transmitting connecting status and method of displaying connecting status
abstract: On the basis of information of a topology map, a parent node ID list is generated to show correspondence of ID of each node to that of its parent node. Information given by the parent node ID list is transmitted as connection display data in a predetermined format. The receiving side, on the basis of the received connection display data, obtains information of a connecting status display to display connecting status of a network. On the basis of this information, a display to show connecting status of the network is displayed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07058679&OS=07058679&RS=07058679
owner: Kabushiki Kaisha Toshiba
number: 07058679
owner_city: Kanagawa-Ken
owner_country: JP
publication_date: 20021230
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This is a Divisional Application of U.S. application Ser. No. 09\/199,430 filed Nov. 25, 1998 now U.S. Pat. No. 6,529,951, the entirety of which is hereby incorporated by reference.","1. Field of the Invention","The present invention relates to an apparatus for transmitting connecting status, an apparatus for generating display data thereof and a method of displaying the same suitable for networks corresponding to the IEEE 1394 standard.","2. Related Art Statement","In recent years, IEEE (The Institute of Electrical and Electronics Engineers, Inc.) 1394 has prevailed as a unified standard for digital interface systems and as a low-cost peripheral interface suitable for multimedia use in order to transmit and receive data among digital image devices. IEEE 1394 enables multiplex transfer of a plurality of channels. IEEE 1394 has also become a digital interface suitable for image transmission because it has an isochronous transferring function which assures the transfer of image and voice data in a given period of time.","IEEE 1394 can form topologies in daisy-chain and tree shapes, and each bus is able to be connected with up to 63 nodes.","As IEEE 1394 allows such free connecting forms, it becomes convenient when a display of present connecting status is permitted. Present connecting status is designed to be managed by a bus manager provided in a predetermined single node in a bus.","However, not all nodes with functions of bus manager have displaying parts. Consequently, in order to display connecting status, connecting information from a bus manager should be transmitted to a node having a displaying part, but there is no standard for transmission formats to transmit connecting information.","It is possible, in this case, too, to display connecting status using a displaying part of another node by generating image data showing a display of connecting status from connecting information of a bus manager and transmitting these image data. In this case, however, the amount of data to transmit becomes enormous increasing burdens on both sides of a bus manager and a displaying part.","Meanwhile, data transfer protocol of IEEE 1394 is defined by three layers (hereinafter also defined as 1394 layers), a physical layer, a link layer and a transaction layer. Though these IEEE 1394 layers have been standardized, there is no common standard, for display layers which regulate management of hardware and provision of user interface at a node using operating system (hereinafter referred to as OS). Similarly, there is no common API (Application Programming Interface), which is a standardized interface for applications to use services such as OS.","Recently, in the fields of information equipment and home appliances, there has been a tendency to make these display layer and API common. However, API cannot be made common because standardization of data formats for connecting information from a bus manager has not been realized yet.","Another problem is that, in IEEE 1394, a maximum number of hierarchies (hop count) from a root is limited to 16 when connection is done in a tree-shape. When connecting status is not displayed in an easy way to secure the hop count, users might connect exceeding a maximum hop count permitted. Besides, when connection exceeded a maximum hop count, it is not simple to distinguish equipment which should be disconnected.","As stated above, there have been problems; that no standard exists for data to transmit connecting status displays from a bus manager having topology information to a display layer having displaying functions or from a node having a bus manager with topology information to a node which is a displaying equipment with no such function; and as a result, that it is impossible to display connecting status without increasing burdens on both of the outputting side of connecting information and the displaying side. Another problem is that it has been impossible to design display layers and API's as common devices. Another problem is that there has been no display of connecting status to allow the hop count to be secured easily.","It is an object of the present invention, by standardizing transmission formats for connecting information, to enable connecting status to be displayed without increasing burdens on either side to output connecting information and a side to display, and at the same time, by making interface of a 1394 layer and API or a display layer common, to provide an apparatus for transmitting connecting status which enables a display of common displays at all indicators, an apparatus for generating display data of connecting status, and a method of displaying connecting status.","It is another object of the present invention to provide an apparatus for transmitting connecting status which enables displays of connecting status through which the hop count can be secured easily, an apparatus for generating display data about connecting status, and a method of displaying connecting status.","An apparatus for transmitting connecting status according to the present invention comprises a computing means for computing correspondence of ID of each node to that of its parent node on the basis of data showing port status in a topology map of a network and generating parent node ID information; and a data outputting means for generating connection display data in a predetermined data format out of the parent node ID information and transmitting the data, or generating transmission data in a predetermined transmission data format out of the connection display data and transmitting the data onto the network.","An apparatus for generating connecting status display data according to the present invention comprises an image data generating means where connection display data in a predetermined data format, which are generated on the basis of parent node ID information to show correspondence of ID of each node to that of its parent node in a network, or transmission data in a predetermined transmission data format, which are generated on the basis of the connection display data, are inputted and image data are generated in order to display connecting status of the network on the basis of the inputted connection display data or of connection display data fetched from the transmission data.","A method of displaying connecting status according to the present invention comprises a procedure to compute correspondence of ID of each node to that of its parent node on the basis of data, which show status of ports in a topology map of a network, and to generate parent node ID information, a procedure to generate and transmit connection display data in a predetermined data format out of the parent node ID information or to generate transmission data in a predetermined transmission data format out of the connection display data and to transmit the data onto the network, and a procedure to have the connection display data or the transmission data transmitted through a predetermined transmission path inputted and to generate image data for displaying connection status of the network on the basis of the inputted connection display data or connection display data fetched from the transmission data.","Other features and advantages of the present invention will be explained clearly enough in the following description.","The present invention will now be described in detail with reference to the accompanying drawings which illustrate its embodiments.  are block diagrams to show embodiments, respectively, of an apparatus for transmitting connecting status and of an apparatus for generating connecting status display data according the present invention.  is a block diagram showing a protocol configuration of IEEE 1394.","In , a protocol configuration of a node  includes the IEEE 1394 interface , the API  and the display layer . The IEEE 1394 interface  has a bus managing part  as well as three of 1394 layers, a physical and link layer  and a transaction layer .","The physical and link layer  is an interface of a physical layer and a link layer, and performs, at the physical layer, encoding and decoding processes of transmission data, bus arbitration process and interfacing process with medium, and at the link layer, transmitting\/receiving of packets and cycle control.","The transaction layer  regulates transmission of commands and protocol of receiving, and transmits\/receives transmission data to\/from transmission media (IEEE 1394 bus), which are not shown, through the physical and link layer .","The transaction layer  transmits data, commands or functions together with the display layer  through the API . The API  is an interface for applications to use services such as OS, and the display layer  manages hardware and provides user-interface. For example, when the display layer  has a displaying part, displaying on the basis of the connection display data inputted through the API  becomes possible if connection display data are standardized.","At a specified node on a bus of IEEE 1394 (not shown), a bus managing Part  is provided at the IEEE 1394 interface . The bus managing part  is for performing node control and bus management, such as control of cycle master, control to optimize functions, power supply management, transmission speed management and configuration management. Control of nodes enables communication between nodes.","As described above, on IEEE 1394, each node is connected in daisy-chain or tree shape. When power is supplied, bus reset takes place and information about connecting status of nodes (connecting information) is initialized. At the time of initialization of nodes, each node has information about whether it is in a branch connected with a plurality of other nodes or in a leaf connected with only 1 node or in non-terminating status.","On IEEE 1394, when bus reset takes place, topology is distinguished first. That is, after bus reset, all leaf nodes send parent-notify signals, a notice from a child node to a parent node, through a port where the branch node is connected (hereinafter referred to as parent port). A branch node which receives the parent-notify signal sends child-notify signals, a notice from a parent node to a child node, through a port where the signal was received (hereinafter referred to as child port). Through this process, parentage is determined between two nodes.","Out of ports connected with other nodes, a branch node with a port, which has received neither parent-notify signals nor child-notify signals, sends parent-notify signals through this port. Out of two nodes whose ports are connected with each other, the one which received a parent-notify signal earlier becomes a parent node, and the other becomes a child node.","After repetition of the same process, a parent node determined last in a bus becomes a root. After topology is distinguished, node ID is distinguished.","That is, each node is given a node ID with a lower ID number, when it,is connected with a port with a lower port number among nodes in each layer. And, a node ID with a lower number is added to a node which is connected with a lower side of hierarchy. Consequently, connection is done to a port with a lowest number among nodes in each layer, including root, and a node ID of a leaf node, which is positioned in the lowest layer from the root, becomes 0. When a branch node in the upper layer side of a node, whose node ID is 0, has only 1 child node, this branch node becomes node ID 1, and when it has 2 or more child nodes, a node ID of a leaf node, which is connected with the second lowest port number and positioned in the lowest layer, becomes 1.","A node, whose node ID is 0, first broadcasts that its self node ID is 0 to other nodes. Then, other nodes make the number of self node ID packets received from other nodes at the broadcast time their self node ID. In the order described above, each node broadcasts its self node ID until all nodes broadcast their self node IDs.","Self node IDs from each node are transmitted by self ID packets.  illustrates a configuration of a self ID packet.","As shown in , in a self ID packet, \u201c10\u201d is arranged at the head, followed by phy_ID, \u201c0\u201d, \u201cL\u201d, gap_cnt, sp, del, c, pwr, p, p, p, i, m showing self node IDs, then, in the next 32 bits, logical reversal signals of a first quadrate are arranged. Among self ID packets, p, p, p respectively show three port statuses in 2 bits each, \u201c11\u201d shows that it is connected with child nodes, \u201c10\u201d shows that it is connected with a parent node, \u201c01\u201d shows no connection with other nodes, and \u201c00\u201d shows no ports. In case there are 4 or more ports in a node, p, p, . . . , are supposed to be transmitted in the next quadrate to show port status.","The bus managing part  has a bus manager which is not shown. The bus manager is supposed, to be given self ID packets transmitted from all nodes and to generate a topology map, a set of first quadrates of all self ID packets.","In , a connecting information read circuit  is designed to read information of a topology map  generated by a bus manager in the bus managing part . The connecting information read circuit 2 outputs information, which it reads, to a parent node ID LIST generating circuit .",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIGS. 5 and 6","b":"3"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 5","FIG. 5"],"b":["0","5","0","5","0","5"]},"While only one parent node can exist for each node, plural child nodes can exist. By this reason, the parent node ID list generating circuit  is designed to compute ID of a parent node against each child node to enable to secure connecting status. The parent node ID list generating circuit  examines IDs of child nodes of each node first, then, computes a parent node of each node on the basis of the result.","As described above, when each port is connected with a child node, data p, p and p in a self ID packet are \u201c11\u201d. The parent node ID list generating circuit  first examines, about all nodes on a network, the data to show port status, p, p and p, to count the number of child ports where child nodes are connected (hereinafter referred to as child number).","For example, p and p, the data contained in a self ID packet outputted from a node #, are both \u201c11\u201d, and the parent node ID list generating circuit  detects that child number of node # is 2. Table 1 below provides information which shows child number of each node counted by the parent node ID list generating circuit  in the example in .",{"@attributes":{"id":"p-0060","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"8"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"42pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"7","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Node ID","0","1","2","3","4","5"]},{"entry":[{},"Child number","0","0","1","2","1","1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"7","align":"center","rowsep":"1"}}]}]}}}}},"Next, the parent node ID list generating circuit  examines nodes having child ports, that is, nodes having child nodes, starting with one having the lowest node number, to compute node ID of child nodes. When a parent node has only one child port, ID of a child node is a number obtained by subtracting 1 from ID of the parent node. In the example in , as apparent in Table 1 above, there is no child port for nodes # and #. The node having a child port and the lowest node number is, judging from Table 1, node # whose node ID is 2. Since the child number of node # is 1, child node to this node is node # whose node ID is 1 (=2\u22121).","The parent node ID list generating circuit , then, examines the next node # whether it has any child ports. Node #, as shown in Table 1, has 2 child ports. Consequently, for node #, at least one child node is node # whose node ID is smaller than 3 by 1. The other child node for node # is a node, whose node ID is lower than that of node #, and one which has not become a child node of other node. As node # is a child node of node #, the other child node for node # is node # whose node ID is 0.","Through a similar procedure, the parent node ID list generating circuit  examines node IDs of child nodes of each node in order of lower node number. In the example in , as shown in Table 1, child number of node # and node # are both 1. Consequently, node ID of child node of these nodes are 3 and 4 respectively.","In this way, the parent node ID list generating circuit  computes node IDs of child nodes of each node. The parent node ID list generating circuit , using the fact that any node, except a root, is connected with 1 parent node, seeks for the relation of node ID of each node to that of its parent node by tracing back information about child nodes connected to each node. Table 2 below shows the relations between each node and its parent node.",{"@attributes":{"id":"p-0065","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"6","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Node ID","0","1","2","3","4"]},{"entry":[{},"Node ID of parent","3","2","3","4","5"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"6","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 6","b":["0","8","0","7","0","7"]},"In this case again, the parent node ID list generating circuit  is supposed to examine first ID of child nodes of each node, then, to compute a parent node of each node. That is, the parent node ID list generating circuit  examines, on all nodes on a network, p, p and p, data showing port status, to count child numbers.","Table 3 below provides information to show child number of each node counted by the parent node ID list generating circuit .",{"@attributes":{"id":"p-0069","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Node ID","0","1","2","3","4","5","6","7"]},{"entry":["Child number","0","0","1","0","3","0","1","2"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]}}}}},"Next, the parent node ID list generating circuit  examines nodes having child ports in order of the lowest node number to compute node IDs of child nodes. In the example in , as apparent in Table 3 above, there is no child port for nodes # and #. Since child number of the next node # is 1, a child node for this node is node # whose node ID is 1 (=2\u22121).","The next node # has no child port, and the following node # has 3 child ports as shown in Table 3. For node #, at least 1 child node is node # whose node ID is 2, smaller than 3 by 1. Remaining 2 child nodes of node # are found, from Table 3, to be node # and node # which are nodes with node IDs lower than node # and have not become a child node of other nodes.","Through a similar procedure, the parent node ID list generating circuit  examines node ID of child nodes of each node in order of the lowest node number. In the example in , as shown in Table 3, child node of node # is node #, and child nodes of node # are node # and node #.","The parent node ID list generating circuit  seeks for relations of node ID of each node to that of its parent node on the basis of computed node IDs of child nodes of each node. Table 4 below shows relations of each node to its parent node in the case of .",{"@attributes":{"id":"p-0074","num":"0073"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"14pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"8","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Node ID","0","1","2","3","4","5","6"]},{"entry":[{},"Node ID of parent","4","2","4","4","7","6","7"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"8","align":"center","rowsep":"1"}}]}]}}}}},"The parent node ID list generating circuit  is designed to output generated information about ID relations between a node and its parent node to a connection display data generating circuit .","The connection display data generating circuit  generates connection display data in a predetermined data format out of inputted information, and outputs the data to a formatting . The formatting  is designed to convert the inputted connection display data into a transmission data format before outputting them.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 7A","FIG. 7B"]},"As shown in , the connection display data generating circuit  shows a node ID in 8 bits, and at the same time, it shows ID of its parent node in 8 bits so as to generate connection display data by grouping data of each node with its parent's. Figures in parentheses in  express node IDs in the example in .",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 7B","b":["5","5"]},"Transmission data from the formatting  is transmitted to an IEEE 1394 bus through a terminal  which is not shown. Connection display data from the connection display data generating circuit  is also designed to be able to be outputted as they are through a terminal .","In , transmission data transmitted through an IEEE 1394 bus are supplied to a transmission data decoding circuit  through a terminal . the transmission data decoding circuit  is designed to depacket an inputted asynchronous packet and to supply connection display data arranged at the part for data to a connecting status image data generating circuit .","Sometimes, connection display data may be inputted to a terminal . In this case, connection display data from the terminal  are directly supplied to the connecting status image data generating circuit .","The connecting status image data generating circuit  is designed to generate, from inputted connection display data, image data to show connecting status of a network and to supply the data to a displaying circuit .","For example, the connecting status image data generating circuit , when the connection display data shown in  are inputted, generates connecting status image data shown in . That is, since the connection display data have node IDs and the IDs of their parent nodes arranged in order of lower node ID, the connecting status image data generating circuit  generates a display of boxes indicating nodes in their arranged order (in order of lower node ID) and a display indicating boxes of their parent nodes, connects them with lines. Thus, it sequentially arranges boxes correspondingly to connection display data, connects them with lines so as to generate image data for a display to show connecting status.","In addition, to the connecting status image data generating circuit , information about devices may be inputted from each node through a terminal . Device information is composed of a device name of each device, icons to express devices (graphic information) and so on. For WG of IEEE 1394, it is discussed to put device names, icon information of devices and so on in Configuration ROM, which is a memory space in each device stipulated by IEEE 1212 as well as being a memory space readable for other devices. For device information, information read from this memory space may be used.","The connecting status image data generating circuit , when device information is inputted from the terminal , is designed to generate image data to display information supplied by device information so as to display device names and icons of devices, instead of box displays and so on to show nodes.","The displaying circuit  is designed to display images based on image data from the connecting status image data generating circuit .","Meanwhile, the formatting  and the transmission data decoding circuit  can be realized by the physical and link layer  and the transaction layer .","Operation of an embodiment configured in such a way will be described with reference to .  illustrate flows of connection display data and transmission data shown by the arrow.  illustrate examples of image display by the displaying circuit .  show display examples corresponding to the topology of  respectively.","Suppose, in , that the topology map , the connecting information read circuit , the parent node ID list generating circuit , the connection display data generating circuit , the connecting status image data generating circuit  and the displaying circuit  are provided on devices of a same node.  shows an example of this case. The bus managing part  is supposed to have its functions provided by software. The connecting information read circuit , the parent node ID list generating circuit  and the connection display data generating circuit  in  are supposed to be composed by the bus managing part .","A node  receives self ID packets from each node through an IEEE 1394 bus. The self ID packets are supplied to the bus managing part  through the physical and link layer  and the transaction layer . The bus managing part  configures a topology map  from self ID packets.","The connecting information read circuit  composed by the bus managing part  reads information of the topology map , and gives it to the parent node ID list generating circuit . The parent node ID list generating circuit  generates a parent node ID list about every node to indicate which node is its parent node. The connection display data generating circuit  generates connection display data on the basis of the parent node ID list, and outputs the data from the terminal .","Connection display data are supplied from the bus managing part  to the display layer  through the API . The display layer  has a displaying part  which is supposed to have functions of the connecting status image data generating circuit  shown in .","Connection display data inputted through the terminal  are supplied to the connecting status image data generating circuit . The connecting status image data generating circuit  generates image data to show a display of connecting status of a network out of correspondence of each node to its parent node given by connection display data.","Suppose that the connection display data corresponds to Table 2 above. In this case, the connecting status image data generating circuit  first generates a display of a box to express that node ID is 0, next, on the upper side of this box, a box to express node #, a parent node, and connects them with lines from a position of the box expressing node #, where to correspond to the parent port, to a position of the box expressing node #, where to correspond to the child port.","Then, the connecting status image data generating circuit  generates a display of a box to express that node ID is 1 on the basis of its connection display data, and on the upper side of this box, a box to express node #, a parent node, and connects them with lines from a position of the box expressing node #, where to correspond to the parent port, to a position of the box expressing node #, where to correspond to the child port. Since the box expressing node #, the parent node of node #, has already been generated, the connecting status image data generating circuit  next connects with lines from a position of the box expressing node #, where to correspond to the parent port, to a position of the box expressing node #, where to correspond to the child port.","A similar operation is repeated after this. In this way, image data to display the connecting status shown in  are generated. The image data are supplied to the displaying circuit  (not shown) to be displayed on its screen. With this display, users can secure present connecting statuses easily. Display of S, S, and S in  expresses that the transfer rate is 100 Mbps, 200 Mbps, and 400 Mbps, respectively.","It may happen that device information is transmitted from each node through an IEEE 1394 bus. This device information is supplied to the displaying part  of the display layer  through the physical and link layer , the transaction layer , and the API  to be supplied to the connecting status image data generating circuit  which composes the displaying part .","In this case, the connecting status image data generating circuit , using the inputted device information, generates image data to display names and icons of, devices instead of boxes to express each node and the names of the nodes in .",{"@attributes":{"id":"p-0100","num":"0099"},"figref":["FIG. 11","FIG. 11"],"b":["13","0","5"]},"Although the description of  goes that all the topology map , the connecting information read circuit , the parent node ID list generating circuit , the connection display data generating circuit , the connecting status image data generating circuit  and the displaying circuit  in  are provided on a device of a same node, it is apparent that a topology map, for example, may be positioned on another node, and functions of these circuits can be realized by a circuit other than the bus managing part  or by software.",{"@attributes":{"id":"p-0102","num":"0101"},"figref":["FIG. 9","FIG. 1","FIG. 10","FIG. 1","FIG. 2"],"b":["32","27","33","31","12"]},"Now, suppose that a network is connected in the connecting status shown in . The bus managing part  in  generates connection display data corresponding to Table 4 above on the basis of the information on a topology map. The connection display data are supplied to the transaction layer  and the physical and link layer , and converted into a transmission data format corresponding to IEEE 1394 by the formatting  shown in , a function given to it. In this case, connection display data are arranged in parts for data in an asynchronous packet.","Transmission data from the physical and link layer  are transmitted to the node  shown in  through an IEEE 1394 bus. The node  fetches connection display data from transmission data by the transmission data decoding circuit  (shown in ) which the physical and link layer  has as its function. The connection display data are supplied to the displaying part  of the display layer  through the API .","The connecting status image data generating circuit  of the displaying part  generates image data on the basis of connection display data in order to display connecting status shown in . The image data are given to the displaying circuit  to be displayed on its screen as shown in . Display of S, S, and S in  expresses transmission rates.","When the node  receives device information from other nodes through an IEEE 1394 bus, the connecting status image data generating circuit  of the displaying part  generates image data to display names and icons of devices instead of boxes shown in .",{"@attributes":{"id":"p-0107","num":"0106"},"figref":["FIG. 12","FIG. 12","FIG. 6"],"b":["0","7"]},"Thus, according to the embodiment of the present invention, the transmitting side generates a parent node ID list to show the correspondence between each node and its parent node on the basis of a topology map, and converts information of this parent node ID list into connection display data in a predetermined data format. It is also designed to convert the connection display data into a predetermined transmission data format before transmitting them. The receiving side is designed to obtain connection display data directly or from transmission data, and to generate, from the connection display data, image data in order to display connecting status. Therefore, when there is in a network a node having a function to generate image data from connection display data and to display them, connecting status can be displayed in a same format regardless of whatever device each node is, or even when the transmitting side and the receiving side are not on the same node, or when displaying devices are different.","Consequently, this is very effective when the display layer and the API are made common.","Particularly, this can provide a method for a displaying device to display connecting status in the simplest transmission data from a node, which is a bus manager having topology map information, to a node which is a displaying device without such a function.","In the embodiment, the description was given on an example when a node, which has the function of the connecting status image data generating circuit , reads device information from other nodes. However, it may be designed so that a node, which has the bus managing part , reads device information from other nodes and transmits it to a node having the function of the connecting status image data generating circuit .","That is, each circuit in  may be formed in any node and anywhere in a node. As stated above, each circuit in  may be realized by software. For example, the connecting status image data generating circuit  and the displaying circuit  may exist on different nodes. And, it maybe designed so as to make connection display data written in a read\/write memory space of a device of a predetermined node, and make a node, which has the connecting status image data generating circuit , read connection display data stored in this memory space.","Besides, though the embodiment shown in  uses connection display data to express the correspondence of ID between all nodes and their parent nodes in a network or transmission data of them, it may be designed to transmit device information on devices increased and decreased when there were increase and decrease of devices in a network.","That is, in IEEE 1394, bus reset occurs when there is a change in connecting status. As this is likely to bring about changes in ID values of each node, device information of nodes before and after bus reset is compared by, for example, the function of a bus manager or others, and devices increased and decreased are detected. As parent nodes of devices, which increased and decreased, are devices which existed before the bus reset, what to be transmitted as, for example, connecting status modified data is only device information on devices which increased and decreased and on devices which are their parent nodes.","In this case, the connecting status image data generating circuit  has a memory which updates connection display data therein corresponding to connecting status modified data transmitted afresh. Image data to show connecting status are generated corresponding to updated connection display data.","Through this procedure, connecting status after bus reset can be displayed even in this case.",{"@attributes":{"id":"p-0117","num":"0116"},"figref":["FIGS. 13 and 14","FIG. 13","FIG. 14","FIGS. 13 and 14","FIGS. 1 and 2"]},"The embodiment shown in  differs from that shown in  only in that a connection display data generating circuit  is adopted instead of the connection display data generating circuit .",{"@attributes":{"id":"p-0119","num":"0118"},"figref":["FIGS. 15A","FIG. 15A","FIG. 15B","FIG. 16","FIG. 16"],"b":["15","16","41","5","0","23","0","23"]},"In the case of , the parent node ID list generating circuit  generates a parent node ID list shown in Table 5 below expressing the correspondence of ID between nodes and their parent nodes.",{"@attributes":{"id":"p-0121","num":"0120"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"13"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"char"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"char"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"char"}},{"@attributes":{"colname":"5","colwidth":"14pt","align":"char"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"char"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"char"}},{"@attributes":{"colname":"8","colwidth":"14pt","align":"char"}},{"@attributes":{"colname":"9","colwidth":"14pt","align":"char"}},{"@attributes":{"colname":"10","colwidth":"14pt","align":"char"}},{"@attributes":{"colname":"11","colwidth":"14pt","align":"char"}},{"@attributes":{"colname":"12","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"13","colwidth":"21pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"13","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Node ID","0","1","2","3","4","5","6","7","8","9","10","11"]},{"entry":["Node ID","3","3","3","23","5","9","8","8","9","23","23","13"]},{"entry":"of parent"},{"entry":["Node ID","12","13","14","15","16","17","18","19","20","21","22"]},{"entry":["Node ID","13","22","18","17","17","18","22","20","22","22","23"]},{"entry":"of parent"},{"entry":{"@attributes":{"namest":"1","nameend":"13","align":"center","rowsep":"1"}}}]}}}}},"The connection display data generating circuit  sequences node IDs on the basis of results of the parent node ID list. That is, the connection display data generating circuit  sequences node IDs so that the receiving side becomes able to display hierarchical connecting status using rules that a root has a highest ID value, a lower ID number is given to a leaf first, and a parent always has a higher ID value than its child does.","In the example of Table 5, the connection display data generating circuit  arranges 23, the node ID of a root, first at the head, then, node IDs of child nodes of the node # in order of lower number. Since Table 5 shows that node # has child nodes, nodes #, #, #, # whose node IDs are 3, 9, 10, 22 respectively, 23 showing node ID is followed by 3, 9, 10 and 22 in arrangement.","Then, the child nodes are looked into in order of nodes #, #, #, #, and node IDs of child nodes are arranged in order of lower node ID. As child nodes of node # are, according to Table 5, nodes #, #, # whose node ID is 0, 1, 2 respectively, node IDs are arranged in this order. As child nodes of node # are, according to Table 5, nodes #, # whose node ID is 5, 8 respectively, node IDs 5, 8 are arranged in this order. The next node # has no child node as shown in Table 5. Node IDs of child nodes of node # are, according to Table 5, 13, 18, 20 and 21.","Up to node #, the connection display data generating circuit  arranges node IDs in order of node IDs , , , , , , , , , , , ,  and .","Then, the connection display data generating circuit  sequnces node IDs in a similar way. That is, the connection display data generating circuit  next looks into child nodes of nodes in order of nodes #, #, #, #, #, #, #, #, and arranges found node IDs of child nodes in order of lower node ID.","After all, the connection display data generating circuit  arranges node IDs in order of node IDs , , , , , , , , , , , , , , , , , , , , , ,  and  according Table 5.","The connection display data generating circuit  arranges sequenced node IDs in 8 bits as shown in , and outputs them as connection display data to the formatting .",{"@attributes":{"id":"p-0129","num":"0128"},"figref":"FIG. 15B","b":["5","5"]},"Transmission data from the formatting  are supposed to be sent to an IEEE 1394 bus, which is not shown, through the terminal . It is designed so that connection display data from the connection display data generating circuit  are also able to be outputted as they are through the terminal .","The embodiment shown in  differs from that shown in  only in point of that a connecting status image data generating circuit  is adapted instead of the connecting status image data generating circuit .","In , transmission data transmitted through an IEEE 1394 bus are, similarly to the embodiment shown in , supplied to the transmission data decoding, circuit  through the terminal . The transmission data decoding circuit  is designed to depacket inputted asynchronous packets, and to supply connection display data, which have been arranged in the part for data, to the connecting status image data generating circuit .","Sometimes, connection display data may be inputted to the terminal . In this case, connection display data from the terminal  are directly supplied to the connecting status image data generating circuit , similarly to the embodiment shown in, .","The connecting status image data generating circuit  is designed to generate, out of inputted connection display data, image data to show connecting status of a network, and to supply the data to the displaying circuit .",{"@attributes":{"id":"p-0135","num":"0134"},"figref":["FIG. 17","FIG. 14","FIG. 17","FIG. 15A"],"b":"42"},"For example, the connecting status image data generating circuit , when connection display data shown in  are inputted, generates image data to indicate the connecting status display shown in . The connecting status image data generating circuit  generates the connecting status display shown in , using the rules that; a root has a highest ID value, a lower ID number is given to a leaf first, and ID value of a parent is always higher than that of its child.","That is, the connecting status image data generating circuit  decides hierarchies from inputted connection display data. Connection display data shown in  have node values of 23, 3, 9, 10, 22, 0, 1, 2, 5, 8, 13, 18, 20, 21, 4, 6, 7, 11, 12, 14, 17, 19, 15, and 16 arranged in this order. According to the rules, in the data sequence, the part where lower node IDs than preceding node IDs are arranged is a breakpoint of a hierarchy. That is, in the example shown in , breakpoints of hierarchy exist at \u2192, \u2192, \u2192, and \u2192.","Node ID  has the highest ID value showing that it is a root. The following 4 node IDs, node IDs , ,  and  of node ID  to node ID , are allotted to nodes in a second hierarchy. The following 9 node IDs, node IDs , , , , , , ,  and  of node ID  to node ID , are allotted to nodes in a third hierarchy.","In a similar way, the connecting status image data generating circuit  decides the hierarchy for nodes # to #, expressed with node IDs  to  respectively, to belong to. In the example shown in , node #, a root, belongs to the 1st layer of hierarchy, nodes #, #, #, and # to the 2nd layer of hierarchy, nodes #, #, #, #, #, #, #, #, and # to the 2nd layer of hierarchy, nodes #, #, #, #, #, #, #, and # to the 4th layer of hierarchy, and nodes #, # belong to the 5th layer of hierarchy.","The connecting status image data generating circuit , as shown in , generates a connecting status display to show each of nodes allotted to each of hierarchies, from the 1st to the 5th hierarchy. Next, the connecting status image data generating circuit  decides a node, which is in an upper layer, for a node in each hierarchy to be connected, that is, decides a node to be a parent node of each node.","The rules tell that a child node has a lower node ID than its parent node does. The connecting status image data generating circuit  decides a parent node for a node in each hierarchy by finding a node in one upper layer having a higher node ID than the node.","For example, nodes #, #, #, # are nodes in the 2nd hierarchy. Among nodes in the 3rd hierarchy, nodes with lower node IDs than 3 are child nodes of node #. Nodes belonging to the 3rd hierarchy are nodes #, #, #, #, #, #, #, #, #, and nodes #, #, # are found to be child nodes of node #. Child nodes of node # should be nodes in the 3rd hierarchy having node IDs higher than that of node # and lower than that of node #. That is, child nodes of node # are nodes # and #.","In a similar way, the connecting status image data generating circuit  looks into child nodes of all nodes, and displays a diagram to express parentage as shown in . The connecting status image data generating circuit  is designed to output image data to display a connecting status list shown in .","In addition, to the connecting status image data generating circuit , device information may be inputted from each node through the terminal . In this case, the connecting status image data generating circuit  can, similarly to the embodiment shown in , generate, using device information, image data to display names and icons of devices, which are provided by device information, instead of box display to express nodes.","The displaying circuit  is designed to display images on the basis of image data from the connecting status image data generating circuit .","The formatting  and the transmission data decoding circuit  can be realized by the physical and link layer  and the transaction layer .","Now, operation of embodiments thus configured will be described with reference to .  illustrates an example of image display by the displaying circuit .","In this embodiment, too, the flow of data of connection display data and transmission data, by a position of each circuit in a network, becomes the same as shown in  above mentioned. For example, when all of the topology map , the connecting information read circuit , the parent node ID list generating circuit , the connection display data generating circuit , the connecting status image data generating circuit  and the displaying circuit , shown in , are provided on devices of a same node, the flow of connection display data and transmission data becomes the one shown in .","The flow of data and operations other than generation of connection display data and connecting status image data are similar to the embodiments shown in .","That is, a parent node ID list generated by the parent node ID list generating circuit  is supplied to the connection display data generating circuit . The connection display data generating circuit  generates connection display data on the basis of the parent node ID list, and outputs them from the terminal .","Connection display data inputted trough the terminal  are supplied to the connecting status image data generating circuit . The connecting status image data generating circuit  generates image data to show hierarchical displays of connecting status of a network on the basis of connection display data.","Now, suppose that connection display data correspond to . In this case, the connecting status image data generating circuit ; decides that the parts, where values of node IDs sequentially rise, belong to a same hierarchy, and that the parts, where node IDs fall discontinuously, that is, in a data sequence, where lower node IDs than preceding node IDs are arranged, are breakpoints and arranges nodes in each hierarchy. The connecting status image data generating circuit , next, decides on nodes in each hierarchy that, among nodes in a hierarchy one stage above the one a node is in, one node having a higher node ID than the node does is its parent node, and seeks for parentage of each node. In this way, the connecting status image data generating circuit  generates image data to display the connecting status display shown in  giving hierarchy and the parentage of each node.","The image data are supplied to the displaying circuit  (not shown), and the connecting status display shown in  is displayed on the screen. With this display, users can easily secure present hierarchical connecting status.","Sometimes, device information may be transmitted from each node through an IEEE 1394 bus. This device information is supplied to the displaying part  of the display layer  through the physical and link layer , the transaction layer  and the API  to be supplied to the connecting status image data generating circuit  which forms the displaying part .","In this case, the connecting status image data generating circuit  generates, using the inputted device information, image data to display names and icons of devices instead of the display to show each node shown in .",{"@attributes":{"id":"p-0156","num":"0155"},"figref":["FIG. 18","FIG. 18","FIG. 17","FIG. 18"],"b":"13"},"With this display, users can easily secure the device to which a connected node actually corresponds and to which hierarchy it is connected.","In connection with the embodiment shown in , it is not necessary to have all of the topology map , the connecting information read circuit , the parent node ID list generating circuit , the connection display data generating circuit , the connecting status image data generating circuit  and the displaying circuit , shown in , provided on devices of a same node. It is apparent, for example, that a topology map may be on another node, or functions of these circuits may be realized by a circuit other than the bus managing part  or by software.","For example, as shown in , the node  does not have to have a displaying part. In this case, it is enough if functions of each circuit shown in  can be realized by, for example, the bus managing part  or others. Or, as shown in , existence of the node  on a network will be of use, because, though it has no functions of each circuit in , it has the displaying part  to realize functions of the connecting status image data generating circuit  shown in .","Now, suppose that a network is in the connecting status shown in . The bus managing part  in  generates, on the basis of information of a topology map, a parent node ID list corresponding to the Table 5 and then, generates connection display data on the basis of this parent node ID list. The connection display data are supplied to the transaction layer  and the physical and link layer  to be converted by the formatting , shown in  and a function thereof, into a transmission data format corresponding to IEEE 1394. The connection display data are arranged in the part for data in an asynchronous packet.","Transmission data from the physical and link layer  are transmitted to the node  shown in  through an IEEE 1394 bus. The node  fetches connection display data from transmission data by the transmission data decoding circuit  (shown in ) which is a function of the physical and link layer . The connection display data are supplied to the displaying part  of the display layer  through the API .","The connecting, status image data generating circuit  of the displaying part , on the basis, of connection display data, generates image data in order to display connecting status shown in . The image data are given to the displaying circuit , and the display shown in  appears on the screen.","When the node  receives device information from other nodes through an IEEE 1394 bus, the connecting status image data generating circuit  of the displaying circuit  generates image data to display names and icons of devices instead of a display shown in .","Thus, in this embodiment, the transmitting side generates, on the basis of a topology map, a parent node ID list to show the correspondence of each node to its parent node, and converts information of this parent node ID list into connection display data in a predetermined data format giving consideration to displaying hierarchical connecting status. The connection display data are also supposed to be converted into a predetermined transmission data format before being transmitted. The receiving side is designed to obtain connection display data from transmission data or directly, and to generate, from the connection display data, image data to display hierarchical connecting status. Consequently, when a node, which has functions to generate image data from connection display data and to display them, exists in a network, hierarchical connecting status can be displayed in the same format whatever device each node is, or even when the transmitting side and the receiving side are not on a same node, or displaying devices are different.","This embodiment, too, is highly effective when a display layer and an API are made common.","Moreover, displaying hierarchical connecting status allows to secure the hop count from a root easily, so as to prevent users from connecting devices exceeding the limit of hop count or to enable users easily to know devices connected exceeding the limit of hop count.","In this embodiment, although the description has been given on a case where a node having functions of the connecting status image data generating circuit  reads device information from other nodes, it may be designed so that a node having the bus managing part  reads device information from other nodes and transmits it to a node having functions of the connecting status image data generating circuit .","That is, each circuit shown in  may be formed in any node and any position in a node. As stated above, each circuit shown in  and  may be realized by software. For example, the connecting status image data generating circuit  and the displaying circuit  may exist on different nodes. Moreover, it may be designed so that connection display data are written in a read\/write memory space of a device of a predetermined node and the connection display data stored in this memory space are read by a node having the connecting status image data generating circuit .","It is apparent that, in the present invention, various embodiments in a wide range may be made on the basis of the present invention without any departure from the spirit and scope of the invention. The invention should be limited only to the appended claims and not limited to specified embodiments."],"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","OBJECTS AND SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 7A and 7B"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 11","FIG. 5"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 12","FIG. 6"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIGS. 15A and 15B"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 17","FIG. 14"],"b":"42"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 18"}]},"DETDESC":[{},{}]}
