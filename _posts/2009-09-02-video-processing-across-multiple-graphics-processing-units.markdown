---
title: Video processing across multiple graphics processing units
abstract: A processing unit, method, and graphics processing system are provided for processing a plurality of frames of graphics data. For instance, the processing unit can include a first plurality of graphics processing units (GPUs), a second plurality of GPUs, and a plurality of compositors. The first plurality of GPUs can be configured to process a first frame of graphics data. Likewise, the second plurality of GPUs can be configured to process a second frame of graphics data. Further, each compositor in the plurality of compositors can be coupled to a respective GPU from the first and second pluralities of GPUs, where the plurality of compositors is configured to sequentially pass the first and second frames of graphics data to a display module.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08217950&OS=08217950&RS=08217950
owner: Advanced Micro Devices, Inc.
number: 08217950
owner_city: Sunnyvale
owner_country: US
publication_date: 20090902
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is a continuation-in-part application of pending U.S. patent application entitled \u201cAntialiasing System and Method,\u201d Ser. No. 11\/140,156, filed May 27, 2005, which is incorporated herein by reference in its entirety.","1. Field","Embodiments of the present invention generally relate to graphics and video processing. More specifically, embodiments of the present invention refer to antialiasing and alternate frame rendering across multiple graphics processing units.","2. Background","Graphics and video processing hardware and software continue to become more advance each year. Graphics and video processing circuitry is typically present on add-on cards in a computer system, but can also be found on the motherboard itself. The graphics processor is responsible for creating graphics displayed by a monitor of the computer system. In early text-based personal computers, the display of graphics on a monitor was a relatively simple task. However, as the complexity of modern graphics-capable operating systems has dramatically increased due to the amount of information to be displayed, it is now impractical for graphics processing to be handled by the main processor or central processing unit of the computer system. As a result, the display of graphics is now handled by increasingly-intelligent graphics cards, which include specialized co-processors referred to as graphics processing units (GPUs) or video processing units (VPUs).","Various aspects of video processing typically require a trade-off between quality and performance. One example of this trade-off involves correction for aliasing, which is typically referred to as anti-aliasing (AA). AA refers to a minimization of artifacts, known as aliasing, when representing a high-resolution signal at a lower resolution. The graphics process of rendering draws one or more pixels to be displayed (e.g., on the monitor of the computer system).","Aliasing includes edge aliasing and surface aliasing. Edge aliasing creates stair steps in an edge of a display that should appear smooth. Surface aliasing includes flashing or \u201cpopping\u201d of very thin polygons (also referred to as moir\u00e9 patterns) in a display. Techniques for alleviating edge and surface aliasing effects include multisampling and supersampling. Multisampling addresses edge aliasing by creating multiple samples of pixels, which are used to generate intermediate points between pixels. These multiple samples are averaged to determine the displayed pixel color value. The displayed edge in the multisampled image has a softened stair step effect. Multisampling, however, does not address the effects of surface aliasing.","Supersampling addresses both the effects of edge aliasing and surface aliasing. However, supersampling is computationally more intensive than multisampling and thus rarely performed in consumer-level GPU systems. Pixel centers (as opposed to pixels) carry texture information in the supersampling process. In supersampling, each pixel is rendered multiple times to yield multiple color values, which are then averaged to give a final pixel color. As a result, the displayed image has a softened effect.","Multisampling and supersampling techniques can be a computationally-intensive process for the GPU system since these AA techniques are processed through a video processing pipeline of the GPU system multiple times to create offset samples with respect to pixels or pixel centers. As a result, GPU processing time is increased.","An apparatus, method, and system are needed for antialiasing (AA) that alleviates both edge aliasing effects and surface aliasing effects, while minimizing the impact to processing time in a graphics processing system. Embodiments of the present invention include a processing unit that includes a first plurality of graphics processing units (GPUs), a second plurality of GPUs, and a plurality of compositors. The first plurality of GPUs is configured to process a first frame of graphics data. Similarly, the second plurality of GPUs is configured to process a second frame of graphics data. Further, each compositor in the plurality of compositors is coupled to a respective GPU from the first and second pluralities of GPUs, where the plurality of compositors are configured to pass the first and second frames of graphics data to a display module.","The first plurality of GPUs is configured to process the first frame of graphics data substantially in parallel as the second plurality of GPUs processes the second frame of graphics data, according to an embodiment of the present invention. In an embodiment, the first and second pluralities of GPUs are also configured to perform an antialiasing function on the first frame of graphics data and the second frame of graphics data, respectively. Further, the compositors corresponding to the first plurality of GPUs are configured to either combine an output from each GPU in the first plurality of GPUs or pass a respective GPU output from the first plurality of GPUs to another compositor for further processing. The compositors corresponding to the second plurality of GPUs are configured to either combine an output from each GPU in the second plurality of GPUs or pass a respective GPU output from the second plurality of GPUs to another compositor for further processing or display.","Embodiments of the present invention also include a method for processing a plurality of frames of graphics data. The method includes the following: processing a first frame of graphics data with a first plurality of graphics processing units (GPUs), where an antialiasing operation is performed on the first frame of graphics data; processing a second frame of graphics data with a second plurality of GPUs, where an antialiasing operation is performed on the second frame of graphics data; and, passing the first and second frames of graphics data to a display module with a plurality of compositors. In an embodiment, the first and second frames of graphics data are displayed in a sequential manner (e.g., first frame of graphics data displayed first, followed by the second frame of graphics data).","Embodiments of the present invention further include a graphics processing system. The graphics processing system includes the following: an application module; an application programming interface (API) configured to receive one or more commands from the application module; a driver module configured to translate the one or more commands received from the API into a native format; a processing unit configured to process a plurality of frames of graphics data based on the one or more commands translated by the driver module; and, a display module configured to receive a plurality of processed frames of graphics data from the processing unit. The processing unit includes the following: a first plurality of graphics processing units (GPUs) configured to process a first frame of graphics data; a second plurality of GPUs configured to process a second frame of graphics data; and, a plurality of compositors, each compositor coupled to a respective GPU from the first and second pluralities of GPUs.","Further features and advantages of the invention, as well as the structure and operation of various embodiments of the present invention, are described in detail below with reference to the accompanying drawings. It is noted that the invention is not limited to the specific embodiments described herein. Such embodiments are presented herein for illustrative purposes only. Additional embodiments will be apparent to persons skilled in the relevant art based on the teachings contained herein.","The following detailed description refers to the accompanying drawings that illustrate exemplary embodiments consistent with this invention. Other embodiments are possible, and modifications can be made to the embodiments within the spirit and scope of the invention. Therefore, the detailed description is not meant to limit the invention. Rather, the scope of the invention is defined by the appended claims.","It would be apparent to one of skill in the art that the present invention, as described below, can be implemented in many different embodiments of software, hardware, firmware, and\/or the entities illustrated in the figures. Thus, the operational behavior of embodiments of the present invention will be described with the understanding that modifications and variations of the embodiments are possible, given the level of detail presented herein.","A processing unit, method, and graphics processing system for antialiasing (AA) and alternate frame rendering (AFR), while minimizing the impact to processing time in the graphics processing system, are described herein. Embodiments of the present invention include applying multisampling techniques, supersampling techniques, and a combination of both multisampling and supersampling techniques, as well as improving performance of these AA techniques, in a system with a plurality of graphics processing units (GPUs) or video processing units (VPUs). As used herein, GPU and VPU are interchangeable terms.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1","b":["100","100","110","120","130","140","150","110","120","110","130","120","140","120"]},"Driver module  is a computer program that allows a higher-level graphics computing program, from application module , to interact with processing unit  according to an embodiment of the present invention. For instance, driver module  can be written by a manufacturer of processing unit  and translate standard code received from API  into a native format understood by processing unit . Driver module  allows input from, for example, application module  or a user to direct settings of processing unit . Such settings include selection of multisampling factors, supersampling factors, or combinations thereof. For example, a user can select settings via a user interface (UI), including a UI supplied to the user with graphics processing hardware and software. Further details on these settings, according to embodiments of the present invention, can be found in U.S. patent application Ser. No. 11\/140,156, titled \u201cAntialiasing System and Method,\u201d which is incorporated by reference herein in its entirety.","Driver module  issues commands, via a driver output , to processing unit  according to an embodiment of the present invention. Processing unit  executes a series of commands for processing a plurality of frames of graphic data, including offsetting sample positions with respect to pixels and\/or pixel centers in a programmable manner from sample positions received from or defined by API , according to an embodiment. In a further embodiment, driver module  programmably instructs processing unit  to multisample and\/or supersample pixels and\/or pixel centers by an AA factor. In an embodiment, processing unit  offsets samples with respect to the same pixels and\/or pixel centers, but offsets them to different sample positions.","Display module  receives processed frames of graphics data, via a processing unit output , from processing unit  and displays the processed data to the end user, according to an embodiment of the present invention.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":["140","140","210","220","210","211","211","212","212","220","221","221","222","222"],"sub":["0 ","1 ","0 ","1","0 ","1 ","0 ","1"]},"Processing unit  is configured to perform AA and alternate frame rendering (AFR) functions on a plurality of video data frames (also referred to herein as a plurality of frames of graphics data). AA refers to a minimization of distortion artifacts, known as aliasing, when representing a high-resolution signal at a lower resolution. For instance, antialiasing techniques removes signal components that have a higher frequency than is able to be properly resolved by a sampling device. AFR refers to a parallel graphics rendering technique, which can display an output of two or more GPUs to a single monitor, in order to improve rendering performance. AFR can be used in many graphics applications such as, for example, the generation of three-dimensional video sequences in real time.","In an embodiment, GPUs and from the first plurality of GPUs  each process video data according to instructions from a programmable driver (e.g., driver module  of ).  is an illustration of the first plurality of GPUs  with an example sampling pattern output  from GPU and an example sampling pattern output  from GPU . Example sampling patterns  and  are 12\u00d712 grids that demonstrate 2\u00d7 sampling. Based on the description herein, a person skilled in the relevant art will recognize that the 12\u00d712 grids are used for example purposes and that other grid dimensions can be used with embodiments of the present invention. The darkened squares in sampling patterns  and  are pixel centers and the \u201cX\u201d notations represent pixel samples. The pixel samples are offset from an initial default location specified by an API (e.g., API  of ). The offset locations are programmable in the programmable driver (e.g., driver module  of ) and are specified in commands from the driver to GPUs and . Further details on the processing of sampling patterns  and  by GPUs and , respectively, can be found in U.S. patent application Ser. No. 11\/140,156, titled \u201cAntialiasing System and Method,\u201d which is incorporated by reference herein in its entirety.","Throughout the description, for convenience and explanation purposes, the sample pattern output by a GPU will also be referred to an output of the GPU. For example, in reference to , sampling pattern  is also referred to as output  of GPU . Persons skilled in the relevant art will understand and appreciate that the sample pattern output by a GPU (also referred to herein as the output of GPUs and ) may not necessarily be the output to the display (e.g., display  of ). That is, the sample pattern output by the GPU (or a portion thereof) can be used to generate a frame of graphics data, or portion thereof, that is ultimately output to the display, such as a liquid crystal display, a flat panel display, a cathode ray tube display, or other similar display devices. That is, the output sample pattern can be used as an input to a further portion of the GPU to generate the frame of graphics data (or a portion thereof) to a display according to an embodiment of the present invention.","In reference to , when GPUs and complete execution of commands for the frame of graphics data (also referred to herein as data frame and GPU output), the frame of graphics data is sent to IMs and . The frame of graphics data from each of GPU and is either (1) merged in IMs and to generate a composite frame of graphics data  to be rendered to display  or (2) passed from one IM to another IM for further processing. In the frame of graphics data to be displayed, the AA sampling factor is effectively multiplied by the number of GPUs. For example, if each GPU performs 2\u00d7 sampling on the same frame of graphics data, where each GPU samples different positions within the frame of graphics data (e.g., GPU performs 2\u00d7 sampling on frame of graphics data , which contains the same data as frame of graphics data , at sampling positions different from the sampling positions of GPU ), the frame of graphics data to be displayed includes 4\u00d7 sampling (e.g., composite frame of graphics data ). In an embodiment of the present invention, driver module  of  is programmable to direct GPUs and to perform multisampling by a selectable multiplication factor, supersampling by a selectable multiplication factor, or a combination of multisampling by a selectable multiplication factor and supersampling by a selectable multiplication factor. Further details on multisampling and supersampling, with respect to the first plurality of GPUs  of  can be found in U.S. patent application Ser. No. 11\/140,156, titled \u201cAntialiasing System and Method,\u201d which is incorporated by reference herein in its entirety. As used herein, the terms combine, merge, composite, and mix all refer to the same capabilities of IMs , , , and of .","In reference to , IMs and receive frames of graphics data  and , respectively, in which both outputs are in linear space.  is an illustration of an embodiment of a functional diagram of IM . Based on the description herein, a person skilled in the relevant art will recognize that the function of IM  can be performed using alternate circuit topologies. These alternate circuit topologies are within the scope and spirit of the present invention.","IM  includes a control device , a multiplexer , and a compositor device . In an embodiment, multiplexer  is configured to perform one of the following functions: (1) pass a GPU output  (e.g., frames of graphics data  and  of ) to a multiplexer output ; (2) pass a composite signal  to multiplexer output ; or, (3) pass a signal  (e.g., signal  can be passed from another IM) to multiplexer output . Depending on a mode of operation of IM , control device  is configured to control the output of multiplexer  via a control signal .","For ease of explanation, IM  will be described using the first plurality of GPUs  of . Based on the description herein, a person skilled in the relevant art will recognize that the function and operation of IM  can be applied to the second plurality of GPUs  of .","GPU output  can be, for example, frame of graphics data  of . Signal  can be, for example, frame of graphics data  of , which is passed from IM to IM . Signal  can also be, for example, a merged frame of graphics data generated by another plurality of GPUs (e.g., the second plurality of GPUs  of ). Further, composite signal  represents a merged frame of graphics data (e.g, composite frame of graphics data  of ) generated by compositor device . Compositor device  is configured to receive GPU output  (e.g., frame of graphics data ) and signal  (e.g., frame of graphics data ) and to combine the two signals into composite signal .","In reference to , when passing frame of graphics data  from one IM to another IM for further processing, IM passes frame of graphics data  to IM via an IM output . This transfer operation of IM can be implemented with IM  of  according to an embodiment of the present invention. More specifically, according to an embodiment, multiplexer  passes GPU output  (which corresponds to frame of graphics data  of ) to multiplexer output  (which corresponds to IM output ). In this mode of operation, control device  controls multiplexer , via control signal , to pass GPU output  to multiplexer output . Multiplexer output  is passed to another IM (e.g., IM of ) for further processing according to an embodiment.","In reference to , when merging the plurality of GPU outputs (e.g., frames of graphics data  and ) to generate the merged frame of graphics data (e.g., composite frame of graphics data ), IM receives IM output  (e.g., frame of graphics data ) from IM and performs a compositing operation on the two GPU outputs. This compositing operation of IM can be implemented with IM  of  according to an embodiment of the present invention. More specifically, according to an embodiment, compositor device  receives GPU output  (e.g., frame of graphics data  of ) and signal  (e.g., frame of graphics data  of ) and performs a composite operation on the two GPU outputs to generate composite signal . In this mode operation, control device  controls multiplexer , via control signal , to pass composite signal  to multiplexer output . Multiplexer output  is then passed to a display (e.g., display  of ) according to an embodiment.","For the third mode of operation of IM , signal  is passed to multiplexer output . In an embodiment, signal  represents a merged frame of graphics data generated by the second plurality of GPUs  of . In reference to , a merged frame of graphics data  from the second plurality of GPUs  can be generated in a similar manner as described above with respect to the first pluralities of GPUs . Once generated, merged frame of graphics data  can be passed to display  via IMs and . This transfer operation of IMs and can be implemented with IM  of  according to an embodiment of the present invention. In particular, according to an embodiment, multiplexer  passes signal  (which corresponds to merged frame of graphics data ) to multiplexer output . In this mode of operation, control device  controls multiplexer , via control signal , to pass signal  to multiplexer output . As a result, in reference to , IM passes merged frame of graphics data  to IM , which then passes merged frame of graphics data  to display .","Based on the description herein, a person skilled in the relevant art will appreciate that the daisy-chain configuration of the first and second pluralities of GPUs  and  of  can be extended beyond two pluralities of GPUs. For instance, in a processing unit with three pluralities of GPUs, processing unit  of  can include a third plurality of GPUs connected between the second plurality of GPUs  and driver . In this exemplary configuration, the third plurality of GPUs can process a third merged frame of graphics data as the first and second pluralities of GPUs  and  process a first and second merged frame of graphics data, respectively. Similar to the description above, with respect to , IMs in the third plurality of GPUs can pass the third merged from of graphics data to the second plurality of GPUs , which in turn passes the third merged frame of graphics data to the first plurality of GPUs . The first plurality of GPUs  then passes the third merged frame of graphics data to display . A person skilled in the relevant art will recognize that the above-described processing unit can be extended beyond three pluralities of GPUs.","Further, based on the description herein, a person skilled in the relevant art will appreciate that each plurality of GPUs (e.g., first plurality of GPUs  and second plurality of GPUs ) can include more than two GPUs. For instance, the first plurality of GPUs  and the second plurality of GPUs can each contain three GPUs, where each plurality of GPUs can perform 3\u00d7 sampling on a frame of graphics data. In turn, with this three-GPU configuration in each of the pluralities of GPUs, processing unit  of  can pass a composite frame of graphics data with 6\u00d7 sampling to display . A person skilled in the relevant art will recognize that the above-described plurality of GPUs can be extended beyond three GPUs in each of the pluralities of GPUs.","In yet another example, based on the description herein, a person skilled in the relevant art will appreciate that the frame of graphics data processed by each of the pluralities of GPUs (e.g., first plurality of GPUs  and second plurality of GPUs  of ) can be a portion of the frame of graphics data to be displayed (e.g., composite frame of graphics data ). For instance, in reference to , the first plurality of GPUs  can perform an antialiasing operation on a \u201cright\u201d portion of the frame of graphics data to be displayed and the second plurality of GPUs  can perform an antialiasing operation on a \u201cleft\u201d portion of the frame of graphics data to be displayed. In this example, IM can be used to merge the \u201cright\u201d and \u201cleft\u201d portions of the graphics data to be displayed in a similar manner as described above with respect to the merge operation of IM  in . Once the merge operation is complete, the composite frame of graphics data (e.g., composite frame of graphics data ) can be passed to display . A person skilled in the relevant art will recognize that the graphics frame to be displayed by processing unit  can be apportioned in other formats such as, for example, a \u201ctop\u201d and \u201cbottom\u201d portion of the frame of graphics data to be displayed.","In summary, in reference to , IMs and can be used to execute a compositing operation on frames of graphics data  and , according to an embodiment of the present invention. IM is configured to pass frame of graphics data  to IM , which executes the compositing operation and passes a composite frame of graphics data  to display . Composite frame of graphics data  illustrates how frames of graphics data  and  have been combined. In the example sampling patterns, frames of graphics data  and  are 2\u00d7 multisampled, thus resulting in composite frame of graphics data  being 4\u00d7 multisampled. The 4\u00d7 multisampled composite frame of graphics data  results in improved video quality with a single pass through the video pipeline of graphics processing system  in .","In reference to , according to an embodiment, the second plurality of GPUs  functions in a similar manner as the first plurality of GPUs  described above with respect to . The second plurality of GPUs  performs antialiasing functions such as, for example, multisampling, supersampling, and a combination of multisampling and supersampling, in which IMs and operate in a similar manner as IMs and of the first plurality of GPUs , according to an embodiment of the present invention.","Multisampling is one of many antialiasing techniques that can be executed by the first and second pluralities of GPUs  and , respectively. Other antialiasing techniques such as, for example, supersampling can be executed by the first and second pluralities of GPUs  and , respectively. Alternatively, a combination of multisampling and supersampling operations can be executed by the first and second pluralities of GPUs  and , respectively. Further details on multisampling and supersampling, with respect to the first and second pluralities of GPUs  and , respectively, can be found in U.S. patent application Ser. No. 11\/140,156, titled \u201cAntialiasing System and Method,\u201d which is incorporated by reference herein in its entirety.","The following discussion focuses on the AFR features of the present invention. In reference to , processing unit  operates in a time division manner on a plurality of frames of graphics data according to an embodiment of the present invention. In an embodiment, the first plurality of GPUs  operates on odd video data frames (e.g., frame, frame, frame , etc.) and the second plurality of GPUs  operates on even video data frames (e.g., frame, frame, frame, etc.). IMs , , , and operate as links between the first and second pluralities of GPUs  and , respectively, according to an embodiment of the present invention. Based on the description herein, a person skilled in the relevant art will recognize that the first plurality of GPUs  can operate on even video data frames and that the second plurality of GPUs can operate on odd video data frames.","In an embodiment, the first plurality of GPUs  performs an antialiasing operation (e.g., compositing operation) on an odd video data frame of graphics data (e.g., frame) to generate a merged odd video data frame. For instance, the first plurality of GPUs  performs a multisampling, a supersampling operation, or a combination of both multisampling and supersampling operations on the odd video data frame, as described above with respect to . Similarly, in an embodiment, the second plurality of GPUs  performs an antialiasing operation on an even video data frame of graphics data (e.g., frame) to generate a merged even video data frame. The antialiasing operations on the odd and even video data frames by the first plurality of GPUs  and the second plurality of GPUs , respectively, occur substantially in parallel with one another according to an embodiment of the present invention.","After the first plurality of GPUs  completes its antialiasing operation to generate the merged odd video data frame, the merged odd video data frame is passed to a display (e.g., display  of ). More specifically, in reference to , IM passes an output from GPU to IM , where IM performs a compositing operation on the output from GPU and an output from GPU to generate the merged odd video data frame. The merged odd video data frame is then passed from IM to display . IMs and operate in a similar manner as described above with respect to IM  of .","After the second plurality of GPUs  completes its antialiasing operation to generate the merged even video data frame, the merged even video data frame is passed to the first plurality of GPUs . More specifically, in reference to , IM passes an output from GPU to IM , where IM performs a compositing operation on the output from GPU and an output from GPU to generate the merged even video data frame. After the merged odd video data frame is passed to display  via IM , the merged even video frame (e.g., merged frame of graphics data ) is passed from the second plurality of GPUs  to the first plurality of GPUs . IM receives the merged even video data frame from IM and passes the merged even data frame to IM . The merged even video data frame is then passed from IM to display . IMs and operate in a similar manner as described above with respect to IM  of .","According to an embodiment of the present invention, as the merged even video data frame is being passed to the display, the first plurality of GPUs  performs another antialiasing operation on the next odd video data frame (e.g., frame) from the plurality of video data frames of graphics data. Likewise, in an embodiment, the second plurality of GPUs  performs another antialiasing operation on the next even video data frame (e.g., frame ). This parallel graphics rendering technique of processing unit  (of ) improves rendering performance of the graphics processing system (e.g., graphics processing system  of ).",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 5","FIG. 2"],"b":["140","140","210","220","510","520","210","220","210","220","210","220"]},"As a plurality of sequential frames of graphics data is passed to processing unit , the first plurality of GPUs  performs an antialiasing operation on the odd video data frames of graphics data (e.g., frame, frame, frame, etc.) to generate a merged odd video data frame. Similarly, the second plurality of GPUs  performs an antialiasing operation on the even video data frames of graphics data (e.g., frame, frame, frame, etc.) to generate a merged even video data frame. In an embodiment, the merged odd video data frame and the merged even video data frame are outputted onto signal outputs  and , respectively. In reference to , IMs , , , and operate as links between driver output  and signal outputs  and  of .","In reference to , multiplexer  receives signal outputs  and , as well as a control signal  from control circuit , according to an embodiment. In an embodiment, control signal  controls multiplexer  to alternate the output of multiplexer  (e.g., processing unit output ) between signal outputs  and , which represent a merged odd video data frame and a merged even video data frame, respectively. In particular, according to an embodiment, multiplexer  passes the merged odd video data frames and the merged even data frames in sequence (e.g., merged frame, merged frame, merged frame, merged frame, etc.) As the first plurality of GPUs  processes an odd video data frame and subsequently passes a merged odd video data frame to multiplexer , the second plurality of GPUs  receives an even video data frame from driver output . In turn, the first plurality of GPUs  receives another odd video data frame from driver output  as the second plurality of GPUs processes the even video data frame and subsequently passes a merged even video data frame to multiplexer . This parallel graphics rendering technique of processing unit  (of ) improves rendering performance of the graphics processing system (e.g., graphics processing system  of ).",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 6","FIG. 2"],"b":["600","600","140"]},"Step  is divided into two operations\u2014steps  and \u2014that can occur substantially in parallel with one another, according to an embodiment. In step , an odd video data frame (e.g., frame) is loaded into a first plurality of GPUs (e.g., first plurality of GPUs  of ). In step , an even video data frame (e.g., frame) is loaded into a second plurality of GPUs (e.g., second plurality of GPUs  of ). In another embodiment, steps  and  can occur in a sequential manner. For instance, step  can occur first, followed by step \u2014or, vice versa.","Step  is divided into two operations\u2014steps  and \u2014that can occur substantially in parallel with one another, according to an embodiment. In step , an antialiasing operation is performed on the odd video data frame by the first plurality of GPUs to generate a merged odd video data frame. Similarly, in step , an antialiasing operation is performed on the even video data frame by the second plurality of GPUs to generate a merged even video data frame. In an embodiment, the antialiasing operation can be a multisampling operation, a supersampling operation, or a combination of both multisampling and supersampling operations as described above with respect to . In another embodiment, steps  and  can occur in a sequential manner, in which step  can occur first, followed by step \u2014or, vice versa.","Step  is divided into two operations\u2014steps  and \u2014that can occur substantially in parallel with one another, according to an embodiment. In step , the merged odd video data frame (from step ) is passed to a display (e.g., display  of ). Compositor devices in the first plurality of GPUs (e.g., IMs and of ) can be used to pass the merged odd video data frame to the display according to an embodiment of the present invention. In step , as the merged odd video data frame is being passed to the display, the merged even video data frame (from step ) can be passed from the second plurality of GPUs (e.g., second plurality of GPUs  of ) to the first plurality of GPUs (e.g., first plurality of GPUs  of ). Compositor devices in the second plurality of GPUs (e.g., IMs and of ) can be used to pass the merged even video data frame to the display according to an embodiment of the present invention. In another embodiment, steps  and  can occur in a sequential manner, where step  occurs first, followed by step .","In step , the merged even video data frame is passed from the first plurality of GPUs to the display. Similar to step , compositor devices in the first plurality of GPUs (e.g., IMs and of ) can be used to pass the merged even video data frame to the display according to an embodiment of the present invention.","Step  assesses whether additional frames of graphics data need to be processed by the processing unit (e.g., processing unit  of ). If so, steps - are repeated, in which the next frame of graphics data (e.g., frame) corresponds to an odd video data frame and the subsequent frame of graphics data (e.g., frame) corresponds to an even video data frame. A person skilled in the relevant art will recognize the alternating manner in which method  processes a video stream consisting of a plurality of frames of graphics data. If there are no additional frames of graphics data to be processed by the processing unit, then method  is concluded at step .","Various aspects of the present invention may be implemented in software, firmware, hardware, or a combination thereof.  is an illustration of an example computer system  in which embodiments of the present invention, or portions thereof, can be implemented as computer-readable code. For example, the methods illustrated by flowchart  of  can be implemented in system . Various embodiments of the present invention are described in terms of this example computer system . After reading this description, it will become apparent to a person skilled in the relevant art how to implement embodiments of the present invention using other computer systems and\/or computer architectures.","It should be noted that the simulation, synthesis and\/or manufacture of various embodiments of this invention may be accomplished, in part, through the use of computer readable code, including general programming languages (such as C or C++), hardware description languages (HDL) such as, for example, Verilog HDL, VHDL, Altera HDL (AHDL), or other available programming and\/or schematic capture tools (such as circuit capture tools). This computer readable code can be disposed in any known computer-usable medium including a semiconductor, magnetic disk, optical disk (such as CD-ROM, DVD-ROM). As such, the code can be transmitted over communication networks including the Internet. It is understood that the functions accomplished and\/or structure provided by the systems and techniques described above can be represented in a core (such as a GPU core) that is embodied in program code and can be transformed to hardware as part of the production of integrated circuits.","Computer system  includes one or more processors, such as processor . Processor  may be a special purpose or a general purpose processor (e.g., graphics processing unit). Processor  is connected to a communication infrastructure  (e.g., a bus or network).","Computer system  also includes a main memory , preferably random access memory (RAM), and may also include a secondary memory . Secondary memory  can include, for example, a hard disk drive , a removable storage drive , and\/or a memory stick. Removable storage drive  can include a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash memory, or the like. The removable storage drive  reads from and\/or writes to a removable storage unit  in a well known manner. Removable storage unit  can comprise a floppy disk, magnetic tape, optical disk, etc. which is read by and written to by removable storage drive . As will be appreciated by persons skilled in the relevant art, removable storage unit  includes a computer-usable storage medium having stored therein computer software and\/or data.","In alternative implementations, secondary memory  can include other similar devices for allowing computer programs or other instructions to be loaded into computer system . Such devices can include, for example, a removable storage unit  and an interface . Examples of such devices can include a program cartridge and cartridge interface (such as those found in video game devices), a removable memory chip (e.g., EPROM or PROM) and associated socket, and other removable storage units  and interfaces  which allow software and data to be transferred from the removable storage unit  to computer system .","Computer system  can also include a communications interface . Communications interface  allows software and data to be transferred between computer system  and external devices. Communications interface  can include a modem, a network interface (such as an Ethernet card), a communications port, a PCMCIA slot and card, or the like. Software and data transferred via communications interface  are in the form of signals, which may be electronic, electromagnetic, optical, or other signals capable of being received by communications interface . These signals are provided to communications interface  via a communications path . Communications path  carries signals and can be implemented using wire or cable, fiber optics, a phone line, a cellular phone link, a RF link or other communications channels.","In this document, the terms \u201ccomputer program medium\u201d and \u201ccomputer-usable medium\u201d are used to generally refer to media such as removable storage unit , removable storage unit , and a hard disk installed in hard disk drive . Computer program medium and computer-usable medium can also refer to memories, such as main memory  and secondary memory , which can be memory semiconductors (e.g., DRAMs, etc.). These computer program products provide software to computer system .","Computer programs (also called computer control logic) are stored in main memory  and\/or secondary memory . Computer programs may also be received via communications interface . Such computer programs, when executed, enable computer system  to implement embodiments of the present invention as discussed herein. In particular, the computer programs, when executed, enable processor  to implement processes of embodiments of the present invention, such as the steps in the methods illustrated by flowchart  of , discussed above. Accordingly, such computer programs represent controllers of the computer system . Where embodiments of the present invention are implemented using software, the software can be stored in a computer program product and loaded into computer system  using removable storage drive , interface , hard drive  or communications interface .","Embodiments of the present invention are also directed to computer program products including software stored on any computer-usable medium. Such software, when executed in one or more data processing device, causes a data processing device(s) to operate as described herein. Embodiments of the present invention employ any computer-usable or -readable medium, known now or in the future. Examples of computer-usable mediums include, but are not limited to, primary storage devices (e.g., any type of random access memory), secondary storage devices (e.g., hard drives, floppy disks, CD ROMS, ZIP disks, tapes, magnetic storage devices, optical storage devices, MEMS, nanotechnological storage devices, etc.), and communication mediums (e.g., wired and wireless communications networks, local area networks, wide area networks, intranets, etc.).","While various embodiments of the present invention have been described above, it should be understood that they have been presented by way of example only, and not limitation. It will be understood by persons skilled in the relevant art that various changes in form and details can be made therein without departing from the spirit and scope of the invention as defined in the appended claims. It should be understood that the invention is not limited to these examples. The invention is applicable to any elements operating as described herein. Accordingly, the breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated herein and form a part of the specification, illustrate embodiments of the present invention and, together with the description, further serve to explain the principles of the invention and to enable a person skilled in the relevant art to make and use the invention.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
