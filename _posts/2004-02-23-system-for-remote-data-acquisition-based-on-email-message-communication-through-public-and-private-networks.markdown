---
title: System for remote data acquisition based on e-mail message communication through public and private networks
abstract: The present invention relates to a method for transferring generic data acquired at a remote location to a central database based on e-mail communication, comprising encapsulating the acquired data in an electronic mail message, sending the electronic mail through a network (public or private) to a central database server, extracting the data from the electronic mail message by the central database server, and storing the extracted data in the central database. The acquired data is communicated directly to the database server by providing an architecture for Internet communication software for embedded platforms, the architecture being based on a network of software multiplexers and demultiplexers, controlled by an integrated protocol engine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07624148&OS=07624148&RS=07624148
owner: Windmill Microsystems Holding BV
number: 07624148
owner_city: Nijkerk
owner_country: NL
publication_date: 20040223
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","DESCRIPTION","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application claims priority under 35 U.S.C. \u00a7 120 to PCT International Application Number PCT\/EP02\/09035, filed on Aug. 13, 2002 and published in the English language, which claims priority under 35 U.S.C. \u00a7 119 to European Patent Application Number 01870183.9 filed on Aug. 24, 2001. The disclosure of the above-described filed applications are hereby incorporated by reference in their entirety.","The invention relates to a method for generic remote data acquisition, TCP\/IP protocol stack architecture, application programming interface, apparatus therefor, and a serial communication architecture for configuration of said apparatus.","In a first aspect the present invention relates to a method and apparatus of transferring generic data acquired at a remote location to a central database by:\n\n","The preferred embodiment of the invention is referred to as bf3RDAQ data acquisition method and bf3RDAQ data acquisition client device.","New is that the method and apparatus allow development of any remote data acquisition without any limitation on applications or the nature of the data by providing a transparent database interface and modular design architecture approach for said applications.","A second aspect of the invention relates to a scalable and modular TCP\/IP protocol stack architecture designed for the client-side Internet communication of the bf3RDAQ remote data acquisition application, and other applications, which incorporate Internet-type communication. Such architecture enables the bf3RDAQ data acquisition client application to communicate directly with the bf3RDAQ server.","A third aspect of the invention relates to a communication architecture for configuration and maintenance of the data acquisition client application, and other (embedded) applications.","A fourth aspect of the invention relates to an e-mail communication method for remote management of the data acquisition client application by the server.","A fifth aspect of the invention relates to an HTML based configuration interface which is accessible through the communications interface of the data acquisition client device.","The sixth aspect of the invention relates to FTP-based or HTTP-based updating of the data acquisition client software.","The seventh aspect invention relates to a definition for a cable which integrates RS232-to-TTL signal level conversion.","Currently, architectures for remote data acquisition applications are either based on proprietary communication protocols or infrastructures, or both. In many cases, custom hardware is developed to acquire the data and send it to the server application. This has four important disadvantages:\n\n","The first and second item make development of remote data acquisition applications unnecessary expensive, and both may imply a great development risk.","The third item makes developing applications which collect data from scattered locations in large areas (e.g. the global inventory or sales sites of a company) extremely difficult, and expensive.","The fourth item increases the overall development time of the application, and the limited reuse possibility results in additional cost to the application.","Methods for transferring collected data by means of email messages have been described in the art. EP 1,045,549 describes a method for monitoring and management of distributed networks. The performance data is gathered by a designated served in each network, which sends the accumulated performance data to one or more central servers. The central servers together constitute the supervisory system for monitoring and management of the distributed networks.","EP 964,325 describes a method for managing field devices in industrial process systems.","Both above-described methods are based on a gateway architecture. In the method according to EP 1,045,549, for instance, a designated server in the client network assumes the gateway architecture task: it collets the data from the hosts in the client network and transfers the accumulated data to the central server. In the method according to EP 964,325 field devices submit data to a gateway through proprietary or non-Internet protocols. The gateway processes and formats the data and forwards this data to a central server on behalf of the field devices, which stores the received data in a database.","However, the use of a gateway architecture requires extensive development and testing and involves a time-consuming process.","Also, both above-described methods relate to particular fields of application. The method described in EP 1,045,549 is related to the management of distributed networks, while the method described in EP 964,325 is related to the management of field devices in an industrial process system. Neither of the cited documents claims a method for remote acquistion of generic data.","To avoid the difficulties and drawbacks of the prior art methods, it would be desirable to provide a method and apparatus which reduce the time and effort required for the development of remote data acquisition applications. Also, it would be advantageous to provide a method and apparatus, which enable the acquisition of generic data at a remote location, without limitations on the nature of the data or on applications.","The invention provides therefor a method according to claim . The apparatus of the invention is given in claim . The computer readable medium of the invention is given in claim .","Regarding the second aspect of the invention, currently, architectures of TCP\/IP protocol stacks for embedded applications are usually based on a model of stacked protocol layers. This model is derived from conventional design concepts used for high-performance processor environments. As such, it is not well suited for embedded applications which are based on processors with limited processing bandwidth and memory resources. The TCP\/IP communication architecture of the present invention provides a modular and scalable concept for the development of embedded systems with Internet connectivity.","Regarding the third aspect of the invention, currently, configuration interfaces for embedded applications are generally developed on a per-application basis. Because developing and testing the underlying communication is a time-consuming task, it increases the development risk. The serial communication architecture of the present invention allows development times of configuration interfaces, which are significantly shortened.","Regarding the fourth aspect of the invention, currently, management of remote systems from a central location is usually implemented with custom applications. By making use of the e-mail communication method of the present invention, the same architecture which is used for the remote data acquisition application can be used for management of the client data acquisition apparatus. The client-server nature of such architecture enables the data acquisition client application to communicate directly with the server.","Regarding the fifth aspect of the invention, currently, configuration and management of data acquisition clients from a remote device is usually done with custom hardware, software and protocols. By making use of an embedded HTTP server (web server), the configuration and management interface for access from a remote device can be based on TCP\/IP communication and be implemented with a standard HTTP client (web browser), such as Microsoft Internet Explorer.","Regarding the sixth aspect of the invention, currently, the updating of software versions from remote locations is usually performed with proprietary bootloader protocols. By making use of the FTP protocol, the software update can be based on TCP\/IP communication and be implemented with any FTP-compliant server.","Regarding the seventh aspect of the invention, currently RS-232-to-TTL signal level conversion is either provided by the embedded system hardware, or through additional external conversion circuitry. By integrating this function in the cable connector, the total product cost and the system complexity can be reduced.","The present invention is a system, method and apparatus (consisting of hardware, firmware and software) for transferring generic data acquired by said apparatus from a remote location to a central database.","The system of the present invention consists of a central database server, and a number of bf3RADQ data acquisition clients, which can establish communication connections to the server through any network which is capable of accomodating Internet communication. The data acquisition clients process and store the locally acquired data until it needs to be conveyed to the server application. The server application has access to the database.","Importantly, the system, method and apparatus according to the invention are suitable for acquiring generic data, without any limitations for application or the nature of the data.","An essential feature of the invention is the fact that the bf3RADQ data acquisition clients can establish direct communication connections to the server by using a client-server architecture. The system, method and apparatus according to the invention do not require the use of gateway architecture.","Another essential feature of the invention is the use of electronic mail for the encapsulation of the acquired data, and for transferring the encapsulated acquired data to the central server which hosts or connects to the target database. For physical layer communication, any network which allows Internet communication (e.g. LAN, WAN) can be used. This implies that any remote data acquisition application can be based on existing infrastructures and widely accepted (Internet) communication standards. It therefore is a new genuine universal data acquisition method and system, not based on proprietary communication concepts or infrastructures.","The apparatus provides the following functions:\n\n","By providing a well-defined application programming interface API, the development of the remote data acquisition client is limited to the application-specific hardware and software.","The second aspect of the present invention is the architecture on which the client application Internet communication software is based. Rather than following a conventional stack model, the bf3Net Internet communication software is based on a design approach which is used in designing hardware signal routing structures. The bf3Net Internet communication architecture (TCP\/IP communication architecture) of the present invention is based on a network of multiplexers and demultiplexers controlled by an embedded protocol engine. This architecture has the following advantages:\n\n","By providing such an Internet communication architecture, data acquisition clients can be tailored and optimized for the application requirements. The same applies for other embedded applications.","The third aspect of the present invention is the bf3Scp serial communication architecture with which the bf3RDAQ data acquisition client can be configured through the UART serial interface provided by the apparatus of the invention. The chosen architecture has the following advantages:\n\n","It is mentioned that for other embedded applications the serial communication architecture of the present invention can be used as well.","An essential feature of the invention is the use of a target database which contains all the parameters associated with the target application (e.g. timing parameters and message identifiers). By identifying the target application with the following, globally unique, identifiers:\n\n","these parameters can be retrieved from the target database. In particular, sets of messages can be assigned to a target application. The target unit can further be identified by a 32-bit serial number.","The fourth aspect of the invention is a method for indirect configuration of the data acquisition client by the server application. The bf3RDAQ data acquisition client can be configured to retrieve electronic mail messages from its mailbox at the server by means of the POP3 protocol. These messages contain configuration data, which the POP3 client evaluates to adjust their locally stored configuration settings. Advantageously, as mentioned above, by making use of the e-mail communication method of the present invention, the same TCP\/IP communication architecture that is used for the remote data acquisition application can be used for management of the client data acquisition apparatus.","The fifth aspect of the invention is a method for direct configuration of the bf3RDAQ data acquisition client from a remote location. A person or machine can establish an Internet-based communication session based on the TCP\/IP communication architecture with the bf3RDAQ client through the network to which both connect. By interacting through an HTML file which is served by the bf3RDAQ data acquisition client embedded HTTP server, the configuration and status settings can be monitored or adjusted.","The sixth aspect of the invention is a method for updating of the data acquisition client software version by downloading a software image from the central server with the FTP or HTTP protocol. By making use of the FTP protocol, the software update can be based on TCP\/IP communication and be implemented with any FTP-compliant server.","The seventh aspect of the invention is a serial communications cable with integrated RS232-to-TTL signal level conversion.",{"@attributes":{"id":"p-0063","num":"0086"},"figref":["FIG. 1.A","FIG. 1.A"],"b":["101","102","106","103","105","101","107","106","103","104"]},{"@attributes":{"id":"p-0064","num":"0087"},"figref":"FIG. 1.B","ul":{"@attributes":{"id":"ul0013","list-style":"none"},"li":{"@attributes":{"id":"ul0013-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0014","list-style":"none"},"li":["1. The bf3RDAQ embedded software module ","2. The bf3Net Internet Communication software module ","3. The bf3RDAQ communication hardware module ","4. The bf3RDAQ server software module ","5. An operating system platform 203 (e.g. Microsoft Windows, UNIX)","6. An optional Remote Access Server "]}}}},"The bf3RDAQ server software module  has access to a database .","On the client side, to create a custom data acquisition application , the application developer must design the application-specific data acquisition hardware  to retrieve data from the data source . On the server side, the application developer must design a database application which interacts with database .","The bf3RDAQ remote data acquisition system of the present invention can further be enhanced by adding the bf3Scp target software module  which interacts with a bf3Scp User-Interface application  through the bf3RDAQ communication hardware module .","A block diagram of an embodiment of a modem bf3RDAQ data acquisition client communication hardware module, according to the present invention, is shown in . All data and communication processing is performed by the digital signal processor . The digital signal processor has access to data memory  and program memory , and is clocked by a clock device . A real-time clock (RTC)  serves as time reference.","The communication channel of the modem bf3RDAQ data acquisition client communication hardware module, according to the present invention, consists of a telecommunications line interface (LIF)  together with a Direct Access Arrangement (DAA) . The receive path further consists of a low-pass filter (LPF)  and an analog-to-digital (A-D) converter . The transmit path further consists of a digital-to-analog (D-A) converter  and a low-pass filter (LPF) . The line interface circuitry  is able to detect an incoming call, and the identifier of the calling party. Thus, the bf3RDAQ data acquisition client can selectively act as a receiver. The line interface circuitry  also detects if the telephone line is in use prior to establishing a connection or requested during an active connection by another party. Thus, the bf3RDAQ data acquisition client can be configured not to interfere with other equipment and to release the line in case of emergency conditions.","For serial communication, a Universal Asynchronous Receiver and Transmitter (UART) interface  is provided. To interface with the application-specific data acquisition hardware, a data acquisition interface  is provided.","An architecture block diagram of the bf3RDAQ data acquisition client software, according to the present invention, is shown in . The central element of the architecture is the bf3RDAQ Application Programming Interface (API) software module . It interfaces with an embedded database , which acts as local storage of the data acquired by the client, and of configuration data which controls the operation of the data acquisition client.","The bf3RDAQ Application Programming Interface (API) software module  further interfaces with the bf3Net Internet Communication software module , according to the present invention, through the following Internet application protocol modules:\n\n","The Simple Mail Transfer Protocol (SMTP)  is used to transfer the data acquired by the bf3RDAQ client, encapsulated in an electronic mail message, from the bf3RDAQ data acquisition client embedded database  to the bf3RDAQ central database, according to the present invention.","The Post Office Protocol Version 3 (POP3)  is used to transfer data (e.g. configuration data), encapsulated in an electronic mail message, from the bf3RDAO central database to the bf3RDAQ data acquisition client embedded database .","The HyperText Transfer Protocol (HTTP) server  is used to provide HTML configuration interfaces which can be accessed through a compliant web browser (e.g. Microsoft Internet Explorer).","The File Transfer Protocol (FTP)  is used to transfer new software versions from the bf3RDAQ Server, according to the present invention, to the bf3RDAQ data acquisition client. The new software version can then be stored in the program memory of the bf3RDAQ data acquisition client, according to the present invention.","The bf3Net Internet Communication software module  further interfaces with the physical layer communications driver (PHY)  which interacts with the communications hardware  (e.g. modem or ISDN interface).","The bf3RDAQ Application Programming Interface (API) software module  further provides programming interface functionality to facilitate the design of the custom data acquisition application software .","An architecture block diagram of the bf3RDAQ data acquisition server software, according to the present invention, is shown in . The central element of the architecture is the bf3RDAQ Server software module . It interfaces with the central database , which acts as the storage of the data acquired by all clients of the data acquisition application system, according to the present invention.","The bf3RDAQ Server software module  further interfaces with a standard SMTP- and POP3-compliant Internet Mail Server , from which it retrieves the acquired data which is sent to the server by a bf3RDAQ data acquisition client, according to the present invention. The Internet Mail Server  provides dedicated electronic mailboxes with associated electronic mail addresses for the reception of data messages from the bf3RDAQ data acquisition clients.","The Internet Mail Server  can also be used to send data from the central database  to a bf3RDAQ data acquisition client. For this purpose, each bf3RDAQ client in the bf3RDAQ data acquisition application system must have a POP3 mailbox at the Internet Mail Server .","The Internet Mail Server makes use of the Transmission Control Protocol (TCP) , the Internet Protocol (IP) , and an Internet-compatible datalink  (e.g. Ethernet) for communication through the network, according to the present invention.","A custom database application  is the only component that needs to be provided by the application developer to complete the server-side of the bf3RDAQ-based data acquisition application, according to the present invention.",{"@attributes":{"id":"p-0084","num":"0117"},"figref":"FIG. 2.A","b":"101"},"A node in the mxDmx network is either a multiplexer or a protocol module. Each multiplexer has a number of input ports. By making the number of ports statically configurable for each multiplexer, the topology of the mxDmx network can be customized for the application.","The bf3Net architecture, according to the present invention, is subdivided into a number of functional layers. These layers are defined as follows:\n\n","It is important to stress that this layer structure is based on functional properties, not on communication layer assignments.","Layer 0 of the bf3Net architecture, according to the present invention, is only discussed in general terms in the context of . Please refer to one of the description of . and .D for the specific details of the datalink layer implementations. The datalink is conceptually depicted as a datalink multiplexer  with a number of datalink protocol modules (DL-Px) , together with a frame encapsulation module .","Layer 1 of the bf3Net architecture, according to the present invention, consists of the Internet Protocol multiplexer , and the application protocol modules which reside at this layer, such as the Internet Control Message Protocol (ICMP) module .","Layer 2 of the bf3Net architecture, according to the present invention, consists of the Universal Datagram Protocol (UDP) multiplexer , and the Transmission Protocol (TCP) multiplexer . Both multiplexers connect to the bf3Net Socket Interface module , which is also part of Layer 2 of the bf3Net architecture.","The bf3Net socket interface module  acts as a cross-connect between the UDP and TCP multiplexers and the application protocol modules  (indicated as APP-Py in ). The bf3Net Socket Interface module  is part of the bf3Net Application Programming Interface .","To each input of a multiplexer, either a protocol module or another multiplexer is connected. Each multiplexer port is identified by a number which is unique for a multiplexer. Which node is connected to which port can also be (statically) configured. The port identifiers at each layer are used to describe a path through the mxDmx network. Such a path descriptor can be an 8-bit or 16-bit value with a field for each functional layer. The path descriptor format is shown in . For example, the path  from the engine to TCP socket  is identified as 7-2-1 (or 0xF1) in an 8-bit configuration (3:2:3 bits).","Port  of every multiplexer in the mxDmx network of the bf3Net architecture (e.g. port   of the IP multiplexer ), according to the present invention is reserved and serves as a data sink for incoming data which must be discarded. The reason for this will be explained below.","The central element of the bf3Net architecture is the bf3Net Engine . It performs the following tasks:\n\n","The interface between the bf3Net Engine  and the mxDmx network is implemented by the datalink multiplexer . The bf3Net Engine also interfaces with the Frame Encapsulation module  in a similar way.","The bf3Net Engine  can be seen as a Central Processing Unit (CPU) of the bf3Net software. As such, the bf3Net Engine  requires a clock signal to keep it running. This clock signal must be offered externally as a timer tick or an operating system task. The bf3Net Engine  is able to (re)schedule itself in the latter case.","The nodes in the mxDmx network, according to the present invention, interact with the bf3Net Engine  by sending messages to the bf3Net Engine  through the mxDmx network. To identify the originator of the message, the path descriptor is used. The following messages types are defined:\n\n","The bf3Net Engine  processes the messages and responds accordingly. The bf3Net engine  has two types of messages it can send upstream through the mxDmx network: routed messages (using a path descriptor), or broadcast messages. Each node in the network is required to pass broadcast messages to all connected upstream nodes, and to route other messages to the appropriate node.","Data is passed through the mxDmx network by means of data buffers (not depicted in ), which are identified by a unique number. These buffers are managed by the bf3Net Engine . Before a buffer can be used, a node needs to request access by sending the corresponding message to the bf3Net Engine . The same applies for the use of timers.","Access to a data buffer is granted on priority and age (first come, first serve). The responses to the nodes are also routed through the mxDmx network based on path descriptors. When a node no longer requires access to a buffer, it must release the buffer; again, this is done by sending a message to the bf3Net engine  through the mxDmx network.","When data is received from the physical layer , the bf3Net Engine  is notified through the bf3Net Physical Layer Interface (PLI) . The bf3Net Engine notifies the Frame Encapsulation module , which retrieves the data from the physical layer, and stores it in a data buffer (which was requested from and granted by the bf3Net Engine ).","Once a complete frame has been received, bf3Net Engine  is notified by the Frame Encapsulation module , and the following three-step procedure is invoked:\n\n","The first step is based solely on the parameters in the received frame (datalink, IP, and TCP\/UDP protocol identifier). Since a protocol is mapped to a port, a demultiplexer needs to do nothing more than fill the appropriate field of the path descriptor and pass the buffer to an upstream multiplexer if applicable, or terminate if the path leads to a protocol module at its layer. If a protocol is not supported or recognized, a value of \u20180\u2019 should be entered. During this step, the data integrity verification is also done (e.g. IP checksum). If this verification fails, the path is also set to \u20180\u2019.","The second step is done by the bf3Net Engine  to mask the upstream path in case a path is not available (e.g. to avoid processing of an incoming TCP segment when the datalink has not yet been established). All unsupported path fields are set to \u20180\u2019.","The third step is the actual data processing. Because the \u2018zero port\u2019 is reserved as universal sink for data which must be discarded, all erratic data buffers are led to this port, which simply releases the data buffer. If the data is correct in the general sense, it is led to appropriate protocol module, based on the established path descriptor.","This procedure (in combination with the zero ports) is the key to simplifying the design of the multiplexers, as they need to have no knowledge of other protocol layers (apart from the routing information) whatsoever. Also, by choosing this design approach, a protocol module can easily be exchanged, because the demultiplexing and protocol functions are isolated from each other. Another powerful feature of this architecture is the fact that the mxDmx network is used for both the control and data communication. The design of the protocol nodes can all be based on a common design framework.","When data must be transmitted, the applicable protocol node must fill its part of the requested data buffer (once access is granted), and pass it to the downstream multiplexer node. Please note that this statement implies two things: (a) a multiplexer will never request a data buffer, (b) a protocol node will never pass a buffer to another protocol node. This again simplifies the design of the mxDmx network nodes. Before a node passes a data buffer downstream, it must set the downstream port number in the path descriptor for the buffer. All downstream multiplexers will add their protocol information (e.g. IP header), using the path descriptor. When a completed buffer has been sent by the physical layer, the originating node will be notified.","If a physical layer communication channel needs to be opened (e.g. a modem connection), the bf3Net socket interface module  will directly signal the bf3Net Engine  to do so. A channel identifier can be passed with this request. The bf3Net Engine  will instruct the physical layer to start opening the connection, and notify the mxDmx network once the physical layer indicates it is ready. The bf3Net Engine  will then coordinate establishment of the datalink, and manage it afterwards, based on the event notifications it receives from the mxDmx network nodes.","The bf3Net Engine  can individually or collectively enable and disable multiplexers with the \u2018enable signals\u2019 shown in . Each multiplexer in the mxdmx network has an MUX_ENABLE input for this purpose. This way, if needed, the bf3Net Engine  can selectively stop data processing (e.g. in case the communication link is lost).","Finally, the bf3Net Engine  collects and maintains information, which can be used for profiling and debugging (e.g. buffer usage and error history). This information can be retrieved from the bf3Net Engine  with API commands. Also, parameters can be changed through the API, allowing run-time profiling.",{"@attributes":{"id":"p-0111","num":"0163"},"figref":["FIG. 2.B","FIG. 2.A"]},{"@attributes":{"id":"p-0112","num":"0164"},"figref":"FIG. 2.C","b":["302","301"]},"A number of protocol modules can reside at this layer of the bf3Net architecture, according to the present invention, such as: Link Control Protocol (LCP), No authentication (AUTH), Password Authentication Protocol, Challenge Handshake Authentication Protocol (CHAP), Microsoft CHAP (MS-CHAP), and the Internet Protocol Control Protocol (IPCP).",{"@attributes":{"id":"p-0114","num":"0166"},"figref":"FIG. 2.D","b":["402","401"]},"A number of protocol modules can reside at this layer of the bf3Net architecture, according to the present invention, such as: Address Resolution Protocol (ARP) , and Reverse Address Resolution Protocol (RARP) .",{"@attributes":{"id":"p-0116","num":"0168"},"figref":"FIG. 3.A"},"The host implementation  consists of a graphical user-interface (GUI) program  that has access to a target database , and communicates with the target implementation through the built-in COM port  of the Personal Computer on which it runs.","The bf3Scp target implementation  consists of the target software  which communicates with the host implementation through the serial port  of the target processor on which it runs.","The RS232-to-TTL signal level conversion  is not regarded as part of either implementation, although because of to the bf3Scp signal definitions it must be provided. A cable which has been defined for this purpose will be described in the discussion of .","The target database  is provided to minimize the number of communication parameters that need to be configured to establish a communication session. It contains the parameters which are fixed at design-time. These parameters may also be stored in the GUI application, if this is more advantageous.","An overview of a user-interface application based on the bf3Scp architecture, according to the present invention, is shown in .","Enclosed by the dashed line are the elements of which the bf3Scp invention  consists:\n\n","The bf3Scp host protocol engine  is an ActiveX object which handles all the protocol-related serial communication through the RS-232 COM port . It runs on any Microsoft Windows-compatible platform, and is independent of the host user-interface implementation . It comes in two versions: a local server which must run on the same host PC as the user-interface, or a remote server which can interact with the user-interface through a network, making use of Microsoft's DCOM technology.","The bf3Scp target serial port driver  handles physical layer communication through the Target serial port  on the target side. It must be developed for every processor that makes use of bf3Scp. For communication between the PC COM port  and the Target Serial Port , the RS-232-to-TTL level conversion  is required.","The bf3Scp target engine  is processor-independent; it handles all protocol-related communication on the target side which is not covered by the engine. It passes the received messages to the Custom Target application software  which must take appropriate action. With bf3Scp, the development of a custom user-interface for embedded target is limited to the following steps:\n\n","This makes developing user-interfaces a straight-forward task. An application can optionally make use of the target database  (discussed in the context of ).",{"@attributes":{"id":"p-0127","num":"0188"},"figref":"FIG. 3.C","b":"301","ul":{"@attributes":{"id":"ul0029","list-style":"none"},"li":{"@attributes":{"id":"ul0029-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0030","list-style":"none"},"li":["1. Fixed header (value 0xBF) ","2. 4-bit sequence field SEQ ","3. 4-bit flags field FLAGS ","4. 1-bit sync field S ","5. 7-bit length field LENGTH ","6. 8-bit message type field MESSAGE ","7. Byte-multiple payload ","8. 8-bit frame checksum field FCS ","9. Fixed trailer (value 0x03) "]}}}},"The fixed header , in combination with the LENGTH field , the FCS field , and the fixed trailer  make it simple for (embedded) applications to detect the end of a frame: if the accumulated sum of all received bytes equals \u20180\u2019, the last received byte is equal to 0x03, and the number of bytes received equals the value in the LENGTH field, the frame has been completely and correctly received.","The MESSAGE field  contains the qualification of the payload . Odd-numbered values represent messages, even-numbered values are reserved for replies. This also simplifies processing of incoming frames.","The SEQ field  is used to detect duplicate or out-of-order reception of messages and replies. Its value is incremented with each message sent (modulo-16) for a certain direction (target-host or host-target).","The FLAGS field  has a fixed value of 0\u00d705. It is reserved for future applications.","The sync field S  is used for synchronization of the datalink. When its value is \u20181\u2019, the bf3Scp message is used for this purpose.",{"@attributes":{"id":"p-0133","num":"0203"},"figref":"FIG. 3.D"},"A synchronization procedure starts by the sending of a SYNCREQ message  by the host to the target. The S field is set when this message is sent. The target must respond by sending a SYNCACK reply  (again with the S bit set) to the host. The host will acknowledge the reception of the SYNCACK reply , by sending an ACKNOWLEDGE  message (once more with the S bit set) to the target. This completes the synchronization procedure.",{"@attributes":{"id":"p-0135","num":"0205"},"figref":"FIG. 3.E"},"A message transfer starts by the sending of a message  by implementation A to the implementation B. The S field is cleared when a normal message is sent. Implementation B must respond by sending a reply  (also with the S bit cleared) to implementation A, which will acknowledge the reception of the reply , by sending an ACKNOWLEDGE  message (once more with the S bit cleared) to the target. This completes the message transfer",{"@attributes":{"id":"p-0137","num":"0207"},"figref":"FIG. 3.F"},"The design consists of a 9-pin or 25-pin SUB-D type female connector , which plugs directly into the serial COM ports of personal computers. The connector is mounted on a printed circuit board (PCB) , which is small enough to fit into the enclosure of the connector .","The PCB  accomodates an integrated circuit  which provides the RS232-to-TTL level conversion, and a board-to-cable connector , which connects to a cable (e.g. a flatcable) . On the other end of the cable , a cable socket connector is mounted."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In the drawings three sets of figures are given. The same reference numbers have been used for each of the separate sets 1, 2 and 3. ,  and  respectively are illustrations of embodiments of the first, second and third aspect of the invention.",{"@attributes":{"id":"p-0048","num":"0071"},"figref":"FIG. 1.A","b":["1","2","1"]},{"@attributes":{"id":"p-0049","num":"0072"},"figref":"FIG. 1.B"},{"@attributes":{"id":"p-0050","num":"0073"},"figref":"FIG. 1.C","b":"3"},{"@attributes":{"id":"p-0051","num":"0074"},"figref":"FIG. 1.D","b":"1"},{"@attributes":{"id":"p-0052","num":"0075"},"figref":"FIG. 1.E","b":"2"},{"@attributes":{"id":"p-0053","num":"0076"},"figref":"FIG. 2.A","b":"1"},{"@attributes":{"id":"p-0054","num":"0077"},"figref":"FIG. 2.B"},{"@attributes":{"id":"p-0055","num":"0078"},"figref":"FIG. 2.C","b":"2"},{"@attributes":{"id":"p-0056","num":"0079"},"figref":"FIG. 2.D","b":"3"},{"@attributes":{"id":"p-0057","num":"0080"},"figref":"FIG. 3.A"},{"@attributes":{"id":"p-0058","num":"0081"},"figref":"FIG. 3.B"},{"@attributes":{"id":"p-0059","num":"0082"},"figref":"FIG. 3.C"},{"@attributes":{"id":"p-0060","num":"0083"},"figref":"FIG. 3.D"},{"@attributes":{"id":"p-0061","num":"0084"},"figref":"FIG. 3.E"},{"@attributes":{"id":"p-0062","num":"0085"},"figref":"FIG. 3.F"}]},"DETDESC":[{},{}]}
