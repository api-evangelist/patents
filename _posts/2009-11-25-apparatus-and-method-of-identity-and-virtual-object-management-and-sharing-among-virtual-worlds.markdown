---
title: Apparatus and method of identity and virtual object management and sharing among virtual worlds
abstract: A system for centrally managing credential information of a user and a virtual object of a user across a plurality of virtual world (or corresponding virtual world servers) is disclosed. The system includes an identity service module for managing an authentication request (e.g., verifying credential information of a user) from a user and an inventory service module for managing virtual properties of a user. Furthermore, a method for logging in a virtual world by using the system is disclosed. A method for teleporting a virtual property from a virtual world to another virtual world by using the system is disclosed. A method for logging out from a virtual world by using the system is also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08424065&OS=08424065&RS=08424065
owner: International Business Machines Corporation
number: 08424065
owner_city: Armonk
owner_country: US
publication_date: 20091125
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention generally relates to 2D (two dimensional) or 3D (three dimensional) virtual worlds. More particularly, the present invention relates to a system and method for centrally managing an authentication process and teleporting virtual properties from a virtual world to another virtual world. The present invention is also relates to a system or method for centrally managing credential information and virtual properties across a plurality of virtual worlds.","As virtual worlds (e.g., SecondLife\u2122, Active Worlds\u2122) become more and more popular in recent years, there are trends that different virtual worlds can interoperate. Interoperability is a property referring to an ability of diverse systems and organizations to work together. Interoperability can further mean an ability of two or more systems or components to exchange information and to use the information that has been exchanged. A further trend is an ability to teleport virtual properties between different virtual worlds freely. These virtual worlds may be hosted by the same or different vendors, and scenes (e.g., virtual scenes) and the underlying engine (e.g., software implementing the virtual worlds) may be homogeneous or heterogeneous. Thus, providing a user with a same appearance and a same identity in different virtual worlds (even the current 2D web) is highly demanded. The same appearance refers to an avatar having same size, same color, same shape and same name across different virtual worlds. The same identity refers to a same login ID, same password and same username across different virtual worlds.","Currently, different virtual worlds use different formats of user identifiers (e.g., login ID, username, password, etc.) to login. For example, SecondLife\u2122 requires first name\/last name pairs to sign in, while in Active Worlds\u2122 there may be a length limitation on usernames. Thus, users have to remember all these kinds of usernames\/passwords (e.g., users have to remember each login ID\/password for each virtual world) to access and\/or play in different kinds of virtual worlds. A lack of a universal username\/password that can be accepted in all the virtual worlds provides hardships to users when they want to teleport their virtual properties between different virtual worlds. The lack of a universal username\/password prevents a user from being appeared in a unified identity or appearance in the different virtual worlds.","Therefore, it is highly desirable to provide a system or method for centrally managing credential information (e.g., login ID, password, username, email address, etc.) of users across all the virtual worlds and for enabling a user to teleport virtual properties of him\/her from a virtual world to another virtual world.","On embodiment of the present invention is a system for centrally managing credential information and virtual properties across a plurality of virtual worlds. Another embodiment of the present invention is a method for logging in a virtual world by using the system that centrally manages the credential information and the virtual properties of users. A further embodiment of the present invention is a method for teleporting the virtual properties from a virtual world (e.g., a first virtual world) to another virtual world (e.g., a second virtual world) by using the system.","Thus, in one embodiment, there is provided a system for centrally managing credential information of users and virtual properties of the users across a plurality of virtual worlds, comprising:","an identity service module for receiving authentication requests and the credential information of the users from the users, and generating a result of each authentication request, the result indicating whether the users are valid users of the plurality of virtual worlds;","an inventory service module for receiving the result of the authentication request from the identity service module and transmitting the virtual properties to at least one virtual world server associated with the plurality of virtual worlds if the results of the authentication request is successful; and","a central storage device for communicating with the inventory service module and storing the virtual properties provided from the inventory service module and the credential information provided from the identity service module.","In a further embodiment, the identity service module performs one or more of an identity creation, an identity enumeration, an identity query, an identity deletion, an identity modification and an identity authentication.","In a further embodiment, the credential information of uses comprises one or more of: a username, password and biometric information such as fingerprint, iris scan, voice and facial scan.","In one embodiment, there is provided a method for accessing a virtual world server via a virtual world client device, the method comprising:","receiving from the virtual world client device a request to log in to the virtual world server;","establishing a communication link between the virtual world server and an identity service module that authenticate whether the request is valid or not and then to establish another communication link between the virtual world client device and the identity service module for the authentication;","receiving, at the identity service module, credential information from the virtual world client device and mapping the credential information to an ID (identity) in the identity service module to authenticate the credential information with the identity service module;","generating, at the identity service module, a result of authenticating the credential information;","receiving, at the virtual world server, the generated result of authenticating the credential information;","providing the generated result from the virtual world server to the virtual world client device;","determining whether the generated result indicates log in success or failure;","displaying an error message on the virtual world client device, if the generated result indicates a login failure;","providing a token from the virtual world server to the virtual world client device, if the generated result indicates a login success;","requesting, at the virtual world server, data transmission from the inventory service module to the virtual world server;","verifying, at the inventory service module, whether the generated result was the login success;","transmitting virtual object data from the inventory service module to the virtual world server upon verifying that the generated result was the login success; and","providing the transmitted data from the virtual world server to the virtual world client device for presentation and display thereof.","In a further embodiment, the credential information of uses comprises one or more of a username, password and biometric information such as fingerprint, iris scan, voice and facial scan.","In one embodiment, there is provided a method for teleporting a virtual property of a user from a first virtual world to a second virtual world by using an identity service module, the first virtual world being associated with a first virtual world server, the second virtual world being associated with a second virtual world server, the method comprising:","accessing the first virtual world via a virtual world client device;","requesting a teleportation of the virtual property from the first virtual world server to the second virtual world server;","upon receiving the teleportation request at the second virtual world server, propagating the teleportation request from the second virtual world server to the identity service module;","establishing a link between the virtual world client device and the identity service module for an authentication of the virtual world client device;","evaluating whether the virtual world client device has a valid token by communicating between the virtual world client device and the identity service module via the link;","if the virtual world client device does not have the valid token, sending an error message from the identity service module to the second virtual world server;","upon receiving the error message at the second virtual world server, rejecting the teleportation request at the second virtual world server;","if the virtual world client device has the valid token, transmitting the virtual property from the first virtual world server to the second virtual world server;","transferring the transmitted virtual property from the second virtual world to the virtual world client device;","exiting the first virtual world server via the virtual world client device; updating the identity service module to reflect the transmitting, the transferring and the signing out; and","displaying the transmitted virtual property in the second virtual world via the virtual world client device.","In one embodiment of the present invention, \u201cvirtual world\u201d refers to current or future 3D (three dimensional) virtual environments where a plurality of users, via avatars, interact within. SecondLife\u2122, Active Worlds\u2122 and Forterra\u2122 are examples of the virtual worlds. An authentication process refers to logging in (signing in) or logging out (singing out) process. Logging in (login) is a process by which an access to a computer system is controlled by an identification of a user to obtain a permission to access the computer system. Teleporting refers to transferring or transmitting instantaneously without physically traversing a space between but rather by an advance technological means. A virtual property refers to an avatar, a virtual building, a virtual asset, virtual money and a virtual object (e.g., clothes, jewelry, cars, etc) in the virtual worlds.","In one embodiment of the present invention, \u201ccredential information\u201d of a user refers to a username (i.e., a unique set of characters identifying a user of a shared computer program, system, or network, which allows access when coupled with a password; also refers to a user name, user ID or login ID), a password (i.e., a secret word or phase that a user uses to gain admittance or access to a shared computer program, system or network) and biometric data associated with a user, e.g., a fingerprint of the user, an iris scan of the user, a voice of the user and a facial scan of the user. Generally, the credential information is used for verifying whether a user is a valid user or registered user who can officially access a virtual world.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 1","b":["100","110","120","130","140","100","1","2","160","100"]},"In one embodiment of the present invention, a virtual world is hosted by one or more virtual world servers. In one embodiment, the virtual world server is a computing device (e.g., a mainframe, a desktop computer, a workstation, a laptop computer, etc.). In one embodiment, the virtual world server includes a database (e.g., Oracle\u00ae, IBM\u00ae Informix\u00ae) and\/or a storage device (e.g., a magnetic disk, a hard disk, a optical disk, a compact disk, a digital versatile disk) to store and manage persistent data (e.g., virtual objects, credential information of registered users) of a corresponding virtual world. A SecondLife\u2122 region server and OpenSIM (openSimulator) are examples of the virtual world server. In one embodiment, the virtual world server may be connected to more than one virtual world client device at a time.","In one embodiment, a user (e.g., an end user ) accesses the system  through the virtual world client device (e.g., a virtual world client device ). The user is a person who uses the virtual world client device to play or do business in virtual worlds or 2D web. The inventory service module  and the identity service module  are shared by the plurality of virtual worlds (or corresponding virtual world servers) and the plurality of virtual world client devices.","The identity service module  manages an authentication request (e.g., request to verify whether the user is a valid user who can access a virtual world) received from the user. In one embodiment, the identity service module  requires credential information from a user, when the user wants to access one of the \u201cn\u201d virtual worlds. Then, the user provides his\/her credential information through the virtual world client device to the identity service module  via physical links, wireless links and\/or networks. Upon receiving the credential information from the virtual world client device, the identity service module  generates a result of the authentication request, i.e., whether the user is a valid or registered user for one of the \u201cn\u201d virtual world. The result is determined by searching a database to find out whether the provided credential information can be found in the database which stores registered or valid users' authentication information (e.g., usernames, passwords, iris scan images, fingerprint images, voice records, facial scan images, phone number, addresses, email addresses, social security numbers, etc.). If the provided credential information is valid (i.e., the result of the authentication result is successful), the identity service module  contacts the virtual world (or a corresponding virtual world server) which the user wants to access, to provide an access grant (i.e., allowing the user to access the virtual world (or virtual world server)) to the user (or the virtual world client device of that user). Upon the virtual world (or the corresponding virtual world server) granting access to the user, the user through the virtual world client device can access the virtual world. When the provided credential information is not valid, the identity service module  contacts the user (or the virtual world client device that the user is using) to inform that the user provided an invalid credential information. In one embodiment, upon receiving the information (informing that the user provided invalid credential information), the user or the virtual world client device may provide credential information to the identity service module . In another embodiment, the user or the virtual world client device may stop accessing the virtual world (or the corresponding virtual world server).","The inventory service module  manages virtual properties (e.g., avatars, virtual objects (e.g., virtual clothes, virtual cars, virtual buildings), virtual assets) of a user. In one embodiment, the inventory service module  centrally manages all the virtual properties of the user. For example, upon a user's request, the inventory service module can delete a virtual property of the user. Upon a user's request, the inventory service module can transfer a virtual property of the user from a virtual world to another virtual world. In one embodiment, the inventory service module traces and records all the changes of the virtual properties (e.g., an ownership transfer of a virtual property; e.g., an expiration date of a temporary virtual object), e.g., by keeping all the changes in a database or a storage device. In one embodiment, when a user want to transmit a virtual property from a first virtual world (or a corresponding first virtual world server) to a second virtual world (or a corresponding second virtual world server), the inventory service module  contacts the identity service module  to verify whether the user is a valid user of the virtual worlds (e.g., the first virtual world and the second virtual world). Then, the identity service module  provides a result of an authentication request (e.g., verification of whether the user is valid user of the virtual worlds) to the inventory service module . Upon receiving the result of the authentication request, the inventory service module  transmits the virtual property from the first virtual world (or a corresponding first virtual world server) to the second virtual world (or a corresponding second virtual world server), if the result of the authentication request is successful. Otherwise, the inventory service module  sends an error message to the user. In another embodiment, the inventory service module  transmits a virtual property from a virtual world (or corresponding virtual world server) to other virtual worlds (or other corresponding virtual world servers), if a user requests and the identity service module  authorizes the transmission of the virtual property by verifying the user is an authorized user of the other virtual worlds.","The central storage device  communicates with the identity service module  and the inventory service module . The central storage device  stores and\/or aggregates (e.g., combines) virtual properties of users and credential information of users. In one embodiment, the virtual properties of the users are provided to the central storage device  from the inventory service module . In one embodiment, the credential information of the users is provided to the central storage device  from the identity service module . The central storage device  is one or more of: a magnetic disk, an optical disk, a hard disk, a compact disk and a digital versatile disk.","In one embodiment, the identity service module  provides functionality enabling the system  to perform one or more of: an identity creation (e.g., creating a username and password), an identity enumeration (e.g., creating a list of identities (e.g., usernames, login IDs, passwords, etc.), an identity query (e.g., entering and\/or responding to questions that may be asked to a user when the user can not remember a username or password), an identity deletion (e.g., deleting a username, password, etc.), an identity modification (e.g., changing a username, password, etc.) and an identity authentication (e.g., verifying whether an identity (e.g., a username or password) is valid or not).","In one embodiment, the central storage device  also communicates with the content management interface and the identity management interface . The identity management interface centrally manages (e.g., edit, create and delete) credential information of a user. Whenever the credential information is created or changed upon a user's request, the created or changed credential information is saved in the central storage device . The content management interface centrally manages (e.g., edit, create and delete) virtual properties of a user. Whenever the virtual properties are created or changed upon a user's request, the created or changed virtual property is saved in the central storage device . In one embodiment, the content management interface and identity management interface  is a graphical user interface (GUI) which is generated by the system  and provided from the system  to a virtual world client device (e.g., the virtual world client device ), which the user  operates. The system  may communicate with the virtual world client  via the content management interface and identity management interface . The content management interface and identity management interface  assists the user to centrally manage his\/her credential information or the virtual properties, e.g., by providing drop-down menus or providing pop-up windows.","In one embodiment, the content management interface module and identity management interface module  in the system  is implemented as hardware on a reconfigurable hardware (e.g., FPGA (Field Programmable Gate Array) or CPLD (Complex Programmable Logic Device)) using a hardware description language (Verilog, VHDL, Handel-C, or System C). In another embodiment, the content management module and identity management module  in the system  is implemented on a semiconductor chip (e.g., ASIC (Application-Specific Integrated Circuit)) using a semi custom design methodology (i.e., designing a chip using standard cells and a hardware description language).","In one embodiment, the content management module and identity management module  in the system  is implemented as software using a programming language (e.g., C, C++, Java, .NET, etc.). In one embodiment, the content management module and identity management module  in the system  are recorded in a computer readable medium (e.g., CD (Compact Disk), DVD (Digital Versatile Disc), HDD (Hard Disk Drive)) as an instruction (e.g., a machine language or assembly language) that is executed by a processor (e.g., Intel\u00ae Pentium\u00ae, IBM Power PC\u00ae, AMD\u00ae Operon\u00ae).","In one embodiment, the content management module and identity management module  in the system  is implemented as hardware through a computing device by being executed in the computing device. The computing device comprises, but is not limited to include, processor(s), memory(s), display device(s), input\/output device(s) and network interface(s).","In one embodiment, the identity service module  communicates with a plurality of virtual worlds (or corresponding virtual world servers) or a 2D web (or 2D web server (e.g., HTTP server or Apache server)) via an identity message channel, as shown as broken lines in . The identity message channel can be a wired link, a wireless link and a network. The inventory service module  communicates with a plurality of virtual worlds (or corresponding virtual world servers) or a 2D web (or 2D web server (e.g., HTTP server or Apache server) via a virtual object transmission channel, as shown in . The virtual object transmission channel can be a wired link, a wireless link and a network.","In on embodiment of the present invention, a virtual world client device (e.g., a virtual world client device ) receives inputs from a user (e.g., an end user ) and communicates with a plurality of virtual world servers to access corresponding virtual worlds or to teleport virtual properties between different virtual worlds. When a virtual world server provides a response (e.g., access grant or access denial) to the virtual world client device, the virtual world client device processes the response and provides the response to the user, e.g., by displaying an access grant or denial message on a screen. The response from the virtual world server may be some text, multimedia data or some command for the virtual world client device to execute.","In a further embodiment of the present invention, as shown in , the virtual world client device comprises a rendering engine , a content uploading\/downloading module , an authentication module , a single-sign-on (SSO) module  and other modules . The rendering engine  processes 2D (two dimensional) or 3D (three dimensional) web pages. In one embodiment, the 2D or 3D web pages includes virtual properties. The rendering engine  may be a hybrid or integration of a web engine such as Firefox\u2122 and a 3D engine such as Torque Game Engine.","A single-sign-on (SSO) module  tracks an already authenticated user (i.e., a user who provided credential information to the identity service module  and the identity service module  verified that the user is a valid user who can access a plurality of virtual worlds or a virtual world) so as not to require the authenticated user to authenticate again (e.g., providing credential information again through a virtual world client device and verifying again whether the credential information is valid through the identity service module ) for an access to a virtual world server or other virtual world servers. In one embodiment, the SSO module  enables a Single-Sign-On within a virtual world\/2D web or a plurality of virtual worlds\/2D webs. By implementing the Single-Sign-On, once a user provides credential information to the identity service module  and the provided credential information is proved as being valid, the user does not need to provide the credential information again to access that virtual world or any other virtual worlds. In one embodiment, when credential information of a user is verified by the identity service module , a virtual world server that granted an access to the user sends a token (e.g., a web cookie or HTTP cookie) to a virtual world client device that the user is using. When the same user wants to access other virtual worlds or same virtual world again, the virtual world client device that the user is using sends the token to the identity service module . Upon receiving the token from the virtual world client device, the identity service module  evaluates whether the token is valid or not, by checking whether numbers on the token are still valid. Then, the virtual world client device becomes an authorized user to access the same virtual world or other virtual worlds, if the sent token is valid. Otherwise, the identity service module  sends an access denial message to the virtual world client device.","The content uploading\/downloading module  exchanges data (e.g., virtual properties or credential information) between virtual world client device(s), virtual world server(s), the identity service module  and the inventory service module . In one embodiment, the content uploading\/downloading module  utilizes a protocol (e.g., TCP\/IP, UDP (User Datagram Protocol), HTTP, Telnet, SSH (Secure Shell Remote Protocol), SMTP (Simple Mail Transfer Protocol), FTP (File Transfer Protocol), IMAP (Internet Message Access Protocol)) to exchange the data between virtual world client device(s), virtual world server(s), the identity service module  and the inventory service module . In one embodiment, the data is exchanged between virtual world client device(s), virtual world server(s), the identity service module  and the inventory service module  via a wireless link, a wired link or a network.","The authentication module  performs an authentication related function of users. The authentication related function comprises obtaining credential information of users and checking validity of credential information from users, e.g., by searching an internal database (not shown) in the virtual world client device to find out a matching valid record, obtaining fingerprints of users and checking validity of the fingerprints of the users, e.g., by searching an internal database in the virtual world client device to find out a matching valid record, obtaining iris scans of users and checking validity of the iris scans of the users, e.g., by searching an internal database in the virtual world client device to find out a matching valid record, obtaining facial scans of users and checking validity of the facial scans of the users, e.g., by searching an internal database in the virtual world client device to find out a matching valid record, and obtaining voices of users and checking validity of the users, e.g., by searching an internal database in the virtual world client device to find out a matching valid record.","The virtual world client device  may include other modules  such as a plugin management module (not shown). The plugin management module manages (e.g., add, edit, remove) software extensions (e.g., computer program designed to be incorporated into another piece of software in order to enhance or extend the functionalities of the software). The examples of the software extensions are Firefox\u2122 plug-ins or Apache plug-ins.","In one embodiment, the rendering engine , the other modules , the content uploading\/downloading module , the authentication module  and SSO module  in the virtual world client device  are implemented as hardware on a reconfigurable hardware (e.g., FPGA (Field Programmable Gate Array) or CPLD (Complex Programmable Logic Device)) using a hardware description language (Verilog, VHDL, Handel-C, or System C). In another embodiment, the rendering engine , the other modules , the content uploading\/downloading module , the authentication module  and SSO module  in the virtual world client device  is implemented on a semiconductor chip (e.g., ASIC (Application-Specific Integrated Circuit)) using a semi custom design methodology (i.e., designing a chip using standard cells and a hardware description language).","In one embodiment, the rendering engine , the other modules , the content uploading\/downloading module , the authentication module  and SSO module  in the virtual world client device  are implemented as software using a programming language (e.g., C, C++, Java, .NET, etc.). In one embodiment, the rendering engine , the other modules , the content uploading\/downloading module , the authentication module  and SSO module  in the virtual world client device  are recorded in a computer readable medium (e.g., CD (Compact Disk), DVD (Digital Versatile Disc), HDD (Hard Disk Drive)) as an instruction (e.g., a machine language or assembly language) that is executed by a processor (e.g., Intel\u00ae Pentium\u00ae, IBM\u00ae Power PC\u00ae, AMD\u00ae Operon\u00ae).","In one embodiment, the rendering engine , the other modules , the content uploading\/downloading module , the authentication module  and SSO module  in the virtual world client device  are implemented as hardware through a computing device by being executed in the computing device. The computing device comprises, but is not limited to include, processor(s), memory(s), display device(s), input\/output device(s) and network interface(s).","In one embodiment, a virtual world server communicates with the identity service module  and the inventory service module  to authorize logins of users and to teleport virtual properties between different virtual worlds. In one embodiment, as shown in , the virtual world server (e.g., a virtual world server ) comprises a content management module , a content transmission module , an authentication module  and other modules .","The content management module  manages (e.g., delete, add, remove) the virtual properties of users, e.g., by deleting, adding, removing the virtual properties in the virtual world server  upon a request from the users. The content transmission module  manages transmission of the virtual properties of the users to a virtual world client device, an identity service module and an inventory service module, e.g., by utilizing a communication protocol (e.g., TCP\/IP, UDP, HTTP, Telnet, SSH, SMTP, FTP and IMAP). Other modules  (e.g., a plugin management module) may be included in the virtual world server. The plugin management module manages (e.g., add, edit, remove) software extensions (e.g., computer program designed to be incorporated into another piece of software in order to enhance or extend the functionalities of the software). The examples of the software extensions are Firefox\u2122 plug-ins or Apache plug-ins.","The authentication module  authenticates users who want to login a virtual world (e.g., virtual world  in ). In one embodiment, the authentication module  may directly authenticate a request to login a virtual world with an identity storage device (e.g., an identity storage device  in ) in the identity service module . (The identity storage device  is described in detail later.) In another embodiment, the authentication module  may delegate the authentication to the identity service module .","In one embodiment, the content transmission module , the content management module , the authentication module  and other modules  in the virtual world server  are implemented as hardware on a reconfigurable hardware (e.g., FPGA (Field Programmable Gate Array) or CPLD (Complex Programmable Logic Device)) using a hardware description language (Verilog, VHDL, Handel-C, or System C). In another embodiment, the content transmission module , the content management module , the authentication module  and other modules  in the virtual world server  is implemented on a semiconductor chip (e.g., ASIC (Application-Specific Integrated Circuit)) using a semi custom design methodology (i.e., designing a chip using standard cells and a hardware description language).","In one embodiment, the content transmission module , the content management module , the authentication module  and other modules  in the virtual world server  are implemented as software using a programming language (e.g., C, C++, Java, .NET, etc.). In one embodiment, the content transmission module , the content management module  and other modules  in the virtual world server  are recorded in a computer readable medium (e.g., CD (Compact Disk), DVD (Digital Versatile Disc), HDD (Hard Disk Drive)) as an instruction (e.g., a machine language or assembly language) that is executed by a processor (e.g., Intel\u00ae Pentium\u00ae, IBM\u00ae Power PC\u00ae, AMD\u00ae Operon\u00ae).","In one embodiment, the content transmission module , the content management module , the authentication module  and other modules  in the virtual world server  are implemented as hardware through a computing device by being executed in the computing device. The computing device comprises, but is not limited to include, processor(s), memory(s), display device(s), input\/output device(s) and network interface(s).","In one embodiment, as shown in the , the identity service module  (identity service module  in ) includes an authentication module , an identity status management module , a registry service module , a name mapping module , an aggregation module , one or more identity storage device  and other modules .","The identity storage device  stores credential information of users. In one embodiment, there are a plurality of identity storage devices. The identity storage device  is a magnetic disk, an optical disk, a hard disk, a compact disk or a Digital Versatile Disc. An aggregation module  is a module to aggregate (i.e., combines) the plurality of identity storage devices. In one embodiment, the plurality of identity storage devices appears as one logical storage device through the aggregation module . In one embodiment, the aggregation module  supports a data source level aggregation and a service level aggregation. The data source level aggregation means the aggregation module  directly accesses raw data in the one or more identity storage devices, i.e., without an assistance of an interface. The service level aggregation means the aggregation module  accesses raw data in the one or more identity storage devices, e.g., through API (Application Programming Interface) and\/or GUI (Graphical User Interface).","The name mapping module  maps credential information to an ID (i.e., identity; username, login ID) used in the one or more identity storage devices , e.g., by a hash function. In one embodiment, each identity storage devices  has a unique ID. In another embodiment, the one or more identity storage devices  have a same ID.","In one embodiment, the name mapping module  includes a name mapping table like below:",{"@attributes":{"id":"p-0083","num":"0082"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"A name mapping table"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Username","Identity repository","Mapped ID","Aggregation"]},{"entry":[{},{},"address",{},"attribute"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"The Username in the name mapping table is a universal user name shared across all the virtual world servers. The identity repository address (identity storage device address) in the name mapping table is an address to locate the one or more identity storage devices . The Mapped ID (identity) in the name mapping table is a user ID (identity) used in the one or more identity storage devices  to identify a verified user (i.e., a user who is authorized to play in a virtual world) or a registered user (i.e., a user who is officially recognized as a member in a virtual world). The aggregation attribute indicates constraints of the one or more identity storage devices . In one embodiment, the one or more identity storage devices  require only characters and numbers in their Mapped ID (identity). The aggregation attribute is used to express these constraints (e.g., requiring only characters and numbers in their Mapped ID). In one embodiment, the aggregation attribute is used to automatically generate credential information of a user in a virtual world, if credential information of the user has been validated in the identity service module  and the user does not have any valid credential information for the virtual world.","The authentication module  performs an authentication related function of users. The authentication related function comprises obtaining credential information of users and checking validity of credential information from users, e.g., by finding matching credential information in the plurality of identity storage devices , obtaining users' biometric information, e.g., fingerprints of users and checking validity of the fingerprints of the users, e.g., by finding matching fingerprints in the plurality of identity storage devices , obtaining iris scans of users and checking validity of the iris scans of the users, e.g., by finding matching iris scans in the plurality of identity storage devices , obtaining facial scans of users and checking validity of the facial scans of the users, e.g., by finding matching facial scans in the plurality of identity storage devices , and obtaining voices of users and checking validity of the users, e.g., by finding matching voices in the plurality of identity storage devices .","The identity status management module  tracks status of the users (e.g., whether a certain user on a certain virtual world client device has signed in to a certain server). In one embodiment, when a user wants to login to a virtual world, the user's credential information is communicated from for a receipt by the identity service module . Then, the identity service module  invokes the authentication module  to verify the credential information provided from the user, e.g., by searching the identity storage device  to find a valid matching record. Then, the authentication module  contacts the identity status management module  to inform whether the user becomes a verified user to login the virtual world or not. If the user becomes a verified user (e.g., his\/her credential information is validated by the authentication module ), the identity status management module  updates the user's status, e.g., as on-line user. Otherwise, the identity status management module  does not update the user's status. When the user sends a log off request to the identity service module  or the virtual world that the user is currently logged in, the identity status management module  changes the user's status, e.g., from the on-line user to an off-line user. Then, the virtual world server that the user is currently logged in terminates a connection between the virtual world (or corresponding virtual world server) and a virtual world client device that the user may use.","A registry service module  registers a new user for the plurality of virtual worlds (e.g., virtual world , virtual world , virtual world , . . . , and virtual world n in ). When a user registers a virtual world, e.g., by visiting a web site of a virtual world and then clicking \u201cJoin\u201d button (not shown), the identity service module  invokes a registry module  to ask the user to provide his\/her information (e.g., address, email address, credit card number for membership purpose, name, etc.) and to create credential information, e.g., via a console, a pop-up window, a GUI, an API, etc. Then, the user provides his\/her information and creates the credential information to register a virtual world. In one embodiment, when a user registers a virtual world, the user is also registered to the identity service module , e.g., by storing the provided information (e.g., address, name, credit card number) and created credential information in the identity storage device .","In one embodiment, there are other modules  such as a plugin management module. The plugin management module manages (e.g., add, edit, remove) software extensions (e.g., computer program designed to be incorporated into another piece of software in order to enhance or extend the functionalities of the software). The examples of the software extensions are Firefox\u2122 plug-ins or Apache plug-ins.","In one embodiment, other modules , an authentication module , an identity status management module , a registry service module , a name mapping module  and an aggregation module  in the identity service module  are implemented as hardware on a reconfigurable hardware (e.g., FPGA (Field Programmable Gate Array) or CPLD (Complex Programmable Logic Device)) using a hardware description language (Verilog, VHDL, Handel-C, or System C). In another embodiment, other modules , an authentication module , an identity status management module , a registry service module , a name mapping module  and an aggregation module  in the identity service module  are implemented on a semiconductor chip (e.g., ASIC (Application-Specific Integrated Circuit)) using a semi custom design methodology (i.e., designing a chip using standard cells and a hardware description language).","In one embodiment, other modules , an authentication module , an identity status management module , a registry service module , a name mapping module  and an aggregation module  in the identity service module  are implemented as software using a programming language (e.g., C, C++, Java, .NET, etc.). In one embodiment, other modules , an authentication module , an identity status management module , a registry service module , a name mapping module  and an aggregation module  in the identity service module  are recorded in a computer recordable medium (e.g., CD (Compact Disk), DVD (Digital Versatile Disc), HDD (Hard Disk Drive)) as an instruction (e.g., a machine language or assembly language) that is executed by a processor (e.g., Intel\u00ae Pentium\u00ae, IBM\u00ae Power PC\u00ae, AMD\u00ae Operon\u00ae).","In one embodiment, other modules , an authentication module , an identity status management module , a registry service module , a name mapping module  and an aggregation module  in the identity service module  are implemented as hardware through a computing device by being executed in the computing device. The computing device comprises, but is not limited to include, processor(s), memory(s), display device(s), input\/output device(s) and network interface(s).",{"@attributes":{"id":"p-0092","num":"0091"},"figref":["FIG. 5","FIG. 1"],"b":["500","120","500","520","530","540","550","560","510","560","560","550","560","560","550","550","550","460"]},"The format translation module  translates a format of a virtual property to another format. For example, the format translation module  translates from\/to Collada (i.e., COLLAborative Design Activity; an interchange file format for 3D applications) to\/from X3D (i.e., an ISO standard XML-based file format for representing 3D computer graphics). A content synchronization module  manages protocols to transmit data (e.g., virtual properties) from a virtual world to a virtual world client device or from the virtual world to the virtual world client device. The protocols include, but are not limited to include, TCP\/IP, UDP, HTTP, Telnet, SSH, SMTP, FTP and IMAP. A content management module  is a module for deleting, editing and creating virtual properties. In one embodiment, the content management module  provides a console, an API and a GUI to assist a user to perform the deletion, modification and creation of the virtual properties.","In one embodiment, the inventory service module  includes other modules  such as a plugin management module. The plugin management module manages (e.g., add, edit, remove) software extensions (e.g., computer program designed to be incorporated into another piece of software in order to enhance or extend the functionalities of the software). The examples of the software extensions are Firefox\u2122 plug-ins or Apache plug-ins.","In one embodiment, the other modules , the content synchronization module , the management module , the format translation module  and the aggregation module  in the inventory service module  are implemented as hardware on a reconfigurable hardware (e.g., FPGA (Field Programmable Gate Array) or CPLD (Complex Programmable Logic Device)) using a hardware description language (Verilog, VHDL, Handel-C, or System C). In another embodiment, the other modules , the content synchronization module , the management module , the format translation module  and the aggregation module  in the inventory service module  are implemented on a semiconductor chip (e.g., ASIC (Application-Specific Integrated Circuit)) using a semi custom design methodology (i.e., designing a chip using standard cells and a hardware description language).","In one embodiment, the other modules , the content synchronization module , the management module , the format translation module  and the aggregation module  in the inventory service module  are implemented as software using a programming language (e.g., C, C++, Java, .NET, etc.). In one embodiment, the other modules , the content synchronization module , the management module , the format translation module  and the aggregation module  in the inventory service module  are recorded in a computer recordable medium (e.g., CD (Compact Disk), DVD (Digital Versatile Disc), HDD (Hard Disk Drive)) as an instruction (e.g., a machine language or assembly language) that is executed by a processor (e.g., Intel\u00ae Pentium\u00ae, IBM\u00ae Power PC\u00ae, AMD\u00ae Operon\u00ae).","In one embodiment, the other modules , the content synchronization module , the management module , the format translation module  and the aggregation module  in the inventory service module  are implemented as hardware through a computing device by being executed in the computing device. The computing device comprises, but is not limited to include, processor(s), memory(s), display device(s), input\/output device(s) and network interface(s).",{"@attributes":{"id":"p-0098","num":"0097"},"figref":["FIG. 6","FIG. 1","FIG. 4","FIG. 1","FIG. 5"],"b":["110","400","120","500"]},"At step  in , a user, who wants to log in to a virtual world (or a corresponding a virtual world server), starts a virtual world client device and performs initialization (e.g., activating a graphic processor unit (e.g., Nvidia\u00ae GeForce\u2122 6600GT), activating a graphic card or a video card). At step , the user accesses the virtual world (or the corresponding virtual world server) to request to log in the virtual world (or the corresponding virtual world server), e.g., by typing a web address of the virtual world on a web browser (e.g., FireFox with a 3D graphic engine (e.g., Torque Game Engine)) included in the virtual world client device.","At step , the virtual world (or the corresponding virtual world server communicates with the identity service module  to authenticate whether the request to log in the virtual world (or the corresponding virtual world server) is valid or not. In one embodiment, upon receiving the request from the user or the virtual world client device that the user is using, the virtual world (or the corresponding virtual world server) contacts the identity service module  to check whether the user or the virtual world client device is on a blacklist (i.e., a list or register of persons who, for one or more reasons, are being denied a particular privilege, service, mobility, access or recognition in a virtual world), e.g., by asking the identity service module  to search its identity storage devices whether an IP address of the user or the virtual world client device has been marked as a hacker, e.g., one who tried to steal a virtual property by an unauthorized way. If the user or the virtual world client device has been on the blacklist, the virtual world (or corresponding virtual world server) immediately closes a connection between the user (or the virtual world client device that the user uses) and the virtual world (or the corresponding virtual world server) by increasing a security level to access the virtual world (or the corresponding the virtual world server).","If the user or the virtual world client device is not on the blacklist, the virtual world (or the corresponding virtual world server) asks the identity service module  to establish a link (e.g., a physical link, a wired link, a wireless link) between the user (e.g., the virtual world client device) and the identity service module  to proceed an authentication process (i.e., a process to validate a user to log in to a virtual world, e.g., by asking a username\/password from a user and finding a matching username\/password in a database associated with the virtual world) of the user or the virtual world client device.","The authentication process may begin by asking to the user or the virtual world client device to provide credential information. At step , the user or the virtual world client device provides his\/her credential information to the identity service module , e.g., via a GUI. Then, the identity service module  invokes a name mapping module  to search one or more identity storage devices  and then to find out whether the provided credential information is valid, e.g., by finding a matching record associated with the provided credential information in one or more identity storage devices . In one embodiment, the name mapping module  maps the provided credential information to an ID (identity; e.g., a username) or a universal ID associated with the provided credential information, e.g., by using a hash function. In one embodiment, the hash function performs a deterministic mapping (i.e., always maps a same input to a same output) or a random mapping (i.e., may map a same input to a different output each time). At step , the ID or the universal ID is used to authenticate the provided credential information with the identity service module  and\/or the one or more identity storage devices  directly. In one embodiment, the one or more identity storage devices  may retrieve a corresponding record associated with the ID or the universal ID and then the authentication module  in the identity service module  performs an authentication related function (e.g., checking a membership status of the user associated with the ID or the universal ID; e.g., authenticating the provided credential information by finding a valid membership record associated with the ID or the universal ID).","In another embodiment, if the provided credential information is biometric data such as fingerprints or iris scans, the inventory service module  invokes an authentication module  to verify the biometric data, e.g., by trying to find a matching biometric record, e.g., a matching iris scan image, in one or more identity storage device . For example, if an iris scan provided as credential information matches an iris scan image of a valid user stored in the one or more identity storage devices , the provided iris scan is validated as valid credential information.","Returning to , once the authentication module  in the identity service module  generates a result of the authentication process by performing the authentication related function, at step , the identity service module  invokes the identity status management module  to update a status of the user, who becomes a valid user via the authentication process. The identity status management module  may change the status of the user from being an off-line to an on-line state, after the authentication module  authorizes the user to play in the virtual world (or the corresponding virtual world server). The generated result of the authentication process may be returned to the corresponding virtual world server or 2D web server hosting the virtual world by the authentication module  in the identity service module .","At step , the virtual world (or the corresponding virtual world server), which received the result of the authentication process from the authentication module , forwards the result of the authentication process to the user (or the virtual world client device). In one embodiment, at step , the authentication module  enable the virtual world client device to displays the result of the authentication process. If the result of the authentication process indicates a login failure (i.e., the provided credential information at step  is evaluated as an invalid credential information by the authentication module ), at step , the virtual world client device displays an error message (e.g., a message indicating a login failure) to the user.","At step , if the result of the authentication process indicates a login success (i.e., the provided credential information is evaluated as a valid credential information by the authentication module ), the virtual world client device displays a login success message to the user. The virtual world (or the corresponding virtual world server) provides a token (e.g., HTTP cookie (i.e., parcels of text sent by a virtual world server to a virtual world client device and then sent back unchanged by the virtual world client device each time when the virtual world client device accesses that virtual world server)) to the virtual world client device that the user is using.","At step , the virtual world (or the virtual world server) requests data transmission (e.g., virtual properties of the user) from the inventory service module  to the virtual world (or the virtual world server). In one embodiment, the data transmission is performed by one or more of: an email, FTP, an instant messaging, etc. Upon receiving the request of the data transmission, the inventory service module  contacts the identity service module  to verify whether the authentication resulted in a login success. Thus, as shown at step , the inventory service module  contacts an identity status management module  to check whether the user (or the virtual world client device) is a valid on-line user. If the identity status management module  reports that the status of the user is off-line or invalid (e.g., a membership is expired while logged in), the inventory service module  does not transmit the data (e.g., a virtual property) to the virtual world or the corresponding virtual world server. The inventory service module  may send an error message (e.g., a message indicating the user becomes off-line) to the virtual world or the corresponding virtual world server.","At step , if the status of the user is verified, e.g., by receiving a message from the identity status management  that indicates the user or the virtual world client device is a valid on-line user, the inventory service module  transmits data (e.g., virtual properties of the user) to the virtual world (or the corresponding virtual world server). In one embodiment, before transmitting the data to the virtual world (or the corresponding virtual world server), the inventory service module  may perform format translation of the data to convert the data to a compatible data format in the virtual world (or the corresponding virtual world server). The format translation may be performed by the format translation module .","At step , the virtual world server provides the transmitted data (e.g., an avatar or other virtual properties of the user) to the virtual world client device that the user is using. Then, the virtual world client device presents the transmitted data on a screen to the user.","In one embodiment, in steps -, if the user (or the virtual world client device) trusts the virtual world (or the corresponding virtual world server), the user (or the virtual world client device) transmits credential information to the virtual world (or the corresponding virtual world server. Then, virtual world (or the corresponding virtual world server) authenticates the user (or the virtual world client device), e.g., by providing the credential information to the identity service module  and obtaining a result of the credential info illation from the identity service module . Then, the virtual world (or the corresponding virtual world server) provides the result of the credential information to the user (or the virtual world client device).",{"@attributes":{"id":"p-0111","num":"0110"},"figref":"FIG. 7","b":"400"},"At step , a user accesses a first virtual world via his\/her virtual world client device. On the virtual world client device, the user may appear as an avatar in the first virtual world. The first virtual world, which may be displayed on virtual world client device, may include scenes, buildings, cars, trees, other avatars, cellular phones, planes, etc.","At step , the user (or the virtual world client device that the user is using) requests teleportation (i.e., moving a matter or information from one point to another point) of a virtual property (e.g., an avatar) from the first virtual world (or the first virtual world server) to the second virtual world (or the second virtual world server). At step , upon receiving the request for the teleportation, the second virtual world (or the second virtual world sever) propagates or forwards the request to the identity service module . At step , upon receiving the request (for the teleportation), the identity service module  establishes a link (i.e., a communication path; e.g., a wireless link, wired link, a physical link) between the identity service module  and the user (or the virtual world client device) to process an authentication of the user for accessing the second virtual world (or the second virtual world server).","At step , the authentication module  in the identity service module  is invoked to process the authentication of the user. In one embodiment, the authentication module  evaluates whether the user or the virtual world client device has a valid token (e.g., a valid HTTP cookie, an access token (i.e., a numerical object used for a security login process and for identifying a valid user)), e.g., by communicating with the user or the virtual world client device via a link (e.g., a physical link, a wireless link, a wired link or a network). In another embodiment, the authentication module  evaluates whether the user is a valid user registered to the second world or the second world server by performing an authentication related function (e.g., checking whether the IP address of the user or the virtual world client device is registered as a valid user or virtual world client device).","If the authentication module  found out that the virtual world client device did not have the valid token, at step , the authentication module  sends a message to the second virtual world or the second virtual world server to inform that the second virtual world or the second virtual world server needs to reject the request (for the teleportation from the first virtual world to the second virtual world). In another embodiment, the identity service module  where the authentication module  is included sends an error message (e.g., a message indicating the user is not a valid user who can play in the second virtual world) to the second virtual world or the second virtual world server, if the authentication module  determines that the virtual world client device did not have the valid token, e.g., by checking an expiration date of a token that the user or the virtual world client device has. Upon receiving the error message from the identity service module  or the authentication module , the second virtual world or the second virtual world server rejects the request (for the teleportation).","If the user or the virtual world client device has the valid token, the identity service module  or the authentication module  sends a successful message (e.g., a message indicating the user or the virtual world client device is a valid user who can play in the second virtual world; e.g., a message indicating the user or the virtual world client device has the valid token) to the second virtual world and\/or the first virtual world. Upon receiving the successful message, the first virtual world or the first virtual world server transmits a virtual property (e.g., avatar data (i.e., avatar geometry, avatar texture) and virtual assets or objects owned by the avatar) to the second virtual world or the second virtual world server.","In one embodiment, at step , a content management module of the first virtual world server transmits the virtual property to the second virtual world or the second virtual world server. Then, a content management module of the second virtual world server invokes a content transmission module to receive the virtual property from the first virtual world server. In one embodiment, if data format of the virtual property is not compatible with the second virtual world server, the content management module of the first virtual world server invokes the format translation module  in the inventory service module  to convert the data format of the virtual property to compatible data format of the second virtual world server. After converting the data format of the virtual property to the compatible data format of the second virtual world server, the content transmission module of the first virtual world server transmits the converted virtual property to the second virtual world server.","After receiving the virtual property, at step , the second virtual world or the second virtual world server transfers the received virtual property and relevant scene data (i.e., data for presenting a scene of a virtual world) to the user or the virtual world client device. In one embodiment, based on the valid token that the virtual world client device has, the identity service module  informs to the second virtual world (or the second virtual world server) that the virtual world client device has an up-to-date virtual properties in a cache (not shown). Then, the second virtual world or the second virtual world server does not send the received virtual property to the virtual world client device. The second virtual world or the second virtual world server only sends the relevant scene data to the user or the virtual world client device.","At step , the user may exit the first virtual world server. In one embodiment, a pop-up window (not shown) may be displayed on the virtual world client device to ask whether the user wants to sign out (i.e., log out) from the first virtual world, when the second virtual or the second virtual world server starts to transfer the received virtual property and the relevant scene data to the user or the virtual world client device. In another embodiment, the first virtual world or the first virtual world server terminates connection with the user (or the virtual world client device) if the second virtual world or the second virtual world server acknowledges that the second world or the second virtual world server received the virtual property.","Then, in one embodiment, the identity service module  invokes the identity status management module  to reflect the transmitting the virtual property from the first virtual world (or the first virtual world server) to the second virtual world (or the second virtual world server), the signing out from the first virtual world and the transferring the transmitted virtual property from the second virtual world (or the second virtual world server) to the user (or the virtual world client device). Then, the identity status management module  records a current status of the user (e.g., logged out from the first virtual world and logged in the second virtual world) in the identity storage device .","Then, the virtual world client device displays the transmitted virtual property (e.g., avatar data) and the relevant scene data on a screen. That is, an avatar representing the user in a virtual world disappears from the first virtual world and appears in the second virtual world. The second virtual world or the second virtual world server may provide an updated token to the user or the virtual world client device to reflect the successful teleportation (i.e., an avatar disappears from the first virtual world and appears in the second virtual world).","In one embodiment, at step , the second virtual world or the second virtual world server receives the virtual property from the inventory service module . Once the user is validated by the authentication module  as a valid user who can play in the second virtual world, then the inventory service module  invokes the content synchronization module  to transmit the virtual property of the user to the second virtual world or the second virtual world server.",{"@attributes":{"id":"p-0123","num":"0122"},"figref":"FIG. 8","b":["400","500","800","810"]},"At step , the virtual world or the virtual world server forwards the logout request to the identity service module  and the inventory service module . At step , the inventory service module  invokes the identity status management module  to update a status of the user or the virtual world client device, e.g., by changing his\/her status from an on-line user to an off-line user. At the same time, the inventory service module  invokes the content synchronization module  to synchronize data (e.g., receives up-to-date virtual properties from the virtual world or the virtual world server) with the virtual world or the virtual world server.","At step , after the identity status management module  has completed updating the status of the user and the content synchronization module  has completed synchronizing the data with the virtual world or the virtual world server, the identity status management module  and\/or the content synchronization module  contacts the virtual world or the virtual world server to terminate the user's current session (e.g., terminates a connection between the virtual world\/virtual world server and the user\/the virtual world client device). Then, the virtual world or the virtual world server authorizes the logout request from the user or the virtual world client device. A connection between the virtual world (or the corresponding virtual world server) and the user (or the virtual world client device) is disconnected. Then, the virtual world client device erases a screen that displayed the virtual world and\/or removes a token from the virtual world server.",{"@attributes":{"id":"p-0126","num":"0125"},"figref":"FIG. 9","b":["400","900","140","910","140","440","400","440","920","930","400","470"]},"If the user does not have registered credential information (e.g., a new user) or the user does not want to use the registered credential information, at step , the identity service module may invoke the name mapping module  to assist the user to create new credential information, e.g., by providing drop-down menus on GUI. In one embodiment, the name mapping module  automatically creates the new credential information for the user. The new credential information is also mapped to a universal user name in the name mapping table (e.g., Table 1). Then, at step , the new credential information becomes valid credential information, e.g., by recording the new credential information in the identity storage device  as valid credential information associated with the user.","One of ordinary skill in the art understand that the flow chart illustrated in  can be modified to reflect changing credential information of a user and removing credential information of a user.","Although the embodiments of the present invention have been described in detail, it should be understood that various changes and substitutions can be made therein without departing from spirit and scope of the inventions as defined by the appended claims. Variations described for the present invention can be realized in any combination desirable for each particular application. Thus particular limitations, and\/or embodiment enhancements described herein, which may have particular advantages to a particular application need not be used for all applications. Also, not all limitations need be implemented in methods, systems and\/or apparatus including one or more concepts of the present invention.","The present invention can be realized in hardware, software, or a combination of hardware and software. A typical combination of hardware and software could be a general purpose computer system with a computer program that, when being loaded and executed, controls the computer system such that it carries out the methods described herein. The present invention can also be embedded in a computer program product, which comprises all the features enabling the implementation of the methods described herein, and which\u2014when loaded in a computer system\u2014is able to carry out these methods.","Computer program means or computer program in the present context include any expression, in any language, code or notation, of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after conversion to another language, code or notation, and\/or reproduction in a different material form.","Thus the invention includes an article of manufacture which comprises a computer usable medium having computer readable program code means embodied therein for causing a function described above. The computer readable program code means in the article of manufacture comprises computer readable program code means for causing a computer to effect the steps of a method of this invention. Similarly, the present invention may be implemented as a computer program product comprising a computer usable medium having computer readable program code means embodied therein for causing a function described above. The computer readable program code means in the computer program product comprising computer readable program code means for causing a computer to effect one or more functions of this invention. Furthermore, the present invention may be implemented as a program storage device readable by machine, tangibly embodying a program of instructions executable by the machine to perform method steps for causing one or more functions of this invention.","The present invention may be implemented as a computer readable medium (e.g., a compact disc, a magnetic disk, a hard disk, an optical disk, solid state drive, digital versatile disc) embodying program computer instructions (e.g., C, C++, Java, Assembly languages, . Net, Binary code) executed by a processor (e.g., Intel\u00ae Core\u2122 2, IBM\u00ae PowerPC\u00ae) for causing a computer to perform method steps of this invention. The present invention may include a method of deploying a computer program product including a program of instructions in a computer readable medium for one or more functions of this invention, wherein, when the program of instructions is executed by a processor, the compute program product performs the one or more of functions of this invention.","In addition, the present invention may be implemented on a computer readable medium (e.g., a magnetic disk, hard disk, optical disk, compact disk, digital versatile disk) embodying computer program instructions being executed by a processor for causing a computer to perform method steps of this invention. The present invention includes a method of deploying a computer program product including a program of instructions in a computer readable medium, wherein, when the program of the instructions is executed by a processor, the computer program product performs one or more functions of this invention.","It is noted that the foregoing has outlined some of the more pertinent objects and embodiments of the present invention. This invention may be used for many applications. Thus, although the description is made for particular arrangements and methods, the intent and concept of the invention is suitable and applicable to other arrangements and applications. It will be clear to those skilled in the art that modifications to the disclosed embodiments can be effected without departing from the spirit and scope of the invention. The described embodiments ought to be construed to be merely illustrative of some of the more prominent features and applications of the invention. Other beneficial results can be realized by applying the disclosed invention in a different manner or modifying the invention in ways known to those familiar with the art"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["The accompanying drawings are included to provide a further understanding of the present invention, and are incorporated in and constitute a part of this specification. The drawings illustrate embodiments of the invention and, together with the description, serve to explain the principles of the invention. In the drawings,",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
