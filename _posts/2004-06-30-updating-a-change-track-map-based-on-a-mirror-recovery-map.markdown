---
title: Updating a change track map based on a mirror recovery map
abstract: One method of updating a change track map involves resetting a mirror recovery map for a data volume. Just before the mirror recovery map is reset, a change track map for the data volume can be updated, using the mirror recovery map. The mirror recovery map can be reset by a data element of a data processing system, while the change track map can be updated by a control element of the data processing system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07707372&OS=07707372&RS=07707372
owner: Symantec Operating Corporation
number: 07707372
owner_city: Mountain View
owner_country: US
publication_date: 20040630
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Technical Field","The present invention relates to data storage and management generally and more particularly to a method and system for update tracking.","2. Description of the Related Art","Information drives business. Companies today rely to an unprecedented extent on online, frequently accessed, constantly changing data to run their businesses. Unplanned events that inhibit the availability of this data can seriously damage business operations. Additionally, any permanent data loss, from natural disaster or any other source, will likely have serious negative consequences for the continued viability of a business. Therefore, when disaster strikes, companies must be prepared to eliminate or minimize data loss, and recover quickly with useable data.","Several techniques utilized to minimize data loss and improve the availability of data require write operations or \u201cupdates\u201d to a data volume be tracked, logged, or journaled. For example, such update tracking is commonly used in data mirroring systems to resynchronize a snapshot data volume which has been created by detaching a mirror data volume from a corresponding primary data volume. In such a scenario, data specifying each update to a primary data volume and\/or a snapshot data volume is stored following mirror data volume detachment (commonly referred to as \u201cthird-mirror breakoff\u201d or \u201cmirror-breakoff\u201d). Consequently, only those regions which have been modified following mirror breakoff need be synchronized, thus conserving valuable network and data processing system resources. Similarly, such an update tracking is also used in data mirroring system to resynchronize a mirror copy when it is brought online following a detach process due to an I\/O error. In another embodiment, the change tracking is used to resynchronize a secondary volume or \u201creplica\u201d) at a disaster recovery site when an associated replication process is restarted following a network outage or failure of the secondary disaster recovery site.","Another technique commonly used to improve the accessibility of data and reduce the probability of data loss is storage virtualization. Storage virtualization is the pooling of physical storage from multiple network storage devices into what appears from a user or user application perspective to be a single storage device. Storage virtualization is often used as part of a storage area network (SAN). A virtual storage device appears as one storage device, regardless of the types of storage devices (e.g., hard disk drives, tape drives, or the like) pooled to create the virtualized storage device. Storage virtualization may be performed in a host data processing system, a SAN fabric, or in storage devices directly. In some conventional systems (e.g., where virtualization is provided in a SAN fabric), virtualization operations are partitioned between specialized hardware (e.g., an application specific integrated circuit or \u201cASIC\u201d or a proprietary architecture processor, or the like) responsible for the servicing of input\/output requests (e.g., the performance of updates) and associated translation between virtual and physical addresses and generalized hardware in combination with software (e.g., a general purpose processor) responsible for establishing the address translation mappings and performing more complex operations.","Tracking updates to a data volume within such a sectioned storage virtualization system requires a transition between the operation of the aforementioned specialized hardware and generalized hardware\/software combination (e.g., to perform additional processing through a \u201cfault\u201d mechanism which causes an interrupt and context switch) and consequently disruption of the ordinary processing of updates. As the processing of updates may or may not require a fault or other disruption, the performance of update tracking in a system where virtualization is provided in a SAN fabric may add substantial latency to the performance of write operations.","Disclosed is a method and system for update tracking within a storage virtualization device. According to one embodiment of the present invention, a method is provided in which a first update map is maintained for a data volume and a second update map is then updated for the data volume using the first update map. In another embodiment, the first update map is maintained using a virtualization device of a storage area network fabric. Embodiments of the present invention may be used to reduce the latency with which write operations or \u201cupdates\u201d may be performed within a system providing storage virtualization within a storage area network fabric as well as reducing the number of data structures required to store update tracking data for a given data volume.","The foregoing is a summary and thus contains, by necessity, simplifications, generalizations and omissions of detail; consequently, those skilled in the art will appreciate that the summary is illustrative only and is not intended to be in any way limiting. Other aspects, inventive features, and advantages of the present invention, as defined solely by the claims, will become apparent in the non-limiting detailed description set forth below.","The use of the same reference symbols in different drawings indicates similar or identical items.","In the following detailed description, numerous specific details such as specific method orders, structures, elements, and connections have been set forth. It is to be understood however that these and other specific details need not be utilized to practice embodiments of the present invention. In other circumstances, well-known structures, elements, or connections have been omitted, or have not been described in particular detail in order to avoid unnecessarily obscuring this description.","References within the specification to \u201cone embodiment\u201d or \u201can embodiment\u201d are intended to indicate that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. The appearance of the phrase \u201cin one embodiment\u201d in various places within the specification are not necessarily all referring to the same embodiment, nor are separate or alternative embodiments mutually exclusive of other embodiments. Moreover, various features are described which may be exhibited by some embodiments and not by others. Similarly, various requirements are described which may be requirements for some embodiments but not other embodiments.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 1","FIG. 1"],"b":["100","102","104","106"]},"Persistent store  of the embodiment of  may be provided using one or more of any of a variety of storage devices including direct access storage devices, conventional hard disks, tape drives, network-attached storage devices, or storage arrays (e.g., JBOD or RAID arrays), or the like. Persistent store  includes a primary data volume , a mirror data volume , and a snapshot data volume , as well as a group of update maps (e.g., a mirror recovery map , a primary data volume change track map , and a snapshot data volume change track map ). In other embodiments of the present invention however, persistent store  need not include all those elements shown.","For example, persistent store  may alternately include primary data volume change track map  or snapshot data volume change track map  according to one embodiment. In another embodiment, persistent store  does not include mirror data volume  and mirror recovery map  is utilized as a change track map such that persistent store  need not include primary data volume change track map  or snapshot data volume change track map . Similarly, while persistent store  of the embodiment of  includes snapshot data volume , other embodiments of the present invention may alternatively include other storage objects (e.g., snappoint storage objects, linked volumes, or the like) associated with or potentially benefiting from change tracking.","According to one embodiment of the present invention, mirror recovery map  includes a dirty region log (DRL) as distinguished from a change track map. Within the present description, the terms mirror recovery map or dirty region log are used to indicate an update map, log, or journal which is used or intended to be used exclusively for the purpose of ensuring the synchronization of one or more mirror data volumes or plexes while the term change track map is used to indicate an update map used for any other purpose (e.g., resynchronization of mirror breakoff snapshots, or the like).","More specifically, a mirror recovery map or DRL is used to indicate or track an update to a primary data volume as pending until the update has been applied to all mirror data volumes associated with the primary data volume. Using this map all mirrors can be synchronized to bring the data volume to a consistent state after a failure of the data processing system. Consequently, data within a mirror recovery map or DRL may be discarded or reset as soon as an associated update has been applied to all mirror data volumes and is only used in conjunction with data volume mirroring. A mirror recovery map or DRL may be maintained but not needed or utilized for mirror recovery in all instances (e.g., where a data volume is associated with a single mirror or no mirrors).","By contrast, a change track map may be used independently of mirroring and may contain data which needs to be retained following the completion of an associated update to any data volume (primary data volume, secondary replica data volume, mirror data volume, snapshot data volume, or the like). For example, where a change track map is created to enable a mirror breakoff snapshot to be resynchronized with an associated primary data volume, updates to both the primary data volume and to the mirror breakoff snapshot data volume may be tracked using separate change track maps. Hence, there may be multiple change track maps associated with a data volume to track updates for one or more purposes, time periods, or the like. All change track maps are required to be updated on every write in addition to DRL. A data volume within the present description may include a logical or physical storage element, or any combination thereof (e.g., one or more bits, bytes, words, sectors, tracks, platters, disk partitions, slices, physical disks, disk arrays, storage subsystems, network attached storage or storage array network arrays, logical subdisks, plexes, volumes, logical or volume manager disk groups or disks or the like).","SAN fabric  of SAN  of the embodiment of  includes a data processing system according to an embodiment of the present invention, virtualization switch . In the illustrated embodiment, virtualization switch  performs storage virtualization functions including translation between virtual and physical addresses as well as providing functionality of one or more storage applications (e.g., VERITAS Storage Replicator, VERITAS Volume Replicator, and\/or VERITAS Volume Manager provided by VERITAS Software Corporation of Mountain View, Calif.). While virtualization functionality has been illustrated as being embodied within SAN fabric , in other embodiments of the present invention storage virtualization may be provided in whole or in part alternately within a host data processing system such as host data processing system  or a storage device associated with persistent store . For example, in one embodiment shared storage is provided among a number of host data processing systems. In the described embodiment, both a single shared or \u201cglobal\u201d change track map and individual per-host update maps (for each host data processing system having access to the shared storage) are provided. Asynchronous or \u201cbatched\u201d communication is utilized to coordinate the updating of the global change track map using the individual per-host maps.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 2","FIG. 2","FIG. 1","FIG. 2"],"b":["200","120","200","202","204","206","200","202","204","202","202"]},"In the embodiment of , data group  of data processing system  includes a port  used to receive and transmit data (e.g., data associated with I\/O transactions and requests to perform additional operations) and one or more data processors -, each including a mirror recovery map (MRM) update module  and a mirror recovery map cleaning module  as shown. For purposes of the present description, a \u201cmodule\u201d may include hardware, firmware, software, or any combination thereof including micro-instructions, machine code, object code, or source code instructions, code segments, routines, code libraries, state machine state or the like. In the illustrated embodiment, MRM update module  detects each update received at port  and responsively maintains a mirror recovery map for one or more associated data volumes by automatically setting a corresponding bit to indicate the location within an associated data volume of each update received.","Accordingly, a mirror recovery map may be maintained for each data volume for which an update is received using data group  without the use of control group . According to one embodiment, such mirror recovery maps are stored in memory or storage (not shown) within or associated with one or more of data processors -. Mirror recovery map cleaning module  of the described embodiment is used, according to the illustrated embodiment, to then periodically clean (e.g., by resetting) one or more bits of each mirror recovery map. Both the frequency with which the described cleaning is performed and what bits are identified or targeted for cleaning may be dynamically or statically determined using any of a variety of algorithms or techniques.","Before each cleaning operation is performed, a first signal is transmitted from data group  to control group  via interface module  to indicate the impending mirror recovery map cleaning operation and potential loss of data. In response to a receipt of the first signal, control group  is used to perform some processing on a mirror recovery map before it can be cleaned (e.g., to coalesce or copy the data\/bits to be cleaned to one or more maps or data structures) and to responsively transmit a second signal to data group  thereafter. According to one embodiment of the present invention, each of data processors -includes an ASIC and\/or a proprietary architecture processor or processor core such as an Advanced RISC Machines (ARM) processor core provided by ARM Ltd of Cambridge, England. In alternative embodiments of the present invention, data processors -may include other specialized hardware such as programmable logic devices or generalized hardware in combination with software lacking change track map capability.","In the embodiment of , control group  of data processing system  includes a memory  coupled with a control processor  including a change track map (CTM) update module  as shown. In the illustrated embodiment, change track map update module  updates a change track map of a data volume using a corresponding mirror recovery map. Initially, transmission of a first signal indicating an impending mirror recovery map cleaning operation from data group  to control group  via interface module  is detected.","Once a transmission of the first signal is detected, one or more bits of a mirror recovery map corresponding to a change track map to be updated are logically combined (e.g., using a logical OR operation) with the change track map to be updated. According to one embodiment, at least those bits to be cleaned in the impending cleaning operation are logically combined with the change track map to be updated. In other embodiments, an entire mirror recovery map or a portion thereof is logically combined with the change track map to be updated.","Thereafter a second signal indicating the change track map has been successfully updated is transmitted from control group  to data group  using interface module . In yet another embodiment of the present invention, an application programming interface (API) is used to prevent the performance of any cleaning operations such that a mirror recovery map which is being automatically maintained by one or more elements of data group  may be utilized as a change track map for a given data volume. In the described embodiment, the synchronization of a data volume for which a mirror recovery map is being used as a change track map cannot be guaranteed without the creation or use of some other mirror recovery map or mirror synchronization technique or resource.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIGS. 3A and 3B","FIG. 3A","FIG. 3B"],"b":["316","318","320","316","316","316","318","320","316","320"]},"In the illustrated process embodiment of , an initial determination is made whether any bits of mirror recovery map A are to be reset (process block ), in other words, whether a cleaning operation or \u201ccleaning cycle\u201d is pending or due. If a determination is made that no mirror recovery map bits are to be reset, the illustrated process continues as illustrated (process block ). Otherwise, change track map B is updated using mirror recovery map B (process block ), for example, by performing a logical OR operation between mirror recovery map B and change track map B. Consequently, the logical one (1) value of bit position B of mirror recovery map B is applied or copied to bit position B of change track map B. Thereafter, one or more bits (e.g., bit positions C and C) of mirror recovery map C may be reset or cleared as shown (process block )","Once a cleaning cycle has been performed on mirror recovery map C and one or more bits cleared, or following a determination that no bits of a mirror recovery map are to be cleared a given instant of time, a determination is made whether there are any updates pending to a region of data volume C (process block ). If a determination is made that no data volume updates are pending, the illustrated process embodiment cycles until either a mirror recovery map bit is to be reset or an update to a data volume region is to be performed as shown.","While a particular order of operations has been depicted in  for the sake of clarity, in alternative embodiments of the present invention the illustrated order may be varied with one or more operations being performed substantially simultaneously or in parallel. For example, in one embodiment an interrupt or \u201ccallback\u201d generated by another entity (e.g., a data group or processor) is used to signal that one or more mirror recovery map bits are to be reset or cleaned such that an explicit determination (as illustrated at process block ) is unnecessary. Following a determination that a data volume update is pending, a subsequent determination is made whether mirror recovery map D needs to be updated (process block ) to reflect the pending data volume update.","If an update has been applied to the same region of data volume D associated with the current, pending data volume update and no mirror recovery map cleaning or reset operations have been subsequently performed no mirror recovery map update should be required. If however no update has been applied or no update has been applied since the last cleaning operation affecting associated mirror recovery map bits, then a mirror recovery map update should be performed (process block ). For example, in the embodiment depicted by  a logical one (1) is applied or copied to bit position D to indicate the impending occurrence of an update to a corresponding region of data volume D. If no mirror recovery map update is required or after such an update is performed, the pending update may be applied to data volume E (process block ) as illustrated by the presence of the value \u2018A\u2019 at region E of data volume E.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 4","b":["400","400","410","420","405","410","420","402","420","410","400","450","452","454","456","458","460","410","407","400"]},"Those having ordinary skill in the art will readily recognize that the techniques and methods discussed below can be implemented in software using a variety of computer languages, including, for example, traditional computer languages such as assembly language, Pascal, and C; object oriented languages such as C++ and Java; and scripting languages such as Shell, Perl and Tcl\/Tk. Update tracking utility  can be provided to the data processing system via a variety of machine-readable media including electronic media (e.g., flash memory), magnetic storage media (e.g., hard disk , a floppy disk, etc.), optical storage media (e.g., CD-ROM ), and communications media conveying signals encoding the instructions (e.g., via a network coupled to network interface ).","Although the present invention has been described in connection with several embodiments, the invention is not intended to be limited to the specific forms set forth herein. On the contrary, it is intended to cover such alternatives, modifications, and equivalents as can be reasonably included within the scope of the invention as defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention may be better understood, and its numerous features and advantages made apparent to those skilled in the art by referencing the accompanying drawings in which:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
