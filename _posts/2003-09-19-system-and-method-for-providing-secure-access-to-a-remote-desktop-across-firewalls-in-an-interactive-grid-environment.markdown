---
title: System and method for providing secure access to a remote desktop across firewalls in an interactive grid environment
abstract: A system and method for secure access to a remote desktop across firewalls in an interactive grid environment is disclosed. Embodiments of the present invention include an interactive grid computing system comprising an interactive grid computing service provider comprising: a resource for use over the interactive grid, a first firewall for protecting the resource and a remote display server for providing a secure connection and for providing interactive graphical data associated with the resource. The system further comprises a client comprising: a second firewall protecting the client and a remote display resource for providing a secure connection and for viewing the interactive graphical data provided by the remote display server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08037178&OS=08037178&RS=08037178
owner: Hewlett-Packard Development Company, L.P.
number: 08037178
owner_city: Houston
owner_country: US
publication_date: 20030919
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND ART","DISCLOSURE OF THE INVENTION","BEST MODES FOR CARRYING OUT THE INVENTION","Grid Computing Environment for Conducting Interactive Computing Sessions","A System and Method for Providing Secure Access to a Remote Desktop Across Firewalls in an Interactive Grid Environment"],"p":["Embodiments of the present invention relate to a grid computing environment, and more particularly to secure access to a remote desktop across firewalls.","Grid computing is a method of harnessing the power of many computational resources in a network. Grid computing is a distributed computer infrastructure involving large-scale sharing applications and\/or high performance processing and network bandwidth.","Referring to , a grid computing environment comprising a plurality of heterogeneous computing nodes distributed across multiple administrative domains. A virtual organization (e.g., VO-X, VO-Y, and VO-Z) may include nodes from different domains. For example, VO-Z includes nodes from each of Administrative Domains , , and .","A node (hereinafter also referred to as a computing resource) may be a member of several virtual organizations. An end-user (e.g., USER M, USER N, or USER O) may need to access remote nodes either in the same administrative domain, or across domains. For example, User O may access VO-Y from within Domain , or User N within Domain  may access the same node from outside of Domain . Similarly, User M of Domain  may access both VO-Y and VO-Z through a single node in Domain .","Traditionally, grid computing has provided for the execution of batch jobs in the scientific and academic community. Batch execution on a grid computing environment requires authentication, authorization, resource access, resource discovery, and other services. In support of batch processing of jobs on a grid computing environment, protocols, services, application programming interfaces, and software development kits have been developed. The conventional method and system are not particularly suited for interactive grid computing sessions.","In a grid computing environment, security can be a concern. As a result, a grid computing service, providing access to desktops for use, may reside behind a firewall. In addition, a user that is accessing a grid computing resource, may reside behind another firewall. Conventional methods for providing grid computing resources cannot traverse firewalls and provide a secure connection simultaneously.","Port forwarding can be used to traverse firewalls between organizations. In this solution a third party host is needed between firewalls which is accessible from both organizations. Both organizations need to connect to this bridge host to open a tunnel.","This solution may be fine for academic settings, but in commercial environments, the client may not want to go over an intermediate bridge for connecting to the ASP. Also, bridge host needs to be especially set up in order to do port forwarding.","A grid computing infrastructure that can hide the complexities of resource management from the user and that can provide secure graphical and multimedia interactive sessions is needed.","Embodiments of the present invention provide a system and method for providing secure access to a remote desktop across firewalls in an interactive grid environment. In one embodiment of the invention, tunneling is used to traverse a firewall in a virtual network computing (VNC) environment.","Embodiments of the present invention also include an interactive grid computing system comprising an interactive grid application service provider comprising: a resource for use over the interactive grid, a first firewall for protecting the resource and a remote display server for providing a secure socket layer (SSL) connection and for providing interactive graphical data associated with the resource. The system further comprises a client comprising: a second firewall protecting the client and a remote display resource for providing a secure socket layer (SSL) connection and for viewing the interactive graphical data provided by the remote display server.","Reference will now be made in detail to embodiments of the present invention, a system and method for providing secure access to a remote desktop across firewalls in an interactive grid environment, examples of which are illustrated in the accompanying drawings. While the invention will be described in conjunction with the preferred embodiments, it will be understood that they are not intended to limit the invention to these embodiments. On the contrary, the invention is intended to cover alternatives, modifications and equivalents, which may be included within the spirit and scope of the invention as defined by the appended claims.","Furthermore, in the following detailed description of the present invention, numerous specific details are set forth in order to provide a thorough understanding of the present invention. However, it will be recognized by one of ordinary skill in the art that the present invention may be practiced without these specific details. In other instances, well known methods, procedures, components, and circuits have not been described in detail as not to unnecessarily obscure aspects of the present invention.","Embodiments of the present invention can be implemented on software running on a computer system. The computer system can be a personal computer, notebook computer, server computer, mainframe, networked computer, handheld computer, personal digital assistant, workstation, and the like. This software program is operable for providing secure access to a remote desktop across firewalls in an interactive grid environment. In one embodiment, the computer system includes a processor coupled to a bus and memory storage coupled to the bus. The memory storage can be volatile or non-volatile and can include removable storage media. The computer can also include a display, provision for data input and output, etc.","Some portions of the detailed descriptions which follow are presented in terms of procedures, steps, logic blocks, processing, and other symbolic representations of operations on data bits that can be performed on computer memory. These descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. A procedure, computer executed step, logic block, process, etc., is here, and generally, conceived to be a self-consistent sequence of steps or instructions leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated in a computer system. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like.","It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussions, it is appreciated that throughout the present invention, discussions utilizing terms such as \u201creceiving,\u201d or \u201cdisplaying,\u201d or \u201cconnecting,\u201d or \u201cproviding,\u201d or \u201cinitiating,\u201d or \u201crequesting,\u201d or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.","Accordingly, embodiments of the present invention provide secure access to a remote desktop across firewalls in an interactive grid environment. As a result, other embodiments of the present invention serve the above purpose and are able to provide secure access to a remote desktop across firewalls by tunneling through a socks proxy server. Because of secure interactive access across firewalls, the present invention is significantly less susceptible to attack than previous techniques in the prior art for providing access to remote resources based solely on unsecured connections that do not traverse firewalls. More specifically, modifying a VNC viewer to provide a secure SSL connection, the present invention is capable of tunneling through firewalls and providing secure access to a remote desktop. Moreover, other embodiments of the present invention serve the above purposes and provide for secure interactive grid sessions, resulting in an improved grid computing environment that can be interactive and can provide secure remote access, even across firewalls.","Referring now to , a data flow diagram is shown illustrating the implementation of an exemplary grid computing system , in accordance with one embodiment of the present invention. The grid computing system consists of a plurality of heterogeneous execution nodes  distributed across multiple administrative domains. That is, the plurality of heterogeneous execution nodes reside in remote locations that are coupled together through a communication network, such as, the Internet. The plurality of heterogeneous execution nodes can be configured in any type of formation, for example, a plurality of clusters or nodes. The plurality of execution nodes  is managed by a grid distributed resource management (DRM) system .","The grid computing system  is capable of supporting graphical interactive sessions. A general discussion describing graphical interactive sessions is provided in the following co-pending U.S. patent application assigned to the present assignee: Ser. No. 10\/340,436, entitled \u201cGRID COMPUTING CONTROL SYSTEM,\u201d by Talwar et al., filed on Jan. 10, 2003, the disclosure of which is hereby incorporated herein by reference.","In the data flow diagram of , an end-user submits a request for an interactive session to the grid DRM through a submission node . On receiving the request from the user the grid DRM selects a remote execution node  based on the session requirements, and reserves this node  for the requested duration of the session. In addition, the grid DRM also performs an advance reservation of fine grained resources like central processing unit (CPU) and network bandwidth for the user's session. At the requested time, the grid DRM would establish an interactive session between this remote execution node  and the end-user's submission node . The end-user then interacts directly with this remote execution node  through the established session.","Referring now to , a block diagram of an exemplary grid computing environment  is shown in more detail, in accordance with one embodiment of the present invention. The grid computing environment  comprises a submission node , a grid scheduler node , and a plurality of execution nodes , as previously described in relation to . In addition, each of the blocks in  within the grid computing environment  are remotely located, in one embodiment. Also, the configuration of the blocks allows for the inclusion of one or more blocks located in one node location. The blocks in  are communicatively coupled together through a network, such as, the Internet.","In addition, the grid computing environment  also comprises an information service . The information service  stores information about the computing resources associated with and located at each of plurality of execution nodes . In addition, an application profiles repository  stores the application profiles of the grid computing environment . The policies module  provides the rules and policies for implementing and running the grid computing environment .","In one embodiment of the present invention, the end-user can submit requests directly to the remote execution node , to launch multiple applications. A session launching multiple applications is defined as a global interactive session. This global interactive session thus constitutes the interaction of the end-user with the remote node, and involves the launching of one or more applications. Subsequently, the end-user in the session uses and interacts with the launched applications through separate per-application sessions. These interactions could be textual or graphical based. As such, the grid computing system  supports graphical interactive sessions between end-users and remote execution nodes. An example of a global interactive session is a remote display session wherein the graphical desktop of the remote execution node  is exported to the submission node .","In another embodiment of the present invention, the end-user submits requests to launch a single application. A session launching one application is defined as a per application interactive session. A per-application interaction session constitutes the association between the end-user and the executing application, where the end-user interacts directly with the application. A per-application interactive session occurs in the context of a global interactive session.","In one embodiment, a hierarchical admission control is achieved through the implementation of global and per-application interactive sessions. Admission control is implemented through a global admission control module  at the grid DRM node , and a per-application session admission control module  at the selected remote execution node . The global admission control module  and the per-application admission control module  make admission control decisions for global and per-application sessions, respectively.","The following is the sequence of steps for initiating global and per-application sessions, in accordance with one embodiment of the present invention. To start, the end-user creates a job request template for a new global interactive session, specifying the resource requirements, session requirements, and the desired list of applications to be launched during the session. This request is submitted to the grid DRM node  from the submission node .","The request is received by a grid scheduler  running on the grid DRM node . In the first pass, the grid scheduler  performs a matching of resources in the plurality of remote execution nodes  to satisfy the coarse requirements of the user, for example, matching of the hardware requirements of the user. The grid DRM  provides a distributed repository where various resources can publish their services, in one embodiment. The grid scheduler  queries this distributed repository, as well as the application profiles repository  and the information service , to discover resources that match with the user's job needs.","In the next pass, the grid scheduler  selects the best remote execution node that can admit the requested global interactive session satisfying the quality-of-service (QoS) requirements for the desired list of applications to be launched during the global session. During this step, the grid scheduler  interfaces with the global admission control system , which performs the admission for the requested global interactive session.","At this time, a reservation is made on the selected remote execution node  for the requested global interactive session. The reservation is also made for fine grained resources such as CPU, network bandwidth, etc.","At the requested time, the selected remote execution node  is allocated to the end-user, and a job dispatcher  at the grid DRM  dispatches the request for the new global interactive session to the remote execution node . In addition, service level agreements (SLA) for the session are passed to the remote execution node .","A configuration process configures the system before launching the global interactive session. This involves the creation of a dynamic account by a dynamic account manager  at the grid DRM . A global interactive session is then initiated between the allocated execution node and the end-users' submission node. The dynamic account manager  maintains pools of dynamic accounts on each resource. Unlike normal user accounts which remain permanently assigned to the same real-world user, a dynamic account is assigned to a user temporarily. After the user has been authenticated, the user may be authorized to use a normal static account if authorized, or the user may be assigned a dynamic account from a pool of dynamic accounts.","Alternately the user's membership in a virtual organization (VO) may be verified by a directory service maintained by the VO. In that case, a dynamic account from the pool maintained for that VO can be assigned to the user. This approach is more scalable since every user joining or leaving a VO does not require the addition or deletion of a file entry on all the resources made available to the VO.","The end-user can now request new per-application interactive sessions directly through the started global interactive session. The requests for per-application interactive sessions are verified for access control checks, and if successful are passed onto the session admission control system  on the associated remote execution node (e.g., execution node ). The session admission control system  performs an admission control check to determine if the requested per application session can be admitted into the global interactive session. If not, the request for new per-application session is denied. Otherwise, the per-application session is started.","In addition, for QoS purposes, resource management monitoring agents monitor the global interactive session and per-application session utilization values. The monitored data is aggregated by aggregator agents. Enforcement agents use this data to enforce the SLA and QoS requirements. For example, the enforcement agents can end the global interactive session at the time specified in the SLA. After the global interactive session is ended, the execution node is now freed up to execute a new global interactive session if scheduled by the grid scheduler .","Application service providers (ASPs) provide customers the ability to use applications without owning the software or the infrastructure needed to run the application. Embodiments of the present invention provide traditional business customers, digital content creators, scientists doing visualization of large data sets, software developers, and design engineers using electronic or mechanical computer aided design (CAD) tools a system for interactively using applications in a grid environment that is protected by a firewall. Embodiments of the present invention provide access to a graphical representation of a full desktop of a computer accessed on an interactive grid computing system. Providing access to the entire desktop of a remote computer provides interactive use of a resource on the remote computer.","Embodiments of the present invention provide a system architecture comprising a computing service provider (e.g., application service provider (ASP)) side and a customer side, as illustrated in . The computing service provider side  comprises an interactive grid computing service provider  and a firewall . The computing service provider  comprises several resources  . . . available for interactive use. Together, the resources comprise a resource pool. Firewall one  protects the computing service provider's resources  . . . from denial-of-service and other attacks.","The customer side  comprises a firewall  and a client . The client is associated with a user. The client  comprises connection software  and a remote display resource . The client  first connects to the computing service provider  using connection software  that resides on the user's local computer system (e.g., client ). In one embodiment of the present invention, the connection software may be a web browser application for browsing Internet content. In another embodiment of the invention, the connection software connects to a grid service access point (GSAP) provided externally by computing service provider  as a web service (e.g., a web page). In this embodiment, the connection software (e.g., web browser) connects to the GSAP (e.g., web page) to initiate an interactive grid computing session thereafter client  can request a resource (e.g., resource ).","From the GSAP, the request is forwarded to a grid distributed resource management system (DRM) . The DRM  matches resource requirements specified by the client  to the available resources of the computing service provider . The customer may request an immediate allocation of resources or may reserve resources for a later time. In an embodiment, at the scheduled time, the DRM system instructs software agent  associated with the requested resource (e.g., resource ) to start the remote display server  hosted by the computing service provider.","In one embodiment, the remote display server connects to a communication server hosted by the computing service provider that handles communication to and from the computing service provider after the client  is connected. At this time, the client  also may connect to the communication server using a remote display resource . The communication server, not shown for clarity, facilitates communication between the remote display server  on the computing service provider side  and the remote display resource  on the customer side  by going through the firewall one  and firewall two . The remote display resource  displays the desktop of the resource requested on the user's local computer (e.g., client ). It is appreciated that system  supports both interactive and batch jobs.","In an interactive grid computing environment, security is a concern. An computing service provider providing access to desktops for interactive use may reside behind a firewall, such as firewall one . A customer, such as client  may reside behind another firewall, such as firewall two . Moreover, the connection between the computing service provider  and the client  may go over the Internet , so all communication must happen in a secure fashion. Embodiments of the present invention allow a client  to communicate with an computing service provider  in a secure fashion while traversing over a plurality of firewalls.","Embodiments of the present invention combine the use of encryption and tunneling to provide security while traversing firewalls in an interactive grid-computing environment. Another embodiment of the present invention uses encryption and port forwarding to provide security while traversing firewalls in an interactive grid-computing environment. There are several advantages to using these implementations. For example, the user  can download the connection software to allow access to the computing service provider's resources even if behind a firewall. The customer side would not require special configuration as long as it is running a SOCKS proxy server. This is important because the user may not have access to configure the firewall. For example, if the customer resides behind a corporate firewall, it would be unlikely that the user could reconfigure the firewall. For the computing service provider, the only requirement is that it be running a modified secure proxy server at its firewall, as described in one embodiment of the present invention. In this embodiment, no special changes are required to the individual machines that are maintained by the computing service provider. This significantly reduces the efforts needed by the system administrator at the computing service provider in allowing secure access to the resources. It also decouples the problem of security in the intranet at the computing service provider's side from the problem of security across the Internet.","Embodiments of the present invention use virtual network computing (VNC) as the underlying technology that allows remote access to a desktop. The details of VNC are well known in the art and therefore will not be discussed in detail for clarity. It is appreciated that conventional VNC is not secure and does not traverse firewalls.","Embodiments of the invention assume the client is inside a firewall that is hosting a socks proxy server and the ASP's firewall is hosting a remote display proxy server (e.g., VNC server). Embodiments of the invention provide a secure communication channel through both firewalls with, in one embodiment a secure socket layer (SSL) connection. To accomplish this, embodiments of the invention provide a secure socksified version of a remote display viewer (e.g., VNC viewer) that can be installed on the client machine. The socksified version of the VNC viewer encapsulates packets so they can be interpreted by a socks proxy server. The socksified VNC viewer communicates with the VNC proxy server at the ASP's side through a secure connection (e.g., SSL connection) which is tunneled through the socks proxy server at the client's side.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 5","FIG. 4","FIG. 4","FIG. 4","FIG. 4"],"b":["500","550","502","512","512","454","502","442","508","508","458","504","502","504","448","550","504","504","506","504","506"]},"The client side hosts a socks proxy server  at its firewall. The socks proxy server  provides flexibility because the socks protocol allows any kind of traffic to go through its firewall as long as it is permitted by the configuration of the socks proxy. In one embodiment of the invention, the socks proxy server  uses dante as the socks proxy. It is appreciated that the socks proxy server may be another type of proxy server, such as an http proxy.","The client also uses a secure and socksified version of VNC viewer  to connect to the VNC proxy  at the ASP. In one embodiment of the invention, the VNC viewer  is an open source java implementation of VNC viewer. Furthermore, in one embodiment, jsocks, an open source library, is used to socksify java client source code. In other words, the implementation of the VNC viewer  is socksified, which allows it to communicate with the socks proxy server . In one embodiment, the VNC viewer  communicates with the socks proxy server  using socksv4 protocol. Embodiments of the present invention make the connection from the VNC viewer  to the VNC proxy server  by enabling SSL socket to be tunneled through the socks proxy  by socks tunnel .","The following code in Table 1 can be implemented within the VNC viewer to socksify it and make it secure, in accordance with an embodiment of the present invention. The following code in Table 1 sets up a default socks proxy with a username, a proxy host and proxy port number. This alerts the VNC viewer where the socks proxy is running. Then a connection (e.g., tunnel) is established between the VNC viewer and the proxy server using a destination host and a destination port address. Then a handle is retrieved to facilitate the creation of a secure socket. The handle is then used to create a secure connection through the tunnel.",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Proxy.setDefaultProxy (proxyhost, proxyport, username);"},{"entry":"Tunnel= new SocksSocket (destinationhost, destinationport);"},{"entry":"Fact= (SSLSocketFactory) SSLSocketFactory.getDefault( );"},{"entry":"Socket=fact.createSocket(tunnel, destinationhost, destinationport, flag);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 6","b":["600","600","601","603","605","607"]},"In one embodiment of the invention, the data is communicated through the SSL connection by tunneling the data through firewalls. As stated above, a modified VNC viewer is used to provide a secure socksified connection. This enables SSL socket to be tunneled through the socks proxy server on the client side. In an embodiment of the invention, the communication between the remote display server and the remote display client is encrypted to provide an additional layer of security.","Embodiments of the present invention, secure access to a remote desktop across firewalls in an interactive grid environment has been described. While the present invention has been described in particular embodiments, it should be appreciated that the present invention should not be construed as limited by such embodiments, but rather construed according to the following Claims.","The foregoing descriptions of specific embodiments of the present invention have been presented for purposes of illustration and description. They are not intended to be exhaustive or to limit the invention to the precise forms disclosed, and obviously many modifications and variations are possible in light of the above teaching. The embodiments were chosen and described in order to best explain the principles of the invention and it's practical application, to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the Claims appended hereto and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The above and other objects and advantages of the present invention will be more readily appreciated from the following detailed description when read in conjunction with the accompanying drawings, wherein:","Prior Art  is an illustration of a grid computing environment.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
