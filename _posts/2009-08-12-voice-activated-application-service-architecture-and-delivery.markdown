---
title: Voice activated application service architecture and delivery
abstract: A system and method for retrieving distributed content responsive to voice data are disclosed. Voice data is transmitted from a source client device to media server which applies a mixing table to route the voice data to one or more destinations described by the mixing table. The media server also analyzes the received voice data for one or more events. Responsive to detecting an event, the media server communicates with an application server, which modifies the mixing table so that subsequent data is also routed to a media generator which analyzes voice data received after detection of the event for a command. The media generator communicates with the application server to retrieve data from a user data source, such as a website, associated with a detected command. The media generator produces an audio representation of the retrieved data which is communicated to the source client device via the media server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08301452&OS=08301452&RS=08301452
owner: Ditech Networks, Inc.
number: 08301452
owner_city: San Jose
owner_country: US
publication_date: 20090812
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit, under 35 U.S.C. \u00a7119(e) of U.S. Provisional Application No. 61\/088,266, filed Aug. 12, 2008, and U.S. Provisional Application No. 61\/152,219, filed Feb. 12, 2009, which are incorporated by reference in their entirety.","1. Field of Art","The present invention generally relates to the field of accessing distributed content or applications, and more specifically, to accessing content or applications in response to voice data.","2. Description of the Related Art","Conventional voice services are synchronous and limited to a single service level. Users determine whether to use a conventional voice service well before beginning to use the voice service. For example, a user decides to access voicemail several seconds before dialing a specific number associated with a voicemail service. Because accessing existing voice services requires a specific user interaction, such as dialing a specific phone number, to be accessed, it is impractical to access these conventional voice services during a telephone call with another party. For example, conventional voicemail services do not allow a party to a phone conversation to access voicemail without first ending the phone conversation and placing a separate phone call to access the voicemail.","Additionally, existing voice services are limited to providing single types of services, requiring multiple different voice service providers to be accessed to receive different types of services. While listening to a voicemail or participating in a conversation, existing voice services cannot be accessed to perform additional actions or retrieve additional information associated with the content of the voicemail or conversation. For example, to return a call to a person who has left a voicemail currently being accessed, interaction with the voicemail is terminated and a separate call is initiated to contact the person who left the voicemail. Similarly, if additional information about a topic arising in a phone conversation is needed, such as directions to a location mentioned in the conversation, the phone conversation is terminated so that one of the parties may place a separate call to a voice service to obtain the desired additional information.","Further, conventional voice services do not access information from distributed data sources, such as online or Internet-based applications or distributed storage locations. These distributed data sources have become increasingly popular and accessible from various mobile devices, such as smart phones, netbook computers or laptop computers, but the content and functionality provided by these distributed data sources has not been integrated into voice based communication, preventing voice communication from incorporating a range of data or services into data communication. For example, existing voice services cannot access online data or online account information not previously associated with an audio presentation gateway. Similarly, users are unable to directly communicate data exchanged between two parties in a voice conversation to a distributed data source without use of a dedicated speech recognition application. Currently, separate interfaces are used for exchange of voice data and access to data maintained by a distributed data source.","A system accesses data from a remote source, such as a user data store, responsive to voice data. A client device transmits voice data including an event. For example, the client device comprises a telephone establishing a phone call to a second client device to exchange voice data. A media server routes voice data received from the client device to the one or more destinations identified by a mixing table which identifies one or more destinations for the voice data. In one embodiment, an application server receives an initiation request from the client device and generates the mixing table to identify one or more destinations to which voice data is routed. The media server also analyzes voice data for an event, such as a keyword or stress pattern. Responsive to detecting an event, an application is initialized by the application server and subsequently received voice data is also routed to a media generator which analyzes the voice data for a command. In one embodiment, the media server communicates with the application server after an event is detected, and the application server modifies the mixing table to identify the media generator as an additional destination for the voice data. The media generator analyzes voice data from the media server and identifies a command associated with the initialized application within the voice data. Responsive to detecting a command, the media generator communicates with the application server. For example, the media generator transmits a text representation of the command and an identifier associated with the client device to the application server. The application server transmits a request for data to a user data store responsive to the media generator detecting a command. The user data store includes data or services associated with one or more users and transmits the requested data to the application server. In an embodiment, the application server transmits data from the user data store to the media generator, where an audio representation of the data from the user data store is generated and transmitted to the media server for communication to the client device. Alternatively, responsive to the media generator detecting the command, the application server transmits data to the user data store for storage or for manipulating data included in the user data store.","The features and advantages described in the specification are not all inclusive and, in particular, many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings, specification, and claims. Moreover, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter.","A system and method for accessing content or applications in response to voice data are disclosed. For purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the invention. It will be apparent, however, to one skilled in the art that the invention can be practiced without these specific details. In other instances, structures and devices are shown in block diagram form in order to avoid obscuring the invention.","Reference in the specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure or characteristic described in connection with the embodiment is included in at least one embodiment of the invention. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment.","Some embodiments may be described using the expression \u201ccoupled\u201d and \u201cconnected\u201d along with their derivatives. It should be understood that these terms are not intended as synonyms for each other. For example, some embodiments may be described using the term \u201cconnected\u201d to indicate that two or more elements are in direct physical or electrical contact with each other. In another example, some embodiments may be described using the term \u201ccoupled\u201d to indicate that two or more elements are in direct physical or electrical contact. The term \u201ccoupled,\u201d however, may also mean that two or more elements are not in direct contact with each other, but yet still co-operate or interact with each other. The embodiments are not limited in this context.","As used herein, the terms \u201ccomprises,\u201d \u201ccomprising,\u201d \u201cincludes,\u201d \u201cincluding,\u201d \u201chas,\u201d \u201chaving\u201d or any other variation thereof, are intended to cover a non-exclusive inclusion. For example, a process, method, article, or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such process, method, article or apparatus. Further, unless expressly stated to the contrary, \u201cor\u201d refers to an inclusive or and not to an exclusive or. For example, a condition A or B is satisfied by any one of the following: A is true (or present) and B is false (or not present), A is false (or not present) and B is true (or present), and both A and B are true (or present).","In addition, use of the \u201ca\u201d or \u201can\u201d are employed to describe elements and components of the invention. This is done merely for convenience and to give a general sense of the invention. This description should be read to include one or at least one and the singular also includes the plural unless it is obvious that it is meant otherwise.","The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general-purpose systems may be used with programs in accordance with the teachings herein, or it may prove convenient to construct a more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will be apparent from the description below. In addition, the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.","System Architecture",{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","110","110","120","130","140","140","150","115"]},"The A, B are one or more computing devices having data processing and communication capabilities for transmitting data, such as voice data, between each other using the network . In one embodiment, client device A establishes a unidirectional data stream to transmit data to client device B via network  and client device B establishes a second unidirectional data stream to transmit data to client device A via network . Alternatively, a bidirectional communication stream is established between the client device A and the client device B to exchange data, such as voice data, using network . For example, client devices A, B comprise cellular telephones, rotary telephones, desktop computers, laptop computers or any other device which transmits or receives voice data, or other audio data using the network .","The media server  comprises a computing device, or network of computing devices, receiving voice data, or other data, from a client device A, B and routing the voice data to one or more destinations. While the application server , further described below, generates a mixing table, or mixing matrix, identifying one or more destinations for data received from a client device A, B, the media server applies the mixing table to voice data from client devices A, B to transmit the voice data to one or more destinations specified by the mixing table. In an embodiment, the mixing matrix routes data to additional devices, such as the application server  and\/or the media generator  or to components internal to the media server , such as those described below in conjunction with .","In addition to applying the mixing table, or mixing matrix, to voice data from one or more client devices A, B the media server  identifies one or more keywords in the received data, and communicates data associated with one or more identified keywords to the application server  and\/or the media generator . Data from the media server  allows the application server  to modify the mixing table to route received data to destinations associated with the detected keyword, such as the application server  or the media generator . For example, keywords are words or phrases included in voice data that are associated with an application or associated with data stored by a user data store . Detection of a keyword indicates that subsequently received data is analyzed in additional detail to identify data for retrieval or manipulation. In one embodiment, the media server  applies one or more speech recognition algorithms and\/or one or more enhancement algorithms to the received data to remove impairments and improve the accuracy of keyword detection. The media server  is described below in more detail in conjunction with .","The application server  comprises a computing device receiving data from one or more client devices A, B and generates a mixing table, or mixing matrix, identifying one or more destinations to which received data is routed by identifying one or more phone numbers or other identifiers from the received data. For example, responsive to receiving a voice call, the application server  identifies a source phone number initiating the voice call and identifies a destination phone number to generate a mixing table describing data communication from the source phone number to the destination phone number, and vice versa. The application server  transmits the generated mixing table to the media server  via the network , allowing the media server  to route voice data from a client device A, B to one or more destinations.","The application server  also exchanges data with the media server , the user data store  and the media generator  and\/or executes an application responsive to commands identified within the received data by the media generator . After the media server  identifies a keyword included in the received data, the media server  transmits an application request to the application server , enabling the application server  to identify one or more commands for which received data is analyzed. The application server  communicates the one or more commands to the media generator , which analyzes subsequently exchanged voice data to identify a command. For example, the media server  transmits identifiers associated with the client devices A, B exchanging data and the event that was detected to the application server . This application request enables the application server  to identify a client device A, B that is to receive data from the application server , determine one or more commands for identification within the exchanged data and modify the mixing table so voice data is communicated to the media generator  for analysis. After transmitting the application request, the application server  transmits the modified mixing table to the media server  so that data subsequently received by the media server  is routed to the media generator  which examines the data for one or more commands associated with the application.","Responsive to the media generator  detecting a command in the data, the application server  receives data from the media generator  via network  which identifies an application associated with the command or data associated with the command for retrieval from a user data store . Data retrieved by the application server  is subsequently routed to the media generator  where an audio representation of the data is generated and communicated to a client device A, B, specified by the application request, via the media server  and the network . For example, voice data is transmitted from a source client device A to a destination client device B via the media server , which also routes the voice data to the media generator  after detecting a keyword and transmitting an application request to the application server . The voice data is analyzed by the media generator to identify a command included in the voice data. If a command is identified from the voice data, or other data, the application server  receives data from the media generator  identifying an action associated with the identified command or data to retrieve from a user data store . In an embodiment, the application data server  also communicates data extracted by the media generator  to a user data store  for use in an application or for storage.","The application server  also establishes and terminates voice calls using a public switched telephone network (PSTN) or using a Voice-Over Internet Protocol (VoIP). The application server  receives control data from a client device A, B when a telephone call, or other data exchange, is initiated and identifies control information, such as a telephone number or other identifier associated with the client devices A, B exchanging data to establish a communication channel through which the client devices A, B transmit or receive voice data and\/or other data. In an embodiment, the application server  uses Signaling System #7 (SS7) or H.323 to exchange control information for establishing communication between client devices A, B, allowing use of PSTN or VoIP to exchange data. In an alternative embodiment, a discrete component communicating with the application server  establishes and\/or terminates voice calls. The application server  is described below in more detail in conjunction with .","A user data store  comprises one or more computing devices or storage devices coupled to the application server  by the network . In one embodiment, the user data store  includes data associated with one or more users and\/or applications associated with the one or more users. For example, the user data store  includes user-specific data, such as calendar data describing a user's schedule, an address book describing a user's contacts, a message store including a user's voice, email, or other messages. In an embodiment, the user data store  also includes one or more applications for accessing or modifying the user-specific data. In another embodiment, the user data store  also communicates with one or more distributed applications, such as Web-based applications, allowing the user data store  to access additional data associated with a user from other sources. For example, the user data store  communicates with a social networking website to retrieve status information associated with a user or status messages received from other members of the social networking website. The user data store  also allows user data to be communicated to a distributed application responsive to one or more user commands identified by the application server .","The media generator  is coupled to the media server  and the application server  via the network  and comprises a computing device which receives voice data from the media server  and identifies commands within the voice data. For example, the media generator  applies one or more speech recognition methods to voice data to determine whether the voice data includes one or more commands identified by the application server . When the media generator  identifies a command within voice data, the media generator  communicates data describing the identified command to the application server . The communicated data allows the application server  to perform an action associated with the identified command or retrieve data associated with the identified command. Hence, the media generator extracts commands from voice data and produces data for use by the application server  to perform an action associated with the extracted command.","Additionally, the media generator  receives data from the application server , such as data retrieved from a user data store  or the results of an action performed by the application server , and generates an audio representation of the received data. The audio representation is communicated from the media generator  to the media server  for communication to a client device A, B. By generating an audio representation of data from the application server , the media generator  allows retrieved data or generated results to be inserted into voice data exchanged between client devices A, B. The media generator  is further described below in conjunction with .","By monitoring data for commands, the media generator  allows the application server  to initiate an application, retrieve data or modify responsive to content included in a data stream. This increases availability of application data availability by allowing one or more voice enabled devices, such as client devices A, B, to access one or more applications or data from a user data store , such as an Internet-accessible data store, a website including user information or a website providing one or more services. Using the media server  in combination with the application server  and media generator  reduces the cost of accessing applications or data using voice data. The media server  initially detects keywords in data from a client device A, B and the media generator  performs a more detailed analysis of voice data received after keyword detection to recognize specific commands. For example, responsive to detecting the word \u201cinitiate\u201d in a voice data stream, the media server  routes subsequently received voice data through the media generator , which identifies one or more specific commands in the voice data associated with an application or associated with data. This simplifies detection by allowing the media server  to detect any relevant attribute of the data stream, such as time-domain samples, a frequency domain pattern or a series of parameters or values associated with the data transmission or encoding. When a keyword is detected, the media generator  more particularly analyzes subsequently-received data for one or more specific commands to generate data for the application server  to perform one or more actions associated with the detected command.","In one embodiment, a network  (shown generally as the lines connecting the components of ) is used to transmit data or instructions between or among the client devices A, B, the media server , the application server , B, the user data store , the signaling server  and\/or other devices (not shown). The network  may comprise a conventional wireless data communication system, for example, general packet radio service (GPRS), IEEE 802.11 (or WiFi), IEEE 802.16 (or WiMax), Bluetooth, PSTN or any other suitable wireless communication system. Alternatively, the network may comprise a conventional wired data communication system, such as Ethernet, digital subscriber line (DSL), integrated services digital network (ISDN), telephone line or any other suitable wired communication system. In an embodiment, the network comprises a combination of a wireless communication system and a wired communication system. In an embodiment, the network  uses a first communication system, such as a PSTN or radio communication network, to exchange voice data, or other audio data, between the client device A and the client device B and uses a second communication system, such as Ethernet, WiFi or WiMax, to transmit user data or other data between the client device  A and the client device B.","Although shown in  as discrete components, in various embodiments any or all of the media server , the application server  and\/or the signaling server  may be combined, allowing a single component to perform the functions of one or more of the media server , the application server  and\/or the signaling server .",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 2","FIG. 2"],"b":["120","120","210","220","230"]},"The mixer  receives data, such as voice data, from a client device A, B and a mixing table or mixing matrix from the application server  via the network  and applies the mixing table or mixing matrix to communicate the received voice data to one or more destinations. Application of the mixing table allows the mixer  to control the exchange of data between devices, allowing the application server , media generator  or other devices, to access data transmitted between client devices A, B. Hence, the mixer bridges  a source client device A with a destination client device B to exchange data with each other while allowing additional devices, such as the application server , or components of the media server , such as the media generator  or event detector , to access the exchanged data. In an embodiment, the mixing table is modified while data is exchanged, allowing routing of data to different devices without disrupting data transmission. For example, the mixer  routes data to additional destination devices specified by the mixing table responsive to a characteristic of the exchanged data. Hence, the mixer  allows different devices or components to receive the exchanged data and\/or modify the exchanged data by inserting additional data, such as user data or application data, into the exchanged data.","The media store  comprises a storage device, such as a persistent storage device, a non-persistent storage device or a combination of a persistent storage device and a non-persistent storage device, including predefined data, such as audio data. Data included in the media store  is inserted into data exchanged between client devices A, B responsive to one or more attributes of the exchanged data. For example, the mixer  retrieves a tone or other audio data from the media store  and inserts the retrieved done or other audio data into the exchanged data. For example, the media store  inserts a tone or other audio data into exchanged data indicating that the exchanged data is being monitored for events, such as keywords. In an embodiment, data from the media store  is inserted into exchanged data to replace portions of the exchanged data. For example, the mixer  inserts data from the media store  into the exchanged data to notify a user of data retrieved from a user data store . As another example, data from a third party, such as an additional client device , is inserted into exchanged data to via the media store , allowing data from the third party to be communicated to one or more of the client devices A, B exchanging data.","The event detector  receives data from the mixer  and analyzes the received data to identify one or more events included in the exchanged data and identifying when to route the exchanged data to the application server . For example, when voice data is exchanged between client devices A, B, an event comprises a keyword within the exchanged voice data. The event detector  communicates with the application server  when a keyword is identified, allowing the application server to modify the mixing table so that subsequently received data is routed to destinations, such as the media generator  or the application server , in addition to a destination client device A, B, using the network . This allows the event detector  to use any relevant attribute of the data stream as an event, such as time-domain samples, a frequency domain pattern or a series of parameters or values associated with the data transmission or encoding to identify data for more detailed analysis. In one embodiment, the event detector  identifies a small number of keywords and routes exchanged data to the application server  for detailed analysis when certain events are detected. Hence, rather than continuously analyze the exchanged data for a large number of events, the event detector  identifies a set of events, such as keywords or stress patterns, which trigger more detailed analysis of subsequently received data, conserving computing resources.","The mixer  and event detector  may be implemented in many ways, for example they may comprise one or more sets of instructions encoded on a computer-readable medium that cause a processor (not shown), to implement the above-described functionality when the stored instructions are executed. Alternatively, the mixer  and event detector  are implemented by using a hardware and\/or firmware. The software and\/or firmware can be configured to operate on a general purpose microprocessor or controller, a field programmable gate array (FPGA), an application specific integrated circuit (ASIC) or a combination thereof.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 3","FIG. 3"],"b":["130","130","310","320","330","340","350"]},"When the media server  receives data exchanged between client devices A, B, session configuration information is transmitted from the media server  to the session controller  which generates a data exchange session, or \u201csession,\u201d from the received data to manage exchange of data between the application server  and other devices included in the session, such as a source client device A and a destination client device B. For example, the session controller  extracts device identifiers from the received data, such as phone numbers, identifying a source client device A device and a destination client device B device exchanging data. The session controller  identifies client devices A, B which are exchanging data to allow insertion of data from the application server  into data being exchanged for communication to a client device A, B.","The extracted device identifiers are used by the session controller  to generate a mixing table, or mixing matrix, identifying one or more destination devices, such as a destination client device B and\/or the media generator , to which data received from a source, such as a source client device A, is routed or \u201cmixed.\u201d For example, if a source client device A is transmitting data to a destination client device B, the session controller  generates a mixing table to communicate data from the source client device A to the destination client device B. If the destination client device B transmits data back to the source client device B, the session controller  generates a second mixing table describing communication of data from the destination client device B to the source client device A. The mixing table is communicated to the media server , where the mixer  routes voice data from a client device A, B accordingly. In an embodiment, the mixing table is modified while data is exchanged, allowing data to be routed to different destinations without disrupting communication of date between the source client device A and the destination client device B.","Additionally, by identifying a session, the session controller  allows identification of the origin of data communicated to additional components of the application server , such as the application data store . In one embodiment, the session controller  identifies a source device identifier, such as a phone number or other identifier, associated with a source client device A and a destination device identifier, such as a phone number or other identifier, associated with a destination client device B and generates a session identifier including the source identifier and the destination identifier. The mixing table is generated using the identifiers associated with the source client device A and the destination client device B. The session controller  also maintains a record of active sessions from which the session controller  receives data. For example, the session controller  stores pairings of source device identifiers and destination device identifiers with exchanged data being routed to the application controller .","The session controller  is coupled to the subscriber data store , which is a storage device including data associating users with one or more device identifiers. In one embodiment, the subscriber data store  includes a database associating a user identifier with one or more device identifiers specifying a client device A, B. The subscriber data store  allows association of data received from a client device A, B to be associated with a user. For example, the subscriber data store  associates one or more phone numbers, or other device identifiers, with a user identifier, so that data received from multiple phone numbers is associated with a specific user identifier, allowing a user to access the application server  from different client devices A.","In an embodiment, the subscriber data store  includes additional data associating the user with one or more applications or data sources, allowing the application server  to access an application or a remote data source using access information associated with a user. For example, the subscriber data store  associates a user identifier with one or more phone numbers and login information for one or more websites or data stores, allowing the application server  to retrieve the login information for a website or data store from the subscriber data store . In another embodiment, the subscriber data store  associates one or more communication protocols with a user identifier, allowing a user to customize how data is received from the application server .","Also, the session controller  communicates data from the media server  to the IVR controller . When data is received from a distributed application or data source, the session controller  communicates the received data to the media generator  for communication to a client device A, B. The session controller  also communicates data to the IVR controller  when an event is detected by the event detector  to retrieve data form the IVR controller for configuration of the media generator . After initialization, the session controller  communicates keywords associated with the event and additional configuration information from the IVR controller  to the media generator  for analysis of data exchanged between the client devices A, B using natural language speech recognition.","Responsive to receiving data from the media generator  identifying a command, the session controller  communicates with the application store , which is a storage device associating one or more commands with actions or applications. The application store  includes one or more sets of instructions encoded on a computer-readable medium which cause a processor (not shown), to implement perform one or more actions when the stored instructions are executed. After a command is identified by the media generator , data describing the command is communicated to the application data store  via the session controller  to access an action or application associated with the identified command. For example, responsive to media generator  detecting the command \u201ccalendar,\u201d the session controller  receives data identifying a calendar application which is accessed from the application store  to retrieve schedule data associated with the user providing the command.","In one embodiment, the application data store  locally stores a set of user data and instructions that when executed by a processor (not shown) cause retrieval or modification of data associated with the user data. The application data store  also includes data for accessing one or more external user data stores A, N, such as Uniform Resource Indicators (URIs) identifying a user data store  and transmission of data to an external user data store , responsive to receipt of data associated with a command by the session controller . Data from the application data store  is combined with data from the subscriber data store  to access data from the external user data store . For example, the application data store  associates the command \u201cvoice update\u201d with a social networking website URI and instructions for communicating data to the identified social networking website and login information for the social networking website is retrieved from the subscriber data store . In this example, the application data store  extracts information from the data exchanged between client devices A, B and communicates the extracted information to the social networking website which presents the extracted information as a status message associated with the user.","The application data store  also includes an Application Programming Interface (API) which modifies data received from a user data store  into a format for insertion into data exchanged between client devices A, B. The API allows different user data sources A, N to communicate data to client devices A, B using the application server , media generator  and media server . The stored API simplifies interaction between the application server  and one or more user data sources  by providing a standardized framework for user data stores  to format and communicate information.","The communication module  is coupled to the network  and communicates data from the application server  to a user data store , the media generator  and\/or the media server . In one embodiment, the communication module  is a conventional wired connection, such as USB, IEEE 1394 or Ethernet, to the network  for transmission and receipt of data or instructions. In another embodiment, the communication module  is a wireless transceiver, such as for infrared communication, IEEE 802.11 a\/b\/g\/n (or WiFi) communication, IEE 802.16 (or WiMax) communication, BLUETOOTH\u00ae communication, 3G communication, or radio frequency communication. Alternatively, the communication module  comprises a combination of a transceiver and a wired connection.","The session controller  and IVR controller  described above may be implemented in many ways, for example they may comprise one or more sets of instructions encoded on a computer-readable medium that cause a processor (not shown), to implement the above-described functionality when the stored instructions are executed. Alternatively, the session controller  and IVR controller  are implemented by using hardware and\/or firmware. The software and\/or firmware can be configured to operate on a general purpose microprocessor or controller, a field programmable gate array (FPGA), an application specific integrated circuit (ASIC) or a combination thereof.","As described above, the subscriber data store  and the application data store  comprise one or more storage devices. In one embodiment, the subscriber data store  and the application data store  comprise partitions of a single storage device. Alternatively, separate storage devices are used to implement the subscriber data store  and the application data store . In various embodiments, the persistent storage device, or persistent storage devices comprise one or more non-persistent storage devices or one or more combinations of a persistent storage device and a non-persistent storage device.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 4","FIG. 4"],"b":["150","150","410","420","115"]},"After the event detector  notifies the application server  that an event has been detected, the application server  communicates configuration data to the speech recognition engine . The configuration information identifies commands, such as keywords, associated with the detected event and additional data to allow the speech recognition engine  to determine when voice data includes one or more of the identified commands. In an embodiment, the speech recognition engine  applies one or more natural language processing methods to received voice data to identify a command.","As the media server  initially identifies events within the exchanged data, the application initialization request from the media server  to the application server  specifies how the speech recognition engine  is initialized. This allows customization of the commands which the speech recognition engine  identifies from the exchanged data. Customizing the commands to be identified by the speech recognition engine  based on a detected event simplifies speech recognition engine  implementation, allowing more rapid detection of commands. In an embodiment, to further improve command identification, the speech recognition engine  applies enhancement methods, such as noise cancellation or echo cancellation, to remove impairments from the received data.","The text to speech converter  receives data from the application server  via network  and generates an audio representation of the received data. The audio representation of the received data is then communicated to the media server for routing to a client device A, B. Hence, the text to speech converter  enables data from the application server to be accessed during a voice call without requiring an application to provide a dedicated interface for voice interaction.","The speech recognition engine  and text to speech converter  described above may be implemented in many ways, for example they may comprise one or more sets of instructions encoded on a computer-readable medium that cause a processor (not shown), to implement the above-described functionality when the stored instructions are executed. Alternatively, the speech recognition engine  and text to speech converter  are implemented by using hardware and\/or firmware. The software and\/or firmware can be configured to operate on a general purpose microprocessor or controller, a field programmable gate array (FPGA), an application specific integrated circuit (ASIC) or a combination thereof.","System Operation",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 5","FIG. 5"],"b":["110","130","120","140","150","110","110","140","150","120","130"]},"Initially, the source client device A initiates  a data exchange to communicate with the destination client device B. For purposes of this example embodiment, the data exchange between client devices A, B is referred to herein as a \u201csession.\u201d For example, the client device A initiates  a telephone call to exchange voice data with the destination client device B by generating initialization information responsive to receiving an identifier associated with the destination client device B, such as a phone number. Responsive to generating the initialization information for a call to the identifier associated with the destination client device B, the source client device A establishes  a session by transmitting initialization data to the application server .","Upon receiving the initialization data, the session controller  included in the application server  generates session configuration information including an identifier associated with the source client device A and an identifier associated with the destination source client device B. The session controller  generates a record of the communication between the source client device A and the destination client device B. For example, the session controller  stores the identifier associated with the source client device A, such as a phone number, and the identifier associated with the destination client device B, such as a phone number. The session controller  also communicates with the subscriber data store  included in the application server  to identify one or more a user identifiers associated with the identifier associated with the source client device A and\/or the identifier associated with the destination client device B.","In addition to generating session configuration information, the session controller  also specifies the events to be identified by the event detector  included in the media server . The session controller  also generates a mixing table, or mixing matrix, identifying one or more destinations for data received from the source client device A, such as the destination client device B. The generated mixing table describes the flow of voice data between one or more components by identifying devices to which voice data is transmitted.","The application server  transmits  session configuration information, including the mixing matrix, to the media server  to configure the mixer  and event detector . The mixer  uses the mixing table, or mixing matrix, to route data between the source client device A and the destination client device B. As initial event detection is performed by the event detector , the initially-generated mixing matrix routes data between the source client device A, the destination client device B and the event detector  of the media server . After the session configuration information is transmitted  to the media server , the application server  requests  the session by transmitting session data to the destination client device B. For example, the application server  transmits an identifier associated with the source client device A and a data exchange request to the destination client device B.","The destination client device B accepts  the session by transmitting an acknowledgement message to the application server . Upon receiving the acknowledgement, the application server  generates a second mixing matrix specifying that data received from the destination client device B is transmitted to the source client device A. The second mixing table is transmitted to the media server  and the session acceptance is transmitted  to the source client device A via the media server  and the network . This configures data exchange between the source client device A and the destination client device B while enabling the event detector  to analyze the exchanged data for an event. Additionally, session establishment identifies the client devices A, B to the application server , allowing the session controller  to determine users associated with the source client device A and\/or the destination client device B.","Data, such as voice data, is then communicated between the source client device A and the destination client device B. The communicated data is routed through the media server , allowing examination by the event detector  for one or more events. For example, the event detector  analyzes the communicated data to identify one or more keywords included in voice data. During data communication, the source client device A transmits  an event, which is detected  by the event detector . For example, during exchange of voice data in a call, the keyword \u201cservice\u201d is included in the voice data and detected  by the event detector .","Detection of the event causes the media server  to identify  the event to the application server , which specifies an application associated with the detected event. An application request is transmitted from the media server to the application server . In an embodiment, the application request includes the detected event and a session identifier associated with the detected event. Additionally, event identification causes the application server  to modify the mixing table to route data received from the source client device A to the media generator  as well as to the destination client device B. Routing data from the source client device A to the media generator  analysis of data transmitted by the source client device A for commands.","Responsive to receiving the application initialization request, the application server  identifies an application associated with the event and transmits  session configuration data to the media generator . The transmitted session configuration data configures the media generator  to analyze subsequently received data for commands associated with the detected event and identifies commands associated with the application.","In one embodiment, the media generator  transmits  data to the source client device A via the media server  when the media generator  is configured to identify commands. For example, audio data indicating that an application is initiated or identifying the initiated application is transmitted to the source client device A. In an implementation, an initiated application receives and\/or transmits data that is private to a user associated with the source client device A, so, the media generator  transmits  predetermined data, such as background music, advertisements or similar data to the destination client device B to prevent a user of the destination client device B from overhearing this private data. In an embodiment, the media generator  transmits a message to the media server  specifying data from the media store  for transmission  to the source client device A. Hence, the media generator  and\/or the media store  allows private exchange of data between the source client device A and the application server  without disconnecting the session between the source client device A and the destination client device B. Alternatively, data is openly exchanged between the source client device A and the destination client device B after the application media generator receives session configuration data, allowing the media controller  to passively monitor exchanged data for commands.","After initiating the application, the source client device A transmits  a command associated with the application. Because of the modification to the mixing table after event detection, the transmitted command is routed through the media server  to the media generator , where the command is detected  by the speech recognition engine . Responsive to detecting  the command, the media generator  identifies  the detected command to the application server . In an embodiment, the media generator  transmits a session identifier and a description of the identified command to the application server . Receiving the command identification causes the application server  to access the application data store  to identify an action associated with the command and\/or a user data store  associated with the command. The application server  then executes the action specified by the application data store  and generates a request for data that is transmitted  to the user data store  associated with the command. For example, the media generator  detects  the keywords \u201cget schedule\u201d and identifies the detected command to the application server  where the application data store  associates the keywords \u201cget schedule\u201d with a calendar application. A request for the schedule of the user associated with the source client device A is generated and transmitted  from the application server  to a user data store . As another example, the media generator  detects  the keywords \u201cget status of A\u201d and the application server  determines from the application data store  that the keywords \u201cget status of A\u201d are associated with social networking website. The application server  generates a request for the status message of social networking website member \u201cA\u201d and transmits  the request to the appropriate user data store . In an embodiment, user data is retrieved from the subscriber data store  and included in the data request to access user-specific data in a user data store .","The generated request for data is transmitted  to the user data store , which retrieves and transmits  the requested data to the application server . After receiving the requested data and associating the requested data with a session, the application server  transmits  the data to the media generator , where an audio representation of the data is generated by the text to speech converter . The audio representation of the data is transmitted  from the media generator  to the media server  which routes the audio representation of the data to the source client device A. For example, the application data store  obtains schedule information retrieved from the user data store  and transmits  the schedule data to the media generator  which generates an audio representation of the schedule information that is transmitted  to the source client device A via the media server  and the network . As another example, a social networking website member's status information is retrieved from the user data store  and transmitted from the application server  to the media generator  where an audio representation of the status information is generated and transmitted  to the source client device A via the media server  and the network .","In one embodiment, the initiated application is stopped after data is transmitted  from the application server  to the source client device A, causing the application server  to transmit a modified mixing table to the mixer  of the media server  so that data subsequently transmitted by the source client device A is not routed to the media generator . Alternatively, the application remains initiated and data is routed to the application server  until a second command is detected by the media generator , and the mixing table is modified responsive to the second command.","For purposes of illustration,  describes an example where the application server  retrieves data from a user data store  responsive to a detected command. However, in another example, the application server  transmits data to the user data store  responsive to a detected command, allowing a user to modify data using the source client device. When the application server  transmits data to the user data store , the application store  identifies data transmitted by the source client device A and transmits the identified data to the user data store .",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 6","FIG. 6"],"b":["600","560","120","150","130"]},"The application server  initializes  a session responsive to initialization data received from a source client device A by generating a record of the communication between a source client device A and a destination client device B. In one embodiment, the session configuration information includes an identifier associated with the source client device A and an identifier associated with a destination source client device B. For example, the session controller  stores the identifier associated with the source client device A, such as a phone number, and the identifier associated with the destination client device B, such as a phone number, to generate a record identifying the session. In addition to generating session configuration information, the session controller  also specifies the events to be identified by the event detector  included in the media server . The session controller  also generates a mixing table, or mixing matrix, identifying one or more destinations for data received from the source client device A, such as the destination client device B. The generated mixing table describes the flow of voice data between one or more components by identifying devices to which voice data is transmitted.","Because initial event detection is performed by the event detector , the initially-generated mixing matrix routes data between the source client device A, the destination client device B and the event detector . After generating the mixing matrix, data is communicated from the source client device A to the media server , which analyzes the data using the event detector  and routes the data to the destination client device B. The session controller  also communicates with the subscriber data store  included in the application server  to associate one or more user identifiers with the identifier associated with the source client device A and\/or the identifier associated with the destination client device B to associate users with associated with the client devices A, B exchanging data.","During communication of data from the source client device A to the destination client device B, the event detector  detects  an event, such as a keyword, in the communicated data. Responsive to detecting  the event, the media server  communicates an application request to the application server  identifying the session in which the event was detected and a description of the detected event. The application server  reconfigures  the session so that the media generator  receives subsequently transmitted data from the source client device A for analysis. To reconfigure the session, the application server  modifies the mixing table to identify the media generator  as a destination and communicates the modified mixing table to the mixer  so data subsequently transmitted by the source client device A is routed through the media generator  for analysis. The application server  also identifies an application associated with the detected event from the application data store  and also communicates one or more commands associated with the identified command to the media generator  describing the commands to be detected.","In one embodiment, session reconfiguration also communicates data from the media generator  to the source client device A via the media server  indicating detection of an event. For example, audio data identifying the detected event or a tone indicating detection of an event is transmitted to the source client device A. In an embodiment, data from the media generator  is transmitted to the destination client device B, allowing data subsequently transmitted from the source client device A to be routed to the media generator  without being overheard by the destination client device B. Transmitting data from the media generator  to the destination client device B allows private exchange of data between the source client device A and the media generator  without disconnecting the session between the source client device A and the destination client device B. In an embodiment, the media generator  transmits a message to the media server  specifying data from the media store  for transmission  to the source client device A.","After reconfiguring the session and activating the application, data subsequently transferred by the source client device A is routed through the media server  to the media generator  where a command is detected . The media generator  transmits data describing the detected command and the session to the application server , which accesses the application data store  to identify an action and a user data store  associated with the command. The application server  then executes the identified action and retrieves  data associated with the command from the user data store .","For example, the media generator  detects  the keywords \u201cget schedule\u201d and identifies the detected command to the application server  where the application data store  associates the keywords \u201cget schedule\u201d with a calendar application. A request for the schedule of the user associated with the source client device A is retrieved  from a user data store . As another example, the media generator  detects  the keywords \u201cget status of A\u201d and the application server  determines from the application data store  that the keywords \u201cget status of A\u201d are associated with social networking website. The application server  retrieves  a status message of social networking website member \u201cA\u201d from a user data store  such as a social network. In an embodiment, user data is retrieved from the subscriber data store  and used when retrieving  data from a user data store .","The retrieved data is then transmitted  from the application server  to the source client device A by being routed through the media generator  and the media server  according to the session controller  and mixer . For example, retrieved schedule information is transmitted to the media generator  where the text to speech converter  generates an audio representation of the schedule information. The audio representation is transmitted  from the media generator  to the media server , where the mixer routes it to the source client device A. As another example, an audio representation of a social networking website member's status information is generated responsive to the media generator  receiving status information from the application server  and the audio representation is transmitted  to the source client device A using the media server .",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 7","FIG. 7","FIG. 7"],"b":["110","130","120","140","150","110","110","110","140","150","120","130","110","110","110","110"]},"Initially, the source client device A initiates  a data exchange to communicate with the destination client device B. For purposes of this example embodiment, the data exchange between client devices A, B is referred to herein as a \u201csession.\u201d For example, the client device A initiates  a telephone call to exchange voice data with the destination client device B by generating initialization information responsive to receiving an identifier associated with the destination client device B, such as a phone number. Responsive to generating the initialization information for a call to the identifier associated with the destination client device B, the source client device A establishes  a session by transmitting initialization data to the application server .","Upon receiving the initialization data, the session controller  included in the application server  generates session configuration information including an identifier associated with the source client device A and an identifier associated with the destination source client device B. The session controller  generates a record of the communication between the source client device A and the destination client device B. For example, the session controller  stores the identifier associated with the source client device A, such as a phone number, and the identifier associated with the destination client device B, such as a phone number. The session controller  also communicates with the subscriber data store  included in the application server  to identify one or more a user identifiers associated with the identifier associated with the source client device A and\/or the identifier associated with the destination client device B. For example, the session controller  generates a session identifying the source client device A, the destination client device B and associating the source client device A with one or more user identifiers included in the subscriber data store , such as one or more authentication credentials associated with one or more user data stores . The session controller  also generates a mixing table, or mixing matrix, identifying one or more destinations for data received from the source client device A, such as the destination client device B. The generated mixing table describes the flow of voice data between one or more components by identifying devices to which voice data is transmitted.","The application server  transmits  session configuration information, including the mixing matrix, to the media server  to configure the mixer , which uses the mixing table, or mixing matrix, to route data between the source client device A and the destination client device B. After the session configuration information is transmitted  to the media server , the application server  requests  the session by transmitting session data to the destination client device B via the media server . For example, the application server  transmits an identifier associated with the source client device A and a data exchange request to the destination client device B.","The destination client device B accepts  the session by transmitting an acknowledgement message to the application server . Upon receiving the acknowledgement, the application server  generates a second mixing matrix specifying that data received from the destination client device B is transmitted to the source client device A. The second mixing table is transmitted to the media server  and the session acceptance is transmitted  to the source client device A via the media server  and the network . This configures data exchange between the source client device A and the destination client device B. Additionally, session establishment identifies the client devices A, B to the application server , allowing the session controller  to determine users associated with the source client device A and\/or the destination client device B by accessing the subscriber data store .","Data, such as voice data, is then communicated between the source client device A and the destination client device B. The communicated data is routed through the media server  where the mixer  identifies one or more destinations for the exchanged data. As data is exchanged between the source client device A and the destination client device B, data from a user data store  may be inserted into the exchanged data and communicated to at least one of the client devices A, B. For example, a user stores scheduling data in a user data store  which reminds the user of scheduled functions by communicating one or more reminder messages to the client device A, B associated with the user. Alternatively, a user data store  receives electronic information from a third party, such as a website, and communicates the received data to a user associated with a client device A, B, allowing the third party to contribute to the exchanged data in real time.","To insert data into the session, the user data store  receives  an event. In one embodiment, the event comprises an interaction with a website or other online application. For example, a user submits a status message to a social networking website. As another example, the user data store  determines that a user has a function with a starting time within a predetermined interval from the current time. As yet another example, the user data store  receives data, such as an email or text message, including a command or indication that the data is to be communicated to a user of a client device A, B. Event data comprising the event and a user identifier associated with the event is transmitted  from the user data store to the application server  via the network . For example, the user data store transmits  event data, such as a status identifier, reminder or other data and a user identifier associated with the intended recipient of the data to the application server .","The application server  receives  the event data and identifies  a session associated with the event data. From the event data the session controller  determines whether a session includes the user identifier. For example, the session controller  includes an association between an identifier associated with a client device A, such as a phone number, and one or more user identifiers included in the subscriber data store , such as one or more authentication credentials associated with one or more user data stores . Responsive to identifying  a session including the user identifier, the identifier associated with a client device , such as the source client device A, is retrieved from the identified session. While the example shown in  illustrates communication of data from the user data store  to the source client device A, in another example data is communicated to the destination client device B from the user data store . Hence, the session controller  receives a user identifier from the user data store  and determines a client device A, B associated with the user identifier by comparing the user identifier to records of established sessions between client devices A, B.","After determining the client device A, B associated with the event data, the application server  transmits  data describing the event, or the event, to the client device A, B associated with the event data from the user data store . In the example shown in , the data describing the event, or the event, is transmitted  to the source client device A. The data describing the event, or the event, is transmitted  from the application server  to the media generator , where an audio representation of the data describing the event, or the event, is generated by the text to speech converter . In an embodiment, an audio representation of the data is generated by the user data store , and the audio representation of the data is transmitted  to the application server and transmitted  from the application server to the media server  for communication to the source client device A. Alternatively, the source client device A locally generates the audio representation of the data.","The audio representation of the data is transmitted  from the media generator  to the media server  which routes the audio representation of the data to the source client device A. This allows the media server  to route the data to the source client device A and not the destination client device B, enabling data from the user data store  to be privately communicated to the source client device B. In another embodiment, the media server  communicates data from the user data store  to both the source client device A and the destination client device B, allowing dissemination of data to both client devices A, B in a session.","For example, the application server  receives  a reminder message that the user associated with the source client device A has a function scheduled to begin fifteen minutes from the current time. The application server  identifies the source client device A from the session controller  session records and the reminder message is transmitted  to the media generator . An audio representation of the reminder message is generated by the media generator  and transmitted  to the media server  where the audio representation of the reminder message is routed to the source client device A by the mixer . As the media server  communicates the audio representation of the reminder message to the source client device A, the destination client device B does not also receive the audio representation of the reminder message, allowing private communication of the reminder message to the user of the source client device A.","As another example, updated status information of a social networking website member is to be communicated to the user of the source client device A. The updated status information is transmitted  to the application server along with a user identifier associated with the user of the source client device A. The application server  identifies the source client device A from the session controller  session records and the updated status information is transmitted  to the media generator  where an audio representation of the updated status information is generated. The audio representation of the updated status information is transmitted  to the media server  where it is routed to the source client device A by the mixer . As the media server  communicates the audio representation of the updated status information to the source client device A, the destination client device B does not also receive the audio representation of the updated status information, allowing communication of the updated status information to one of the client devices A, B in a session.","The foregoing description of the embodiments of the present invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the present invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the present invention be limited not by this detailed description, but rather by the claims of this application. As will be understood by those familiar with the art, the present invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise, the particular naming and division of the modules, routines, features, attributes, methodologies and other aspects are not mandatory or significant, and the mechanisms that implement the present invention or its features may have different names, divisions and\/or formats. Furthermore, as will be apparent to one of ordinary skill in the relevant art, the modules, routines, features, attributes, methodologies and other aspects of the present invention can be implemented as software, hardware, firmware or any combination of the three. Of course, wherever a component, an example of which is a module, of the present invention is implemented as software, the component can be implemented as a standalone program, as part of a larger program, as a plurality of separate programs, as a statically or dynamically linked library, as a kernel loadable module, as a device driver, and\/or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming. Additionally, the present invention is in no way limited to implementation in any specific programming language, or for any specific operating system or environment. Accordingly, the disclosure of the present invention is intended to be illustrative, but not limiting, of the scope of the present invention, which is set forth in the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":["The disclosed embodiments have other advantages and features which will be more readily apparent from the following detailed description and the appended claims, when taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
