---
title: HTTP-based authentication
abstract: A system and method for authenticating an HTTP message. A relying party may respond to a request from a requester by sending an HTTP message with authentication specifications to the requester. The requester responds with a new request that adheres to a scheme specified by the relying party. A framework allows for a security token to be located in an HTTP header or a message body, with various options such as fragmenting the token available. An option allows for cryptographically binding the security token to the body of a message. An authentication framework provides for an implementation by an HTTP stack or by an application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08078870&OS=08078870&RS=08078870
owner: Microsoft Corporation
number: 08078870
owner_city: Redmond
owner_country: US
publication_date: 20090514
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention relates generally to network technology, and, more particularly, to the use of HTTP to authenticate requests in a networked environment.","Computer networks are subject to a variety of security breaches. One such type of breach occurs when a user or computer system falsely identifies itself, in order to access resources that it is not authorized to access, or to otherwise avoid being correctly associated with a request. To facilitate request authentication, a request for service to a party providing a resource or service, hereinafter referred to as a \u201crelying party,\u201d includes the identity of the requester in a manner such that the relying party can verify the authenticity of the identity. Request authentication is the process of verifying the identity of the sender of a request. Authentication provides some level of security that each party's identification is accurate. The identity of the requester forms the basis for access control decisions made by the relying party.","One type of request authentication includes the use of a username and password. A stronger type of authentication involves the use of a security token. Some types of security tokens are issued by a trusted identity provider. Possession of a security token serves to provide proof of identity for the possessing party. Some security tokens have embedded cryptographic keys for stronger security.","In one type of interaction, a requester acquires a security token from an identity provider. The requester then presents the security token with a service request to a party providing a resource or service. The resource provider has a trust relationship with the identity provider that serves as assurance of the authenticity of the security token.","Representational state transfer (REST) is a style of software architecture for distributed systems such as the World Wide Web. REST generally refers to an interface that transmits domain-specific data over HTTP without an additional messaging layer such as SOAP. HTTP provides an interface including methods, such as GET, POST, UPDATE, and DELETE, that conform to a \u201cRESTful\u201d architecture. One aspect of the REST architecture is the support of stateless servers, in which each message includes the information necessary to understand the message, freeing a server from needing to remember communication state between messages. This facilitates scaling of servers, such as in a server farm.","RFC 2617, available at <<http:\/\/www.ietf.org\/rfc\/rfc2617.txt>>, describes a BASIC authentication scheme in which a username and password may be passed in an HTTP header field. The RFC describes this scheme as \u201cnot considered to be a secure method of user authentication, as the user name and password are passed over the network in an unencrypted form.\u201d The RFC also describes a \u201cDigest Access Authentication\u201d scheme, in which a hash of a username, password, a nonce value, the HTTP method, and the requested URI is used. The RFC states that the digest scheme \u201c . . . suffers from many known limitations.\u201d","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","Briefly, a system, method, and components operate to provide an HTTP message authentication framework that enables an application to authenticate an HTTP request. The framework provides an application with a mechanism to implement a variety of request authentication schemes, taking advantage of HTTP stack implementations. An example embodiment includes a protocol with a set of HTTP headers and associated semantics. Methods of generating and processing HTTP messages are described, as well as variations of an interaction between a requester and a relying party.","In an example embodiment, a requester receives from a server a server message including one or more HTTP headers that have authentication specifications. In response, the requester may generate a request message that complies with the authentication specifications. In one embodiment, the request message includes a message body, a security token (ST), an HTTP header that specifies a location of the security token. The request message may include an HTTP header that includes a digest of the message. The security token may be located in one or more HTTP headers or in the message body. If the security token is located in multiple HTTP headers, it may be fragmented across the headers. If the security token is located in the message body, it may be the entire body, an HTML form field, or in an XML element. In one embodiment, the digest includes a cryptographic representation of the message body and at least one HTTP header, or portions thereof.","In one embodiment, a requester determines the location of the security token based on the size of the security token. If it is too long to fit in one HTTP header, it may be fragmented across multiple headers. If it is too long to fit in multiple HTTP headers, it may be located in the message body.","In one embodiment, a server receiving the request message may extract the security token based on the token location header specification. The security token may be in one HTTP header, fragmented across multiple HTTP headers, or in the message body.","In one embodiment, the server sends the requester a signature specification, and the requester includes a digital signature that complies with the signature specification in a security header.","In one embodiment, the server responds to the requester with a message that includes a context token. In a subsequent request, the requester may include the context token in an HTTP header instead of including the security token.","To the accomplishment of the foregoing and related ends, certain illustrative aspects of the system are described herein in connection with the following description and the annexed drawings. These aspects are indicative, however, of but a few of the various ways in which the principles of the invention may be employed and the present invention is intended to include all such aspects and their equivalents. Other advantages and novel features of the invention may become apparent from the following detailed description of the invention when considered in conjunction with the drawings.","Example embodiments of the present invention now will be described more fully hereinafter with reference to the accompanying drawings, which form a part hereof, and which show, by way of illustration, specific example embodiments by which the invention may be practiced. This invention may, however, be embodied in many different forms and should not be construed as limited to the embodiments set forth herein; rather, these embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope of the invention to those skilled in the art. Among other things, the present invention may be embodied as methods or devices. Accordingly, the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment or an embodiment combining software and hardware aspects. The following detailed description is, therefore, not to be taken in a limiting sense.","Throughout the specification and claims, the following terms take the meanings explicitly associated herein, unless the context clearly dictates otherwise. The phrase \u201cin one embodiment\u201d as used herein does not necessarily refer to a previous embodiment, though it may. Furthermore, the phrase \u201cin another embodiment\u201d as used herein does not necessarily refer to a different embodiment, although it may. Thus, various embodiments of the invention may be readily combined, without departing from the scope or spirit of the invention. Similarly, the phrase \u201cin one implementation\u201d as used herein does not necessarily refer to the same implementation, though it may, and techniques of various implementations may be combined.","In addition, as used herein, the term \u201cor\u201d is an inclusive \u201cor\u201d operator, and is equivalent to the term \u201cand\/or,\u201d unless the context clearly dictates otherwise. The term \u201cbased on\u201d is not exclusive and allows for being based on additional factors not described, unless the context clearly dictates otherwise. In addition, throughout the specification, the meaning of \u201ca,\u201d \u201can,\u201d and \u201cthe\u201d include plural references. The meaning of \u201cin\u201d includes \u201cin\u201d and \u201con.\u201d","As used herein, the term \u201cauthenticate\u201d refers to confirming that facts or claims are true, to an acceptable degree of certainty. Authenticating a user or a user's identity applies to confirming that the stated identity of the user is sufficient and accurate. Authenticating a request from a user may include confirming that the identity information included with the request is accurate, that the request originated with or is authorized by the identified user, that the request has not been improperly modified, or that other information in the request is accurate. Authentication has an associated degree of certainty, allowing for a situation in which information has been authenticated yet may be inaccurate.","The components described herein may execute from various computer-readable media having various data structures thereon. The components may communicate via local or remote processes such as in accordance with a signal having one or more data packets (e.g. data from one component interacting with another component in a local system, distributed system, or across a network such as the Internet with other systems via the signal). Software components may be stored, for example, on computer-readable storage media including, but not limited to, an application specific integrated circuit (ASIC), compact disk (CD), digital versatile disk (DVD), random access memory (RAM), read only memory (ROM), floppy disk, hard disk, electrically erasable programmable read only memory (EEPROM), flash memory, or a memory stick in accordance with embodiments of the present invention.","The term computer-readable media as used herein includes both storage media and communications media. Communications media typically embody computer-readable instructions, data structures, program modules, or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information-delivery media. By way of example, and not limitation, communications media include wired media, such as wired networks and direct-wired connections, and wireless media such as acoustic, radio, infrared, and other wireless media.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 1","FIG. 1","FIG. 1","FIG. 1"],"b":["100","100","102","102","102","104"]},"Example environment  includes relying party . Relying party  may be a computing device, server, or a server farm that includes multiple servers.  illustrates an example implementation of relying party .","In the illustrated example embodiment, relying party includes HTTP stack . HTTP stack  performs actions as described for HTTP stack , though the implementation of HTTP stack  and HTTP stack  may differ, and the functions provided by each may differ.","In one embodiment, requester  sends one or more requests to relying party . A request may include some type of identifying information. The request may be a request for a resource or service. As used herein, a request for a service is considered to be a request for a resource. Relying party  may process the request and determine whether the request includes information to sufficiently authenticate the request or a user of requester . The information may be in a specific format, and is referred to as security credentials. If the security credentials are not included or are insufficient, relying party  may reject the request and instruct requester  to provide sufficient security credentials. This process is discussed in more detail herein.","Example environment  includes identity provider . Identity provider may be a network entity that issues security credentials to requester . The security credentials may represent claims about requester  that can be trusted by relying party . Thus, identity provider  is considered to be a trusted party by relying party . In one embodiment, the security credentials include a security token (ST), and identity provider  includes a security token service (STS) that provides security tokens.","One type of security token includes data that represents a collection of one or more claims about an entity, such as user of requester . The claims may be considered as assertions that information associated with the claimer is accurate. This may include, for example, a name, identifier, key, group membership, a privilege, a capability, or the like. This type of security token is referred to herein as a \u201cdirect security token.\u201d","A second type of security token includes a reference to a direct security token, the reference identifying or enabling access to the direct security token. This type of reference to a direct security token is referred to herein as an indirect security token. A uniform resource identifier (URI) is an example of an indirect security token, if it references a direct security token. As used herein, the term \u201csecurity token\u201d may refer to a direct security token or an indirect security token, unless the context clearly indicates one specific type.","Requester  may communicate with relying party  or identity provider  through a network . Network  may include a local area network, a wide area network, or a combination thereof. In one embodiment, network  includes the Internet, which is a network of networks. Network  may include wired communication mechanisms, wireless communication mechanisms, or a combination thereof. Communications between requester , relying party , or identity provider , with each other or other computing devices may employ one or more of various wired or wireless communication protocols, such as IP, TCP\/IP, UDP, HTTP, SSL, TLS, FTP, SMTP, WAP, Bluetooth, or WLAN.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 1","b":["106","110","102","106","110"]},"In one embodiment, each of requester , relying party , and identity provider  is implemented by one or more computing devices. A computing device may be a special purpose or general purpose computing device. In brief, one embodiment of a computing device that may be employed includes one or more processing units, a memory, a display, keyboard and pointing device, and a communications interface. The one or more processing units may include one or more multiple core processors. Example computing devices include mainframes, servers, blade servers, personal computers, portable computers, communication devices, consumer electronics, or the like. A computing device may include a general or special purpose operating system. The Windows family of operating systems, by Microsoft Corporation, of Redmond, Wash., are examples of operating systems that may execute on a computing device of a development system.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 2","b":["200","106","200"]},"As illustrated, computing system  includes one or more processors , which perform actions to execute instructions of various computer programs. In one configuration, processor  may include one or more central processing units, one or more processor cores, an ASIC, or other hardware processing components and related program logic. In the illustrated embodiment, computing system  includes memory , which may comprise volatile or non-volatile memory. Computing system  may also include a network communications unit, which performs actions to send or receive messages or signals to remote devices across a network.","In the illustrated embodiment, computing system  includes HTTP stack  and one or more applications , stored within memory . HTTP stack  may be HTTP stack  (). In one embodiment, HTTP stack  includes authentication module , which performs actions to authenticate a received request. In some embodiments, HTTP stack  does not include authentication module .","In one embodiment, computing system  includes application . Application  may perform various services, provide access to one or more resources, or perform other actions in response to a request. Examples of application  include a Web server, an FTP server, and a mail server. Application  may include application authentication module . Application authentication module  performs actions to authenticate a received request, though not necessarily the same actions as authentication module .",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 3","FIG. 1","FIG. 1"],"b":["300","300","100","300","102","106","110","102","106","110","120"]},"Arrows in  represent messages that are exchanged between the illustrated components. Moreover, in one embodiment, the reference numbers of the messages correspond to a temporal sequence in a direction from the top toward the bottom of the figure, though in various embodiments, the sequence differs. In one embodiment, each of the illustrated messages is an HTTP message, the content of which are described in more detail below.","The messages of  are discussed in conjunction with .  is a flow diagram illustrating an example embodiment of a process  of employing HTTP headers to authenticate a requester. Some of the actions of process  are performed by requester  (), and are represented in the left column of  under the header \u201cRequester.\u201d Other actions of process  are performed by relying party , and are represented in the right column of  under the header \u201cRelying Party.\u201d Some of the actions of process  relate to sending or receiving messages illustrated in . The following discussion references messages of .","The illustrated portions of process  may be initiated at block , where requester  sends a request message to relying party  (Request message ). In one embodiment, request message  is a request for a resource for which access is protected by an authentication process. The process may flow from block  to block , where relying party  receives the request message . Process  may flow from block  to decision block , where a determination is made of whether the request is sufficiently authenticated. In one embodiment, this includes determining whether the request includes valid and sufficient security credentials. A determination of sufficiency may be based on a configuration of relying party . In one embodiment, the determination of block  includes determining whether the request includes a security token and adheres to a configured scheme. The determination may also be based on the value of the requested resource, location or configuration of the requester, time of day, or other factors. Further details of the actions of block  are discussed herein.","If, at decision block , it is determined that the request is sufficiently authenticated, the process may flow to block , where relying party  may send a response message  to requester . In some configurations, response message  may indicate a successful response. It may include a resource, an indication that a resource is available, an indication that a service has been or will be provided, data that facilitates obtaining the resource, or another response in accordance with the request. In some configurations, response message  may indicate a rejected request for a reason other than authentication. For example, a request may be properly authenticated, but the user may not be authorized to access the resource. The resource may be unavailable for other reasons. The process may flow from block  to a program exit or return to a calling program.","If, at decision block , it is determined that there are not sufficient security credentials included with the request message, process  may flow to block , where an HTTP error response message may be generated and sent from relying party  to requester . In one embodiment, the HTTP error response message is an HTTP \u201cunauthorized\u201d message . This may be an HTTP 401 error message including a \u201cWWW-Authenticate\u201d response header. The message may include data indicating a specification of security credential that is required, or a protocol to be adhered to when sending one or more security credential. The protocol is referred to as a \u201cscheme,\u201d and in the particular case of a scheme that uses one or more HTTP headers, it is referred to as an \u201cHTTP scheme.\u201d","Process  may flow from block  to block , where requester  receives \u201cunauthorized\u201d message . Though in some environments requester  may possess the sufficient security credentials or be able to generate them, in the illustrated environment, in response to receiving the \u201cunauthorized\u201d message , the process flows to block , where requester  may attempt to acquire sufficient security credentials, in conformance with a scheme identified by relying party  in \u201cunauthorized\u201d message . In one embodiment, at block , requester  may request a security token from a trusted identity provider, such as identity provider . The request may be in the form of a request ST message  that is sent to identity provider . Request ST message  may include security credentials or other data that may be used to authenticate a user of requester .","In some environments, in response to receiving request ST message , identity provider  may determine that requester  has not provided sufficient identification data, or is otherwise not authorized to receive a security token. This action is not illustrated in . Example process  illustrates an environment in which identity provider  returns the requested security token to requester . As shown, process  flows to block , where requester  receives ST response message , which includes security token . In some embodiments, a security token includes one or more cryptographic keys. Examples of key-bearing security tokens include Kerberos v5 tickets with session keys and SAML v1.1 or v2.0 tokens with holder-of-key subject confirmation.","In one embodiment, the request ST message  and the ST response message  conform to at least some of the message protocols described herein. For example, a requester may insert into ST request message  a token location header and a token header as described herein. The message may further include a digest header and a digital signature. An example of such a message is provided herein.","In response to receiving a security token at block , the process may flow to block , where requester  may generate and send request message  to relying party . Request message  may include a request similar to the request of request message . However, request message  may include the security token  received from identity provider . In one embodiment, request message  is similar to request message  with additional HTTP headers that provides authentication data. The process may flow from block  to block , where relying party  receives request message .","At block , in response to receiving the request message , relying party  may process the message to determine whether the request includes sufficient identification credentials and conforms to the configured authentication scheme, as discussed with regard to request message . If the identification credentials are considered to be insufficient, process  may flow to block , where replying party may send another unauthorized message . If, at decision block , it is determined that the security credentials are sufficient, the process may flow to block , where a response is sent, as discussed above.  illustrates an example sequence of messages, in which a first request message is insufficient, and a second request message is sufficient. The example sequence of messages illustrates the following sequence of messages.\n\n","In one embodiment, an environment may result in a sequence of messages as follows.\n\n","In the above example sequence, requester  may, at block , send request ST message ; at block , requester  may receive security ST response message ; in response, at block , requester  may generate and send request message . Relying party  may then send response message  at block . This sequence may occur, for example, in an environment in which requester  has previously received unauthorized message  in response to a prior request, or has otherwise been configured to obtain an appropriate security token and send it with an appropriate scheme in a request message. Variations of process  may occur that include sending the illustrated messages, or a portion thereof, in yet other sequences.",{"@attributes":{"id":"p-0059","num":"0068"},"figref":["FIG. 5","FIG. 4","FIG. 2","FIG. 1","FIG. 5","FIG. 5","FIG. 4","FIG. 5"],"b":["406","406","206","106","406","212","210","404","410","408","406","406","500"]},"As illustrated in , processing may flow from block  to block , where a specification of an authentication scheme may be extracted from an HTTP header of an HTTP message. Request message  is one example of such an HTTP message. In one embodiment, the specification may be any scheme name configured in relying party .","Process  may flow from block  to decision block , where a determination is made of whether HTTP stack  is configured with a handler corresponding to the specified authentication scheme. The framework described herein allows process  to be performed in a relying party with an HTTP stack handler corresponding to the specified authentication scheme or with an HTTP stack that is not so configured.","If, at decision block , it is determined that HTTP stack  is configured with a corresponding handler, the process may flow to block , where a security token may be extracted from the received message. As described herein, the framework described herein allows a security token to be located in one or more HTTP headers or in a body of the request message. The actions of block  include determining a location of the security token, extracting the security token, and assembling fragments of the security token if there is more than one.  illustrates, in further detail, some of the actions of block .","The process may flow from block  to block , where verification of the security token may be performed. In one embodiment, the actions of block  include verifying that a security token is properly associated with the request in which it is received. In one embodiment, the message may include a digest of the request message, or portions thereof. This may include the message body, the security token, and selected portions of the HTTP headers. The digest may include a hash of the designated portions of the message. The actions of block  may include verifying that the digest accurately represents the message body and selected portions of the HTTP headers. Verifying the security token may include generating a digest and verifying that it matches a digest included with the security token. In one embodiment, the actions of block  include verifying a digital signature that covers at least the digest. The signature may use a cryptographic key embedded in the security token. This serves to strongly associate the security token with the message.","Verification of the security token may include verifying that the security token was issued by a trusted identity provider, such as identity provider  of . The actions of block  may include verifying that any claims represented by the security token are sufficient, based on a configuration of the relying party, or additional verification of security token data, as configured. This may include virtually any type of verification that may be configured.","The process may flow to decision block , where a determination is made of whether the security token and associated data are properly verified. If the verification fails, the process may flow to block  of process , and continue as described herein. If the verification succeeds, the process may flow to block , where the request message, or portions thereof, is passed to application . Application  may process the message in a variety of ways, including the actions of block , of process , where it may continue as described herein.","In one embodiment, the HTTP stack may not be configured to extract and verify the security token in accordance with the specified authentication scheme. At decision block , if it is determined that the HTTP stack is not configured with a handler for the specified authentication scheme, the process may flow to block , where the request message, or portions thereof, are passed to application . This provides application  with a mechanism for performing authentication of the received message.","The process may flow from block  to block , where a security token may be extracted from the received message. In one embodiment, application  may be configured to perform at least some of the actions of HTTP stack  with respect to authentication of the request message. Specifically, the actions of blocks  and , and decision block  may include the actions of corresponding blocks , , and , respectively, as described herein. Thus, the process may flow from block  to block  to block , and then to block  or block , as described above for the corresponding blocks. In one embodiment, a failed authentication at decision block  may result in an injection of an HTTP error as described herein.","At least some of the mechanisms described herein enable relying party  to have various configurations with respect to a received request message. In one configuration, an authentication module  of HTTP stack  may be configured to perform authentication of the received request. In one configuration, authentication module  may not be so configured, and the message is passed to application  where application authentication module  performs authentication. In one configuration, authentication module  may perform a portion of the authentication actions and authentication module  may perform another portion. Application  may thus be installed on a variety of computing systems , and may operate with the various HTTP stack configurations.",{"@attributes":{"id":"p-0069","num":"0078"},"figref":"FIG. 6","b":["600","600","418","600","602","604","606","606","608","620","620","622","418","606","610","620","620","622"]},"At decision block , it may be determined that the entire body of the HTTP message is to contain the security token. If this is determined, the process may flow to block , where the security token is inserted into the body. The process may then continue at block , where a token location header may be generated.","At decision block , it may be determined that the security token is to be located in an HTML form field of the received message. If this is determined, the process may flow to block , where the specified form field may be generated and the security token is inserted into it. The process may then continue at block , where a token location header may be generated.","At decision block , it may be determined that the security token is to be located in a specified XML element within the message body. If this is determined, the process may flow to block , where the specified XML element is generated and the security token is inserted into it. The process may then continue at block , where a token location header may be generated.",{"@attributes":{"id":"p-0073","num":"0082"},"figref":["FIG. 7","FIG. 5"],"b":["700","700","508","518","700","702","704","706","510","520"]},"At decision block , it may be determined that the entire body of the HTTP message contains the security token. If this is determined, the process may flow to block , where the security token is extracted from the body. The process may then continue at block  or .","At decision block , it may be determined that the security token is located in a specified HTML form field of the received message. If this is determined, the process may flow to block , where the security token is extracted from the specified form field. The process may then continue at block  or .","At decision block , it may be determined that the security token is located in a specified XML element within the message body. If this is determined, the process may flow to block , where the security token is extracted from the XML element. In one embodiment, extracting the XML element is performed by using a query specified in a token location header field. The process may then continue at block  or .","Processes  and  enable a number of options for location of a security token. For example, if the security token is too long to fit within a single HTTP header based on a specified HTTP header size restriction, it may be located in multiple HTTP headers. If the security token is too long to fit within multiple HTTP headers, based on HTTP constraints on a total header size, it may be located in the message body. The process further accommodates message bodies of different protocols, including HTML or XML. For example, a request may be in the form of an HTTP POST message.","Example Messages","This section describes examples of message contents that may be used to implement the messages described in environment , or other messages. These descriptions are to be understood as a set of examples. In various embodiments, these examples may be used in their entirety or in a subset thereof to form an authentication scheme, or protocol. In various embodiment, keywords or parameters may differ and still be employed to perform at least some of the mechanisms described herein. In one embodiment, none of these examples are used.","In one embodiment, the messages as described herein are used to form a protocol that is an extension to the authentication protocol of RFC 2617. The name \u201cWSSEC\u201d is used herein as a moniker for this protocol. The protocol herein described facilitates a variety of schemes for authenticating HTTP requests. It also defines a set of new HTTP extension headers and their semantics for use with the WSSEC protocol in a way such that the protocol may be implemented at the HTTP layer in the stack or in the application above the HTTP layer.","As discussed herein, various actions described herein may be performed by application authentication module  () of application  or authentication module  of HTTP stack . In one embodiment, the messages and message headers are designed to accommodate implementations by application  or HTTP stack , such that an application may implement at least some of the mechanisms in an environment in which the HTTP stack does not recognize or process at least some of the headers or parameters. For example, some Web servers are configured to strip off standard HTTP authentication headers if they do not recognize the authentication scheme specified. In such an environment, the custom headers defined herein are still available to the application to enact the authentication protocol.","In some environments, the HTTP stack may be configured to recognize and process the authentication schemes described herein, freeing the application from performing these tasks. Thus, a requester may interact with various relying parties in the same manner, regardless of whether the relying parties have HTTP stacks that recognize or implement the headers described herein. Similarly, a relying party may interact with various requesters without regard to whether each requester's HTTP stack implements the HTTP headers described herein. Additionally, an application may be deployed in an environment in which the HTTP stack does not process the authentication scheme. If the HTTP stack is updated to process the authentication scheme, the application may continue to function, allowing the HTTP stack to perform the authentication actions.","Table 1 illustrates HTTP headers that may be used in each of the described messages. In each message, additional HTTP headers not described may be included.",{"@attributes":{"id":"p-0083","num":"0092"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Authentication Headers"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Unauthorized Message 312","WWW-Authenticate"]},{"entry":[{},{},"X-WSS-Authenticate"]},{"entry":[{},"Request Message 318","Authorization"]},{"entry":[{},{},"X-WSS-Security"]},{"entry":[{},{},"X-WSS-TokenLoc"]},{"entry":[{},{},"X-WSS-Token"]},{"entry":[{},{},"X-WSS-Digest"]},{"entry":[{},"Response Message 320","X-WSS-AuthInfo"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Table 2 illustrates, for each HTTP header of Table 1, a set of parameters that may be included in the header. In the illustrated embodiment, many of the parameters are in a \u201cname=value\u201d format in which a keyword representing the parameter name is followed by a value for the parameter. In one embodiment, the parameters listed within brackets are considered optional, though in various embodiments, the protocol may differ.","In the discussion that follows, headers are used to aid in identifying header descriptions, though the use of a header does not suggest that the associated text is limited to the header, or that description of the header is limited to the associated text.",{"@attributes":{"id":"p-0086","num":"0095"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Header Parameters"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["WWW-Authenticate: WSSEC","[realm=\u201crealm-spec\u201d,]"]},{"entry":[{},"[profile=\u201ctoken-profile\u201d]"]},{"entry":["X-WSS-Authenticate:","nonce=\u201cnonce-value\u201d,"]},{"entry":[{},"[sigmethod=\u201csignature-method\u201d, ]"]},{"entry":[{},"[sigusage=\u201csignature-usage\u201d,]"]},{"entry":[{},"[version=\u201cprotocol-version\u201d]"]},{"entry":["Authorization: WSSEC","[realm=\u201crealm-spec\u201d,]"]},{"entry":[{},"[profile=\u201ctoken-profile\u201d]"]},{"entry":["X-WSS-Security:","timestamp=\u201ctimestamp-value\u201d,"]},{"entry":["\u201ctoken-profile\u201d","nonce=\u201cnonce-value\u201d,"]},{"entry":[{},"[ sigmethod=\u201csignature-method\u201d,]"]},{"entry":[{},"[sigusage=\u201csignature-usage\u201d, ]"]},{"entry":[{},"[signature=\u201csignature-value\u201d,]"]},{"entry":[{},"[version=\u201cprotocol-version\u201d]"]},{"entry":["X-WSS-TokenLoc:","[frags=\u201cfragment-count\u201d,]"]},{"entry":["\u201clocation-type\u201d","[ fragsize=\u201cfragment-size\u201d] |"]},{"entry":[{},"fieldname=\u201cform-field-name\u201d |"]},{"entry":[{},"[querytype=\u201cquery-type\u201d, ]query="]},{"entry":[{},"\u201cquery-string\u201d"]},{"entry":["X-WSS-Token<n>:","\u201ctoken-fragment-content\u201d"]},{"entry":["X-WSS-Digest:","[method=\u201cdigest-method\u201d,]"]},{"entry":[{},"digest=\u201ccontent-digest\u201d"]},{"entry":["X-WSS-AuthInfo:","[nextnonce=\u201cnonce-value\u201d,]"]},{"entry":[{},"[ctxtoken=\u201ccontext-token\u201d,"]},{"entry":[{},"ctxtokensecret=\u201ccontext-token-secret\u201d]"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"In one embodiment, use of the WWW-Authenticate header with the keyword \u201cWSSEC\u201d in unauthorized message  indicates support for at least some of the mechanisms described herein.","The WWW-Authenticate header includes one or more authentication specifications. In this HTTP header, \u201crealm-spec\u201d may specify a protection realm. The parameter \u201ctoken-profile\u201d may specify a name of a security token profile. A security token profile identifies a format and corresponding algorithm for generating a direct security token. Examples of token profiles include specification Kerberos v. 5 service ticket profile, x.509v3 certificate profile, SAML v1.1 assertion, SAML v2.0 assertion, or a security context token issued by the relying party.","X-WSS-Authenticate Header","In one embodiment, the X-WSS-Authenticate header may be used by a replying party in unauthorized message  to convey authentication specifications, and more specifically, signature specifications that the requester is instructed to use in a subsequent message. The parameters may be defined as follows:","nonce-value: a base64 encoded nonce value.","signature-method: an optional specification of a signature algorithm used to sign a request.","signature-usage: an optional specification of the semantic usage or purpose that the relying party wants the requester to convey through the signature in the request.","version: an optional specification of a protocol version.","Following is an example embodiment of at least a portion of unauthorized message  that includes the WWW-Authenticate and X-WSS-Authenticate headers:",{"@attributes":{"id":"p-0095","num":"0104"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"HTTP\/1.1 401 Unauthorized"},{"entry":"WWW-Authenticate: WSSEC realm=\u201ccontoso.com\u201d, profile=\u201csamlv1.1\u201d"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["X-WSS-Authenticate:","nonce=\u201cuV3F3YluFJax1c\u201d,"]},{"entry":[{},"sigmethod=\u201chmac-sha1\u201d,"]},{"entry":[{},"sigusage=\u201cauth-int\u201d,"]},{"entry":[{},"version=\u201c1.0\u201d"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"In one embodiment, the Authorization header is included by the requester in request message  to indicate compliance with the WSSEC protocol for authentication. The \u201crealm-spec\u201d and \u201ctoken-profile\u201d parameters may each be optional. In one embodiment, each of these fields, if included, match the corresponding fields in the WWW-Authenticate header received from the relying party in unauthorized message .","X-WSS-Security Header","In one embodiment, the X-WSS-Security header may be used in request message  to provide security information relating to a digital signature and to indicate compliance with the signature specifications received from the relying party. This header carries the protocol parameters that allow the requester to provide proof-of-possession of the security token that is used for request authentication. More specifically, it may include a digital signature using key material that is present in the authentication token that cryptographically binds the token to the request. In an example embodiment, the parameters are defined as follows.","\u201ctimestamp-value\u201d. This specifies an integer timestamp value.","\u201cnonce-value\u201d: This may be a base64 encoded nonce value.","\u201csignature-method\u201d. This optionally specifies a signature algorithm used to sign the request.","\u201csignature-usage\u201d. This is an optional specification of the semantic usage or purpose that the requester wishes to convey through the signature in the request.","\u201csignature-value\u201d. This is an optional value of a digital signature of the request.","\u201cprotocol-version\u201d. This is an optional specification of a protocol version.","The nonce and timestamp provide assurance that the request has not been submitted before, discouraging request replay attacks. The nonce may be a random number enabling a relying party to determine whether multiple messages with identical timestamps are replays or duplicates. Following is an example of portions of a request message  that includes the Authorization and X-WSS-Security headers.",{"@attributes":{"id":"p-0105","num":"0114"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"POST \/resource\/add.aspx HTTP\/1.1"]},{"entry":[{},"Host: www.contoso.com"]},{"entry":[{},"Content-Type: application\/xml"]},{"entry":[{},"Authorization: WSSEC realm=\u201ccontoso.com\u201d, profile=\u201csamlv1.1\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"X-WSS-Security:","samlv1.1"]},{"entry":[{},{},"nonce=\u201cuV3F3YluFJax1c\u201d,"]},{"entry":[{},{},"timestamp=\u201c1288542340\u201d,"]},{"entry":[{},{},"sigmethod=\u201chmac-sha1\u201d,"]},{"entry":[{},{},"sigusage=\u201cauth-int\u201d,"]},{"entry":[{},{},"signature=\u201cgU53F679YHluax2dcJH...\u201d,"]},{"entry":[{},{},"version=\u201c1.0\u201d"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"In one embodiment, the X-WSS-TokenLoc header specifies a location of a security token within an HTTP message. The security token may be a direct or an indirect security token. The parameters may be defined as follows:","\u201clocation-type\u201d. This specifies the location of the token. It may be one of the keywords \u201cheader,\u201d \u201cbody,\u201d \u201cbody-form,\u201d or \u201cbody-xml.\u201d","\u201cfragment-count\u201d and \u201cfragment-size\u201d. These parameters are used in conjunction with the \u201cheader\u201d location and specify the number of fragments and the size of each fragment, respectively.","\u201cform-field-name\u201d. This is used in conjunction with the \u201cbody-form\u201d location. It specifies the field name in an HTML form.","\u201cquery-type\u201d and \u201cquery-string\u201d. These parameters are used in conjunction with the \u201cbody-xml\u201d location, and may specify a query to extract an xml element.","X-WSS-Token Header","In one embodiment, the X-WSS-Token header is used to communicate a security token if the value of the \u201clocation-type\u201d parameter of the X-WSS-TokenLoc header is specified as \u201cheader\u201d, as discussed herein. The specification of the direct security token may be specified by the \u201ctoken-profile\u201d parameter in the Authorization header, and may comply with authentication specifications received from the relying party.","A security token may be in one fragment or divided into multiple fragments, each fragment carried by a different X-WSS-Token header field. The number of fragments may be indicated by the \u201cfragment-count\u201d field of the X-WSS-TokenLoc header.","In one embodiment, the name of each X-WSS-Token header is formed by concatenating the base \u201cX-WSS-Token\u201d with an integer-valued suffix N=1, . . . , frags, where frags is the number of fragments into which the token is divided, as specified by the fragment-count\u201d field of the X-WSS-TokenLoc header. For example, the header named \u201cX-WSS-Token1\u201d may carry the first token fragment; the header named \u201cX-WSS-Token2\u201d may carry the second token fragment, and so on. In one embodiment, the recipient of a token sent through this header collects all headers with the \u201cX-WSS-Token\u201d base name and concatenate their content in sequence to reconstitute the content of the whole token.","X-WSS-Digest Header","In one embodiment, the X-WSS-Digest header may be used to communicate a digest of the body carried in the message. Portions of at least some HTTP headers may be included in the digest. In particular, at least some of the HTTP headers related to authentication may be included. This may include the \u201cX-WSS\u201d headers listed in Table 2. Prior to computing a digest, the content that is to be processed may be translated into a canonical form. Canonicalization of the content may include transformations such as putting all characters into lower case, removing whitespace, sorting headers or parameters alphabetically, normalizing URLs, or the like. The digest provides integrity protection and facilitates verification of the message body or headers. In one embodiment, this header is used in conjunction with the X-WSS-Security header with a signature that covers the message body, as indicated by the \u201csigusage\u201d parameter. In one embodiment, the parameters of this message are used as follows:","\u201cdigest-method\u201d. This string specifies a hash algorithm used to compute the digest of the body.","\u201ccontent-digest\u201d. This is a binary-valued parameter specifies the base64-encoded digest value.","Following is an example of an X-WSS-Digest header that may be used, in which the SHA-1 digest method is specified.","X-WSS-Digest: method=\u201csha1\u201d digest=\u201c3F679YHluax2dc\u201d","X-WSS-AuthInfo Header","In one embodiment, the X-WSS-AuthInfo header may be used by a relying party in response message , after a request authentication succeeds, to communicate additional parameters to the requester relating to the authentication. These parameters may impact or change the behavior of any subsequent request authentication. In one embodiment, the parameters of this message are used as follows:","\u201cnonce-value\u201d. This specifies a new nonce value to be used for the next request authentication. If this parameter is present, it instructs the requester to use this value in the X-WSS-Security header of the next request message to that relying party.","\u201ccontext-token\u201d. This parameter contains a security context token, such as an encrypted cookie, that represents the security context established for the requester by the relying party. This parameter instructs the requester that this security context token is to be used in future requests. The cryptographic key to be used to provide proof of possession of the security context is specified in the \u201ccontext-token\u201d parameter.","\u201ccontext-token-secret\u201d. This parameter is used in conjunction with the \u201ccontext-token\u201d parameter. It specifies a secret symmetric cryptographic key that may be used by the requester to prove ownership of the security context represented by the \u201ccontext-token\u201d parameter.","A relying party may send the \u201cnonce-value\u201d parameter as a means of implementing one-time nonces. A relying party may use the \u201ccontext-token\u201d and \u201ccontext-token-secret\u201d parameter combination to establish a security context for the requester so that future authentications within that context do not have to include the security tokens (for example, if the token size is large) that were submitted with the initial request. In one embodiment, a requester and a relying party use transport-layer security such as SSL or TLS to protect the confidentiality of this exchange.","Following is an example of a response message  that includes the X-WSS-AuthInfo header with a security context token and a corresponding proof key.","X-WSS-AuthInfo: ctxtoken=\u201cfg75kVB890Uwstm . . . \u201d, ctxtokensecret=\u201cgU59cJH . . . \u201d",{"@attributes":{"id":"p-0126","num":"0135"},"figref":["FIG. 8","FIG. 6"],"b":["800","800","418","800","802","802"]},"At block , a token location header may be generated, including a specification of the location of the security token. Actions of block  are discussed in . Table 2 and associated discussion describe one embodiment of a token location header.","At block , a digital signature may be generated and inserted into a security header. Table 2 and associated discussion describe one embodiment of a security header.","At block , an authorization header may be generated. Table 2 and associated discussion describe one embodiment of an authorization header.","At block , a digest may be generated and inserted into a digest header. Table 2 and associated discussion describe one embodiment of a digest header. Process  may flow to block  and exit or return to a calling program.","In one embodiment, the actions of block  are not performed, and a digest header is not generated. In various embodiments, other headers described herein may be excluded from a request header. The sequence of the blocks and associated actions of  may be in any of a variety of orderings, and the process is not limited to the illustrated sequence.","As discussed herein, in one embodiment, a requester may employ at least some of the mechanisms and protocols described herein to request a token from an identity provider. Following is an example of such use, which may form at least a portion of request ST message . In this example, the HTTP POST method is used for the request.",{"@attributes":{"id":"p-0133","num":"0142"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"POST \/sts\/issue HTTP\/1.1"]},{"entry":[{},"Host: contoso.com"]},{"entry":[{},"Authorization: WSSEC profile=samlv1.1\u201d"]},{"entry":[{},"Content-Type: application\/xml"]},{"entry":[{},"X-WSS-Security:\u2003\u2003nonce=\u201cuV3F3YluFJax1c\u201d,"]},{"entry":[{},"timestamp=\u201c1288542340\u201d,"]},{"entry":[{},"\u2003\u2003\u2003sigmethod=\u201chmac-sha1\u201d, sigusage=\u201cauth-int\u201d,"]},{"entry":[{},"\u2003\u2003\u2003signature=\u201cgU53F679YHluax2dcJH...\u201c, version=\u201d1.0\u201d"]},{"entry":[{},"X-WSS-Digest: method=\u201csha1\u201d digest=\u201c3F679YHluax2dc\u201d"]},{"entry":[{},"X-WSS-TokenLoc: header"]},{"entry":[{},"X-WSS-Token1: w87xzV6Flm53KluDJay3d..."]},{"entry":[{},"<RequestSecurityToken>"]},{"entry":[{},"\u2003\u2003\u2003<AppliesTo> xyz <\/AppliesTo>"]},{"entry":[{},"<\/RequestSecurityToken>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In another example, instead of an XML-based payload in the POST body a form-based payload may be used by defining a mapping between XML tag names and form field names. For example, the above request using a form-based payload is shown below.",{"@attributes":{"id":"p-0135","num":"0144"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"POST \/sts\/issue HTTP\/1.1"]},{"entry":[{},"Host: contoso.com"]},{"entry":[{},"Authorization: WSSEC profile=samlv1.1\u201d"]},{"entry":[{},"Content-Type: application\/xml"]},{"entry":[{},"X-WSS-Security:\u2003\u2003nonce=\u201cuV3F3YluFJax1c\u201d,"]},{"entry":[{},"timestamp=\u201c1288542340\u201d,"]},{"entry":[{},"\u2003\u2003\u2003sigmethod=\u201chmac-sha1\u201d, sigusage=\u201cauth-int\u201d,"]},{"entry":[{},"\u2003\u2003\u2003signature=\u201cgU53F679YHluax2dcJH...\u201d, version=\u201c1.0\u201d"]},{"entry":[{},"X-WSS-Digest: method=\u201csha1\u201d digest=\u201c3F679YHluax2dc\u201d"]},{"entry":[{},"X-WSS-TokenLoc: header"]},{"entry":[{},"X-WSS-Token1: w87xzV6Flm53KluDJay3d..."]},{"entry":[{},"AppliesTo=xyz"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"It will be understood that each block of the flowchart illustrations of , and combinations of blocks in the flowchart illustrations, can be implemented by software instructions. These program instructions may be provided to a processor to produce a machine, such that the instructions, which execute on the processor, create means for implementing the actions specified in the flowchart block or blocks. The software instructions may be executed by a processor to provide steps for implementing the actions specified in the flowchart block or blocks. In addition, one or more blocks or combinations of blocks in the flowchart illustrations may also be performed concurrently with other blocks or combinations of blocks, or even in a different sequence than illustrated without departing from the scope or spirit of the invention.","The above specification, examples, and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention, the invention resides in the claims hereinafter appended"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Non-limiting and non-exhaustive embodiments of the present invention are described with reference to the following drawings. In the drawings, like reference numerals refer to like parts throughout the various figures unless otherwise specified.","To assist in understanding the present invention, reference will be made to the following Detailed Description, which is to be read in association with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
