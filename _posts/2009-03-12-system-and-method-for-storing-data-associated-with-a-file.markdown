---
title: System and method for storing data associated with a file
abstract: A system and method stores keys and values defined for a file as XML tags and values in a separate shadow file, allowing the keys and values to remain separate from the file, while being associated with the file so that the shadow file can be viewed, moved, stored or retrieved in tandem with the file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07958445&OS=07958445&RS=07958445
owner: Adobe Systems Incorporated
number: 07958445
owner_city: San Jose
owner_country: US
publication_date: 20090312
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF INVENTION","DETAILED DESCRIPTION OF A PREFERRED EMBODIMENT"],"p":["This application is a continuation of and claims the benefit of U.S. patent application Ser. No. 09\/991,766, entitled \u201cSystem and Method for Storing Data Associated with a File,\u201d filed Nov. 23, 2001, which claims the benefit of the priority of U.S. Provisional Application No. 60\/252,532, entitled \u201cMethod and Apparatus for Storing Data Related to a File,\u201d filed on Nov. 22, 2000, and of U.S. Provisional Application No. 60\/254,307 entitled, \u201cMethod and Apparatus for Storing Data Related to a File\u201d filed on Dec. 8, 2000, and each is hereby incorporated herein by reference in its entirety.","The present invention is related to computer software and more specifically to computer software for storing information.","Computers are frequently used to store information. If information stored in a file on a computer contains code for a web page, the information in the file can be used to render the page when the file is provided by a server to a browser.","It can be helpful to store information about the file or information related to the file. For example, notes about editing the file, comments and other information may be desirable to store. One way of storing information about a file is to store the information in the file itself. For example, a designer could store notes about the file as an HTML comment by surrounding the comment with the characters, \u201c<!--\u201d before the comment and the character, \u201c-->\u201d after the comment.","If a file contains the source code for a web page, however, storing information about the file or other information as a comment in the file itself may be undesirable for several reasons. One reason has to do with the fact that when a user requests a web page from a server, the source code for the web page is provided by the server to the user's computer system, stored on the user's computer system, and rendered by a browser. Although comments are not rendered by the browser, they are accessible to the user (for example, by clicking on the command \u201cview-source\u201d in the conventional Internet Explorer product commercially available from Microsoft Corporation of Redmond, Wash.), and the designer of the web page may not wish the user to be able to view the information about the web page stored as a comment. Another reason it may be undesirable to store information about a web page in the source code for the page is that the information will be downloaded as part of the page, increasing the time required to download the page, and driving up costs of serving the web page to users due to increased bandwidth and traffic requirements of the page.","What is needed is a method and system for storing information about a file that does not store the information in the file.","A system and method allows a user of a file such as the author of the file to enter values for predefined keys, define new keys and add values to those keys, or both. The keys and values may describe attributes of the file, information about the file, or information unrelated to the file. The system and method stores the keys and values as XML tags and attributes in a separate \u201cshadow\u201d file, having the same name but an additional extension as the file to which it corresponds, and in a subfolder of the folder in which the file is stored. If the file is moved or renamed, the system and method moves or renames the shadow file consistently with the rules described above. The system and method may upload or download to a server the shadow file when the file is uploaded or downloaded. When the system and method reads the file, it can also automatically read the shadow file, allowing the user causing the system and method to read the file to view the keys and values, modify or delete any keys and values, and store the new keys and values in the shadow file when the file is stored.","The present invention may be implemented as computer software on a conventional computer system. Referring now to , a conventional computer system  for practicing the present invention is shown. Processor  retrieves and executes software instructions stored in storage  such as memory, which may be Random Access Memory (RAM) and may control other components to perform the present invention. Storage  may be used to store program instructions or data or both. Storage , such as a computer disk drive or other nonvolatile storage, may provide storage of data or program instructions. In one embodiment, storage  provides longer-term storage of instructions and data, with storage  providing storage for data or instructions that may only be required for a shorter time than that of storage . Input device  such as a computer keyboard or mouse or both allows user input to the system . Output , such as a display or printer, allows the system to provide information such as instructions, data or other information to the user of the system . Storage input device  such as a conventional floppy disk drive or CD-ROM drive accepts via input  computer program products  such as a conventional floppy disk or CD-ROM or other nonvolatile storage media that may be used to transport computer instructions or data to the system . Computer program product  has encoded thereon computer readable program code devices , such as magnetic charges in the case of a floppy disk or optical encodings in the case of a CD-ROM which are encoded as program instructions, data or both to configure the computer system  to operate as described below.","In one embodiment, each computer system  is a conventional Sun Microsystems Ultra 10 workstation running the Solaris operating system commercially available from Sun Microsystems of Mountain View, Calif., a Pentium-compatible personal computer system such as are available from Dell Computer Corporation of Round Rock, Tex. running the Windows (95, 98 ME, 2000 or NT) operating system including the conventional Internet Explorer Browser commercially available from Microsoft Corporation of Redmond Wash. or a Macintosh computer system running the MacOS commercially available from Apple Computer Corporation of Cupertino, Calif. and the Netscape browser commercially available from Netscape Computer Corporation of Mountain View, Calif. although other systems may be used.","Referring now to , a system  for associating information with a file is shown according to one embodiment of the present invention.","In one embodiment the system  may be included as part of a web authoring development application, such as the conventional Dreamweaver product commercially available from Macromedia of San Francisco, Calif., or the conventional GoLive product commercially available from Adobe, Inc., of San Jose, Calif. Dreamweaver is described in Towers, (Peachpit Press 2000, ISBN 0-201-70240-1), and GoLive is described in Carlson & Fleishman, 4 (Peachpit Press 2000, ISBN 0-201-35474-8). Both of these books are hereby incorporated by reference in their entirety.","In one embodiment of the present invention, file manager  receives one or more commands to open or create a new file. The commands may include a file name or other identifier of the file, which file manager  internally stores. File manager  then opens from local file\/shadow file storage , which may be any conventional disk or other storage, or creates the file and stores the file in file information storage , which may be conventional memory or disk storage.","The user of the system  may then use file editor  to edit the file. File editor  may contain a graphical editor to allow a user to edit information for the file graphically, a code editor to allow the user to edit information using a text based editor, or both so that the user can choose either editing method.","In one embodiment, the information in the file corresponds to code for a web page (including HTML code), and the graphics editor allows a user to edit the HTML code for the web page by editing graphical representations of the objects corresponding to the code and through dialog boxes and menu selections for such objects. The graphical representations of the objects are provided within a graphical user interface such that they appear similar to how the objects could be rendered by a conventional browser.","In one embodiment, edits made using one editor will cause changes to occur in the other editor that are consistent with the original edits. For example, if an image object is graphically expanded using the graphics editor by dragging a corner of an image using a mouse, file editor  will automatically adjust the code for the size of the image displayed by the code editor consistent with the changes made using the graphics editor. File editor  stores the information for the file in file information storage  after editing.","Although the file is described herein as containing HTML code, any type of file may be used with the present invention, including files that contain information that may be downloaded as part of a web page such as graphics or other files.","In one embodiment, if a user wishes to store information to be associated with a file, the user indicates this wish by signaling file manager  to enable such associations. In one embodiment, one or more files may be defined by the user via file manager  as being part of a website and enabling such associations for a file applies to all files for the website corresponding to the file for which the enablement is made and in another embodiment, a single file may have such associations enabled. When the associations are enabled, file manager  stores an indication of the enablement in file information storage . The user may then associate keys and values with the file, such keys and values to be stored in a shadow file as described below using a menu command sent to file manager . If the menu command is received, file manager  signals shadow file keys\/values manager .","In one embodiment, shadow file keys\/values manager  provides a user interface to allow the user to define the information to be associated with the file. In one embodiment, the information to be associated with a file is either basic information, information for which keys are predefined and values are either selected from a list of predefined values or are user defined values, or user information, for which both the keys and values are user-defined. Either or both types of information may be associated with a file according to the present invention.","In one embodiment, the basic information and user information is made up of one or more keys, as well as a value for each key. A value contains information and a key describes the information contained in the value for the key. Thus, the key \u201cAuthor\u201d may have a value of \u201cTom Smith\u201d to signify the author of the file is Tom Smith.","In one embodiment, using the user interface provided by shadow file keys\/values manager , the user may use a set of tabbed dialog-box-sized windows to enter the values of basic information and to define keys and enter values for \u201cuser information\u201d.","The user may press a \u201cbasic info\u201d tab to enter values for basic information having predefined keys such as \u201cstatus\u201d, and \u201cnotes\u201d used to store additional notes. All of the keys are visible and all of the values are visible and changeable through conventional text boxes or pull down lists. In one embodiment, some or all values for any key may be predefined values which the user selects from a drop down list. For example, the values for the status key may be selectable from any of \u201cdraft\u201d, \u201crevision 1\u201d, \u201crevision 2\u201d, \u201crevision 3\u201d, \u201calpha\u201d, \u201cbeta\u201d, \u201cfinal\u201d and \u201cneeds attention\u201d.","The user may also press an \u201call info\u201d tab to view and change both the basic information and the user information. If the \u201call info\u201d tab is selected, shadow file keys\/values manager  provides a user interface to display all currently defined keys and values of both basic information and user information, and to allow the keys and\/or values to be added, changed and deleted. Keys and values are displayed with an equal sign between each key and its corresponding value (e.g. \u201cauthor=Tom Smith\u201d) in a list of keys and values. To add a key and value pair to shadow file keys\/values manager , the user clicks on an \u201cadd\u201d button labeled \u201c+\u201d and then types the name of the key in a \u201cname\u201d text box and types the value in a \u201cvalue\u201d text box. The key and value added will be displayed in the list by shadow file keys\/values manager  as described above.","To delete a key-value pair, the user identifies the key-value pair to be deleted, highlights the identified key-value pair on the list and clicks on a \u201cdelete\u201d button labeled \u201c\u2212\u201d. If the pair is basic information, the value is removed, but the user may reenter it via the basic info tabbed window or the all info tabbed window. Keys for basic information for which there is no value are not displayed in the list of keys\/value pairs by shadow file keys\/values manager .","A user can modify a key\/value pair by highlighting the displayed key and value. When a key-value pair is highlighted, the key and value appear in the \u201cname\u201d and \u201cvalue\u201d text boxes described above. A user may change the name of the key or value for the key using these text boxes provided by shadow file keys\/values manager .","In one embodiment, shadow file keys\/values manager  store the predefined and user-defined keys with any values for such keys in shadow information storage . Shadow information storage  may be any form of conventional storage such as memory or disk.","In one embodiment, when the user wishes to save the file, the user signals file manager  to save the file via a menu or other conventional methods. File manager  signals file builder  by providing a name of the file (including any path), either the name used to open the file or another name received from the user via a save-as dialog box. File builder  retrieves the file information from file information storage  and builds this information into one or more files using a proprietary format, an HTML file that may be served as a web page to a requester of the file, or both. Via operating system , file builder  stores such file or files in local file\/shadow file storage , which may be any form of conventional storage such as memory or disk and need not be local to a computer system on which the system  is operating.","In one embodiment, when file manager  signals file builder , file manager  also signals shadow file namer  by providing the name of the file it has provided to file builder . In another embodiment, file manager  signals shadow file namer  at some later time, such as when file builder  has completed building and storing the file or files as described above.","In one embodiment, using the file name received from file manager , shadow file namer  builds a path and a file name for the shadow file. To build the path for the shadow file, shadow file namer  alters the path of the file to include a notes subdirectory of the directory in which the file is stored. For instance, if a shadow file is created for an image in an image directory, the notes subdirectory is located within the image directory, even if the image is viewed within a document located in a root directory, for instance, a site root folder. In an alternate embodiment, shadow file namer  creates a path to a central folder in which all shadow files for documents and images within the defined directory are located, for instance, all the shadow files created for a particular web site.","Shadow file namer  names the shadow file by adding an extension, such as \u201c.mno\u201d, to the right of the filename, including any extension. For example, a shadow file corresponding to a file named innovation.html is named innovation.html.mno. Any other manner of designing the shadow file name may be used such that the shadow file may be identified from either a characteristic of the file or the contents of the file (e.g. by saving the name of the shadow file in the file). Shadow file namer  sends the shadow file name to shadow file builder .","In one embodiment, shadow file builder  retrieves the shadow file information from shadow information storage  and builds the shadow file using this information. In one embodiment, the shadow file format is a text file that uses conventional XML tags and values corresponding to the shadow file keys and values stored in shadow file information storage . For example, if a key is \u201cAuthor\u201d and a corresponding value is \u201cTom Smith\u201d, shadow file builder  builds a line in the file that reads:","\u201c<infoitem key=\u201cauthor\u201d value=\u201cTom Smith\u201d\/>\u201d, although other forms of storing keys and values such as <author>Tom Smith<\/author> may be used.","Shadow file builder  performs this function for each key and value stored in shadow information storage to build the shadow file. Shadow file builder  stores the shadow file in local file\/shadow file storage  via operating system .","In one embodiment, shadow file builder  adds additional tags to the shadow file in addition to the tags containing attributes corresponding to the keys and values. Such information may include a declaration including the version of XML in use, the character set, and may include tags to identify one or more elements of the document, between which the tags containing the attributes corresponding to any keys and values are provided. For example, in one embodiment, to provide the tag shown above in the file, shadow file builder  builds the file to contain the following:","<?xml version=\u201c1.0\u201d encoding=\u201cutf-8\u201d ?>","<info>","<infoitem key=\u201cauthor\u201d value=\u201cTom Smith\u201d\/>","<\/info>","In one embodiment, if a user renames or copies the file by instructing file manager  of such operation and by providing a new file name and\/or path, file manager  either renames the file with the new file name via operating system  or copies the file by first opening the file into file information storage  and then saving the file using the new path, as described above. File manager  provides the old and new names (including paths) of the file to shadow file namer , which identifies the corresponding names of shadow files as described above and returns them to file manager . File manager  receives the names and passes them to shadow file renamer duplicator  along with an indication of the action it performed or will perform on the file. In such an embodiment, if a shadow file is stored as described above shadow file renamer\/duplicator  renames via operating system  the shadow file or copies the shadow file using conventional techniques. In another embodiment, the shadow file is located in a central directory containing all shadow files.","In one embodiment, a user may delete the file using file manager . In such an embodiment, file manager  deletes the file via operating system  and may also pass the name (including the path) of the deleted file to shadow file deleter , which attempts to delete the shadow file via operating system  using the file name of the file to identify the name (including the path) of the shadow file as described above. The user may also manually delete shadow files using file manager . In one embodiment, the user clicks on a \u201cclean up\u201d command icon provided by the user interface provided by file manager  to signal shadow file deleter . Shadow file deleter  searches all files within the directory for shadow files having a name that does not correspond to any file within the corresponding file directory, prompts the user to verify that any such shadow file should be deleted, and deletes any such shadow file via operating system .","In one embodiment, to delete all shadow files within the defined directory whether or not the corresponding files have been deleted, the user clicks off as \u201cenable shadow files\u201d checkbox or other indicator provided by the user interface provided by file manager . File manager  signals shadow file deleter  with the name of the file to delete all shadow files within the directory corresponding to the file open when the checkbox is checked off via operating system  and stores the \u201cdisabled\u201d status in file information storage .","In one embodiment, when file manager  opens the file as described above, it attempts to locate the shadow file using the name and path of the file as described above. If such a file is located, file manager  may open the file or may signal the user that such a shadow file for the file is available so that the user may then manually open the shadow file via file manager . To open the shadow file, file manager  signals shadow file manager  with the filename of the file, which opens the shadow file into shadow information storage  and displays the file as described above.","In one embodiment, whether to open the shadow file when the file is opened is user selectable for the file using a checkbox on the \u201cbasic info\u201d tabbed window described above. If the box is changed from its initial value of \u201cno\u201d to a value of \u201cyes\u201d or back again, shadow file keys\/values manager  stores the selection as a tag and attribute in shadow information storage . When the file is opened into file information storage , file manager  signals shadow file manager  to open the shadow file into shadow information storage  and locate the tag and attribute corresponding to the selection described above. If the tag and attribute indicate that the shadow file is to be opened, shadow file manager  signals shadow file keys\/values manager  to display the basic info and window and provide via these tabs access to the all info window as described above. If the tag and attribute indicate that the shadow file is not to be opened, shadow file manager  closes the shadow file until the user requests the information from it, at which time shadow file manager  reads the shadow file and signals shadow file keys\/values manager  to display the basic info and window and provide via these tabs access to the all info window as described above.","In one embodiment, a user may signal to file manager  to upload or download the file, or a file corresponding to the file, such as an HTML file produced using the file, to a server or other device remote from the system. In such embodiment, file manager  checks for the presence of a shadow file corresponding to the file or file corresponding to the file being uploaded or downloaded. If the shadow file exists, file manager uploads or downloads the file and\/or file corresponding to the file, and the shadow file, via operating system  and communication interface , which is any conventional communication interface such as a conventional TCP\/IP-compatible communication interface, to or from remote file storage , which may be any form of conventional storage such as memory or disk on a remote storage device, for instance, a conventional server such as a conventional web server.","In one embodiment, the user can select whether to include the shadow file with an upload or download using a user interface provided by file manager . A general selection may apply to all shadow files corresponding to any file uploaded that is defined as being part of a website using file manager . In one embodiment, the user can specifically select for each individual shadow file whether the shadow file should be included in uploads and downloads of the corresponding file, for instance, by specifying this action to file manager . In one embodiment, file manager  provides this information to file builder  which reads a registry file from local file\/shadow file storage  and adds the information to the registry file and stores it into local file\/shadow file storage . In another embodiment, file manager  stores the user's selection in file information storage  so that it will be stored with the file in the proprietary format. If the user has made both general and specific selections, shadow file manager  stores the specific selection.","The user may then command file manager to upload or download the file. Before the file is uploaded or after the file is downloaded, file manager  opens the file or registry file into file information storage  and investigates the field containing the indication of whether to upload or download the shadow file. If the indication was to upload and download the shadow file with the file, file manager  signals shadow file namer  with the name of the source and destination files. Shadow file namer  identifies the name (including the path) of the source and destination shadow files using the same techniques above and returns them to file manager  which uploads or downloads the shadow file using the source and destination names. If the user makes no selection, the shadow file will not be uploaded or downloaded with the file.","In one embodiment, the keys in the shadow file corresponding to each file defined as part of a single website are synchronized by the present invention to allow all keys to be the same for each file in the website. If a key is added or deleted as described above for one shadow file, the keys for all shadow files in the same directory are updated as well by shadow file keys\/values manager .","In any of the operations performed by or involving file manager  for the file and shadow file described above, if the shadow file does not exist, the operation is performed on the file. It was noted above that the file might be either or both of two files, a file in a proprietary format or a file capable of being served to a user to be rendered by a browser or any other file.","In one embodiment, all input and output between the system  and the user is performed by operating system , which may be the conventional Windows operating system or the conventional Macintosh operating system, commercially available from Apple Computer Corporation of Cupertino, Calif., via input\/output  coupled to a keyboard\/mouse\/monitor combination or any other input, output or input\/output device.","Referring now to , a method for associating information with a file is shown according to one embodiment of the present invention. A file is opened and a command to associate information with the file as described above is received, an indication of the association may be stored, and a command to view the information associated with the file is received  as described above. Tabbed windows or dialog boxes are displayed as described above , with a default selected tab of basic information. If the tab selected is basic information  (which it is after step ), the method continues at step  and otherwise, the method continues at step .","At step , predefined tags and any values corresponding to those tags are displayed. One or more new values corresponding to the predefined tags, or one or more commands to delete a value such as by blanking it out using the backspace or delete keys, are received as described above, along with a indication to open and\/or display the information associated with the file at the time the file is opened and all such information may be stored as described above . The method continues at step , where the user may supply an OK command or change tabs as described below.","At step , the information to be associated with the file is displayed as a list of all keys and values, with the first value highlighted and the highlighted key and value displayed in text boxes with which the user may use to change or delete the key or the value  as described herein and the method continues at step .","At step , a command is received, and if the command received in step  is an OK command , the method continues at step , and otherwise the method continues at step .","If the command is a command to move the cursor , a different key\/value pair on the list corresponding to the cursor movement command is highlighted and the key and value pair highlighted are each displayed in a different text box as described above  or may be displayed in the same text box. The method continues at step .","If the command is a command to change the key or value or both in the text boxes , for example, because a user changed or deleted a key or value using the text box, the change is stored  as described above and the method continues at step .","If the command is a command to delete the highlighted key\/value pair , the key\/value pair is deleted from storage and the list updated to reflect the deletion  and a different key\/value pair is highlighted and the highlighted key and value is displayed in the key and value text boxes as described above  and the method continues at step .","If the command is a command to add a key\/value pair, a blank entry at the end of the list is highlighted and the key and\/or value to be added is received either via either or both text boxes and displayed as a highlighted entry at the end of the list  and the method continues at step .","At step  another command may be received. If the command is a command to view information associated with the file , the method continues at step . If the command is a command to save the file , a file in a proprietary format, a file such as an HTML file corresponding to this file, or both may be saved  using the name of the file specified when the file was opened in step  (the corresponding file is saved with a different extension than the file). A shadow file name and path are generated from the file name and path as described above and a shadow file containing the information associated with the file is saved  in a tagged file format such as XML and the method continues at step .","If the command is a command to edit a graphical representation of the file or a code representation of the file such as an HTML or other type of file capable of being served to a browser , the graphical representation of the file and the code representation of the file are both changed to implement the edit specified in the command  and the method continues at step .","If the command in step  is a command to include associated files in uploads or downloads or to open information associated with the file when the file is opened, an indication to include associated information or open such associated information or both is stored with the file or file containing the associated information  and the method continues at step .","If the command in step  is a command to exit , the method terminates . In one embodiment, if such an exit command is received, the user may be warned to save the file, and if the user elects to save the file, the method continues from step  through steps  and  to step  as shown by the dashed line in the Figure.","Referring now to , a method of opening a file and, optionally, displaying information associated with the file is shown according to one embodiment of the present invention. A command to open a file, including the name of the file, is received . A filename of a file containing information associated as described above with the file specified in step  is identified  as described above. The file containing information associated with the file and identified in step  is opened . If such file containing information associated with the file contains an indication to open and display information associated with the file  and the associated information from the file opened in step  may be displayed  and the method terminates , otherwise , the file opened in step  may be optionally closed and the method terminates .","Termination of this method will not affect the performance of other steps which follow the method, for example receiving the command of step  of . In another embodiment, step  is performed after the \u201cno\u201d branch of step  and step  is not used.","Referring now to  a method of uploading a file and information associated with the file is shown according to one embodiment of the present invention. A command to upload the file or a corresponding file related to the file or made using the file, such as an HTML file, including the name (which includes the path), is received . A registry file is opened and a field retrieved . If the field retrieved in step  indicates information associated with the file as described above is to be uploaded with the file or corresponding file , the filename of the information associated with the file is identified based on the file name of the file or corresponding file  as described above. The file and\/or corresponding file, and the file containing information associated with the file, are uploaded . Otherwise, the file and\/or corresponding file, is uploaded . In another embodiment, the field is stored as part of the file (or another file) corresponding to the filename received in step  instead of a registry file, and so that file is opened and the field is retrieved from that file in step  instead of the registry file.","Referring now to  a method of downloading a file and information associated with the file is shown according to one embodiment of the present invention. A command to download the file, including the name (which includes the path), is received  and the file is downloaded. A registry file is opened and a field retrieved . If the field retrieved in step  indicates information associated with the file is to be downloaded with the file , the source and destination filename of the information associated with the file is identified from the name of the file or file to which the file corresponds  as described above. The file containing information associated with the file as described above is downloaded  using the filenames (including paths) for this file identified as described above and the method terminates . Otherwise , the method terminates . In another embodiment, the field is stored as part of the file (or another file) corresponding to the filename received in step  instead of a registry file, and so that file is opened and the field is retrieved from that file in step  instead of the registry file.","Referring now to , a method of performing a command on a file and optionally, information associated with the file, is shown according to one embodiment of the present invention. A command such as delete or rename is received along with a filename including path, and the name and path of a shadow file containing information associated with the file as described above is identified as described above . If such a shadow file exists , the command is performed on both files and optionally one or more other files  and otherwise, the command is performed on the file and optionally one or more other files ."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3C"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3D"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3E"}]},"DETDESC":[{},{}]}
