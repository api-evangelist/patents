---
title: Category partitioning markup language and tools
abstract: A system for testing software modules is provided. A user enters parameter values that will be tested into a spreadsheet. The spreadsheet application generates an XML data file including the parameter values arranged into a table. A test shell extracts test cases from the XML data file and converts the data into a testing object for use by a test engine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07437714&OS=07437714&RS=07437714
owner: Microsoft Corporation
number: 07437714
owner_city: Redmond
owner_country: US
publication_date: 20031104
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION","Exemplary Operating Environment","DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS"],"p":["Aspects of the present invention relate to software testing. More specifically, aspects of the present invention provide a mechanism for formatting testing parameter values and systems for using testing parameter values.","Testing systems and methods have been developing for testing software modules, such as application programming interfaces (APIs). It is common to group testing parameters into equivalency classes and then test selected parameters from each equivalency class. For example, if a developer determines that a software module is likely to either function properly or improperly for all positive integer values of a parameter, the developer may create an equivalency class of positive integer values and test one positive integer value of the parameter. It will then be assumed that if the software module functions properly, the software module will also function properly for other positive integer values.","One prior art approach to testing software modules has included creating objects that test the parameters and parameter combinations selected by the developer. Among other drawbacks, this approach requires developers to create and compile new objects when the developer wishes to test new parameters, parameter values and parameter combinations. Furthermore, new objects must be created and compiled to test new logic when the software module is modified.","Therefore, there is a need in the art for systems and methods that allow developers to test software modules without requiring the developers to create and compile objects to test new parameter values and parameter value combinations.","Aspects of the present invention address one or more of the issues mentioned above by providing a system for testing software modules that includes an XML data file. The XML data file may include a table of testing parameter values. A test shell extracts test parameter values from the XML data file and creates testing objects for use by a test engine. The disclosed system simplifies testing and reduces maintenance costs by allowing developers to change testing parameters and parameter values by changing the values in the XML data file. In one embodiment of the invention, the XML data file is created with a spreadsheet application.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 1","FIG. 1"],"b":["100","110","120","130","110","130","120","140","150"]},"A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within the computer , such as during start-up, is stored in the ROM . The computer  also includes a hard disk drive  for reading from and writing to a hard disk (not shown), a magnetic disk drive  for reading from or writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical disk drive interface , respectively. The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the personal computer . It will be appreciated by those skilled in the art that other types of computer readable media that can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, random access memories (RAMs), read only memories (ROMs), and the like, may also be used in the example operating environment.","A number of program modules can be stored on the hard disk drive , magnetic disk , optical disk , ROM  or RAM , including an operating system , one or more application programs , other program modules , and program data . A user can enter commands and information into the computer  through input devices such as a keyboard  and pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port or a universal serial bus (USB). Further still, these devices may be coupled directly to the system bus  via an appropriate interface (not shown). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown), such as speakers and printers.","The computer  can operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  can be a server, a router, a network PC, a peer device or another common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the local network  through a network interface or adapter . When used in a WAN networking environment, the personal computer  typically includes a modem  or other means for establishing a communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device.","It will be appreciated that the network connections shown are illustrative and other techniques for establishing a communications link between the computers can be used. The existence of any of the various well-known protocols such as TCP\/IP, Ethernet, FTP, HTTP, Bluetooth, IEEE 802.11x and the like is presumed, and the system can be operated in a client-server configuration to permit a user to retrieve web pages from a web-based server. Any of various conventional web browsers can be used to display and manipulate data on web pages.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 2","FIG. 2"],"b":["202","204","206","202","208","204"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3","b":["204","204","304","204","306","304","306","304","308","310","312","204","314"]},"The data structure shown in  may include several additional table elements corresponding to additional test cases. Moreover, several additional parameters and parameter values may also be included. In one alternative embodiment in the invention, the order of parameter values listed in individual test cases is not required to correspond to the order of the parameters listed in parameter section . Name attributes may be added to the parameter tags to associate the parameter values for individual test cases to the parameters identified in parameter section . One of the advantages of listing parameter values for individual test cases in the same order as the parameters listed in parameter section  is that the amount of information that must be included within a data file is minimized. That is, the identification of the parameter that will be assigned a given parameter value is assumed by the order of the parameter value.","The data structure shown in  is formatted with XML. One skilled in the art will appreciate that other markup languages may also be used to implement aspects of the invention. When XML is used to format parameter values and parameter value combinations for a plurality of test cases, the data structure may be formatted in accordance with the schema shown in . Of course, alternative schemas may also be used.","Returning to , XML data file  is transmitted to a test shell  that may be used to generate testing objects. An import module  may receive XML data file  and validates the parameter values and parameter value combinations included within the table. For example, if a parameter can only be assigned integer values, validation may include verifying that all of the parameter values for that parameter are assigned integer values. Validation may be performed when data file  is received or may be performed as individual cases are utilized. Import module  and may also extract individual test cases and transmit those test cases to a test object creation module . Test object creation module  may then format the parameter values for the individual test cases into a standard testing object. Formatting may include, for example, changing character strings to values. An exemplary testing object may include a standard template library (STL) container. The structure of standard testing objects are well-known to those skilled in the art.","A testing engine  then receives the testing object, runs a test in the conventional manner and returns results from the test to a results handler . Results may include an indication of whether or not the test was successful as well as information describing what went wrong when the test was not successful. Results handler  may then transmit data to a log media manager  which may then generate information describing the results of the test. This information may be transmitted to a display device . In alternative embodiments, log media manager  may transmit information describing the results to a file, a database, an application or any other entity that is typically used in the art to manage test result information.","Among other advantages, the system shown in  allows software developers to test new parameters and new parameter values by merely changing XML data file . In embodiments that utilize spreadsheet application  to generate XML data file , testing new parameter values may include adding the new parameter values to a spreadsheet.","The present invention has been described in terms of preferred and exemplary embodiments thereof. Numerous other embodiments, modifications and variations within the scope and spirit of the appended claims will occur to persons of ordinary skill in the art from a review of this disclosure."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Aspects of the present invention are described with respect to the accompanying figures, in which like reference numerals identify like elements, and in which:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
