---
title: Audio feedback test
abstract: Methods and systems provide automated testing of computer facilitated audio input and output devices. A tone is converted from a digital to analog signal and is sent to a sound mixing device. At the sound mixing device, the analog tone is looped back through a recording line to an analog to digital converter. The recorded tone is converted from a time domain to a frequency domain using a Fast Fourier Transform (FFT) analysis. The frequency, and if desired, the intensity of the recorded tone is compared against the known frequency and at the desired intensity of the played tone. If the recorded tone is the same as the played tone, the ability of the sound card to play the tone is designated as passing.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07873427&OS=07873427&RS=07873427
owner: American Megatrends, Inc.
number: 07873427
owner_city: Norcross
owner_country: US
publication_date: 20090921
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This patent application is a divisional of U.S. Pat. No. 7,593,781, issued Sep. 22, 2009, and entitled \u201cAudio Feedback Test,\u201d which claims the benefit of U.S. Provisional Patent Application No. 60\/445,103, filed on Feb. 5, 2003, each of which are expressly incorporated herein by reference in their entirety.","Embodiments of the invention relate generally to the field of software and hardware testing. More particularly, embodiments of the invention relate to a method and system for automated audio feedback testing.","In the modern computing environment, a variety of audio functions are available for use in association with computers including audio recording and playback. Many modern computers include audio output devices such as speakers and earphone jacks and audio input devices including microphones and CD players. In prior art systems, manufacturers or others interested in testing the audio functionality of computer hardware and software often required interaction with a human user. That is, testing of various audio characteristics and functionality of a computing system is most commonly performed by providing a user a known audio presentation such as a tone or mix of tones and requiring input from the user in response to the presentation. For example, the user may be provided a tone from the user's left speaker requiring the user to indicate which speaker the tone is emitted from, followed by a similar test from the right speaker. The user may be given a tone at various volumes and asked to verify the varying volumes as a way of verifying that the volume functionality of the audio output is functioning properly. If the user's response to any such test indicated that the tone or mix of tones heard by the user did not correspond with the intended audio presentation, the test failed. Conversely, if the test user responded affirmatively to the intended audio presentation, the test passed. Such prior art testing systems lack efficiency and are costly because of the requirement to utilize human test users. Moreover, because human test users may only respond to audio presentations within the audio range of the human test user, the breadth of testing that may be performed by the human test user is limited.","It is with respect to these and other considerations that the various embodiments of the present invention have been made.","In accordance with the present invention, the above-described problems are solved by methods and systems for automating the testing of computer facilitated audio input and output devices. Generally described, at the control of a testing software module, a sound-synthesizing module in a computer sound card generates and plays a tone at a known frequency and intensity. The tone is converted from a digital to analog signal and is sent to a software controlled sound mixing device. At the sound mixing device, the analog tone is looped back through a recording line to an analog to digital converter. The tone is converted from an analog to digital format and is then recorded. The recorded tone is compared to the generated tone. If the recorded tone is substantially similar to the generated tone, designating the sound card as passing the test.","According to an aspect of the invention, the recorded tone is converted from a time domain to a frequency domain using a Fast Fourier Transform (FFT) analysis program. The frequency, and if desired, the intensity of the recorded tone is compared against the known frequency, and at the desired intensity of the played tone. If the recorded tone is the same as the played tone, the ability of the sound card to play the tone is designated as passing. If not, the ability of the sound card to play the tone is designated as failing. By converting a played tone from digital to analog, feeding the tone back through a recording line, converting the tone from analog to digital, recording the tone, followed by analysis of the tone, a determination may be made as to the sound quality the tone would have if the tone was passed through an actual output line such as a speaker output line or earphone output line for receipt by a user.","According to another aspect of the invention, the FFT analysis results may be utilized to calculate a signal to noise ratio (SNR), a total harmonic distortion (THD) value, a total harmonic distortion plus noise (THD+N) and a DC-offset value. Each of these calculated values may be compared against pass\/fail thresholds for the played tone. According to aspects of the invention, the audio feedback test may also be performed to test the record gain associated with a tone output. The audio feedback test may also be used to test audio output to right and left speaker outputs of a stereo speaker system. The audio feedback test may also be used to test sound mixing functionality of an audio\/sound card, and the audio feedback test may be used to test a sound card's play of a tone through a variety of frequencies. The audio feedback test also may be used to test hardware configurations including a CD-ROM cable connection configuration.","These and various other features as well as advantages, which characterize the present invention, will be apparent from a reading of the following detailed description and a review of the associated drawings.","As described briefly above, embodiments of the present invention provide methods and systems for automated audio feedback testing of computer sound cards. These embodiments may be combined, other embodiments may be utilized, and structural changes may be made without departing from the spirit and scope of the present invention. The following detailed description is, therefore, not to be taken in a limiting sense, and the scope of the present invention is defined by the pending claims and their equivalents.","Referring now to the drawings, in which like numerals refer to like elements through the several figures, aspects of the present invention and the exemplary operating environment will be described. , B, C, D,  and  and the following discussions are intended to provide a brief, general description of a suitable operating environment in which the embodiments of the invention may be implemented. While the invention will be described in the general context of program modules that execute in conjunction with an application program that runs on an operating system on a personal computer, those skilled in the art will recognize that the invention may also be implemented in combination with other program modules. Generally, program modules include routines, programs, components, data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, multiprocessor-based or programmable consumer electronics, mini computers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computer environment, program modules may be located in both local and remote memory source devices.","Operating Environment","Referring now to , an illustrative computer architecture for a computer  for practicing the various embodiments of the invention will be described. The computer architecture shown in  illustrates a conventional server or personal computer, including a central processing unit  (\u201cCPU\u201d), a system memory , including a random access memory  (\u201cRAM\u201d) and a read-only memory (\u201cROM\u201d) , and a system bus  that couples the memory to the CPU . A basic input\/output system  containing the basic routines that help to transfer information between elements within the computer, such as during startup, is stored in the ROM . The computer  further includes a mass storage device  for storing an operating system  suitable for controlling the operation of a networked computer, such as the WINDOWS NT or XP operating systems from MICROSOFT CORPORATION of Redmond, Wash. The mass storage device  also stores application programs, such as the computer program , the automated testing program , the Web browser  and plug-in , and data, such as the test scripts  used by the automated testing program .","The mass storage device  is connected to the CPU  through a mass storage controller (not shown) connected to the bus . The mass storage device  and its associated computer-readable media, provide non-volatile storage for the computer . Although the description of computer-readable media contained herein refers to a mass storage device, such as a hard disk or CD-ROM drive, it should be appreciated by those skilled in the art that computer-readable media can be any available media that can be accessed by the computer .","By way of example, and not limitation, computer-readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EPROM, EEPROM, flash memory or other solid state memory technology, CD-ROM, DVD, or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the computer.","According to various embodiments of the invention, the computer  may operate in a networked environment using logical connections to remote computers through a network , such as the Internet or a LAN. The computer  may connect to the network  through a network interface unit  connected to the bus . It should be appreciated that the network interface unit  may also be utilized to connect to other types of networks and remote computer systems. The computer  may also include an input\/output controller  for receiving and processing input from a number of devices, including a keyboard, mouse, or electronic stylus (not shown in ). Similarly, an input\/output controller  may provide output to a display screen, a printer, or other type of output device, including a sound card ,  illustrated in .","The computer  also includes a redirection device . As described above, the redirection device may be internal or external to the computer . The redirection device receives and compresses the video output of the computer  for transmission over the network . The redirection device  also transmits the compressed screen displays to a plug-in  executing on a remotely located computer, where the data may be decompressed and displayed. Because the redirection device  is implemented in hardware, operation of the redirection device  is not dependent on the execution of a particular type of operating system . Moreover, because the redirection device  is implemented in hardware, the operating system  does not have to be loaded by the computer  for the screen displays of the computer  to be compressed and transmitted. In this manner, the computer  may be remotely controlled immediately after it is powered on and without the need to load any operating system.","As discussed briefly above, the redirection device  also includes input\/output ports for connecting peripheral input devices that would otherwise be connected to the computer . In particular, a mouse and keyboard (not shown in ) may be directly connected to the redirection device . Input commands received by these devices may then be passed by the redirection device  to the input\/output controller . Additionally, user input commands may also be received by the plug-in  at a remote computer. These commands may be generated by a user or by an automated testing program  and are transmitted by the plug-in  to the redirection device . The remotely generated commands are also passed from the redirection device  to the input\/output controller  for execution on the computer  as if the commands were generated locally. In this manner, the operation of the computer  and, in particular, the operation of the computer program , may be completely controlled from a remote computer.","Turning now to , various aspects of a diagnostics application program  will be described. As mentioned briefly above, the diagnostics application program  comprises one or more executable software components capable of performing tests on the computer  and diagnosing failures and potential failures within the various systems of the computer . According to one embodiment of the invention, the diagnostics application program  is implemented as a multi-layer stack. At the top of the stack is a console application  and at the bottom of the stack is one or more managed system elements A-C.","The console application  comprises an executable application program for controlling the operation of the diagnostics application program . For instance, the console application  may receive user input identifying particular managed system elements A-C upon which diagnostics should be performed. The console application  may also receive the identities of particular tests that should be performed on the managed system elements A-C. Additionally, the console application  may receive and display information regarding the progress of the diagnostic and its success or failure once the diagnostic has been completed. The console application  may also provide other functionality for executing diagnostics in a batch mode.","In order to provide the above-described functionality, the console application  communicates with a diagnostics \u201ctriplet\u201d A-C for each managed system element A-C. A triplet A-C comprises a plug-in A-C, a diagnostics control module A-C, and a diagnostics core A-C. The plug-ins A-C relay diagnostic information between the console  and the control  and convert system information from a proprietary format to a format usable by the console . Moreover, the plug-ins A-C receive input such as the selection of particular diagnostic test settings and pass the information to the connected diagnostics control module . Other types of commands, such as commands for starting or stopping a diagnostic, may also be passed from the plug-ins A-C to the appropriate diagnostics control module A-C. In order to facilitate communication between the plug-ins A-C and the console application , an interface  is provided for exchanging system information and a separate interface  is provided for exchanging diagnostic information.","The diagnostic cores A-C communicate directly with the appropriate managed system element A-C and perform the actual diagnostic tests. The diagnostic cores A-C also gather information about a particular managed system element A-C and pass the information to the appropriate diagnostics control modules A-C. The diagnostics control modules A-C then pass the information back to the appropriate plug-in A-C.","According to various embodiments of the invention, the diagnostics control modules A-C and the plug-ins A-C are implemented as component object model (\u201cCOM\u201d) objects. The diagnostics control modules A-C and the plug-ins A-C communicate via an interface  for exchanging system information  and a separate interface  for exchanging diagnostic information. The diagnostic cores A-C are implemented as standard dynamically linked libraries (\u201cDLLs\u201d).","It should be appreciated that a managed system element A-C may comprise any of the components of a computer system, including software components. For instance, a managed system element A may comprise a graphics card or processor, an audio card or processor, an optical drive, a central processing unit, a mass storage device, a removable storage device, a modem, a network communications device, an input\/output device, or a cable. According to embodiments of the present invention the managed system element includes the audio\/sound cards , . Testing of sounds and tones and hardware described below may be performed by the diagnostic cores A-C and the analysis function of the core may be directed by the console application . It should also be appreciated that this list is merely illustrative and that managed system elements A-C may comprise other types of computing components.","Referring now to , additional aspects of a diagnostics application program  provided according to various embodiments of the invention will be described. As shown in , a separate presentation layer  for diagnostic information may be interposed between each of the plug-ins A-C and the console application . The console application  and the plug-ins  retain the interface  for communicating system information. However, the console application  and the plug-ins A-C can communicate diagnostics information through the presentation layer  as if they were communicating directly with each other.","According to various embodiments of the invention, the presentation layer  provides an interface to the plug-ins A-C to external programs. For instance, according to one embodiment of the invention, the presentation layer  provides functionality for utilizing the diagnostics triplet  with a console other than the console application , such as a console application provided by a third-party manufacturer. Similarly, the presentation layer  may provide functionality for accessing the triplet  from a script or a Web page.","In order to provide the above-described functionality, the presentation layer  is implemented as an ACTIVEX control in one embodiment of the invention. As known to those skilled in the art, ACTIVEX controls are a type of COM component that can self-register. COM objects implement the \u201cIUnknown\u201d interface but an ACTIVEX control usually also implements some of the standard interfaces for embedding, user interface, methods, properties, events, and persistence. Because ACTIVEX components can support the object linking and embedding (\u201cOLE\u201d) interfaces, they can also be included in Web pages. Because they are COM objects, ACTIVEX controls can be used from languages such as VISUAL BASIC, VISUAL C++, and VBSCRIPT from MICROSOFT CORPORATION, and JAVA from SUN MICROSYSTEMS.","Turning now to , additional aspects of a diagnostics application program  provided according to various embodiments of the invention will be described. As shown in , in various embodiments of the present invention, an instrumentation data consumer  and an instrumentation data provider  are provided for enabling communication with an instrumentation platform .","The instrumentation data provider  provides a communication path between the instrumentation platform  and the diagnostic control module C. In this manner, a third-party console A may utilize the diagnostic control module C and receive diagnostic information regarding the managed system element C. Moreover, the instrumentation data provider  may generate event messages compatible for use with the instrumentation platform . Other objects may subscribe for these events through the instrumentation platform  and receive the event messages without polling a results object. Additional details regarding the operation of the instrumentation data provider  will be described in greater detail below.","The instrumentation data consumer  provides a communication path between the instrumentation platform  and the presentation layer . Through the instrumentation data consumer , the presentation layer  and the console application  have access to diagnostic information maintained by the instrumentation platform . For instance, through the instrumentation data consumer , the presentation layer  can execute and receive diagnostic result messages from third-party diagnostics B configured for use with the instrumentation platform  and not otherwise usable by the console application . Additionally, the data consumer  may register to receive diagnostic event messages from the instrumentation platform . The event messages when received may then be converted by the data consumer  for use by the presentation layer  and the console application . Additional details regarding the operation of the instrumentation data consumer  will be described in greater detail below.","Turning now to , an exemplary computer sound card  or soundboard for use in accordance with the embodiments of the present invention is described. The sound card illustrated in  may be connected to the computer  illustrated in  as an input\/output controller  for receiving digitized sound data and for converting the sound data to audio format for presentation to a user through a speaker output, earphone output and the like. Likewise, the sound card  may be used for receiving audio input such as through a microphone or CD input line and for converting the audio input to a digital format for transmitting data to a memory storage device such as the memory  of the computer  for subsequent editing and use. As is well known to those skilled in the art, a sound card is a type of expansion board for a computer that allows the playback and recording of sound, such as from a WAV or MIDI file or from a music CD-ROM. An exemplary sound card  for use in accordance with the present invention is a SoundBlaster, which includes a family of sound cards manufactured by Creative Technology and Creative Labs.","Referring to , the sound card  includes a bus interface and decoding logics connector  for connecting to the computer  via the bus . A digital to analog circuit (DAC)  is provided for converting digital sounds to analog sounds for the presentation to a user through audio output such as a speaker or earphone line. An analog to digital circuit (ADC)  is provided for converting analog sounds received through an audio input line  such as a microphone to a digital input for processing using a digital computer . Miscellaneous logics  are included for providing functionality associated with miscellaneous input and output devices , including CD-ROM, MIDI input and output devices and joysticks. An analog audio mixer and amplifier device  is disposed between the audio output  and the audio input  and the DAC  and the ADC  for providing other functionality including sound mixing and sound amplification.","Referring now to , another computer sound card  is described. As described with reference to , an exemplary sound card  is a SoundBlaster sound card. The sound card  includes a read only memory (ROM) component  which includes the preset wave table synthesizer samples (sounds and tones) which according to an embodiment of the present invention includes preset wave table synthesizer samples for looping internally in the sound card through a record input line for testing cards  or card  in accordance with embodiments of the present invention. That is, the ROM  includes pre-produced or recorded sounds at known frequencies, known noise levels and known intensities for use in comparing to a recorded version of those sounds according to embodiments of the present invention. The random access memory (RAM) component  includes memory space for storage of recorded sounds, software programming for operating the card  and for downloadable wave table instruments according to embodiments of the present invention.","The wave table synthesizer  produces output sounds of the samples contained in the ROM  and the RAM . The coder\/decoder (CODEC)  is a hardware component that can convert audio or video signals between analog and digital forms similar to the components  and  described above with reference to . The CODEC  may also be used to compress and decompress audio and video data, as required. According to embodiments of the present invention the CODEC  is responsible for the audio to digital and digital to audio conversion of audio signals. The frequency modulation (FM) synthesizer  is responsible for playing FM sounds. The mixer  includes an analog mixer integrated circuit for mixing together sounds from various inputs such as a microphone, an auxiliary input, a wave table synthesizer  and FM synthesizer  and a CD-ROM audio input to a final mix which is then sent to line level and speaker outputs  and . According to an embodiment of the present invention tested sounds (tones) are looped back through a record-in after receipt by the mixer . A variety of input output lines including a line out , a speaker out , an auxiliary in , a microphone in , and a joystick\/MIDI .","Operation","According to the embodiments described below, testing and display of results associated with the following tests are controlled and performed at the control of software modules in conjunction with the cores A, B, and C and console application  described above with reference to , B, C, and D where the sound card ,  and subcomponents of the sound card serve as a managed system elements A, B, and C.","Referring now to , a simplified block diagram illustrating a basic operational flow of a loopback test performed to determine the proper operation and functionality of a computer audio\/sound card and related software is described. The tests performed according to the operational flow described with reference to  are performed to test the operability of sound cards such as the sound cards  and , describe above. Additionally, if tests performed to determine the operability of the sound cards fail, as should be understood by those skilled in the art, sound cards or components contained therein may be replaced to isolate the sound card as being associated with a problem in order to test a software application responsible for providing digitized sound data from another memory source such as the memory  illustrated in .","According to an exemplary embodiment of the present invention, the test performed on the sound cards  and  are looped through the sound card internally by playing a pre-produced sound to a mixer, followed by looping the sound back through a record line, followed by a comparison of the played sound to the recorded sound. Generally described then, the functionality of an audio electronics device such as the cards  and  may be tested for sound quality without the need to play sounds to a human test user.","Individual recording input lines such as the auxiliary in and microphone lines  and  and individual output lines such as the line out  and speaker out  may be tested for proper operability. If a given test fails, a tester may use the results of the test to check hardware components, as described above. If the tester determines that all hardware components are in good working order, then software modules responsible for emitting and controlling audio presentation may be tested. Advantageously, the need for a human test subject to listen to a test sound and report a finding is eliminated.","Referring still to  and according to embodiments of the present invention, a standard set of application programming interfaces (API) are used to play a sound through an output line such as the speaker line, MIDI output or auxiliary output, or CD output line. Another API causes the played sound to be recorded by looping the played sound back through a record line such as a microphone or CD record line. As shown in , the test may be executed without a loopback between the line in and line out. That is, a physical loop connector external to the audio card connecting a line out to a line in is not necessary owing to the embodiments of the present invention. The invention uses a MIDI input and MIDI output internal loopback mechanism . As known to those skilled in the art, MIDI is an acronym for Musical Instrument Digital Interface. The MIDI is a serial interface standard that allows for the connection of music synthesizers, musical instruments, and computers. The MIDI standard is based partly on hardware and partly on a description of the way in which music and sound are encoded and communicated between MIDI devices. The information transmitted between MIDI devices is in a form called a MIDI message, which encodes aspects of sounds such as pitch and volume as 8 bit bites of digital information. MIDI devices can be used for creating, recording, and playing back music. Using MIDI, computers, synthesizers and sequencers can communicate with each other, either keeping time or actually controlling the music created by other connected equipment. The MIDI internal loopback mechanism is used to loop a played sound back through a record line to a processor . Accordingly, using the MIDI input and MIDI output internal loopback mechanism  eliminates the need to have external loopback connectors such as between a speaker output and a microphone input.","Referring still to , the frequency synthesizer  is used to generate a known tone for passing to the mixer  for testing. As described above with reference to , a pre-produced sound or tone may be taken from the ROM  and provided to the frequency synthesizer , or wave table . The tone generated from the frequency synthesizer , wave table , or FM synthesizer  is passed through a sound card mixer  and the tones are passed through a line output  or speaker output  for presentation to a user. That is, during the test performed according to embodiments of the present invention, a human user may hear the tones or sound being generated by the frequency synthesizer, wave table or FM module for the internal loopback test.","Prior to passing the tone to the mixer the tone is converted from digital to analog just as would be the case where no test is being performed. After the analog tone is received by the mixer, the played tone is looped internally through the internal loopback mechanism  (MIDI in and MIDI out) to a digital signal processor . At the digital signal processor , according to embodiments of the present invention, the played tone is converted from analog to digital by the ADC circuit  or CODEC . The digital signal processor in accordance with the MIDI input and MIDI output loopback mechanism passes 8 bit samples of the played and recorded tones for the FFT analysis. The digital version of the tone or sound is converted from a time domain to a frequency domain using a Fast Fourier Transform (FFT) analysis. Prior to performing the FFT analysis the tone is recorded. By looping the tone through a known record line, operability of the line is checked because if a tone passes through to the recorder then at least the line will pass transmissions notwithstanding other problems that may be associated with the line or sound card in general.","If the recorded tone or sound and the played tone or sound are the same or substantially the same quality as a function a comparison of the FFT transformation results to the known frequency of the played tone, then the sound card components pass the test. An additional advantage of this process is that not only is the quality of the record out lines analyzed, but the basic question of which record out lines are operable at all is tested by iterating the process through all available record output lines when the tone is recorded. Once the operability and quality for any given record output line is confirmed, a registry key may be set for the \u201cpassed\u201d line in the computer's registry so that the \u201cpassed\u201d input or output line is available for future use.","In addition to the foregoing, analysis of the recorded sound allows for calculations of signal to noise ratio (SNR), total harmonic distortion (THD), total harmonic distortion plus noise (THD+N) and DC-Offset Values. Each such value may then be applied against acceptable thresholds for additional information about the proper operability of the sound card. For example, the SNR relates to how much stronger a signal is than background noise passed through a channel with the signal. The SNR is typically expressed in decibels, and the ratio is a measure of the quality of a transmission. Accordingly, if the SNR is calculated in accordance with the present invention for any given channel (input or output line) the SNR value may be used to determine whether the tested channel has passed or failed by comparing the SNR value to a threshold value considered acceptable by the manufacturer or tester of the sound card , .","The total harmonic distortion ratio is a ratio of the sum of the powers of all harmonic frequency signals (other than the fundamental) to the power of the fundamental frequency signal. The ratio is measured at the output of a device under specified conditions and is expressed in decibels. The total harmonic distortion plus noise (THD+N) is a measure of the audio clarity of an audio system. The best measure is zero percent and an average computer sound card for a voice channel typically operates at around 10% THD+N. According to embodiments of the present invention, the FFT analysis result of the recorded tone allows for calculation of the THD and THD+N values. If those values exceed an acceptable level, the associated channel (line in or line out) may be designated as having failed the test.","The DC-offset value is associated with the DC Bias value in an analog signal unintentionally introduced by analog devices as part of signal amplification or some other signal processing. The value obtained gives an indication of how much DC-offset is introduced, if any, during the analog signal loopback path. Accordingly, by calculating the DC-offset value through the FFT analysis, a determination can be made as to the amount of DC offset that is introduced when the played sound is converted to analog and looped back through a recording output line for analysis. If a determination is made that too much DC-offset is introduced, the associated channel (input or output line) may be designated as having failed the test.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 5","FIG. 4","FIGS. 1B"],"b":["500","505","510","1","1","34","28","4"]},"At step , a single tone at a set frequency and intensity is generated from the frequency synthesizer , wave table , or FM synthesizer  and is passed through the CODEC  for conversion from digital to analog. After the tone is passed through the mixer , the tone is looped back using the internal loopback mechanism  through a selected record line such as a microphone input line to the digital signal processor . At the digital signal processor, the digital tone is passed through the CODEC  and is converted from analog back to digital. At step , the tone is recorded and is then converted from a time domain to a frequency domain using a Fast Fourier Transform (FFT) analysis. At step , the results of the FFT analysis are compared to a known frequency and intensity of the pre-produced and played tone to compare the recorded tone against the played tone. At step  a determination is made as to whether the recorded tone matches the played tone. For example, if the FFT analysis plots a single spike at 1000 Hertz and the played tone was a 1000 Hertz tone, then the test passes. If not, the method proceeds to step  and test fails, and the method ends at step . As should be understood, if no tone at all is recorded through the selected record line, then the line is designated as inoperable.","If desired the method may proceed to step , and the DC offset value, the SNR value, the THD value and THD+N value may be calculated using the FFT results calculated for the recorded tone. If the SNR, DC offset, THD, and THD+N values are acceptable as compared to acceptable threshold values for each of those tests, as described above with reference to , , and , the test results in a pass for the sound card and for the selected record line. At step , if the comparison of any of those values does not result in an acceptable value as compared to acceptable value threshold levels, the test fails.","As briefly described above, if the sound card being tested in accordance with the steps described for  fails any of the described tests, the manufacturer or tester may isolate the sound card by inserting a known operable sound card and repeating the tests. If a failure still occurs in any of the foregoing described tests, the manufacturer or tester may then look to other components such as software modules responsible for passing sound data through the sound card as a possible source for an audio malfunction or quality deficiency. For example, if testing a microphone input line according to the steps described in , and a failure condition results, the microphone input line will not be marked in the registry of the computer  as operable until an acceptable test for the microphone input line is achieved after the sound card has been replaced or repaired. On the other hand, if the microphone input line according to the forgoing example passes the tests described above, a registry key in the computer  registry will be set to mark the microphone input line as acceptable for future use. Advantageously, utilizing the methods described above, testing for both an input line to the mixer and an output line from the mixer to a recorder may be performed at the same time by passing a pre-produced sound through an input line and out through an output line via the loopback function.","As described above, a series of application programming interfaces (API) are used for passing sounds or tones from one component of the sound card to another, described above. That is, once the test is initiated at step , a playback API call is initiated to cause a sound to be generated from the frequency synthesizer. A recording API call is made for causing the played sound to be recorded after having passed through the loopback mechanism  to the record line. According to an embodiment of the present invention, a set of standard Windows 32 APIs are used for calling the playback tone and for calling the recording tone. Exemplary Wave In APIs used for causing a tone or sound to be passed through an input include:","waveInOpen","waveInClose","waveInGetDevCaps","waveInGetNumDevs","waveInPrepareHeader","waveInUnprepareHeader.","An exemplary set of Wave Out APIs used for causing a sound or tone to pass through an output line or channel at different frequency settings, volume settings, and the like include:","waveOutOpen","waveOutClose","waveOutGetDevCaps","waveOutSetVolume","waveOutSetPitch","waveOutSetPlaybackRate","waveOutWrite","waveOutPrepareHeader","waveOutUnprepareHeader","Additionally, standard media control interface API's that are Windows operating system application interfaces that enable a software program to control multimedia devices such as the components of the sound cards  and  include (input and output API's):","MCI APIs Used:\n\n","MIDI APIs Used:\n\n","Additional API's for causing data to be passed through the audio components, as described above include memory mapped input output (MMIO) API's including:","MMIO APIs Used:\n\n","As known to those skilled in the art, the foregoing API's are asynchronous calls so that a playback call causing a tone to be passed through an input line and a recording call causing a tone to be passed through a recording line may be made simultaneously.",{"@attributes":{"id":"p-0084","num":"0093"},"figref":["FIG. 6","FIG. 5"],"b":["600","605","610","615","620","625"]},"At step , the recorded tone is analyzed using an FFT analysis and at step  the results of the record gain value are displayed. After the record gain value for a first setting is calculated and displayed, the method returns back to step , and the volume level is increased by a desired level, for example by 25%. The same tone is played through the record output line such as a speaker output line at the increased volume level, and the record gain value is calculated, as described above. After the test is performed at all desired volume levels, the volume levels are analyzed to determine whether the record gain varied with the varying recording volume levels, at step . If so, the record gain test is determined to have passed. That is, if the record gain test shows that consistent increases in the calculated gain are associated with the corresponding volume increases, the test passes for the output or input line in question. If not, the record gain test is determined to have failed which indicates that a problem with the volume control setting associated with the sound card  or  may exist.",{"@attributes":{"id":"p-0086","num":"0095"},"figref":["FIG. 7","FIG. 4","FIG. 5"],"b":["300","400","700","705","710","715","720","725"]},"Any sounds or tones passing through the muted channel are also recorded. At step , the recorded tones from the muted channel and the unmuted channel are analyzed using an FFT analysis. The muted channel is functioning properly if no sounds or tones are passing through the muted channel. It is expected that a flat FFT signal without a peak or spike associated with the frequency and intensity of the played tone will be presented. If an FFT signal is presented with a peak or spike at a position that would be expected in the unmuted channel is found for the muted channel, the indication is that the sound or tone passed through the unmuted channel has crossed over through the muted channel.","At step  the calculated DC Offset, SNR, THD and THD+N values are calculated and analyzed as described above. At step  the unmuted channel may be tested for general operability, as described with reference to . At step , the test is repeated using the reverse orientation where the first muted channel is unmuted and the first open channel is muted. At step , the test is repeated with no mute applied to either channel so that the operability of both channels is tested simultaneously. As should be understood, testing both lines simultaneously without applying muting to either line may also be used to test the record gain in the two lines to make sure that neither line is louder than the other line when volume settings are set to the same setting for each line. The method ends at step .",{"@attributes":{"id":"p-0089","num":"0098"},"figref":["FIG. 8","FIG. 4","FIG. 4"],"b":["430","800","805","810","430","815","430","820"]},"At step  an FFT analysis is performed on the output of all channels through which tones or sounds are recorded in accordance with the test. At step , a determination is made as to whether an FFT peak or spike in the recorded tone is associated with the known single tone and whether FFT peaks or spikes in the recorded tones or sounds are associated with frequencies and intensities for the MIDI file. At step , the results are displayed. At step , a determination is made as to whether the known single tone and the known MIDI file tones were recorded after having passed through the mixer line. If not, an indication is presented that one of either the single tone or the MIDI file tones was not mixed properly by the mixer , and the method proceeds to step  and a failure condition is presented. If both the single tone and the MIDI file tones are detected after passing through the mixer , the mixer  is determined to have passed the test at step . The method ends at step . Exemplary APIs used for causing a tone or sound to be passed through, processed by and passed out of the mixer  include:","Mixer APIs Used:\n\n",{"@attributes":{"id":"p-0092","num":"0108"},"figref":["FIG. 9","FIG. 5","FIG. 5"],"b":["900","905","910","915","925","925","930","935"]},{"@attributes":{"id":"p-0093","num":"0109"},"figref":["FIG. 10","FIG. 1","FIGS. 2 and 3"],"b":["22","300","400","4"]},"Referring to , the method  begins at start step  and proceeds to step  where the internal loopback function is set to ON. At step , the WaveOut device such as the frequency synthesizer  passes a known noise sound through a record output line through which sounds or tones will be received from a connected CD unit. At step , the noise gain associated with the passed noise is calculated. At step , the CD unit recording is set to ON, and at step , an audio CD in the CD unit drive is played using Advanced SCSI Programming Interface (ASPI) commands. At step , the tone is played and is looped back through the record output line associated with the connector between the CD unit and the sound card. The tones or sounds are recorded, as described with reference to , and the gain associated with the played CD sounds or tones is calculated. Step , the gain associated with the played CD (Compact Disc) sound or tone is compared to the gain associated with the noise. If the gain associated with the played sounds or tones is greater than the noise gain, the method proceeds to step  and a determination is made that the output cable between the CD unit and the sound card is connected. If the gain associated the played tones from the CD are not greater than the noise gain, the method proceeds to step  and the test is determined to have failed.","It will be apparent to those skilled in the art that various modifications or variations may be made in the present invention without departing from the scope or spirit of the invention. Other embodiments of the invention will be apparent to those skilled in the art from consideration of the specification and practice of the invention disclosed herein."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1C"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1D"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 2 and 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
