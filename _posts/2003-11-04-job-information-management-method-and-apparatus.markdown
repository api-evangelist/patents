---
title: Job information management method and apparatus
abstract: This invention increases the job information management precision. To accomplish this, an information processing method of recording or accumulating job information on a job issued from an information processing apparatus connectable to an image forming apparatus including an acquisition step of acquiring the job information from the information processing apparatus or the image forming apparatus, a determination step of determining whether to record or accumulate the job information acquired in the acquisition step, in accordance with a driver which generates data of the issued job, and a recording/accumulation step of recording or accumulating the job information determined in the determination step to be recorded or accumulated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07787143&OS=07787143&RS=07787143
owner: Canon Kabushiki Kaisha
number: 07787143
owner_city: Tokyo
owner_country: JP
publication_date: 20031104
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","Other Embodiment"],"p":["The present invention relates to a job information management technique.","A job management method for an information processing system which acquires and manages job information has conventionally been developed (see, e.g., Japanese Patent Laid-Open No. 2002-116899). Pieces of job information executed by a peripheral device are collected.","In conventional job information collection, whether to collect pieces of job information is not determined on the basis of the job information generation process. For this reason, pieces of unnecessary or abnormal job information may be collected. For example, the output destination is set to a predetermined memory area in a host computer or external file server. Display control data, image data, or printing data in a PDF file or the like is generated by an application or driver and output without any printing processing. Even in this case, pieces of job information may be recorded or accumulated.","The system may include an image forming apparatus which does not correspond to job information collection. In use of such image forming apparatus which does not support job information collection, abnormal job information may be created.","In this manner, when pieces of various job information are collected, desired job information cannot be managed at high precision.","The present invention realizes high-precision job information management.","An aspect of the present invention provides a mechanism of determining in accordance with the driver whether to record or accumulate job information, and recording or accumulating job information corresponding to the output destination of a job. Another aspect of the present invention provides a mechanism of determining in accordance with the output destination whether to record or accumulate job information, and accumulating or recording job information of a desired driver.","To achieve the above features, as a method according to the present invention, an information processing method of managing job information on a job issued from an information processing apparatus to an image forming apparatus is comprising: an acquisition step of acquiring the job information from the information processing apparatus or the image forming apparatus, a determination step of determining whether to record the job information acquired in the acquisition step, and a recording step of recording the job information determined in the determination step to be recorded.","As another method according to the present invention, an information processing method of recording or accumulating job information on a job issued from an information processing apparatus connectable to an image forming apparatus is comprising: an acquisition step of acquiring the job information from the information processing apparatus or the image forming apparatus, a determination step of determining whether to record or accumulate the job information acquired in the acquisition step, in accordance with an output destination of a job corresponding to the job information, and a recording\/accumulation step of recording or accumulating the job information determined in the determination step to be recorded or accumulated.","Other features and advantages of the present invention will be apparent from the following description taken in conjunction with the accompanying drawings, in which like reference characters designate the same or similar parts throughout the figures thereof.","A preferred embodiment of the present invention will now be described in detail with reference to the drawings. It should be noted that the relative arrangement of the components, the numerical expressions and numerical values set forth in these embodiments do not limit the scope of the present invention unless it is specifically stated otherwise.","<System Configuration>",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 1A"},"The information processing system includes at least one first information processing apparatus, at least one second information processing apparatus, and at least one image forming apparatus.  illustrates client computers  to  as the first information processing apparatuses, a server computer  as the second information processing apparatus, and as the image forming apparatuses, printers  to , a facsimile apparatus, copying apparatus, and an MFP (MultiFunction Printer) which has these multiple functions.","These apparatuses are connected by a local area network (to be simply referred to as a network)  constructed by Ethernet\u00ae or the like, and can communicate with each other.","The client computers  to  are used by users. The server computer  is a control computer which manages and remote-controls the client computer , printer , and the like on the network . The difference between the client computers  to  and the server computer  is not a hardware one, but whether to execute a job account client program (to be referred to as a job account client hereinafter) or whether to execute a job account server program (to be referred to as a job account server hereinafter).","As will be apparent from the following description, the server computer  is managed by the administrator, and the users of the client computers  to  and the like need not recognize the presence of the server computer .",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 1A","b":"3000"},"Although this system may include various types of image forming apparatuses, this embodiment will exemplify the printers  to .","The printer  has a function of printing data received from the client computers  to , but does not have any function of outputting job information of the printer  to an external device.","In addition to the function of the printer , the printer  has a function of notifying the client computers  to  of printing results such as the total number of delivery pages of a job at the end of the job.","The printer  has a function of storing job information in the printer memory after printing and outputting the job information in accordance with a request from the server computer .","The server computer  records the job log of a client computer via the network , and selects a specific job log in accordance with a request from a user who wants to browse it. Further, the server computer  performs accumulation processing for unit period, each device, each job-issuing user, or the like.","In this embodiment, TCP\/IP is used as the protocol of the network , but any protocol can be adopted as far as the following functions are realized.","<Software Configuration of System>",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 1B"},"Each of the client computers  to  includes an application , hook module , GDI  (subsystem which processes graphic drawing), printer driver , spooler , transmission\/reception module , and job account client .","Of these components, the application  includes an image processing application which receives and processes image data, and a wordprocessor application which creates document data. The application  runs on an operating system (not shown). The GDI  and transmission\/reception module  are modules included in the operating system. The printer driver  is a program prepared by the printer manufacturer in accordance with the printer controlled by each of the client computers  to . The printer driver  interfaces the application  and printers such as the printers  to . The spooler  is a temporary memory area ensured by the printer driver .","The server computer  includes a job account server . The job account server  includes a job log merge module , job log storage module , job log reception module , job log accumulation module , ID generation module , and non-processing target database .","Operations in the client computers  to  and server computer  will be explained.","In the client computers  to , when a printing command is issued to the application , the application  makes a GDI call for drawing.","The hook module  is installed together with the job account client . The hook module  hooks (monitors and recognizes) a GDI call, and accumulates pieces of information on the correspondence between a GDI call and a parameter and the number of calls. For example, the hook module  counts page breaks or delivery APIs (Application Programming Interfaces) to acquire the number of delivery sheets or pages of a job issued from the application . The hook module  transfers a log created on the basis of the information as a hook log  to the job account client . The hook module  can also change a document name on the basis of a predetermined determination criterion. A document name and change processing will be described later.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 7","b":["111","1001","1003"]},"Referring back to , the printer driver  converts the GDI call into printing data interpretable by the printer in accordance with printing settings, and transfers the printing data to the spooler . The printer driver  extracts printing information from the converted contents, and transfers the extracted information as a driver log  to the job account client .",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 8","b":["112","112","112"]},"For example, 2-up printing processing of four logical pages by double-sided printing results in two physical pages. The physical pages are printed on the upper and lower surfaces of a paper sheet, and one paper sheet is delivered. The first and second logical pages are printed on the upper surface, whereas the third and fourth logical pages are printed on the lower surface.","Referring back to , the job account client  periodically monitors the spooler. If a spooled job exists, the job information is acquired by an API, thus acquiring the number of delivery sheets or pages of the job. The acquired job information is transferred as an API log  to the job account client .",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 9","b":["113","113"]},"The transmission\/reception module  communicates with any printer such as one of the printers  to  that is designated by the application. If the printer is ready, the transmission\/reception module  transmits printing data. At this time, if, for example, a PrinterJobLanguage (printer job language) command available from HP is used, the number of pages delivered by a printing job can be acquired after delivery of all pages of the job is completed in the printer . The transmission\/reception module (port monitor)  transmits to the job account client  job information such as the number of pages received from the printer . A printing log created on the basis of this information will be called a monitor log .",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 10","b":["114","114","114","108"]},"The hook log , driver log , API log , and monitor log  ensure an area for storing flag information representing whether the job has been processed and information representing the type of log.","The job account client  serving as a software module which is executed in the CPU of the client computer includes a job log merge module  and job log transmission module  in order to collect logs concerning various printing processes and transmit the logs to the job account server .","The job log merge module  in  merges the hook log , driver log , API log , and monitor log . In general, every time merge processing ends, the job log merge module  transmits a merge log  to the job log transmission module .  is a table showing an example of the merge log  when the logs shown in  are merged. As shown in , the merge log  has the items of the hook log , driver log , API log , and monitor log .","The job log transmission module  transmits the log to the job log reception module  periodically or in accordance with a request from the job log reception module . At this time, the job log transmission module  may control the transmission\/reception module  provided by the OS and transmit the log to the job log reception module . The job account client  can set a priority order of selecting which of the hook log , driver log , API log , and monitor log , and transmit any log to the job account server .","The operation of the job account server  will be explained.","The job log reception module  acquires and accumulates a job sent from the job log transmission module . When a network printer such as the printer  which internally stores job information exists on the network, the job log reception module  can acquire job information as an device log  directly from the printer by defining a protocol to the printer and communicating with the printer. More specifically, the printer  is periodically polled, and if unacquired job information exists, the job information is acquired as the device log . The device log  is stored in the RAM or HD of the printer , but it is not desirable to store all pieces of information such as a document name transmitted from the transmission\/reception module  to the printer owing to limitations on the memory capacity.  is a table showing an example of the device log  when a job is transmitted to the printer  from a client computer in which the hook module  runs.  is a table showing another example of the device log  when a job is transmitted to the printer  from a client computer in which no hook module  runs.","The job log merge module  merges the device log  and the merge log  which is sent from the job account client, generating a final log .  is a table showing an example of the final log  when the merge log  shown in  and the device log  shown in  are merged.","The job log storage module  receives the final log  from the job log merge module , looks up the non-processing target database , and if the final log  is not a non-processing log, stores the final log  in an HD  or the like. The job log accumulation module  performs accumulation processing of obtaining the number of printing pages per unit period, or obtaining the number of printing pages for each owner in accordance with an instruction from the user. The job account server  controls processing of displaying the accumulation result on a CRT serving as the display of the server computer .","The ID generation module  generates an ID for uniquely identifying the client computers  to . The ID generation module  changes a character string of four digits which can take  values from  to z at each digit, sequentially from aaaa, aaab, . . . , zzzy, zzzz in accordance with a request from the hook module , and issues the character string so as to uniquely identify the client. In this case, a new document name is created using a combination of a host and job ID. Alternatively, a unique new document name (to be described later) in the whole printing system may be issued in the job account server in a unified way.","In the client computers  to , four logs, i.e., the hook log , driver log , API log , and monitor log  are created for one printing job. However, the four logs cannot always be acquired. For example, if the application  directly sends printing data to the spooler , the hook log  and driver log  cannot be acquired. If no protocol is defined between the printer driver  and the job account client , the driver log  cannot be acquired. In the absence of a function of notifying the transmission\/reception module  of the number of delivery pages, unlike the printer , delivery page information of the monitor log  cannot be acquired. However, even if log acquisition is impossible in some processes, the possibility of acquiring logs increases by acquiring logs in a plurality of processes concerning the job.","In this information processing system, whether to record or accumulate logs serving as pieces of job information acquired from the client computers  to , printer , and the like is determined on the basis of the log generation process (port information and driver information). Only a log determined to be recorded is recorded in the server computer . Alternatively, the job account server  having the accumulation function in the server computer  may record all pieces of acquired job information. After that, an accumulation target job which is corrected as a charging target or as a sheet counting job may be determined from all pieces of recorded information. The job account server  may extract job information determined to be accumulated from the job information database. Determination processing can employ all criteria for determining whether to record job information.","<Hardware Configuration of Each Computer>",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 2","b":["1001","1003","2000","1001","1003","2000"]},"In , reference numeral  denotes a CPU (Central Processing Unit) which performs control of the overall computer, arithmetic processing, and the like. Reference numeral  denotes a ROM (Read Only Memory) serving as a memory area for system startup program information and the like. Reference numeral  denotes a RAM (Random Access Memory) serving as a data memory area without any use limitation. Reference numeral  denotes a KBC (KeyBoard Controller) which receives input data from a keyboard and transmits it to the CPU . Reference numeral  denotes a display controller which controls display on a CRT or liquid crystal display. Reference numeral  denotes an HD (Hard Disk). The HD  stores a program and data, and if necessary in execution, looks them up or loads them to the RAM . Reference numeral  denotes a communication unit used to communicate with another computer or peripheral device connected to the network. The communication unit  is controlled by the transmission\/reception module  in , job log transmission module , or the like. Reference numeral  denotes a system bus serving as a data path between these hardware components.","An operating system, a communication control program, and software modules such as the application , hook module , GDI , printer driver , transmission\/reception module , and job account client , shown in  are loaded from the HD  or ROM  to the RAM , and executed by the CPU .","Another memory device may be adopted instead of or in addition to the HD  shown in . An example of such memory device is a nonvolatile memory.","<Hardware Configuration of Each Printer>",{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 3","FIG. 3"],"b":["108","110","305","305","301","302","303","304"]},"The CPU  is a central processing unit which performs control of the whole printer, arithmetic processing, and the like. The ROM  is a read-only memory which includes a memory area for system startup program information and the like. The RAM  is a random access memory which includes a data memory area without any use limitation. The HD  is a hard disk which includes a memory area that ensures a program or data that may be rewritten even after the printer is powered off.","The RAM  has a memory-area in which an operating system or a program for communication control or engine control is loaded and executed. A print engine  performs printing operation and image read operation under the control of the controller. A communication unit  communicates with the client computer or server computer via the network. An operation unit  is used to perform interactive setting operation with the user. A system bus  serves as a data path between these building components.","<RAM Structure and Implementation Method of Server Computer>",{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 4","b":["40","203","1000"]},"In the server computer , a basic I\/O program , an operating system , and the application  are loaded to the RAM  so as to be able to execute them, as shown in . In addition to these programs, the RAM  of the server computer  stores related data  generated as a result of execution by the application . Further, a work area  used by another program is prepared.","The software configuration of the server computer  as shown in  can be realized by externally installing the job account server . As an installation method, the job account server  can be downloaded via a network such as the Internet, or installed from a portable detachable storage medium.","For example, as shown in , a CD-ROM  is loaded to a CD-ROM drive  of the server computer . In this case, as shown in , volume information , directory information , an execution file , and a related-data file  are recorded in a memory area  of the CD-ROM .","The execution file  includes the installation program of the job account server .","When the CD-ROM  is set in the CD-ROM drive , the execution file  is executed under the control of the operating system  and basic I\/O program . Related data such as a program module for realizing the job account server  is read out from the CD-ROM  and stored in the HD . The program module for realizing the job account server  includes the modules  to  shown in .","The storage medium is not limited to a CD-ROM, and may be a DVD, FD, or the like.","<Operation of Hook Module>",{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 15","b":"103"},"In step S, the hook module  acquires, by a predetermined device management protocol, information representing whether the destination printer comprises a device log, and determines whether the destination printer comprises a device log. If YES in step S, the processing advances to step S; if NO, the processing ends.","In step S, the hook module  determines whether the client ID has already been acquired. If YES in step S, the processing advances to step S; if NO, to step S. The client ID is identification information which is issued from the ID generation module  and can uniquely identify the client computers  to . In step S, the hook module  communicates with the ID generation module , and acquires from the ID generation module  an ID for uniquely identifying a client computer.","In step S, the hook module  creates a client job ID for uniquely specifying a job in a client computer. At this time, numerical values from 0001 to 9999 are sequentially issued.","In step S, the hook module  merges the client ID which is determined in step S to have been acquired and the client job ID created in step S, thereby creating a new document name as an example of new identification information which is uniquely determined in the printing system.","In step S, the hook module  stores an original document name transferred from the application in a hook log item \u201coriginal document name\u201d. In step S, the hook module  replaces the document name with the new document name in step S. As a result, the new document name is transferred as a document name to the GDI. Processes in the printer driver , spooler , transmission\/reception module , and printer  subsequent to GDI processing are preferably executed using the new document name as the document name.","The new document name is created because it is difficult to directly use the job ID as a merge processing key in merging job information acquired from a printing apparatus. For example, some of specifications of the job management system are not disclosed. When account server A developed by company A is used, the account server developed by company A cannot acquire any job ID from a printer developed by company B in many cases. That is, even if job information is acquired from a printer corresponding to an unassumed job management system, the job information does not contain a job ID in many cases, and cannot be merged and utilized. However, a document name which is created by the OS or application of a client computer and transmitted to a printer can be often acquired as job information.","For this reason, a document name which can be managed by a client and acquired as a job information key from a printer instead of the job ID may be managed as identification information. However, direct use of a conventional document name poses a problem. The OS or application of a client can generally manage a document name of more than eight characters, and a document name of up to  characters can be assigned in a generally used OS. The printer can manage up to eight characters, as described above. In general, the document name which can be adopted in the job management system can be formed by up to eight characters. When the client assigns a document name of more than eight characters, jobs having the same document name may confusedly coexist in the printer though their document names assigned by the OS or application of the client are different. To prevent this, a host ID is issued from the account server, and used in combination with a document name issued from the client.","As a result, a new document name which is managed within eight characters by the account server and uniquely determined in the printing system including the client computer and printer is completed. The new document name can be used to identify a job, in place of the job ID. Once a new document name is generated on the client side, the document name can be utilized as a job identifier in the printer, client, and account server.","<Operation of Job Log Merge Module in Client>",{"@attributes":{"id":"p-0096","num":"0095"},"figref":"FIG. 11","b":"116"},"The job log merge module  receives logs such as the hook log , driver log , API log , and monitor log , and records the contents on the HD  or the like. The job log merge module  periodically executes the following processing in a preset period, and performs merge processing for each job. In this embodiment, logs are merged (merge processing) using a job ID as a key. Logs may be merged using a document data name or new document data name (to be described later).","In the following processing, the job log merge module  specifies the earliest start time and latest completion time among start times represented by entries of pieces of start time information and completion time information which are contained in the hook log, driver log, API log, and monitor log. Each time information is stored as job information merged by merge processing, as described above.","In step S, the job log merge module  searches for and specifies a monitor log (see ) whose \u201cprocessed\u201d flag has not been set to YES, i.e., an unprocessed monitor log. If an unprocessed monitor log exists, the processing advances to step S.","In step S, the job log merge module  copies in another temporary memory area the monitor log which is determined in step S to have not been processed, and sets this log as log A.","In step S, the job log merge module  acquires a job ID from log A. In step S, the job log merge module  determines whether a log not subjected to merge processing yet, i.e., an unprocessed log exists in logs corresponding to the job ID acquired in step S, by searching for and specifying the logs of the hook log, driver log, and API log on the basis of the job ID. If NO in step S, the processing ends; if YES, the job log merge module  advances to step S to determine the presence of a log having the same job ID as the job ID (in this case, N for descriptive convenience) which is determined in step S to have not been processed, by searching the logs of the hook log , driver log , and API log  to specify the target log on the basis of the job ID. The job log merge module  then sets this log as log B.","If a log having the same job ID as N does not exist in the logs of the hook log , driver log , and API log  in step S, the processing advances to step S. If a log having the same job ID as N exists in any log in step S, the processing advances to step S. In step S, for example, N is set by specifying job IDs contained in unprocessed log A sequentially from a smaller ID.","In step S, the job log merge module  determines whether any of items in log B does not exist in log A, for each item (job information contained in each log acquired for the job ID \u201cN\u201d) of the log which is specified in step S and corresponds to the job ID \u201cN\u201d of log A. As for the items of the job ID \u201cN\u201d in log A, if log A is determined in step S to have all the items in log B, the job log merge module  performs processing in step S. If log A is determined in step S not to have a given item in log B, the job log merge module  advances to step S to add the item of log B that does not exist in log A to the items of the job ID \u201cN\u201d in log A, and merge data stored in log A. The \u201cprocessed\u201d flag of the merge log  created by adding the item of log B to log A is set to \u201cYES\u201d, and the processing advances to step S. After that, the type item of the merge log is set to \u201cmerge\u201d.","In step S subsequent to step S, if processing is determined to have been completed for all the job IDs of log A, the processing ends.","<Operation of Job Log Merge Module in Server>",{"@attributes":{"id":"p-0105","num":"0104"},"figref":"FIG. 16","b":["123","128"]},"In step S, the job log merge module  searches for an unprocessed merge log. If YES in step S, the processing advances to step S; if NO, the processing ends.","In step S, the job log merge module  determines whether the printer has a device log. If YES in step S, the processing advances to step S; if NO, to step S.","In step S, the job log merge module  searches for and determines an unprocessed device log whose document name item is the same as that of the merge log in step S. If YES in step S, the processing advances to step S; if NO, the processing ends. In step S, the job log merge module  replaces or adds the numbers of delivery pages and sheets of the device log with or to the merge log.","In step S, the job log merge module  replaces a document name and original document name. In the example of , \u201cdocument name: 2001 annual report, original document name: abcd0001\u201d.","In step S, the job log merge module  deletes the original document name of the merge log  to create the final log . In step S, the job log merge module  transfers the final log  to the job log storage module .","<Operation of Job Log Storage Module>",{"@attributes":{"id":"p-0111","num":"0110"},"figref":"FIG. 18","b":"124"},"In step S, the job log storage module  acquires a port name and printer driver name from the final log  (see ) which is merged by the job log merge module . In step S, the job log storage module  looks up the non-processing target database, and determines whether the non-processing target database contains the port name and printer driver name acquired in step S. In condition determinations of steps S and S, if either the port name or printer driver name is contained in the non-processing target database, the job log storage module  does not record the final log . If NO in steps S and S, the processing advances to step S to record the final log . The final log  is then subjected to accumulation by the job log accumulation module .","The port includes both logical and physical meanings. In many cases, the port is a connection point in a computer at which a device for exchanging data with the computer can be connected. For example, a parallel port (also called an LPT port in some OSs) or TCP\/IP port is created to allow connecting a printer. Some OSs can generate, as a logical port, a set of a driver, the IP address of an output destination printer, and a utility program for exchanging printing data packets. In this embodiment, job information can be acquired for each output destination printer, and job information can also be acquired for each logically created port as an output destination port. In other words, whether to acquire job information can be set for each set of an output destination such as a printer and a control program capable of printing by the printer set as the output destination.","A port name containing, e.g., the IP address of the client computer  is set for the job account server  as the output destination of a port whose job information is excluded from an accumulation or recording target. When information which is contained in job information and represents an output destination is, e.g., an IP address, e.g., port name (network identifier) in  assigned to a computer having no printing apparatus, the job account server  is controlled not to record or accumulate job information. The computer name of the client computer  can also be designated as a determination criterion for excluding job information from an accumulation or recording target. To the contrary, when the output destination is a peripheral device such as a printer having a printing function, job information can be recorded or accumulated unless the peripheral device is set as the output destination of a port whose job information is excluded from an accumulation or recording target. In this manner, the job account server  can achieve high-precision management such that counting or charging of paper sheets is done for a job actually output to a printer or the like, and counting or charging of paper sheets as an example of accumulation is not done for a job which is not actually output.","If a final log is created using a port or printer driver not subjected to accumulation, the final log is not accumulated.","<Registration\/Delete Processing of Non-Processing Port\/Driver>",{"@attributes":{"id":"p-0116","num":"0115"},"figref":"FIG. 19","b":["129","2000"]},{"@attributes":{"id":"p-0117","num":"0116"},"figref":"FIGS. 20 and 21","b":["129","2000"]},"In step S of , a key input on the processing menu from the user is accepted. In step S, which of port registration\/delete processing, printer driver registration\/delete processing, and end processing has been selected is determined.","In the dialogs shown in , which of a port tab , driver tab , OK button , and cancel button  has been selected is determined. If the port tab  has been selected, the processing advances to step S to display a list of non-processing ports, as shown in . If the driver tab  has been selected, a list of non-processing drivers is displayed in step S, as shown in . The entities of port names and driver names are registered in the registry.","In , port names such as \u201c160.40.38.4\u201d, \u201c177.51.20.33\u201d, \u201cFAX\u201d, and \u201cNS_FAX\u201d are displayed in a registration port column . In this state, if a port name is input in a port name input column  in step S, the processing advances to step S. As a port name input method, a port name is directly input in the input column , and an update button  is selected. Alternatively, an add button  is clicked to separately display a list of available port names, and a non-processing port name is selected from the list. In step S, whether to update, add, or delete a port is determined. If the add button  or update button  has been clicked, the processing advances to step S to add or update a non-processing port name to the registry. If any port name has been selected from the registration port column  and then a delete button  has been clicked, the processing advances to step S to delete the selected port name from the registry. In step S, the changed registration port column  is displayed again. Also in the state shown in , a non-processing printer driver name is similarly added, updated, or deleted by a series of processes in steps S to S.","If the OK button  is selected in  or , a registered\/deleted port or driver becomes valid. If the cancel button  is selected, registration\/delete processing becomes invalid, and the processing ends.","By this processing, a port name \u201cIP10.166.30.2\u201d and a printer driver name \u201cAcrobad writer 3.0\u201d are acquired as the driver log , as shown in , and merged into the final log , as shown in . However, when \u201cAcrobad writer 3.0\u201d is registered as a driver name not subjected to job information accumulation processing, the final log is not subjected to accumulation processing, and is not recorded in the server computer . \u201cAcrobad writer\u201d is a data generation program which generates printing or display data of a PDF format, as a preferable example of a driver according to the present invention. The present invention has exemplified \u201cAcrobad writer\u201d, but can be applied to any application or device driver which can generate printing or display control data in order to output data to a file serving as a predetermined memory area in the client computer  or a network file server (not shown) serving as an output destination.","The non-processing target database may be set in each of the client computers  to . In this case, whether the port or printer driver is a non-processing target is determined in the job log transmission module . In step S, the merge log  is transmitted to the job log reception module . If the client computers  to  perform determination, unnecessary job information need not be transmitted to the server computer , reducing the communication load of the network.","Alternatively, the server computer  may register or delete a non-processing port or printer driver, and transfers information on the determined non-processing port or printer driver to the client computers  to . In this case, the dialogs in  are displayed by the server computer , processing shown in the flow chart of  is also executed by the server computer , and processing shown in the flow chart of  is performed by the client computers  to .","When port names or printer driver names are registered\/deleted by the server computer  and client computers  to , the port names or printer driver names may be merged.","As has been described above, according to the present invention, a port name or printer driver name not subjected to log accumulation can be registered and compared with the port name or printer driver name of an obtained job log, thus preventing accumulation of a non-processing job log. Accumulation of a log concerning an image forming apparatus which does not support information accumulation and is expected to create an improper log can be prevented, realizing accurate job counting.","This embodiment adopts the non-processing target database , and job information on a registered port name or printer driver name is not recorded. The present invention is not limited to this, and the name of a port or printer driver subjected to job information accumulation may be registered in the database. In this case, a final log is recorded when both the port name and printer driver name exist in condition determination processes in steps S and S of .","As described above, this embodiment can increase the job information management precision.","A non-processing port name or printer driver name in the embodiment is registered in the registry. A non-processing port name or printer driver name may be registered in a file or database, and the file or database may be accessed in determining whether the port name or printer driver name is to be registered, deleted, or processed.","Processing shown in the flow chart of  in the embodiment and each module shown in  are executed by each computer in accordance with an externally installed program. Pieces of information including the program are supplied to a client computer from a storage medium such as a CD-ROM, flash memory, or FD, or from an external storage medium via a network. Also in this case, the present invention is applied.","The object of the present invention is also achieved when a storage medium which stores software program codes for realizing the functions of the above-described embodiment is supplied to a system or apparatus, or the software program codes are downloaded from an external server (not shown), and the computer (or the CPU or MPU) of the system or apparatus reads out and executes the program codes stored in the storage medium.","In this case, the program codes such as job account server and job account client programs read out from the storage medium realize a new functions of the present invention, and the storage medium which stores the program codes constitutes the present invention. The storage medium for supplying the program codes includes a floppy disk, hard disk, optical disk, magnetooptical disk, DVD, CD-ROM, magnetic tape, nonvolatile memory card, ROM, and EEPROM.","The functions of the above-described embodiment are realized when the computer executes the readout program codes. Also, the functions of the above-described embodiment are realized when an OS (Operating System) or the like running on the computer performs part or all of actual processing on the basis of the instructions of the program codes. Furthermore, the present invention includes a case where, after the program codes transmitted from a predetermined external server apparatus (not shown) via a network or read out from the storage medium are written in the memory of a function expansion board inserted into the computer or the memory of a function expansion unit connected to the computer, the CPU of the function expansion board or function expansion unit performs part or all of actual processing on the basis of the instructions of the program codes and thereby realizes the functions of the above-described embodiment.","As many apparently widely different embodiments of the present invention can be made without departing from the spirit and scope thereof, it is to be understood that the invention is not limited to the specific embodiments thereof except as defined in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 2","FIGS. 1A and 1B"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 3","FIGS. 1A and 1B"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 4","FIGS. 1A and 1B"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 21"}]},"DETDESC":[{},{}]}
