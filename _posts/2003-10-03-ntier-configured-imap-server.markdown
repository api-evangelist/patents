---
title: n-Tier configured IMAP server
abstract: An n-tier configured Internet Message Access Protocol (IMAP) compliant mail server. A collaborative messaging application can include an IMAP compliant mail server configured for operation within an n-tier enterprise environment provided by an application server. The collaborative messaging application also can include a markup language driven interface to the IMAP compliant mail server disposed within a Web container in the application server. A data store can be configured to store messages process by the IMAP compliant mail server. Finally, a directory can be configured to provide configuration and addressing data to the IMAP compliant mail server. Importantly, the IMAP compliant mail server can include a set of platform independent classes programmed for execution in a virtual machine and specifically operable in the n-tier enterprise environment. In particular, the virtual machine can be a Java virtual machine and the n-tier enterprise environment can include J2EE.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08195773&OS=08195773&RS=08195773
owner: International Business Machines Corporation
number: 08195773
owner_city: Armonk
owner_country: US
publication_date: 20031003
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Statement of the Technical Field","The present invention relates to the field of Internet messaging and more particularly to an Internet Message Access Protocol (IMAP) server implementation.","2. Description of the Related Art","Messaging clients and in particular, electronic mail (e-mail) clients include numerous options for managing, manipulating and viewing e-mail. Conventional e-mail clients include a simplified interface designed both to enhance the end-user experience and also to facilitate mail administration while reducing support costs. Through the conventional e-mail client, end-users can configure and store personal preferences, compile bulk mailing lists, archive and back up mail, and even create filters and drop spam into virtual wastebaskets. By providing end users with feature-rich e-mail clients, administrators can relieve themselves of many duties traditionally given to the \u201cpostmaster.\u201d","Modern e-mail clients predominantly include but two \u201cflavors\u201d: clients which comport to the Post Office Protocol (POP), and clients which implement the Internet Message Access Protocol (IMAP). Both POP and IMAP compliant e-mail clients can access e-mail in online, offline and disconnected modes In an offline mode, e-mail can be received and stored on a shared server and forwarded on demand to a mail client on a remote computer. Notably, the POP protocol originally had been designed for use in an offline mode. In this regard, once an e-mail has been downloaded, or \u201cPOPped,\u201d it can be removed from the mail server, and all future processing in respect to the e-mail can occur within the machine hosting the e-mail client.","Given its simplicity, the POP protocol has won the hearts and minds of many a road warrior, yet for truly unlimited access to one's e-mail, the POP protocol can be deficient and the IMAP protocol will be required. In the IMAP protocol as defined by RFC 3501, e-mail clients access e-mail folders online and manipulate them on a remote server as if the e-mail folders were a local resource. Users can create, delete and rename message folders, or \u201cmailboxes,\u201d check for new messages and permanently remove messages. IMAP, like POP, provides for RFC 822 and MIME parsing and searching, and it adds support for selective download of message attributes, text and attachments. IMAP also works in disconnected mode (IMAP-DISC), in which a mail client downloads a set of messages from the server, manipulates them offline, then reconnects to the server and synchronizes changes. Nevertheless, unlike POP, in all cases in IMAP the e-mail server remains the authoritative message store.","It will be recognized by the skilled artisan that e-mail clients, whether POP or IMAP compliant, no longer can be viewed exclusively as ordinary desktop applications. Rather, e-mail clients must be viewed as part and parcel of a business-critical messaging system. Consequently, twenty-first century e-mail clients are embodied within a full thirty-two bit application which can provide quick and easy access to incoming e-mail, myriad features available from pull-down menus, and extensive right-click context menus that provide multiple options on selected resources. Drag-and-drop functionality and keyboard shortcuts are also common. Moreover, the modern, stand-alone e-mail client can provide extensive message-filtering capabilities to manipulate e-mail automatically and reply to messages with auto-responses. Built-in e-mail client features also allow the end-users to create and send bulk e-mail from precompiled lists stored in text files and provide options for dealing with unsolicited bulk e-mail known commonly as \u201cspam\u201d.","Despite the advancement of the e-mail client, recent trends in computing require the further development of the e-mail client and its integration into the n-tier enterprise. In particular, enterprise computing has begun to embrace the notion of collaboration between multiple users resulting in the rise of collaborative software. In the collaborative software environment, multiple users are grouped together logically in an environment in which documents can be shared and manipulated by the users, users can participate in online conferences and in instant messaging, and users can experience computer based training, or \u201ce-Learning\u201d. Thus, messaging can form an important portion of the foundation of collaborative computing.","To date, less than a handful of collaborative computing applications have incorporated IMAP based messaging within the structure of the collaborative computing application. In particular, while IMAP configured e-mail clients have become prevalent, a IMAP configured servers seldom have been included as part and parcel of the collaborative computing application. In those circumstances where a collaborative application has been configured with an IMAP server, the IMAP server literally has been \u201cbolted\u201d onto the collaborative application in a client-server manner and lacks the scalability required by the modern enterprise architecture including the J2EE\u2122 based enterprise environment. Accordingly, traditional collaborative computing applications have not been able to capitalize upon the advantages of IMAP while retaining the scalability associated with the n-tier architecture of J2EE.","The present invention addresses the deficiencies of the art in respect to enterprise messaging in the collaborative computing and provides a novel and non-obvious IMAP server configured for n-tier integration with a collaborative computing platform. In accordance with the present invention, an IMAP server can be composed as a collection of platform independent classes which can be executed within a virtual machine. The IMAP server can be programmed for integration with a collaborative application configured for operation within an application server. Additionally, the IMAP server can be communicatively coupled to a data store of messages and can respond to IMAP requests to manage messages in the data store. Importantly, the IMAP server can interact with the application server to authenticate IMAP clients. Moreover, the IMAP server can interact with the collaborative application to implement auto-provisioning of the IMAP server.","Notably, the architecture of the collaborative application can mimic that of the application server. To that end, the collaborative application can include a set of mail-server cells, each cell servicing a data store of messages. In the collaborative messaging system, a mail server cell can include a logical grouping of application server nodes disposed within the application server. An IMAP compliant mail server can be coupled to the logical grouping of application server nodes. Finally, at least one data store can be configured for storing electronic mail messages processed in the IMAP compliant mail server.","The IMAP compliant mail server can include a simple mail transfer protocol (SMTP) inbound request handler, an SMTP outbound request handler, and a set of IMAP services coupled to the SMTP inbound and outbound request handlers. The IMAP compliant mail server also can include a set of platform independent classes operable in a virtual machine environment. In this regard, the virtual machine environment can be the Java virtual machine environment and the IMAP compliant mail server can comport with the J2EE specification.","In a preferred aspect of the invention, the IMAP compliant mail server can include a communicative coupling to authentication services provided through the application server. Also, the IMAP compliant mail server can include a communicative coupling to auto-provisioning services provided through the collaborative application. In this way, a new user can access the IMAP compliant mail server without first having pre-registered with the IMAP compliant mail server. Finally, the IMAP compliant mail server can include a communicative coupling to a portal\/portlet interface to the IMAP compliant mail server.","The IMAP compliant mail server can be disposed within a collaborative messaging application. Specifically, the collaborative messaging application can include an IMAP compliant mail server configured for operation within an n-tier enterprise environment provided by an application server. The collaborative messaging application also can include a markup language driven interface to the IMAP compliant mail server disposed within a Web container in the application server. A data store can be configured to store messages process by the IMAP compliant mail server. Finally, a directory can be configured to provide configuration and addressing data to the IMAP compliant mail server.","Importantly, the IMAP compliant mail server can include a set of platform independent classes programmed for execution in a virtual machine and specifically operable in the n-tier enterprise environment. In particular, the virtual machine can be a Java virtual machine and the n-tier enterprise environment can include J2EE. An administrative console can be coupled to a messaging administrative plug-in to the console facilitate management of the IMAP compliant mail server, the markup language driven interface, the data store and the directory. Moreover, authentication logic can be disposed within the application server and communicatively linked to the IMAP compliant mail server for use by the IMAP compliant mail server. Finally, auto-provisioning logic can be disposed within the collaborative messaging application and communicatively linked to the IMAP compliant mail server for use by the IMAP compliant mail server.","Additional aspects of the invention will be set forth in part in the description which follows, and in part will be obvious from the description, or may be learned by practice of the invention. The aspects of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims. It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention, as claimed.","The present invention is an IMAP server which has been programmed for integration with a collaborative messaging application within an application server. The IMAP server can include a platform independent collection of classes and can be configured to operate within a virtual machine. To that end, the IMAP server can be a Java\u2122 application which comports with the J2EE\u2122 specification. The IMAP server can be communicatively coupled to a data store of messages and can respond to requests to manage the messages through the collaborative messaging application. Additionally, access to the IMAP server can be regulated by authentication logic disposed within the application server.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","145","130","100","115","100","100"]},"The collaborative messaging application  can include a set of messaging service APIs  exposing the operation of both a POP server  and an IMAP server . Messages managed by the IMAP server  can be stored within a data store  and the messages can be managed and routed according to addressing and routing information disposed within the directory , for instance an LDAP compliant directory. Notably, the APIs  also can expose the operation of an SMTP message transfer agent  and a task scheduler . An user interface to the collaborative messaging application  can be provided to end users through a portal\/portlet interface  disposed within a Web container . In this way, enterprise messaging can be extended even to those end users who lack access to a dedicated e-mail client.","The administrative console  of the application server  can be extended with a messaging administration plug-in  through which the collaborative messaging application  can be managed. Common management tasks which can be performed through the messaging administration plug-in  can include the configuration of a mail cell and mail servers, the establishment and maintenance of accounts, and the creation of policies for controlling user access to application features. The management tasks further can include the establishment of e-mail size quotas, the scheduling of administrative tasks, the establishment of filters to prevent the misuse of the messaging system and the configuration of the collaborative messaging application  for use with the directory .","Significantly, the IMAP server , in addition to the collaborative messaging application , can include a collection of platform independent classes such as those developed according to the Java language specification. More particularly, the IMAP protocol can be implemented in strict compliance with RFC 3501 using the Java programming language to comport with J2EE rather than a third-generation programming language in order to permit the seamless operation of the IMAP server  within the application server  of the present invention. By avoiding the use of a third generation language such as C or C++ in creating run-time object code for the IMAP server , the collaborative messaging application  can provide higher levels of availability than messaging applications developed using third generation languages. In particular, by using platform independent classes rather than a platform specific compiled object, destructive memory operations can be minimized such as the running over of defined memory boundaries.","Importantly, the collaborative messaging application  can include an architecture substantially identical to that of the application server  itself. In this regard, the architecture of the collaborative messaging application  can include a logical grouping of application server nodes, mail servers and at least one associated data store. In more particular illustration,  is a schematic diagram of an mail server cell  configured for processing messaging requests in the IMAP server  of . Specifically, the mail cell  can include a set of IMAP client application server nodes A, B, C dedicated to serving a single data store  of messages.","A mail service application server node  further can be provided to process incoming and outgoing messaging requests  through the IMAP client application server nodes A, B, C. The mail service application server node  can include each of an SMTP inbound handler B and SMTP outbound handler C process coupled to a set of IMAP services  programmed in compliance with the IMAP protocol specification of RFC 3501. Optionally, the mail service application server node  also can include a set of POP services (not shown) to provide POP3 services to other POP3 client application server nodes (not shown) in the cell . Finally, an administrative console  can be provided through which the mail services of the cell  can be administered. As before, the entire cell  can be coupled to a primary LDAP directory  for addressing e-mail.","In operation, the IMAP server  of  once deployed in the application server  can manage incoming IMAP requests for IMAP messaging services in the collaborative messaging application . In more particular illustration,  is a flow chart illustrating a process for handling messaging requests in the IMAP server of . Beginning in block , the IMAP server can listen for an incoming connection. In decision block , when an incoming connection is detected, in block  an IMAP protocol handler instance can be created from a pre-configured IMAP protocol handler class.","Once the IMAP protocol handler instance has been created, in block  the instance can respond to client requests received over the connection. In this regard, the IMAP protocol handler class can be implemented as a state machine. The process can continue through decision block  until a request to close the connection is received. Once the connection has been closed, in block  the state machine can terminate and the instance of the IMAP protocol handler class can be destroyed in accordance with well-known principles in platform independent object-oriented programming.","The present invention can be realized in hardware, software, or a combination of hardware and software. An implementation of the method and system of the present invention can be realized in a centralized fashion in one computer system, or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system, or other apparatus adapted for carrying out the methods described herein, is suited to perform the functions described herein.","A typical combination of hardware and software could be a general purpose computer system with a computer program that, when being loaded and executed, controls the computer system such that it carries out the methods described herein. The present invention can also be embedded in a computer program product, which comprises all the features enabling the implementation of the methods described herein, and which, when loaded in a computer system is able to carry out these methods.","Computer program or application in the present context means any expression, in any language, code or notation, of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a) conversion to another language, code or notation; b) reproduction in a different material form. Significantly, this invention can be embodied in other specific forms without departing from the spirit or essential attributes thereof, and accordingly, reference should be had to the following claims, rather than to the foregoing specification, as indicating the scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute part of the this specification, illustrate embodiments of the invention and together with the description, serve to explain the principles of the invention. The embodiments illustrated herein are presently preferred, it being understood, however, that the invention is not limited to the precise arrangements and instrumentalities shown, wherein:",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 3","FIG. 1"]}]},"DETDESC":[{},{}]}
