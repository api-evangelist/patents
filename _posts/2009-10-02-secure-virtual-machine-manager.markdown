---
title: Secure virtual machine manager
abstract: Secure processing systems providing host-isolated security are provided. An exemplary secure processing system includes a host processor and a virtual machine instantiated on the host processor. A virtual unified security hub (USH) is instantiated on the virtual machine to provide security services to applications executing on the host processor. The virtual USH may further include an application programming interface (API) operable to expose the security services to the applications. A further exemplary secure processing system includes a host processor running a windows operating system for example, a low power host processor, and a USH processor configured to provide secure services to both the host processor and the low power host processor isolating the secure services from the host processor and the low power processor. The USH processor may also include an API to expose the security services to applications executing on the host processor and/or the low power host processor.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08996885&OS=08996885&RS=08996885
owner: Broadcom Corporation
number: 08996885
owner_city: Irvine
owner_country: US
publication_date: 20091002
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application claims benefit to U.S. Provisional Application 61\/102,198 filed Oct. 2, 2008, entitled \u201cSecure Virtual Machine Manager,\u201d which is incorporated herein by reference in its entirety.","This application relates generally computer security and more specifically to host-isolated security.","A typical personal computer (PC) includes a host, memory, and user input. The majority of PCs today run Windows on an Intel processor. These systems are referred to as Wintel systems. Wintel systems have security weaknesses that are popular targets for hackers. Therefore, vendors and users are continual trying to develop techniques to make these systems more secure.","Many systems, including Wintel systems, provide encrypted storage where the user and system can store data. When the system is at rest (i.e., data not being used), the data is protected in the encrypted storage. However, the data may be retrieved from the encrypted storage and used by an application running on the host. As soon as the data is removed from the secure storage, the data becomes vulnerable. This unsecure location is where sensitive data is attacked.","What is therefore needed are systems and methods for providing a host isolated security environment in which security services are run and data is stored in a secure trusted domain, isolated from the unsecure host.","The present invention will now be described with reference to the accompanying drawings. In the drawings, like reference numbers can indicate identical or functionally similar elements. Additionally, the left-most digit(s) of a reference number may identify the drawing in which the reference number first appears.","1.0 Architectural Embodiments","1.1 Hardware-Based Unified Security Hub","Many computer systems today include multiple processors. These multi processor systems present unique security challenges to administrators and users.  depicts a system  having dual host processors and a separate secure processor. System  includes three physical processors\u2014a host  for performing traditional windows processing, a host  for performing low power processing, and secure processor .","Host system  may be based on an Intel \u00d786 CPU  running a Windows operating system . Windows\u2014Intel systems are commonly referred to as Wintel systems. Host system  also may run one or more personal authentication processes  such as fingerprint matching and one or more data security applications  such as one time password verification and antivirus. Host system  may further include credential storage  for storing cryptographic materials such as keys.","Low power host system  may be based on an ARM processor  running a separate operating system (e.g., Linux) . Low power host system  is designed to handle low power processing applications (e.g., e-mail, web browsing). This enables system  to extend the battery life of the system by running certain applications on the low power host processor instead of the higher power Windows host processor. Low power host system  may also run personal authentication processes  such as fingerprint matching.","Secure processing system  is designed to perform secure processing for system . Security processing system  (designated as unified security hub (USH) system) includes a credential vault  and a secure processor (USH) .","Systems, such as system , have several limitations. First, these systems expose security credentials and security processes\/operations to open host resources. Therefore, sensitive security data and operations, particularly those on Host system , are exposed to Wintel based attacks. Additionally, security solutions are traditionally tied to a specific host. The dual host arrangement of system  requires two separate security schemes. This dual security scheme creates IT complexity because these two security schemes must be separately managed and increases the burden on user because a user must enroll credentials with each host, even though both hosts are included in the same system.","To address these issues, embodiments of the present invention isolate security from vulnerable host resources. These embodiments further make security services available to both hosts, thereby creating a consistent security scheme.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 2","FIG. 1"],"b":["200","200"]},"System  includes three separate physical systems\u2014host system  (e.g., normal windows processing), low power host system , and security processor system . In system , security related services are moved from the insecure host processing systems (, ) to the secure processing system . Secure processing system  is an adjunct processor that has the ability to store credentials and run application using those credentials. For example, secure processing system may support RSA one time password authentication, biometric authentication (e.g., fingerprint matching), and\/or other forms of user authentication. In this way, sensitive data never has to leave the secure boundaries of the secure processor system .","As shown in , secure processing system (USH system)  includes personal authentication processes  such as fingerprint matching and data security applications . Secure processing system  may also include antivirus applications, facial recognition applications, and\/or general purpose encryption. Secure processing system  also includes a credential vault  for secure storage of data such as cryptographic keys. As can be seen from , host system  and low power host system  no longer include any security related services or store any security related data.","In an embodiment, secure processor system  is directly connected to one or more user devices to . User device  may include a keyboard, a contactless smart card, a contacted smart card, or any other type of user input device. In this embodiment, when a user provides input via the user input device (e.g., types data using the keyboard), the secure processing system  makes a determination whether to send the data to the host. The direct connection to user devices may be utilized primarily (or solely) for user authentication. For example, if a user enters a password via the keyboard, the secure processing system  may keep the password data in the secure processing system and perform the user authentication within the secure processor. The secure processing system  may also determine whether to release the data input by the user to the host processor or the low power processor. In addition or alternatively, the secure processing system  may determine whether to encrypt the data input by the user prior to communication to the host processor or the low power processor.","1.2 Software Based USH",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIGS. 1 and 2","FIG. 3"]},"The exemplary system  of  includes a first virtual machine A, a second virtual machine B, an nth virtual machine , a hypervisor  (also referred to as a virtual machine manager), and a host system . Host system  includes one or more host processors , a host memory , and one or more additional hardware resources such as a serial AT attachment (SATA) and Ethernet device . Host system further includes a trusted platform module (TPM) .","Host processors  may comprise suitable logic, circuitry, and\/or code that may enable control and\/or management of the data processing and\/or networking operations associated with host system . Host memory  may comprise suitable logic, circuitry, and\/or code that may enable storage of data utilized by host system .","Trusted Platform Module (TPM)  is a secure cryptographic processor. For example, a TPM may be designed to meet the specifications defined by the Trusted Computing Group (TCG). TPM  may support authentication algorithms, encryption\/decryption algorithms, random number generation, and secure key and data storage. For example, TPM  may be utilized to store cryptographic keys when the keys are at rest in the system.","At a high level, a virtual machine such as virtual machines A, B, and  are representations of a machine in software. A virtual machine provides hardware independence for an operating system and\/or an application. Additionally, through the use of multiple virtual machines, applications (and\/or operating systems) can be made independent and isolated from each other. In , virtual machines A and B include an operating system A, B and one or more application A, B. In embodiments, operating system A and\/or operating system B are guest operating systems. A guest operating system is an operating system that would have run on a physical system separate from the hardware processor of system . Operating system A and operating system B may be the same operating system (e.g., Linux) or different operating systems (e.g., windows and Linux). Virtual machines A and B may also include virtualization of other hardware resources as depicted in .","Host system  may comprise suitable logic, circuitry, and\/or code that may enable data processing and\/or networking operations, for example. The host system  may support the operation of a first virtual machine (and first guest operating system), a second virtual machine (and second guest operating system), and an nth virtual machine via a hypervisor . The number of virtual machines or guest operating systems supported by the host system  need not be limited by the exemplary embodiment of . For example, two or more virtual machines and\/or guest operating systems may be supported by host system .","Hypervisor  may operate as a software layer enabling operating system virtualization of hardware resources in the host system . Alternatively, a hypervisor  may operate as a software layer that enables virtualization of hardware resources coupled to the host system (shown in ). The hypervisor may further enable data communication between virtual machines A, B, and  and the hardware resources of host system .","System  may also include a secure token . Secure token  may be a hardware peripheral device coupled to system . In an embodiment, secure token  is a USB dongle, smart card, or a similar device. The secure token  may be utilized with system  to provide secure storage for keys and\/or data.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["1","330","2","330","1","330","2","330","342","300","310"]},"A second level of virtualization is the virtual USH of virtual machine n . Virtual machine  includes USH  running on an embedded operating system . USH  may include a software credential vault, authentication services, and\/or other cryptographic services (e.g., encryption\/decryption). In an embodiment, virtual machine n may include a hypervisor monitor . This second level of virtualization provides added security because the virtual USH is isolated from other processes. In embodiments of system  including only a virtual USH, credentials, keys, and\/or other secure data are stored in whatever secure hardware is available on the machine (e.g., TPM  or secure token ). When a process is started, the secure data is pulled directly from the secure storage (e.g., TPM or secure token) into the virtual USH. The secure data is not exposed to the insecure host system.","Like the hardware-based USH discussed above in , in an embodiment, the software-based USH (virtual USH of virtual machine n  or the virtualization of USH in virtual machines  and  ) is directly connected to one or more user devices (not shown). User devices may include a keyboard, a contactless smart card, a contacted smart card, or any other type of user input device. In this embodiment, when a user provides input via the user input device (e.g., types something using the keyboard), the software-based USH makes a determination whether to send the data to the host. The direct connection to user devices may be utilized primarily (or solely) for user authentication. For example, if a user enters a password via the keyboard, the software-based USH may keep the password data in the software-based USH and perform the user authentication within the security boundary of the software-based USH. The software-based USH may also determine whether to release the data input by the user to the host processor or the low power processor. In addition or alternatively, the software-based USH may determine whether to encrypt the data input by the user prior to communication to the host processor or the low power processor.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 4","FIG. 4"],"b":["400","400","430","450","420","410"]},"In embodiments of the invention, virtual machine , virtual machine , hypervisor , and host system  are included in the same physical machine. A server  is coupled to these components via a communications network . Server  is a USH server providing secure storage and secure processing services (including secure backup). In an embodiment, server  includes a hardware-based USH.","Host system  includes one or more host processors , a host memory , and one or more additional hardware resources such as SATA and Ethernet device . Host processors  may comprise suitable logic, circuitry, and\/or code that may enable control and\/or management of the data processing and\/or networking operations associated with host system . Host memory  may comprise suitable logic, circuitry, and\/or code that may enable storage of data utilized by host system .","In , virtual machine  includes an operating system  (such as Windows) and one or more applications . Virtual machine  may also include virtualization of other hardware resources as depicted in .","Host system  may comprise suitable logic, circuitry, and\/or code that may enable data processing and\/or networking operations, for example. The host system  may support the operation of a first virtual machine  (and first guest operating system) and a second virtual machine  via a hypervisor . The number of virtual machines or guest operating systems supported by the host system  need not be limited by the exemplary embodiment of .","In the embodiment of , hypervisor  operates as a software layer that enables virtualization of hardware resources of server  coupled to the host system. The hypervisor may further enable data communication between virtual machines  and  and the hardware resources of host system  and USH server .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 4","b":["430","430","400","490","450","452","454","452","450","456"]},"2.0 Credential Vault API","In embodiments of the present invention, an application programming interface (API), referred to as the credential vault API (CV-API), is included to make the platform of secure features and services offered by a unified security hub (USH) described above available to any application.  depict block diagrams of systems including a credential vault API (CV-API), according to embodiments of the present invention.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 5A","b":["500","570","530","570","530","530","534","532"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 5B","b":["500","570","510","510","530","500","514","518","580"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 5C","b":"500"},"CV-API C and a USH running as a virtual machine , according to embodiments of the present invention. Virtual machine  may be further protected by a hypervisor (not shown). System C may include a host processor C, a TPM , and\/or a secure token .",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 6","b":["600","650","600","650","620","620"]},"The suite of secure services may include credential management services , provisioning services , cryptography services , authentication services , and secure processing . Credential management services  and provisioning services  are described in further detail in the discussion of  below.","System  may expose a range of cryptographic services to applications  via CV-API . The cryptography services may include symmetric and\/or asymmetric (public key) cryptography services. For example, cryptographic services may include block encryption\/decryption (AES, DES, etc.), stream encryption\/decryption (such as RC), and\/or other types of encryption\/decryption as would be known to a person of skill in the art. The cryptography services may also include digital signature services and cryptographic hash services. In embodiments of the present invention, cryptography services also include key management services (e.g., key creation, key revocation, and key encryption).","System  may also expose a range of authentication services to applications  via CV-API . The authentication services include, but are not limited to, biometric authentication (e.g., fingerprint matching), cryptographic authentication (e.g., one time password authentication), and password matching. Authentication services may also support contacted smart card and contactless smart card application. For example, one such smart card application is a human interface device (HID) authentication. As would be appreciated by persons of skill in the art, other secure services may be exposed via CV-API . In embodiments of the present invention, the USH provides a common authentication engine for the other domains (e.g., virtual machines) in the system or device.","In the hardware-based USH embodiment of , the security services of  are provided by firmware running on the USH. In the software-based USH embodiment of , the security services are provided by a USH software process.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 7","b":["750","750"]},"Common CV-API  provides a common API for utilizing different types of and a variety of authentication devices -such as biometric devices, contactless devices, and keyboards (from password perspective). One or more authentication devices -may be implemented in multiple hardware chips (referred to as a bag of chips). CV-API  provides a common software API to pull these disparate hardware components together.","CV-API  provides a single place for enrollment of credentials. During the enrollment process, information is collected about the user. As depicted in , one or more hardware devices  may utilize CV-API  for credential enrollment. Enrollment may be provided via an enrollment interface . Enrollment interface may be a component of CV-API  or may be provided as a separate software module. Hardware devices  may be authentication devices including, but not limited to, a biometric device (e.g., fingerprint), a contactless module, or a keyboard (e.g., from perspective of password entry). Once enrolled, the credentials can be requested by multiple applications.","CV-API  also provides a single place for provisioning of credentials. During the provisioning process, an application or device provisions one or more credentials to a credential container . The provisioning application or device may be a component of system  or may be external to system . Provisioning may be provided via a provisioning interface . Provisioning interface may be a component of CV-API  or may be provided as a separate software module.","The enrolled and\/or provisioned credentials are stored in credential containers .  depicts an exemplary credential container , according to embodiments of the present invention. A credential container includes an identifier  to identify the user associated with the credential. The credential container  includes also one or more credentials -(e.g., fingerprint template, RSA seed value, HID value) for the user. The credential container may also include or have associated with it a policy. The policy may be provided by a policy object. Policies can be defined for individual credentials, for a credential container, and\/or for multiple credential containers. A policy can be used to define authentication and\/or access control procedures to enforce for the credentials or a subset of the credentials.","A policy may be used to define what kind of authentication to apply and\/or an access control list to apply for the credential. For example, a policy may define how to handle a credential depending on whether the system is provisioning or enrolling to hardware or software. In this example, the policy may allow the user to decrypt and read the user's personal e-mail from any system. However, the policy may restrict access to attachments to systems that have a piece of hardware to protect the keys that decrypt the attachment.","Credential containers may be stored in a USH credential vault. In embodiments of the present invention, credential vault may be implemented in hardware or software. In alternate embodiments, such as software based USH embodiments, credential containers may be stored in a TPM or a secure token.","Returning to , CV-API  further provides a common interface for the provisioning of one or more credentials to one or more applications -. As illustrated in , via the CV-API, a credential can be enrolled once and utilized by multiple applications. For example, a user can enroll his fingerprint template once and multiple applications (e.g., file access application, web site access application, and password manager application) can utilize the enrolled template for authentication via fingerprint matching.","As illustrated by the above embodiments, multiple (or all) authentication inputs into the system or device such as a keyboard, a biometric device, or a HID reader can be pulled into a common location for processing.","3.0 Exemplary Computer Implementation","Various aspects of embodiments of the present invention can be implemented by software, firmware, hardware, or a combination thereof.  illustrates an example computer system  in which embodiments of the present invention, or portions thereof, can be implemented as computer-readable code. Various embodiments of the invention are described in terms of this example computer system . After reading this description, it will become apparent to a person skilled in the relevant art how to implement the invention using other computer systems and\/or computer architectures.","Computer system  can be any commercially available and well known computer capable of performing the functions described herein, such as computers available from International Business Machines, Apple, Sun, HP, Dell, Compaq, Digital, Cray, etc.","The computer  includes one or more processors (also called central processing units, or CPUs), such as a processor . The processor  is connected to a communication bus .","The computer  also includes a main or primary memory , such as random access memory (RAM). The primary memory  has stored therein control logic A (computer software), and data.","The computer  also includes one or more secondary storage devices . The secondary storage devices  include, for example, a hard disk drive  and\/or a removable storage device or drive , as well as other types of storage devices, such as memory cards and memory sticks. The removable storage drive  represents a floppy disk drive, a magnetic tape drive, a compact disk drive, an optical storage device, tape backup, etc.","The removable storage drive  interacts with a removable storage unit . The removable storage unit  includes a computer useable or readable storage medium A having stored therein computer software B (control logic) and\/or data. Removable storage unit  represents a floppy disk, magnetic tape, compact disk, DVD, optical storage disk, or any other computer data storage device. The removable storage drive  reads from and\/or writes to the removable storage unit  in a well known manner.","The computer  also includes input\/output\/display devices , such as monitors, keyboards, pointing devices, etc.","The computer  further includes a communication or network interface . The network interface  enables the computer  to communicate with remote devices. For example, the network interface  allows the computer  to communicate over communication networks or mediums B (representing a form of a computer useable or readable medium), such as LANs, WANs, the Internet, etc. The network interface  may interface with remote sites or networks via wired or wireless connections.","Control logic C may be transmitted to and from the computer  via the communication medium B. More particularly, the computer  may receive and transmit carrier waves (electromagnetic signals) modulated with control logic  via the communication medium B.","Any apparatus or manufacture comprising a computer useable or readable medium having control logic (software) stored therein is referred to herein as a computer program product or program storage device. This includes, but is not limited to, the computer , the main memory , the secondary storage devices , the removable storage unit  and the carrier waves modulated with control logic . Such computer program products, having control logic stored therein that, when executed by one or more data processing devices, cause such data processing devices to operate as described herein, represent embodiments of the invention.","The invention can work with software, hardware, and\/or operating system implementations other than those described herein. Any software, hardware, and operating system implementations suitable for performing the functions described herein can be used.","4.0 Conclusion","While various embodiments of the present invention have been described above, it should be understood that they have been presented by way of example only, and not limitation. It will be apparent to persons skilled in the relevant art that various changes in form and detail can be made therein without departing from the spirit and scope of the invention. Thus, the breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS\/FIGURES","p":["The accompanying drawings, which are incorporated herein and form a part of the specification, illustrate the present invention and, together with the description, further serve to explain the principles of the invention and to enable a person skilled in the pertinent art to make and use the invention.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4","b":"400"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 5A-5C"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9","b":"900"}]},"DETDESC":[{},{}]}
