---
title: Zeus code tool a method for implementing same and storage medium storing computer readable instructions for instantiating the zeus code tool
abstract: A method for presenting a graphic user interface (GUI) facilitating generation of selected ones of a Euler grid and a Navier-Stokes grid from a single set of predetermined parameters includes step for defining the geometry of a vehicle to be tested, defining the environment in which the vehicle is to tested, generating the selected ones of the Euler grid and the Navier-Stokes grid responsive the set of predetermined parameters generated in two defining steps, and post-processing the output of the generating step. Computer readable instructions for permitting a general purpose computer to instantiate a graphic user interface (GUI) generating selected ones of a Euler grid and a Navier-Stokes grid from a single set of predetermined parameters and a storage medium storing the computer readable instructions are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06873946&OS=06873946&RS=06873946
owner: The United States of America as represented by the Secretary of the Navy
number: 06873946
owner_city: Washington
owner_country: US
publication_date: 19991201
---

{"@attributes":{"id":"description"},"GOVINT":[{},{}],"heading":["STATEMENT OF GOVERNMENT INTEREST","CROSS REFERENCE TO APPENDICES","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The invention described herein may be manufactured and used by or for the Government of the United States of America for governmental purposes without the payment of any royalties thereon or therefor.","The present application includes a computer listing on microfiche Appendix attached hereto. The microfiche Appendix includes 839 frames disposed on 10 sheets. The computer listing in the microfiche Appendix details actual implementation of methods and apparatuses described herein. The computer listing is incorporated herein, in its entirety, by reference.","The present invention relates generally to software tools for parametric studies with respect to missiles. More specifically, the present invention relates to a software tool which performs parametric studies using Euler and boundary layer solvers and which generates input data for conventional software analysis tools. Corresponding software and a storage medium for storing same are also disclosed.","During the past decade, significant advances have been made in the field of computational fluid dynamics (CFD). These include improvements in computational speed, numerical algorithm efficiency, and modeling (turbulence and combustion). Because of this progress, it is now commonplace to see accurate CFD solutions to very complex, large scale, three-dimensional flowfields. It should be noted, however, that a number of limitations remain. First, existing CFD solvers are quite complex and, thus, extensive training is required on the user's part prior to generating a solution. More specifically, the user must be trained not only in basic aerodynamics, but also in computational domain development and numerical methods. Second, the computational costs are still extensive. Complex problems or cases can still take days, weeks, or even months, of expensive workstation or supercomputer time to solve. Because of these limitations, parametric type design studies are often infeasible and, therefore, the use of CFD as an engineering design\/development tool has been limited.","One software tool which has been adapted for use in problems amenable to CFD is the \u201cZEUS\u201d flowfield solver, i.e., ZEUS code, which is a supersonic space marching Euler solver capable of computing both internal and external flowfields. The ZEUS algorithm was originally developed and described by Wardlaw et al. in documents such as:\n\n","While Zeus Code is applicable to a wide variety of problems, e.g., supersonic flight conditions, there are a number of limitations in the original code which make it difficult to implement on a routine basis, e.g., early in the design phase of a missile. The following difficulties are frequently encountered in the exemplary process of optimizing the design of a missile:\n\n","What is needed is a software tool that could significantly reduce both the costs and turnaround time associated with CFD solutions of missile type geometries with arbitrary control surfaces. More specifically, what is need is a software tool which would minimize the required training, reduce the setup\/execution time, minimize the costs associated with obtaining computational fluid dynamic solutions, and extend the range of applications for the Zeus code.","Based on the above and foregoing, it can be appreciated that there presently exists a need in the art for a software tool and corresponding software which mitigates the above-described deficiencies. The present invention was motivated by a desire to overcome the drawbacks and shortcomings of the presently available technology, and thereby fulfill this need in the art. In particular, the present inventions was motivated by a desire to make the Zeus code more amenable to solving for the forces\/moments on missile type geometries with arbitrary control surfaces.","The present invention is method and corresponding computer program which includes both a fluids solver, and a grid generator. More specifically, the inventive method and corresponding software program allows for generation of a Euler grid, which permits problem solution with the built in Zeus Euler solver and boundary layer solver, and a Navier-Stokes (NS) grid. Moreover, the Zeus code exports the NS grid and all of the required input files necessary for use with a conventional computational fluid dynamics (CDF) solver.","One object of the present invention is to provide a grid generator with a point-and-click interface.","Another object of the present invention is to provide a grid generator with a point-and-click interface with a number of pre-defined missile geometries incorporated therein.","Still another object of the present invention is to provide a grid generator with a point-and-click interface wherein a variety of cross-sectional geometries can be applied, along with cross-section blending, e.g., blending a circular nose cone into an elliptic forebody.","Yet another object of the present is to provide a tool which advantageously can be run on a personal computer under Windows 95, 98 and NT.","An additional object of the present is to provide a tool which advantageously can be run on a personal computer under Windows 95, 98 and NT wherein the GUI permits significant reductions in the cost associated with performing CDF evaluations of various missile geometries.","A still further object of the present invention is to provide a tool which allows for multiple runs in order to simplify parametric type studies. According to one aspect of the invention, the user simply specifies the initial, final, and incremental parameter of interest, e.g., Mach number, angle of attack, yaw angle, roll angle, etc., and the tool runs all possible variants.","Another object of the present invention is to provide a tool which solves both the Euler equation, i.e., generates an inviscid solution using the Zeus code, and the viscous boundary layer equations. Preferably, the inviscid output from the Zeus code is used as a boundary condition to a viscous boundary layer solver, which allows for the computation of viscous effects, i.e., wall heating rates, turbulent effects, viscous drag, etc.","It will be appreciated that the present invention is not to be limited to systems and methods including one or more of the above-identified objects, i.e., none of the enumerated objects need actually be present in invention defined by the appended claims since only certain, and not all, objects of the invention have been specifically described above. Numerous other objects advantageously may be provided by the invention, as defined in the appended claims, without departing from the spirit and scope of the invention.","These and other objects, features and advantages according to the present invention are provided by a storage medium for storing computer readable instructions for permitting a general purpose computer to instantiate a graphic user interface (GUI) and generating selected ones of a Euler grid and a Navier-Stokes grid from a single set of predetermined parameters. According to one aspect of the invention, storage medium also contains computer readable instructions for instantiating at least one of a Euler solver and a boundary layer solver and for generating data files readable by a plotting package.","These and other objects, features and advantages according to the present invention are provided by computer readable instructions for converting a general purpose computer into a specialized computer presenting a graphic user interface (GUI) generating selected ones of a Euler grid and a Navier-Stokes grid from a single set of predetermined parameters. Preferably, the computer readable instructions include:\n\n","These and other objects, features and advantages according to the present invention are provided by a method for presenting a graphic user interface (GUI) facilitating generation of selected ones of a Euler grid and a Navier-Stokes grid from a single set of predetermined parameters. Advantageously, the method includes step for:\n\n","Illustrative embodiments and exemplary applications will now be described with reference to the accompanying drawings to disclose the advantageous teachings of the present invention.","While the present invention is described herein with reference to illustrative embodiments for particular applications, it should be understood that the invention is not limited thereto. Those having ordinary skill in the art and access to the teachings provided herein will recognize additional modifications, applications, and embodiments within the scope thereof and additional fields in which the present invention would be of significant utility.",{"@attributes":{"id":"P-00078","num":"00078"},"figref":["FIG. 1","FIG. 1"],"sup":["++","++"],"b":["200","300","400","500","200","300","500"]},"Each of the routines , , , and  advantageously can be accessed from the graphical user interface (GUI) illustrated in , which advantageously is generated the Zeus code software running on a conventional personal computer or workstation (not shown). From inspection of , it will be appreciated that the GUI includes pull down menus labeled File, View, Geometry, Inputs, Execution, Post-Processor, Window, and Help. These pull down menus labeled Geometry, Inputs, Execution, and Post-Processor constitute means for accessing the routines , , , and . Each of the functions provided by the pull down menus are briefly described in Table I. The underlined labels will be discussed in greater detail following Table I.",{"@attributes":{"id":"P-d0e1981","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE I"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["File","Controls file I\/O and printing."]},{"entry":["View","Toolbar views and runtime options."]},{"entry":["Geometry Setup","Define the missile, control surface geometries,"]},{"entry":[{},"and computational domain."]},{"entry":["Inputs","Input free-stream conditions, runtime"]},{"entry":[{},"parameters, reference conditions, etc."]},{"entry":["Execution","Executing the code"]},{"entry":["Post-Processor","Post-Processing"]},{"entry":["Window","Layout and orientation of windows"]},{"entry":["Help","Help controls and \u2018About\u2019 information"]},{"entry":[{},"(author, version #, etc.)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"It should be mentioned at this point that the GUI provides two-dimensional sketches of the side and frontal views, which are displayed in the main view screen, as the geometry of the missile and its control surfaces are specified. The Zeus code tool provides a variety of methods for manipulating the sketch, each of which is listed in the upper left corner of the main view screen and which is discussed in detail below.\n\n","It should be noted that the viscous boundary layer solver requires the inviscid Euler solution as a boundary condition. Therefore, the inviscid solution must be performed before running the viscous code. In other words, the Ctrl-B command cannot be employed until after an inviscid run has been completed. To obtain an accurate viscous approximation, an adequate number of inviscid profiles must be provided such that all relevant geometric features are spatially resolved. The inviscid profiles are written out at the user-specified intervals, as discussed in greater detail below with respect to boundary layer inputs.","It should also be mentioned that selected global parameters for the Zeus code tool advantageously can be accessed via the \u201cView\u201d pull down menu. When the subheading for Playback Parameters is selected by the user, the dialog box illustrated in  is generated. This dialog box permits the user to customize the following program options:\n\n","Referring again to , the Zeus code tool is executed at step  by, in an exemplary case, double clicking on the program \u2018ZeusPP.exe\u2019, entering a name for the current case, e.g., SeaSparrow, and then clicking on \u2018Start New Case\u2019. This will initialize the program and generated the GUI illustrated in FIG. . It will be noted that SeaSparrow missile illustrated in  was chosen because this missile includes both dorsal and tailfins and, thus, illustrates several features discussed in greater detail below.","The geometry setup routine  will now described in terms of its subroutines, which include a subroutine  for specify the grid parameters, a subroutine  in which the selected missile geometry is defined, a subroutine  in which any control surfaces are defined, and an optional subroutine  in which the computational domain is generated. It will be appreciated that the properties that define the computational grid are specified in routine ; each of these parameters is described in detail immediately below. Moreover, each of these subroutines will be described in terms of the parameters that are input to the Zeus code during the subroutine; the various dialog boxes that are generated will also be depicted when appropriate.","During subroutine , the user clicks on \u2018Geometry,\u2019 selects \u2018Grid Parameters\u2019 and then selects \u2018Euler Grid Properties. It will be appreciated that in the \u2018Grid Parameters\u2019 option, it is possible to select from either of two sets of grid parameters. In the first (Euler Grid Properties), the parameters specified are applied during both the Zeus Euler solution and the viscous boundary layer solution. In the second (Navier Stokes (N-S)Grid Properties), the parameters specified are used to generate a grid, which can be exported to a full Navier-Stokes computational fluid dynamics solver, which is a separate software program, i.e., not part of the present invention. Stated another way, the Navier-Stokes grid parameters are used only for grid generation purposes and, therefore, can be omitted if the user does not intend to export the grid to a N-S solver.","More specifically, the Zeus tool has two primary functions. The code serves not only as an approximate flow solver, but also as a Navier-Stokes grid generator. Therefore, two separate sets of grid parameters are specified when setting up the geometry. In the first, the user inputs the parameters that will be used during the Euler and boundary layer solutions of the flowfield (subroutine ). In the second, the input parameters are used to generate the Navier-Stokes grid and appropriate boundary conditions, as discussed below with respect to subroutine . The grip parameters specified in subroutine  are discussed immediately below.","First, the user specifies the Mesh Dimensions by entering the following values:\n\n","Then, the user specifies the Mesh Clustering by entering the following values:\n\n","It should be mentioned at this point that the flowfield solver typically does not require mesh clustering because there is no boundary layer to resolve. However, in certain cases, mesh clustering (radial and circumferential) advantageously can be used to more accurately capture specific flowfield features, e.g., vortices, shocks, etc. However, it should also be noted that mesh clustering is required for the Navier-Stokes grid in order to resolve the boundary layer.","Next, the user specifies the Outer Boundary by entering the following values:\n\n","Finally, the user specifies Copy Parameters by selecting the \u2018Copy Parameters\u2019 button. This permits the Zeus code to copy the grid parameters from the alternate grid (i.e., from the Navier-Stokes grid if the user is working on the Euler grid setup, or vice-versa).","During subroutine  of , the user then defines the missile geometry. The first step in setting up the geometry is to define all of the sections that comprise the missile surface, not control surfaces. This is performed using the missile selection box illustrated in FIG. . First, the user selects the desired type of nose; the user then clicks on \u2018Add New Section\u2019 to add the nose section to the missile. It will be appreciated that the user will be prompted for the geometric parameters used to generate the desired type of nose section. After the nose section has been specified, the above-described process is repeated for any remaining sections, i.e., afterbody, boat-tail, etc. It should be noted that the sections defining the missile geometry must be entered in the order in which they occur on the missile.","It should be noted from  that there are a variety of possible missile sections. A sample sketch, a description of the required parameters, and the generating equations are shown below in -, and , for the nosecone and body cross section sections, respectively. It should be noted that in all of the geometric formulas discussed below, \u2018z\u2019 is the axial distance with respect to the start of the section being defined.",{"@attributes":{"id":"P-00118","num":"00118"},"figref":["FIG. 5","FIG. 5"],"i":["a ","a. "]},{"@attributes":{"id":"P-00119","num":"00119"},"figref":["FIG. 5","FIG. 5"],"i":["b ","b","User's Guide for an Interactive Personal Computer Interface for the Aeroprediction Code"]},"Still referring overall to subroutine  of , illustrates the dialog box for entry of parameters required to generate a secant ogive, a sample sketch of the secant ogive, and the equation set employed in generating the secant ogive section. The geometry is generated using the formula discussed in the Hymer et al. document mentioned above along with the user specified parameters L, R, and r, where L is the length of the section, R is the base radius, and r is the radius of curvature.",{"@attributes":{"id":"P-00121","num":"00121"},"figref":"FIG. 5","i":"d "},"Moreover, illustrates the dialog box for entry of parameters required to generate a Haack series nose section, a sample sketch of a Haack series section, and the equation set used in generating the Haack series section. It will be appreciated that this section advantageously can be generated using the formula discussed in the Hymer et al. document mentioned above along with the user specified parameters R and L, where R is the base radius and L is the length of the section.","Furthermore, illustrates the dialog box for entry of parameters required to generate a Power series section, a sample sketch of the Power series section, and the equation set used in generating the Power series section. Advantageously, this geometry is generated using the formula discussed in the Hymer et al. document mentioned above along with the user-specified parameters R, L, and n, where R is the base radius, L is the length of the section, and n is the power series exponent.","Finally, illustrates the dialog box for entry of parameters required to generate a spherical nose section, and a sample sketch of the spherical section. It should be mentioned that for the spherical nose section there will be a small region where the flow is subsonic. Because the Euler solver employs a marching procedure, the Zeus code cannot be applied in this subsonic region. Therefore, the blunt body solver must be applied over the entire subsonic region. The outflow plane from the blunt body solver can then be taken as the inflow plane for the Euler solver. The input parameters for the blunt body solver are specified below with respect to subroutine .","It should be noted that for each of the missile body sections discussed with respect to -, the cross sectional geometry must be specified.  illustrates the dialog box for entry of the parameters describing the cross-sectional geometry. It should also be noted that if a cross section is not specified, the Zeus code tool assumes and employs a circular cross section. The parameters which advantageously can be set using the box of  include:\n\n","When the complete missile body geometry has been specified, subroutine  ends and the subroutine  jumps to subroutine , where the control surfaces are specified. In will be appreciated that the control surfaces must be entered in the order in which they appear on the missile, just as was the case for the missile body geometry. If no control surfaces will be examined, then the \u2018No Control Surfaces\u2019 parameter must be selected in during subroutine . During subroutine , the user selects the desired type of control surface from the drop down menu and clicks on \u2018Add Control Surface\u2019. It should be noted from  that there are a variety of possible control surfaces. A detailed discussion of these control surface variations is presented below.","Before specifying the geometry of the control surfaces, a number of parameters, which are discussed immediately below and which describe the location\/orientation of the surfaces on the missile, must be specified. These parameters are entered via the dialog box illustrated in FIG. . Preferably, these parameters are as follows:\n\n",{"@attributes":{"id":"P-00138","num":"00138"},"figref":["FIG. 9","FIG. 9","FIG. 9"],"i":["a ","a","a"],"sup":["++","++"]},"It should be noted that the coordinate system for entering the control surface points is based on a fin local system, where:\n\n","It should also be noted that the control surfaces must be symmetric and, therefore, only the upper half of the control surface is specified when \u2018User Defined Geometry\u2019 is specified. Because of this symmetry requirement, the leading and trailing edges of the fin must have zero thickness, i.e., x=0. This requires that x be zero for the first and last points on each plane describing the control surface. Furthermore, it should be noted that each plane must contain the same number of node points, i.e., four for the above example.","The exemplary case illustrated in advantageously can be used to model either slats or flaps. It will be appreciated that four points are used to define each of the planes, i.e., Plane #1 and Plane #2. To model slats, the user simply sets the \u2018iloc\u2019 parameter to \u20182\u2019, selects the \u2018Fore of iloc (Slats)\u2019 dialog, and specifies the slat deflection angle in the Control Surface Parameters screen illustrated in FIG. . This causes all points ahead of \u2018iloc\u2019 (surface \u2018A\u2019) to be deflected by the specified slat angle. Similarly, to model flaps, set \u2018iloc\u2019 equal to 3 and select the \u2018Aft of iloc (Flaps)\u2019 dialog to deflect all points aft of the third planar point (i.e., deflect surface \u2018C\u2019).","The second exemplary case, which is illustrated in , represents a more complex control surface where three planes must be considered to properly define the control surface geometry. From , it will be appreciated that the surfaces \u2018A\u2019 and \u2018A\u2032 are not equivalent planar surfaces, i.e., these surfaces do not have the same unit outer normal. A similar observation can be made with respect to the trailing edge of the fin, i.e., surfaces \u2018B\u2019 and \u2018B\u2019. Therefore, the control surface illustrated in cannot be described using only Plane #1 and Plane #3 shown above. Plane #2 must be included to properly describe the control surface. It should be noted that each plane must contain the same number of nodal points. Plane #1 contains four nodal points; therefore, Planes #2 and #3 must also contain four points. To meet this constraint, the user simply enters the center point for planes \u20182\u2019and \u20183\u2019 twice, i.e., duplicate points \u20185\u2019and \u20187\u2019.","Entry of the \u2018User Defined Geometry\u2019 definitions is performed in the dialog box illustrated in FIG. . First, the user enters all of the \u2018x\u2019 points for a given plane, then all of the \u2018y\u2019 points, and finally, all of the \u2018z\u2019 points. The user then clicks the \u2018Next Plane\u2019 button to continue the process until all planes have been entered, at which point the user clicks on \u2018Finished\u2019 button in the dialog box. In the dialog box of , the following definitions apply:\n\n","A first alternative control surface geometry, i.e., the modified wedge, is illustrated in , which depicts both a screen capture of the respective data entry panel and an illustration of the control surface itself. This panel advantageously can be used in place of the \u2018User Defined Geometry\u2019 panel to simplify the geometric inputs required by the user. From , it will be appreciated that these parameters are:\n\n","A second alternative control surface geometry, i.e., the symmetric NACA00xx airfoil, is illustrated in , which depicts a screen capture of the respective data entry panel, an illustration of the control surface itself, and the equation block. This panel can also be used in place of the \u2018User Defined Geometry\u2019 panel to simplify the geometric inputs required by the user. From , it will be appreciated that these parameters are:\n\n","It should be mentioned that in the equation block used to calculate the symmetric NACA00xx airfoils depicted in , xx refers to the maximum thickness ratio, \u2018r\u2019 is the local radius, \u2018z\u2019 is the axial distance, \u2018c\u2019 is the chord, and \u2018t\u2019 is the airfoil thickness ratio (thickness\/chord). It will be noted that, due to the bluntness of the leading edge, difficulty will most likely be encountered if this fin is evaluated in the Euler solver. It can, however, be used to generate a Navier-Stokes grid.","It is often desirable to consider different types of control surfaces at a given axial location, i.e., different size vertical and horizontal stabilizers. The Zeus code tool implements this feature by linking two sets of control surfaces together, as described by the following example.\n\n","Still referring to , when subroutine  has been completed, i.e., when the control surfaces have been completely defined, subroutine  is initiated to generate the computational domain, as discussed in greater detail below. However, it should be noted that subroutine  is optional; the user may elect to proceed directly to subroutine  of routine .","It will be appreciated from the discussion thus far that the Zeus code tool according to the present invention is capable of operating with respect to two separate computational domains: the Euler grid; and the Navier-Stokes grid. The Euler grid is the one used by the Zeus tool, as discussed in detail below, for the inviscid and boundary layer solvers. The Navier-Stokes grid is generated, along with the appropriate boundary condition files; however, this grid is not used by the Zeus tool in the flowfield analysis. Rather, this grid (and its corresponding file) is created for use in a full Navier-Stokes solver.","With respect to subroutine , it will also be appreciated that a number of menu options are available to the user; the first dealing with the inviscid Euler grid and the remaining three pertaining to the Navier-Stokes grid, as outlined in Table II.",{"@attributes":{"id":"P-d0e3319","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE II"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Euler Grid","Generate and view the Euler grid"]},{"entry":["Generate N-S Grid","Generate the Navier-Stokes grid and boundary"]},{"entry":[{},"condition data files"]},{"entry":[{},"\u2032filename\\RunGrind\\GASPGrid.p3da\u2032 &"]},{"entry":[{},"\u2032GASPBC.inp\u2032"]},{"entry":["Normal Spacing","View the radial spacing (at the first point off the"]},{"entry":[{},"wall) along the missile"]},{"entry":["View N-S Grid","Plot the Navier-Stokes grid."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"With respect to the Euler grid option of subroutine , it will be appreciated that before running the inviscid code, it is often desirable to examine the computational domain to ensure that the relevant geometric features are spatially resolved and to ensure that the control surfaces are input correctly. Two methods of viewing the computational domain are available and are shown in the Grid Inputs dialog box depicted in FIG. . In the first, the grid is viewed as a series of two-dimensional planes, as depicted in FIG. . The second method displays the Euler grid in three-dimensional block format.","It should be mentioned that when using the \u20182d planes\u2019 option, it is possible to generate a movie of the grid that steps axially along the missile. To generate the movie file from the two-dimensional grid, the user runs the Tecplot macro \u2018Playback\\2dGrid_Movie.mcr\u2019. The movie file is written to the file \u2018Playback\\Zeus_Grid2d.rm\u2019 and advantageously can be replayed using the Tecplot Framer program, which is included in the Tecplot product.","It will be noted that the axial stepsize taken during the inviscid computation is controlled by the Courant-Friederichs-Lewy (CFL) stability condition specified in routine , which is discussed in greater detail below. Moreover, this is calculated at run-time and, therefore, the axial steps taken during the grid generation are not equivalent to those taken during the actual solution. For the purpose of evaluating the computational domain, equal axial spacing is taken along the missile. It will also be noted that there are two possible methods for generating the outer boundary of the computational domain. In the first method, it is specified in terms of body radii during performance of subroutine , which was previously discussed. In the second method, the outer boundary tracks the conical shock as the solution proceeds downstream. For this latter method, the conical shock location, and thus the outer boundary, is not known until runtime and, therefore, for the purposes of grid generation, the first method of calculating the outer boundary will be employed. Finally, it will be noted that the viewing of the Euler grid is not a condition precedent for executing the inviscid solution. The actual grid used during the inviscid computation is calculated at runtime and can be viewed during the routine  post-processing features of the Zeus code tool.","In any event, the necessary parameters for establishing the Euler grid as entered using the dialog box depicted in FIG. . These parameters include:\n\n","As previously mentioned, the Zeus code tool advantageously can be used to generate solutions for missile type geometries using both an Euler and a boundary layer solver. However, it is often desirable to perform a more in-depth analysis using a full Navier-Stokes solver. For these cases, the Zeus tool serves as a grid generator, allowing the user to create complex three-dimensional grids in a matter of minutes. Preferably, the Zeus code tool is setup to generate CFD grids in Plot3d format (\u2018filename\\RunGrid\\GASPGrid.p3da\u2019) along with the appropriate zonal boundary conditions (\u2018filename\\RunGrid\\GASPBC.inp\u2019) for the GASP flow solver, i.e., the GASP v3 Computational Fluid Dynamics Solver product produced by Aerosoft, Inc. The boundary condition file generated using the Navier-Stokes Grid Properties dialog box illustrated in  specifies each point on a zone edge as either a solid surface (a fin) or a zonal boundary, and includes:\n\n","The final step in generating a Navier-Stokes grid is to specify the surface boundary conditions, which, as indicated in , include:\n\n","Two-Equation Model\u2014The type of two-equation turbulence model applied during the Navier-Stokes solution must be specified in the GASP boundary condition input file.","Still referring to subroutine  in , it should be mentioned that one prerequisite for accurately computing a Navier-Stokes solution is the spatial resolution of the boundary layer. Therefore, the computational grid must be appropriately refined near the surface. The boundary layer thickness cannot be determined a priori, however. Thus, an approximate value advantageously can be obtained using flat plate assumptions. Using this estimate for the boundary layer thickness, the radial clustering parameter can be increased\/decreased until an appropriate value for the normal spacing to the first point off the surface is obtained. A typical value for the required normal spacing is {fraction (1\/20)}th to {fraction (1\/30)}th of the approximate boundary layer thickness (i.e., approximately 20-30 points in the boundary layer).","Subroutine  also proves a view grid option, which advantageously plots the Navier-Stokes grid in three-dimensional block format using the Tecplot plotting package mentioned above. Beneficially, a two-dimensional slice of the three-dimensional grid can be obtained by executing the Tecplot macro \u2018Playback\\GaspGrid.mcr\u2019. This is the view displayed in the Generate Gasp Grid parameters discussed with respect to FIG. . It will be appreciated that this view is useful for evaluating the axial clustering parameters as well as the spatial resolution of the control surfaces. It will be noted that the control surfaces are represented by the contour plot variable \u2018onfin\u2019; Unity and zero represent a solid surface and a zonal boundary, respectively. To evaluate the spatial resolution of the control surfaces, the user advantageously could examine a contour plot of the \u2018onfin\u2019 parameter.","After the computational domain, missile, and control surface geometries have been specified during routine , routine  is performed to input the following parameters:","(1) Aerodynamic Data;\n\n","It will be appreciated that a variety of parameters are required before execution of the Euler or boundary layer solvers. These runtime parameters are specified in the \u2018Inputs\u2019 routine, i.e., routine .","During subroutine , the user specifies the Mach numbers and missile orientations, e.g., angle of attack, yaw, and roll, which advantageously are employed during execution of the flow solver routine , in the dialog box depicted in . Rather than specifying singular values, sweeps are defined for each of the above mentioned parameters. The Aerodynamic Run Matrix of advantageously can be used to input the Mach numbers and missile orientations. More specifically, this is accomplished by entering initial, final, and incremental values for Mach number, angle of attack, angle of yaw, and roll angle. The Zeus code tool then calculates an Aerodynamic Run Matrix consisting of all possible cases. The parameters input via the dialog box depicted in include:\n\n","It should be noted that for each case (i.e., every Mach number, angle of attack, angle of yaw, and roll angle combination), the Zeus code tool generates a subdirectory under the main directory, with each subdirectory being labeled Run0001-Runxxxx. In addition, the Zeus code tool advantageously generates a file called RunMatrix.txt, which file maps the case number to the aerodynamic parameters entered above.","It will also be appreciated that a number of general aerodynamic parameters must be specified before executing either the Euler or boundary layer solvers. These parameters, which are listed in the dialog box of , include:\n\n","It should be mentioned at this point that there are three methods of specifying the free stream data. The first method is to select either of the standard atmospheric tables (1962 U.S. Standard Tables or 1959 AFDC Tables) and then enter an altitude in the provided field of the dialog box. The pressure and density will be calculated from the standard table data and the ratio of specified heats is assumed that of standard air (1.4). The second method is to specify the pressure, density, and ratio of specific heats (gamma) directly by clicking on the radio button next to these parameters and entering the desired values. The third method is to specify a unit Reynolds number using the equation present immediately below, and let the Zeus code tool calculate the corresponding pressure and density. Gamma, the ratio of specific heats, is taken to be that of standard air (1.4). \n\n","A number of user specified integration parameters are then specified during subroutine . These parameters, which describe axial limits for integration, starting solution, stability criterion, limiters, and flux calculation parameters, are entered into the dialog box depicted in FIG.  and include:\n\n","As previously mentioned, Zeus code is an inviscid solver, and as such, neglects the effects of viscosity on the flowfield. Since flow separation is a viscous phenomenon, an Euler solver alone cannot accurately predict the effects of a separation zone on the flowfield. Two separation models (clipping and forced) are available in the Zeus Euler solver of the Zeus code tool which improves the predictive capabilities of the tool near separation zones. See FIG. .","The clipping separation model, which is described in detail in the document by Baltakis, F. P., Wardlaw, A. B., and Allen, J. M., entitled \u201cLeeside Crossflow Modeling in Euler Space Marching Computations,\u201d (NSTC TR 86-342, November 1986), operates by decreasing the crossflow velocity on and near the body surface. The crossflow velocity reduction is accomplished by setting an upper limit to the allowable crossflow velocity. If the velocity at any point exceeds this value, it is reduced to this level. Pressure and density are assumed unchanged and the axial component of velocity is increased to give the correct stagnation enthalpy value. Clipping destroys the crossflow shock and produces a large vortex on the leeside of the body that is in qualitative agreement with experiment. Computed pressures on the leeside of the body are in better agreement with experiment. However, clipping tends to increase the windward pressures and often decreases the accuracy of the results in this region.","The forced separation model, which was originally described in this form by Kwong, C. M. and Myring, D. F., in their paper entitled \u201cFusiform Body Separation Flow Field Calculations using Euler and Boundary Layer Methods\u201d (Royal Aeronautics Society Conference on the Prediction and Exploitation of Separated Flows, Paper No. 27, April 1989), seeks to simulate separation by altering the velocity direction along a user defined separation line. In each crossflow plane, the separation model is applied to wall cells \u201cs\u201d and \u201cs+1\u201d, which are immediately windward and leeward of the separation line, respectively. Pressure and density at these points are defined by:\n\n=0.5(\u22121+1) \n\n=0.5(\u22121+1) \n\n=0.5(+2) \n\n=0.5(+2) \n","Here \u2032denotes old values. The flow velocities are determined by prescribing a streamline direction and assuming constant stagnation enthalpy. Unfortunately, solutions obtained with the forced separation model are sensitive to mesh size. As the mesh is refined, the pressure beneath the vortex diminishes.","Parameters which advantageously can be specified by the user for separation modeling include:\n\n","It should be mentioned at this point that the boundary layer code requires, as a boundary condition, the inviscid solution from the Zeus code. Therefore, before executing the boundary layer code, the Zeus code tool must save the inviscid solution at a number of different axial stations. While it is both unnecessary and infeasible (due to computational constraints) to save the inviscid flowfield at every axial station, an adequate number of axial stations must be considered in order to accurately solve the boundary layer equations. The user must save the inviscid solution often enough to resolve all relevant geometric features axially (i.e., must have several axial stations written out on each control surface). The user does this during subroutine  by specifying the following parameters and enter these selections in the dialog box illustrated in FIG. .\n\n","Referring again to , the boundary layer modeling parameters advantageously can also be selected by the user during subroutine . It will be appreciated that these selection will be applied to the Zeus code tool by entering the selections in the dialog box illustrated in FIG. .","These parameters include:",{"@attributes":{"id":"P-00260","num":"none"},"ul":{"@attributes":{"id":"ul200046","list-style":"none"},"li":{"@attributes":{"id":"ul200047-li00047"},"ul":{"@attributes":{"id":"ul200047","list-style":"none"},"li":["Transition Parameters\u2014Select one of the three possible transition parameters. If laminar is selected then the flow is forced to remain laminar for the entire calculation. If an \u2018Axial transition location\u2019 is specified, the flow is laminar up to this point and then abruptly transitions to turbulent flow. If the \u2018Gradual transition factor\u2019 is selected, then the transition model is taken from the paper by Wardlaw, A. B. and Baltakis, F. P., entitled \u201cAn Integral Boundary Layer Procedure for Tactical Missiles\u201d (AIAA 92-1026, Aerospace Design Conference, Irvine, Calif., February 1992), and the parameter specified is F(default of 1.0) from Eq. 23 of that paper.","Pressure Gradient for Separation\u2014If the streamwise pressure gradient exceeds this user specified parameter the boundary layer and energy thicknesses are reduced to simulate separation."]}}}},"Streamline Divergence\u2014Controls streamline divergence as described in the Wardlaw et al. paper referenced above (Kfrom Eq. 32). Set to unity to follow inviscid streamlines. Use a value of 2.0 for bodies at incidence. Only applies to edge #1 of each zone.\n\n","Having completed subroutine , the user then selects boundary layer output controls in subroutine  by completing the dialog box illustrated in FIG. . These parameters are discussed in greater detail below.\n\n","Finally, during subroutine , the output controls for the output of the boundary layer solver are specified and entered into appropriate sections of the dialog box illustrated in FIG. . Data entered during this step controls which type of output the Zeus Euler solver generates, as well as the output frequency. The first section in  controls the output for the surface pressures, forces, moments, and centers of pressure. The second section controls the output for generating contour plots of the flowfield variables. The final section controls both the ASCII output and screen residual.","The output control parameters include:",{"@attributes":{"id":"P-00313","num":"none"},"ul":{"@attributes":{"id":"ul200056","list-style":"none"},"li":{"@attributes":{"id":"ul200057-li00057"},"ul":{"@attributes":{"id":"ul200057","list-style":"none"},"li":["Surface Pressures, Forces, and Moments\u2014This section handles the output for the surface pressure, forces, and moments.","Print Cell Coordinates\u2014Write the cell coordinates (axial and radial location) at each cell where the data is written along with the surface pressure, forces, moments, and centers of pressure.","Write Surface Properties\u2014Specify both an incremental value and a maximum stepsize for generating the output data. The Zeus code writes the output at every specified incremental value (axially) as well as if the axial stepsize is larger than the specified parameter.","Contour Data\u2014Contour plots of a variety of flowfield parameters (pressure, density, Mach number, etc . . . ) can be generated at various axial stations.","\u2018k\u2019 Axial Stations\u2014Enter the increment for generating the contour plot output data. The code will write the output data at every user specified incremental axial station.","User Defined Stations\u2014Specify the specific axial locations where the contour data is desired. This is useful for generating contour plots at specific locations in the flowfield (i.e., leading\/trailing edges of control surfaces).","Given Stepsize\u2014The Zeus code generates a contour plot file every time the axial stepsize is greater than the specified value."]}}}},"ASCII Data\u2014The ASCII data is written to the \u2018fort.9\u2019 data file in the \u2018filename\u2019 directory.\n\n","Once the routine  has been completed, the user is ready to select which cases are to be evaluated as well as what type of solution is performed during routine . A step by step procedure for executing a run is provided below, along with a sample view of the execution screen illustrated in FIG. .\n\n","(2) Select the type of run desired. Here it must be noted that if \u2018Full Run\u2019is selected, the code will execute the Inviscid Euler solver, write out the flowfield at the axial intervals specified with respect to Boundary Layer Execution Parameters, which were discussed in relation to , and then execute the boundary layer solver to get an approximate viscous solution. If \u2018lnviscid Run\u2019 is selected, the code will execute the Inviscid Euler solver and then terminate; no viscous approximation will be calculated. If a viscous calculation is desired, the user must click on the \u2018Viscous Run\u2019 button in , and select the desired case. Only the runs that have been solved with the inviscid solver will show up as choices when the \u2018Viscous Run\u2019 button is selected. This is because the viscous boundary layer solver requires the inviscid flowfield as a boundary condition.\n\n","As the Euler solver included in the Zeus code tool according to the present invention is executing, a variety of information is written to a command prompt, as illustrated in . This includes messages denoting which code is currently running (cone, blunt body, or Euler solver) as well as a number of parameters denoting the status of the run. The output written to the command prompt for the inviscid solver includes the following parameters:\n\n","Moreover, the viscous boundary layer solver in the Zeus code tool according to the present invention outputs text to the command prompt, as illustrated in . The test includes the following parameters:\n\n","The Zeus code tool includes a built-in post-processor for viewing the solution data during performance of routine . A variety of methods of examining the results are available including ASCII representations of the data during subroutine , as well as plots of a wide variety of parameters, all of which are discussed in detail below. The plotting features of the Zeus code make use of the Tecplot plotting package, which has been discussed several times before. It should be mentioned that the Zeus code tool advantageously can be used if Tecplot is not installed on the users' machine. Thus, while the plotting capabilities of the post-processor will not be functional, ASCII representations of the data will still be available.","The \u2018PostProcessor\u2019 routine  includes the subroutines outlined in Table III, which subroutines, in an exemplary case, are not performed in parallel.",{"@attributes":{"id":"P-d0e5116","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE III"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Subroutine 510","ASCII Forces\/Moments","Examine an ASCII data file of"]},{"entry":[{},{},"the forces\/moments and"]},{"entry":[{},{},"centers of pressure acting"]},{"entry":[{},{},"on the body."]},{"entry":["Subroutine 520","Single Run Plots","Generate line plots of the sur-"]},{"entry":[{},{},"face pressures, forces, and"]},{"entry":[{},{},"moments, vector and stream-"]},{"entry":[{},{},"line plots, and contour plots of"]},{"entry":[{},{},"a variety of flowfield"]},{"entry":[{},{},"parameters (Mach number,"]},{"entry":[{},{},"density, temperature, etc.)."]},{"entry":["Subroutine 530","Multi-Run Plots","Generate comparative line"]},{"entry":[{},{},"plots of forces\/moments"]},{"entry":[{},{},"versus a variety of"]},{"entry":[{},{},"independent variables (Mach"]},{"entry":[{},{},"number, angle of attack, yaw"]},{"entry":[{},{},"angle, and roll orientation)."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"With respect to subroutine , it will be appreciated that there are two options when examining the forces, moments, and centers of pressure for a given set of runs. The first is to view the totals or the sum from each of the zone edges. This gives the sum of the values from the missile surface and the control surfaces, or the total acting on the geometry. The second option prints the forces\/moments separately on each edge of each zone. This is often useful if the values on a particular control surface are desired (i.e., force due to 1 fin). It will be recalled from the discussion above that edge, refers to the missile surface, edgeand edgerefer to the zonal boundaries (i.e., the control surfaces, if they exist), and edgerefers to the outer boundary, as illustrated in FIG. .","For each case run, the ASCII output file, \u2018ForcesMoments.txt,\u2019 advantageously will contain the following data:\n\n","It should be mentioned at this point that an approximate value for the axial force due to the base (i.e., base drag) is calculated using the methodology outlined by Moore, F. G. and Hymer, T. in the paper entitled \u201cImproved Empirical Model for Base Drag Prediction on Missile Configurations Based on New Wind Tunnel Data, (NSWC-DD TR 92-509, October 1992). Moreover, it will be noted that the corrections due to angle of attack and fin thickness have been omitted. Also, note that the base drag calculation requires the ratio of the base area to the reference area (A\/A). The Zeus  code tool calculates the base area assuming a circular cross-section, and therefore, if a non-circular cross-sectional geometry is applied, the resultant base drag must be multiplied by the factor (A\/A). In other words, an equivalent circular base area must be applied.","When both the inviscid and viscous solutions have been performed, the output for the forces\/moments will be listed component wise. In other words, the inviscid, viscous, and induced contributions will be listed along with the totals.","During subroutine  of the post-processor routine , a single run plot is employed to examine the output data for a single run. The \u2018single Run Plots\u2019 permits the user to generated a selected on of three plots as outlined in Table IV. To make a comparative analysis of different runs, see the discussion of subroutine  regarding Multi-Run Plots.",{"@attributes":{"id":"P-d0e5545","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE IV"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Surface Pressures","Line plot of the surface pressures."]},{"entry":["Forces and Moments","Line plots of the forces, moments, and centers of"]},{"entry":[{},"pressure."]},{"entry":["Contour\/Vector Plots","Vector and streamline plots. Contour plots of a"]},{"entry":[{},"variety of flowfield parameters (Mach number,"]},{"entry":[{},"density, temperature, . . . etc.)."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The first option, \u2018Plot Surface Pressure\u2019, advantageously displays a graph of the surface pressure versus axial distance for zone edges 1, 2, and 4 (see FIG. ). Preferably, the pressures are listed for each circumferential plane on the missile surface and for each radial plane on the zone edges (i.e., control surfaces). Each plane is labeled as \u2018Plane #x, Zone #y, Edge #z\u2019. If the Edge number is \u20181\u2019 then the Plane # refers to the circumferential index. If the Edge number is \u20182\u2019 or \u20194\u2019 then the Plane # refers to the radial index.","The second single-run plotting option, \u2018Plot Forces & Moments\u2019, advantageously plots either the total force\/moment or the edge force\/moment as a function of axial location. The totals versus edge values are described with respect to FIG. . The \u2018x\u2019, \u2018y\u2019, \u2018z\u2019 coordinates refer to normal, side, and axial components, respectively.","Finally, the third option., i.e., Contour\/Vector Plots, permits generation of contour plots for a variety of flowfield variables for a given run. The user's selections are entered via the Contour Plot Info dialog box. The user clicks on \u2018Choose Plot Attributes\u2019 to bring up this dialog box and specifies the plotting attributes. Select the dimensions and the variables desired for the contour plot. It will be noted that the coordinates (x, y, z) and the velocities (u, v, w) are always written to the contour plot file. After the plot information has been specified, click \u2018OK\u2019 to accept the values. Then select \u2018Plot Data\u2019 to generate the contour plots.","During subroutine , the post-processor of the Zeus code tool according to the present invention is used to compare the effect of Mach number, angle of attack, yaw angle, and roll orientation on the forces, moments, and centers of pressure of a given geometry. The user selects the desired independent variable as well as the desired dependent variables using the dialog box depicted in FIG. . Clicking on \u2018OK\u2019 generates a plot for all of the completed runs.","During subroutine , a check is performed to determine whether post-processing has been completed. If the answer is affirmative, the Zeus code routine ends at routine . If the answer is negative, the user repeats one of subroutines ,  or  to conduct further post-processing operations.",{"@attributes":{"id":"P-00361","num":"00361"},"figref":"FIG. 30","b":["700","700","702","712","708","720","720","720","710","700","714","704","705","702","720"],"sup":"++"},"The Zeus software tool and corresponding program according to the present invention significantly reduce both the costs and turnaround time associated with CFD solutions of missile type geometries with arbitrary control surfaces. The software tool advantageously goes a long way toward taming the ZEUS flowfield solver, which is a supersonic space marching Euler solver capable of computing both internal and external flowfields. The software tool modifies the ZEUS code to make it more amenable to solving for the forces\/moments on missile type geometries with arbitrary control surfaces. In particular, the modifications made to the ZEUS code focused on the following four primary areas of improvement:\n\n","As mentioned above, the Zeus code tool and corresponding program according to the present invention includes a fluids solver and serves a grid generator. Advantageously, this permits the generation of a Euler grid, which can be used for solution with the integral Zeus Euler and boundary layer solvers, and a Navier-Stokes (NS) grid. The Zeus code tool exports the NS grid and all of the required input files necessary for a GASP run. It will be appreciated that the Zeus code tool advantageously can be adapted to generate the grids needed for other CDF solvers. Moreover, the post-processor module makes use of the Tecplot plotting package, which permits the user to generate movies depicting the flowfield around a missile. In addition, the grid generator in the Zeus code tool provides a point-and-click interface with a number of pre-defined missile geometries incorporated therein. Thus, a variety of cross-sectional geometries can be applied, along with cross-section blending, e.g., blending a circular nose cone into an elliptic forebody.","The Zeuscode tool solves both the Euler equation (inviscid solution using the Zeus code) and the viscous boundary layer equations. It will be appreciated that the inviscid output from the Zeus code is used as a boundary condition to a viscous boundary layer solver, which permits the computation of viscous effects, i.e., wall heating rates, turbulent effects, viscous drag, etc. The Zeus code tool permits the user to set the parameters for multiple runs in order to simplify parametric type studies. The user simply specifies the initial, final, and incremental parameter of interest, i.e., Mach number, angle of attack, yaw angle, roll angle, etc., and the Zeus code tool runs all possible variants for that missile geometry and parameter set.","The Zeus codetool was developed for use on a personal computer under Windows 95, 98 and NT. It will be appreciated that development of the GUI for use in Windows significantly reduces the costs associated with performing these types of calculations; the GUI eliminates the need for expensive Unix workstations.","Finally, it should be mentioned that all of the documents and papers mentioned above are incorporated herein by reference for all purpose. In addition, the attached Appendix includes the applicable code for the Zeus code tool.","Although presently preferred embodiments of the present invention have been described in detail hereinabove, it should be clearly understood that many variations and\/or modifications of the basic inventive concepts herein taught, which may appear to those skilled in the pertinent art, will still fall within the spirit and scope of the present invention, as defined in the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["These and various other features and aspects of the present invention will be readily understood with reference to the following detailed description taken in conjunction with the accompanying drawings, in which like or similar numbers are used throughout, and in which:",{"@attributes":{"id":"P-00046","num":"00046"},"figref":"FIG. 1","sup":"++"},{"@attributes":{"id":"P-00047","num":"00047"},"figref":"FIG. 2","sup":"++"},{"@attributes":{"id":"P-00048","num":"00048"},"figref":"FIG. 3","sup":"++"},{"@attributes":{"id":"P-00049","num":"00049"},"figref":"FIG. 4","sup":"++"},{"@attributes":{"id":"P-00050","num":"00050"},"figref":"FIG. 5","i":["a ","g "],"b":"5"},{"@attributes":{"id":"P-00051","num":"00051"},"figref":["FIG. 6","FIGS. 5"],"i":["a","g; "],"b":"5"},{"@attributes":{"id":"P-00052","num":"00052"},"figref":"FIG. 7","sup":"++"},{"@attributes":{"id":"P-00053","num":"00053"},"figref":"FIG. 8","sup":"++"},{"@attributes":{"id":"P-00054","num":"00054"},"figref":"FIGS. 9","i":["a ","b "],"b":"9","sup":"++"},{"@attributes":{"id":"P-00055","num":"00055"},"figref":"FIG. 10","sup":"++"},{"@attributes":{"id":"P-00056","num":"00056"},"figref":"FIG. 11","sup":"++"},{"@attributes":{"id":"P-00057","num":"00057"},"figref":"FIG. 12","sup":"++"},{"@attributes":{"id":"P-00058","num":"00058"},"figref":"FIG. 13","sup":"++"},{"@attributes":{"id":"P-00059","num":"00059"},"figref":"FIG. 14","sup":"++"},{"@attributes":{"id":"P-00060","num":"00060"},"figref":"FIG. 15","sup":"++"},{"@attributes":{"id":"P-00061","num":"00061"},"figref":"FIG. 16","sup":"++"},{"@attributes":{"id":"P-00062","num":"00062"},"figref":"FIGS. 17","i":["a ","b "],"b":"17","sup":"++"},{"@attributes":{"id":"P-00063","num":"00063"},"figref":"FIG. 18","sup":"++"},{"@attributes":{"id":"P-00064","num":"00064"},"figref":"FIG. 19","sup":"++"},{"@attributes":{"id":"P-00065","num":"00065"},"figref":"FIG. 20","sup":"++"},{"@attributes":{"id":"P-00066","num":"00066"},"figref":"FIG. 21","sup":"++"},{"@attributes":{"id":"P-00067","num":"00067"},"figref":"FIG. 22","sup":"++"},{"@attributes":{"id":"P-00068","num":"00068"},"figref":"FIG. 23","sup":"++"},{"@attributes":{"id":"P-00069","num":"00069"},"figref":"FIG. 24","sup":"++"},{"@attributes":{"id":"P-00070","num":"00070"},"figref":"FIGS. 25","i":["a ","b "],"b":"25","sup":"++"},{"@attributes":{"id":"P-00071","num":"00071"},"figref":"FIG. 26","sup":"++"},{"@attributes":{"id":"P-00072","num":"00072"},"figref":"FIG. 27","sup":"++"},{"@attributes":{"id":"P-00073","num":"00073"},"figref":"FIG. 28","sup":"++"},{"@attributes":{"id":"P-00074","num":"00074"},"figref":"FIGS. 29","i":["a ","d "],"b":"29","sup":"++"},{"@attributes":{"id":"P-00075","num":"00075"},"figref":"FIG. 30","sup":"++"}]},"DETDESC":[{},{}]}
