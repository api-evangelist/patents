---
title: Indexing and searching features including using reusable index fields
abstract: Indexing and searching features are provided including associated system, methods, and other implementations. A computing system of an embodiment is configured to reuse or repurpose physical index fields for different tenants as part of providing efficient and scalable indexing and searching services. A method of one embodiment operates to provide an indexed data structure that includes a number of reusable index fields that are shared and used to index information associated with a plurality of tenants. Other embodiments are included.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08620897&OS=08620897&RS=08620897
owner: Microsoft Corporation
number: 08620897
owner_city: Redmond
owner_country: US
publication_date: 20110311
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Indexing methods are used to manage information of complex computing environments as part of optimizing searching systems and techniques to provide relevant search results. Many of the current search engines index items using different physical field structures for each aspect or property of an item to be indexed, leading to very large and high maintenance data structures. For example, a typical technical report may have properties such as title, uniform resource locator (URL), main content, author, date and time of last edit as a few examples. A product description may include properties such as price, size, weight, color, and flavor as examples. The different types of information to be indexed and used may differ significantly from one tenant to the next, resulting in large numbers of physical index fields and empty areas of an associated index. A tenant may refer to a person or group that rents and\/or uses infrastructure shared with others, while being logically isolated from other tenants.","Correspondingly, when offering a search as a service, a search system needs to be cognizant of the fact that different customers or tenants have different types of items to index. Typically, a search service uses dedicated physical structures for the union of all properties of all items of all the different tenants, resulting in an index having a lot of holes and a high number of physical structures to handle for all the various properties. One solution uses a separate index per tenant which results in a large total number of physical structures than when storing the union of all properties in the same index. However, current indexing techniques are not configured to reuse physical index fields as part of providing indexing and searching services.","This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended as an aid in determining the scope of the claimed subject matter.","Embodiments provide indexing and searching features, but are not so limited. In an embodiment, a computing system is configured to reuse or repurpose physical index fields for different tenants as part of providing indexing and searching services. A method of one embodiment operates to provide an indexed data structure that includes a number of reusable index fields that are shared and used to index information associated with a plurality of tenants. Other embodiments are included.","These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory only and are not restrictive of the invention as claimed.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["100","100"]},"For example, the components of the environment  can operate to route or map the same data types of different tenants into the same indexing field structures so that sortable properties are stored in the same physical index fields. In one embodiment, the components of the environment  use a schema model per tenant and a mapping from each tenant schema to defined reusable index fields since each tenant typically requires use of their own particular items and\/or a small number of unique or tenant-specific properties. As such, a reduced index associated with unique or tenant-specific properties and a limited set of physical index fields can be shared and reused by all associated tenants based in part on a reusable field indexing model.","As described below, according to an embodiment, components of the environment  automatically use the same physical field for different properties of a plurality of tenants which significantly reduces the total number of physical fields of an associated index. The components can use an item's properties and requirement for features (e.g., sorting, refiners, range searches, queries, etc.) as part of mapping operations to available reusable physical index fields. As such, components can use indexing techniques directly since the mappings map to fields of the same type for all tenants associated with the indexing service.","As shown in , the exemplary environment  includes a search engine  communicatively coupled to one or more clients  and\/or one or more information repositories . In one embodiment, the information repositories  are used to provide crawled data associated with a number of tenant site collections, sites, farm content, etc. In one embodiment, the environment  includes a shared services farm that can be used to provide a search service including the search engine  that includes indexing features that use, and reuse or repurpose, the same physical index fields for a plurality of associated tenants.","As described below, the mappings component  includes a number of mappings used to map information of the one or more repositories  to a number of reusable index fields. The search engine  can include indexing features that utilize properties of the reusable index fields to store information associated with multiple tenants. Each reusable index field of one embodiment can be associated with multiple tenants such that the mappings map tenant specific information (e.g., overlapping and partially overlapping managed properties) for a plurality of tenants to corresponding reusable index fields.","Each reusable index field of one embodiment can be used as part of providing indexing operations associated with a particular data type and\/or feature for each tenant (see  for example) when indexing tenant-specific properties and associated information. In one embodiment, the index is maintained by storing each reusable index field as a distinct file having a representative data structure. Accordingly, the mappings component  can be configured to include mappings associated with a single instance of a tenant's managed property schema or mappings associated with multiple schemas of a multi-tenancy implementation.","With continuing reference to , the search engine  of an embodiment includes indexing features used to process any number of searchable items including, but not limited to, web pages, documents of any kind, spreadsheets, music files, picture files, video files, contacts, lists and list items, tasks, calendar entries, content of any kind, metadata, meta-metadata, etc. The search engine  of one embodiment includes features that operate, but are not so limited, to: create indexes based on raw textual input and\/or return results for queries by using the indexes; receive content from various clients, crawlers, connectors, etc. which can be processed and indexed; and\/or parse information including documents and other content to produce a textual output, such as a list of properties including document title, document content, body, locations, size, etc. as examples.","As described below, the indexing features of the search engine  can be used in conjunction with refinable, sortable, retrievable, and\/or other manageable properties as part of providing proper mappings to associated reusable index fields. For example, the search engine  can use the indexing features to map tenant information of a plurality of tenants to one or more of reusable index fields based in part on one or more of refinable, sortable, queryable, and\/or retrievable field types.","A refinable field type of an embodiment can be used to manage refinable properties as part of refining a query or some result. For example, a refinable field type can be used as part of a process to drill into query results by using aggregated statistical data, such as using some distribution of managed property values in query results. As an example, a refinable property can be used as part of a search for \u201cCar\u201d over a networked repository that includes cars for sale. As such, the refinable property can be used to return a refiner for a price property as shown in Table 1 below.",{"@attributes":{"id":"p-0023","num":"0022"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Refiner (Price range ($))","No. of cars"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u20020-1000","3"]},{"entry":[{},"1001-5000","45"]},{"entry":[{},"\u20025001-10000","534"]},{"entry":[{},"\u200210001-100000","24"]},{"entry":[{},">100000","15"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"As shown in Table 1, the refinable property or refiner has returned the number of cars that have a price in the associated range. Continuing the example, another refinable property or refiner can be used to return the number of cars for an associated color as shown in the example of Table 2.",{"@attributes":{"id":"p-0025","num":"0024"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Refiner (Color)","No. of cars"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Green","45"]},{"entry":[{},"Red","234"]},{"entry":[{},"Blue","215"]},{"entry":[{},"White","104"]},{"entry":[{},"Other","23"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"A sortable field type of an embodiment can be used in conjunction with sortable properties as part of sorting a result set for example. For the example above, price may have been defined as a sortable property and the search engine can return the identified cars sorted by price (e.g., highest to lowest). A queryable field type of an embodiment can be associated with a field that can be explicitly queried based in part on a particular input requirement (e.g., including the field name as part of query).","A retrievable field type of an embodiment can be associated with a retrievable property that can be defined and returned with a result set, but may not be itself searchable. For example, a tenant administrator of a used car repository could specify that the name and contact information of a car owner is retrievable but not used in relevancy determinations since a buyer would not typically consider such information as part of a search criteria. According to an embodiment of the environment , as part of providing indexing features, each tenant can explicitly identify whether a property is to be refinable, sortable, queryable, and\/or retrievable.","The indexing features of the search engine  can be used to build language specific and other indexing structures using tenant-specific language processing during document and other item processing operations. As described below, the search engine  can operate to minimize and\/or eliminate space taking nulls as part of providing indexing services by mapping custom tenant managed information into reusable index fields having proper and correct characteristics. Moreover, potentially expensive additional transformation operations are not required since the tenant information is mapped directly into the reusable index fields targeted for indexing particular data types.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2","b":["200","1","202","204","200","200","1","206","208"]},"In one embodiment, each reusable index field can be used to index tenant-specific managed property information of a same data type (e.g., one tenant may have a managed property having a numeric data type corresponding to weight, whereas another tenant may have a managed property also having the numeric data type used instead for age). Multiple tenant implementations, also referred to as multi-tenancy, refers to an ability to partition data of otherwise shared services or software in order to accommodate multiple tenants. In one embodiment, the exemplary index representation  can include additional index fields used to index commonly shared properties across a multi-tenant space or domain. In one embodiment, a search service can maintain a first index set associated with commonly shared tenant properties and a second smaller index set associated with tenant-specific properties including a plurality of reusable index fields.","In one embodiment, the index representation  corresponds with an indexed data structure wherein each index field: is uniquely identified by a name; has a type: integer, string, date\/time, decimal, or double; may or may not be retrievable; may or may not be sortable; may or may not be refinable; may or may not be in a full-text index, i.e. freely searchable; and\/or may or may not be queryable (e.g., possible to query for in a query if the field name is explicitly listed before the query term). Accordingly, a reusable index data structure can be configured to include different types of index fields depending on one or more of these features.","As an example, a reusable index data structure can be configured to include one or more of the following reusable index field types including:","A first field type corresponding to searchable strings (in a full-text index);","A second field type corresponding to queryable strings;","A third field type corresponding to sortable and refinable strings;","A fourth field type corresponding to queryable integer information with range search;","A fifth field type corresponding to queryable date\/time information with range search;","A sixth field type corresponding to queryable fixed point decimal information with range search;","A seventh field type corresponding to queryable floating point double information with range search;","An eighth field type corresponding to sortable and refinable integer information;","A ninth field type corresponding to sortable and refinable date\/time information;","A tenth field type corresponding to sortable and refinable decimal information;","An eleventh field type corresponding to sortable and refinable double information; and\/or,","A twelfth field type corresponding to retrievable values.","In one embodiment, the twelfth field type utilizes one shared structure for indexing integer, string, date\/time, decimal, and\/or double information. In multi-tenant indexing implementations, it is not uncommon for one single item property to require more than one of the exemplary field types to be stored properly as part of providing a rich search platform. For example, a sortable and refinable string that is also searchable and retrievable can be mapped to index fields of the first, third, and twelfth types. As described above, tenant-specific schemas can be used to automatically map the tenant properties to appropriate underlying index fields.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIGS. 3A-3C","FIG. 3A"],"b":["300","304","300","302","304","306"]},"Table 3 below includes a number of exemplary shared properties.",{"@attributes":{"id":"p-0048","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["AboutMe","For a contact, or the author of a document, a description of the"]},{"entry":[{},"person"]},{"entry":["Anchortextpartial","List of anchor texts in documents pointing to this document"]},{"entry":["AssignedTo","Name of assignee (if task or similar)"]},{"entry":["Author","All forms of name of the author who wrote this document"]},{"entry":["Body","The body text of the item"]},{"entry":["Charset","The character set used in the document"]},{"entry":["Colleagues","List of colleagues, for e.g a contact"]},{"entry":["Companies","Company names found in the item using property extraction"]},{"entry":["Contentclass","Type of document"]},{"entry":["ContentSource","Origin of document"]},{"entry":["Created","Creation date for the item"]},{"entry":["CreatedBy","Name of creator"]},{"entry":["Department","Department of contact if this is a contact, or department of"]},{"entry":[{},"author if a document"]},{"entry":["Description","Any kind of free-text description of this item"]},{"entry":["Docacl","List of security principals allowed to see this item"]},{"entry":["Docaclsystemid","Security system principals for this item belong to"]},{"entry":["DocComments","Free-text comments"]},{"entry":["DocKeywords","Free-text keywords"]},{"entry":["Docrank","Static rank-value of document (a rank score which is"]},{"entry":[{},"independent of query)"]},{"entry":["DocSubject","Subject for this item"]},{"entry":["Docvector","A similarity vector representation for this item"]},{"entry":["Domain","URL domain, e.g., www.contoso.com"]},{"entry":["DuplicateHash","A document signature for the item"]},{"entry":["EndDate","For a task, when it ends"]},{"entry":["ExpirationTime","When the item is no longer valid"]},{"entry":["File Extension","A file extension"]},{"entry":["Filename","Name of original file"]},{"entry":["FirstName","Name of contact"]},{"entry":["Format","Symbolic representation of the item format, e.g., Internet HTML"]},{"entry":["HostingPartition","GUID representing tenant to which this item belongs"]},{"entry":["Interests","If a contact, details about that contact"]},{"entry":["JobTitle","Job title of a contact"]},{"entry":["Keywords","Additional keywords"]},{"entry":["Language","Detected written language for the item. For multi-lingual items,"]},{"entry":[{},"this is the primary language detected"]},{"entry":["Languages","Detected written languages for the item. Contains all detected"]},{"entry":[{},"languages for multi-lingual items"]},{"entry":["LastModifiedTime","Last time this indexed version of the item was updated (may be"]},{"entry":[{},"newer in the source)"]},{"entry":["LastName","Name of contact"]},{"entry":["Location","Item location"]},{"entry":["Locations","Geographical locations found in the item using property"]},{"entry":[{},"extraction"]},{"entry":["ManagedProperties","Tracking all managed properties in use for each document"]},{"entry":["Memberships","List of groups a contact is a member of"]},{"entry":["MetadataAuthor","Name of person who created various metadata"]},{"entry":["MobilePhone","Phone no. of a contact"]},{"entry":["ModifiedBy","Name of last person modifying this item"]},{"entry":["PastProjects","List of projects a contact has worked on in the past"]},{"entry":["Path","Path to this item"]},{"entry":["personnames","Person names found in the item using property extraction"]},{"entry":["PictureHeight","Description of an optional picture going with the item"]},{"entry":["PictureThumbnailURL","Description of an optional picture going with the item"]},{"entry":["PictureURL","Description of an optional picture going with the item"]},{"entry":["PictureWidth","Description of an optional picture going with the item"]},{"entry":["PreferredName","Preferred name of a contact"]},{"entry":["Priority","Priority number of this item"]},{"entry":["ProcessingTime","Date\/time when the item was processed by item processing"]},{"entry":["Pronunciations","Pronunciations of a contacts name"]},{"entry":["Purpose","What the item is used for"]},{"entry":["Responsibilities","A contacts responsibilities"]},{"entry":["Schools","List of schools attended by a person"]},{"entry":["Site","Site that a document originates from"]},{"entry":["SiteName","The URL of the site that contains the crawled item. If the"]},{"entry":[{},"crawled item is not contained in a site, this property is absent."]},{"entry":["SiteRank","Score reflecting the expected quality of the site the document"]},{"entry":[{},"came from"]},{"entry":["SiteTitle","Title of the item's site"]},{"entry":["Size","Size of the item"]},{"entry":["Skills","Skills of a contact\/person"]},{"entry":["StartDate","A start date, e.g., a task start date"]},{"entry":["Status","Status of the item, e.g. ready for review"]},{"entry":["Tags","Any user defined tags"]},{"entry":["Teaser","A query independent document summary for this item"]},{"entry":["Title","Title for the crawled item"]},{"entry":["TLD","Top level domain for a document"]},{"entry":["Url","The URL of the matching item"]},{"entry":["UrlKeywords","The individual (key)words of an URL string"]},{"entry":["Urls","A list of all URLs that point to the item (including duplicates"]},{"entry":[{},"and hypertext markup language (HTML) redirects)"]},{"entry":["UserName","some system-related user name of a contact"]},{"entry":["UserProfile_GUID","user id of a contact"]},{"entry":["WorkEmail","e-mail address of a contact"]},{"entry":["WorkPhone","phone no of a contact"]},{"entry":"Other"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"With continuing reference to , the index set  includes a set of tenant-specific properties  (A_ and A_), the index set  includes a set of different tenant-specific properties  (A_ and A_), and the index set  also includes yet a different set of tenant-specific properties  (A_ and A_). For this simplified example, the underlying data types for each of the tenant-specific properties are of the same type. As shown in , documents of tenant  (Docs) have values  for the set of tenant-specific properties  (A_ and A_), the documents of tenant  (Docs) have values  for the set of tenant-specific properties  (A_ and A_), and the documents of tenant  (Docs) have values  for the set of tenant-specific properties  (A_ and A_).",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 3B","FIG. 3B"],"b":["320","322","324","322","324","314","316","318","322","324","322","324"]},"According to the underlying field types, indexing operations have mapped content of tenant  to reusable index fields  and  (I() and I()), content of tenant  to the reusable index fields  and  (I() and I()), and content of tenant  to the reusable index fields  and  (I() and I()). The mapping (e.g., \u2192,) or mappings of an embodiment are persisted and used consistently for the corresponding tenant. In one embodiment, components use the same mappings at all times to prevent searching in the wrong data portions and returning incorrect or erroneous search hits. For example, one or more mappings can be stored and persisted using a relational database or a simple XML file and versioning mechanism, where updates can be controlled and shared among all components.","As a result of using reusable index fields, fewer, if any, nulls are associated with a resulting indexed data structure. Correspondingly, the overall search and index service performance can be improved by reusing a physical index field for different purposes across different tenants. As described above, the search engine or other component can use additional mappings from tenant-specific managed properties to actual physical index fields, and reusing the physical index fields for different purposes for different tenants.","For the example of , reusable index fields  and  contain content (e.g., values) from different managed properties for the different tenants, resulting in fewer holes or voids in the resulting indexed data structure. Since index fields can be mapped to files, there will also be a lot fewer files to store than in the alternative implementation described below in conjunction with . Additionally, the number of physical fields (and files) can be reduced significantly based in part on the automatic use and reuse of the same physical field for different properties. As described above, mappings can be used to map an item to a physical index field based in part on the item's properties and requirement for additional features (e.g., sorting, refiners, range searches, etc.).","It will be appreciated that the data of Tenant , Tenant , and Tenant  may be mixed in the same physical files using the features described above in conjunction with the reusable index fields  and  of . In one embodiment, terms from the various indexed items may be prefixed with tenant ID or some other identifier to avoid impacting other tenant's relevancy and searching operations. The prefixing of an embodiment can be performed inside the indexer so as not to affect other parts of a searching system or service.","In one embodiment, security measures can be used to ensure that content of one tenant does not affect how other tenants view and use their own content based in part on storing the tenant ID owning a document for every document in a property (e.g., tenantID). Whenever a tenant issues a query, a query rewrite operation can be used to rewrite the query with one additional query term including the correct tenant ID (e.g., originalQuery AND tenantID=<tenantID>). The searching and indexing features can be configured to use statistics and other measures on a per-tenant basis (not global).",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 3C","FIG. 3B","FIG. 6"],"b":["326","326","326"]},"As shown in , holes or voids  and  exist in the alternative indexed representation  since Tenant  Docs do not include values for tenant-specific properties  (A_, A_) and tenant-specific properties  (A_, A_), Tenant  Docs do not include values for tenant-specific properties  (A_, A_) and tenant-specific properties  (A_, A_), and Tenant  Docs do not include values for tenant-specific properties  (A_, A_) and tenant-specific properties  (A_, A_). Thus, as shown, large portions of the alternative indexed representation  will be empty. As a result, the more tenants and managed properties, the more holes or empty field portions.","Additionally, the alternative indexed representation  of one embodiment results in: each sortable managed property means four additional files on disk; each refinable managed property means five additional files on disk; each managed property of type integer means four additional files on disk; each queryable managed property must map either to a full-text index (which allows for ranking) or a synthetic index (which does not support ranking); each full-text index item which can contain a number of queryable managed properties means additional files on disk (e.g., four (4) dictionary files in total plus seven (7) files per managed property).","In contrast to the limited solution of , the reusable index structure described above resulting from the reuse of physical index fields can be configured with the same number of physical index fields (e.g. files) independent of the number of managed properties to be indexed. Additional tenants and associated information can be efficiently mapped to the reusable index structure. Implementing sparse refiners and attribute vectors can assist to improve on eliminating or reducing any empty fields of a particular implemented index.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 4","b":["400","400"]},"The process  at  operates to identify information for indexing. For example, an indexing service can be configured to continuously index new and modified tenant data maintained as part of a networked computing architecture. In one embodiment, the process  at  operates to use information associated with a plurality of tenants based in part on the use of tenant-specific crawlers crawling pages, documents, etc., adding metadata (e.g., filename, location, URL, title, data, author, etc.), and parsing operations to extract various types of information based on the type of item portions (e.g., web page portions, document portions, etc.) that results in a set of properties for each tenant item.","At , the process  operates to populate index fields with the identified information. In an embodiment, the process  at  operates to populate one or more reusable index fields based in part on information associated with a plurality of tenant-specific managed properties. For example, the process  at  can use a schema library of tenant schemas to map tenant data from a plurality of tenant dedicated repositories having data associated with a number of shared and tenant-specific managed properties to an indexed data structure.","The process  of one embodiment can use the schema library to track particular crawled property to source (e.g., each tenant schema to shared underlying index fields) mappings. In one embodiment, the process  at  can be used to generate a main index structure associated with a number of managed properties shared across all subscribing tenants and a reusable index structure associated with a number of reusable index fields for use in mapping to a plurality of tenant-specific managed properties used as part of providing rich search functionality.","At , the process  operates to store indexed information in mass storage. For example, the process  at  can operate to store the indexed information using a dedicated server of a searching service farm as part of providing multi-tenant searching services. At , the process  operates to use the stored indexed information to serve queries and provide search results. While a certain number and order of operations is described for the exemplary flow of , it will be appreciated that other numbers and\/or orders can be used according to desired implementations.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 5","b":["500","500","502","504","506","508","510","512"]},"The core search engine  includes functionality to create indexes based on raw textual input and return results for queries by using the indexes. In an embodiment, the core search engine  manages the indexing of information associated with a number of shared and\/or tenant-specific properties. The core search engine  of one embodiment utilizes a reusable index structure that includes the use of a defined number of physical index fields to manage the indexing of tenant-specific property information, as described in detail above.","The content API  is used by various clients, crawlers, connectors, etc. (e.g., content domains ) to submit and receive content for subsequent processing and indexing operations. Item processing  is used to parse documents and other content to produce textual and other output, such as a list of properties for example (e.g., document title, document content, body, locations, size, etc.). Query processing  operates to analyze raw user input (e.g., query), including improving and\/or rewriting a query for execution using the core search engine . For example, query processing  can be configured to detect language, correct spelling errors, add synonyms to a query, rewrite abbreviations, etc.","Results processing  operates to process results provided by the core search engine  before they are returned. For example, results processing  can include ranking and relevancy determining algorithms or other features used in part to return relevant search results. The client search API  is used by search front-end and other applications (e.g., client domains ) to issue queries and retrieve results using the queries.","In one embodiment, the system  can also include an alerting engine that operates to store queries and analyzes all incoming (e.g., crawled or fed) documents. For example, when a new document matches a query, the altering engine can send out an alert to any subscribers of the alert. The exemplary system  can be used to provide rich searching services for individual tenants to manage and consume their own data while at the same time providing a store for domain-wide terms, keywords, content types, and other data. The searching services can be shared and hosted on the same farm or hosted on a dedicated services farm or on different farms. Cross-farm and single-farm services can also be implemented.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":["FIG. 6","FIG. 6"],"b":["602","604","606","602"]},"While certain embodiments are described herein, other embodiments are available, and the described embodiments should not be used to limit the claims. Suitable programming means include any means for directing a computer system or device to execute steps of a method, including for example, systems comprised of processing units and arithmetic-logic circuits coupled to computer memory, which systems have the capability of storing in computer memory, which computer memory includes electronic circuits configured to store data and program instructions. An exemplary computer program product is useable with any suitable data processing system. While a certain number and types of components are described above, it will be appreciated that other numbers and\/or types and\/or configurations can be included according to various embodiments. Accordingly, component functionality can be further divided and\/or combined with other component functionalities according to desired implementations.","Exemplary communication environments for the various embodiments can include the use of secure networks, unsecure networks, hybrid networks, and\/or some other network or combination of networks. By way of example, and not limitation, the environment can include wired media such as a wired network or direct-wired connection, and\/or wireless media such as acoustic, radio frequency (RF), infrared, and\/or other wired and\/or wireless media and components. In addition to computing systems, devices, etc., various embodiments can be implemented as a computer process (e.g., a method), an article of manufacture, such as a computer program product or computer readable media, computer readable storage medium, and\/or as part of various communication architectures.","The term computer readable media as used herein may include computer storage media. Computer storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. System memory, removable storage, and non-removable storage are all computer storage media examples (i.e., memory storage.). Computer storage media may include, but is not limited to, RAM, ROM, electrically erasable read-only memory (EEPROM), flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store information and which can be accessed by a computing device. Any such computer storage media may be part of a device or system. By way of example, and not limitation, communication media may include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media.","The embodiments and examples described herein are not intended to be limiting and other embodiments are available. Moreover, the components described above can be implemented as part of networked, distributed, and\/or other computer-implemented environment. The components can communicate via a wired, wireless, and\/or a combination of communication networks. Network components and\/or couplings between components of can include any of a type, number, and\/or combination of networks and the corresponding network components include, but are not limited to, wide area networks (WANs), local area networks (LANs), metropolitan area networks (MANs), proprietary networks, backend networks, etc.","Client computing devices\/systems and servers can be any type and\/or combination of processor-based devices or systems. Additionally, server functionality can include many components and include other servers. Components of the computing environments described in the singular tense may include multiple instances of such components. While certain embodiments include software implementations, they are not so limited and encompass hardware, or mixed hardware\/software solutions. Other embodiments and configurations are available.","Exemplary Operating Environment","Referring now to , the following discussion is intended to provide a brief, general description of a suitable computing environment in which embodiments of the invention may be implemented. While the invention will be described in the general context of program modules that execute in conjunction with program modules that run on an operating system on a personal computer, those skilled in the art will recognize that the invention may also be implemented in combination with other types of computer systems and program modules.","Generally, program modules include routines, programs, components, data structures, and other types of structures that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","Referring now to , an illustrative operating environment for embodiments of the invention will be described. As shown in , computer  comprises a general purpose server, desktop, laptop, handheld, or other type of computer capable of executing one or more application programs. The computer  includes at least one central processing unit  (\u201cCPU\u201d), a system memory , including a random access memory  (\u201cRAM\u201d) and a read-only memory (\u201cROM\u201d) , and a system bus  that couples the memory to the CPU . A basic input\/output system containing the basic routines that help to transfer information between elements within the computer, such as during startup, is stored in the ROM . The computer  further includes a mass storage device  for storing an operating system , application programs, and other program modules\/resources .","The mass storage device  is connected to the CPU  through a mass storage controller (not shown) connected to the bus . The mass storage device  and its associated computer-readable media provide non-volatile storage for the computer . Although the description of computer-readable media contained herein refers to a mass storage device, such as a hard disk or CD-ROM drive, it should be appreciated by those skilled in the art that computer-readable media can be any available media that can be accessed or utilized by the computer .","By way of example, and not limitation, computer-readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EPROM, EEPROM, flash memory or other solid state memory technology, CD-ROM, digital versatile disks (\u201cDVD\u201d), or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the computer .","According to various embodiments of the invention, the computer  may operate in a networked environment using logical connections to remote computers through a network , such as a local network, the Internet, etc. for example. The computer  may connect to the network  through a network interface unit  connected to the bus . It should be appreciated that the network interface unit  may also be utilized to connect to other types of networks and remote computing systems. The computer  may also include an input\/output controller  for receiving and processing input from a number of other devices, including a keyboard, mouse, etc. (not shown). Similarly, an input\/output controller  may provide output to a display screen, a printer, or other type of output device.","As mentioned briefly above, a number of program modules and data files may be stored in the mass storage device  and RAM  of the computer , including an operating system  suitable for controlling the operation of a networked personal computer, such as the WINDOWS operating systems from MICROSOFT CORPORATION of Redmond, Wash. The mass storage device  and RAM  may also store one or more program modules. In particular, the mass storage device  and the RAM  may store application programs, such as word processing, spreadsheet, drawing, e-mail, and other applications and\/or program modules, etc.","It should be appreciated that various embodiments of the present invention can be implemented (1) as a sequence of computer implemented acts or program modules running on a computing system and\/or (2) as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system implementing the invention. Accordingly, logical operations including related algorithms can be referred to variously as operations, structural devices, acts or modules. It will be recognized by one skilled in the art that these operations, structural devices, acts and modules may be implemented in software, firmware, special purpose digital logic, and any combination thereof without deviating from the spirit and scope of the present invention as recited within the claims set forth herein.","Although the invention has been described in connection with various exemplary embodiments, those of ordinary skill in the art will understand that many modifications can be made thereto within the scope of the claims that follow. Accordingly, it is not intended that the scope of the invention in any way be limited by the above description, but instead be determined entirely by reference to the claims that follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIGS. 3A-3C"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
