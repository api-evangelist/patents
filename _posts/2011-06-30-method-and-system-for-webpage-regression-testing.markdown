---
title: Method and system for webpage regression testing
abstract: A regression testing system comprises an automatic test tool configured to capture a first web screen shot and a second web screen shot of a webpage, where the webpage has undergone an update or edit. The regression testing system also comprises a visual comparator configured to identify similar areas in the first web screen shot and the second web screen shot. The visual comparator receives, and compares characteristics of, the web screen shots. Furthermore, the regression testing system generates a report with marked different characteristics between the first and second web screen shots. The regression testing system identifies similar areas in the first and second web screen shots shot even if the similar areas are at different locations within the web screen shots. The comparison performed by the visual comparator includes performing a pixel comparison combined with a marking algorithm to group differences in smaller, related but separate areas.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08682083&OS=08682083&RS=08682083
owner: American Express Travel Related Services Company, Inc.
number: 08682083
owner_city: New York
owner_country: US
publication_date: 20110630
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present disclosure generally relates to webpage testing, and more particularly, to methods, systems, and computer readable mediums for performing webpage regression testing.","Product\/service providers, hereinafter collectively referred to as \u201cservice providers\u201d, extensively use web pages for providing product\/service information, online services, company information, facilitating transactions, online support, and\/or the like. Over a period of time, the service providers may need to update or modify their web applications underlying the web pages to accommodate new or modified business requirements. Such modifications in the web applications may cause unexpected visual changes in the appearance of a web page. The service providers may not want such unexpected visual changes in the web pages. This creates a new challenge for testing professionals as currently available software testing tools are only capable of determining whether data on modified web pages are correct and do not test visual appearance of the web pages for modification. One conventional approach to overcome the aforementioned challenge requires a testing professional to manually compare web pages prior to and after the incorporation of an update or modification to the web applications underlying the web pages. Such manual comparison results in a loss of productive time. Further, such comparison may be prone to errors.","One currently available comparison tool uses color histogram for comparing web pages before and after incorporating the changes in the application. However, such a tool cannot identify a change in the modified webpage in comparison with the original webpage if the web pages under test produce similar color histograms. Another tool currently available discloses a use of pixel comparison for determining changes in the web pages. However, such tools can merely determine that the web pages are different and cannot identify the nature of change or location of change in the modified web page, such as, for example, change in fonts, modified placement of web components, links within the webpage and\/or the like. Consequently, the testing professionals have to spend a lot of time comparing web pages manually to identify the changes and their locations in the modified web page. Thus, there is a need for a method, system and\/or program for testing web pages in a more accurate and efficient manner.","The present disclosure meets the above-identified need by providing methods and systems configured to perform webpage regression testing. In one embodiment, a regression testing system comprises an automatic test tool configured to capture a first web screen shot and a second web screen shot of a webpage, where the webpage has undergone an update or edit. The regression testing system also comprises a visual comparator configured to identify similar areas in the first web screen shot and the second web screen shot. The visual comparator receives the first web screen shot and the second web screen shot from the automatic test tool, and compares characteristics of the first and second web screen shots. Furthermore, the regression testing system generates a report with marked different characteristics between the first web screen shot and the second web screen shot. The report may be generated in HTML.","The regression testing system identifies the same or similar areas in the first web screen shot and the second web screen shot even if the similar areas are at different locations within the web screen. The comparison performed by the visual comparator includes performing a pixel comparison combined with a marking algorithm to group differences in smaller, related but separate areas. The characteristics used during the comparison process may include at least one of color, element positioning, style, and content.","Furthermore, in one embodiment, the visual comparator compares a first rectangular area of the first web screen shot to a second rectangular area of the second web screen shot. The first rectangular area and the second rectangular area are shifted during the comparison process and a percentage difference is determined. The rectangular sizes of the rectangular areas may be determined by performing a pixel-to-pixel comparison of the first web screen shot to the second web screen shot, and forming a rectangular size around a grouping of pixel discrepancies. In another embodiment, the regression testing system is further configured to provide suggestions of image area relocation in order to increase matching of the first web screen shot and the second web screen shot.","Additionally, in an exemplary method, a webpage regression testing method comprises capturing, by an automatic test tool, a first web screen shot of a webpage, implementing a webpage update to the webpage, and capturing, by the automatic test tool, a second web screen shot of the webpage. A visual comparator receives the first web screen shot and the second web screen shot from the automatic test tool. The regression testing method further includes comparing, by the visual comparator, characteristics of the first web screen shot and the second web screen shot, marking different characteristics between the first web screen shot and the second web screen shot, and generating a report of the marked different characteristics. The comparing of the first web screen shot and the second web screen shot may include comparing visual changes occurring after the webpage update.","Furthermore, the webpage regression testing method may include comparing a first rectangular area of the first web screen shot to a second rectangular area of the second web screen shot, and comparison shifting the first rectangular area and the second rectangular area and determining the percentage difference. It may also include determining the rectangular size of the first rectangular area and the second rectangular area, wherein the determining the rectangular size comprises performing a pixel-to-pixel comparison of the first web screen shot to the second web screen shot, and forming a rectangular size around a grouping of pixel discrepancies. To achieve the comparison, the virtual comparator may include performing iterations of the comparison shifting of the first rectangular area and the second rectangular area until a match is made, and marking the differences in the second web screen shot for rectangular areas for which a match is not found. Furthermore, the automatic test tool may be a commercial off the shelf (COTS) software program. Correspondingly, the visual comparator may be a Java application programming interface (API). Furthermore, the process may include configuring parameters to optimize performance of the visual comparator.","Further features and advantages of the present disclosure as well as the structure and operation of various embodiments are described in detail below with reference to the accompanying drawings.","The detailed description of exemplary embodiments herein makes reference to the accompanying drawings and figures, which show the exemplary embodiments by way of illustration only. While these exemplary embodiments are described in sufficient detail to enable those skilled in the art, it should be understood that other embodiments may be realized and that logical and mechanical changes may be made without departing from the spirit and scope of the disclosure. It will be apparent to a person skilled in the pertinent art that this disclosure can also be employed in a variety of other applications. Thus, the detailed description herein is presented for purposes of illustration only and not of limitation. For example, the steps recited in any of the method or process descriptions may be executed in any order and are not limited to the order presented.","For the sake of brevity, conventional data networking, application development and other functional aspects of the systems may not be described in detail herein. Furthermore, the connecting lines shown in the various figures contained herein are intended to represent exemplary functional relationships and\/or physical couplings between the various elements. It should be noted that many alternative or additional functional relationships or physical connections may be present in a practical system.","The present disclosure is described herein with reference to block diagrams and flowchart illustrations of methods, and computer program products according to various aspects. It will be understood that each functional block of the block diagrams and the flowchart illustrations, and combinations of functional blocks in the block diagrams and flowchart illustrations, respectively, can be implemented by computer program instructions.","These computer program instructions may be loaded onto a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions that execute on the computer or other programmable data processing apparatus create means for implementing the functions specified in the flowchart block or blocks. These computer program instructions may also be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instruction means which implement the function specified in the flowchart block or blocks. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer-implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions specified in the flowchart block or blocks.","Accordingly, functional blocks of the block diagrams and flow diagram illustrations support combinations of means for performing the specified functions, combinations of steps for performing the specified functions, and program instruction means for performing the specified functions. It will also be understood that each functional block of the block diagrams and flowchart illustrations, and combinations of functional blocks in the block diagrams and flowchart illustrations, can be implemented by either special purpose hardware-based computer systems which perform the specified functions or steps, or suitable combinations of special purpose hardware and computer instructions. Further, illustrations of the process flows and the descriptions thereof may make reference to user windows, web pages, websites, web forms, prompts, etc. Practitioners will appreciate that the illustrated steps described herein may comprise in any number of configurations including the use of windows, web pages, hypertexts, hyperlinks, web forms, popup windows, prompts and\/or the like. It should be further appreciated that the multiple steps as illustrated and described may be combined into single web pages and\/or windows but have been expanded for the sake of simplicity. In other cases, steps illustrated and described as single process steps may be separated into multiple web pages and\/or windows but have been combined for simplicity.","\u201cTesting professional\u201d may include any individual, user, employee, contractor, group, and\/or other entity that creates, revises, tests, implements, or modifies software and\/or hardware related to the visual comparator and associated components.","\u201cWeb construction logic\u201d\u2014may include an understanding of how a web page is constructed or rendered, such as a web page being constructed using rectangular building blocks and each element on page is rendered as rectangle.","\u201cPixel discrepancies\u201d\u2014may denote differences in the value of Red, Green, Blue and\/or Alpha between pixels at same location in two images","The present disclosure is now described in terms of an exemplary system, in which various embodiments would be implemented. It will be apparent to one skilled in the relevant art(s) that the above disclosure has been described by way of illustration and not limitation, and may be implemented in alternate embodiments.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1","b":["100","100","102","104","102","104"]},"Testing tool  tests quality and\/or reliability of software applications. In one example implementation, testing tool  may include a testing module  and a webpage capture module . Testing module  may be an automatic testing tool, such as a regression testing tool. In one embodiment, testing module  performs regression testing to identify errors (e.g., software regression) in functionalities of the software applications underlying the webpages, after incorporating modifications\/updates to the software applications. Examples of such modifications\/updates include functional enhancements, upgrades, configuration changes, patches, and\/or the like. In one example implementation, testing module  launches a browser and executes test cases for the web applications. In one example, testing module  discussed herein can be a commercial off the shelf (COTS) software program such as a QuickTestProfessional (QTP\u00ae), Selenium\u00ae and\/or the like. Alternatively, testing module  may be proprietary software developed for performing regression testing.","Webpage capture module  captures screen shots of web pages under test and may pass the screen shots to visual comparator  as images. In one example implementation, webpage capture module  may be an image capturing tool. Although webpage capture module  is described as a part of testing tool , one skilled in art can appreciate that webpage capture module  can be a separate unit programmatically coupled to testing tool . Alternatively, webpage capture module  may be integrated with visual comparator . Webpage capture module  captures a first screen shot of a webpage before a webpage update and a second web screen shot of the webpage after a webpage update.","Although, the disclosure describes testing tool  and visual comparator  as separate units, one skilled in art can appreciate that testing tool  and visual comparator  can be modified to be included in a single tool. In one example implementation, testing tool  and visual comparator  may be implemented in a single device. Alternatively, testing tool  and visual comparator  may be implemented in different devices and coupled to each other through a network, for example, an intranet, a Local Area Network (LAN), Internet or the like.","Visual comparator  performs webpage regression testing on the captured web screen shots. The webpage regression testing may include comparison of at least two captured web screen shots to identify and mark the differences in characteristics between the web screen shots caused due to a webpage update. Visual comparator  can identify and differentiate texts (glyphs representing characters in the images), font of the text, color of texts, font styles, missing values, numbers and\/or the like in the web screen shots. Furthermore, visual comparator  can also identify change in component location, size, color, shape and\/or the like in the web screen shots. For example, visual comparator  can identify similar images in the web screen shots placed at different location, having a different size and different colors. Additionally, visual comparator  can mark the differences in the web screen shot with suggestions for modifications. Furthermore, visual comparator  can also generate a report and a difference image illustrating the changes. In one example, visual comparator  may be implemented in Java using a Java Advanced Imaging application programming interface (API) to perform comparison between at least two captured web screen shots, and to generate a difference image, a result image and the report. In other examples, visual comparator  can be implemented using other platforms and\/or languages. Examples of other platforms and\/or languages include C, C++, .Net, PHP. Visual Basic, Visual C, and\/or the like.","In one embodiment, visual comparator  may include a receiving module , a comparison module , a marking module , a suggestion module , an image creation module , and a report module , or a combination of these modules.","Receiving module  receives the first web screen shot and the second screen shot from webpage capture module . Comparison module  compares characteristics of the first web screen shot and the second web screen shot. Examples of the characteristics used by comparison module  may include at least one of color, content, element positioning, element size, transparency, font family, font size, font weight, font decoration (underline, strikethrough, etc) and\/or the like. Comparison module  may perform the comparison using various techniques or combinations of various techniques, for example, using a pixel comparison technique and web analysis technique. In one example implementation, comparison module  may perform pixel to pixel comparison between the first web screen shot and the second web screen shot. Comparison module  may determine areas having pixel discrepancies in the first web screen shot and the second web screen shot. In one embodiment, comparison module  may group pixel discrepancies in smaller, related but separate areas. For example, comparison module  may identify one or more sets of pixel discrepancies belonging to a particular characteristic or element such as a text (glyph), an image and\/or the like. Further, comparison module  may recognize each of the sets of the pixel discrepancies as distinct groups (hereinafter referred to as \u201cgroups\u201d). More specifically, discrepancies may be grouped together based on the similarity of pixel discrepancies (e.g., color difference, transparency difference, magnitude of color difference, etc.) as well as the distance between pixels. Pixels with similar discrepancies and closer to each other may be grouped together. Although one example is provided herein for describing grouping, other forms of grouping are contemplated.","Further, comparison module  may form a first rectangular area encompassing, at least in part, a group of pixel discrepancies in the first web screen shot. Similarly, comparison module  may form a second rectangular area in the second web screen shot. In one embodiment, dimensions of second rectangular area may be same as the dimensions of the first rectangular area. In alternate embodiment, the dimensions of the second rectangular area may be different from the dimensions of the first rectangular area. Also, in one example implementation, comparison module  may allow a user to set a size of the first and second rectangular areas. Although, use of rectangular area is described herein for encompassing pixel areas, other forms of geometric\/non-geometric shapes for encompassing pixel areas have been contemplated.","Comparison module  compares the first rectangular area and the second rectangular area. In one example implementation, comparison module  may use a pixel comparison method alone or in combination with web construction logic, to compare the first rectangular area and the second rectangular area. Comparison module  may perform pixel to pixel comparison between the first rectangular area and the second rectangular area. Comparison module  may identify content, such as for example, texts (glyphs representing characters in the images), font of the text, color of texts, font styles, missing values, numbers and\/or the like in the first and the second web screen shots. Comparison module  may also perform content to content comparison to identify similar content with varying characteristics. For example, comparison module  may perform comparison between the texts of the rectangular areas to determine similarities or differences in content.","Comparison module  may also calculate percentage difference based upon the comparison. For example, the percentage difference may be calculated as a ratio, represented in percentages, of the number of pixels in discrepancy to the total number of pixels encompassed by the first rectangular area. Such combination of comparison techniques not only helps identifying similar content, but also helps identifying difference in characteristics. For example, comparison module  may identify the rectangular areas having the same text but different font and\/or color.","In response to a successful match, comparison module  identifies locations of the first and second rectangular areas and places location information in memory. Otherwise, comparison module  shifts the position of the at least one of the first rectangular area or the second rectangular area to another location having pixel discrepancies in the corresponding screen shots and performs the comparison. In one example, comparison module  may shift the position of the second rectangular area to another area comprising pixel discrepancies of the second web screen shot while keeping the position the first rectangular area the same. In another example, comparison module  may shift the position of the first rectangular area to another area comprising pixel discrepancies of the first web screen shot while keeping the position the second rectangular area the same.","Comparison module  continues to perform shifting and comparison for all areas comprising pixel discrepancies in the first web screen shot and\/or in the second web screen shot or until a match is found. In response to a successful match, comparison module  determines the locations of the first rectangular area and the second rectangular area as the locations of match and places the location information in memory.","In case of failure to find a match, comparison module  may modify the dimensions of at least one of the first rectangular area and the second rectangular area, and continues to perform the comparison, and shifting and comparing operation as described above. In one embodiment, modification of dimensions may be based on web construction logic and\/or grouping of pixel discrepancies. For example, comparison module  may identify similar grouping pixels based on a characteristic, such as grouping based on image content or text and\/or the like using web construction logic. Using the grouping information, comparison module  may identify similar groups in other web screen shots and may modify the dimensions of one of the first and the second rectangular areas. For example, comparison module  may modify the dimension of the first or the second rectangular area comprising a similar image in one of the screen shots based on dimension of similar group comprising an image in another screen shot. In response to a successful match, comparison module  may identify the locations of the first rectangular area and the second rectangular area as the locations of match and place location information in memory. This method of comparison enables identification of similar content with different sizes. For example, comparison module  can identify the same image having different sizes in the same or different locations in the web screen shots.","If this process ends without finding a match, comparison module  may conclude that there is no match or an element is missing, according to one embodiment. The above mentioned comparison method performed by the comparison module  is described in at least one part for one group of pixel discrepancy. The above mentioned method may be iterated for remaining parts of the same pixel group and other pixel groups in the web screen shots.","Based upon the comparison, marking module  marks differences in the characteristics between the first web screen shot and the second web screen shot. Marking module  may mark the location comprising differences in characteristics. For example, marking module  may mark a rectangular boundary around areas having pixel discrepancies. In one embodiment, marking module  may mark boundaries around identified distinct groups. Marking module  may be a graphical tool to visually create an impression around a boundary of different characteristics. Marking module  may mark the differences either in the first web screen shot or the second web screen shot or both.","Suggestion module  provides one or more suggestions to increase matching between the first web screen shot and the second web screen shot. Suggestion module  may use results of pixel comparison alone or in combination with the comparison method or web page construction logic to identify structural changes that can be performed on the second web screen shot to make the second web screen shot visually consistent with the first web screen shot. In one embodiment, comparison module  uses image region recognition techniques to identify underlying rectangular areas. According to one example, suggestion module  may suggest to relocate a webpage component, such as a form field, an image, a link, a text box and\/or the like, from one position to another position. In another example, suggestion module  may suggest to add an image, remove an image, resize an image and\/or the like. In yet another example, suggestion module  may suggest changing a font type, a font color, a font size, font content, and\/or the like.","Image creation module  generates a result image having the differences between the first web screen shot and the second web screen shot. In one example implementation, image creation module  generates a replica of the differences alone in the result image.","Report module  generates a report of the marked different characteristics between the first web screen shot and the second web screen shot. In one example implementation, the report may be generated in a Hyper Text Markup Language (HTML) document, though the report may be generated in any other suitable document formats. The report may include information about the web pages for which webpage regression testing was performed, the result of webpage regression testing, locations of differences in characteristics, comments, hyperlink to the marked second web screen shot, and\/or the like. In one example, the report may include fields, such as a record ID field, a differences field, a location of differences field, a result image field, a comment field and\/or the like, providing details of webpage regression testing results.","Visual comparator  may further include at least one interface such as, for example, a command line interface (CLI), and graphical user interface (GUI) for the testing professional to configure various parameters to optimize performance thereof. One such parameter may be a dimension for comparison area (e.g., rectangular area). Another parameter may be maximum number of iterations that may performed by visual comparator  to ascertain a match between the first web page screen shot and the second web page screen shot.","Computer-based system  as described herein may be a data processing system such as, for example, a server, any suitable personal computer, network computer, workstation, minicomputer, mainframe or the like. Those skilled in art can appreciate that computer-based system  includes an operating system (e.g., Windows NT, 95\/98\/2000, OS2, UNIX, Linux, Solaris, MacOS, etc.) as well as various conventional support software and drivers typically associated with server\/computer. Computer-based system  also includes one or more browsers (e.g., Internet Explorer\u00ae, Mozilla Firefox\u2122, etc.) to display web pages. Computer-based system  may also include a database (not shown) to store web screen shots, corresponding web pages, web construction logic, results of webpage regression testing, result images, difference images and reports.","Furthermore, computer readable instructions of corresponding modules and tools may be loaded onto a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions that execute on the computer or other programmable data processing apparatus create means for implementing the functions specified in the flowchart block or blocks. These computer program instructions may also be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instruction means which implement the function specified in the flowchart block or blocks. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer-implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions specified in the flowchart block or blocks.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 2","b":["200","100","200","202","100","204","100","100","100","206"]},"In step S, the characteristics of the first web screen shot and the second web screen shot are compared to identify visual changes occurring as a result of the webpage update. The characteristics include color, content, element positioning, element size, transparency, font family, font size, font weight, font decoration (underline, strikethrough, etc.) and\/or the like. Computer-based system  uses various techniques including a pixel comparison technique and web construction technique to perform characteristics comparison as described with respect to .","In response to completion of comparing characteristics of the first web screen shot and the second web screen shot, computer-based system , in step S, marks the boundaries of one or more groups of pixels having pixel discrepancies, as a difference. In step S, computer-based system  provides suggestions to modify the web page associated with the web screen shot to increase a match in visual appearance of the second web screen shot to the first web screen shot. For example, computer-based system  may suggest a change in font color for a text in a marked part of web screen shot, to match a font color of a text in a corresponding location of another web screen shot. In one exemplary implementation, the suggestions may be provided on the second web screen shot at locations of markings. Process  may perform multiple iterations between step S and step S, with each iteration improving the match between the first web screen shot and the second web screen shot. In step S, computer-based system  generates a report of marked different characteristics between the first web screen shot and the second web screen shot. In one exemplary implementation, the report is in HTML format. A person skilled in the art will appreciate that any other suitable format may also be used to generate the report.","While the steps outlined above represent a specific embodiment, practitioners will appreciate that there are any number of computing algorithms and user interfaces that may be applied to create similar results. The steps are presented for the sake of explanation only and are not intended to limit the scope in any way.","In an exemplary embodiment and with reference to , a first web screen shot  of a credit card application form is presented. The exemplary application form includes various data fields, such as, first name, last name, address, date of birth, phone number, email address, date of birth, annual income and\/or the like, to enable a user to enter corresponding information. Furthermore, the application form may also include one or more checkboxes and\/or radio buttons allowing the user to select various options.","In one example, one or more web applications underlying the first webpage may be modified to accommodate business requirements, security policies, customer policy, regulatory compliance issues, and\/or the like. Updating in the web applications may result in visual changes to the webpage corresponding to first web screen shot . For example, a webpage update may render a webpage with changes in the location of webpage elements, change in fonts, missing values, change in values, and\/or the like. Webpage capture module  captures a screen shot (i.e. the second web screen shot) of the updated webpage. An example of a second web screen shot  is shown in , according to one embodiment. In the current example, the webpage update has rendered few changes in visual appearances in the webpage. The differences in characteristics in the second web screen shot in comparison with characteristics in the first web screen shot are marked by marking module . An example screen shot of a marked second web screen shot  is illustrated in . The markings illustrate visual changes as a result of the webpage update. In current example, there are six () changes that are identified and marked by visual comparator  in the process of webpage regression testing.","As shown in , a difference characteristic may be marked by drawing a rectangle around a location on second web screen shot  corresponding to the difference characteristic. A person skilled in the art will appreciate that drawing a rectangle is only exemplary way of marking the difference characteristics and any other suitable technique, for example, drawing a circle around the difference characteristics, highlighting the area in a visible manner, pointing an arrow to the difference characteristics and\/or the like, may be used instead of or in addition to it. In the current example, marked second web screen shot  shows six difference characteristics -. Further, as shown, marked second web screen shot , may also optionally include suggestions corresponding to the marked difference characteristics provided by suggestion module .","Difference characteristic  indicates a shift in position of a starting point of the webpage after the webpage update. Marking module  may draw a rectangle around the area where the shift has occurred. Also, in a first embodiment, marking module  may mark the difference characteristic using a suitable label to enable the testing professional to identify a type of difference characteristic, as illustrated here with label \u201cshift\u201d. Further, in a second embodiment, a corresponding suggested modification or action may be provided to the testing professional. For example, suggesting the testing professional perform a vertical shift of the second web screen shot to compensate for the shift in position consistent with the position of the first web screen shot.","Difference characteristic  indicates a change in font style of a text after the webpage update. In the current example, the font style has changed from normal text to bolded text. Marking module  may draw a rectangle around the text of which the font style has changed. Also, marking module  may mark the difference with a label \u201cstyle change\u201d. A suggestion is provided to perform a font style change to keep the font style consistent with the first web screen shot.","Difference characteristic  indicates a change in value after the webpage update. In the current example, the value has changed from 21 to 15. Marking module  may draw a rectangle around the changed value. Also, marking module  may mark the difference with a label \u201cvalue change\u201d. In addition, a suggestion is provided to change the value to be consistent with the value in the first web screen shot. In an exemplary embodiment, a value may be any alphanumeric value.","Difference characteristic  indicates a change in font color after the webpage update. In the current example, the color of the font has changed from black to blue. Marking module  may draw a rectangle around the text of which the color has changed indicating the difference with a label \u201ccolor change\u201d. In addition, a suggestion is provided to change the color of the text to a color that is consistent with the color of the text in first web screen shot.","Difference characteristic  indicates a missing value after the webpage update. Marking module  may draw a rectangle around the area in which a missing value was identified. Marking module  may mark to indicate the difference with a label \u201cvalue missing\u201d. In addition, a suggestion is provided requesting a value that is consistent with the value of first web screen shot.","Difference characteristic  indicates a difference in the button selection after the webpage update. Marking module  may draw a rectangle around the radio buttons in which a discrepancy was identified, and indicate the difference with a label \u201cbutton selection change\u201d. In addition, a suggestion is provided to change the button selection to one that is consistent with the selection of first web screen shot.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 6","b":["600","600","600","602","604","606","608","610"]},"Record ID field  lists identification of web pages corresponding to the screen shots for which the webpage regression test is performed. For example, \u201cNewmember_enroll_app\u201d in second row may be an ID of webpages underlying the screen shots illustrated in  and . Found differences field  lists information indicating whether there were any changes after the webpage update. In the current example, found difference field  illustrates a Boolean value \u201ctrue\u201d indicating that the webpage having record ID \u201cNewmember_enroll_app\u201d had changes after the webpage update. Differences field  lists the positions of the differences found in the second web screen shot in comparison with the first web screen shot. In the current example, \u201cjava.awt.Rectangle [x=0, y=2369, width , height=10]\u201d indicates location of one of the differences, in terms of image coordinates, that was found in the second web screen shot after webpage update. Result image field  provides a miniature result image illustrating locations of changes and markings on the second web screen shot. In one exemplary implementation, the miniature result image may be embedded with a hyperlink, which when clicked provides a result webpage screen shot having marked difference characteristics. Comment field  lists comments such as number of changes, suggestions and\/or the like associated with the particular webpage. Similar to the second row, a third row illustrates a result of webpage regression testing for a record bearing record ID \u201cConfirmation_credit_app\u201d associated with webpages underlying screen shots. The fourth row illustrates a result of webpage regression testing for a record bearing a record ID \u201cService_upgrade_credit_app\u201d. The webpage regression testing did not find any differences between web screen shots corresponding to \u201cService_upgrade_credit_app\u201d. Thus, the fields: found differences , differences , and result image , corresponding to the \u201cService_upgrade_credit_app\u201d shows false, NA and a miniature empty image respectively.","Benefits, other advantages, and solutions to problems have been described herein with regard to specific embodiments. However, the benefits, advantages, solutions to problems, and any element(s) that may cause any benefit, advantage, or solution to occur or become more pronounced are not to be construed as critical, required, or essential features or elements of any or all the claims. It should be understood that the detailed description and specific examples, indicating exemplary embodiments, are given for purposes of illustration only and not as limitations. Many changes and modifications within the scope of the instant disclosure may be made without departing from the spirit thereof, and includes all such modifications. Corresponding structures, materials, acts, and equivalents of all elements in the claims below are intended to include any structure, material, or acts for performing the functions in combination with other claim elements as specifically claimed. The scope should be determined by the appended claims and their legal equivalents, rather than by the examples given above. Reference to an element in the singular is not intended to mean \u201cone and only one\u201d unless explicitly so stated, but rather \u201cone or more.\u201d Moreover, where a phrase similar to at least one of A, B, and C is used in the claims, it is intended that the phrase be interpreted to mean that A alone may be present in an embodiment, B alone may be present in an embodiment, C alone may be present in an embodiment, or that any combination of the elements A, B and C may be present in a single embodiment; for example, A and B, A and C, B and C, or A and B and C.","The present disclosure (i.e., computer-based system , visual comparator , process , any part(s) or function(s) thereof) may be implemented using hardware, software or a combination thereof, and may be implemented in one or more computer systems or other processing systems. However, the manipulations performed by the present disclosure were often referred to in terms, such as comparing or checking, which are commonly associated with mental operations performed by a human operator. No such capability of a human operator is necessary, or desirable in most cases, in any of the operations described herein. Rather, the operations are machine operations. Useful machines for performing the operations may include general-purpose digital computers or similar devices.","In fact, an exemplary embodiment may be directed towards one or more computer systems capable of carrying out the functionality described herein.","Computer system  includes at least one processor, such as a processor . Processor  is connected to a communication infrastructure , for example, a communications bus, a cross over bar, a network, and\/or the like. Various software embodiments are described in terms of this exemplary computer system . After reading this description, it will become apparent to a person skilled in the relevant art(s) how to implement the present embodiments using other computer systems and\/or architectures.","The computer system  includes a display interface  that forwards graphics, text, and other data from the communication infrastructure  for display on a display unit .","The computer system  further includes a main memory , such as random access memory (RAM), and may also include a secondary memory . The secondary memory  may further include, for example, a hard disk drive  and\/or a removable storage drive , representing a floppy disk drive, a magnetic tape drive, an optical disk drive, etc. The removable storage drive  reads from and\/or writes to a removable storage unit  in a well known manner. The removable storage unit  may represent a floppy disk, magnetic tape or an optical disk, and may be read by and written to by the removable storage drive . As will be appreciated, the removable storage unit  includes a computer usable storage medium having stored therein, computer software and\/or data.","In accordance with various embodiments, the secondary memory  may include other similar devices for allowing computer programs or other instructions to be loaded into the computer system . Such devices may include, for example, a removable storage unit , and an interface . Examples of such may include a program cartridge and cartridge interface (such as that found in video game devices), a removable memory chip (such as an erasable programmable read only memory (EPROM), or programmable read only memory (PROM)) and associated socket, and other removable storage unit  and interfaces , which allow software and data to be transferred from the removable storage unit  to the computer system .","The computer system  may further include a communication interface . The communication interface  allows software and data to be transferred between the computer system  and external devices. Examples of the communication interface  include, but may not be limited to a modem, a network interface (such as an Ethernet card), a communications port, a Personal Computer Memory Card International Association (PCMCIA) slot and card, and\/or the like. Software and data transferred via the communication interface  are in the form of a plurality of signals, hereinafter referred to as signals , which may be electronic, electromagnetic, optical or other signals capable of being received by the communication interface . Signals  are provided to the communication interface  via a communication path (e.g., channel) . The communication path  carries the signals  and may be implemented using wire or cable, fiber optics, a telephone line, a cellular link, a radio frequency (RF) link and other communication channels.","In this document, the terms \u201ccomputer program medium\u201d and \u201ccomputer usable medium\u201d are used to generally refer to media such as the removable storage drive , a hard disk installed in hard disk drive , signals , and\/or the like. These computer program products provide software to the computer system . The present disclosure is directed to such computer program products.","Computer programs (also referred to as computer control logic) are stored in the main memory  and\/or the secondary memory . Computer programs may also be received via the communication infrastructure . Such computer programs, when executed, enable the computer system  to perform the features as discussed herein. In particular, the computer programs, when executed, enable the processor  to perform the features of the various embodiments. Accordingly, such computer programs represent controllers of the computer system .","In accordance with an embodiment implemented using a software, the software may be stored in a computer program product and loaded into the computer system  using the removable storage drive , the hard disk drive  or the communication interface . The control logic (software), when executed by the processor , causes the processor  to perform the functions as described herein.","Another embodiment may be implemented primarily in hardware using, for example, hardware components such as application specific integrated circuits (ASIC). Implementation of the hardware state machine so as to perform the functions described herein will be apparent to persons skilled in the relevant art(s).","In yet another embodiment, an exemplary embodiment is implemented using a combination of both the hardware and the software.","While various embodiments have been described above, it should be understood that they have been presented by way of example, and not limitation. It will be apparent to persons skilled in the relevant art(s) that various changes in form and detail can be made therein without departing from the spirit and scope of the present disclosure. Thus, the present disclosure should not be limited by any of the above described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents.","In addition, it should be understood that the figures illustrated in the attachments, which highlight the functionality and advantages, are presented for example purposes only. The architecture is sufficiently flexible and configurable, such that it may be utilized (and navigated) in ways other than that shown in the accompanying figures."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more complete understanding of the present disclosure may be derived by referring to the detailed description and claims when considered in connection with the Figures, wherein like reference numbers refer to similar elements throughout the Figures, and:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
