---
title: Authentication to a second application using credentials authenticated to a first application
abstract: Systems, methods, and program products are provided for switching identity of a user that has a first username associated with a first class of users. According to the method, login information is received from the user, with the login information including the first username, an alternate class, and a password. The user is authenticated based on the first username and the password, and access to the computer system is provided as the alternate class, with the alternate class being different than the first class. In one preferred embodiment, the login information further includes a second username, and access to the computer system is provided with the rights and privileges of the second username.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07647628&OS=07647628&RS=07647628
owner: International Business Machines Corporation
number: 07647628
owner_city: Armonk
owner_country: US
publication_date: 20040309
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["1. Field of the Invention","The present invention relates to computer systems, and more specifically to a system, method, and program product for authenticating as one user but providing access as a different user or class of users.","2. Description of Related Art","In today's computing environment, significant measures are taken to prevent unauthorized access to computer systems and networks while providing authorized users or classes of users with enhanced computing experiences. In the context of computer security, \u201cauthentication\u201d is the process of establishing the identity of a client or user. The authentication is usually based on the user's credentials, which may describe the user's identity, group memberships, administrative roles, special privileges, and so on. \u201cAuthorization\u201d is the process of transforming a confirmed identity of a client or user into the set of actions that the client can and cannot perform on the computer system being accessed.","A user account is often associated with classes of users. This association exists for at least two reasons. The first reason is authorization; privileges for the entire class (i.e., group) of users can be maintained with greater ease than by managing at a per-user level. The second reason is for preferences related to the user experience; in this case the experience presented to the user can be altered based on the user's class association.","It is often useful for a user to be able to temporarily step (or \u201cmorph\u201d) into the role of another user or class of users. This is particularly useful during the testing and development of web applications. Additionally, such identity switching is useful in support roles by enabling a support staff member without access to a user's password to view what the user, or anyone in the user's class, views.","Most conventional computer systems do not provide the ability for a user to assume the role of another user or a class of other users. While some non-web based computer systems provide limited capability for a user to switch to another user identity (e.g., the \u201csu\u201d command in Unix\/Linux computer systems and the CVIEW command in VM computer systems), these conventional commands only allow the root or administrator to switch identity without providing the other user's password. Furthermore, conventional computer systems that provide the ability for a user to access the system as a different user or class of users require at least two steps of entering user IDs and passwords (and possibly other information) before performing authentication and identity switching. Moreover, these conventional computer systems do not maintain an audit trail of which physical user actually performed an activity regardless of that user's actual system identity at the time the activity is performed.","Accordingly, there is a need for a system and method of authenticating as one user but authorizing access as a different user or class of users in a single step, while maintaining appropriate audit trails of a user's activity regardless of that user's system identity at the time the activity is performed.","It is an object of the present invention to provide systems, methods, and program products for authenticating as one user or class of users and then authorizing access as a different user or class of users.","Another object of the present invention is to allow a user to select another user and\/or class of users to switch to at login time, such that the identity switching operation can be performed in one step.","Yet another object of the present invention is to allow identity switching within a system after login has occurred.","A further object of the present invention is to provide an audit trail for a user for any actions taken regardless of the user's present system identity.","One embodiment of the present invention provides a method for switching identity of a user that has a first username associated with a first class of users. According to the method, login information is received from the user, with the login information including the first username, an alternate class, and a password. The user is authenticated based on the first username and the password, and access to the computer system is provided as the alternate class, with the alternate class being different than the first class. In a preferred embodiment, the login information further includes a second username, and access to the computer system is provided with the rights and privileges of the second username.","Another embodiment of the present invention provides a system for switching identity of a user that has a first username associated with a first class of users. The system includes an interface receiving login information from the user, and a processor. The login information includes the first username, an alternate class, and a password. The processor authenticates the user based on the first username and the password, and provides access to the computer system as the alternate class. In one preferred system, the processor provides the user with the experience of a user in the alternate class.","Other objects, features, and advantages of the present invention will become apparent from the following detailed description. It should be understood, however, that the detailed description and specific examples, while indicating preferred embodiments of the present invention, are given by way of illustration only and various modifications may naturally be performed without deviating from the present invention.","Preferred embodiments of the present invention provide systems, methods, and program products for authenticating as one user but authorizing access to a computer system as a different user or class of users in a single step. Preferably, appropriate audit trails of a user's activity are maintained regardless of that user's system identity at the time the activity is performed.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1","b":["100","102","112","114","110","122","114","110","102","104","120","108","106","116","118","104","108","106","118"]},"The exemplary computer system  of  can be part of a client-server network system, as illustrated in . The exemplary network system  includes multiple client computer systems, such as Client  , Client  , Client  , and Client  . These clients are connected to a server  via a network, such as local area network (LAN) . The server  is connected to a remote server  via another network, such as the Internet . Additional client computer systems, such as Client   are connected to the remote server  via another LAN . A user User   can use one of the clients, such as Client  , to run applications, and can interact with other local or remote clients, such as Client  , and users, such as User  , by way of the server . Client applications  can be provided on each client, or the server  or remote server  can provide the applications over the network .",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3","b":["300","302","306","310","314","316","318"]},"The operation of one exemplary embodiment will now be described in detail. In this embodiment, a user is queried for login information by presenting the user with a web based form over a secure connection using secured sockets layer (SSL). The form contains two fields for entering a username and a password, respectively. The user enters a username into the first field. Additionally, the user can optionally enter a colon and an alternate username, two colons and an alternate class (or group) name, or a colon and both an alternate username and class separated by a colon. The user enters a password for the first username and then submits the web form to the target server. In some embodiments, the login information that is provided also includes further information, such as an identifier, a private key, a public key, a token, a smart card input, or a biometric device input.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIGS. 4 and 5","FIG. 4"],"b":["400","402","404","406"]},"In the example of , the user interface login display  shows that the user entered into the username field  his username \u201cjamesk\u201d followed by a colon and then an alternate username \u201cbriang\u201d followed by another colon and then an alternate class name \u201cadmin\u201d. In other words, user \u201cjamesk\u201d is requesting to access the computer system in the user role of the user \u201cbriang\u201d and in the class role of the \u201cadmin\u201d class of users. Thus, in both cases the login information entry for authenticating as one user but authorizing access as an alternate user or\/or class of users is accomplished in one step (i.e., by providing the alternate username and\/or password as part of the username string that is entered).","After the submit button  is clicked, the server receives the entered login information (step S). The server authenticates the user using the password from the password field , and the first string from the username field , which equates to the username with which the password is associated (step S). In this embodiment, this authentication is performed using a central repository (e.g., an enterprise directory) that stores username identities and passwords for all system users in a defined environment. This authentication can be performed locally or remotely to the computer system. Preferably, a common application programming interface (API) is used to securely access the username and password credentials. If authentication fails, an error message is presented to the user (step S). If the user is authenticated, the server determines if the user is attempting to switch identity (step S). More specifically, the server determines if a second and\/or third string (as separated by colons) is present in the username field .","After a successful authentication, the system determines whether the user is attempting to switch identity (step S). If the authenticated user is not attempting to identity switch (i.e., neither a second nor a third string is present in the username field), the user enters the system in the normal manner (step S). If either or both a second and a third string are present in the username field, the server verifies that the user (as identified by the username form the first string in the username field) is permitted to switch to the role of the user identified by the second string and\/or the class of users identified by the third string (step S). This verification is based on an authorization table stored in a relational database, a group based directory system, or any other appropriate storage system (e.g., LDAP, XML, JDO, one or more text files, compressed binary data, serialized object code, or an object-oriented database). Further, this verification can be performed locally or remotely to the computer system.","If the user is not authorized to switch to the requested user or class identity (step S), an error message is presented and the user enters the system in the normal manner (step S). On the other hand, if the requested identity switch is authorized, the system provides access tailored to the alternate user and\/or class that was specified (step S). In other words, the user is given access to the web based application as if he were the alternate user and\/or as if he was in an alternate class of users. Thus, the user is provided with the experience of the alternate user and\/or class. Preferably, the user is also given the rights and privileges of the alternate user and\/or class.","For example, consider the case in which Brian (briang) is a member of the web technology group, James (jamesk) is a member of the IP law group, and the system is personalized at the class level by presenting an experience that is different for different classes of users. In particular, the system is personalized for the web technology class of users to provide them with content regarding web technologies at login, and the same system is personalized for the IP law class of users to present them with content regarding IP law at login. Thus, if Brian just provides his username and password at login, then his class of \u201cwebtech\u201d is used to provide him with the web technology content.","However, the system can use the identity switching process to allow a user to specify the desired type of content when logging in. Then, if Brian logs in with a requested identity of IP law (\u201cbriang::iplaw\u201d), he is provided with the experience of a user in the IP law class regardless of his class. Similarly, if Brian is assisting James with debugging a web application that James is using, Brian could be authorized to login with a switch or morph to the identity of James (\u201cbriang:jamesk\u201d). In this embodiment, the general format of the username field for requesting an identity switch is: <username>:<alt. username>:<alt. class>.","In other example, Konrad is the manager of James, and has delegated to James the responsibility for keeping apprised of the enterprise dashboard day to day activities. The enterprise dashboard consolidates a custom view for each manager of the key aspects of the company. James enters the appropriate URL and is presented with a web form asking for his username and password. James enters into the username field his own username, a colon, and then his manager's username (\u201cjamesk:konradl\u201d). James enters his password into the password field and submits the form.","The enterprise dashboard server receives James' login information (including the request to switch to Konrad's identity) and authenticates him by connecting to the enterprise directory with the username and password that were provided. If this authentication is successful, the enterprise dashboard server then verifies that Konrad has authorized James to switch to his identity by checking a simple registry stored in a database. If James' username is authorized to access Konrad's identity, James is given access as if he were Konrad. Similarly, if James is one of the administrators for the enterprise dashboard, James can enter in the username field his own username, a colon, his manager's username, another colon, and the administrator class of users (\u201cjamesk:konradl:admin\u201d). If authorized, this provides James to use Konrad's identity and enables an administrative view.","Accordingly, the preferred embodiment of the present invention provides a method for securely accessing a computer system and switching to experience the system as another user or class of user in one step. The user is given access to a computer system or application as if the alternate user and\/or in the alternate class of users. That is, the user is provided with the experience, rights, and privileges of the alternate user and\/or class of users. Thus, the user can temporarily step into the role of the other user or class of users. This is particularly useful during the testing and development of web applications. Additionally, such identity switching is useful in support roles by enabling a support staff member without access to a user's password to view what the user, or anyone in the user's class, views.","Further, the system maintains an audit trail in the usual manner, except that audit trail entries are based on the user's actual identity (e.g., jamesk) regardless of any identity switching that is active. More specifically, events are recorded to an audit trail database or log file with the user's actual username. Alternatively or additionally, events can be tracked and certain predefined events can trigger alerts.","The process of preferred embodiments is transparent to the user. In particular, after the user submits the login information the system administers the remaining steps of the identity switching process. Accordingly, the actions of authenticating and identity switching are accomplished in one user step.","The systems and methods of the present invention can be realized in hardware, software, or a combination of hardware and software. A system according to a preferred embodiment of the present invention can be realized in a centralized fashion in one computer system, or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system\u2014or other apparatus adapted for carrying out the methods described herein\u2014is suitable. A typical combination of hardware and software could be a general-purpose computer system with a computer program that, when being loaded and executed, controls the computer system such that it carries out the methods described herein.","An embodiment of the present invention can also be embedded in a computer program product, which comprises all the features enabling the implementation of the methods described herein, and which\u2014when loaded in a computer system\u2014is able to carry out these methods. Computer program means or computer program as used in the present invention indicates any expression, in any language, code or notation, of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a) conversion to another language, code or, notation; and b) reproduction in a different material form.","A computer system may include, inter alia, one or more computers and at least a computer program product on a computer readable medium, allowing a computer system, to read data, instructions, messages or message packets, and other computer readable information from the computer readable medium. The computer readable medium may include non-volatile memory, such as ROM, Flash memory, Disk drive memory, CD-ROM, and other permanent storage. Additionally, a computer readable medium may include, for example, volatile storage such as RAM, buffers, cache memory, and network circuits. Furthermore, the computer readable medium may comprise computer readable information in a transitory state medium such as a network link and\/or a network interface, including a wired network or a wireless network, that allow a computer system to read such computer readable information.","Although several embodiments of the present invention and its advantages have been described in detail, it should be understood that changes, substitutions, transformations, modifications, variations, permutations and alterations may be made therein without departing from the teachings of the present invention, the spirit and the scope of the invention being set forth by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIGS. 4 and 5"}]},"DETDESC":[{},{}]}
