---
title: Management of component members using tag attributes
abstract: A system to associate a plurality of members with a component, associate a member type with one of the plurality of members, and associate a value tag attribute with the one of the plurality of members. Some aspects include receipt of an instruction to access data associated with a member of a component, determination of whether the member is associated with a first tag attribute, and issuance, if the member is associated with the first tag, of a first query for the data associated with the member of the component and for data associated with each other member of the component that is associated with a respective tag attribute.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07814123&OS=07814123&RS=07814123
owner: Siemens Aktiengesellschaft
number: 07814123
owner_city: Munich
owner_country: DE
publication_date: 20041202
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is related to commonly-assigned U.S. patent application Ser. No. 10\/993,712, now issued as U.S. Pat. No. 7,698,292, filed Nov. 19, 2004, and entitled \u201cTAG MANAGEMENT WITHIN A DECISION, SUPPORT, AND REPORTING ENVIRONMENT.","1. Field","The embodiments described below relate generally to the access of data associated with component members.","2. Discussion","Modern industrial systems often rely to some extent on computer-based automation and monitoring. In some examples of monitoring and automation, data arising from the operation of a manufacturing plant is acquired, analyzed and responded to if necessary. The data may arise from independent sources, with each source configured to provide substantially \u201craw\u201d or \u201cnative\u201d information at pre-defined intervals in real or near real-time. The information may consist of numerical values produced by gauges and\/or monitors (e.g., speed, temperature, or pressure). Data of this type is often referred to as \u201cpoint\u201d data.","Examples of systems that may acquire, store and distribute data include industrial automation systems, supervisory control and data acquisition (SCADA) systems, general data acquisition systems, and plant data historians. Many of these conventional systems associate point data with \u201ctags\u201d. These tags may be accessed by other systems, applications and\/or users. A tag may also include \u201cnon-point\u201d data that provides context to its related point data. Non-point data may include descriptive information characterizing the point data, as well as other information such as limits, ranges, etc.","The above-mentioned commonly-assigned patent application and U.S. Pat. No. 6,700,590 describe systems to use a class-based object and view model to collect and display data received from multiple heterogeneous sources. These systems encapsulate the received data as objects, or components. As such, data associated with an aspect of an industrial system may be represented within a component, along with other data associated with the same aspect. The use of components may provide reusability, consistency, inheritance and other benefits known to those familiar with object-oriented techniques.","It is desired, however, to increase the efficiency by which data associated with component members is accessed. It is also desired to provide satisfactory interoperation between a class-based component and view model and a system that uses tags to associate point data with related non-point data.","In order to address the foregoing, some embodiments concern a system, a method, an apparatus, a medium storing processor-executable process steps, and means to define a component. Such definition may comprise association of a plurality of members with the component, association of a member type with one of the plurality of members, and association of a value tag attribute with the one of the plurality of members. In further aspects, a query is received to access data associated with each of the plurality of members that is associated with a tag attribute, and a database is queried for the data associated with each of the plurality of members that is associated with a tag attribute.","In other aspects, a user interface to define a component provides a member interface to associate a plurality of members with the component, a member type interface to associate a member type with one of the plurality of members, and a tag attribute interface to associate a value tag attribute with the one of the plurality of members.","Some aspects include receipt of an instruction to access data associated with a member of a component, the member being associated with a member type, determination of whether the member is associated with a first tag attribute, and, if the member is associated with the first tag attribute, issuance of a first query for the data associated with the member of the component and for data associated with each other member of the component that is associated with a respective tag attribute. In a case that the member is not associated with the first tag attribute, a second query may be issued for the data associated with the member of the component.","Some embodiments relate to an administration device, a server device, and a user device. The administration device is to associate a plurality of members with a component, associate a member type with one of the plurality of members, and associate a value tag attribute with the one of the plurality of members, and the server device is to display the component in a component model. The user device is to receive an instruction to access data associated with the one of the plurality of members, to determine that the one of the plurality of members is associated with the value tag attribute, and to issue a first query to the server device for the data associated with the one of the plurality of members and for data associated with each other of the plurality of members of the component that is associated with a respective tag attribute.","The appended claims are not limited to the disclosed embodiments, however, as those in the art can readily adapt the teachings herein to create other embodiments and applications.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1","b":["1","1","10","20","20","30","40"]},"As used herein, systems \u201cin communication\u201d with one another are directly or indirectly capable of communicating over any number of different systems ports, interfaces, etc. for transferring data, including but not limited to a local area network, a wide area network, a telephone network, a cellular network, a fiber-optic network, a satellite network, an infrared network, a radio frequency network, and any other type of network that may be used to transmit information between devices. Moreover, communication between systems may proceed over any one or more currently or hereafter-known transmission protocols, such as Asynchronous Transfer Mode (ATM), Internet Protocol (IP), Hypertext Transfer Protocol (HTTP) and Wireless Application Protocol (WAP).","Back-end data environment  comprises various data sources, such as plant floor production systems , enterprise resource planning data systems , and other data systems . Data arising from the back-end data environment  may comprise point data such as the aforementioned operational values and non-point data used to characterize, contextualize, or identify the point data and\/or point data source. Each data source of back-end data environment  may comprise many disparate hardware and software systems, some of which may not be interoperable with one another.","Application environment  may issue queries for data to back-end data environment . In response, back-end data environment  acquires and transmits the data to application environment . Such communication may employ any system for querying and responding that is or becomes known.","Application environment  may comprise enterprise server , Web server , and\/or one or more solution servers . Application environment  may comprise or be integrated as components of a single server device or multiple devices. In various embodiments, enterprise server  and solution servers  may comprise application programs developed, for example, using Java and\/or C++ and running under, for example, operating systems such as the Windows\u2122 family of operating systems.","Application environment  may include storage (not shown) for storing definitions of components. A component represents one or more data sources and contains information associated with the data source(s). A component may represent any data source for which back-end environment  acquires data.","A component is made up of one or more members. For example, a \u201ccustomer\u201d component may be comprised of members such as name, identification number and address. Each member of a component is associated with a member type. Member types may include, for example, a number, a date, a text string, a Boolean logical value, or another component.","According to some embodiments, one or more members of a component may be associated with a tag attribute. Non-exhaustive examples of tag attributes include a value tag attribute, a units tag attribute, a description tag attribute, a key tag attribute, a high limit tag attribute, and a low limit tag attribute. A tag component is a component having at least one component member that is associated with a tag attribute. The definition of tag components and the use thereof will be discussed in detail below.","A run-time usage of a component is called a component instance. When a component is reused, a unique instance of that component is created, with a unique name. Different instances of the same component can follow different instructions on where, when, how and how often to retrieve associated data from back-end environment .","Solution servers  are used to access data from back-end environment  that is associated with an instance of a component. In some embodiments, solution servers  include solutions and connectors. A solution is an object instance that is associated with particular data of back-end environment . A connector comprises processor-executable process steps to populate such an object instance with the particular data. Solution servers  thereby allow application environment to access data that is acquired and stored by disparate systems of back-end environment .","Web server  manages data communication between application environment , administration environment , and browsing environment . This data communication may include interaction with administration environment  to define a component model including tag components and non-tag components. Web server  may also or alternatively interact with browsing environment  to receive queries for data associated with component members and to transmit the data to browsing environment . As will be described below, the query may result from a request by a user for a particular view of a component. For instance, one or both of administration environment  and browsing environment  may execute one or more Java applets to interact with Java servlets of Web server  according to some embodiments.","Administration environment  comprises one or more administration clients . Each administration client  may comprise processor-executable process steps executed by a respective administration device. An administration client  may provide an interface that presents a component model including each defined component. By selecting a component from the component model, an administrator may modify the definition of the selected component, create a new view for the component, and\/or edit a view for the component. The administration client  may transmit the modified components and views to enterprise server  for storage.","An administration client  may also allow an administrator to create or modify a solution and its associated connector to back-end data sources. In some embodiments, system  supports Microsoft's Dynamic Data Exchange (DDE) protocol and Microsoft's Open Database Connectivity (ODBC) application programming interface for connecting to data sources of back-end environment .","In a case that an administration client  comprises a Web browser or a Java applet, a respective administration device may comprise any currently- or hereafter-known device capable of executing such a browser or applet. Examples of administration devices according to some embodiments include, but are not limited to, a desktop computer, a laptop computer, a computer terminal, a personal digital assistant, a telephone, and a tablet computer.","Browsing environment  comprises one or more browsing clients . Each browsing client  may comprise processor-executable process steps executed by a respective user device. A browsing client  may provide an interface to access component views. A component view presents data associated with component values to a user. Examples of component views will be discussed below with respect to .","Briefly, a browsing client  may receive an instruction to access data associated with a member of a component, determine whether the member is associated with a first tag attribute, and, if the member is associated with the first tag attribute, issue a first query for the data associated with the member of the component and for data associated with each other member of the component that is associated with a respective tag attribute. In a case that the member is not associated with the first tag attribute, a second query may be issued for the data associated with the member of the component. In some embodiments, such a system may increase the efficiency by which data associated with tag components is displayed.","A browsing client  may comprise a communication application such as a Web browser or a Java applet. As such, a browsing client  may be connected to application environment  through the Internet or through an Intranet. A browsing client  may comprise any other suitable software application according to some embodiments. Browsing clients  may be executed by any suitable user device, including but not limited to those mentioned above with respect to administration environment . In some embodiments, a same device may be used to execute an administration client  and a browsing client .","The environments of  may be connected differently than as shown, and each block shown may be implemented by one or more hardware and software elements. The various hardware and software elements of one or more blocks may be located remotely from each other or integrated together. Some embodiments may include environments, systems, servers, and clients that are different from those shown.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 2","b":["300","300"]},"In at least one embodiment, administration device  includes microprocessor  in communication with communication bus . Microprocessor  may comprise a Pentium\u2122 microprocessor or other type of processor and is used to execute processor-executable process steps so as to control the elements of administration device  to provide desired functionality.","Also in communication with communication bus  is communication port . Communication port  is used to transmit data to and to receive data from devices external to administration device  such as a device housing enterprise server  and\/or Web server . Such data may include component models, component definitions, and view definitions. Communication port  is therefore preferably configured with hardware suitable to physically interface with desired external devices and\/or network connections. For example, communication port  may comprise an Ethernet connection to a local area network through which administration device  may receive and transmit information over a network.","Input device  and display  are also in communication with communication bus . Any known input device may comprise input device , including a keyboard, mouse, touch pad, voice-recognition system, or any combination of these devices. Of course, information may also be input to administration device  via communication port . Display  may be an integral or separate CRT (Cathode Ray Tube) display, flat-panel display or the like used to present graphics and text in response to commands issued by microprocessor .","According to some embodiments, display  presents a user interface to define a component. The user interface, an example of which is shown in , may include a member interface to associate a plurality of members with the component, a member type interface to associate a member type with one of the plurality of members, and a tag attribute interface to associate a value tag attribute with the one of the plurality of members.","RAM (Random Access Memory)  is connected to communication bus  to provide microprocessor  with fast data storage and retrieval. In this regard, processor-executable process steps being executed by microprocessor  are typically stored temporarily in RAM  and executed therefrom by microprocessor . ROM (Read Only Memory) , in contrast, provides storage from which data can be retrieved but to which data cannot be stored. Accordingly, ROM  may be used to store invariant process steps and other data, such as basic input\/output instructions and data used during boot-up of administration device  or to control communication port . One or both of RAM  and ROM  may communicate directly with microprocessor  instead of over communication bus .","Data storage device  stores, among other data, processor-executable process steps of operations data administrator application . Operations data administrator application  may comprise an implementation of an administration client  and is therefore labeled similarly. Administration device  may execute process steps of operations data administrator application  to associate a plurality of members with a component, to associate a member type with one of the plurality of members, and to associate a value tag attribute with the one of the plurality of members. Operations data administrator application  may comprise a Java applet or a standalone application suitable for the operating system of administration device .","Web browser  may comprise processor-executable process steps of a Web client. As such, administration device  may execute process steps of Web browser  to request and receive Web pages from a Web server such as Web server . A Java applet such as operations data administrator application  may execute within an execution engine provided by Web browser .","Data storage device  also includes processor-executable process steps of other applications . Other applications  may include process steps to perform calendaring, e-mail functions, word processing, accounting, presentation development and the like. Data storage device  may also store process steps of an operating system (not shown). An operating system provides a platform for executing applications, device drivers and other process steps that interact with elements of administration device . Data files  may include any electronic files usable by any application of administration device .",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 3","b":["500","500","32","310","300","500","22","500"]},"Process steps  may be executed to associate a plurality of members with a component, to associate a member type with one of the plurality of members, and to associate a value tag attribute with the one of the plurality of members. In some embodiments, process steps  may also be executed to associate a second plurality of members with a second component, the second plurality of members comprising the component, and to associate a respective member type with at least one of the second plurality of member, wherein no tag attribute is associated with any of the second plurality of members.","A member is associated with a component at step S. Component Builder dialog  of  is a user interface that may be used to associate a member with a component according to some embodiments of step S. Component Builder dialog  may be displayed on display  in response to an instruction to edit an existing component or to define a new component.","For example, administration device  may execute process steps of operations data administrator application  to request a component model from Web server . Web server  then retrieves and transmits the component model to administration device , where the component model is displayed on display . An administrator may then use input device  to select a component of the displayed component model, thereby causing display of Component Builder dialog . Operations data administrator application  receives data associated with the selected component from Web server , and populates the fields of dialog  with the data. In a case that Component Builder dialog  was displayed in response to a request to define a new component, the fields of dialog  may initially be empty.","Member interface  may be used to associate a member with the subject component at step S. For example, entry of a member name in interface  may result in an association between a member having the member name and the component named in interface . A description may also be associated with the member using interface . In a case that a new component is being defined at step S, an administrator may also enter the component name in interface  and use interface  to define an icon that will be associated with the component within the displayed component model mentioned above.","A member type is then associated with the member at S. Interface  of dialog  provides a pull-down menu that may be manipulated by the administrator to associate a member type with the member named in interface . Available member types according to some embodiments include Integer, Date, String, Boolean, or Component.","It is then determined at step S whether the member is to be associated with a tag attribute. If so, the member is associated with a tag attribute at step S. According to the  example, manipulation of interface  indicates that the member is to be associated with a tag attribute. The member is associated with a tag attribute in a case that a tag attribute is selected from the pull-down menu of interface . Available tag attributes in the present example include None, Value, Unit, and Description. Tag attributes according to some embodiments also or alternatively include Key, High limit, and Low limit.","According to some embodiments, a tag component is a component having at least one component member that is associated with a tag attribute. Some embodiments allow only one member of a component to be associated with a given tag attribute. For example, only one member of a tag component may be associated with a Value tag attribute and only one other member of the tag component may be associated with a Description tag attribute.","In some embodiments of step S, an administrator may select \u201cAdd\u201d in Component Builder dialog  to pass the member, member type, tag attribute, and description to application environment . Application environment  may store the member, member type, tag attribute, and description in association with one another and in association with an existing or new component of the component model. The member, member type, and description may also or alternatively be displayed in display area  of dialog . Display area  of  shows that members \u201ccollectionTest\u201d and \u201ccollectionTest\u201d of component \u201ctest comp\u201d are themselves components. In some embodiments, display area  may graphically indicate any component members that are associated with tag attributes. Flow continues from step S to step S.","Flow proceeds directly from step S to step S if no members are to be associated with tag attributes. Flow then proceeds from step S to step S if more members are to be associated with the component. If no more members are to be associated with the component, process  terminates.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 5"},"The component Pressure includes at least one primitive member type that is associated with a tag attribute. The component Pressure is therefore referred to herein as a tag component. According to some embodiments, tag components are not displayed within a component model to which they belong.","Component model  of  is shown in a tree or hierarchical format which facilitates visualization and understanding of the relationships and patterns of inheritance\/instantiations for the various component definitions of . Component model  may therefore be displayed to an administrator or user according to some embodiments. As explained, only non-tag components are included in component model .",{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 6","b":["400","400","42","40","400","300","400","400"]},"For example, user device  may operate to receive an instruction to access data associated with a member of a component, the member being associated with a member type, determine if the member is associated with a first tag attribute, and, if the member is associated with the first tag attribute, issue a first query for the data associated with the member of the component and for data associated with each other member of the component that is associated with a respective tag attribute. Such operation may provide more efficient data access than previously available.","More particularly, microprocessor  may execute process steps stored in user device , and communication port  may transmit data to and receive data from enterprise server  and\/or Web server . The transmitted data may include requests for component models and views, and queries for data associated with component members. The received data may include component models, views, and data associated with component members. A user may operate input device  to request views that are in turn displayed on display .","Data storage device  stores, among other data, processor-executable process steps of operations data client application . Operations data client application  may comprise an implementation of a browsing client  and is therefore labeled similarly. User device  may execute process steps of operations data client application  to receive an instruction to access data associated with a member of a component, the member being associated with a member type, determine if the member is associated with a first tag attribute, and, if the member is associated with the first tag attribute, issue a first query for the data associated with the member of the component and for data associated with each other member of the component that is associated with a respective tag attribute. Operations data client application  may comprise a Java applet or a standalone application suitable execution by the operating system of user device .","Web browser  may comprise processor-executable process steps of a Web client. As such, user device  may execute process steps of Web browser  to request and receive Web pages from a Web server such as Web server . Operations data client application  may be provided, for instance as a Java applet executing within an execution engine provided by or through Web browser .","Data storage device  also includes processor-executable process steps of other applications . Other applications  may include process steps to perform calendaring, e-mail functions, word processing, accounting, presentation development and the like. Data files  may include any electronic files usable by any application of user device . Data storage device  may also store process steps of an operating system (not shown).","The process steps stored in data storage devices  and  may be read from one or more of a computer-readable medium, such as a floppy disk, a CD-ROM (Compact Disc-Read Only Memory), a DVD-ROM (Digital Video Disc-Read Only Memory), a Zip\u2122 disk, a magnetic tape, or a signal encoding the process steps, and then stored in data storage devices  and  in a compressed, uncompiled and\/or encrypted format. In alternative embodiments, hard-wired circuitry may be used in place of, or in combination with, processor-executable process steps for implementation of processes according to some embodiments. Thus, embodiments are not limited to any specific combination of hardware and software.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 7","b":["800","800","42","410","400","800","300","800"]},"Briefly, process steps  may be executed to receive an instruction to access data associated with a member of a component, the member being associated with a member type, determine if the member is associated with a first tag attribute, and, if the member is associated with the first tag attribute, issue a first query for the data associated with the member of the component and for data associated with each other member of the component that is associated with a respective tag attribute.","Initially, at step S, client device  requests a component model from a server device. For purposes of the present example, it will be assumed that the server device includes or otherwise has access to the elements of application environment  shown in . In some embodiments of step S, a user launches operations data client application  and manipulates a user interface thereof to instruct application  to request the component model. The request is transmitted using the HTTPS (HyperText Transfer Protocol-Secure) protocol according to some embodiments.","The server device receives the request at step S and transmits the requested component model to client device  at step S. The request may be received by Web server  and passed to enterprise server , which in turn acquires the stored component model and passes it to Web server  for transmission to client device .","Client device  receives and displays the component model at step S.  illustrates an outward view of Solution Viewer dialog  for displaying a component model according to some embodiments. User device  may execute process steps of operations data client application  to display dialog  on display .","Solution Viewer dialog  includes display area  for depicting a component model in a hierarchical navigation tree. Each icon and associated text string in display area  represents a non-tag component. The component model is also displayed using tabs , which may change depending on the identity of the component selected in area . As shown, component TagSync is associated with the Current tab because component TagSync is selected in area .","Returning to process steps , a command is received in step S to access data associated with a component member. The command may be received in response to user manipulation of dialog . For example, a user may manipulate view interface  to select a view associated with the selected non-tag component. According to some embodiments, a user may operate input device  to \u201cright click\u201d on a component in area , resulting in the display of a context menu that lists one or more views associated with the component. The user may then select one of the displayed views.","One or more views may be defined for each non-tag component of a component model. The views may be defined by administration device  or any other device or user of system . A view may include data associated with members of the selected component, as well as data associated with members of other components. It will initially be assumed that a command is received at step S to display a view that includes data associated with a member of a tag component. Moreover, the member is associated with a tag attribute.","User device  therefore determines, at step S, that the member is associated with a tag attribute. Next, at step S, user device  executes operations data client application  to issue a query for the data associated with the member and for the data associated with each other member of the component that is associated with a tag attribute. By way of example according to some embodiments, it will be assumed that the member is CurrentValue of the component Pressure shown in . Accordingly, the issued query is for data associated with the member CurrentValue and for data associated with the members Unit and Description of the component Pressure. The query is not for data associated with members hiLimit and loLimit because these members are not associated with a tag attribute.","The query is received by the server device, which subscribes to the data at step S. Any suitable method may be used to access the data, which may reside in application environment , back-end environment , or elsewhere. According to some embodiments, enterprise server  passes a request for the data to a solution server  that is associated with the selected component. The solution server , as described above, uses a suitable connector to access the data from an element of back-end environment  that owns the data. The requested data is received by the server device at step S.","The subscription to and reception of the data by the server device may comprise two or more transactions with back-end environment . That is, the server device may subscribe to all of the data using a single subscription procedure and receive all of the data using a single reception procedure, or may execute one subscription procedure and reception procedure for each component member.","The data is transmitted to client device  at step S. Client device  receives the data at step S and displays the requested view based thereon at step S. Dialog  shows a requested view according to some embodiments. As shown, view  includes data  associated with three different component members. The members may reflect three different instantiations of a same tag component.","In a case that the member is not associated with a tag attribute, flow proceeds from step S to step S. A query for data associated with the member is issued at step S, and the server device subscribes to the data at step S as described above. The subscription is related only to data associated with the single component member. The data is received at step S and transmitted to user device  at step S, where it is received as described above at step S.","Some embodiments of process steps  provide for controllable circumstances in which data associated with a member of a component is accessed automatically if data associated with another member of the component is accessed. All of the data may be accessed with a single request from browsing environment  to application environment . Such features may provide efficient access to data while maintaining satisfactory system performance.",{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 9","b":["900","930","960","900","960","940","960","930","810","812","814","816","818","820","822","824"]},"View  also shows Tooltip , which is displayed in response to the placement of pointer  on data of a component member that is associated with a Value tag attribute. Tooltip  shows data of other members of the component that are also associated with tag attributes. This data displayed by Tooltip  may be acquired by user device  according to process steps .","In contrast to Tooltip , Tooltip  of  is displayed in response to the placement of pointer  on data of a component member that is not associated with a Value tag attribute. Since the component member is not associated with a tag attribute, the data associated with the component member was acquired using steps S, S, S and S as described above. Accordingly, data associated with other members of the subject component was not acquired and is not available to populate additional fields of Tooltip .",{"@attributes":{"id":"p-0091","num":"0090"},"figref":"FIG. 11","b":["900","1000","1000","1000","1010"]},"Component selection interface  allows a user to input one or more Value Names, each of which represents an instantiation of a tag component. For example, a member of a tag component may be associated with a Key tag attribute. A Value Name reflects data associated with this member in a particular instantiation of the tag component. Accordingly, a Value Name may also be referred to as a tag Key.","Component selection interface  also includes areas to display data associated with a Description tag attribute, a Value tag attribute, and a Unit tag attribute for each represented component instantiation. As described above, this data may be accessed automatically upon accessing data associated with the Key tag attribute of each instantiation.","The above-described embodiments may be altered to create completely or partially different embodiments without departing from the spirit and scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The construction and usage of embodiments are set forth in the accompanying drawings, in which like reference numerals designate like parts, and wherein:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
