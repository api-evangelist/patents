---
title: Method and apparatus for processing data using objects
abstract: One embodiment of the invention provides a method for processing actuator, sensor or radio frequency identification (RFID) tag data. The method includes receiving actuator, sensor or RFID tag data and generating a Java object associated with the actuator, sensor or RFID tag data. The Java object includes an assigned destination address. The method further includes forwarding the Java object to the assigned destination address.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07130773&OS=07130773&RS=07130773
owner: SUN Microsystems, Inc.
number: 07130773
owner_city: Santa Clara
owner_country: US
publication_date: 20041130
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The present invention relates to the general field of objects defined within an object-oriented programming system. More specifically the invention relates to a method and apparatus for processing actuator, sensor or radio frequency identification tag data.","Computers are often used to gather and process data from RFID tags, actuators, or sensors. For example, RFID tags are used to uniquely identify products or items. RFID tag systems allow objects to be affixed with tags such than when the tag is within the electromagnetic field of a tag reader, the object can be identified by reading the tag that is attached to the object. In addition to identification data, the tag may contain other data about the object. The RFID tags can be encoded with user-defined data at time of use, pre-coded at the time of tag manufacture, or a combination of both. There are a great number of different RFID tag types, as well as different encoding, interrogation, and transmission protocols. RFID tags may be a single integrated circuit chip coupled to an antenna or may be a more complex device including sensors for temperature, position, or other desired features. Computers are used in conjunction with actuators and\/or sensors to collect data in a variety of applications. For example, actuators and sensors are useful in such diverse applications as medical monitoring equipment, temperature monitoring equipment, weather monitoring electronics, location-based radio transmitters, and numerous other applications. In one example, actuators may serve as electronic components which can control machinery or electronics.","In the prior art, actuators, sensors, RFID tags, and devices employing actuators, sensors or RFID tags exist primarily on isolated and non-compatible individual networks. As described earlier, there are a wide variety of RFID tag, actuator, and sensor systems. Data collected from different and non-compatible networks using different protocols is difficult to collect, process, transmit, and analyze. This is particularly the case when trying to collect and analyze information from large numbers of remote points or when the collected data is to be transmitted via a network and processed at a network node other than the collection node. Thus, there is therefore a need for improved methods and apparatuses for collecting, processing, and sending data collected from actuators, sensors or RFID tags.","The present invention provides a solution to the needs described above through an inventive method and apparatus for collecting and processing data from actuators, sensors or RFID tags.","One embodiment of the invention provides a method for processing actuator, sensor or radio frequency identification (RFID) tag data. The method includes receiving actuator, sensor or RFID tag data and generating a Java object associated with the actuator, sensor or RFID tag data. The Java object includes an assigned destination address. The method further includes forwarding the Java object to the assigned destination address. In a further embodiment of the invention, the Java object is assigned a time to live value.","One embodiment of the invention provides a method for processing actuator, sensor or radio frequency identification tag data where actuator, sensor or RFID tag associated data encapsulated in a Java object is received. The Java object includes a time to live value and a destination address. The method includes decrementing the time to live value by an increment to generate a new time to live value and deleting the Java object if the new time to live value is equal to zero. The method further includes forwarding the RFID tag data to the destination address if the time to live value is not equal to zero.","The present invention provides a solution to the needs described above through an inventive method and apparatus for processing actuator, sensor or radio frequency identification tag data.","Other embodiments of the present invention will become apparent to those skilled in the art from the following detailed description, wherein is shown and described only the embodiments of the invention by way of illustration of the best modes contemplated for carrying out the invention. As will be realized, the invention is capable of modification in various obvious aspects, all without departing from the spirit and scope of the present invention. Accordingly, the drawings and detailed description are to be regarded as illustrative in nature and not restrictive.","The terms Java, Java Virtual Machine, and Java 2 Platform, Micro Edition are registered trademarks of Sun Microsystems, Inc., of Santa Clara, Calif.","The data structures and code described in this detailed description are typically stored on a computer readable storage medium, which may be any device or medium that can store code and\/or data for use by a computer system. This includes, but is not limited to, magnetic and optical storage devices such as disk drives, magnetic tape, CDs (compact discs) and DVDs (digital video discs), and computer instruction signals embodied in a transmission medium (with or without a carrier wave upon which the signals are modulated). For example, the transmission medium may include a communications network, such as the Internet.","The present invention provides a method and apparatus for processing, managing, or sending data received from RFID tags, actuators, or sensors. Although the present description herein may describe data received from RFID tags, actuators, or sensors individually in certain instances for convenience or clarity, the invention may be utilized with data received from actuators, sensors, RFID tags, or all three: actuators, sensors and RFID tags. The present invention may also be utilized with data received from RFID tags incorporating actuators or sensors. In one aspect of the invention, data received from actuators, sensors or RFID tags is encapsulated into Java objects. The present invention may also be utilized with data received from other electronic devices or components in addition to RFID tags, actuators, and sensors.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["2","4","4","6","6","8","6","10","2","5","3","6","2","2","20"]},"The network further includes a network node  with a software hub server (SHS) . SHS  includes a hub server application  and RFID tag reader . The network further includes a network node  including a client . Although  illustrates two software hub servers at network nodes, the present invention may utilize any number of software hub servers and network nodes or may comprise only a single software hub server collecting data from RFID tags. The network may further include any number of clients. Furthermore, any software hub server may gather data from RFID tags, actuators, or sensors.","In an embodiment of the invention, network node , network node , and client  are TCP\/IP enabled devices and therefore addressable as network devices. The present invention utilizes a TCP\/IP connection for delivery and management of RFID tag data, actuator data, or sensor data encapsulated Java objects. The network includes a TCP\/IP connection  between network node  and network node  and a TCP\/IP connection  between network node  and client . One of ordinary skill in the art will recognize that a TCP\/IP channel can be established between any network node either directly or indirectly. Furthermore, TCP\/IP connection  and TCP\/IP connection  may be established using a wireless connection. Protocols for exchanging data via TCP\/IP networks are well known and need not be discussed herein. The TCP\/IP network could be the Internet or a private intranet. However, the present invention is not restricted to TCP\/IP networks.","Client  is a computing device capable of running Java applications, such as a desktop personal computer, mobile handset, or personal digital assistant. Client  may operate on a variety of hardware and software platforms. The present invention allows the collected actuator, sensor or RFID tag data to be used on disparate hardware and software platforms through the use of Java objects. Client  includes a software application\/service which receives and processes Java objects to utilize encapsulated data. Client  may archive received Java objects or perform further data analysis. In a further embodiment of the invention, client  may also run a hub server application. Each hub server application may activate Web services on the encapsulated data according to software hub server settings and installed Web services on the software hub server. In an embodiment of the invention, the hub server application reports all logged activities to a system administrator and report errors or danger conditions to the system administrator.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2","b":["6","6","28","10","30","32","34","28","6","32","28","8","32","6","30","6","10","10"]},"Storage  may include a hard drive, flash memory, CD-ROM, or other non-volatile storage mechanisms. Storage  may include a Java database  for storing logged events by hub server application . Java database  contains a log of events including RFID tag data Java objects created, received, forwarded, and transmitted by SHS . If a RFID tag data Java object is utilized by a background service\/application residing on SHS , the object is consumed and the event is logged in Java database .","Referring to , the architecture of the software residing on SHS  in an embodiment of the invention is illustrated. At the lowest level of the diagram shown in  is hub server hardware  on which the software of the present invention is executed. Hardware  executes an operating system  which provides the basic functionality of the hub server platform. Operating system  is Linux in an embodiment of the invention, but other operating systems may be used in further embodiments. A hardware abstraction layer (not shown) comprises software drivers to control the various devices in hub server hardware . The particular operating system  selected should be as independent as possible from the hardware devices. Operating system  supports Transport Control Protocol\/Internet Protocol (TCP\/IP) . Each software hub server is therefore addressable as a network device.","Hub server hardware  executes Java 2 Platform, Micro Edition (J2ME). Java 2 Platform, Micro Edition is an application environment specifically designed to address the needs for commodities in the consumer and embedded space, including mobile phones, pagers, and personal digital assistants. The Java 2 Platform, Micro Edition platform  is particularly suitable for smaller footprint devices that do not have the resources for a full Java platform or in which it would not be efficient to run a full Java platform. Java 2 Platform, Micro Edition  includes a subset of core Java application programming interfaces (APIs) and a set of APIs which are directed specifically to features required by these applications.","The Java 2 Platform, Micro Edition APIs provide a high-level, protocol-independent, common set of APIs for applications that are independent of underlying hardware platforms on which the applications are deployed. Java 2 Platform, Micro Edition  includes a Java virtual machine. In a further embodiment, Java 2 Platform Micro Edition and the Java virtual machine may be implemented separately. In an embodiment of the invention, Java 2 Platform, Micro Edition  utilizes the connected device configuration and foundation profile. Hub server application  uses Java 2 Platform, Micro Edition 42 APIs to create RFID tag data, actuator data or sensor data Java objects from the RFID tag data received from RFID tags , actuators  or sensors . The RFID tag data Java objects abstract data received from lower level protocols utilized by a variety of RFID tag systems. In an embodiment of the invention, hub server application  is configured to abstract data from one or more RFID tag systems, actuator systems, or sensor systems.","Hub server application created RFID tag data, actuator data, or sensor data Java objects are then processed and handled by Java-enabled devices. A Java object can be transmitted from one network node to another network node. The Java object format is useful because the Java objects can be serialized. The Java object can then be deserialized at the receiving network node to instantiate the same Java object on a different computer. Furthermore, Java objects can be broadcast across a network.","Hub server hardware  runs a Java virtual machine. The Java virtual machine is a software application that executes in the environment of the native operating system and provides a common environment for applications written in the Java programming language. The Java virtual machine is responsible for Java portability. Java virtual machine provides a layer of abstraction between the operating system  and an executable program, essentially providing a Java-to-operating system interface so that programs written in the Java programming language can be executed on a platform running an operating system which would not otherwise support execution of the program. Because Java virtual machines exist for many different platforms, the same Java language program can be executed on each of these different platforms. As a result, the remainder of the system is no longer tied to the original hardware, the original operating system, or the original supplier thereof.","The present invention utilizes hub server application  to create and manage Java objects from RFID tag data, actuator data, or sensor data. In an embodiment of the invention, hub server application  includes a connection manager  and a communication manager . Connection manager  interfaces with RFID tag reader to extract and receive data from the RFID tags read by RFID tag reader . Connection manager  monitors for any data read by RFID tag reader  and transfer RFID tag data to communication manager . Communication manager  encapsulates RFID tag data into RFID tag data Java objects and forwards RFID tag data Java objects to other network nodes. Communication manager  also assigns TimeToLive values and ToAddress values as described below. Hub server application  resides on top of Java 2 Platform Micro Edition . Although described using a connection manager  and a communication manager , one of ordinary skill in the art will recognize that hub server application  can utilize other configurations.","Hub server application  is a Java application designed to receive RFID tag data and create and manage Java objects. Hub server application  continuously runs and manages and controls the resources of SHS  to receive and process RFID tag data. Hub server application may include one or more lookup tables which correlate data extracted from RFID tag data and data to be inserted into a created RFID tag data Java object. In an embodiment of the invention, hub server application  is configured to receive sensor, actuator, and RFID tag data from multiple different protocols. Hub server application  may then simultaneously receive and process actuator, sensor and RFID tag data from isolated and non-compatible networks. As a result, one or more heterogeneous networks may operate as a homogeneous network of actuators, sensors and\/or RFID tags. Abstraction of the received data into Java objects allows actuator, sensor and RFID tag data to be treated in a homogeneous manner in software.","Referring to , an embodiment of a RFID tag data object  utilized by the invention to store received data is illustrated. RFID tag data objects  are instances of the RFID tag data class created by the hub server application . Each RFID tag data Java object  is created as an instance of the RFID tag data class by hub server application . The objects may therefore be said to have been instantiated from the class. The RFID tag data class sets out variables and methods for objects which belong to the class. The definition of the RFID tag data class does not itself create any RFID tag data Java objects . The RFID tag data class may define initial values for its variables, and it normally defines the methods associated with the class. The RFID tag data class may provide all of the program code which will be used by RFID tag data objects  in the class, hence maximizing re-use of code which is shared by objects in the class.","RFID tag data object  includes an identifier variable , data variable , ToAddress variable , and TimeToLive variable . ToAddress variable  receives an Internet Protocol (IP) address in an embodiment of the invention. Although RFID tag data object  has been described having an identifier variable  and data variable , one of ordinary skill in the art will recognize that data received from RFID tags, actuators, or sensors will vary based on the particular application and the RFID tag data class and resulting RFID tag data objects  will vary greatly based on the particular application at hand.","TimeToLive variable  receives an integer value. In an embodiment of the invention, the value assigned to TimeToLive variable  represents the lifespan of RFID tag data object  in terms of number of times sent from a hub server application at one network node to a hub server application at a different network node. Each time the RFID tag data Java object is transmitted to a different node on the network, the TimeToLive value is decremented by a value of one. Utilizing TimeToLive variable , the plurality of hub server applications ensure that a RFID tag data object  does not travel the network in an endless loop. The RFID tag data object  is deleted when the value of TimeToLive variable  reaches zero. In further embodiments, the TimeToLive value may be based on other criteria besides the number of times forwarded.","In operation, RFID tag data is converted to RFID tag data Java objects by hub server application . Referring to , a flowchart illustrating the operation of the invention in one embodiment is shown. Although described in reference to RFID tag data, the process described is applicable to actuator data and sensor data as well. At step , RFID tag reader  interrogates an RFID tag . At step , RFID tag data from RFID tag  is received by hub server application .","At step , hub server application creates Java object RFID tag data object  with variables including identifier variable , data variable , ToAddress variable , and TimeToLive variable . The variable fields and content of RFID tag data object  created will vary based on the particular application of the RFID tags and RFID tag data. In an embodiment of the invention, the RFID tag data is an ASCII string including a name or type identifier as well as associated data. Hub server application  algorithmically extracts the data from the text string and utilizes it to fill identifier variable  and data variable . Hub server application  may utilize a lookup table to perform pattern matching to correlate ASCII string data with information used to fill variables in RFID tag data object .","In a further embodiment of the invention, hub server application  executes an algorithm to analyze the data received from actuators, sensors or RFID tags. The algorithm determines if and when a Java object is created and the information the Java object will contain. Hub server application  may create a Java object only if the data meets certain conditions determined by the algorithm.","At step , hub server application  assigns a ToAddress value to ToAddress variable . In one embodiment of the invention, the ToAddress value may be determined using a ToAddress lookup table which correlates extracted RFID tag data with a ToAddress. In another embodiment, hub server application  may execute other algorithms to determine the ToAddress. The ToAddress value may be determined by other means as well. For example, the ToAddress value may be extracted from the RFID tag data.","At step , hub server application  assigns a TimeToLive value to TimeToLive variable . The TimeToLive value may be predetermined by a system manager. At step , hub server application  forwards the RFID tag data object based on the ToAddress. The RFID tag data object may be sent to one or more intermediary software hub servers prior to reaching the ToAddress destination. At step , hub server application  logs the actions performed in Java database . The RFID tag data object is utilized or processed (also referred to herein as \u201cconsumed\u201d) at the ToAddress destination.","Referring to , a flowchart illustrating the operation of a further aspect of the invention is shown. In operation, a software hub server located at a network node may receive a RFID tag data object for processing from a software hub server located at a different network node. In reference to , at step , hub server application  at network node  receives a RFID tag data object from software hub server application  at network node  using TCP\/IP connection . At step , hub server application  accesses the value of TimeToLive variable . At step , the TimeToLive value is decremented by a value of one. At step , the TimeToLive value is examined to determine if the value is equal to zero. If yes, at step  the RFID data Java object is deleted. If no, at step  the RFID data Java object is forwarded utilizing the value of ToAddress variable . The RFID tag data object may be sent to intermediary software hub servers prior to reaching its final ToAddress destination or until the TimeToLive value reaches zero. In a further embodiment of the invention, the RFID tag data object may be consumed at an intermediary software hub server prior to reaching the ToAddress or being deleted. Consumption may occur when a service running on an intermediary hub server processes a received RFID tag data object. The RFID tag data object is forwarded to intermediary servers until it reaches it's ToAddress, is consumed by a software hub server, or it is deleted when the TimeToLive value reaches zero.","The present invention may be utilized in a network of a plurality of wireless software hub servers, with each software hub server having a hub server application with functionality described above.  illustrates a network on which the present invention operates in this further embodiment. In an embodiment of the invention, a plurality of wireless networking software hub servers  dispersed within a geographic region  collect data from dispersed RFID tags  dispersed. Each wireless networking software hub server  interrogates and receives data from RFID tags  in its limited proximate geographic location. RFID tag data received at each software hub server  is processed as described above to encapsulate the RFID tag data and assign a destination ToAddress. In an embodiment of the invention, each RFID tag data object is forwarded between wireless software hub servers in the direction of the ToAddress. The RFID tag data object is forwarded until it reaches the ToAddress or the TimeToLive value reaches zero. In this manner, system failures or other problems resulting from RFID tag data objects being forwarded in an endless loop are prevented.","In a further embodiment of the network illustrated in , each wireless software hub server includes one or more integrated sensors or actuators  which provide sensor or actuator data to the hub server application. Due to the limited transceiver range of each software hub server, encapsulated sensor or actuator data Java objects are forwarded to intermediary software hub servers before reaching a final ToAddress destination. In an embodiment of the invention, the wireless software hub servers with integrated sensors or actuators may be dispersed widely as \u201cintelligent dust\u201d or \u201cintelligent agents\u201d throughout a mesh.","Having described the invention in terms of a preferred embodiment, it will be recognized by those skilled in the art that various types of components may be substituted for the configuration described above to achieve an equivalent result. It will be apparent to those skilled in the art that modifications and variations of the described embodiments are possible, and that other elements or methods may be used to perform equivalent functions, all of which fall within the true spirit and scope of the invention as measured by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["The features and advantages of the apparatus and method of the present invention will be apparent from the following description in which:",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
