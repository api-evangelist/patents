---
title: Application programming interface for measuring devices
abstract: An application programming interface (API) that provides a common interface between an application program and plural different types of color measuring devices each having at least one color measuring sensor. The API includes plural functions for operating any of the plural different types of color measuring devices. In order to complete an operation performed by at least one of the plural functions, the function that performs the operation must be called a number of times which is different for at least two different types of color measuring devices. For a particular color measuring device, the API provides the application program with flow control data of the number of times that the function must be called. This flow control data preferably can be provided by the function, in the form of a call-again value or as a numerical value, or by a separate function in the API such as a get-device-capabilities function. In some embodiments of the invention, a combination of these methods of providing the flow control data is utilized. Preferred functions for operating any of the plural different types of color measuring devices include a calibrate-position function, a calibrate-sensor function, a move-to-patch function, and a make-measurement function.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06873431&OS=06873431&RS=06873431
owner: Canon Kabushiki Kaisha
number: 06873431
owner_city: Tokyo
owner_country: JP
publication_date: 19990202
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","FIELD OF THE INVENTION","DESCRIPTION OF THE RELATED ART","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application is being filed with a microfiche appendix of computer program listings consisting of one (1) fiche having fifty-one (51) frames.","A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","The present invention concerns an application programming interface (API) usable by a software developer when writing an application program, such as a color calibration program, that uses a color measuring device. In particular, the present invention relates to an API that provides a common interface between such an application program and plural different types of color measuring devices.","One common use of color measuring devices is to calibrate color fidelity of color recording devices. Typically, the recording device (such as a color laser beam printer or ink jet printer) records color patches on a recording medium. The color values of the patches are measured by the color measuring device, the measured values are compared against expected (or ideal) values, and the comparisons are used to calibrate the recording device.","Color measuring devices come in many different physical structures, such as XY tables, strip readers, hand-held patch readers, and flatbed scanners, and operate in different ways using different numbers and types of sensors. Color patches are input in different ways to color measuring devices which have different physical structures. For example, patches are input to an XY table on a sheet that has an array of patches printed thereon, whereas patches are input to a strip reader on strips that each have one or more rows of patches printed thereon. The sensors that actually perform color measurements are positioned on patches in different ways depending on the physical structures of the color measuring devices.","In order to make accurate color measurements for use in calibrating a color recording device, the color measuring devices themselves must be calibrated properly. For example, for some color measuring devices to position their sensor(s) accurately, the positioning mechanism in the color measuring devices must be calibrated. In addition, the sensors in some color measuring devices must be calibrated so as to ensure proper color measurements. Depending on the numbers and types of sensors as well as the physical structures of the color measuring devices, calibration of the position of the sensors and calibration of the sensors differ among different types of color measuring devices.","In addition, application programs that use color measuring devices should provide interfaces to the user. These interfaces should include instructions to the user at various points throughout operations performed using the color measuring devices. The timing and content of these instructions also differ among different color measuring devices.","As a result of the foregoing differences in operation among the different types of color measuring devices, a different command set is needed for each different type of device. Application programs that use the color measuring devices often must include different numbers of calls to commands in the different command sets in order to perform a same operation with different color measuring devices. In addition, the application programs often must include different interfaces for each different type of color measuring device. These different command sets and interfaces greatly complicate the task of writing application programs that perform color measurements. As a result, conventional application programs for performing color measurements must include separate and often lengthy routines for taking color measurements with each different type of supported device. In addition, once a conventional application program is written, that application program cannot use new types of color measuring devices, because the new device would require calls to commands in a new command set.","Accordingly, there is a need for an application programming interference (API) that allows a software developer to write a single set of routines for making color measurements using plural different types of color measuring devices.","The present invention addresses the foregoing need by providing an application programming interface that abstracts the operations needed to perform color measurements. An application program only needs to include calls to the functions in this API in order to use any supported type of color measuring device. The API in turn calls the necessary commands for performing color measurement operations.","In order to allow the application program to provide appropriate instructions during operations performed with a color measuring device, certain functions in the API are called numerous times in order to complete their respective operations. In order to enable the application program to call such a function a correct number of times, the API provides the application program with flow control data of the number of times that the function needs to be called so as to complete its operation with a particular color measuring device. The API also preferably provides the application program with display values for display so as to instruct the user in manipulating the color measuring device.","By virtue of the foregoing, the application program does not need to include separate routines for each different type of supported color measuring device. Instead, the application program need only include calls to the functions in the API and include mechanisms for handling display values and flow control data provided by the API. Moreover, if the API is implemented in a dynamically linkable library (DLL), an existing application program that calls the functions in the API can use new types of color measuring devices by linking to an updated version of the DLL.","Accordingly, in one aspect the invention is an API that provides a common interface between an application program and plural different types of color measuring devices each having at least one color measuring sensor. The API includes plural functions for operating any of the plural different types of color measuring devices. In order to complete an operation performed by at least one of the plural functions, the function that performs the operation must be called a number of times which is different for at least two different types of color measuring devices. For a particular color measuring device, the API provides the application program with flow control data of the number of times that the function must be called. This flow control data preferably can be provided by the function, in the form of a call-again value or as a numerical value, or by a separate function in the API such as a get-device-capabilities function. In some embodiments of the invention, a combination of these methods of providing the flow control data is utilized.","Preferably, the functions in the API also provide the application program with display values which are different for at least two different types of color measuring devices. The display values are for display to a user, preferably by the application program, so as to instruct the user in manipulating the color measuring device that is being operated.","In another aspect, the invention is an API that provides a common interface between an application program and plural different types of color measuring devices each having at least one color measuring sensor. The API includes plural functions for operating any of the plural different types of color measuring devices. The plural functions include a calibrate-position function, a calibrate-sensor function, a move-to-patch function, and a make-measurement function.","The calibrate-position function calibrates a relative position of a recording medium with respect to any of the plural different types of color measuring devices. Preferably, the calibrate-position function provides the application program with at least one display value that is to be displayed so as to instruct a user to position the recording medium or to position any of the color measuring sensors.","The calibrate-sensor function calibrates any of the color measuring sensors of any of the plural different types of color measuring devices. Preferably, the calibrate-sensor function provides the application program with at least one display value that is to be displayed so as to instruct the user in calibrating the sensor.","The move-to-patch function relatively positions any of the color measuring sensors and a color patch for any of the plural different types of color measuring devices. The move-to-patch function is provided with a logical color patch number by the application program. In order to relatively position the color patch and any of the color measuring sensors for some color measuring devices, the move-to-patch function preferably can provide the application program with a display value which instructs the user to manipulate the color measuring devices or to move the recording medium. In order to relatively position the color patch and any of the color measuring sensors for other color measuring devices, the move-to-patch function preferably causes the color measuring device to move the recording medium or to move the color measuring sensors. In any case, the move-to-patch function preferably provides the application program with a recalibrate value in a case that the relative position of the recording medium needs to be recalibrated, for example when a new recording medium is loaded into the color measuring device.","The make-measurement function makes a color measurement of the patch at which any of the color measuring sensors is relatively positioned, and the make-measurement function provides the application program with a color measurement value for the color patch. The make-measurement function preferably provides the application program with at least one display value that is to be displayed so as to instruct the user in making the color measurement. In addition, the make-measurement function preferably provides the application program with a recalibrate value in a case that any of the color measuring sensors needs to be recalibrated.","In order to complete an operation performed by at least one of the plural functions, the function that performs the operation must be called a number of times which is different for at least two different types of color measuring devices. For a color measuring device that is being operated, the API provides the application program with flow control data of the number of times that the function must be called. The flow control data preferably can be provided by the function, either in the form of a call-again value or a numerical value, or by a get-device-capabilities function included in the API.","The computer-executable process steps for the functions in the API preferably are stored in a dynamically linkable library (DLL). Thus, updated API functions can be used by an application program to access new types of measuring devices simply by linking the application program to the DLL.","The API according to the invention relieves application programs from the burden of having to include separate routines for taking color measurements with each different type of supported color measuring device. Instead, in order to take color measurements with any type of supported color measuring device, the application program need only include calls to functions in the API. The API itself handles the different interfaces to the different types of color measuring devices. As a result, the application program is far simpler to write.","This brief summary has been provided so that the nature of the invention may be understood quickly. A more complete understanding of the invention can be obtained by reference to the following detailed description of the preferred embodiments thereof in connection with the attached drawings.",{"@attributes":{"id":"P-00034","num":"00034"},"figref":["FIG. 1","FIG. 1"],"b":["1","6","2","3","4","5"]},"Color printer  is depicted in  as an ink jet printer. However, any printer capable of printing color images on recording media can be utilized by a color calibration program written according to the invention, such as ink jet printers and laser printers. Color printer  prints color images in response to print jobs received from computer system  over printer interface .","Measuring device  is a color measuring device that is used to generate color measurements of color patches input thereto. The color measurements generated by color measuring device  are transmitted over measuring device interface  to computer system . Examples of measuring device  include XY table , strip reader , and hand-held patch reader  for reading individual color patches.","Color patches are input to each of the different types of color measuring devices in different ways. For example, patches are input to XY table  on a sheet that has an array of patches printed thereon, whereas patches are input to strip reader  on strips that each have one or more rows of patches printed thereon. The sensors that actually perform color measurements are positioned on patches in different ways depending on the physical structures of the color measuring devices. For example, XY table  typically includes motors and gimbals for automatically positioning the sensors, while hand-held patch reader  typically must be manually positioned over a patch.","Flatbed scanner  can also serve as a color measuring device, provided that scanner  is properly calibrated. Color patches are input to flatbed scanner  in a similar manner as the patches are input to XY table , namely on a sheet that has an array of patches printed thereon.","The different color measuring devices also can use entirely different types and arrangements of sensors for making the color measurements. For example, color measuring device  can be a spectrometer (i.e., a spectrophotometer or a spectroradiometer), which uses sensors that preferably measure light intensity for frequencies across the entire visible spectrum. Alternatively, color measuring device  can be a calorimeter or densitometer, which uses sensors that measure light intensity for XYZ or RGB components of the spectrum.","In any case, each of the color measuring devices have at least one color sensor for making color measurements. In order to ensure accurate color measurements, the sensor(s) should be calibrated. In addition, depending on the type of measuring device , a relative position of a recording medium with respect to the device might have to be calibrated. In particular, each time a new recording medium (e.g., strip or sheet) is input to color measuring device , the position of the recording medium should be recalibrated so that the color measuring device can properly locate color patches printed thereon.","Because of the different ways that color patches are input and measured by the different types of color measuring devices, a different command set is needed to calibrate and to make color measurements with each different type of color measuring device.","As shown in , computer system  is connected to printer  through printer interface  and measuring device  through measuring device interface . Provided with computer system  are display  which may be a color monitor, keyboard  for entering user commands, and pointing device  such as a mouse for pointing to and for manipulating graphical user interfaces and other objects displayed on display .","Computer system  also includes a mass storage device such as fixed disk . This mass storage device is for storing computer-executable process steps for a color calibration program and a measuring device DLL according to the invention, as well other application programs and an operating system including a printer driver and a measuring device driver. Such storage may also be provided by a CD-ROM (not shown).","It should be understood that, although a programmable general-purpose computer is shown in , a dedicated computer terminal or other type of data processing equipment can utilize the present invention.",{"@attributes":{"id":"P-00045","num":"00045"},"figref":["FIG. 2","FIG. 2"],"b":["6","6","23","24","24","16","26","27","29","30","12","32","14","33","15","8","1","9","10"]},"Main memory  interfaces with computer bus  so as to provide RAM storage to CPU  during execution of software applications. More specifically, CPU  loads process steps from fixed disk , another storage device, or some other source such as a network (not shown), into main memory . CPU  then executes the stored process steps from main memory  in order to execute application programs. Data such as print data and color measurement data can be stored in main memory , where the data can be accessed by CPU  during execution of the process steps.","As shown in , fixed disk  typically contains operating system , application programs , measuring device DLL  according to the invention, and other files and data. Operating system  includes printer driver  and measuring device driver . Measuring device driver  is one of plural different types of measuring device drivers corresponding to the type of measuring device  connected to computer system . Examples of measuring device driver  include XY table driver  for XY table , strip reader driver  for strip reader , patch reader driver  for hand-held patch reader , and scanner driver  for scanner S. Some or all of these drivers can be stored on fixed disk .","Application programs  include color calibration program . The structure and operation of color calibration program  is explained in more detail below with reference to FIG. .","Measuring device DLL  is a library of functions that are called by an application program so as to use any of plural different color measuring devices supported by the DLL. In order to write an application program that calls these functions, a software developer uses a measuring device API according to the invention, as explained below with reference to .",{"@attributes":{"id":"P-00050","num":"00050"},"figref":["FIG. 3","FIG. 3"],"b":["48","6","51","40","1"]},"Color calibration program  makes API calls  to functions provided by measuring device DLL  in order to make color measurements of the color patches. According to the invention, since the DLL encapsulates the functionality needed to operate many different color measuring device, it is possible for the color calibration program  to call exactly the same functions, in exactly the same order, no matter which of plural different types of color measuring devices are connected. Because of the difference in devices, however, the API often needs to have certain functions repeated, or operator interaction performed, in order for the different devices to be usable by a single application. Accordingly, in response to API calls , the functions in the DLL provide color calibration program  with information that the application needs to ensure that the API functions are called correctly. Such information might include, for example, display values for display by the application to the user so as to prompt the user for some user intervention (such as to prompt the user to insert a next sheet of patches into the measuring device), and the information might further include flow control data that instruct the application to alter its control flow such as by calling particular DLL functions multiple times until a needed result (such as position calibration) is achieved. Display values and flow control data  provided to color calibration program  are explained in more detail below with reference to ,  and .","Color calibration program  also is provided with color measurements  by the DLL. Based on color measurements , color calibration program  sends color adjustment commands  to printer driver  so as to adjust color fidelity of color printer . The operation of color calibration program  in printing and measuring the color patches and adjusting the color printer is explained in more detail below with reference to  to C.","In response to print data  received from color calibration program , printer driver  sends print job  to color printer . Likewise, in response to color adjustment commands  received from color calibration program , printer driver  sends printer commands  to color printer .","Color printer  prints printed color patches  in response to print job  received from printer driver . The user inputs these color patches to color measuring device .","Measuring device DLL  provides a common interface between color calibration program  and plural different types of color measuring devices. As mentioned above, functions in measuring device DLL  are called by API calls  from color calibration program . The functions in measuring device DLL  make device driver calls  based on API calls  in order to operate measuring device . Device driver calls  are calls to a device driver corresponding to the type of color measuring device . For example, if measuring device  is an XY table, device driver calls  are calls to an XY table driver. In response to device driver calls , measuring device DLL  is provided with color measurements  by measuring device driver . Measuring device DLL  in turn provides color calibration program  with display values and flow control data  and color measurements . The flow control data preferably is based at least in part on device characteristics  received from measuring device driver . The structures of the functions in measuring device DLL  according to the invention are explained in more detail below with reference to ,  and , and the operation of the functions is explained with reference to  to C.","Measuring device driver  is a device driver corresponding to the type of measuring device . Measuring device driver  receives device driver calls  from the functions in measuring device DLL . In response to these call, measuring device driver  sends device commands  to measuring device , which provides color measurements  to measuring device driver . Color measurements  in turn are provided to measuring device DLL  as color measurements .","As mentioned above, measuring device  receives printed color patches  as input. Measuring device  makes color measurements  of printed color patches  in accordance with device commands  received from measuring device driver . Measurement device  provides color measurements  to measuring device driver .",{"@attributes":{"id":"P-00058","num":"00058"},"figref":"FIG. 4"},"Briefly, the measuring device DLL illustrated in  is accessed through a measuring device API according to the invention. The API provides a common interface between an application program and plural different types of color measuring devices each having at least one color measuring sensor. The interface includes plural functions for operating any of the plural different types of color measuring devices. In order to complete an operation performed by one or more of the functions, the function that performs the operation must be called a number of times which is different for different types of color measuring devices. For a color measuring device that is being operated, the API provides the application program with flow control data of the number of times that the function must be called. In , this flow control data is provided for some of the functions by a separate get-device capabilities function. This flow control data is provided for other functions by the functions themselves, in the form of \u201ccall-again\u201d values provided by the functions to the color calibration program. The functions in the API also preferably provide the application program with display values which are different for different types of color measuring devices. The values are displayed by the color calibration program to a user so as to instruct the user in manipulating the color measuring device that is being operated.","In more detail,  shows measuring device DLL  which is accessed by an application program through a measuring device API according to the invention. Thus, the API provides an interface for a software developer to write an application program that calls the functions in the DLL illustrated in FIG. . The functions provide an interface between color calibration program  and measuring device driver . Measuring device driver  in turn communicates with measuring device  through measuring device interface .","Measuring device driver  is a device driver corresponding to the type of measuring device . Thus, brackets next to measuring device driver  in  indicate that measuring device driver  is one of plural different device drivers such as XY table driver , strip reader driver , patch reader driver , and scanner driver . Likewise, brackets next to measuring device  in  indicate that measuring device  is one of XY table , strip reader , hand-held patch reader  for reading individual color patches, and scanner .","It should be noted that the various drivers and devices shown in  are only representative of the possible drivers and devices that can be operated using the API according to the invention.","In , measuring device DLL  includes at least the following functions, which are provided to an application program through a measuring device API according to the invention: get-device-capabilities , calibrate-position , calibrate-sensor , move-to-patch , and make measurement . Arrows pointing into blocks for these functions indicate information provided to the functions by color calibration program . Likewise, arrows pointing out of blocks for these functions indicate information provided by the functions to color calibration program .","Information can be provided in various different ways to the functions by color calibration program  and by the functions to color calibration program . For example, information can be provided to a function as a passed variable, by modification of a shared (e.g., global) variable or data space, by passing a pointer to a memory location that stores the information, or through messages in a message-based environment. Likewise, information can be provided by a function as a returned value, by modification of a shared variable or data space, by modification of a memory location pointed to by a pointer, or through messages. Any or all of these methods, as well as any other additional methods, can be utilized by measuring device DLL  according to the invention.","Get-device-capabilities function  according to the invention provides color calibration program  with flow control data for calibrate-position function  and calibrate-sensor function . In particular, get-device-capabilities function  provides color calibration program  with number of calls , thereby indicating the number of calls that must be made to calibrate-position function  in order to calibrate a position of a recording medium with respect to measuring device . Likewise, get-device-capabilities function  provides color calibration program  with number of calls , thereby indicating the number of calls that must be made to calibrate-sensor function  in order to calibrate the sensor(s) of measuring device .","The DLL preferably determines the flow control data by querying measuring device driver , or measuring device , for device characteristics . The functions in measuring device DLL determine the flow control data based at least in part on device characteristics . For example, if the device characteristics identify the type of measuring device , the functions can determine the flow control data using a look-up table. Alternatively, device characteristics  can include the flow control data directly, for later use by the different functions in the DLL. Get-device-capabilities function  preferably queries the device driver or the device for the device characteristics.","Calibrate-position function  is called to calibrate a relative position of a recording medium with respect to any of the plural different types of color measuring devices. In order to calibrate the relative position of the recording medium, calibrate-position function  might have to be called more than once. The number of calls depends at least in part on the type of measuring device . As discussed above, get-device-capabilities function  according to the invention provides color calibration program  with number of calls  that must be made to calibrate-position function  in order to complete the position calibration operation. Number of calls  preferably is based at least in part on device characteristics .","Each time calibrate-position function  is called, the user might be required to perform a task such as positioning the sensor(s), positioning the recording medium, or otherwise manipulating measuring device . Calibrate-position function  preferably provides display values  to color calibration program , and program  displays display values  to a user so as to instruct the user to perform these tasks, as necessary.","Display values , as well as all other display values provided by measuring device DLL , can include text and\/or graphics, or any other type of values displayable by computer system . Because the application program actually displays the display values, the application program can determine the form of the display. For example, the application program can display text or graphics based on the display values. The display values do not necessarily need to be displayed visually. For example, if the application program includes text-to-speech functionality, the program can generate speech based on the display values.","Calibrate-sensor function  is called to calibrate the sensor(s) of any of the plural different types of color measuring devices. In order to calibrate the sensor(s), calibrate-sensor function  might have to be called more than once. As discussed above, get-device-capabilities function  according to the invention provides color calibration program  with number of calls  that must be made to calibrate-sensor function  so as to complete the sensor calibration operation. Number of calls  preferably is based at least in part on device characteristics .","Each time calibrate-sensor function  is called, the user might be required to perform a task such as manipulating measuring device . Calibrate-sensor function  preferably provides display values  to color calibration program  for display by the program to a user so as to instruct the user to perform any such tasks.","Move-to-patch function  is called to relatively position the sensor(s) and a color patch for any of the plural different types of color measuring devices. Move-to-patch function  is provided with logical color patch number  by color calibration program . In response, move-to-patch function  moves the sensor(s) or the recording medium so as to position the sensor(s) at the corresponding color patch, provides color calibration program  with display values  so as to instruct the user to move the sensor(s) or the recording medium, or both.","In order to relatively position the sensor(s) at the patch, move-to-patch function  might have to be called multiple times, depending on the type of measuring device . For example, if the color patch corresponding to color patch number  is on a next sheet or strip of recording medium, move-to-patch function  might have to be called a first time so as to instruct a user to change the sheet or strip, a second time so as to recalibrate the position of the recording medium (by providing a recalibrate value), and then a third time so as to move to the first patch on the recording medium. The number of times that move-to-patch function  needs to be called preferably is determined by the function based at least in part on device characteristics . If move-to-patch function  needs to be called multiple times, move-to-patch function  provides color calibration program  with flow control data indicating whether the function has been called the necessary number of times. As shown in , this flow control data takes the form of call-again value , which is provided if move-to-patch function  has not been called the necessary number of times.","In some situations, and in particular when a new recording medium is input to measuring device , the relative position of the recording medium and measuring device  might have to be recalibrated. Move-to-patch function  provides color calibration program  with recalibrate value  in such situations.","Make-measurement function  is called to make a color measurement of the patch at which the sensor(s) are relatively positioned. Make-measurement function  provides color calibration program  with color measurement  for the color patch. In addition, make-measurement function  preferably provides color calibration program  with display values  for display by the program to instruct the user to perform any necessary tasks for making the color measurement.","As with move-to-patch function , make-measurement function  might have to be called multiple times in order to complete its operation. The number of times that make-measurement function  needs to be called preferably is determined by the function based at least in part on device characteristics . If make-measurement function  needs to be called multiple times, make-measurement function  provides color calibration program  with flow control data indicating whether the function has been called the necessary number of times. As shown in , this flow control data takes the form of call-again value , which is provided if make-measurement function  has not been called the necessary number of times.","If the sensor(s) need to be recalibrated after a color measurement, for example after a certain number of color measurements, make-measurement function  provides color calibration program  with recalibrate value .",{"@attributes":{"id":"P-00078","num":"00078"},"figref":["FIG. 5","FIG. 5"],"b":["100","102","104","105","100","106"]},"It should be understood that, although development system  is shown as a programmable general-purpose computer in , a dedicated computer terminal or other type of data processing equipment can be used to write application programs utilizing the API according to the present invention.",{"@attributes":{"id":"P-00080","num":"00080"},"figref":["FIG. 6","FIG. 6"],"b":["100","100","113","114","114","106","116","117","119","120","102","122","104","123","105"]},"Main memory  interfaces with computer bus  so as to provide RAM storage to CPU  during execution of software applications. More specifically, CPU  loads process steps from fixed disk , another storage device, or some other source such as a network (not shown), into main memory . CPU  then executes the stored process steps from main memory  in order to execute application programs. Data such as code for an application program utilizing a measuring device API according to the invention can be stored in main memory , where the data can be accessed by CPU  during execution of the process steps.","As shown in , fixed disk  typically contains operating system , application programs , and measuring device API  according to the invention. Operating system  typically is a windowing operating system and preferably is compatible with operating system  of computer system . Application programs  preferably includes software development programs  for developing application programs for making color measurements with color measuring devices.","A software developer uses software development programs  to write code for an application program such as color calibration program B. The software developer includes calls to functions provided by measuring device API  in order to have the application program make color measurements with any color measuring device supported by the API.","The API preferably includes headers corresponding to the functions in measuring device DLL . When the software developer compiles the code for application program using software development programs , these headers allow the application program to access the functions in measuring device DLL . These functions provide a common interface to any of the plural supported color measuring devices. Therefore, as long as the application program includes code for handling flow control data and display values returned by the functions in the DLL, as described above with reference to , the application program is able to make color measurements with any of the plural supported color measuring devices.",{"@attributes":{"id":"P-00085","num":"00085"},"figref":"FIGS. 7A","b":"7"},"In step S in , color calibration program  generates print data  for color patches for calibration of color fidelity of color printer . In step S, color calibration program  sends print data  to printer driver , which in turn sends print job  to color printer  based on print data . Color printer  prints the print job onto a recording medium, resulting in printed color patches .","In step S, color calibration program  makes API call  to get-device-capabilities function  in measuring device DLL . In response, get-device-capabilities function  provides flow control data to calibration program . This flow control data preferably includes number of calls  and number of calls , which indicate the number of times calibrate-position function  and calibrate-sensor function  need to be called in order to perform their respective operations.","In step S, the relative position of the sensor(s) with respect to the recording medium is calibrated.  is a flowchart for explaining position calibration according to the invention.","In step S of , color calibration program  calls calibrate-position function . This function sends device driver calls  to measuring device driver , which in turn sends device commands  to measuring device  so as to calibrate the relative position of the sensor(s).","In step S, color calibration program  determines if calibrate-position function  provided display values . If calibrate-position function  did provide display values , color calibration program  displays the display values to the user, such as on display , in step S.","In step S, color calibration program  determines if calibrate-position function  has been called the number of times indicated by number of calls . If calibrate-position function  has not been called number of calls  times, flow returns to step S. Once calibrate-position function  has been called number of calls  times, flow returns to FIG. A.","In , flow proceeds to step S, where the sensor(s) are calibrated.  is a flowchart for explaining sensor calibration according to the invention.","In step S of , color calibration program  calls calibrate-sensor function . This function sends device driver calls  to measuring device driver , which in turn sends device commands  to measuring device  so as to calibrate the sensor(s).","In step S, color calibration program  determines if calibrate-sensor function  provided display values . If calibrate-sensor function  did provide display values , color calibration program  displays the display values to the user in step S.","In step S, color calibration program  determines if calibrate-sensor function  has been called the number of time indicated by number of calls . If calibrate-sensor function  has not been called number of calls  times, flow returns to step S. Once calibrate-sensor function  has been called number of calls  times, flow returns to FIG. A.","Returning to , flow proceeds to step S, where move-to-patch function  is called. Color calibration program  provides move-to-patch function  with color patch number , which is a logical patch number corresponding to the next patch that needs to be measured. Preferably, color patch number  is incremented every time a color patch is measured. Based on color patch number  and the type of measuring device , move-to-patch function  of measuring device DLL  sends device driver calls  to device driver . Device driver  in turn sends device commands  to measuring device , which moves the sensor(s) or the recording medium, if appropriate, in order to relatively position the patch.","In step S, color calibration program  determines if move-to-patch function  provided display values  to the program. If move-to-patch function  did provide display values , color calibration program  displays the display values to the user in step S.","With some color measuring devices, move-to-patch function  cannot move the sensor(s) or the recording medium. For example, hand-held patch reader  has no mechanism for moving its sensor(s) or a recording medium. Rather, the user must move the sensor(s) or the recording medium. In that case, display values  sent in step S instructs the user to perform this task, as necessary.","In step S, color calibration program  determines if move-to-patch function  has indicated that position of the recording medium needs to be recalibrated. If the position does need to be recalibrated, flow proceeds to step S, where the position is recalibrated as explained above with reference to FIG. B.","Flow proceeds to step S, where color calibration program  determines if move-to-patch function  needs to be called again so as to complete positioning of the sensor(s). Color calibration program  makes this determination by checking for flow control data from move-to-patch function  in the form of call-again value . If move-to-patch function  needs to be called again, flow returns to step S. Otherwise, flow proceeds to step S.","In step S, color calibration program  calls make-measurement function . This function sends device driver calls  to measuring device driver , which in turn uses device commands  to instruct measuring device  to make a color measurement. Once the measuring operation is complete, measuring device  generates color measurement  based on this measuring operation and sends color measurement  to measuring device driver . Measuring device driver  sends this color measurement to make-measurement function  in measuring device DLL  in the form of color measurement , and the make-measurement function provides the measurement to color calibration program  as color measurement .","In step S, color calibration program  determines if make-measurement function  provided display values  to the program. If make-measurement function  did provide display values , color calibration program  displays the display values to the user in step S.","In step S, color calibration program  determines if make-measurement function  has indicated that the sensor(s) need to be recalibrated. If the sensor(s) do need to be recalibrated, flow proceeds to step S, where the sensor(s) are recalibrated as explained above with reference to FIG. C.","Flow proceeds to step S, where color calibration program  determines if make-measurement function  needs to be called again so as to complete making the color measurement. Color calibration program  makes this determination by checking for flow control data from make-measurement function  in the form of call-again value . If make-measurement function  needs to be called again, flow returns to step S. Otherwise, flow proceeds to step S.","In step S, color calibration program  determines if all color patches for calibrating color printer  have been measured. If more color patches need to be measured, flow returns to step S. Otherwise, flow proceeds to step S.","In step S, color calibration program  generates color adjustment commands  based at least in part on color measurements . Color calibration program  sends these commands to printer driver , which in turn sends print commands  to color printer  so as to adjust the color fidelity of the printer.","Because each of the functions in measuring device DLL  accessed through measuring device API 128 makes device driver calls  to measuring device  for the type of color measuring device , color calibration program  is insulated from the differences between different types of color measuring devices. Furthermore, the flow control data for multiple calls provided to color calibration program  allows the program to call the functions the necessary number of times for each operation without knowing the type of the actual device. The display values provided to the program allow the program to display the display values appropriate for the type of measuring device  that is being used. Moreover, since the application program generates displays based on the display values rather than the DLL, the application program can package a message however it wants so as to permit each developer to give his application a unique and internally-consistent GUI. As a result, a block of code that accesses color measuring device DLL  can make color measurements with any type of color measuring device supported by the API, despite the different device driver commands needed to calibrate and operate the different types of devices.","Included in a microfiche appendix submitted herewith is sample code that operates generally as described above. This code includes code for a portion of a color calibration program that makes color measurements using an API according to the invention, the API itself, and a DLL accessed through the API. This code is provided for illustrative purposes only. Other implementations of the color measurement code, measuring device API, and measuring device DLL exist that are within the scope and spirit of the invention.",{"@attributes":{"id":"P-00109","num":"00109"},"figref":["FIG. 8","FIG. 8"],"b":["72","73","140","141","48"]},"Because the calibration functions can return these call-again values to facilitate multiple calls, there is no need for get-device-capabilities function  to provide number of calls  and number of calls  to the calibration functions of course, get-device-capabilities function  can still be included in the API, if desired.",{"@attributes":{"id":"P-00111","num":"00111"},"figref":"FIG. 9","b":["72","143","73","154","74","155","75","156","72","72","71"]},"Various combinations of the foregoing flow control techniques illustrated in ,  and  can be used for facilitating multiple calls of the function in measuring device DLL .","While the invention is described above with respect to what is currently considered its preferred embodiments, it is to be understood that the invention is not limited to that described above. To the contrary, the invention is intended to cover various modifications and equivalent arrangements included within the spirit and scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"P-00025","num":"00025"},"figref":"FIG. 1"},{"@attributes":{"id":"P-00026","num":"00026"},"figref":"FIG. 2","b":"1"},{"@attributes":{"id":"P-00027","num":"00027"},"figref":"FIG. 3"},{"@attributes":{"id":"P-00028","num":"00028"},"figref":"FIG. 4"},{"@attributes":{"id":"P-00029","num":"00029"},"figref":"FIG. 5"},{"@attributes":{"id":"P-00030","num":"00030"},"figref":"FIG. 6","b":"5"},{"@attributes":{"id":"P-00031","num":"00031"},"figref":"FIGS. 7A","b":"7"},{"@attributes":{"id":"P-00032","num":"00032"},"figref":"FIG. 8"},{"@attributes":{"id":"P-00033","num":"00033"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
