---
title: Character data processing method, information processing method, and information processing apparatus
abstract: A character data processing method executed by a computer includes detecting glyph variant information from an input character data string, and converting detected glyph variant information to extended expression data, the extended data and the detected glyph variant information, the basic character data being associated with the detected glyph variant information in the input character string, wherein the extended expression data can be converted to the basic character data by specific bit arithmetic processing.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09448975&OS=09448975&RS=09448975
owner: FUJITSU LIMITED
number: 09448975
owner_city: Kawasaki
owner_country: JP
publication_date: 20140825
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","FIELD","BACKGROUND","SUMMARY","DESCRIPTION OF EMBODIMENTS","First Embodiment","Example of Operation","Compiler"],"p":["This application is based upon and claims the benefit of priority of the prior Japanese Patent Application No. 2013-174800, filed on Aug. 26, 2013, the entire contents of which are incorporated herein by reference.","Disclosure relates to a character data processing method, an information processing method, and an information processing apparatus.","Conventionally, in regard to consideration of character codes, a correspondence between an area length (for example, the number of bytes) of character data and a size of field in a display screen, a form, or the like is determined at a pattern. For example, alphabets, numbers, and katakana without voiced sound symbol are expressed by an area length of one half-sized byte. Japanese characters are expressed by an area length of two full-sized bytes. Katakana with voiced sound symbol is indicated by an area length of two half-sized bytes (one byte+one byte=two bytes). These area lengths coincide with the size of field in the display screen, the form, or the like. In this way, in a business application that treats characters, the size of field in the form and the size of character data treated in the application are declared to adjust the size of the area of the field and a display size of the character data. Therefore, a developer or the like of the business application that treats characters develops the business software without regard to the adjustment between the display size of the character data and the size of the field where the character data is outputted.","Meanwhile, Unicode (UTF16) has appeared as a character code that can treat all characters defined in JIS 2004, and an environment of handling one Japanese character in area lengths of two bytes and four bytes is started to be widely used. In the environment using UTF16, the developer or the like of the business application that treats the characters also can use UTF32 for encoding of input character data to design character data treated in area lengths of two bytes and four bytes in a fixed length of four bytes per character.","For more information, see \u201cUnicode,\u201d [searched on Feb. 5, 2013], Internet, <URL:https:\/\/ja.wikipedia.org\/wiki\/Unicode>","In recent years, a technique called a \u201cvariation selector\u201d that provide identification information, such as VS1, VS2, . . . , to Unicode of a character becoming a base to allow uniformly treating variant(s) (i-tai-ji) of a target character is started to be widely used (for example, Windows 8 (registered trademark) supports variants). The use of the variation selector can identify and express variants, such as, for example, Chinese characters of ","and ","that exist in Japanese characters.","As the identification information attached to the character data becoming the base for identifying a variant, a UTF16 code having four bytes is allocated to the character. Therefore, the area length of character data with the variation selector is expressed by a variable length of six to eight bytes in UTF16. Hereinafter, the character data becoming a base in the variation selector is called \u201ca basic character data.\u201d","For example, the developer of the system treating the variation selectors treats one character data of Japanese character as a variable area length of the UTF16 (no glyph variant information: two to four bytes, with glyph variant information: six to eight bytes) to design the business application. However, in the conventional design environment, the correspondence between the number of characters and the data length is fixed. Hence, the number of characters of a name column or the like of a screen or a form is fixed in most cases, and the size of the corresponding data is also the size corresponding to the number of characters. The developer of the system for handling the variation selectors treats character codes, each of which has a variable length, to manage both of the number of characters and the area length. Therefore, management burden to the developer increases. For example, every time the developer takes out characters from a database, the developer counts the number of characters to perform an error check of whether the target characters fit in the field of the screen or the form that outputs the target characters, and the load of operation increases.","One of aspects of embodiments is a character data processing method executed by a computer. The method includes:","detecting glyph variant information from an input character data string; and","converting detected glyph variant information to extended expression data, the extended data and the detected glyph variant information, the basic character data being associated with the detected glyph variant information in the input character string,","wherein the extended expression data can be converted to the basic character data by specific bit arithmetic processing.","The object and advantages of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the claims.","It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and are not restrictive of the invention, as claimed.","Hereinafter, a conversion apparatus according to an embodiment will be described with reference to the drawings. The following configuration of the embodiment is illustrative, and the conversion apparatus is not limited to the configuration of the embodiment.","Hereinafter, the conversion apparatus will be described based on .",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1"},"First, variants and a variation selector of the background will be described.","Variants which a variation selector is attached will be described with reference to .  is an example of variants of \u201c(ashi)\u201d in a simplified form. A variant is a character having a character form differing from a character having a standard character form (for example, a simplified form). In other words, a variant is a character having two or more expressions (character forms), each of which has the same word origin. As illustrated in , a character of \u201c(ashi)\u201d expressed by the simplified form (see No. 3) includes three variants (see No. 1, 2 and 4). A character code (Unicode) of \u201c(ashi)\u201d expressed by the simplified form is indicated by \u201c0x82a6\u201d. Here, \u201c0x####\u201d indicates a hexadecimal notation, and \u201c#\u201d indicates hexadecimal \u201c0\u201d to \u201cF\u201d.","When the variation selector is used, the four variants (the character expressed by the simplified form is treated as one of variants) illustrated in  are treated as \u201ccharacter data\/character data set\u201d obtained by adding four-byte identification information (identifier) to a basic character data (namely, a character data becoming a base of variants) in order to express each of the variants.","When the variation selectors are used, one of characters forming the variants is defined as a basic character. In the example of , the basic character is the character \u201c(ashi)\u201d expressed by the simplified form (No. 3). In this case, the character code of the basic character is \u201c0x82a6\u201d. Hence, the variants of \u201cashi\u201d can be expressed by the following \u201ccharacter data\/character data set\u201d.","(1) A character form of No. 1 in : +VS17 (0x82a6 0x000e0111)","(2) A character form of No. 2 in : +VS18 (0x82a6 0x000e0112)","(3) A character form of No. 3 in : +VS19 (0x82a6 0x000e0113)","(4) A character form of No. 4 in : +VS20 (0x82a6 0x000e0114)","Where each of \u201cVS17\u201d, \u201cVS18\u201d, \u201cVS19\u201d, and \u201cVS20\u201d added to the basic character code indicates an identifier used at the variation selector. The identifier is one of examples of \u201cidentification information\u201d. Thus, when the variation selector is used, each variant is expressed by \u201ca character code of the basic character\u201d+\u201can identifier\u201d.","\u201c0x000e0111\u201d of (1) indicates, for example, a hexadecimal code corresponding to the identifier \u201cVS17\u201d. Similarly, \u201c0x000e0112\u201d of (2) indicates a hexadecimal code of the identifier \u201cVS18\u201d, \u201c0x000e0113\u201d of (3) indicates a hexadecimal code of the identifier \u201cVS19\u201d, and \u201c0x000e0114\u201d of (4) indicates a hexadecimal code of the identifier \u201cVS20\u201d. When the variation selector is used, each variant can be treated as the \u201ccharacter data\/character data set\u201d including the basic character data and the identifier. Therefore, the character data can be uniformly and systematically treated compared to the conventional system for separately allocating different character codes to the variants.","The developer or the like of the application that treats characters can use the variation selectors and the character codes illustrated in  to express a sentence with a combination of a plurality of variants as illustrated for example in . A range of \u201cVS17\u201d to \u201cVS256\u201d is allocated to the variation selectors. The identifiers of \u201cVS17\u201d to \u201cVS20\u201d is prepared for the variants of \u201c(ashi)\u201d illustrated in . However, identifiers for expressing variants are not prepared with respect to characters which have no variants (e.g., a character of \u201c(ai)\u201d) have no variants. Hence, this example character \u201c(ai)\u201d is expressed by a character code \u201c0x88a4\u201d in the expression of the \u201ccharacter data\/character data set\u201d using the variation selector. Therefore, the area length of the character which has no variants is a 2-byte area length expressed by UTF16.","On the other hand, in the case of \u201c(ashi)\u201d illustrated in , each of the variants is expressed by \u201ccharacter code of basic character\u201d+\u201cvariation selector\u201d. Therefore, the area length of the character data of \u201c(ashi)\u201d with a variant is six bytes in total which is a sum of a two-byte \u201ccharacter code\u201d and a four-byte \u201cvariation selector\u201d. Further, characters defined in JIS 2004 include characters of a new character form expressed by a four-byte character code (it is called \u201cfour-byte characters,\u201d for example, a character of \u201c\u201d). When a four-byte character has the variant(s), the character data of the four-byte character has an eight-byte area length (four-byte basic character code+identifier (variant selector)).","The developer or the like of the business application that treats the variation selector sets the character code of each character to a variable length to manage both of the number of characters and the area length. Therefore, the management burden in the development and design increases.","Returning to the explanatory view illustrated in , a program for which an information processing apparatus(es) (a computer(s)) operates the conversion apparatus  of the present embodiment is incorporated into a business application or middleware that treats existing characters. In the explanatory view illustrated in , the variable-length Unicode characters (UTF8, UTF16) with the variation selector are input through, for example, an input device or the like included in an information processing apparatus that operates as the conversion apparatus . The variable-length character data including the variation selectors is delivered to the business application that treats the existing characters through, for example, an Operating System (OS) included in the information processing apparatus. The conversion apparatus  converts the delivered variable-length character data to fixed-length data having a predetermined length or to an internal format (X format) in a program. According to the conversion apparatus  of the present embodiment can treat the character data converted to the fixed-length data of a predetermined length as a processing format similar to the conventional format.","Further, the fixed-length character data obtained by the conversion apparatus  of the present embodiment is converted again to variable-length character data through the conversion apparatus . The variable-length character data converted by the program of the conversion apparatus  includes the variation selector, and the variable-length character data is given to the OS to display or output a character based on the variable-length character data on a display device or the like included in the information processing apparatus.","In the business application, the fixed-length character data converted to a processing format (internal format) in the program by the conversion apparatus  of the present embodiment is delivered to middleware or the like in the fixed-length state. The variable-length character data delivered to the middleware through the OS is delivered to the program of the conversion apparatus  incorporated into the middleware.","The program of conversion apparatus  incorporated into the middleware converts the delivered variable-length character data to fixed-length character data of a predetermined length. To the fixed-length character data of the predetermined length converted through the program of the conversion apparatus  or the data in the internal format delivered to the middleware, a predetermined process is performed in a state that the data area length is maintained. The fixed-length character data illustrated in  is converted again to the variable-length character data through, for example, the program of the conversion apparatus  in the middleware. The variable-length character data converted by the program of the conversion apparatus  includes the variation selector, and the variable-length character data is given to the OS to display or output a character based on the variable-length character data on a display device or the like included in the information processing apparatus.","The conversion apparatus  of the present embodiment allows the developer or the like of the application that treats the variation selectors to perform the development operation without regard to the area length of the character code. Therefore, the developer or the like of the application can reduce the management burden of the character code. As a result, the productivity for developing the application that treats the characters can be improved.","For example, the conversion apparatus  of the present embodiment is implemented on an information processing apparatus  as a computer illustrated in .  illustrates a configuration of hardware of the information processing apparatus . The illustrated information processing apparatus  includes a Central Processing Unit (CPU) , a main storage unit (main memory) , an auxiliary storage unit (external memory) , a communication unit , an input unit , and an output unit  that are connected to each other by a connection bus B1.","In the information processing unit , the CPU  expands a program stored in the auxiliary storage unit  to allow execution in a work area of the main storage unit , and the information processing apparatus  controls a peripheral device through the execution of the program. As a result, the information processing apparatus  can perform operations corresponding to a predetermined object. The main storage unit  and the auxiliary storage unit  are recording media that can be read by the information processing apparatus  as a computer.","The CPU  is a central processing unit that controls the entire information processing apparatus . The CPU  executes processes according to a program stored in the auxiliary storage unit . The main storage unit  is a storage medium for the CPU  to cache a program or data or to expand the operation area. The main storage unit  includes, for example, a Random Access Memory (RAM) and a Read Only Memory (ROM).","The auxiliary storage unit  stores various programs and various data in a recording medium in a manner that they can be freely read and written. The auxiliary storage unit  is also called an external storage device. An operation system (OS), various programs, various tables, and the like are stored in the auxiliary storage unit . The OS includes a communication interface program for transferring data with an external device or the like connected through the communication unit . Examples of the external device or the like include another information processing apparatus and an external storage device connected through a network or the like. The auxiliary storage unit  may be, for example, part of a cloud that is a group of computers on a network.","The auxiliary storage unit  is, for example, an Erasable Programmable ROM (EPROM), a solid-state drive (SSD) apparatus, a hard disk drive (HDD) apparatus, or the like. A Compact Disc (CD) drive apparatus, a Digital Versatile Disc (DVD) drive apparatus, a Blu-ray Disc (BD) drive apparatus, and the like can be presented as examples of the auxiliary storage unit . Examples of the recording medium include a silicon disk including a non-volatile semiconductor memory (flash memory), a hard disk, a CD, a DVD, a BD, a Universal Serial Bus (USB) memory, and the like. The communication unit  is, for example, an interface circuit with a network or the like.","The input unit  receives an operation instruction or the like from a user or the like. The input unit  is an input device, such as an input button, a keyboard, a pointing device, a wireless remote control, a microphone, and a camera. Information input from the input unit  is sent to the CPU  through the connection bus B1.","The output unit  outputs data processed by the CPU  and data stored in the main storage unit . The output unit  is an output device, such as a Cathode Ray Tube (CRT) display, a Liquid Crystal Display (LCD), a Plasma Display Panel (PDP), an Electroluminescence (EL) panel, and a printer.","In the information processing apparatus  illustrated in , the CPU  reads out the OS, various programs, and various data stored in the auxiliary storage unit  to the main storage unit  and executes these programs. By the execution of the programs, the information processing apparatus  operates as the conversion apparatus .","Functional Configuration",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 4","b":["10","10"]},"In the explanatory view illustrated in , the developer or the like (hereinafter, called \u201cdeveloper\u201d) of the business application that treats characters creates a character input unit through, for example, the input unit  or the like included in the information processing apparatus  that implements the conversion apparatus . The information processing apparatus  has an input and output function corresponding to Ideographic Variation Sequence (IVS) that can use the variation selector. In the IVS, the variation selector is added just after the character codes (Unicode; UTF8, UTF16, UTF32) of the basic character to express the variant. As described in , the character code of the basic character has a variable length of two to four bytes, and the variation selector has a four-byte length. The area length of the character data inputted through the input unit  corresponding to the IVS is a variable length of two to eight bytes (including cases of characters without variants).","The conversion apparatus  of the present embodiment converts the inputted variable-length character data to the fixed-length character data prior to deliver the character data to the application called by the OS function and\/or the API or the middleware. The application or the middleware receiving the fixed-length character data refers to, for example, a database or the like on the auxiliary storage unit  to execute a predetermined process based on the delivered fixed-length character data.","Meanwhile, the conversion apparatus  of the present embodiment converts the fixed-length character data processed by the application or the middleware to the variable-length character data prior to deliver the character data to the OS function, the API, or the like. The converted character data is output to the output unit  included in the information processing apparatus  operating the conversion apparatus  via the OS or the like. The output unit  corresponding to the IVS, such as a display screen of CRT or the like, can display a sentence or the like including a plurality of variants illustrated in .","(Conversion Process)","Next, a conversion process of converting variable-length character data to fixed-length character data in the conversion apparatus  of the present embodiment will be described with reference to . FIG. A illustrates, as an example of character code standard, ISO\/IEC 10646 (Universal Coded Character Set (UCS)) standardized by International Organization for Standardization (ISO). The character code (Unicode) of the basic character as a target of the conversion apparatus  of the present embodiment is part of the character code standard illustrated in .","As illustrated in , one character of the basic character is expressed by four bytes (32 bits) in ISO\/IEC 10646, and the character is divided into four \u201coctets\u201d including a \u201cgroup\u201d, a \u201cplane\u201d, a \u201crow\u201d, and a \u201ccell\u201d in order from high-order bits. As illustrated in , since the highest-order bit of the \u201cgroup\u201d is fixed to \u201c0\u201d, there are 128 (groups)\u00d7256 (planes)\u00d7256 (rows)\u00d7256 (cells) character codes that can be expressed by ISO\/IEC 10646, and more than 2.1 billion characters can be identified. The four-byte expression format illustrated in  is also called UCS4.","The character code UTF32 expresses 1114112 characters that are subsets of UCS4 and all characters defined by JIS 2004 that are subsets of UTF32. Consequently, the characters expressed by UTF32 are expressed in a character range of \u201c0x00000000\u201d to \u201c0x0010ffff\u201d in UCS4. Therefore, UCS4 can express UTF32 by an amount of information of (5 bits for identifying 17 planes from 0-th plane to 16-th plane)+(16 bits that are character code of 2 bytes included in each plane)=21 bits.","Variation selectors corresponding to Japanese kanji (Chinese characters) are prepared in a range of \u201cVS17\u201d to \u201cVS256\u201d, and one basic character can have up to 240 variation selectors. Therefore, the identification of a variant of a basic character can be made by an amount of information of eight bits.","The conversion apparatus  of the present embodiment generates fixed-length data expressed by an amount of information of, for example, four bytes (32 bits) from the information of 21 bits for expressing the character code and the information of eight bits for expressing the variant. The four-byte fixed-length data generated by the conversion apparatus  includes information of the character code of the basic character and the variation selector of the basic character.","The conversion apparatus  of the present embodiment extracts the information of 21 bits expressing the character code and the information of eight bits expressing the variant from the fixed-length data expressed by the amount of information of four bytes (32 bits) to generate variable-length character data. The variable-length character data generated by the conversion apparatus  is data having two to eight bytes including the character code of the basic character and the variation selector attached to the character code of the basic character.","The conversion apparatus  of the present embodiment generates the fixed-length data including the information of 21 bits expressing the character code and the information of eight bits expressing the variant by the following two processing systems (methods). In the description, it is assumed that the fixed-length data generated by the conversion apparatus  includes four bytes (32 bits). The variation selector number, such as \u201cxxx\u201d of \u201cVSxxx (xxx is 17 to 256)\u201d, of the variation selector will be described as \u201cn\u201d.","It can be stated that the expression format of the conversion apparatus  of the present embodiment is, for example, an extended expression that the basic character expressed by Unicode (UTF8, UTF16, UTF32) and the information expressing the variant of the basic character (for example, variation selector) are expressed by a fixed-length format having a predetermined length (for example, length of 32 bits). More specifically, as described in , and the like, when \u201ccharacter code of basic character\u201d+\u201cvariation selector\u201d is a standard expression, the variable-length character data expressed by the standard expression has a length of two to eight byte length (including a mode in which the basic character does not include variants). In the expression format of the conversion apparatus  of the present embodiment, the basic character is expressed by an amount of information of 21 bits. When there is a variant, the information of eight bits expressing the variant and the information of the basic character are integrated into data having a predetermined length to express the data as fixed-length data, as described above.","In the first embodiment, the format that includes a \u201ccharacter code of basic character\u201d+a \u201cvariation selector\u201d and a \u201ccharacter code of basic character\u201d without variation selector and that is expressed by, for example, 32-bit fixed length is called an extended expression. The conversion apparatus  of the present embodiment determines whether an input character data string includes glyph variant information. When the glyph variant information is detected from the input character data string, the conversion apparatus  converts the glyph variant information to extended expression data that includes the basic character associated with the glyph variant information and the glyph variant information and that can be converted to the basic character by specific bit arithmetic processing.","(Method 1)","In a method 1, the conversion apparatus  calculates a logical sum of the basic character expressed by the four-byte UTF32 code format illustrated in  and 32-bit data which is obtained by subtracting 1 from the variation selector number n and shifting the value (n\u22121) to the right by 24 bits. As a result, the conversion apparatus  can generate fixed-length data including 21-bit information to express the character code and eight-bit information to express the variant.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 5B","FIG. 5B","FIG. 5B"],"b":"1"},"In this way, in the extended expression format of the method 1, the variable-length character data of the standard expression can be integrated and expressed by the extended expression of 32-bit fixed length including the information of the variant in the area of eight high-order bits and the information of the basic character in the area of 21 low-order bits. Therefore, the character data of \u201ccharacter code of basic character\u201d+\u201cvariation selector\u201d illustrated in  can be treated in the data format of the extended expression having a predetermined length.","When, for example, the character does not include a variation selector, the fixed-length data generated in the system  becomes the basic character expressed by the UTF32 code format. Furthermore, for example, the conversion apparatus  can ignore the eight high-order bits by calculating the logical sum of the generated fixed-length data and the four-byte data of \u201c0x00ffffff\u201d. Therefore, the expression of the UTF32 code of the basic character can be easily obtained.","(Method 2)","In a method 2, the conversion apparatus  calculates a logical sum of 32-bit data, which is obtained by subtracting 1 from the variation selector number n and storing the value (n\u22121) in eight low-order bits, and data, which is obtained by shifting the basic character expressed by four-byte UTF32 code format eight bits to the right. As a result, the conversion apparatus  can generate fixed-length data including 21-bit information expressing the character code and eight-bit information expressing the variant.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 5C","FIG. 5C","FIG. 5C"],"b":"2"},"Thus, in the extended expression format of the method 2, the variable-length character data of the standard expression can be expressed by the extended expression having a fixed length (32 bit). The extended expression includes the information of the variant which is in the area of the eight low-order bits and the information of the basic character which is in the area of 21 bits adjacent to the high-order side of the area of the eight low-order bits. As in the method 1, the character data of the \u201ccharacter code of the basic character\u201d+the \u201cvariation selector\u201d illustrated in  can be treated with the data format of the extended expression having a predetermined length.","In the fixed-length data generated in the method 2, for example, the data format of the character delivered to the conversion apparatus  through the input unit  corresponding to the IVS illustrated in  can be maintained. More specifically, in the fixed-length data illustrated in , the variation selector information is stored in the area of eight low-order bits adjacent to the area of 21 bits expressing the character code. Therefore, the data format that the variation selector is added just after the basic character can be maintained. Thus, for example, the size comparison in sorting character strings or the like including variants is easy, and the same result as in the sorting using the data format of UTF32 can be obtained.","In the conversion apparatus  of the present embodiment, the information of eight bits for identifying the variation selector is expressed by a value obtained by subtracting \u201c1\u201d from the numerical value (n) of the variation selector number. Through the execution of the process, the conversion apparatus  of the present embodiment can treat the variation selector prepared in the range of \u201cVS17\u201d to \u201cVS256\u201d as eight-bit information of \u201c0x10\u201d to \u201c0xff\u201d.","[Processing Flow]","(Variable-Length Data\u2192Fixed-Length Data)","A process by the conversion apparatus  of the present embodiment will be described with reference to a flow chart illustrated in .  illustrates a flow chart of one example of a process of converting variable-length data to fixed-length data. The process illustrated in  is executed by, for example, a computer program expanded in the main storage unit  for execution. In the flow chart illustrated in , processes of S to S are repeatedly executed until reading of input characters is finished.","In the flow chart illustrated in , for example, the processing from variable-length data to fixed-length data can be started by input of information from the outside to the middleware or the application program. The input from the outside is, for example, input from the keyboard, input of character information from the display screen, input by Optical Code Reader (OCR), data reception from another device through a communication module or the like, data reading from a portable recording medium, or the like.","The conversion apparatus  converts the input data to UTF32 and stores the converted data in an input operation buffer (S). The input data is inputted through, for example, the input unit  corresponding to the IVS as described in . Therefore, the input data is delivered to the conversion apparatus  of the present embodiment as the variable-length data with the variation selector just after the character code (Unicode) of the basic character. The input operation buffer is arranged in, for example, a predetermined storage area of the main storage unit . The processes of S to S are executed for the input data stored in the input operation buffer in the process of S.","In S and S, the conversion apparatus  reads a first character from the input operation buffer and stores the read character in a character processing buffer A (S). The character processing buffer A is arranged in, for example, a predetermined storage area of the main storage unit . The conversion apparatus  determines whether the reading of the characters from the input operation buffer is finished (S). The determining in S may be made by, for example, detecting End of Data (EOD) or the like indicating the end of the data.","When the reading of the characters from the input operation buffer is finished (S, YES), the conversion apparatus  ends the processing illustrated in . On the other hand, when the reading of the characters is not finished (S, NO), the conversion apparatus  determines whether the first character read in the process of S is a basic character or not (S). When the first character read in the process of S is not a basic character (S, NO), the processing moves to S to execute error processing.","As already described, the input data delivered to the conversion apparatus  is the variable-length data in which the variation selector is added just after the character code (Unicode) of the basic character. Therefore, when the information processing apparatus  including the conversion apparatus  is in a normal state, the first character is a character code of a basic character, and a second character is a variation selector of the basic character. Thus, when the character read as the first character is not a basic character in the process of S, the conversion apparatus  of the present embodiment determines that the information processing apparatus  including the conversion apparatus  has an error and error processing is executed in S.","On the other hand, when the first character read in the process of S is a basic character (S, YES), the conversion apparatus  reads a second character from the input operation buffer and stores the read second character in a character processing buffer B (S). The character processing buffer B is arranged in, for example, a predetermined storage area of the main storage unit . The conversion apparatus  determines again whether the reading of the characters from the input operation buffer is finished (S).","When the reading of the characters is finished (S, YES), the conversion apparatus  outputs fixed-length data from the character processing buffer A in S without executing a conversion process of the variation selector of S to S.","On the other hand, when the reading of the characters is not finished (S, NO), the conversion apparatus  executes the conversion process of the variation selector of S to S. In S, the conversion apparatus  determines whether the second character read in S is a variation selector. For example, the variation selectors of Chinese character (Japanese kanji) are prepared in a range of \u201cVS17\u201d to \u201cVS256\u201d. For example, when the variation selectors (VS) are expressed by Unicode, \u201cU+E0100\u201d corresponds to \u201cVS17\u201d, and \u201cU+E01EF\u201d corresponds to \u201cVS256\u201d. The conversion apparatus  can, for example, determine whether the second character read in S is expressed in the range of \u201cU+E0100\u201d to \u201cU+E01EF\u201d. The CPU  or the like of the information processing apparatus  executes the process of S as an example of a detecting unit.","As a result of the determination in S, when it is determined that the second character read in S is not a variation selector (S, NO), the conversion apparatus  reads the fixed-length character data from the character processing buffer A and the processing proceeds to S (S). In a process of S, the conversion apparatus  copies the data of the second character stored in the character processing buffer B to the character processing buffer A. In the copying process of S, the conversion apparatus  may further initialize the character processing buffer B.","On the other hand, as a result of the determination in S, when it is determined that the second character read in S is a variation selector (S, YES), the processing proceeds to S and the conversion apparatus converts the variation selector (VS) to a variation selector number (VSn). For example, when the variation selector is \u201cVS17\u201d, the variation selector number \u201cVSn\u201d is \u201c17\u201d. In S, the conversion apparatus  calculates \u201cVSn\u22121\u201d from the variation selector number \u201cVSn\u201d as described in  and the like and converts the information to hexadecimal eight-bit information. When the variation selector number \u201cVSn\u201d is \u201c17\u201d, \u201cVSn\u22121\u201d is \u201c16\u201d, which is \u201c0x10\u201d in the hexadecimal eight-bit information. When the variation selector number \u201cVSn\u201d is \u201c256\u201d, \u201cVSn\u22121\u201d is \u201c255\u201d, which is \u201c0xff\u201d in the hexadecimal eight-bit information. In this way, \u201cVSn\u22121\u201d is output as a value in the range of \u201c16\u201d to \u201c255\u201d in the process of S. The process is an example of bit shift processing for expressing the variation selector number by a small number of bits.","In a process of S, the conversion apparatus  combines the data of the first character read in the process of S and the variation selector number (VSn) converted in the process of S to obtain fixed-length data. For example, in the method 1, the conversion apparatus  can set 32-bit data by shifting \u201cVSn\u22121\u201d converted in the process of S to the right by 24 bits and calculate a logical sum of the data and the four-byte basic character data stored in the character processing buffer A in S. The process of calculating the logical sum is executed at, for example, the character processing buffer A. As a result, the fixed-length data is generated in the character processing buffer A by combining the data of the first character read in the process of S and the variation selector number (VSn) converted in the process of S.","In the method 2, for example, the conversion apparatus  shifts the four-byte basic character data stored in the character processing buffer A in S to the right by eight bits. The conversion apparatus  can calculate a logical sum of the basic character data shifted eight bits to the right and the 32-bit data storing \u201cVSn\u22121\u201d converted in the process of S in the eight low-order bits. The process of calculating the logical sum is executed at, for example, the character processing buffer A. As a result, as in the method 1, the fixed-length data is generated in the character processing buffer A by combining the data of the first character read in the process of S and the variation selector number (VSn) converted in the process of S.","In the process of S, the conversion apparatus  outputs the fixed-length data generated in the process of S from the character processing buffer A. The processing proceeds to S and the conversion apparatus  repeats the processes of S to S until the character data stored in the input operation buffer is finished.","In the process illustrated in , the conversion apparatus  may include, for example, a character counter or the like. The character counter counts the number of characters. The character counter appropriately performs initialization and addition according to the process of the input unit .","The process of S executed by the conversion apparatus  is an example of obtaining character data of a variable-length character code including an identification code of a character and a variant identification code for identifying a variant of the character, wherein the variable-length character code has a code length according to the character. The CPU  or the like of the information processing apparatus  executes the process of S as an example of an obtaining unit configured to character data of a variable-length character code including an identification code of a character and a variant identification code for identifying a variant of the character, wherein the variable-length character code has a code length according to the character.","The process of S and S executed by the conversion apparatus  is an example of converting the glyph variant information to extended expression data that includes a basic character associated with the glyph variant information and the variation information and that can be converted to the basic character by specific bit arithmetic processing. The CPU  or the like of the information processing apparatus  executes the processes of S and S as an example of a converting unit configured to convert the glyph variant information to extended expression data that includes a basic character associated with the glyph variant information and the glyph variant information and that can be converted to the basic character by specific bit arithmetic processing.","The process of S executed by the conversion apparatus  is an example of delivering. The CPU  or the like of the information processing apparatus  executes the process of S as an example of a delivering unit.","(Fixed-Length Data\u2192Variable-Length Data)","A process of converting fixed length data to variable-length data by the conversion apparatus  of the present embodiment will be described with reference to a flow chart illustrated in .  illustrates a flow chart of a conversion process. The process illustrated in  is executed by, for example, a computer program expanded in the main storage unit  to allow execution. In the flow chart illustrated in , processes S to S are repeatedly executed until reading of characters of fixed-length data is finished.","The fixed-length data includes, for example, the 21-bit information expressing the basic character and the eight-bit information expressing the variation selector as described in . In the process of converting fixed length to variable-length data as illustrated in , the conversion apparatus  extracts the information from the fixed-length data to generate and output variable-length data corresponding to the extracted information.","In the flow chart illustrated in , the start of the process from the fixed-length data to the variable-length data can be, for example, output of information from the middleware or the application program to the outside. The output to the outside is, for example, output to a display device, a printer, or the like, transmission of information to another device through a communication module, or the like.","The conversion apparatus  reads a first character of the fixed-length data and stores the first character in a character processing buffer W (S). As a result of the process of S, the fixed-length data of the first character stored in the character processing buffer W includes the character code of the basic character and the variation selector. The character processing buffer W is arranged in, for example, a predetermined storage area of the main storage unit . In the following description, each buffer is arranged in a predetermined storage area of the main storage unit . The process of S executed by the conversion apparatus  is an example of a step of obtaining extended expression data. The CPU  or the like of the information processing apparatus  executes the process of S as an example of means for obtaining extended expression data.","In the process of S, the conversion apparatus  determines whether reading of the characters is finished. When the reading of the characters is finished (S, YES), the conversion apparatus  converts data in an output operation buffer to UTF8 or UTF18 and stores the data in an output buffer (S). After the execution of the process of S, the conversion apparatus  ends the process illustrated in .","On the other hand, when the reading of the characters is not finished (S, NO), the conversion apparatus  extracts a basic character as a first character of variable-length data from the fixed-length data stored in the character processing buffer W (S).","The conversion apparatus  calculates, for example, a logical product (AND) of the data stored in the character processing buffer W and the 32-bit data indicated by \u201c0x00ffffff\u201d and stores the obtained processing result in the character processing buffer A. As a result of the process, the conversion apparatus  can extract, for example, the character data of the basic character from the fixed-length data converted in the method 1.","The conversion apparatus  calculates, for example, a logical product (AND) of the data stored in the character processing buffer W and the 32-bit data indicated by \u201c0xffffff00\u201d and stores the obtained processing result in the character processing buffer A. The conversion apparatus  shifts the data stored in the character processing buffer A eight bits to the left. As a result of the process, the conversion apparatus  can, for example, extract the character data of the basic character from the fixed-length data converted in the method 2.","Next, the conversion apparatus  extracts data related to the variation selector to be added to the basic character, from the fixed-length data stored in the character processing buffer W (S). The data related to the variation selector is, for example, \u201cVSn\u22121\u201d obtained by subtracting \u201c1\u201d from the variation selector number \u201cVSn\u201d.","The conversion apparatus  calculates, for example, a logical product (AND) of the data stored in the character processing buffer W and the 32-bit data indicated by \u201c0xff000000\u201d and stores the obtained processing result in a buffer VSn. As a result of the process, the conversion apparatus  can, for example, extract the data related to the variation selector from the fixed-length data converted in the system .","The conversion apparatus  calculates, for example, a logical product (AND) of the data stored in the character processing buffer W and the 32-bit data indicated by \u201c0x000000ff\u201d and stores the obtained processing result in the buffer VSn. As a result of the process, the conversion apparatus  can, for example, extract the data related to the variation selector from the fixed-length data converted in the system .","In the process of S, the conversion apparatus  outputs the 32-bit data (fixed length) of the basic character (first character of variable-length data) extracted in the process of S from the character processing buffer A to the output operation buffer. After the execution of the process of S, the process proceeds to S, and when a predetermined condition is satisfied (S, YES), the conversion apparatus  executes a process of conversion to variation selector of S and S.","In the process of S, the conversion apparatus  determines whether there is a variation selector. For example, when there is a variation selector, \u201c1\u201d is subtracted from \u201cVSn\u201d that is the variation selector number, and \u201cVSn\u22121\u201d is stored in the buffer VSn, for example. Here, \u201cVSn\u22121\u201d is a value in a range of 16 to 255 (\u201c0x10\u201d to \u201c0xff\u201d) as described in . Therefore, in the process of S, the conversion apparatus  can determine that there is no variation selector when the data stored in the buffer VSn in the process of S is \u201c0x0\u201d. The conversion apparatus  may determine that there is a variation selector when the data stored in the buffer VSn in the process of S is not \u201c0x0\u201d.","As a result of the determination of the process of S, when there is no variation selector (S, NO), the process proceeds to S and the conversion apparatus  repeats the processes of S to S. On the other hand, as a result of the determination of the process of S, when there is a variation selector (S, YES), the conversion apparatus  converts the variation selector number (VSn) to a character based on the value stored in the buffer VSn (S). The converted variation selector number (VSn) is stored in the character processing buffer B.","In the process of S, the conversion apparatus  adds \u201c1\u201d after shifting the data of the buffer VSn 24 bits to the left and stores the data in the character processing buffer B, for example. As a result of the process, the conversion apparatus  can, for example, extract the variation selector number (VSn) from the fixed-length data converted in the method 1.","The conversion apparatus , for example, adds \u201c1\u201d to the data of the buffer VSn and stores the data in the character processing buffer B. As a result of the process, the conversion apparatus  can, for example, extract the variation selector number (VSn) from the fixed-length data converted in the method 2.","The conversion apparatus  further converts the variation selector number (VSn) extracted to the character processing buffer B to character data and stores the character data again in the character processing buffer B. As a result, character data expressing the variation selector, such as \u201cU+E0100\u201d, is stored in the character processing buffer B, for example. \u201cU+E0100\u201d is a character code corresponding to the variation selector number (VS17).","In the process of S, the conversion apparatus  outputs the character data expressing the variation selector stored in the character processing buffer B to the output operation buffer and moves to S. The conversion apparatus  can again repeat the processes of S to S to convert the data related to the basic character and the variation selector included in the fixed-length data to variable-length data expressed by \u201cbasic character+variation selector\u201d. The character data output to the output operation buffer is stored in the output buffer on the condition that it is determined that the reading of the characters is finished in S.","In the process illustrated in , the conversion apparatus  may include, for example, a character counter or the like. In the process illustrated in , the conversion apparatus  may include, for example, a character counter or the like. The character counter counts the number of characters. The character counter appropriately performs initialization and addition according to the process of the input unit .","The process of S to S executed by the conversion apparatus  is an example of converting to a character data string in a standard expression. The CPU  or the like of the information processing apparatus  executes the process of S to S as an example of a conversion unit to a character data string in a standard expression.","More specifically, the fixed-length character code generated by the conversion apparatus  is a fixed-length character code that can restore the original variable-length character code including the identification code of the character and the variant identification code of the character. The conversion apparatus  converts the character data from the variable-length character code to the fixed-length character code that can restore the variable-length character code. As a result of the process, the conversion apparatus  can treat, in a fixed-length character code, the character data of the variable-length character code including the variant.",{"@attributes":{"id":"p-0125","num":"0124"},"figref":["FIG. 8A","FIG. 8A"],"b":["10","80","80","10","80","80","80","80","90"],"i":["a ","b ","b ","a ","c ","c "]},"In the source program file of , data declaration treated in the program is performed, an initial value is set, environment variables such as a file name are defined, and a file record and the like are defined. The data declaration includes, for example, a character string \u201cNNNN\u201d expressed by UTF8 and UTF16. In the source program file , various processes regarding input and output of data, processes regarding data processing, cooperation (for example, data input and output) with other software, and the like are written. An example of the processes regarding input and output of data includes a process of inputting external data written by \u201cACCEPT IN-NAME\u201d or the like.","The compiler illustrated in  reserves a data area at the execution of compile processing, according to the file definition, the file record definition, and the like of the source program file . The reserved data area is a fixed-length data area. The compiler executes a translation process to an object code executable by the computer according to the source code regarding various processes of the source program file . In the translation process, a fixed-length data area is reserved according to the source code regarding various processes, and a translation process is executed based on the fixed-length data area.","The conversion apparatus  incorporated into the compiler executes the following conversion process of character data at the execution of the compile processing. For example, the conversion apparatus  of the compiler converts the variable-length character string \u201cNNNN\u201d or the like expressed by UTF8, UTF16, or the like included in the data declaration or the like of the source program file to UTF32 and stores it in the input operation buffer (, S). The conversion apparatus  executes a process of reading a first character in the input operation buffer and stores the character in the character processing buffer A (, S). If a predetermined condition is satisfied (, S, NO, S, YES), the conversion apparatus  reads a second character and stores the character in the character processing buffer B (, S). When the second character is not a variation selector (VS), the conversion apparatus  outputs the first character stored in the character processing buffer A to the object program . The conversion apparatus  copies the character processing buffer B to the character processing buffer A and executes the initialization process of the character processing buffer B (, S, NO\u2014S).","At the execution of the compile processing, when the second character is a variation selector (VS), the conversion apparatus  converts the variation selector (VS) expressed by Unicode to a variation selector number (VSn) (, S, YES\u2014S). The conversion apparatus  combines the basic character of the first character stored in the character processing buffer A and the variation selector number (VSn) to obtain fixed-length data and outputs the combined fixed-length data to the object program (, S-S).","The compiler illustrated in , for example, associates a call function for calling out the compiler process as a RUNTIME system according to the source code regarding the process of inputting external data such as \u201cACCEPT IN-NAME\u201d.","As a result of the process by the compiler , a character string such as \u201cNNNN\u201d declared in the source program file is set as an initial value of fixed-length data in the object program . A variable area and a fixed-length data area according to the file definition and the like of the source program file are set in the object program . A fixed-length data area and a process based on the fixed-length data area are incorporated into an execution area (business block) of the object program.",{"@attributes":{"id":"p-0132","num":"0131"},"figref":["FIG. 8B","FIG. 8A","FIG. 8B","FIG. 8B"],"b":["80","80","80","90"],"i":["c ","d ","c "]},"In the explanatory view illustrated in , for example, character data input expressed by UTF8 or UTF16 is performed through the input unit  included in the information processing apparatus . The object program receives the input character data through an external data input process. As a result of the execution of the external data input process of the object program , the call function and the like associated with \u201cACCEPT IN-NAME\u201d are called out, and the compiler operation system is activated. In the activated compiler operation system , the process of the compiler described in  is executed.","The conversion apparatus  incorporated into the compiler converts the variable-length character data expressed by UTF8, UTF16, or the like to UTF32 and stores the data in the input operation buffer (, S). The conversion apparatus  executes the processes of S to S of  to convert the variable-length character data input through the input unit  to fixed-length data.","The object program executes predetermined data processing and cooperative processing with other software based on the converted fixed-length data. For example, through the execution of the object program , the information processing apparatus  writes the fixed-length data in a file and stores the file including the fixed-length data in the auxiliary storage unit . The information processing apparatus  that executes the object program executes an input and output process based on the fixed-length data area in the cooperative processing with other software.","As a result of the data processing, when, for example, the data is to be output to the output unit  included in the information processing apparatus , the compiler converts the fixed-length data to variable-length data and outputs the data to the object program . The conversion apparatus  incorporated into the compiler executes the following conversion process regarding character data.","For example, the conversion apparatus  of the compiler reads the first character of the fixed-length data and stores the first character in the character processing buffer W (, S). When a predetermined condition is satisfied, the conversion apparatus  extracts the basic character as the first character of the variable-length data from the fixed-length data stored in the character processing buffer W and stores the extracted basic character in the character processing buffer A (, S). The conversion apparatus  extracts the data of the variation selector to be added to the basic character from the fixed-length data stored in the character processing buffer W and stores the data in the buffer VSn (, S).","The conversion apparatus  outputs the fixed-length data (USC4) of the first character from the buffer VSn to the output operation buffer (, S) and converts the variation selector number (VSn) stored in the buffer VSn to character data when there is a variation selector. The converted character data is stored in the character processing buffer B (, S). The conversion apparatus  outputs the character data (USC4) of the variation selector stored in the character processing buffer B to the output operation buffer (, S).","The basic character data of the first character output to the output operation buffer and the character data expressing the variation selector are converted to UTF8 or UTF16 and stored in the output buffer when reading of the characters of the fixed-length data is finished (, S). The character data stored in the output buffer and converted to UTF8 or UTF16 is output to a data output process of the object program ","In the data output process of the object program , the variable-length character data converted to UTF8 or UTF16 is output on the display screen of the output unit . When the basic character includes a variation selector, the variation selector is added just after the basic character, and the character data is output.","(Middleware)",{"@attributes":{"id":"p-0142","num":"0141"},"figref":["FIG. 9","FIG. 9"],"b":["10","10","90"]},"An application of  is, for example, an application program designed by the developer or the like. The developer or the like, for example, inputs character data expressed by UTF8 or UTF16 through the input unit  included in the information processing apparatus . In the application , the conversion apparatus  incorporated into the middleware is associated, as a converter function, with an external data input process. In the external data input process illustrated in , \u201cCONVERTER FUNCTION (&buffer, &fixed_buffer);\u201d associates, as a converter function, the conversion apparatus  incorporated into the middleware.","In the application , the conversion apparatus  called out by a request of the external data input process converts the variable-length character data expressed by UTF8, UTF16, or the like to UTF32 and stores the data in the input operation buffer (, S). The conversion apparatus  executes the processes of S to S of  to convert the variable-length character data input through the input unit  to fixed-length data. The converted fixed-length data is output to the external data input process of the application ","In the application , for example, the data processing and the cooperative processing with other software are designed based on a fixed-length data area. When variable-length data of input and output is converted to fixed-length data in the cooperative processing with other software, the developer or the like may associate, as a call function, the compiler operation system illustrated in  with the cooperative processing, for example.","In the application , when the character data processed by the fixed-length data is to be output to the output unit , the conversion apparatus  incorporated into the middleware is associated, as a converter function, with an external data output process. In the external data output process illustrated in , \u201cCONVERTER FUNCTION (&fixed_buffer, &customer_name);\u201d associates, as a converter function, the conversion apparatus  incorporated into the middleware.","In the application , the conversion apparatus  called out by a request of the external data output process reads the first character of the fixed-length data and stores the first character in the character processing buffer W (, S). The conversion apparatus  executes the processes S to S of  to convert the character data processed as fixed-length data to variable-length character data. The converted variable-length data is output to the external data output process of the application ","In the application , the converted variable-length character data is output to the output unit  based on a predetermined function. In the external data processing illustrated in , the converted variable-length character data is output to the output unit  based on a function such as \u201cprintf (\u201ccustomer name%s \\n\u201d, &customer_name);\u201d.","As described, the conversion apparatus  of the present embodiment can convert character data of two to eight bytes including a basic character and a variation selector to fixed-length data including data of the character code of the basic character and the variation selector. Therefore, internal processing using the converted fixed-length data is possible in a program handling Japanese of n characters, DB definition, form definition, and the like. As a result, the function of the conversion apparatus  of the present embodiment can be incorporated into middleware, a compiler, or the like to rebuild, without major reviews, the business system and the business application designed based on fixed-length Japanese character strings.","Although the input data is converted to UTF32 and stored in the input operation buffer in S of , the input data may be stored in a format of a basic character expressed by UTF8 or UTF16 or in a format of the basic character provided with a variation selector.","<<Computer-Readable Recording Medium>>","A program for causing a computer or other machines or devices (hereinafter, \u201ccomputer or the like\u201d) to implement any of the functions can be recorded in a recording medium readable by the computer or the like. The functions can be provided by causing the computer or the like to read and execute the program of the recording medium.","The recording medium readable by the computer or the like is a recording medium that can accumulate information of data, programs, and the like by electrical, magnetic, optical, mechanical, or chemical actions and that can be read from the computer or the like. Examples of the recording medium that can be removed from the computer or the like include a flexible disk, a magneto-optical disk, a CD-ROM, a CD-R\/W, a DVD, a blu-ray disk, a DAT, an 8 mm tape, a memory card such a flash memory, and the like. Examples of the recording medium fixed to the computer or the like include a hard disk, a ROM, and the like.","All examples and conditional language recited herein are intended for pedagogical purposes to aid the reader in understanding the invention and the concepts contributed by the inventor to furthering the art, and are to be construed as being without limitation to such specifically recited examples and conditions, nor does the organization of such examples in the specification relate to a showing of the superiority and inferiority of the invention. Although the embodiments of the present invention have been described in detail, it should be understood that the various changes, substitutions, and alterations could be made hereto without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2A","img":{"@attributes":{"id":"CUSTOM-CHARACTER-00003","he":"3.13mm","wi":"3.13mm","file":"US09448975-20160920-P00003.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2B","img":{"@attributes":{"id":"CUSTOM-CHARACTER-00004","he":"3.13mm","wi":"3.13mm","file":"US09448975-20160920-P00004.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5C"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8A"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 8B"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
