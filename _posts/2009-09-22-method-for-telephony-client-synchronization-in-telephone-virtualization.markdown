---
title: Method for telephony client synchronization in telephone virtualization
abstract: A method is provided for the use of a signaling protocol stack by telephony applications which run on different system software images. When a telecommunications session is conducted by a first telephony application, the first telephony application typically controls the state of the telecommunications session through a signaling protocol stack executing on the same system software image as the first telephony application. When control over the telecommunications session is passed from the first telephony application to a second telephony application, the second telephony applications begins controlling the state of the telecommunications session through the same signaling protocol stack by using remote procedure calls.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09338273&OS=09338273&RS=09338273
owner: Avaya Inc.
number: 09338273
owner_city: Basking Ridge
owner_country: US
publication_date: 20090922
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention relates to telecommunications in general, and, more particularly, to telephony applications.","Telephone receivers differ in their features. Some manufacturers produce telephones suited for business users that provide robust productivity applications, such as conference schedulers and email clients. Other manufacturers make telephones suited for entertainment that come with entertainment applications, such as video games. When a user wants to buy a telephone receiver, he or she has to choose between having either the productivity applications provided by one manufacturer or the entertainment applications provided by another.","The need to make such choice can be avoided by using hardware virtualization. Both the operating system of the business telephone and the operating system of the entertainment telephone can execute on the same device concurrently, if hardware virtualization is used. This way, when at work, the user can access the productivity applications needed for his or her work on the \u201cbusiness operating system.\u201d And when at home, the user can use the entertainment applications running on the \u201centertainment operating system.\u201d","However, a significant drawback of present virtualization techniques is that virtualized telephone receivers cannot switch between operating systems seamlessly. If the user receives a business-related call at home, the user will not be able to answer the call and then switch to the business operating system without terminating the call first. The connection has to be terminated because, in general, virtualized operating systems running in a virtualized environment are isolated from each other.","In order for the telephony application executing on the business operating system to be able to take control over the telephone call, it needs at least some information about the phone call state, such as identity of the far-end party, media type used for the phone call (e.g. video, voice, etc.), and so forth. This information, while readily accessible from the entertainment operating system, is not accessible from the business operating system because the two operating systems are isolated. So, the telephony application executing on the business operating system cannot access the needed state information and it cannot take control over the phone call.","Therefore, a need exists for a method that would allow the sharing of information about the state of a telecommunications session across a plurality of system software images running on the same device.","The present invention addresses this need by providing a method for the use of a signaling protocol stack by telephony applications which run on different system software images. When a telecommunications session is conducted by a first telephony application, the first telephony application typically controls the state of the telecommunications session through a signaling protocol stack executing on the same system software image as the first telephony application (or on a virtualization layer).","In accordance with one embodiment of the present invention, when control over the telecommunications session is passed from the first telephony application to a second telephony application, the second telephony applications begins controlling the state of the telecommunications session through the same signaling protocol stack by using remote procedure calls. Under this arrangement, the need to synchronize the state of multiple signaling protocol stacks is avoided because only one signaling stack is used by the two applications.","In another embodiment of the present invention, when control over a telecommunications session is passed to a second telephony application, the second telephony application uses a second signaling protocol stack to control the state of the telecommunications session. The state second signaling protocol stack is synchronized with the state of the signaling protocol stack through remote procedure calls, or another type of communication that is carried over a telecommunications network. Under this arrangement, the number of remote procedure calls made by the second telephony application is reduced.","The following disclosure teaches examples of the embodiments and their operation.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1","b":["101","140","110","120","130"],"i":["i","i. "]},"User  is a natural person using terminal  in a well known fashion.","Terminal  is a desk set telephone receiver capable of running two or more operating systems in a virtualized fashion. In accordance with the illustrative embodiment of the present invention, terminal  is capable of both voice and video telecommunications, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which terminal  has only a voice capability. Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which terminal  is another type of telecommunications device (e.g. cellular telephone, 2-way radio, portable digital assistant, soft phone, etc.).","Telecommunications network  transports signals between terminal  and terminals -. In accordance with the illustrative embodiment of the present invention, telecommunications network  is the Internet, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telecommunications network  is any type of telecommunications network (e.g. local area network, the Public Switched Telephone Network, SONET, ATM, cellular network, etc.).","Terminal -is a telephone receiver capable of conducting telecommunications sessions with terminal . In accordance with the illustrative embodiment of the present invention, terminal  is capable of conducting both audio and video telephone calls, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which terminal  has only a voice capability. Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which terminal  is another type of telecommunications device (e.g. cellular telephone, 2-way radio, portable digital assistant, soft phone, desktop computer, etc.).","User -is a natural person using terminal -in a well known fashion.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 2","b":["230","240","220","210","232","242","233"]},"Hardware  is the electronic components that comprise terminal , such as, for example, and without limitation, processor (single-core or multi-core), memory, transceiver, network interface, display, sound interface, video interface, etc. Hardware  is capable of executing system software and one or more telephony applications. It will be clear to those skilled in the art how to make and use hardware .","Virtualization layer  is a software layer that facilitates the sharing of the resources of hardware  by multiple system software images. In accordance with the illustrative embodiment of the present invention, virtualization layer  is an OKL4 micro kernel, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which virtualization layer  is any other Type 1 hypervisor (e.g. Xen\u2122, VMware ESX Server\u2122, etc.) or any other hosted virtual machine (e.g. QEMU\u2122, VMware Workstation\u2122, etc.).","System software  is an image of the Android\u2122 operating system that is running on top of virtualization layer . It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which System software  is any type of system software, firmware, or software platform that is capable of executing one or more software applications, such as, for example, and without limitation, Nokia Series 40 Platform\u2122, Nokia Series 60 Platform\u2122, Embedded Linux, Symbian OS\u2122, Linux, BlackBerry OS\u2122, etc. In accordance with the illustrative embodiment of the present invention, both telephony application  and signaling protocol stack  are executing on system software .","Signaling protocol stack  is a Session Initiation Protocol (SIP) stack. Signaling protocol stack  provides telephony applications  and  with an application programming interface (API) for the creating, transmitting, and receiving of Session Initiation Protocol (SIP) messages. Moreover, signaling protocol stack  is also capable of maintaining records of information about the state of a telecommunications session, such as, for example, and without limitation, callback function (or listener) registration, far-end party addresses, application identification numbers, etc.","Although, in accordance with the illustrative embodiment of the present invention, signaling protocol stack  uses the Session Initiation Protocol (SIP), it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which signaling protocol stack  uses any other communications protocol, such as, for example, and without limitation, H.323, P2P-SIP, Skype\u2122, and others. Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which signaling protocol stack  is executing on another entity, such as, for example, and without limitation, system software , virtualization layer , or system software that is host to virtualization layer .","Telephony application  is a software application for conducting telephone conversations. Telephony application  is capable of reading and processing messages received from signaling protocol stack , reading and processing data structures and variables indicated by the messages, as well as executing callback functions identified by the messages. It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telephony application  is any type of telecommunications application (e.g. instant messenger, video phone, audio enabled instant messenger, Skype\u2122, Google Talk\u2122, Yahoo Instant Messenger\u2122, etc.).","System software  is an image of the Symbian\u2122 operating system that is running on top of virtualization layer  concurrently with system software . It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which system software  is any type of system software, firmware, or software platform that is capable of executing one or more software applications, such as, for example, and without limitation, Nokia Series 40 Platform\u2122, Nokia Series 60 Platform\u2122, Symbian OS\u2122, Linux, BlackBerry OS\u2122, etc. In accordance with the illustrative embodiment of the present invention, telephony application  is executing on system software .","Telephony application  is a software application for conducting telephone conversations. Telephony application  is capable of reading and processing messages sent by the signaling protocol stack , reading and processing data structures and variables indicated by the messages, as well as executing callback functions identified by the messages. In accordance with the illustrative embodiment of the present invention, telephony application  is different software from telephony application ; however, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention, in which telephony applications  and  are different instances of the same software. It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telephony application  is any type of telecommunications application (e.g. instant messenger, video phone, audio enabled instant messenger, Skype\u2122, Google Talk\u2122, Yahoo Instant Messenger\u2122, etc.).",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 3","b":["232","233","330","340","242","350","360","310"]},"Translator  is a software module that acts as an adapter between telephony application  and signaling protocol stack . The use and operation of translator  is further described in the discussion with respect to .","Client-server  is a software module that sends and receives messages over telecommunications network .","Translator  is a software module that acts as an adapter between telephony application  and client-server . The use and operation of translator  is further described in the discussion with respect to .","Client-server  is a software module that sends and receives messages over telecommunications network .","Telecommunications network  transports messages between client-server  and client-server . In accordance with the illustrative embodiment of the present invention, telecommunications network  is the Internet, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telecommunications network  is any type of telecommunications network (e.g. local area network, the Public Switched Telephone Network, SONET, ATM, cellular network, etc.) Furthermore, in accordance with the illustrative embodiment of the present invention, telecommunications network  is the same entity as telecommunications network , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telecommunications network  and telecommunications network  are different entities.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 4","FIG. 4"]},"At task , telephony application  initiates a telecommunications session with user -. Task  is further described in the discussion with respect to .","At task , telephony application  changes the state of the telecommunications session initiated at task . In accordance with the illustrative embodiment of the present invention, telephony application  joins user - to the telecommunications session. The change of state is effectuated through the direct execution of one or more routines provided by signaling protocol stack  application programming interface (API). Those skilled in the art will recognize, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the change of state is any change of state permitted by the telecommunications protocol used for the telecommunications session.","At task , telecommunications terminal  switches to running system software  as its active software environment. When system software  is made the active software environment, its user interface becomes visible on the display of terminal . Furthermore, those skilled in the art will recognize, after reading this disclosure, that in situations in which virtualization layer  runs on top of a native operating system, system software  will be an application executing in the native operating system instead of a separate software environment. Correspondingly, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which, at task , telecommunications terminal  makes system software  the active window that is open in the native operating system.","At task , telephony application  changes the state of the telecommunications session. In accordance with the illustrative embodiment of the present invention, telephony application  joins user - to the telecommunications session, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the change of the state is any change of state permitted by the telecommunications protocol used. The execution of task  is further described in the discussion with respect to .",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 5","FIG. 5"],"b":"410"},"At task , telephony application  registers with signaling protocol stack  by calling one or more of the routines provided by the signaling protocol stack  application programming interface (API). In accordance with the illustrative embodiment of the present invention, telephony application  submits an application identification and\/or identification of at least one callback function. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which additional information is submitted, such as, for example, and without limitation information concerning the media capabilities of telephony application  (e.g. voice, text, video, etc.), type of connection, protocols supported, etc.","In accordance with the illustrative embodiment of the present invention, telephony application  executes the routines provided by the signaling protocol stack  application programming interface (API) directly. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telephony application  executes the routines provided by the signaling protocol stack  application programming interface (API) by using a remote procedure calling arrangement, such as the one described in the discussion with respect to . Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which another type of interprocess communication between telephony application  and signaling protocol stack  is used, such as, for example, and without limitation, writing to a shared file, writing to shared memory, etc.","At task , signaling protocol stack  transmits and receives, over telecommunications network , the Session Initiation Protocol (SIP) signaling necessary change the state of the telecommunications session. It will be clear to those skilled in the art how to execute task .","At task , the telephone call media is encoded, decoded, and reproduced. In accordance with the illustrative embodiment of the present invention, hardware  detects that incoming voice packets are received from network . The received packets are placed in a buffer and decoded into raw audio data. The raw audio data is sent to the audio interface of terminal  for reproduction. In accordance with the illustrative embodiment of the present invention, the media decoding is accomplished by hardware , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the encoding is performed by a coder-decoder program (a.k.a. codec) located in a higher software layer, such as, for example, and without limitation, virtualization layer  and system software . Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the encoding is performed by telephony application .",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 6","FIG. 6"],"b":"440"},"At task , telephony application  receives an indication to take control over the telecommunications session. In accordance with the illustrative embodiment of the present invention, the indication is transmitted by system software , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the indication is transmitted by another component (e.g. telephony application , hardware , or virtualization layer , etc.). Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the indication is generated in response to the pressing of a button (either a physical switch or a graphical user interface component).","At task , telephony application  registers with signaling protocol stack  by remotely executing one or more of the routines provided by the signaling protocol stack  application programming interface (API). In accordance with the illustrative embodiment of the present invention, telephony application  submits application identification and\/or identification of a callback function. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which additional information is submitted, such as, for example, and without limitation, information concerning the media capabilities of telephony application  (e.g. voice, text, video, etc.), type of connection, protocols supported, etc.","In accordance with the illustrative embodiment of the present invention, telephony application  executes the routines provided by the signaling protocol stack  application programming interface (API) by using a remote procedure calling arrangement, such as the one described in the discussion with respect to . However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which another type of interprocess communication between telephony application  and signaling protocol stack  is used, such as, for example, and without limitation, writing to a shared file, writing to shared memory, etc.","At task , telephony application  retrieves state information for the telecommunications session by remotely executing one or more of the routines provided by the signaling protocol stack  application programming interface (API). In accordance with the illustrative embodiment of the present invention, the state information comprises far-end party identification, media type of the telecommunications session (e.g. voice, video, etc.), names of call-back functions registered with signaling protocol stack , etc. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the state information comprises any item of information related to the telecommunications session, such as, for example, and without limitation, media capabilities of a far-end party (e.g. voice, video, text, etc.), authentication information (e.g. login name, password, type of encryption method used, etc.), personal information of a far-end party, etc.","In accordance with the illustrative embodiment of the present invention, telephony application  executes the routines provided by the signaling protocol stack  application programming interface (API) by using a remote procedure calling arrangement, such as the one described in the discussion with respect to . However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which another type of interprocess communication between telephony application  and signaling protocol stack  is used, such as, for example, and without limitation, writing to a shared file, writing to shared memory, etc.","At task , signaling protocol stack  transmits and receives, over telecommunications network , the Session Initiation Protocol (SIP) signaling necessary to change the state of the telecommunications session. It will be clear to those skilled in the art how to execute task .","At task , the telephone call media is encoded, decoded, and reproduced. In accordance with the illustrative embodiment of the present invention, hardware  detects that incoming voice packets are received from network . The received packets are placed in a buffer and decoded into raw audio data. The raw audio data is sent to the audio interface of terminal  for reproduction. In accordance with the illustrative embodiment of the present invention, the media decoding is accomplished by hardware . However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the encoding is performed by a coder-decoder program (a.k.a. codec) located in a higher software layer, such as, for example, and without limitation, virtualization layer  and system software . Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the encoding is performed by telephony application .","Specifically, in the illustrative embodiments of the present invention in which the decoding of the incoming voice packets is performed by a coder-decoder program (a.k.a. codec) located in system software , a second coder-decoder program (a.k.a. codec), running in system software  is started when system software  is switched to being the active software environment of terminal . The second coder-decoder program (a.k.a. codec) is configured to receive data from the buffer where the received packets are placed. And then, the second coder-decoder program (a.k.a. codec) is used to decode the media received by terminal .",{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 7","FIG. 7","FIG. 7"],"b":["710","725","735","750"]},"At task , telephony application  remotely executes a routine that is provided by the signaling protocol stack  application programming interface (API). In doing so, telephony application generates a message which identifies the invoked routine and contains any parameters that are required by the invoked routine.","At task , translator  receives the message and translates the parameters contained in the message to a format that is compatible with translator . Additionally, translator  generates a message which identifies the invoked routine and contains the translated parameters, and, subsequently, translator  forwards the generated message to client-server . It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which translator  translates the routine parameters to another format, such as, for example, and without limitation, a standard format (e.g. Microsoft's\u2122 NDR format, etc.), a format compatible with signaling protocol stack , and so forth. Moreover, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the identification of the invoked routine is also translated.","At task , client-server  receives the message containing the translated routine parameters, and, in a well known fashion, transmits the message, over telecommunications network , to client-server .","At task , client-server  receives the message transmitted at task  and forwards it to translator .","At task , translator  translates the routine parameters contained in the message received at task  to a format that is compatible with signaling protocol stack . Additionally, translator  forwards the translated parameters to signaling protocol stack  and causes signaling protocol stack  to execute the routine identified in the message. It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which translator  translates the function parameters to a standard format, such as, for example, and without limitation, Microsoft's\u2122 NDR format. Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the identification of the invoked procedure is also translated.","At task , signaling protocol stack  executes the routine identified in the translated message and produces a return value. Additionally, signaling protocol stack  generates a return message containing the return value and forwards the generated message to translator .","At task , translator  translates the return value, which is contained in the return message, to a form that is compatible with translator . Additionally, translator  generates a message which contains the translated return value and forwards it to client-server . It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which translator  translates the return value to another format, such as, for example, and without limitation, a standard format, (e.g. Microsoft's\u2122 NDR format), a format compatible with telephony application , and so forth.","At task , client-server  transmits the message containing the translated return value, over telecommunications network , to client-server .","At task , client-server  receives the message transmitted at task  and forwards it to translator .","At task , translator  translates the return value contained in the message received at task  to a form that is compatible with telephony application . Additionally, translator  forwards the translated return value to telephony application . It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which translator  translates the return value into a standard form, such as, for example, and without limitation, Microsoft's\u2122 NDR format.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 8","FIG. 8"]},"At task , telephony application  receives an invitation to participate in a telecommunications session. In accordance with the illustrative embodiment of the present invention, telephony application  receives a session initiation protocol (SIP) INVITE message which indicates that there is an incoming telephone call. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the telecommunications session for which telephony application  receives an invitation is any type of telecommunications session, such as, for example, and without limitation, video call, instant messaging session, etc.","At task , telecommunications terminal  switches to running system software  as its active software environment before the invitation has been answered. When system software  is made the active software environment, its user interface becomes visible on the display of terminal . Furthermore, those skilled in the art will recognize, after reading this disclosure, that in situations in which virtualization layer  runs on top of a native operating system, system software  will be an application executing in the native operating system instead of a separate software environment. Correspondingly, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which, at task , telecommunications terminal  makes system software  the active window that is open in the native operating system.","At task , telephony application  answers the invitation to participate in the telecommunications session. Task  is described in further detail in the discussion with respect to .",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 9","FIG. 9"],"b":"830"},"At task , telephony application  receives an indication to take control over the telecommunications session. In accordance with the illustrative embodiment of the present invention, the indication is transmitted by system software , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the indication is transmitted by another component (e.g. telephony application , hardware layer , or virtualization layer , etc.). Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the indication is generated in response to the pressing of a button (either a physical switch or a graphical user interface component).","At task , telephony application  registers with signaling protocol stack  by remotely executing one or more of the routines provided by the signaling protocol stack  application programming interface (API). In accordance with the illustrative embodiment of the present invention, telephony application  submits application identification (ID) and\/or identification of a callback function. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which additional information is submitted, such as, for example, and without limitation, information concerning the media capabilities of telephony application  (e.g. voice, text, video, etc.), type of connection, protocols supported, etc.).","In accordance with the illustrative embodiment of the present invention, telephony application  executes the routines provided by the signaling protocol stack  application programming interface (API) by using a remote procedure calling arrangement, such as the one described in the discussion with respect to . However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which another type of interprocess communication between telephony application  and signaling protocol stack  is used, such as, for example, and without limitation, writing to a shared file, writing to shared memory, etc.","At task , telephony application  obtains information about the incoming invitation to participate in a telecommunication session. In accordance with the illustrative embodiment of the present invention, the information obtained comprises far-end party identification, media type of the telecommunications session (e.g. voice, video, etc.), etc. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the information obtained comprises any item of information related to the invitation to participate in a telecommunications session, such as, for example, and without limitation, media capabilities of a far-end party (e.g. voice, video, text, etc.), authentication information (e.g. login name, password, type of encryption method used, etc.), personal information of a far-end party, etc.","In accordance with the illustrative embodiment of the present invention, telephony application  executes the routines provided by the signaling protocol stack  application programming interface (API) by using a remote procedure calling arrangement, such as the one described in the discussion with respect to . However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which another type of interprocess communication between telephony application  and signaling protocol stack  is used, such as, for example, and without limitation, writing to a shared file, writing to shared memory, etc.","At task , telephony application  answers the invitation to participate in a telecommunication session by remotely executing one or more of the routines provided by the signaling protocol stack  application programming interface (API). The manner in which the remote procedure calls are executed is identical to the one described in the discussion with respect to . Although remote procedure calling is used in the illustrative embodiment of the present invention, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which another type of interprocess communication between telephony application  and signaling protocol stack  is used, such as, for example, and without limitation, writing to a shared file, writing to shared memory, etc.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 10","b":["1030","1040","1020","1010","1032","1042","1033","1043"]},"Hardware  is the electronic components that comprise terminal , such as, for example, and without limitation, processor (single-core or multi-core), memory, transceiver, network interface, display, sound interface, video interface, etc. Hardware  is capable of executing system software and one or more telephony applications. It will be clear to those skilled in the art how to make and use hardware .","Virtualization Layer  is a software layer that facilitates the sharing of the resources of hardware  by multiple system software images. In accordance with the illustrative embodiment of the present invention, virtualization layer  is an OKL4 micro kernel, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which virtualization layer  is any other Type 1 hypervisor (e.g. Xen\u2122, VMware ESX Server\u2122, etc.) or any other hosted virtual machine (e.g. QEMU\u2122, VMware Workstation\u2122, etc.).","System software  is an image of the Android\u2122 operating system that is running on top of virtualization layer . It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which system software  is any type of system software, firmware, or software platform that is capable of executing one or more software applications, such as, for example, and without limitation, Nokia Series 40 Platform\u2122, Nokia Series 60 Platform\u2122, Symbian OS\u2122, Linux, BlackBerry OS\u2122, etc. In accordance with the illustrative embodiment of the present invention, both telephony application  and signaling protocol stack  are executing on system software .","Signaling protocol stack  is a Session Initiation Protocol (SIP) stack. Signaling protocol stack  provides telephony application  with an application programming interface (API) for the creating, transmitting, and receiving of Session Initiation Protocol (SIP) messages. Moreover, signaling protocol stack  is also capable of maintaining records of information about the state of a telecommunications session, such as, for example, and without limitation, callback function (or listener) registration, far-end party addresses, application identification numbers, etc. Signaling protocol stack  provides application programming interface (API) routines which allow other programs to request and obtain state information about ongoing telecommunications sessions.","Although, in accordance with the illustrative embodiment of the present invention, signaling protocol stack  uses the Session Initiation Protocol (SIP), it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which signaling protocol stack  uses any other communications protocol, such as, for example, and without limitation, H.323, P2P-SIP, Skype\u2122, and others. Furthermore, in accordance with the illustrative embodiment of the present invention, signaling protocol stack  is running on system software , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which signaling protocol stack  is running on virtualization layer  or system software that is host to virtualization layer .","Telephony application  is a software application for conducting telephone conversations. Telephony application  is capable of reading and processing messages received from signaling protocol stack , reading and processing data structures and variables indicated by the messages, as well as executing callback functions identified by the messages. It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telephony application  is any type of telecommunications application (e.g. instant messenger, video phone, audio enabled instant messenger, Skype\u2122, Google Talk\u2122, Yahoo Instant Messenger\u2122, etc.).","System software  is an image of the Symbian\u2122 operating system that is running on top of virtualization layer  concurrently with system software . It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which system software  is any type of system software, firmware, or software platform that is capable of executing one or more software applications, such as, for example, and without limitation Nokia Series 40 Platform\u2122, Nokia Series 60 Platform\u2122, Symbian OS\u2122, Linux, BlackBerry OS\u2122, etc. In accordance with the illustrative embodiment of the present invention, telephony application  and signaling protocol stack  are executing on system software .","Telephony application  is a software application for conducting telephone conversations. Telephony application  is capable of reading and processing messages received from signaling protocol stack , reading and processing data structures and variables indicated by the messages, as well as executing callback functions identified by the messages. In accordance with the illustrative embodiment of the present invention, telephony application  is different software from telephony application , however, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telephony applications  and  are different instances of the same software. It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telephony application  is any type of telecommunications application (e.g. instant messenger, video phone, audio enabled instant messenger, Skype\u2122, Google Talk\u2122, Yahoo Instant Messenger\u2122, etc.).","Signaling protocol stack  is a Session Initiation Protocol (SIP) stack. Signaling protocol stack  provides telephony application  with an application programming interface (API) for the creating, transmitting, and receiving of Session Initiation Protocol (SIP) messages. Moreover, signaling protocol stack  is also capable of maintaining records of information about the state of a telecommunications session, such as, for example, and without limitation, callback function (or listener) registration, far-end party addresses, application identification numbers, etc. Signaling protocol stack  provides application programming interface (API) routines which allow other programs to request and obtain state information about ongoing telecommunications sessions from signaling protocol stack . Furthermore, signaling protocol stack  provides application programming interface (API) routines which allow other programs to request and obtain state information about incoming telecommunications session invitations from signaling protocol stack .","Although, in accordance with the illustrative embodiment of the present invention, signaling protocol stack  uses the Session Initiation Protocol (SIP), it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which signaling protocol stack  uses any other communications protocol, such as, for example, and without limitation, H.323, P2P-SIP, Skype\u2122, and others. Furthermore, in accordance with the illustrative embodiment of the present invention, signaling protocol stack  is running on system software , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which signaling protocol stack  is running on virtualization layer  or system software that is host to virtualization layer .",{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 11","b":["1032","1033","1042","1043"]},"Telecommunications network  transports messages between signaling protocol stack  and . In accordance with the illustrative embodiment of the present invention, telecommunications network  is the Internet, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telecommunications network  is any type of telecommunications network (e.g. local area network, the Public Switched Telephone Network, SONET, ATM, cellular network, etc.). Furthermore, in accordance with the illustrative embodiment of the present invention, telecommunications network  is the same entity as telecommunications network , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telecommunications network  and telecommunications network  are different entities.",{"@attributes":{"id":"p-0103","num":"0102"},"figref":["FIG. 12","FIG. 12"]},"At task , telephony application  initiates a telecommunications session with user -. Task  is further described in the discussion with respect to .","At task , telephony application  changes the state of the telecommunications session initiated at task . In accordance with the illustrative embodiment of the present invention, telephony application  joins user - to the telecommunications session. The change of state is effectuated through the calling of one or more routines provided by the signaling protocol stack  application programming interface (API). Those skilled in the art will recognize, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the change of state is any change of state permitted by the telecommunications protocol used for the telecommunications session.","At task , telecommunications terminal  switches to running system software  as its active software environment. When system software  is made the active software environment, its user interface becomes visible on the display of terminal . Furthermore, those skilled in the art will recognize, after reading this disclosure, that in situations in which virtualization layer  runs on top of a native operating system, system software  will be an application executing in the native operating system instead of a separate software environment. Correspondingly, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which, at task , telecommunications terminal  makes system software  the active window that is open in the native operating system.","At task , telephony application  changes the state of the telecommunications session. In accordance with the illustrative embodiment of the present invention, telephony application  joins user - to the telecommunications session, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the change of the state is any change of state permitted by the telecommunications protocol used. The execution of task  is described in further detail in the discussions with respect to .",{"@attributes":{"id":"p-0108","num":"0107"},"figref":["FIG. 13","FIG. 13"],"b":"1210"},"At task , telephony application  registers with signaling protocol stack  by calling one or more of the routines provided by the signaling protocol stack  application programming interface (API). In accordance with the illustrative embodiment of the present invention, telephony application  submits an application identification and\/or identification of at least one callback function. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which additional information is submitted, such as, for example, and without limitation, information concerning the media capabilities of telephony application  (e.g. voice, text, video, etc.), type of connection, protocols supported, etc. In accordance with the illustrative embodiment of the present invention, telephony application  executes the routines directly.","At task , signaling protocol stack  transmits and receives, over telecommunications network , the Session Initiation Protocol (SIP) signaling necessary to change the state of the telecommunications session. It will be clear to those skilled in the art how to execute task .","At task , the telephone call media is encoded, decoded, and reproduced. In accordance with the illustrative embodiment of the present invention, hardware  detects that incoming voice packets are received from network . The received packets are placed in a buffer and decoded into raw audio data. The raw audio data is sent to the audio interface of terminal  for reproduction. In accordance with the illustrative embodiment of the present invention, the media decoding is accomplished by hardware , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the encoding is performed by a coder-decoder program (a.k.a. codec) located in a higher software layer, such as, for example, and without limitation, virtualization layer  and system software . Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the encoding is performed by telephony application .",{"@attributes":{"id":"p-0112","num":"0111"},"figref":["FIG. 14","FIG. 14"],"b":"1240"},"At task , telephony application  receives an indication to take control over the telecommunications session. In accordance with the illustrative embodiment of the present invention, the indication is transmitted by system software , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the indication is transmitted by another component (e.g. telephony application , by hardware layer , or by virtualization layer , etc.). Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the indication is generated in response to the pressing of a button (either are a physical switch or a graphical user interface component).","At task , telephony application  registers with signaling protocol stack  by calling one or more of the routines provided by the signaling protocol stack  application programming interface (API). In accordance with the illustrative embodiment of the present invention, telephony application  submits an application identification and\/or identification of at least one callback function. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which additional information is submitted, such as, for example, and without limitation, information concerning the media capabilities of telecommunications terminal  (e.g. voice, text, video, etc.), type of connection, protocols supported, etc. In accordance with the illustrative embodiment of the present invention, telephony application  executes the routines provided by the signaling protocol stack  application programming interface (API) directly.","At task , signaling protocol stack  obtains information about the state of the telecommunications session from signaling protocol stack  by remotely executing one or more of the routines provided by the signaling protocol stack  application programming interface (API). When the state information is received by signaling protocol stack , the state of signaling protocol stack  is sufficiently synchronized with the state of signaling protocol stack  as to enable telephony application  to control the telecommunications session trough signaling protocol stack  in a similar fashion as telephony application  controls the telecommunications session through signaling protocol stack  when system software  is the active software environment on terminal .","In accordance with the illustrative embodiment of the present invention, the state information comprises far-end party identification, media type of the telecommunications session (e.g. voice, video, etc.), names of call-back functions registered with SIP stack , etc. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the state information comprises any item of information related to the telecommunications session, such as, for example, and without limitation, media capabilities of a far-end party (e.g. voice, video, text, etc.), authentication information (e.g. login name, password, type of encryption method used, etc.), personal information of a far-end party, etc.","Furthermore, in accordance with the illustrative embodiment of the present invention, telephony application  executes the routines provided by the signaling protocol stack  application programming interface (API) by using a remote procedure calling arrangement, such as the one described in the discussion with respect to . However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which another type of interprocess communication between signaling protocol stack  and signaling protocol stack  is used, such as, for example, and without limitation, writing to a shared file, writing to shared memory, etc.","At task , signaling protocol stack  transmits and receives the Session Initiation Protocol (SIP) signaling necessary change the state of the telecommunications session. It will be clear to those skilled in the art how to execute task .","At task , the telephone call media is encoded, decoded, and reproduced. In accordance with the illustrative embodiment of the present invention, hardware  detects that incoming voice packets are received from network . The received packets are placed in a buffer and decoded into raw audio data. The raw audio data is sent to the audio interface of terminal  for reproduction. In accordance with the illustrative embodiment of the present invention, the media decoding is accomplished by hardware . However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the encoding is performed by a coder-decoder program (a.k.a. codec) located in a higher software layer, such as, for example, and without limitation, virtualization layer  and system software . Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the encoding is performed by telephony application .","Specifically, in the illustrative embodiments of the present invention in which the decoding of the incoming voice packets is performed by a coder-decoder program (a.k.a. codec) located in system software , a second coder-decoder program (a.k.a. codec), running in system software  is started when system software  is switched to being the active software environment of terminal . The second coder-decoder program (a.k.a. codec) is configured to receive data from the buffer where the received packets are placed. And then, the second coder-decoder program (a.k.a. codec) is used to decode the media received by terminal .",{"@attributes":{"id":"p-0121","num":"0120"},"figref":["FIG. 15","FIG. 15"]},"At task , telephony application  receives an invitation to participate in a telecommunications session. In accordance with the illustrative embodiment of the present invention, telephony application  receives a session initiation protocol (SIP) INVITE message which indicates that there is an incoming telephone call. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the telecommunications session for which telephony application  receives invitation is any type of telecommunications session, such as, for example, and without limitation, video call, instant messaging session, etc.","At task , telecommunications terminal  switches to running system software  as its active software environment before the invitation has been answered. When system software  is made the active software environment, its user interface becomes visible on the display of terminal . Furthermore, those skilled in the art will recognize, after reading this disclosure, that in situations in which virtualization layer  runs on top of a native operating system, system software  will be an application executing in the native operating system instead of a separate software environment. Correspondingly, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which, at task , telecommunications terminal  makes system software  the active window that is open in the native operating system.","At task , telephony application  answers the invitation to participate in the telecommunications session. Task  is described in further detail in the discussion with respect to .",{"@attributes":{"id":"p-0125","num":"0124"},"figref":["FIG. 16","FIG. 16"],"b":"1530"},"At task , telephony application  receives an indication to take control over the telecommunications session. In accordance with the illustrative embodiment of the present invention, the indication is transmitted by system software , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the indication is transmitted by another component (e.g. telephony application , hardware layer , or virtualization layer , etc.). Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the indication is generated in response to the pressing of a button (either a physical switch or a graphical user interface component).","At task , telephony application  registers with signaling protocol stack  by calling one or more of the routines provided by the signaling protocol stack  application programming interface (API). In accordance with the illustrative embodiment of the present invention, telephony application  submits an application identification and\/or identification of at least one callback function. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which additional information is submitted, such as, for example, and without limitation, information concerning the media capabilities of telephony application  (e.g. voice, text, video, etc.), type of connection, protocols supported, etc. In accordance with the illustrative embodiment of the present invention, telephony application  executes the routines provided by the signaling protocol stack  application programming interface (API) directly.","At task , signaling protocol stack  obtains information about the incoming invitation to participate in a telecommunication session. When the state information is received by signaling protocol stack , the state of signaling protocol stack  is sufficiently synchronized with the state of signaling protocol stack  as to enable telephony application  to answer telecommunications session invitation trough signaling protocol stack  in a similar fashion as telephony application  would answer the invitation through signaling protocol stack  when system software  is the active software environment on terminal .","In accordance with the illustrative embodiment of the present invention, the information obtained comprises far-end party identification, media type of the telecommunications session (e.g. voice, video, etc.), etc. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the information obtained comprises any item of information related to the invitation to participate in a telecommunications session, such as, for example, and without limitation, media capabilities of a far-end party (e.g. voice, video, text, etc.), authentication information (e.g. login name, password, type of encryption method used, etc.), personal information of a far-end party, etc.","Furthermore, in accordance with the illustrative embodiment of the present invention, signaling protocol stack  executes the routines provided by the signaling protocol stack  application programming interface (API) by using a remote procedure calling arrangement, such as the one described in the discussion with respect to . However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which another type of interprocess communication between signaling protocol stack  and signaling protocol stack  is used, such as, for example, and without limitation, writing to a shared file, writing to shared memory, etc.","At task , telephony application  answers the invitation to participate in a telecommunication session by directly executing one or more of the routines provided by the signaling protocol stack  application programming interface (API). It will be clear to those skilled in the art how to execute task .","It is to be understood that the disclosure teaches just examples of the illustrative embodiments and that many variations of the invention can easily be devised by those skilled in the art after reading this disclosure and that the scope of the present invention is to be determined by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5","b":"420"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6","b":"440"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9","b":"440"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 13","b":"1220"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 14","b":"1240"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 16","b":"1530"}]},"DETDESC":[{},{}]}
