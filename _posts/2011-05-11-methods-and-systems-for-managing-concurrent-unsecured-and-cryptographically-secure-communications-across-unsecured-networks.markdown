---
title: Methods and systems for managing concurrent unsecured and cryptographically secure communications across unsecured networks
abstract: An endpoint, method, and authorization server are disclosed which can be used to allow concurrent secure and clear text communication. An endpoint includes a computing system including a programmable circuit operatively connected to a memory and a communication interface, the communication interface configured to send and receive data packets via a data communications network. The endpoint also includes a filter defined in the memory of the computing system, the filter configured to define one or more access lists, each access list defining a group of access permissions for a community of interest. The community of interest includes one or more users, and an access list from among the one or more access lists defines a set of clear text access permissions associated with a community of interest. The endpoint also includes a driver executable by the programmable circuit, the driver configured to cooperate with the communication interface to send and receive data packets via the data communications network. The driver is also configured to selectively split and encrypt data into a plurality of data packets to be transmitted via the data communications network based at least in part upon the contents of the one or more access lists.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09525666&OS=09525666&RS=09525666
owner: Unisys Corporation
number: 09525666
owner_city: Blue Bell
owner_country: US
publication_date: 20110511
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This Application is a claim the benefit of priority to, the following three applications:\n\n","The present application claims priority to U.S. Provisional Patent Application No. 61\/389,511, filed Oct. 4, 2010, and entitled \u201cSystem and Method for Providing a USB Stick-Based Thin Client\u201d, the disclosure of which is hereby incorporated by reference in its entirety.","The present application also claims priority to U.S. Provisional Patent Application No. 61\/389,535, filed Oct. 4, 2010, and entitled \u201cSystem and Method for Providing a Stealth Secure Virtual Terminal\u201d, the disclosure of which is hereby incorporated by reference in its entirety.","The present application also claims priority to U.S. patent application Ser. No. 11\/714,598, filed Mar. 6, 2007, entitled \u201cGateway for Securing Data to\/from a Private Network\u201d, the disclosure of which is hereby incorporated by reference in its entirety.","The present application also claims priority to U.S. patent application Ser. No. 11\/714,590, filed Mar. 6, 2007, entitled \u201cSecuring and Partitioning Data-in-Motion Using a Community-of-Interest\u201d, the disclosure of which is hereby incorporated by reference in its entirety.","The present application also claims priority to U.S. patent application Ser. No. 11\/714,666, filed Mar. 6, 2007, entitled \u201cCommunicating Split Portions of Data Set Across Multiple Data Path\u201d, the disclosure of which is hereby incorporated by reference in its entirety.","The present application also claims priority to U.S. patent application Ser. No. 11\/339,974, filed Jan. 26, 2006, entitled \u201cIntegrated Multi-Level Security System\u201d, the disclosure of which is hereby incorporated by reference in its entirety.","The present application also claims priority to U.S. Provisional Patent Application No. 60\/648,531, filed Jan. 31, 2005, entitled \u201cDistributed Security on Multiple Independent Networks Using Secure \u2018Parsing\u2019 Technology\u201d, the disclosure of which is hereby incorporated by reference in its entirety.","The present application relates generally to secured data communication. In particular, the present application relates to methods and systems for providing and controlling secure communications across unsecured networks.","Security is often maintained in organizations by segregating physical networks used by each group of users. This acts to restrict access to data available on computers and databases used in such networks. For example, it prevents someone in engineering from gaining access to data used in the payroll department's network and vice versa. While separate local network infrastructures help to maintain security of data, superfluous equipment and maintenance is required to maintain these segregated networks. This adds expense, and complexity to the data infrastructures of such organizations.","Furthermore, regardless of the organizational structure of networks used in commercial, governmental, and other settings, there is an ever increasing security concern that sensitive data transmitted or stored on local networks will be accessed by an unauthorized individual or accidentally accessed or disclosed outside of a community-of-interest, hence compromising the secret data. Exacerbating this problem is the fact that security threats can also often originate from insiders. Whether the threat is intentional or unintentional, transmitting data exclusively in one security level partitioned network or another does not protect the data if it is in plaintext format. This is because even strict physical segregation of a network by security level is no guarantee that data will not be disseminated to end-users outside that security level.","The above security concerns are only further exacerbated when access to open or public networks is provided or required, for example in the case of accessing secure networks remotely via the Internet. For example, the growth of the Internet and related network communication networks has given rise to increasingly larger numbers of distributed information processing systems in which individual users obtain information from an ever increasing number of sources. For example, in the banking industry, electronic communications by customers to their banking institutions to engage in electronic financial transactions is an increasing form of interaction between the customers and the banks Other organizations or institutions requiring highly secured communications over typically-unsecure networks have analogous problems.","In making these transactions possible, customers use any number of computing systems attached to the Internet to communicate with servers operated by their banking institutions to send commands and receive data associated with these transactions. Banks are typically not able to control the customer's computing systems in a meaningful way that may give rise to potential security issues. A summary of some of these security threats are described in detail in a Unisys White Paper entitled \u201cZeus Malware: Threat Banking Industry\u201d that is incorporated herein by reference in its entirety.","The present invention addresses these limitations of the prior computing systems.","In accordance with the present disclosure, the above and other problems are solved by providing a method, apparatus, and article of manufacture for providing a thin client for providing secure access to network-based services from a computing system attached to a generally unsecured network. Various aspects of this thin client, and systems enabling thin client access to such services, for example web based services, are disclosed as well.","In a first aspect, an endpoint includes a computing system including a programmable circuit operatively connected to a memory and a communication interface, the communication interface configured to send and receive data packets via a data communications network. The endpoint also includes a filter defined in the memory of the computing system, the filter configured to define one or more access lists, each access list defining a group of access permissions for a community of interest. The community of interest includes one or more users, and an access list from among the one or more access lists defines a set of clear text access permissions associated with a community of interest. The endpoint also includes a driver executable by the programmable circuit, the driver configured to cooperate with the communication interface to send and receive data packets via the data communications network. The driver is also configured to selectively split and encrypt data into a plurality of data packets to be transmitted via the data communications network based at least in part upon the contents of the one or more access lists.","In a second aspect, a method of authorizing an endpoint for use in a secure network is disclosed. The method includes transmitting a request from the endpoint to authorize a user of the endpoint for operation on the secure network, the request including an identity of a user of the endpoint. The method also includes receiving at the endpoint a set of one or more keys associated with communities of interest, the communities of interest defined to include the user. The method further includes receiving at the endpoint one or more filters defining one or more access lists, wherein an access list from among the one or more access lists defines a set of clear text access permissions associated with a community of interest.","In a third aspect, an authorization system integrable into a secure network is disclosed. The authorization system includes an authorization server including a programmable circuit communicatively connected to a memory. The authorization system also includes a provisioning utility executable on the programmable circuit. The provisioning utility includes program instructions which, when executed, cause the authorization server to, in response to a request from an endpoint to authorize a user of the endpoint for operation on the secure network, determine a set of communities of interest associated with the user defined in the provisioning utility, and respond to the request by sending to the endpoint a set of one or more keys, associated with communities of interest, the communities of interest defined to include the user. The provisioning utility further includes program instructions which, when executed, cause the authorization server to sending to the endpoint one or more filters defining one or more access lists, wherein an access list from among the one or more access lists defines a set of clear text access permissions associated with a community of interest.","In some aspects, a utility of the present disclosure is that, among other aspects, it provides a method for securely connecting a client computer, such as one having a secure boot device to a remote server over a communications network. The method boots a client computer from a trusted set of processing modules stored in the secure boot device, verifies the contents of the trusted set of processing modules prior to execution of these processing modules, provides authentication information from data stored upon the secure boot device to an authorization server to establish a secure connection to another server, such as a web services server. In some aspects, the method establishes the secure connection with the server using encryption keys stored on the secure boot device, and transfers data between the client computer and the server over the secure connection to perform transactions initiated by a user of the client computer. Additionally, the present disclosure provides for control and update of software executing at a client computing device. The server computer utilizes encryption keys associated with a unique ID from the secure boot device. Additionally, distributed networks are provided that allow for distributed resource management, to allow customers access to private network areas that share resources with other customers, while also ensuring secure key and update management for each customer.","These and various other features as well as advantages, which characterize the present disclosure, will be apparent from a reading of the following detailed description and a review of the associated drawings.","Various embodiments of the present invention will be described in detail with reference to the drawings, wherein like reference numerals represent like parts and assemblies throughout the several views. Reference to various embodiments does not limit the scope of the invention, which is limited only by the scope of the claims attached hereto. Additionally, any examples set forth in this specification are not intended to be limiting and merely set forth some of the many possible embodiments for the claimed invention.","In general, the present disclosure relates to a method, apparatus, and article of manufacture for providing a secure client for providing secure access to a remote server from a computing system attached to an unsecured network. The present disclosure provides for a secure connection to such a server generally, and in particular distributed network resources. Various aspects include methods and systems for secure connection to a distributed system for performing transactions, for example using a thin client, terminal-based system. Methods and systems for updating such a system while a secure connection is established are provided as well. Additionally, methods and systems for managing encryption keys within a secure network, and for allowing secure and clear text connections to coexist within a secure network are provided as well.","I. Generalized Infrastructure for Secure Communication",{"@attributes":{"id":"p-0052","num":"0053"},"figref":"FIG. 1","b":["100","100","111","113","121","124","126","123","131","132","112","123","112"]},"In one possible embodiment of the present invention, this secure connection utilizes a security technology developed by the Unisys Corporation that are described in detail in a number of commonly assigned U.S. patent applications. These applications generally describe a cryptographic splitting and recombining arrangement referred to herein as \u201ccryptographically secure\u201d or \u201cStealth-enabled\u201d. These applications include:\n\n","All of these applications are currently pending before the U.S. Patent and Trademark Office, are commonly assigned to the owner of the instant application, and are incorporated herein in their entireties.","In various embodiments of the present disclosure, the servers - can be distributed across a plurality of discrete locations or controlled by different entities; in such embodiments, these servers - can be referred to generally as remote servers, as they represent servers accessible from a remote location and which can be accessed via an unsecured network. For example, in some embodiments of the present disclosure (discussed in greater detail below), one or more of the servers - is a banking server, configured to communicate securely with one or more client terminal devices across a secure connection, formed for example via the Internet. In such examples, or others where a high level of security is required, one or more secure connections can be established between client devices and a server, or among servers, on such an unsecured network. Other server functionalities or arrangements are possible as well, for example including administration, provisioning, and user management\/authentication systems. In such embodiments, one or more such separate functionalities can be integrated into, or can reside separate from, an entity requiring highly secure communications such as a financial institution where reliable security is needed.",{"@attributes":{"id":"p-0056","num":"0062"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","204","206","208","202","204","208","111","113","121","124","200"]},"As used in the present disclosure, a community-of-interest refers generally to a group of two or more people who share a common interest and are grouped together based on their common interest. A community-of-interest may correspond to a role of an individual in an organization, a job level, security level, or may correspond to some other characteristic. A community-of-interest may also correspond to some subject defined by an organization or an individual and associated with one or more individuals (i.e., end-users of a computing device). A community-of-interest may be defined differently depending on the organizational structure of the entity.",{"@attributes":{"id":"p-0058","num":"0064"},"figref":"FIG. 3","b":"300"},"In the example shown, while the President can access data in all four communities-of-interest, the President cannot share data with the Payroll Specialist if the data the President sends to the Payroll Specialist is encrypted for use in a community-of-interest that the Payroll Specialist cannot access. That is, no communication session can be established between the President and the Payroll Specialist other than within the Payroll community-of-interest. Therefore the message with a community-of-interest key not associated with the Payroll Specialist cannot be sent to the Payroll Specialist. Even if the message is accidentally received by the Payroll Specialist, the Payroll Specialist cannot view the message, for example due to use of encryption keys specific to each community of interest, as discussed in further detail below. This safeguard prevents inadvertent or malicious\/intentional dissemination of plaintext data to individuals who are not members of a particular community-of-interest, and therefore, are not authorized to receive such information.","It is possible to distribute community-of-interest specific encryption keys (also known herein as \u201ccommunity-of-interest keys\u201d) within departments, groups, agencies, different offices of an entity, based on ranks of individuals, security level ratings of individuals, commercial\/non-commercial entities, governmental\/non-governmental entities, corporations, or just about any group. It is also possible to dynamically create a community-of-interest or revoke a community of interest by the dissemination or removal of community-of-interest keys.","Thus, in accordance with one embodiment, each individual (or end user) associated with an organization has one or more community-of-interest keys provided on their computers, which is a secret encryption and\/or decryption key previously installed thereon as a set of code or logic on a computer. Only computer devices with matching community-of-interest keys can communicate with one another, or observe data classified within their community-of-interest. That is, each community-of-interest key is associated with an end-user's community-of-interest (such as a position in a company or a security level), thereby allowing only end-users within the same group and having at least the same community-of-interest key to communicate with each other, or to gain access to data associated with that community-of-interest.","Of course, multiple community-of-interest keys can be distributed to individuals based on their membership and roles. It is conceivable that select end-users in each community-of-interest, may have more access to certain data, while others may have less ability to view or share data. The methods of this invention using communities-of-interest keys allows for the sharing or accessing of data to end-users whose computers have been preconfigured with appropriate community-of-interest keys.","Community-of-interest keys may also be installed on servers or other platforms within a network to protect sensitive data. Servers dedicated to a particular community-of-interest may only communicate with computing devices that have the same requisite community-of-interest keys installed therein. Otherwise no communication session can be established between a computing device and a server without both devices having the requisite key(s). Details regarding particular implementations in which a user device connects to server systems based on shared community-of-interest keys are described below.","Referring now to , various components of a computing device are disclosed, with which aspects of the present disclosure can be implemented. With reference to , exemplary physical and logical organizations of systems are shown in which aspects of the present disclosure can be implemented. Although some of the discussion below will focus on end-user equipment such as personal computers, the applicability of the present invention is not limited to end-user equipment, and may be used with other computing devices within a network. For example, computing devices according to the present disclosure may be other general or special purpose computing devices, such as, but not limited to, gateways, servers, routers, workstations, mobile devices (e.g., POA, cellular phone, etc.), and a combination of any of the above example devices, and other suitable intelligent devices.",{"@attributes":{"id":"p-0065","num":"0071"},"figref":["FIG. 4","FIG. 4"],"b":"400"},"In the example of , the computing device  includes a memory , a processing system , a secondary storage device , a network interface card , a video interface , a display unit , an external component interface , and a communication medium . The memory  includes one or more computer storage media capable of storing data and\/or instructions. In different embodiments, the memory  is implemented in different ways. For example, the memory  can be implemented using various types of computer storage media.","The processing system  includes one or more processing units. A processing unit is a physical device or article of manufacture comprising one or more integrated circuits that selectively execute software instructions. In various embodiments, the processing system  is implemented in various ways. For example, the processing system  can be implemented as one or more processing cores. In another example, the processing system  can include one or more separate microprocessors. In yet another example embodiment, the processing system  can include an application-specific integrated circuit (ASIC) that provides specific functionality. In yet another example, the processing system  provides specific functionality by using an ASIC and by executing computer-executable instructions.","The secondary storage device  includes one or more computer storage media. The secondary storage device  stores data and software instructions not directly accessible by the processing system . In other words, the processing system  performs an I\/O operation to retrieve data and\/or software instructions from the secondary storage device . In various embodiments, the secondary storage device  includes various types of computer storage media. For example, the secondary storage device  can include one or more magnetic disks, magnetic tape drives, optical discs, solid state memory devices, and\/or other types of computer storage media.","The network interface card  enables the computing device  to send data to and receive data from a communication network. In different embodiments, the network interface card  is implemented in different ways. For example, the network interface card  can be implemented as an Ethernet interface, a token-ring network interface, a fiber optic network interface, a wireless network interface (e.g., WiFi, WiMax, etc.), or another type of network interface.","The video interface  enables the computing device  to output video information to the display unit . The display unit  can be various types of devices for displaying video information, such as a cathode-ray tube display, an LCD display panel, a plasma screen display panel, a touch-sensitive display panel, an LED screen, or a projector. The video interface  can communicate with the display unit  in various ways, such as via a Universal Serial Bus (USB) connector, a VGA connector, a digital visual interface (DVI) connector, an S-Video connector, a High-Definition Multimedia Interface (HDMI) interface, or a DisplayPort connector.","The external component interface  enables the computing device  to communicate with external devices. For example, the external component interface  can be a USB interface, a FireWire interface, a serial port interface, a parallel port interface, a PS\/2 interface, and\/or another type of interface that enables the computing device  to communicate with external devices. In various embodiments, the external component interface  enables the computing device  to communicate with various external components, such as external storage devices, input devices, speakers, modems, media player docks, other computing devices, scanners, digital cameras, and fingerprint readers.","The communications medium  facilitates communication among the hardware components of the computing device . In the example of , the communications medium  facilitates communication among the memory , the processing system , the secondary storage device , the network interface card , the video interface , and the external component interface . The communications medium  can be implemented in various ways. For example, the communications medium  can include a PCI bus, a PCI Express bus, an accelerated graphics port (AGP) bus, a serial Advanced Technology Attachment (ATA) interconnect, a parallel ATA interconnect, a Fiber Channel interconnect, a USB bus, a Small Computing system Interface (SCSI) interface, or another type of communications medium.","The memory  stores various types of data and\/or software instructions. For instance, in the example of , the memory  stores a Basic Input\/Output System (BIOS)  and an operating system . The BIOS  includes a set of computer-executable instructions that, when executed by the processing system , cause the computing device  to boot up. The operating system  includes a set of computer-executable instructions that, when executed by the processing system , cause the computing device  to provide an operating system that coordinates the activities and sharing of resources of the computing device . Furthermore, the memory  stores application software . The application software  includes computer-executable instructions, that when executed by the processing system , cause the computing device  to provide one or more applications. The memory  also stores program data . The program data  is data used by programs that execute on the computing device .","The term computer readable media as used herein may include computer storage media and communication media. As used in this document, a computer storage medium is a device or article of manufacture that stores data and\/or computer-executable instructions. Computer storage media may include volatile and nonvolatile, removable and non-removable devices or articles of manufacture implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. By way of example, and not limitation, computer storage media may include dynamic random access memory (DRAM), double data rate synchronous dynamic random access memory (DDR SDRAM), reduced latency DRAM, DDR2 SDRAM, DDR3 SDRAM, solid state memory, read-only memory (ROM), electrically-erasable programmable ROM, optical discs (e.g., CD-ROMs, DVDs, etc.), magnetic disks (e.g., hard disks, floppy disks, etc.), magnetic tapes, and other types of devices and\/or articles of manufacture that store data. Communication media may be embodied by computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism, and includes any information delivery media. The term \u201cmodulated data signal\u201d may describe a signal that has one or more characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media may include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, radio frequency (RF), infrared, and other wireless media.","Additionally, the embodiments described herein are implemented as logical operations performed by a computer. The logical operations of these various embodiments of the present invention are implemented (1) as a sequence of computer implemented steps or program modules running on a computing system and\/or (2) as interconnected machine modules or hardware logic within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system implementing the invention. Accordingly, the logical operations making up the embodiments of the invention described herein can be variously referred to as operations, steps, or modules.",{"@attributes":{"id":"p-0076","num":"0082"},"figref":["FIG. 5","FIG. 4","FIG. 4"],"b":["500","400","500","502","504","506","508","510","504","508","512","514","300"]},"A file system  may reside as a component in the form of computer-executable instructions and\/or logic within memory , that when executed serves as a logical interface between code stored in flash  and other storage mediums. File system  is generally responsible for performing transactions on behalf of code stored in ROM or one or more applications. File system  may also assist in storing, retrieving, organizing files, and performing other related tasks associated with code and\/or data. That is, file system  has the ability to read, write, erase, and manage files (applications, etc.). File system  may also include other applications such as web browsers, e-mail, applications, and other applications.","Computing device  may also include one or more Input\/Output ports  to transmit and\/or receive data. I\/O ports  are typically connected in some fashion to controller  (processor  and memory ). I\/O ports  are usually at least partially implemented in hardware for connecting computing device  to a communication link , and may include wired as well as wireless capabilities. Communication link  may include any suitable connection means for handling the transportation of data to and from computing device , such as, but not limited to, cable, fiber optics, and wireless technology. Communication link  may also include network technology including portions of the Internet.","Stored within one or more portions of memory  is a security engine . That is, security engine  includes one or more sets of computer-executable code resident in a computer-readable medium such as memory . Security engine  performs security functions associated with transmitting, receiving, or storing data. These security functions may include encrypting data and decrypting data. Typically, cryptographic corresponding key pairs are installed in memory, such as an encryption key and decryption keys. However, it is appreciated that a corresponding cryptographic key may reside on another computing device. The keys may be public or private as would be appreciated by those skilled in the art. The keys may be generated using commercially available products or proprietary technology.","In one embodiment, security engine  includes one or more filters , which define permissions relating to secure communication by the computing device . By permissions, it is intended that one or more remote endpoints can be defined in a filter, and access to that endpoint can be either allowed or prevented based on an identity of a user.","In such an embodiment, security engine  also includes one or more community-of-interest keys , which are private and secret keys used for encrypting\/decrypting other security keys in accordance with this invention. That is, community-of-interest keys  are used for transformation (encryption) of a second key (or additional keys), such as a session key, into a cryptographically split key, as well as for retransformation (decryption) of the second key back to its usable form.","A community-of-interest key  refers generally to an encryption key and\/or corresponding decryption key, that may be assigned to a computing device  of an end-user based on an associated community-of-interest attributed to the end-user. For instance, end-users of a computing device , may also have one or more community-of-interest keys  installed on their computing device, based on their position or security level within an organization.","It is also possible to secure and segregate messages based on a category of a community-of-interest associated with the message using a corresponding community-of-interest key  (e.g., cryptographic pairs). Also, unlike private\/public key pairs, community-of-interest keys  are usually installed or generated before a transaction to increase security, rather than receiving and generating the key on-the-fly during a transaction, in which the key can be intercepted. Community-of-interest keys  may be stored in a key repository , which is a storage area in memory . Filters  can also be stored in memory .","In some embodiments, each community-of-interest key  has an associated filter , such that a set of endpoint access permissions are included with each community of interest. In such embodiments, the filter associated with a community-of-interest key . Example community of interest keys can include a secure community of interest key , that may have an associated filter defining one or more endpoints and\/or gateway devices associated with that community of interest and excluding communication with any unsecured sites, or a clear text filter that would allow clear text communication with external, publicly available and unsecured systems (e.g., via the internet). In the example of the clear text filter, such a filter could include one or more exclusionary permissions preventing clear text communication to secured endpoints or gateway devices normally requiring cryptographically-secured communication. Additional details regarding example key and filter arrangements are discussed below in conjunction with .","Security engine  may also include a cryptographic engine  for generating cryptographic keys and other information used to encrypt or decrypt messages, as well as route data to a target device. In one embodiment, cryptographic engine  generates a cryptographic data set, which may include one or more session keys which are used for encrypting\/decrypting one message or a group of messages when computing device  is in a communication session with another device.","Security engine  may also include other authentication data and code , used for purposes of authenticating data or information, such as passwords, recorded biometric information, digital certificates, and other security information. As is appreciated by those skilled in the art after having the benefit of this disclosure, it is possible that there may be various combinations of keys and authentication data in security engine .","Although described in terms of code, the exemplary security engine  may be implemented in hardware, software, or combinations of hardware and software. Additionally, all components of security engine  may be communicatively coupled to each other through controller . As would be appreciated by those skilled in the art, many of the components of security engine  may be stored and identified as files under control of file system .","Security engine  may also include a data splitter module  for splitting data that is to be transmitted from computing device . Typically, security engine  relies on a community-of-interest key and\/or cryptographic engine  to determine how to split and encrypt data. Data splitter module  divides data into portions of data. A portion of data is any bit or combination of bits of data that comprise a larger set of data, such as a message or a portion of a cryptographic data set (a second key). A portion of data may be encapsulated in packets for transport, but the content of the data may be fixed or of a variable bit length. Accordingly, a portion of data (such as a portion of message or portion of cryptographic data set) corresponds to one or more bits comprising data content, i.e., payload as opposed to a data header message. Data splitter  may be configured to produce predetermined bit length portions of data or it may be determined dynamically in an automatic fashion.","Security engine  may also include an assignment module . Assignment module  assigns tags to each portion of data (portion of a message or key). Each tag contains metadata indicating a traffic path (to be described) a particular portion of data is to be distributed through one or more networks to another computing device . Other metadata may be included in the tags, such as information identifying the network the portion of data originated, the client device destination, possibly the order of the portion of data in relation to other portions of data emitted from the same network, and other suitable information.","Security engine  may also include an assembler module  configured to reassemble portions of data received at different times, and\/or via different data paths. Once data is reassembled, authorized assets and messages appear accessible in plaintext format from the end-users perspective. It is noted that various security techniques may be employed on computing device  to prevent the user from saving data, mixing different levels of data, or sending the data to other locations for dissemination to another network, such as via email or other electronic transfer means. Applications may also execute on separate physical and\/or logical partitions within computing device .","Additional details regarding the security engine and cryptographic data sets generated using the security engine are discussed in U.S. Patent Applications Nos. 60\/648,531; Ser. Nos. 11\/339,974; 11\/714,590; 11\/714,666; and 11\/714,598, which were previously incorporated by reference in their entireties.",{"@attributes":{"id":"p-0092","num":"0098"},"figref":["FIG. 6","FIGS. 4-5","FIG. 4","FIG. 5"],"b":["600","600","400","500","420","422","424","408","550"]},"In the embodiment shown, the communications infrastructure  includes a physical network interface card  communicatively interconnected to a network , illustrated in this embodiment as an Ethernet local area network (LAN). The physical network interface card  is generally a piece of communications hardware included within the computing system, and can be, in one embodiment, the network interface adapter  of .","The communications infrastructure  includes a routing table , which defines one or more local and remote IP addresses used to communicate messages between a computing system incorporating the infrastructure  and a remote computing system. For example, the routing table  can include a default route, local network and broadcast addresses, as well as one or more network masks, gateways, and other points of interest.","In general, when a computing system intends to transmit clear text data using the physical network interface card , that system will determine an address using the routing table  and form a packet to be forwarded to the physical network interface card  for communication via network . In accordance with the present disclosure, to separate secure data communications from standard clear text communications, a dedicated communication stack can be used for each of one or more types of secured communication.","In the embodiment shown, and as discussed in further detail in various embodiments of the present disclosure below, the communications infrastructure  includes a first secure software stack  and a second secure software stack , each useable to communicate over a secured connection to a remote system. The first secure software stack  that includes a secure communications driver , a virtual secure network interface card , and a network interface card driver .","The secure communications driver  receives data to be transmitted via a secured communication method (e.g., as described in , below), and an address from the routing table , and generates one or more packets of encrypted data to be transmitted. In some embodiments, as discussed further below, the secure communications driver uses one or more filters to determine whether secured (split and encrypted) data packets can be sent or received to\/from a particular network address, and to determine whether secure or clear text data packets can be accepted at the computing system implementing the communications infrastructure . For example, if a data packet or message is received at the virtual secure network interface card  from an endpoint not included in an access list of a filter that defines permissions to that endpoint or client device, the secure communications driver  will discard that packet, preventing it from reaching an application to which it would otherwise be addressed or intended. Likewise, the secure communications driver  can prevent communication of data packets to remote endpoint systems not authorized by the access lists in one or more filters defined in the computing device.","The virtual secure network interface card  acts as a virtual version of the physical network interface card , in that it receives data packets formed at the secure communications driver  and instructions for where and how to transport those data packets. In certain embodiments, the secure communications driver  acts analogously to a hardware driver, but acts on the virtual secure network interface card .","The network interface card driver  provides the link between the virtual secure network interface card , and physical network adapter  to allow communication of secured data packets with a remote system (e.g., an endpoint, gateway, or other remote system). In certain embodiments, the network interface card driver  acts as a piece of hardware to the operating system of the computer implementing the communications infrastructure , for example to host the virtual secure network interface card , and allow applications to transmit data via that piece of virtual hardware.","In the embodiment shown, an optional second software stack  is also shown, which can be used concurrently with the first secure software stack . In the embodiment shown, the second software stack is configured to allow a different type of security, in which security is not provided by data obfuscation on a packet-by-packet basis, but rather by creating a secured connection to a dedicated endpoint. In the example embodiment shown, this second software stack  is configured to manage communication via a virtual private network (VPN) connection, where a secure tunnel is formed between the computing system operating the communications infrastructure  and a predetermined, known gateway. In this embodiment, the second software stack  includes a VPN driver , a virtual VPN network interface card , and a VPN communications driver . The VPN driver  generates instructions for communication with a particular VPN gateway, and for constructing a secure tunnel between the computing system implementing the communications infrastructure  and the VPN gateway (e.g., as illustrated below in connection with ). The virtual VPN network interface card , like the virtual secure network interface card , acts as a virtual version of the physical network interface card , in that it receives data packets formed at the VPN driver  and instructions for where and how to transport those data packets (e.g., via a secure tunnel). The virtual VPN network interface card , similar to the network interface card driver  acts as a piece of hardware to the operating system of the computer implementing the communications infrastructure , for example to host the virtual VPN network interface card , and allow applications to transmit data via that piece of virtual hardware to remote systems.","Overall, and referring to  generally, it is noted that the computing systems and generalized example networks of the present disclosure generally provide infrastructure for receipt and management of encryption keys specific to one or more communities-of-interest, and distributed use of algorithms for encrypting and splitting data into obscured data packets such that only those individuals having access rights to that data can in fact reformulate the data upon receipt of those data packets.  below briefly describe methods and arrangements for treatment of data packets sent and received from a gateway, endpoint, or other computing device configured for secured communication using the cryptographic splitting and virtual network arrangements of the present disclosure.","II. Methods for Secure Communication","Referring now to , methods and systems for securely transmitting data packets between computing systems are disclosed. Generally, the methods and systems illustrated in  provide a brief overview of methods of handling data packets sent and received using the computing systems and networks described herein, for example those discussed above with respect to . Additional details regarding these methods and systems are disclosed in the copending U.S. Patent Applications Nos. 60\/648,531; Ser. Nos. 11\/339,974; 11\/714,590; 11\/714,666; and 11\/714,598, listed above and previously incorporated by reference.","As used herein, a \u201cmessage\u201d or \u201cdata packet\u201d refers generally to any set of data sent from one node to another node in a network. A message may include different forms of data usually in some form of a payload. A message may be an e-mail, a video stream, pictures, text documents, word processing documents, web-based content, instant messages, and various other forms of data that when in plain text, or clear form, may reveal confidential and sensitive information. In most instances, this invention is concerned with securing data-in-motion, or in other words, cryptographic data or messages sent from one node to another node such as data traveling from one location to another within one or more networks which may include the Internet.",{"@attributes":{"id":"p-0105","num":"0111"},"figref":"FIG. 7","b":"700"},"In this method, in block , a cryptographic data set is divided into a plurality of portions, and tag values are assigned to each portion of the set. Each portion is encapsulated in separate packets. In block , the portions of cryptographic data set are transmitted from an egress point of a computing device, such as a network interface card as discussed above in conjunction with . On the receiving endpoint, in block , each portion of cryptographic data is received by a target computing device. In one embodiment, as the packets received include a new community-of-interest key identifier embedded therein. In another embodiment, newly received packets do not include such a key identifier, and instead the receiving endpoint attempts to restore (reassemble) a cryptographic data portion encapsulated in a payload portion of the packet using a community-of-interest key accessed from the receiving computing device's repository. If there is only one community-of-interest key present in the repository, the receiving computing will attempt to reassemble the cryptographic data portion(s) using the single key. If there are more than one community-of-interest key in the receiving computing device's repository, the receiving computing device will iteratively try each key until it locates a key which is able to reassemble the cryptographic data portion(s).","However, if no identifier match is located in block , in Step  each packet and hence portion of cryptographic data set received by the target device is discarded, erased, and\/or ignored. This may represent a situation where the end-user of an endpoint does not have authorization to view a message, because the end-user (or the end-user's computing device) lacks the requisite community-of-interest key, or if the transmitting computing device is not included in a listing of permitted devices at the target device.","If according to the Yes branch of block , a community-of-interest key matching the identifier is located, or a community-of-interest key is identified which is able to restore the payload portion of the packet(s), then in block  each portion of the cryptographic data set is temporarily stored for eventual reassembly. At this point a tunnel can be established between the sending and receiving computing devices.","In block , the cryptographic data set is decrypted. That is, the cryptographic data set is reconstructed (reassembled) by decrypting each portion of the cryptographic data set using the community-in-interest key identified in block . Once all portions of cryptographic data set are received, it is possible to fully reassemble the cryptographic data set on the receiving computing device. The cryptographic data set is in a usable form for use to decrypt portions of a message received, which will be described with reference to .",{"@attributes":{"id":"p-0110","num":"0116"},"figref":"FIG. 8","b":["800","800","800","802","804","806","808"]},"In block , a message is divided into portions, and tag values are assigned to each portion of the set. Each portion is encapsulated in separate packets using a cryptographic data set at the sending computing device. For example, in one embodiment, an assignment module  () uses a cryptographic data set stored at the sending computing device (or as received, according to the method  of ) to assign tags to each portion of the message. Each tag contains metadata indicating a traffic path a particular portion of a message is to follow to a target computing device within a network.","In block , the portions of cryptographic data set are transmitted from an egress point of a computing device. For example, portions of cryptographic data set are transmitted from an I\/O port  of computing device , separately. In one embodiment, transmitting the portions separately may include transmitting at least one portion of the message at a different instance in time than at least another portion of the message. In one embodiment, transmitting the portions of the message separately includes transmitting at least two different portions of the message on at least two different data communication paths. For example, computing device  assigns a portion of message to a particular data path based on the tag value. Tag values assigned to each portion of cryptographic data may correspond to a particular communication data path, to transmit the portion of cryptographic data set. In block , each portion of the message set is temporarily stored for eventual reassembly in some portion of memory  () of a computing device.","In block , the message is put into a useable form. That is, the message is reconstructed (reassembled) by decrypting each portion of the message using the cryptographic data set. For example, security engine  () may use an assembler module  () in conjunction with a cryptographic data set to reassemble portions of message received at different times, and\/or via different data paths. Once all portions of the message are received, it is possible to fully reassemble the message in a usable form on the receiving computing device.",{"@attributes":{"id":"p-0114","num":"0120"},"figref":["FIG. 9","FIGS. 7-8","FIG. 5"],"b":["902","904","906","908","908","902","906","910","910","906","902","912","908","912","550","908","912"]},"III. Transaction Security Using a Secure Boot Device","Referring now to , a particular embodiment of the distributed systems discussed above is disclosed in which a secure connection can be established across a public network, such as the internet. In this embodiment, generally a secure boot device can be used to create a secure environment at an otherwise untrusted computing device, which can in turn remotely access a trusted computing device. Such an embodiment can be used, for example, to provide a secure portal to a centralized transaction processor, such as a banking institution, a governmental institution, or other entity where in-transit data security is important.","Referring now specifically to , a generalized example of a distributed system  is shown, using a secure boot device , according to a possible embodiment of the present disclosure. In the embodiment shown, the distributed system  includes a server , such as a banking or government server. The distributed system also includes one or more remote computer systems , for example customer-owned, employee-owned, or otherwise uncontrolled systems. The server  can be any of a number of types of server systems capable of receiving transactions from the one or more remote computer systems , such as a web server or database server. In alternative embodiments include more than one server and\/or computer system .","In certain embodiments, a client computer system , also referred to herein as an endpoint or client computing device, can display a user interface, such as web page . The web page  or other user interface can display to a user details of a transaction  taking place at the server , for example a financial transaction in the case that the server  is a banking server, or some other type of transaction relating to an entity for which highly secure communications are desired. A secure connection  is created between the client computer system  and the server  to allow transmission of details regarding the transaction over a public network, such as the internet.","In order to create the secure connection  in a form that may be trusted by the server , in certain embodiments the client computer system  boots an operating system that is stored on a secure boot device  attached to the client computer system . This secure boot device  stores a trusted version of operating system software and secure communications software used when the client computer system  establishes and performs the communications with the server . In one embodiment, the secure boot device  may correspond to a USB storage device such as a Stealth M500\u2122 from MXI Security. A copy of the datasheet for the MXY M500 device is submitted alongside this application, and incorporated by reference herein in its entirety. In such embodiments, the client computer system  is a USB-bootable computing system capable of communication with a remote system, such as server , or a gateway providing access to the server having capabilities of communicating using the cryptographic splitting operations discussed herein.","The secure boot device  provides secure storage that prevents tampering with the software loaded onto the device. This secure storage permits the institution operating the server , such as a bank or other financial institution, to load onto the secure storage a set of trusted software modules that may limit the possible operations that a client computer system  may perform. For example, the software modules can be configured to prevent the client computer system  from accessing non-secured network resources, and can limit other peripheral communication channels (e.g., Bluetooth, serial connections, or other peripheral device connections), as well as prevent the client computer system  from executing application programs stored in a memory of the system itself. As such, the transactions  may be trusted by both the user at the client computer system , and the institution controlling the server . In addition, the establishment of the secure connection  between the client computer system  and the server  may be authenticated using identification information stored upon the secure storage (e.g., a community-of-interest key) to increase the level of trust that the user corresponds to a customer of the bank.",{"@attributes":{"id":"p-0121","num":"0127"},"figref":"FIG. 11A","b":["1100","1002","1100","1010","1004","1006","1006","1002","1006","1004","1101","1104","1006","1002","1101","1102","1103","1104"]},"In some embodiments, each of these modules - are read from a secure boot image  on the secure boot device  at boot time of the client computer system . These modules - are stored within the RAM of the client computer system  and executed while the user communicates with the server . Although in some embodiments modules - can be located in a read-only portion of memory of the secure boot device  and loaded from that location when the client computer system  is booted from the secure boot device, in other embodiments, the modules - are stored in a read-write memory, allowing the modules - to be updated in parallel with execution from copies of the modules stored in RAM on the client computer system . Details regarding this feature are described in greater detail below.","The boot software  comprises the software modules needed to load the other software modules into the RAM of the client computer system . This module ensures that the secure boot image is a valid image before the modules are loaded. It may perform consistency checks to verify that the modules have not been modified prior to loading and use.","The client terminal process module  comprises the process that provides a user interface to the user of the client computer system  as well as communications to the server . In various embodiments of the present disclosure, the client terminal process module  creates a communications session, accepts commands and inputs from the user, and interacts with remote resources, such as web services or other data communication services, on the server  to permit the user to perform transactions . In various embodiments, this process may include a web browser or other file access mechanism for interaction with a server using known Internet based protocols. In other embodiments, the process module  may be a specialized client application that performs similar communications and user controls. The process module  may limit a user's ability to input destination URLs and related server addresses into a browser, thereby allowing only use of one or more addresses preloaded into the secure boot device  as an example additional mechanism to enhance security.","The small OS shell  comprises a stripped down version of a standard operating system such as Linux\u2122. For example, the small OS shell  can in some embodiments include only the supporting modules and drivers necessary to support the client terminal process  and the communications interface module  used to establish and utilize the secure connection  to the server . All other modules that typically are included in an operating system to permit the general purpose use of the client computer system  as well as to initiate the execution of any program stored on the client computer system  can be omitted. In one embodiment, the client terminal process module  will begin execution at the end of the boot process, and thus provide the only means by which the user may use the client computer system  during its operation.","The communications interface software modules  performs the secure communications with between the client computer system  and the server  and any security related processing. This may include, for example, encryption and parsing as defined in the previously identified patent applications that have been incorporated herein. This module may also be involved in the authentication of the client computer system  to the server  as well as its current operation in a secure and trusted state after having booted from the secure boot device .",{"@attributes":{"id":"p-0127","num":"0133"},"figref":"FIG. 11B","b":["1101","1104","1002","1120","1140","1120","1122","1124","1122","1122","1140"]},"The open read\/write portion  generally is useable by a user to store unsecured files, such as documents or files retrieved from websites by that user while using the secure boot device. In some embodiments, the open read\/write portion  is accessible for storage only when the secure boot device  is used to boot a computing system to which it is connected; in other embodiments, the open read\/write portion  operates as a traditional storage device when the secure boot device  is inserted into such a computing system.","The dedicated read\/write portion  includes a plurality of software module storage areas in which different types of software can be stored. In the embodiment shown, the dedicated read\/write portion  includes a runtime content area , a custom content area , and first and second thin client operating system areas , . In alternative embodiments, other storage areas could be used as well. Additionally, in the embodiment shown, the dedicated read\/write portion  can be secured using a private partition key which can be used to decrypt the data in the dedicated read\/write portion  upon receipt of a PIN or other credential.","In the embodiment shown, the runtime content area  stores configuration information used locally on the secure boot device to indicate a configuration of the local device to be used when a computing system is launched using the secure boot device. In certain embodiments, the runtime content area is password protected, preventing an unauthorized user of the secure boot device  from accessing this configuration information, or rebooting a computing system using the secure boot device.","The custom content area  stores specific provisioning information, for example a location of a secure server to connect to, as well as various options for connection. The custom content area  can also optionally store branding information, for example to indicate the particular customer or entity distributing the secure boot device  to its employee or affiliate.","A first thin client operating system area  can store a thin client version of an operating system, as well as one or more applications capable of running on that operating system. In some embodiments, the first thin client operating system area  stores an embedded version of an operating system, such as Windows XP Embedded, from Microsoft Corporation of Redmond, Wash. Other embedded operating systems could be used as well. In some embodiments, the first thin client operating system area  also stores other application data, such as could be used to access remote websites or other remotely networked resources. One example of such an application is an Internet Explorer web browser provided by Microsoft Corporation of Redmond, Wash. Other applications could be included as well.","The second thin client operating system area  stores a second thin client version of an operating system applications capable of running on that operating system, as well as optionally one or more security modules configured to provide application-level access to security features useable on a computing system booted from a secure boot device . In this embodiment, the second thin client operating system area  can store, for example, an open source thin client operating system (e.g., Linux-based), as well as virtualization software, remote desktop software, and browser software (e.g., Firefox or Chrome web browsers). The second thin client operating system area  can also optionally store one or more security applications allowing a user to control the secure connection established with a remote server. For example, the second thin client operating system area  can include Stealth applications and driver software, as well as a remote update agent configured to manage updating of software on the secure boot device  in accordance with the methods and systems described below in conjunction with .","The read-only portion  stores one or more utilities intended to be used to establish secure connections, such as libraries and utilities configured to establish a cryptographically split connection with one or more servers. In certain embodiments, the read-only portion  stores an operating system kernel useable with thin client operating system software stored in the second thin client operating system area . Additionally, in the embodiment shown, the read-only portion  can be secured using a private partition key which can be used to decrypt the data in the read-only portion  upon receipt of a PIN or other credential.","In some embodiments, in particular those described below in which update of the secure boot device  is performed, the dedicated read\/write portion  also includes a replacement area  for one or more portions of the software stored therein. In the embodiment shown, a replacement custom content area , and first and second thin client operating system areas ,  are shown. In such embodiments, these portions can be updated from a remote system, such as a remote update server or update enclave. Update agent software stored in the second thin client operating system area  can be used to track the status of an update, such that the replacement software modules can be substituted for the active software modules once fully downloaded from a remote system.",{"@attributes":{"id":"p-0136","num":"0142"},"figref":"FIG. 12","b":["1200","1002","1200","1006","1201","1006","1006","1006","1006","1002","1103"]},"A user attaches the secure boot device  to the client computer system  and the computer is rebooted in step . If the secure boot device  corresponds to a USB memory stick, the device is merely inserted into a USB port on the client computer system  prior to rebooting the computer. Other arrangements are possible as well, depending upon the particular format taken by the secure boot device. When the client computer system  is rebooted, it is instructed to use the operating system image stored on the secure boot device  that causes the trusted system software to be loaded and the client terminal process module  to be executed.","In step , the user provides additional information to the client terminal process module  used in the authentication process as a secure connection  is established between the client computer system  and the server . A secure connection  is then established using the information from the secure boot device . The user may now use this secure connection  in step  to perform banking transactions on the server . Once all of these transactions are completed, the user may shut down the client computer system  and reboot into its standard operating system, returning the client computer system  to normal operation. This shut down process terminates the secure connection between the client computer system  and the server , restoring the functionality of the operating system normally executing on the client computer system .","Referring now to , a set of possible embodiments of distributed processing system using a secure boot device to create a secure connection to a server are shown. In these multiple alternate embodiments, a client computer uses the previously described processes of establishing a secure connection to a server via a wide area network (WAN) after the client computer boots from a secure boot device. Typically, the WAN connecting these computers corresponds to the public Internet, although any communications may be used. The client computers, according to the embodiments shown, generally interact with a secure appliance to provide a trusted connection to a service provider, such as a bank, data center, or other facility or entity desiring secured communications. The security related operations of encryption and parsing of the data, as described within the previously identified patent applications are performed in the various illustrated client computers and the secure appliances.",{"@attributes":{"id":"p-0140","num":"0146"},"figref":["FIG. 13","FIGS. 10-12"],"b":["1300","1300","1300","1302","1302","1304","1306","1302","1308","1310","1302","1302"],"i":["a","b","a ","a","b"]},"Each of the client devices  are configured to be capable of accessing a remote location , such as a central office or institution hosting a resource to be accessed. In the embodiment shown, the remote location  is a data center that includes an entity intranet , such as a data center network or other set of resources, that is accessible via a web application . Other types of remote location resources could be made available as well. Each of the client devices  connect to the remote location  via an open network, illustrated as the internet .","At the remote location , typically one or more access devices, illustrated as a network management system , generally receives clear text communication from the internet , for example relating to typical, unsecured communication of data. This is illustrated by the solid line extending from the internet cloud  to the network management system . The network management system  can perform a variety of operations on inbound and\/or outbound data, such as packet inspection and routing, load balancing across one or more computing systems and\/or workloads, and firewall operations. Additionally, the remote location  can include one or more secure gateway devices  configured to perform cryptographic splitting and encrypting operations, to allow for secured communication with clients  via a WAN, e.g., the internet  (illustrated by broken line connections). The secure gateway devices  can receive the split and encrypted data at via the internet , recompose that data into original, clear text data, and forward it to other portions of the remote location  as desired (e.g., to the network management system  for handling).","In some embodiments, a number of secure gateway devices  are accessible external to the remote location . For example, in some embodiments, a separate secure gateway device  could be made available for every defined community of interest, such that communications for a particular group of users are routed from a common gateway. In other embodiments, secure gateway devices dynamically allocate connection bandwidth to client devices  based on current bandwidth use, and connect to client devices  associated with users in a number of communities of interest. Other arrangements of gateway devices are possible as well.","Additionally, at the remote location , an authentication system  can be included which includes one or more provisioning and management tools for managing memberships in communities of interest, as well as resources accessible by individuals associated with those communities of interest. The authentication system  can, in certain embodiments, be configured to authenticate a user of a client device  and associated secure boot device . The authentication system  can be configured to, for example, receive username and password, cryptographically-signed certificate, or PIN or other information from a user of a client device  seeking to connect to the remote location  via a secure connection, and can transmit one or more encryption keys to the client , such as an encrypted session key or other information from a cryptographic data set, as discussed above in connection with .","It is noted that data connections between the secure gateway appliance  and a local server, such as the authorization server , is typically trusted because of its co-location within a data center or the use of a secure connection that is otherwise trusted. The secure gateway device  typically involves the use of encryption keys that are associated with the identity of particular users. These keys may consist of public key encryption keys that would use a set of keys at the client , and a corresponding set of keys at the secure gateway device . The set of keys used by the client  may be stored on the secure boot device  and are not accessible by the user. As part of the authentication process, the stealth authorization server  may be used to perform any desired authentication and then identify the needed encryption keys that are needed by the secure gateway device  for use in performing the secure communications.","In use, typical client operations contacting the remote location  can be performed using clear text communication. However, when a user wishes to perform one or more sensitive transactions involving confidential data, that user can reboot his\/her client  at the client location  using a secure boot device  as discussed above. Software modules from the secure boot device  are loaded at the client , and optionally a user is prompted to enter his\/her username, certificate, or other credentials. Upon authentication of that user, the client  will form a secure connection with a secure gateway device  that is either defined in memory of the secure boot device  or received via the authorization server . The secure boot device  will dictate communication with only the remote location , and will require communication to occur via the secure gateway devices . Accordingly, implementation of the distributed processing system  allows an entity to protect sensitive data being passed over public, IP-based networks.","It is noted that, to devices communicating via the internet  using clear text communications, the various devices communicating only via secure communication protocols of the present disclosure (e.g., a client  when securely booted using a secure boot device , a gateway device , or the authorization server  in the embodiment shown) appear non-responsive to other devices connected to the internet . For example, the authorization server  may not respond to communications in clear text, and one or more gateway devices may simply forward data received in clear text to the network management system . This includes both clear text devices, as well as other clients and\/or gateway devices operating using only a different set of community-of-interest keys. This prevents unauthorized access to the data as transmitted, or \u201cdata in motion\u201d, within the distributed system . Additionally, it prevents network browsing and malware injections by unauthorized systems via the internet .","Referring now to , a second example of a distributed processing system  useable in connection with a secure boot device to create a secure connection to a server is shown. In this embodiment, the distributed processing system  represents an arrangement in which the secure connection into an intranet of a remote system is provided as a managed service, i.e., by an entity other than the administrator of the intranet within which the secured, community-of-interest protected resources reside. In this embodiment, the authorization server  exists connected to the internet , separate from the remote location . In this second embodiment, a trusted connection from a secure gateway appliance  and the authorization server  may be needed. In both of these cases, the secure gateway appliance  is physically connected via intranet  to the server providing the web application . Additionally, one or more external secure computing resources  can be included in the distributed processing system  and use of those systems could be authenticated by the authorization server  in this embodiment, because it is not specifically only affiliated with the remote location , but instead can transmit secure messages and provide authentication via the internet .","Referring now to , a third example of a distributed processing system  useable in connection with a secure boot device to create a secure connection to a server is shown. In this distributed processing system, the secure gateway system  is physically located in a local intranet of a managed service provider . A managed service provider  can be, for example, an entity configured to manage resources needed to administer communities-of-interest, encryption keys, access control lists, and other information typically managed by an administrator of a local intranet. In the embodiment shown, the distributed processing system  includes a client  and associated secure boot device  as discussed above; the distributed processing system also includes a remote location , in this embodiment being a customer of the managed service provider . In the embodiment shown, the remote location  includes an analogous entity intranet , such as a data center network or other set of resources, which is accessible via a web application . The remote location  also includes a network management system , for example for load balancing and routing of data within the intranet.","As compared to the two prior embodiments, in this embodiment the managed service provider  is illustrated as including a separate service enclave  and a customer enclave . As referenced in the present disclosure, an \u201cenclave\u201d generally refers to a particular area or network of one or more computing systems defined by function.","Generally, the service enclave  includes one or more computing resources configured to be managed by the managed service provider , including management of community-of-interest keys, memberships in communities of interest, authentication of users and granting of access to resources in a secured location. In the embodiment shown, the service enclave  includes a service appliance , an administration appliance , an authorization server , and a DHCP server .","The service appliance  is generally an appliance having a known address, such that instructions stored in a secure boot device (e.g. device ) include an address for that appliance, to allow authentication of a user of the device. The service appliance  receives initial connection requests from one or more clients , and establishes an encrypted connection to the client  to provide the client with its one or more community of interest keys, and other secure, community-of-interest-specific information. In certain embodiments, the service appliance  is accessible using either an administration community-of-interest key or a service key. The service key can be, for example, a key provided to users, e.g., stored in a read-only portion of the secure boot device, such that the boot device itself is authorized to and configured to connect to the service appliance  to obtain one or more community-of-interest keys therefrom.","The administration appliance  provides access to the service enclave  for administrative tasks related to the service enclave  and customer enclave . Example tasks performed via access to the administrative appliance include, for example configuring addresses of gateway appliances, configuring membership lists in one or more communities of interest and keys associated with those communities of interest, logging events, creating and managing virtual private networks within the customer enclave , and other tasks. In some embodiments, a user requires an administration community-of-interest key to access the administration appliance , to prevent unauthorized access by customers or other unauthorized individuals.","The authorization server  manages keys associated with each of the one or more communities of interest associated with the customer enclave . The authorization server  receives login information from a user of a client  and associated secure boot device , and returns the COI keys and identity of the secure gateway appliance to which that user is authorized to connect (discussed below). The DHCP server  manages addressing of systems within the service enclave , providing IP addresses for resources accessible via the service appliance .","The customer enclave  includes a secure gateway appliance , as well as a network addressing table (NAT) . The secure gateway appliance  provides an endpoint to which all secure communications from the client  are directed, while the NAT  receives clear text communications from the client  or remote location . Preferably, the resources accessible via the secure gateway appliance  and the NAT  are not coextensive, i.e., no clear text communications via the NAT reach the network resources specifically associated with the community-of-interest enabled at the client  and the secure gateway appliance . In the embodiment shown, a DNS server  and DHCP server  are included at the customer enclave . The DNS server  allows definition of one or more virtual private networks among computing resources in the customer enclave , thereby allowing for segregation of computing resources on a community of interest basis within the customer enclave. The DHCP server  allows each endpoint connecting to the customer enclave  to acquire a secured private network address to be used in the customer's secured portion of the customer intranet within the customer enclave . Static routes are configured via the DHCP server  to allow TCP\/IP packets from a client to be properly routed to the customer intranet.","It is noted that in the example of , the secure gateway appliance  can be used, not only by more than one community of interest within a particular entity as discussed above with respect to , but can also be addressed by multiple different, unaffiliated customers of the managed service provider . Accordingly, additional remote sites  and clients  could be incorporated as well.","For example, a first client  may be affiliated with a first entity, and a second client may be affiliated with a second entity. To initiate secure communication with that user's specific resources within the customer enclave, both clients would first access the service enclave , via the service appliance , using the same service key. Upon validation, each of the first and second client would retrieve its own respective community-of-interest keys associated with the users of those clients, e.g., based on his\/her roles relative to the entity with which those users are affiliated. The service enclave  can be configured to provide relevant community-of-interest keys related to users of both the first and second clients to the secure gateway appliance , or to different gateway appliances associated with the same customer enclave . When each respective user is validated and accesses his\/her community of interest keys (e.g., via the methods and systems of , above, or , below, that user can initiate communication with a secure gateway appliance  using the community-of-interest key to access user- and entity-specific resources (e.g., virtual private LANs, SANs, or other resources) managed within the customer enclave .","Once a secure connection is established, data is routed to a secure gateway appliance  for communications with the server  at the customers intranet (e.g., intranet ) running the web service application , the banking application for example. In this third embodiment, the server  may be located in a separate location on the Internet. A separate secure connection may be used to connect the secure gateway appliance  and the server .",{"@attributes":{"id":"p-0159","num":"0165"},"figref":"FIG. 16","b":["1600","1600","1602"]},"A BIOS modification operation (step ) involves modifying a BIOS configuration setting within a BIOS of a computing system, such that the computing system can be used as a terminal to connect to a remote server, for example to conduct transactions with a bank or other financial institution. In general, the BIOS modification operation involves assigning a boot order to devices associated with the computing system operated by the user (e.g., client ). In some embodiments, the BIOS modification operation enables the client computing system to boot from a USB device, such as the secure boot device described in some embodiments above.","A terminal launch operation (step ) corresponds to a user inserting a USB-stick boot device into a USB port of a computing system, and rebooting the computing system via that particular secure boot device. The terminal launch operation further includes, upon the computing system booting from the secure boot device, entering one or more types of user credentials when prompted by the computing system, for example to validate the user's identity (e.g., using a username and password, cryptographically-signed certificate or PIN number security system).","A location selection operation (step ) allows a user to select a particular location to which to connect. For example, the location selection operation may in certain embodiments allow a user to select a particular branch of an institution, or a particular region, or a specific division of that institution. In any event, selection of a location via the location selection operation allows the method  to determine the particular secure gateway device to which the client computing system will connect. If the user elects to add a new location, a new location operation (step ) receives network and configuration data for that new location. The new location can, for example, be a particular branch or other division of the institution to which secure transactions are desired for that user; in the context of the present disclosure, a new location will typically be a location having a separate secure gateway device; however, other arrangements are possible as well for defining a new location.","A terminal initiation operation (step ) presents a welcome screen to a user, and transmits to the user via a SSL or other tunnel-based connection the one or more community of interest keys associated with that user. Alternatively, in some embodiments, the community-of-interest keys are stored on the secure boot device, and the terminal initiation operation can send a decryption key to the now-secure-booted client computing system to decrypt and access those community-of-interest keys.","A secure tunnel operation (step ) sets up a secure tunnel between the client computing system and the designated location (e.g., an address of a secure gateway device) using the one or more community of interest keys and other encryption information associated with that user. If necessary, the one or more community of interest keys associated with the user are transmitted from an authorization server to the identified secure gateway device, allowing that device to communicate with the client computing device, thereby enabling the secure connection between those devices via the internet.","A login operation (step ) receives login information from a user, for example a username and password, a cryptographically-signed certificate, or PIN-based authorization. The user is validated, and can conduct one or more transactions at a transactions operation (step ), which corresponds to execution of one or more transactions at a customer facility.","While the above embodiments of the present invention describe the interaction of a client computing system and a server computing system over a secure communications connection, it is recognized that other arrangements for secure connection and communication between a client device and server system or dedicated customer resource is possible. As long as a secure boot device, such as a USB memory stick, as described herein, is used to boot the client computer and to create the connection with the server, the present invention to would be useable in performing secure transactions. Additionally, any of a variety of methods for securing an otherwise unsecure terminal could be used as well. It is to be understood that other embodiments may be utilized and operational changes may be made without departing from the scope of the present invention.","Referring generally to , it is recognized that using the secure communications infrastructures discussed herein, a number of advantages are obtained over existing secure connections. For example, using the secure boot devices and resulting secure terminal connection to resources over a public network (e.g., the Internet), a user is still able to maintain a trusted, virus-free computing system at a client site, despite potential corruption issues both relating to data travelling over the open network and data stored at the client device (e.g., on a hard drive of the client device). This reduces the risk of various types of phishing, eavesdropping, and screen- or keystroke recording, because the institution to which a client user connects reliably knows what software is operating at that client device.","IV. Coexistence of Secure Tunnels with Internet-Based Infrastructure","Referring now to , example methods and systems are disclosed relating to a further possible embodiment of the present disclosure in which a secure tunnel connection, such as those described above using community-of-interest based encryption and segregation of resources, can be used in conjunction with clear text communication to a publicly-available resource, such as an internet site.  illustrates a basic example network in which such an arrangement may occur, while  illustrate particular example networks similar to the managed service network described above in , in which such a hybrid secured\/unsecured arrangement is managed.  illustrate example methods for managing concurrent secure and unsecured connections at a client device.","Referring now to , an example network  is shown in which secure tunnels can coexist with clear text communication, according to a possible embodiment of the present disclosure. In the network , a client device  connects to a secure appliance  via an open network, such as the internet . One or more public sites  are also available to be accessed from the client device .","In this embodiment, client device  corresponds generally to any computing system capable of secure communication using community-of-interest based security and the cryptographic security architecture generally described above in connection with Section I. The client device  can be, for example a computing system as discussed in connection with . The secure appliance  can also generally be any secured endpoint or gateway device, such as those described above.","In the embodiment shown, the client device  includes one or more community-of-interest keys  and an associated one or more filters . In one embodiment, each community-of-interest key has an associated filter; in other embodiments, different numbers of keys and filters can be used.","Generally, the community-of-interest keys  stored on the client device  are used to cryptographically split messages passed to a particular endpoint known to be capable of reconstituting those messages for use at an opposite end of an unsecured network, so as to provide security between the two endpoints. In certain embodiments disclosed herein, an additional clear text community-of-interest key can be used which, when associated with a particular message, allows for communication of clear text messages concurrently with use of secure communication (including use of the secure software stack  of ).","Optionally, associated with each of the community-of-interest keys , a filter  can be defined, for example by an administrator of a secure network, using a provisioning utility of an administration appliance. The filter  defines one or more permissions associated with each community-of-interest key . Each filter can take a variety of forms. In one example embodiment, a plurality of filters can be defined in an XML file associated with each community of interest, and which are delivered to a user alongside any related community-of-interest key(s). For example, a filter can define a key by its key name, and then define an allowed access list of IP addresses relating to endpoints that the client device  is permitted to communicate with using the identified key, or optionally an \u201cexclusions\u201d access list of IP addresses relating to endpoints that the client device  is not permitted to communicate with. An example of a portion of a filter  is illustrated below, in which two community-of-interest keys are defined:",{"@attributes":{"id":"p-0175","num":"0181"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<tuples>"]},{"entry":[{},"<key id=ClearText1>"]},{"entry":[{},"\u2003<type>5<\/type>"]},{"entry":[{},"\u2003<keyName>keyname<\/keyName>"]},{"entry":[{},"\u2003<denyAccessList>"]},{"entry":[{},"\u2003\u2003<IPAddress name=\u201d*\u201d>"]},{"entry":[{},"\u2003\u2003\u2003<exceptFor count=\u201d1\u201d>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<IPAddress name=\u201d121.15.20.31\u201dI>"]},{"entry":[{},"\u2003\u2003\u2003<\/ exceptFor>"]},{"entry":[{},"\u2003\u2003<\/IPAddress>"]},{"entry":[{},"\u2003<\/denyAccessList>"]},{"entry":[{},"<\/key>"]},{"entry":[{},"<key id=Stealthl>"]},{"entry":[{},"\u2003<type>0<\/type>"]},{"entry":[{},"\u2003<keyName>keyname<\/keyName>"]},{"entry":[{},"\u2003<hostIP>139.72.10.10<\/hostIP>"]},{"entry":[{},"<\/key>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In this example, a clear text filter, defined as \u201cClearText1\u201d allows an associated endpoint to communicate with any endpoint except for one at address 121.15.20.31, which is included in an exclusions list (denied access). Further, a second filter, defined as \u201cStealth1\u201d, has no specific exclusions or limitations on where it can or cannot transmit messages, but is specifically instructed that it has a \u201chome\u201d gateway located at 139.72.10.10. If both of these filters are associated with the same user, that user could communicate with a number of network addresses via clear text, while also communicating with various network locations via the secured connection and community-of-interest key associated with the \u201cStealth1\u201d filter, including the endpoint or gateway at 139.72.10.10. Other example filters could be defined as well, for example to exclude clear text communication from occurring to the same endpoint to which secured communication is directed from a given client device.","In some embodiments, client device  can include an application  that runs as a background process and which manages selection of one or both of clear text and cryptographically secure communication settings. In such embodiments, client device  can be configured to selectively allow or disallow use of one or more clear text or secure filters by disabling that type of communication at the application level. In additional embodiments, the client device  is by default configured to include a clear text filter, and does not need to retrieve that filter from a remote system such as an authorization server. Once the authorization server in fact authorizes the client device  for cryptographically secure communications and community-of-interest keys are provided to that client device , the clear text filter may be modified, for example to prevent clear text communication to a known secure appliance  configured to communicate with the client device  using cryptographic security. Other embodiments are possible as well in which the clear text filter is selectively provided to each client device  by an authorization server as needed\/desired.","Additionally, in some embodiments, secure appliance  or client device  can generate a tunnel status report  relating to activity at the secure appliance , either specifically relating to client device  or generally relating to any client device transmitting packets to the secure appliance. Example information included in the tunnel status report  can include, for example, a current connection status and keys used for connection to the secure appliance by one or more client devices. Other information can be included in the tunnel status report as well.","As can be seen from this key\/filter arrangement, the network  provides added functionality to existing secured networks (e.g., VPN) which route all traffic via a secure tunnel when such a tunnel has been formed between endpoints. Furthermore, as compared to the secure transactional systems described above in connection with , in this arrangement, a user of a client device is not precluded from accessing unsecured resources; accordingly, a user of a secure boot device or other system that typically prevents communication other than to a particular gateway or server of an institution can use the methods and systems discussed herein to also allow access to all or selected publicly available sites accessible via clear text browsing.","Referring now to , a distributed system  is illustrated in which secure tunnels and clear text communication can exist, according to a possible embodiment of the present disclosure. In this embodiment, the distributed system  generally illustrates use of concurrent clear text and secured communications from the same endpoint while concurrently using a secure managed service network. This arrangement may be implemented, for example, by one or more companies or other entities wishing to communicate from a trusted intranet to a remotely managed network application via an open network. In cases such as that depicted in , where that remotely managed network application manages sensitive data, a secure communication arrangement is desired between the local intranet and that remotely managed application, but concurrent normal, clear text access to a public network site (e.g., an address accessible via clear text on the internet) is desired as well.","In the embodiment shown, the distributed system  includes a set of client devices , each located in customer local area networks -. Both customer local area networks  are connected to a service enclave  and a customer enclave  via a public network, shown as the internet . The internet  additionally connects the local area networks -to a variety of publicly-available internet sites, in the example shown as public internet site . Additionally, one or more client computing systems  can be directly connected to the internet  without being a part of a customer local area network , for example a home user or other remote access user wishing to access applications or resources managed at the customer enclave .","The service enclave  includes a plurality of computing devices, depending upon the particular requirements of the managed entities. In the embodiment shown, the service enclave includes a service appliance , and a plurality of computing devices -. In various embodiments, one or more of the computing devices -can include an administration gateway including a provisioning tool, by which an administrative user can define and provision one or more other gateways, endpoints, and network resources. Others of the computing devices -can be an authorization server configured to provide authentication of users connecting to the service enclave  via a service gateway. Still other computing devices -can provide DHCP or other network routing services.","The customer enclave  includes a customer appliance  as well as a plurality of computing devices -. In various embodiments, the customer enclave can be managed by the one or more computing devices -of the service enclave to form one or more virtual private networks, with each such network associated with a particular community of interest. Each community of interest can be specific to one of the customers (e.g., a separate community of interest for each customer local area network -, respectively), or based on an identity of a user within those networks. Accordingly, the generalized network topology of the distributed system  is similar to that illustrated above in conjunction with , but is adapted for use by either an untrusted client device and associated secure boot device, or for secure access from a trusted client, such as a client within a trusted client intranet (e.g., customer local area network ).","In general, the key and filter arrangements of the present disclosure allow concurrent access to both secured systems, such as those at the service enclave  and customer enclave , as well as to public internet site , as desired. To allow a particular user access to both secured and unsecured resources, that user must simply be included within a secure communities of interest and a clear text community of interest, such that the client computing system associated with that user will receive a community-of-interest key, as well as one or more filters defining allowed secure and clear text communication. Depending upon the definitions included in the filter associated with the community-of-interest key, the user may be allowed partial or full clear text communication capabilities, while concurrently communicating securely with one or both of the service enclave and customer enclave.",{"@attributes":{"id":"p-0185","num":"0191"},"figref":["FIG. 19","FIGS. 17-18","FIG. 6"],"b":["1900","1902","1904","1906","1907","608","609"]},"The customer enclave  includes, in the embodiment shown, a DHCP server , a domain server , a stealth server , and an application server, shown as Exchange server . Other network resources could be included in the virtual private network as well. From the internet , the virtual private network  can be accessed via either VPN server , or a secure appliance (e.g., from secure appliances -). Additionally, one or more public internet sites  are available to a client device  via the internet .","In this example configuration, the client device  is configured with both a Stealth virtual adapter (illustrated as being assigned IP address 172.30.0.100) and a VPN virtual adapter (illustrated as being assigned IP address 172.31.0.110). The client device  is further configured with a clear text filter, analogously to the example of , to allow access to the public internet sites  via clear text, and to the VPN server . Additionally, the physical adapter with the NAT assigned IP address (10.0.0.11) is used for local communications to other endpoints in the NAT subnet, e.g., at the same location as the client device .","In certain embodiments, the customer enclave  includes a DHCP server  to allow the client device  to acquire a Stealth VPN address to be used in the Stealth-enabled portion of the customer's intranet . Static routes are configured via the DHCP server  to allow TCP\/IP packets on the endpoint to be properly routed to the customer intranet . The destination IP address\/subnet in the customer intranet is configured with a static route so Windows TCP\/IP selects the correct virtual adapter. For example, if the client device  is using the secure appliances  as a destination, then the stealth virtual adapter must be selected by Windows TCP\/IP stack in that client device. If the destination is using the VPN path (i.e., via VPN server ), then the VPN virtual adapter must be selected by Windows TCP\/IP.","Referring now to , methods for authenticating a system for use of coexisting stealth-enabled and clear text tunnels are described, as well as for configuring a distributed system including such tunnels using a provisioning utility.  illustrates a flowchart of a method  for authenticating a client device, such as an endpoint, for use of coexisting secure and clear text tunnels, according to a possible embodiment of the present disclosure. The method  generally corresponds to a client device requesting authorization from an authorization server, such as may be located within a service enclave of a managed environment, to communicate with one or more other endpoints or gateway devices using secure, stealth-based communication and clear text communication to other locations in an open network.","The method  is initiated, a request is transmitted for authorization of a user from a client device to a service enclave, for example to the authorization server (step ). The request can include, for example a user identifier and password or other authentication information, such as a PIN based authentication.","At an authorization server, the identification of the user of the client device is checked against a list of communities of interest that are defined using a provisioning utility at the service enclave. Once the client device associated with the user is authorized, it receives one or more community-of-interest keys and filters defining connection rights from a remote system (step ), such as an authorization server via a service appliance, as discussed above. The community-of-interest keys and filters define the available endpoints to which the client device can communicate and receive communication, both in stealth-enabled (cryptographic) and clear text.","Once the client device has received the community-of-interest keys and filters, it can communicate using the community-of-interest keys as limited by the associated filters. In step , the client device can transmit one or more messages to one or both of clear text or cryptographically-enabled endpoints using a clear text or secure filter alongside a specified community-of-interest key, if that message (clear text or cryptographic) is allowed based on the defined access lists (both inclusion and exclusion permissions) in the associated filter. In step , the client device can also receive one or more messages from one or both of clear text or cryptographically-enabled endpoints. It is noted that, even if the remote endpoint transmits a message in clear text or using a community of interest key available on the endpoint, the communications software stack at the client device will discard the message if received from an unauthorized remote endpoint, as defined in the filters received at the client device.",{"@attributes":{"id":"p-0193","num":"0199"},"figref":["FIG. 21","FIGS. 15 and 18"],"b":["2100","2100","2100"]},"The method  is initiated by opening a provisioning utility, such as can be made available via an administration appliance of a service portal, and defining one or more communities of interest and filters associated with those communities of interest using the provisioning utility (step ). This can include, for example, using a provisioning tool of an administrative gateway to define communities of interest and filters, as discussed above in connection with . Alternatively, the one or more communities of interest can be defined based on a user's membership in another user group, such as a defined group within Active Directory. In such an arrangement, those predefined groups could be associated with particular keys, filters, and access permissions using the provisioning utility.","After the distributed system is provisioned, a service enclave can receive an authorization request from a client device or endpoint (step ). The service enclave typically establishes a secure connection with the client device using a service key to maintain encryption. The service key can, for example be stored in an obscured location at a client device. In one example embodiment, the service key can be stored in a registry entry at a client device. In another example embodiment, the service key could be stored within a read-only or read-write memory of a secure boot device, such as a device as described above in connection with . Other storage arrangements for the service key could be used as well.","A set of communities-of-interest are determined to be associated with the user of the client device (step ), for example at the authorization server. The authorization server returns the community-of-interest keys and filters, alongside any other information in a cryptographic data set, to the client device (step ), for use in establishing a secure connection with a customer enclave.","Although in , a particular order of operations is illustrated, it is understood that other arrangements of these methods are possible. Additionally, more or fewer steps could be used to accomplish the provisioning and access methods described herein.","Overall, referring to , it can be seen that using the community-of-interest keys and filters, alongside the communications infrastructure provided at a computing system as discussed above in connection with , a user can be enabled to communicate via clear text with selected public sites via the internet while concurrently communicating via cryptographic security features with other secure endpoints. This allows even trusted terminals, such as those using secure boot devices described above in connection with , to perform both dedicated secure operations and to access external websites to the extent allowed by an administrator of a distributed system. Additionally, concurrent clear text and cryptographic communication allows an administrator to implement a hybrid access arrangement in which any of clear text, virtual private network, or stealth-enabled, cryptographic communications can be used.","V. Updating of and Key Management in Secure Endpoints","Referring now to , example systems and methods for managing key distribution throughout a distributed system are described, and methods for updating security and system software at remote terminals are also described in the context of such a distributed system. The distributed system used can be, for example, a network providing a managed service to one or more customers, such as would include the example service and customer enclaves discussed in the above examples illustrating other features of such a system.",{"@attributes":{"id":"p-0201","num":"0207"},"figref":["FIGS. 22-24","FIG. 22"],"b":["2200","2200","2202","2204","2202","2202","2202"]},"The secure boot devices  can be, for example, USB-based memory devices storing a plurality of software modules used to create a secure terminal at the client devices . As mentioned briefly above, each of the secure boot devices  can optionally include stored thereon a secure service key and address identifier of a service appliance, such as service appliance  useable to securely connect to a service enclave . In such embodiments, the service key can, for example, be stored within a shell operating system's registry settings. Connection to the service enclave , and subsequently to a customer enclave  (discussed in further detail below) occurs via internet .","An authorization server  within the service enclave  transmits a cryptographic data set to the client device , which can act to validate the user and provide, for example, one or more community-of-interest keys, one or more filters, a location of a secure gateway to which the customer can connect to access the customer enclave , and other information. In certain embodiments, the authorization server  encrypts the above information for transmission to the client device  in a manner specific to that client device (e.g., using a key known by the client device due to data stored on a secure boot device ).","The service enclave  includes a number of additional features not typically used directly by a user of a client device , but rather for management of communities of interest and encryption keys associated therewith. In the embodiment shown, the service enclave  includes a router connecting service appliance  to a variety of other servers and networking equipment, including an administration appliance , and a router  configured to connect to the authorization server  and other networking components used to maintain and monitor the service enclave , including a DNS server , a DHCP server , a system logging server , and a stealth administration server . The administration appliance  provides an interface to a remote administrator of the distributed system, for example an owner of the managed service (i.e. the service enclave  and customer enclave ). The interface of the administration appliance  allows an administrative user to configure one or more communities of interest and filters as discussed above, as well as configure virtual and physical networks in the service and customer enclaves, and schedule and configure updates needed for any trusted software modules executing on client devices  and stored on secure boot devices . Additional functionality could be incorporated into the administration appliance  as well","The stealth administration server  can, in some embodiments, maintain a listing of communities of interest, as well as a listing of authentication information and users associated with that authentication information. The authentication information can be username and password information, a cryptographically-signed certificate, or can be PIN-based or other code information associated with a particular secure boot device . This information can be accessed by the authorization server  in response to receipt of requests for access to a customer enclave received from client devices . It is noted that each of these components could be a physical server system, or could be implemented as a virtual system within the service enclave .","In certain embodiments, the authorization server  or some other component within the service enclave  can also transmit to the client device  an update script alongside the one or more filters, community-of-interest keys, and other information used for establishing a secure connection to a customer enclave . In some embodiments, the authorization server  transmits the update script when an update becomes available to alter the one or more secure software modules stored on a secure boot device  (e.g., a version of the software modules identified by the client device as present on the secure boot device is out of date). As discussed above, in some embodiments, the authorization server  transmits encrypted community-of-interest keys and other information to the client device  such that the encryption is performed in a manner specific to that client device.","When a customer wishes to initiate communication with a customer enclave , the customer will establish a secure tunnel with an identified secure gateway  using the one or more secure community-of-interest keys received as part of the cryptographic data set from the authorization server . Once the secure connection is established with the secure gateway , the customer can access one or more additional resources within the customer enclave , such as a web application  or other application configured to allow secure transactions, or a hosted application or data storage, as discussed above. The customer enclave  optionally includes a router  or other internal logical routing equipment for directing customer communications to a particular application (e.g., web application ) or area associated with that customer, based on identifying users associated with that customer by the communities of interest to which they belong. The customer enclave  also, in the embodiment shown, includes a DNS server  and a DHCP server , useable to route data among various virtual private networks and\/or systems present within the customer enclave.","In the embodiment shown in , an update server  is located within the customer enclave , and is configured to, based on the contents of an update script delivered to the client device  by the authorization server . To update the software on the client device , the update server  will transmit to the client device  a set of one or more software modules useable to implement the secure connection between the client device and one or both of the service enclave  and the customer enclave. The set of one or more software modules can be a complete replacement of the software modules present in rewritable memory of the secure boot device , or can alternatively include only a portion of the information included on the secure boot device.","As discussed further in connection with , below, the update server  can deliver an update as defined on the update script concurrently with a client device  performing one or more transactions in the customer enclave , such that the update occurs in the background (i.e., is opaque to the user of the client device ). In certain embodiments, the size of an update can be substantial (e.g., greater than 1 gigabyte); as such, the update transfer process for transmitting the update to the client device  can be interruptible, and can be restored during a next subsequent connection between the client device  and the customer enclave . For example, a user can direct or schedule an update using update client software stored on a secure boot device, such as discussed above in connection with . Additionally, the update client software can, in certain embodiments, allow a user to view a state of the update (e.g., amount of update software that has been downloaded or is yet to be downloaded).","In an alternative embodiment to that shown in , the update server  can be located within the service enclave , rather than the customer enclave . In such embodiments, when the client device  is securely connected to the customer enclave , the client device  can concurrently maintain a connection to the service enclave via the service key. In such embodiments, the client device  can also continue to communicate with the service enclave, for example to receive software updates to the secure boot device  from the update server .","In still a further alternative embodiment to that shown in , the update server  can be located within a separate update enclave. Such a separate update enclave can include one or more computing systems, such as those shown to be incorporated in the service enclave , but could be used to separate the authentication and updating responsibilities across multiple enclaves. This could be used, for example, to reduce bandwidth stress on the service enclave and customer enclave, depending upon the number of authorization requests and updates required.",{"@attributes":{"id":"p-0212","num":"0218"},"figref":"FIG. 23","b":["2300","2300","2230","2302","2302","2304","2212","2230","2210","2302","2202","2210","2208","2204"],"i":"a"},{"@attributes":{"id":"p-0213","num":"0219"},"figref":["FIG. 24","FIG. 22"],"b":["2400","2400","2208","2210","2400","2208","2210","2214","2402","2402"]},"As with , above, in both of , the update server  can be located either within the customer enclave  as shown, or optionally within the service enclave  instead. Example reasons for placing the update server  within the service enclave  include separation of bandwidth required for responding to requests from a customer enclave  from bandwidth required for performing an update, and maintaining more universal control over updates of security features, for example in the case of a managed service provider wishing to control update distribution from a service enclave while allowing customers to manage\/control their own customer enclave resources. Other reasons for placing the update server  in the customer enclave  or the service enclave  may exist as well.",{"@attributes":{"id":"p-0215","num":"0221"},"figref":["FIG. 25","FIGS. 22-24","FIGS. 10-16","FIGS. 1-9"],"b":["2500","2500","2500","2502"]},"After the user is validated at the service enclave, the user can be authorized to connect to a customer enclave (step ). This authorization can take a number of forms. In some embodiments, the authorization includes transmitting to the client device associated with the authorized user or secure boot device a cryptographic data set including information required to create a secure connection to the customer enclave, such as one or more community-of-interest keys and associated filters, an address of a particular gateway device through which to access the customer enclave, and other cryptographic information. Authorization of the client can include, for example, encrypting and transmitting to the client device the one or more community-of-interest keys and associated filters, as well as other information used to connect to a particular gateway or customer enclave. Additionally, this authorization step can include transmitting to the client device one or more update scripts defining an update process to occur on the client device.","A secure connection can be established to the customer enclave (step ) once the client device receives the necessary cryptographic data. This can include, for example, establishing a tunnel between the client device and a gateway device identified by the authorization server in the service enclave, using one or more community-of-interest keys provided to the client device, as discussed above.","Once connected to the customer enclave, a client device can be used to perform transactions in the customer enclave (step ). Various types of transactions could be performed; example types of transactions are discussed above in connection with . Concurrently with the user connected to the customer enclave, an update server can deliver to a client device one or more updated software modules, based on the update script received at the client device (step ). In some embodiments, the software modules can be, for example trusted software modules - of , as included within a secure boot image. In other embodiments, the software modules can include one or more filters, community-of-interest keys, service keys or service enclave locations, driver software, or other information to be installed or stored at a client device for use in establishing a secure connection between the client device and a remote system, or for ensuring that the client device is not infected by malware of some type when such communication is established.","Although illustrated as occurring concurrently with transactions performed using the customer enclave, it is recognized that transmission of an update to a secure client device can occur either before or after commencement of transactions at the customer enclave. For example, in some embodiments, at least a portion of an update can occur prior to launch of an application for performing such transactions. Other arrangements and orders of operations within the method  are possible as well.","It is recognized that in performing this update step, the update server can, in various embodiments, transmit an encrypted, compressed version of one or more software modules (or portions thereof) to a client device for use as a replacement to modules in a secure boot image. In some embodiments, one or more modules are transferred to a client device associated with a secure boot device, and then transmitted to the secure boot device once completely received, thereby overwriting existing trusted software modules. In other embodiments, the modules to be updated are transferred and stored in a temporary storage area of the secure boot device. In such embodiments, when completely transferred, the modules are then copied into a location reserved for the trusted software modules on the secure boot device, thereby overwriting the prior versions of the trusted software modules. In this embodiment, different client devices could be used for different connection sessions with the update server without requiring the updated software modules to be entirely resent if not completed during a previous session.","Referring now to  generally, it can be seen that, through use of a two-level key management scheme, communities-of-interest and keys related thereto can be managed and updated in a centralized manner, allowing changes in a service enclave to be propagated to users and customer enclaves as customers access the managed service. Additionally, through use of a dedicated update server, optionally included within a service enclave, a customer enclave, or an entirely separate update enclave, update processes can be offloaded from a service or application hosting system, allowing updates to be performed concurrently with transaction processing (e.g., at the customer enclave). This reduces the bandwidth demands from the customer enclave and service enclave, each of which may be concurrently hosting multiple users associated with an entity or community of interest, or multiple entities or communities of interest.","Referring now to the overall disclosure, the methods and systems of the present disclosure provide for both a trusted client device using a secure boot device, as well as secure and flexible access to network-based services via a typically unsecured network. The methods and systems described herein allow for concurrent secured and unsecured communications, as well as concurrent updating and transactional access.","The foregoing description of the exemplary embodiments of the invention has been presented for the purposes of illustration and description. They are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not with this detailed description, but rather by the claims appended hereto."],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0023","num":"0024"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0024","num":"0025"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0025","num":"0026"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0026","num":"0027"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0027","num":"0028"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0028","num":"0029"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0029","num":"0030"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0030","num":"0031"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0031","num":"0032"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0032","num":"0033"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0033","num":"0034"},"figref":"FIG. 11A"},{"@attributes":{"id":"p-0034","num":"0035"},"figref":["FIG. 11B","FIG. 10"]},{"@attributes":{"id":"p-0035","num":"0036"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0036","num":"0037"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0037","num":"0038"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0038","num":"0039"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0039","num":"0040"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0040","num":"0041"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0041","num":"0042"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0042","num":"0043"},"figref":["FIG. 19","FIGS. 18-19"]},{"@attributes":{"id":"p-0043","num":"0044"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0044","num":"0045"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0045","num":"0046"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0046","num":"0047"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0047","num":"0048"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0048","num":"0049"},"figref":"FIG. 25"}]},"DETDESC":[{},{}]}
