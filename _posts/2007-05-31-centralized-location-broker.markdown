---
title: Centralized location broker
abstract: A centralized location system includes a location update application programming interface (API) to receive varying types of location inputs for a user from at least one location-providing application. A memory stores a location of the user and the location inputs, wherein the location update API periodically updates in the memory the location inputs when location updates are received from the at least one location-providing application. A location export API, upon request from a location-based service application, processes the location inputs to estimate a location of the user, which location estimate replaces the stored location in memory and is sent to the location-based service application. A user interface enables the user to specify a location granularity for at least one of the at least one location-providing application and the location-based service application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08045995&OS=08045995&RS=08045995
owner: Yahoo! Inc.
number: 08045995
owner_city: Sunnyvale
owner_country: US
publication_date: 20070531
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Technical Field","The disclosed embodiments relate to a system and its methods for centralizing location updates, and more particularly, for centralizing location updates for location-based applications based on receipt of location inputs from location-providing applications.","2. Related Art","Consumers are becoming increasingly mobile. This increase in mobility creates many opportunities for organizations to provide consumers with location-based content and services. For example, a consumer may subscribe to a location-based restaurant review service that presents the consumer with a list of popular eateries that are located within driving distance of the consumer's current location. This service may also use the time of day to customize the list based on the type of meal (e.g., breakfast, lunch, or dinner). Consumers generally value this type of location-based content more than traditional content because it is more focused, relevant, and useful. Another service may provide a way that friends can track each other's locations, or other more user-integrated type services. Location-based content is information provided to a consumer that is keyed to a past, present or future geographic location of the consumer. Similarly, location-based services are services keyed to geographic location information for the consumer.","Additionally, the sources of location information related to a user of such applications have grown in recent years. These include devices that supply, for instance, a global positioning satellite (GPS) latitude and longitude coordinate set, a Global System for Mobile Communications (GSM) cell tower identifier, and a location related to a Wi-Fi access point media access control (MAC) address. Applications that integrate location information as part of a service provided to a user have heretofore used a single location source (or type of source) to provide location updates, and generally the location information obtained is destined for a single device or application.","By way of introduction, the embodiments described below include a system and methods for centralizing location updates in a system for providing updated user locations to location-based service applications, and in which third party location-providing applications also may participate.","In a first aspect, a centralized location system includes a location update application programming interface (API) to receive varying types of location inputs for a user from at least one location-providing application. A memory stores a location of the user and the location inputs, wherein the location update API periodically updates in the memory the location inputs when location updates are received from the at least one location-providing application. A location export API, upon request from a location-based service application, processes the location inputs to estimate a location of the user, which location estimate replaces the stored location in memory and is sent to the location-based service application. A user interface enables the user to specify a location granularity for at least one of the at least one location-providing application and the location-based service application.","In a second aspect, a method is disclosed for centralizing management of user location for third party use with a centralized location system. The system receives from a user a location granularity for at least one location-providing application and for at least one location-based service application. The system receives location inputs from the at least one location-providing application. The system stores the location inputs in a database according to the location granularity specified by the user for each location-providing application. The system receives a query from a location-based service application for the location of the user. The system processes the location inputs together to formulate an estimate of the current location of the user, and updates the location of the user in memory with the estimate of the current location. The system may then send the updated location of the user to the location-based service application in response to the query and in accordance with the location granularity specified by the user for the location-based service application.","In a third aspect, a method is disclosed for a method for centralizing management of user location for third party use with a centralized location system. A location-based service application registers system access, and receives at least one of an application token and a secret. The location-based service application queries a location of a user from the system after registration, wherein the system identifies the location-based service application based on at least one of the received application token and a hashed encrypted version of the secret. The location-based service application receives an updated location for the user according to a location granularity specified by the user for the location-based service application, wherein the updated location is estimated from processing location inputs for the user obtained from at least one location-providing application.","Other systems, methods, features and advantages will be, or will become, apparent to one with skill in the art upon examination of the following figures and detailed description. It is intended that all such additional systems, methods, features and advantages be included within this description, be within the scope of the invention, and be protected by the following claims.","In the following description, numerous specific details of programming, software modules, user selections, network transactions, database queries, database structures, etc., are provided for a thorough understanding of various embodiments of the systems and methods disclosed herein. However, the disclosed system and methods can be practiced with other methods, components, materials, etc., or can be practiced without one or more of the specific details. In some cases, well-known structures, materials, or operations are not shown or described in detail. Furthermore, the described features, structures, or characteristics may be combined in any suitable manner in one or more embodiments. The components of the embodiments as generally described and illustrated in the Figures herein could be arranged and designed in a wide variety of different configurations.","The order of the steps or actions of the methods described in connection with the disclosed embodiments may be changed as would be apparent to those skilled in the art. Thus, any order appearing in the Figures, such as in flow charts or in the Detailed Description is for illustrative purposes only and is not meant to imply a required order.","Several aspects of the embodiments described are illustrated as software modules or components. As used herein, a software module or component may include any type of computer instruction or computer executable code located within a memory device and\/or transmitted as electronic signals over a system bus or wired or wireless network. A software module may, for instance, include one or more physical or logical blocks of computer instructions, which may be organized as a routine, program, object, component, data structure, etc. that performs one or more tasks or implements particular abstract data types.","In certain embodiments, a particular software module may include disparate instructions stored in different locations of a memory device, which together implement the described functionality of the module. Indeed, a module may include a single instruction or many instructions, and it may be distributed over several different code segments, among different programs, and across several memory devices. Some embodiments may be practiced in a distributed computing environment where tasks are performed by a remote processing device linked through a communications network. In a distributed computing environment, software modules may be located in local and\/or remote memory storage devices.","Currently, there are location tracking techniques that use, for example, one of global positioning satellite (GPS) latitude and longitude coordinate sets, Global System for Mobile Communications (GSM) cell tower identifiers, or locations related to Wi-Fi access point media access control (MAC) addresses. No interface exists, however, that provides a robust, reliable, and centralized means for ascertaining and updating a user's location that could integrate multiple types location inputs, including from third party applications. What is needed is a centralized location broker for third-parties to obtain and update a user's location. The broker should also allow a user to define the level of location precision available to specific third-parties. For example, a user may desire to only expose the user's current city to the third-parties, instead of a more precise location, such as the block or intersection in which the user is located. Thus, the location broker facilitates the adoption of location-based services by allowing users to selectively expose their location to service providers.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1","b":["100","104","108","112","116","108","120","104","108","124","104","108"]},"It would be impossible to include all types of location-based service applications because many are conceivable, and all are contemplated here. For instance, a user location could be used to tag Flickr\u00ae photos or other media to record where the user  was when the media was recorded. Also, user  could be allowed to annotate records of holidays or commuting patterns, or for easily tracking tax deductible miles. Additionally, presence indicators may also be included, such as putting a badge on a user website that indicates user location, which location is periodically updated through the location broker .","Furthermore, the location-providing applications  may include sponsored applications  and external, third-party applications . Examples of location-providing applications  include, but are not limited to, devices that supply location inputs such as a GPS latitude and longitude coordinate sets, a GSM cell tower identifier, and a Bluetooth identifier. Further examples of location-providing applications  also include persons or entities that supply the location inputs, such as a user-specified identifier or location, or a third party location tracking application such as Plazes\u00ae (based on tracking Wi-Fi access point MAC addresses). Plazes\u00ae is a social community that connects friends by use of a client downloadable through beta.plazes.com; the company is headquartered in Zurich and Berlin. Recently, updates to location were made available through the Plazes\u00ae website or through text messaging, both of which require the user to enter his or her location manually.","Users  are the beneficiaries of the system  and are the customers to the location-based service applications . Users  communicate with the location broker , usually also over the network , and through a user interface  of the location broker . The location broker  further includes a user location update application programming interface (API)  to update a location stored in the location broker  for each user  based on one or more location inputs from the location-providing applications. A user location export API  then communicatively interfaces with the location-based service applications  to provide updates of the users' locations upon request, or periodically, as an integral part of the services provided to the users .","To ensure attention to privacy on a need-to-know basis, the user  may, through the user interface  and in conjunction with a user permission and privacy manager  (variably referred to as \u201cprivacy manager \u201d), configure a location granularity for reads and writes by applications  and , respectively, which participate in the system . The location granularity includes at least a level of location precision, which may include, but is not limited to, a street address, a zip code, a city, a state, a country, and a latitude\/longitude coordinate set. While a current location as updated in the location broker  may be provided down to the street address, a given application ,  may only be afforded access, as confined by the user , to a zip code or a city. In such a case, only the zip code or the city will be provided to the application ,  upon request by the application , . In addition, the applications ,  may also be cut off completely from any location information access, e.g. from reading and writing, respectively.","Location granularity control may also be a way by which the users  may adjust sensitivity to the reads or writes of their location, thereby also affecting accuracy of their location, as desired. The natural consequence of such control is that sometimes a user  will choose to prioritize privacy over accuracy. In this manner, the location broker  acts as a centralized interface for updating and exporting a user's location in accordance with the location granularity dictated by a user . The system  thus facilitates the creation, adoption, and wide-spread use of location-based services. The location-providing applications  may efficiently update the location of a user  and location-based service applications  may reliably receive the location of a user. In addition, the user  remains in control over the level of location precision distributed to the service providers.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 2","FIG. 1"],"b":["100","104","108","1","2","112","1","2","116","104","104","144","148","152","156"]},"Additionally, the location broker  may further include a processor , a memory , a location inputs database , and a service data database . One of skill in the art will appreciate that the databases  and  may be integrated in the memory  on a single server acting as a location broker , or may be located remotely across the network . One of skill in the art will also appreciate that the processor  may include hardware and\/or software operatively executed on hardware, and may integrate one or more of the user location update API , the user location export API , the user permission and privacy manager , and the user interface .","To use the system , a user  signs up for one or more applications ,  and authorizes them to, respectively, update their location and query their location at a certain location granularity. Again, the privacy manager  will facilitate this interaction by the user , providing the user  with configuration access to a current list of applications , . The users  are provided a username and password in order to identify themselves to the location broker  for future access. The users  are also issued an application token (or \u201cuserid\u201d) that the applications ,  use to identify the user  in the system .","The applications ,  may communicate with the location broker  through an authenticated API ( and\/or ). The applications ,  use this token (referred to in the API as an appid) and an application-specific secret to identify themselves to the location broker  when reading or writing user location data. The authentication works similar to a hash-based message authentication code in which submitted API parameters are combined with a shared secret (between the location broker  and each application , ) by a one-way hash algorithm to generate a signature which ensures that API calls actually originate from an application ,  that knows the secret (verified by encrypting the parameters and secret sent by the API with the same one-way hash algorithm and comparing this value to the submitted signature). The hash-based authentication code works as a unique signature, which can only be produced by introduction of the proper secret.","Additionally, a timestamp parameter may be required to prevent replays\u2014that is, each application ,  cannot query or update a user's location with a smaller timestamp value than has been previously supplied by that application , . Without knowledge of the shared secret, an attacker cannot formulate a request containing an updated timestamp; checking the timestamp ensures than a request intercepted by an attacker and sent unmodified will be rejected after the timestamp has expired (i.e. a request cannot be \u201creplayed\u201d). Username, passwords, tokens, secrets, and other account-specific information for users  and applications ,  are stored in the services data database .","The location broker  stores in the location inputs database  the most recent location supplied by each location-providing application  for each user , and in accordance with the location granularity specified by each user . The location-providing applications  can specify location in a number of ways, which include, but are not limited to: a latitude\/longitude coordinate set, a postal code, a street address, a GSM cell tower identifier, a Bluetooth identifier, a user-specified identifier or location, and an identifier from an external system (Plazes\u00ae, Upcoming.org, etc.). See also Table 1 below, which provides an exemplary manner of storing location data in the location inputs database .","One location per user-application pair is stored in the location inputs database , thus the location broker  generally provides access to a user's current location, not a location history of user locations. When a user's location is requested, the location broker  combines location information (raw data from database ) for that user  into a current estimate of the user's location, which is returned in extensible markup language (XML) or another compatible format, which provides a standardized location-reporting format with which to export to location-based applications . To do so, the raw location inputs are jointly processed by at least the user location export API  and possibly also via other APIs (not shown) internal to the location broker  and which may be integrated as part of the user location update API  or the processor . One embodiment of such processing includes use of a set of software objects that are mapped to various input type parameters, such as shown in Table 1, wherein each object is accessed in turn according to precedence until the closest estimate of a user's location is achieved. The ordering of precedence as indicated is exemplary only, and is not intended to limit the scope of how raw location inputs are processed.",{"@attributes":{"id":"p-0037","num":"0036"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"329pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Map of Objects to Processing Precedence"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Required","Format","Description","Precedence"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Formatted Address","addr","(+city or","String","Street address (e.g. 1350","7"]},{"entry":[{},{},"postal)",{},"University) - requires city or",{}]},{"entry":[{},{},{},{},"postal",{}]},{"entry":[{},"city","(+state,","String","City name - requires state,","11"]},{"entry":[{},{},"country,",{},"country or postal",{}]},{"entry":[{},{},"or postal)",{},{},{}]},{"entry":[{},"state","N","String","State name","12"]},{"entry":[{},"postal","N (need + country","String","Postal code","10"]},{"entry":[{},{},"if not US)",{},{},{}]},{"entry":[{},"country","N","String","Country","13"]},{"entry":["GPS","lat","1","Float","Latitude (decimal degrees)","1"]},{"entry":[{},"lon","1","Float","Longitude (decimal degrees)","1"]},{"entry":["GSM","mnc","3","Int","Mobile Network Code","9"]},{"entry":[{},"mcc","3","Int","Country Code","9"]},{"entry":[{},"lac","3","Int","LAC (Location Area Identifier)","9"]},{"entry":[{},"cellid","3","Int","Cell ID (identifier)","9"]},{"entry":["Free-form","loc","N","String","Free-form location - the system","14"]},{"entry":[{},{},{},{},"100 makes a best guess",{}]},{"entry":[{},{},{},{},"translation",{}]},{"entry":[{},"name","N","String","POI\/AOI (area or person of","6"]},{"entry":[{},{},{},{},"interest) name or 3-letter",{}]},{"entry":[{},{},{},{},"Airport code - may include a",{}]},{"entry":[{},{},{},{},"user-specified identifier",{}]},{"entry":["External Identifier","woeid","N","Int","Where on Earth ID","2"]},{"entry":[{},"plazesid","N","String","Plazes\u2009\u00ae Plaze key","5"]},{"entry":[{},"ylocalid","N","Int","Y!\u2009\u00ae Local ID","3"]},{"entry":[{},"upvenueid","N","Int","Upcoming.org venue ID","4"]},{"entry":["Street Intersection","street1","2 (+postal","String","Street name 1 for intersection","8"]},{"entry":[{},{},"or city)",{},"lookup",{}]},{"entry":[{},"street2","2","String","Street name 2 for intersection","8"]},{"entry":[{},{},{},{},"lookup"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}]}}},"Note that Table 1 is in abstract form and is for exemplary purposes only to show one way that location inputs of different types may be stored and processed to produce a single location output. If the location broker  finds a valid location from precedence 1, the location broker  uses that location; if not, the location broker  moves on to location input data with precedence 2, etc. In the \u201cRequired\u201d column, corresponding numbers indicate that the parameters must all be present if any are present. Note also that while location inputs based on Wi-Fi access point MAC addresses is not included in Table 1, they could be, and such inputs are also available though the Plazes\u00ae system (among others) from which the location broker  accepts Plaze identifiers.","Additionally, in some embodiments, a user location that is sent by the location broker  in response to a location-based service application  query may also include other location-sensitive metadata, such as the nearest metro station, current weather forecast, and current local time. Also, such metadata (or other message included with the response from the location broker ) may include a note that specifies the types of location inputs that were available and used in estimating the location or the user , including what method of processing was used to combine location inputs. An example of how the system  works in conjunction with the processing of raw location inputs may be helpful.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIGS. 3A and 3B","b":["140","140","112","1","2","108","1","2","1","2"]},"The applications U and U periodically send location updates to the location broker , which are stored in the location inputs database  similarly as indicated in Table 1. Until there is a query for the user's location, the location updates simply sit in the location inputs database  unprocessed, in whatever form they were supplied by U and U. For our example, assume that U submits GPS coordinates at time 12:01 and U submits GSM cell tower information at 12:02.","At 12:03, Q requests the user's location. The location broker  sees that there have been location updates since the last query and starts to process the raw location inputs from U and U. The result of this processing for each raw location is an XML structure containing at least one of the following: a human-readable location (one or more of a street address, a zip code, a neighborhood, a state, etc.); a bounding box (the north, south, east, and west borders of the smallest area to which the raw location can be resolved); and a hierarchy of containing locations each identified by a location identifier (e.g., the street address of an office at \u201c1350 University Ave\u201d is contained by the zip code 94704, which in turn is contained by the city of Berkeley, which is contained by California, etc.).","The location broker  then caches the processed locations in memory  corresponding to the recent raw inputs from U and U. In this example, the location broker  sees that the GPS point supplied by U is contained by the area covered by the cell tower information submitted by U, as shown in . Because the location inputs are in agreement and the timestamps are very similar, the location broker  returns the GPS point (the most precise location available) to Q. This point may also be converted by reverse geo-coding into a street address before being sent to Q.","Now, at 12:05 Q requests the user's location. The location broker  sees that there have not been any updates since the user's location was processed in response to Q's query. Q, however, only has permission to access the user's location at the zip code level, so the cached location hierarchy is traversed until a zip code is found. This zip code (and associated bounding box) is then returned to Q.","If additional queries are received before any more location updates the cached location can be returned immediately, without the overhead of processing the raw location inputs. When new raw updates are received, they overwrite the previous raw update from each application (U or U) as there is one location per updating application  per user . For instance, say a new update comes from U that changes the possible geographical area of the user  based on new GSM identifiers, as shown in . The user  is out of range of sufficient satellites to obtain a GPS signal, so U updates its information with the location broker  as empty (or zero). There is a new location-providing application  (U), however, made available based on a user identifier that indicates arrival in an area of interest (U). The new updates then remain untouched until there is a new query.","In response to a new query, the new location updates are processed, the cached processed location is re-examined and a new location based on the most recent updates is generated and cached. In this case, because a free-form identifier (Table 1) carries a priority of 6, U takes precedence over U (the new GSM area that carries a priority of 9). Given that U and U intersect, however, the intersection area, X, is returned as the most likely area in which the user  is located.","Now, assume that area X covers approximately half a block in the suburbs of a city. The location broker  may determine from a formatted address previously stored and still current in the location inputs database  that the stored address is located within area X. This address will be returned to Q as the most precise location available, while the zip code corresponding to the address is returned to Q. If such a formatted address were not available or is not near the area X, then the location broker  would return to Q a nearest street intersection, and again, to Q the zip code of that street intersection.","The above examples illustrate relatively simple cases. The location broker  should also be able to resolve conflicting location information from multiple location-providing applications  and may be able to resolve multiple raw input locations to a location more precise than any of the single raw input locations. Additionally, because the location broker  resolves one or more raw location inputs into a single location, e.g. by use of a bounding box plus reverse geo-coding in which a GPS coordinate is converted into a street address, applications ,  need not worry about formatting or translation location formats. The location broker  does all of these, making it seamless and easy for application developers.","The location broker  employs internal caching in the location inputs  database and memory  (which could be combined) to efficiently handle situations in which location updates are much more frequent than queries or situations where queries are much more frequent than updates. It is only the situation where updates and queries are interleaved that the location broker  must do a lot of work. Additionally, because the location broker  stores the users' locations centrally, location updates from one application can be consumed by another. In fact updates from one device can be queried from another physical device (e.g. a phone can update the location accessed by a laptop or vice versa) or updates from one user  could be consumed by another (e.g. given the right permissions, friends can watch where each other are currently located).",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 4","b":["400","108","112","104","404","140","112","108","408","104","112","412","104","168","140","112","416","104","108","108","420","104","140"]},"At step , the location broker  updates the location of the user  in memory  with the estimate of the current location. At step , the location broker  sends the updated location of the user  to the location-based service application  in response to the query and in accordance with the location granularity specified by the user  for the location-based service application . At step , the location broker  receives a second query from a location-based service application  before receiving any further location inputs from the at least one location-providing application . At step , the location broker  sends the location of the user  stored in memory  to the location-based service application  in response to the second query and in accordance with the location granularity specified by the user  for the location-based service application .",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 5","b":["500","108","112","108","504","100","808","104","512","108","140","100","100","108","516","108","100","140","140","112"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 6","b":["600","108","112","604","104","112","608","104","168","140","612","104","164","616","104","108","620","104","164"]},"If the location broker  has received location input updates since the last version of the user's location was stored, it processes the one or more location inputs to produce an updated user location at step . At step , the location broker  stores the updated user location in memory . At step , the location broker  adjusts this location stored in memory  to the granularity specified for the querying location-based service application  by the user  as discussed previously. Finally, at step , the location broker  returns to the location services application for further processing of updates of the same or different users .","If the location broker  has not received input updates since the last version of the user's location was stored, it skips to step  and adjust the location in memory to the appropriate granularity as specified by the user  for the querying location-based service application . As before, at step , the location broker  returns to the location services application  for further processing of updates of the same or different users .","Various modifications, changes, and variations apparent to those of skill in the art may be made in the arrangement, operation, and details of the methods and systems disclosed. The embodiments may include various steps, which may be embodied in machine-executable instructions to be executed by a general-purpose or special-purpose computer (or other electronic device). Alternatively, the steps may be performed by hardware components that contain specific logic for performing the steps, or by any combination of hardware, software, and\/or firmware.","Embodiments may also be provided as a computer program product including a machine-readable medium having stored thereon instructions that may be used to program a computer (or other electronic device) to perform processes described herein. The machine-readable medium may include, but is not limited to, floppy diskettes, optical disks, CD-ROMs, DVD-ROMs, ROMs, RAMs, EPROMs, EEPROMs, magnetic or optical cards, propagation media or other type of media\/machine-readable medium suitable for storing electronic instructions. For example, instructions for performing described processes may be transferred from a remote computer (e.g., a server) to a requesting computer (e.g., a client) by way of data signals embodied in a carrier wave or other propagation medium via a communication link (e.g., network connection)."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The system may be better understood with reference to the following drawings and description. The components in the figures are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the invention. Moreover, in the figures, like-referenced numerals designate corresponding parts throughout the different views.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
