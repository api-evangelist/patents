---
title: Key exchange mechanism for streaming protected media content
abstract: In accordance with a key exchange mechanism for streaming protected media content, key exchange components on both a client device and a server device communicate with one another to pass one or more keys from a removable storage medium (e.g., a DVD) on the server device to a media content player on the client device. The communications passed between the components allow keys used by the media content player to be transferred from the removable storage medium to the player so that the player can decode the content on the storage medium.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07155609&OS=07155609&RS=07155609
owner: Microsoft Corporation
number: 07155609
owner_city: Redmond
owner_country: US
publication_date: 20010614
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","CONCLUSION"],"p":["This invention relates to streaming media content, and more particularly to a key exchange mechanism for streaming protected media content.","Computers are becoming increasingly more powerful while at the same time becoming less costly. This has resulted in the promulgation of computers into many homes and businesses throughout the world. Along with this increase in computing performance and popularity has also come an increase in the number of areas in which computers are used. Where once computers were used primarily for productivity-based applications (e.g., databases, word processing, spreadsheets, and so forth), a wide range of entertainment applications have become increasingly popular.","One such entertainment application is that of media content playback, such audio\/video (e.g., movies) playback. For example, many newer computers are equipped with a DVD (digital versatile disc) drive that allows the computer to read a DVD and play the audio and\/or video content on the DVD via speakers and\/or display devices of the computer.","One difficulty faced in distributing content on DVD has been the concern over the ability of DVD content, especially movies, to be improperly copied and\/or distributed without paying appropriate fees to the owner of the content. Thus, a security protection scheme referred to as CSS (Content Scrambling System) has been devised to encrypt the content on a DVD. Various keys have been established for various manufacturers of DVD content player applications, allowing DVD content to be played back by those applications. However, without the appropriate key(s), an application cannot decrypt (and thus cannot copy in a useable form) the encrypted content.","While the CSS system works with a single-computer system (that is, where the DVD player application and the DVD drive are part of the same computer), problems can arise in multiple-computer systems. For example, currently a computer running a Windows\u00ae operating system and a DVD player application cannot play back a movie from a remote DVD source (e.g., a remote computer or a remote media server). Thus, it would be beneficial to enhance current systems to be able to play back CSS protected content in multiple-computer systems.","A key exchange mechanism for streaming protected media content is described herein.","In accordance with one aspect of the mechanism, key exchange components on both a client device and a server device communicate with one another to pass one or more keys from a removable storage medium (e.g., a DVD) on the server device to a media content player on the client device. The communications passed between the components allow keys used by the media content player to be transferred from the removable storage medium to the player so that the player can decode the content on the storage medium.","In a network environment, CSS (Content Scrambling System) protected content on DVDs (Digital Versatile Discs) can be played back even though the DVD drive is remote from the computing device on which playback of the DVD i content occurs. This remote playback occurs without jeopardizing the integrity of the CSS security, and can operate in a variety of different operating system environments, including with any of the Windows\u00ae operating systems.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["100","100","102","1","102","104","1","104","106","106","106","106","106"]},"Computers  and  represent any of a wide range of computing devices, and each device may be the same or different. By way of example, computers  and  may be desktop computers, multiple-processor fileservers or workstations, media servers (e.g., disk changers or jukeboxes), laptop computers, handheld or pocket computers, personal digital assistants (PDAs), cellular phones, Internet appliances, consumer electronics devices, television set-top boxes, gaming consoles, and so forth. Client computers  are capable of rendering audio\/video content received from a digital versatile disk (DVD), while server computers  include an optical disk drive capable of reading a DVD. Additionally, a particular computing device may be both a client computer  and a server computer .","Each server computer  includes an optical disk drive (either internal to the server or external to the server) capable of reading a DVD. Optical disks may be manually inserted into the disk drive by a user (e.g., via a slide-out media tray), or alternatively may be automatically selected by the computer (e.g., for a DVD changer or jukebox). Server device  can be implemented in any of a variety of manners. For example, server  may be a conventional computer (e.g., desktop computer, portable computer, etc.) including one or more DVD drives. Alternatively, server  may be a DVD jukebox or changer employing a single DVD drive or alternatively multiple DVD drives (and thus able to read and stream DVD content from multiple different DVDs concurrently).","The discussion herein primarily refers to CSS-protected DVD media content being available for playback on the client computer . Alternatively, different types of media content may also be used that employ similar security protection schemes. Additionally, different types of protection of DVD content other than the current CSS system can also be supported by the system and process described herein.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 2","FIG. 1","FIG. 1"],"b":["102","102","1","102","104","104","1","104","102","122","124","126","104","128","130","132","122","134","132","124","128","122","132","122","134"]},"At the instigation of a file manager module  in key exchange client , file system module  interacts with file system module  to obtain the data from one or more files on a disc  readable by disc drive . The received data is communicated to key exchange client  where it is separated by a stream parser  into one or more data streams. In one implementation, key exchange client  is implemented as a \u201cDVD Navigator\u201d filter in a DirectShow\u00ae application programming interface filter graph. These data streams are then communicated to the content player  for decryption (as necessary) and playback. Content player  includes a video (MPEG-2) decoder  and an audio decoder  for decoding and rendering the video and audio streams, respectively. Content player  may also include additional decoders (not shown), such as a sub-picture decoder, for decoding and rendering other types of data streams received from key exchange client .",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 3","FIG. 3","FIG. 2","FIG. 3","FIG. 2"],"b":["160","102","104"]},"Initially, the DVD disc drive  is shared by server  (act ), allowing the DVD content player  to connect to the drive  via the file system modules  and  (act ). This sharing of drive  and connection to drive  by a remote device is performed in a conventional manner, such as conventional file sharing available from Windows\u00aeM operating systems. The sharing of drive  may be specific to a particular client , or be available generally to clients coupled to the same network as server  (and access may optionally be limited to only those clients that can supply the correct password). Additionally, sharing of drive  may be performed when a particular disk  is inserted into drive , or drive  may always be shared unless specifically overridden by a user (e.g., server device  may be pre-configured to have drive  shared, such as in the case of a DVD changer). Different protocols can be used for sharing drive , such as any of the well-known SMB (Server Message Block), CIFS (Common Internet File System), or HTTP (HyperText Transfer Protocol) protocols. Any of a variety of naming conventions can be used to identify shared DVD drives, such as the well-known UNC (Universal Naming Convention) format.","The disc drive  can be selected as the drive from which DVD data will be received in a variety of manners. In one implementation, file manager  of key exchange client  identifies all of the DVD drives (e.g., any drives local to client  as well as any shared drives that client  has access to) to content player  for display to the user. Content player  allows the user to select one of the drives, and an identification of the selected drive is passed to key exchange client . It should be noted, however, that content player  need merely act as a user interface allowing user-selection of a drive identified to the content player \u2014content player  need have no knowledge that a particular identified drive is located at a remote server.","By sharing drive , content player  is able to access files and data content from disc  (although, in accordance with CSS, certain \u201cprivate\u201d areas of disc  are protected as accessible only to disc drive  and thus would not be accessible to content player ). Although the data files including the DVD  content (e.g., a movie) are accessible to content player  via file system modules  and , the data files themselves are not sufficient to play back the DVD content in intelligible form because the contents are still scrambled with CSS.","Content player  can be any of a wide variety of conventional DVD content players, such as those available from InterVideo, Inc. of Fremont, Calif., or Cyberlink.com Corp of Fremont, Calif. Content player  need have no knowledge of the location of the disc drive from which it will be accessing DVD content (that is, whether the drive is a remote drive such as drive , or whether the drive is situated at the same computing device as content player ). Content player  is shielded from knowledge of the location of the disc drive by client component  and file system module .","Region information for DVD  is then obtained by content player  via key exchange client and key exchange server  and  (act ). DVDs are typically encoded for different regions throughout the world (e.g., the US, Canada, and US Territories are referred to as \u201cRegion \u201d, while Japan, Europe, South Africa, and Middle East are referred to as \u201cRegion \u201d). DVD players and DVD drives are typically configured to play only DVDs encoded for a particular region. If the DVD disk is marked for all regions, then the DVD disk can be played by any DVD player and any DVD drive. If the DVD disk is not marked for all regions, then the disk region must match the DVD player region and the DVD drive region to enable playback of the DVD disk.","In one exemplary implementation, the key exchange client  calls DvdGetRegion to obtain the region information from DVD disk  in the remote DVD drive . Key exchange client  sends a DvdGetRegion request to key exchange server  via the RPC (Remote Procedure Call) protocol. Key exchange server  then calls IOCTL_DVD_GET_REGION to retrieve the region information from DVD disk . If DVD disk  is not marked for all regions, then IOCTL-DVD_GET_REGION will also verify that the disk region matches the drive region. If successful, key exchange server  will return the disk region information to key exchange client . If DVD disk  is not marked for all regions, then key exchange client  will get the AM_PROPERTY_DVD_COPY_REGION property to obtain the region information from the DVD player's audio decoder , video decoder  and sub-picture decoder. Key exchange client  verifies that the DVD disk region matches the decoder region before enabling playback of the DVD disk. Since the DVD disk region must match the DVD player region and DVD drive region, the key exchange mechanism fully supports the DVD region management system.","DVD drive  and DVD player  then perform, via key exchange client and server  and , mutual authentication and establish a bus key (act ). The bus key is used to encrypt communications between DVD drive  and DVD player . If player  can authenticate itself as a trusted application to disc drive , and disc drive  can authenticate itself as an authentic DVD drive, the key exchange process continues. Otherwise, at least one of disc drive  and player  determines the other is not trustworthy and will not continue the key exchange process.","First in the authentication of act , DVD player  starts an authentication session with DVD drive . If successful, DVD drive  returns an authentication session ID, also known as an AGID. The AGID is used as a parameter in subsequent negotiations between DVD player  and DVD drive  to identify the key exchange process.","In one exemplary implementation, key exchange client  calls DvdStartSession to start an authentication session with the remote DVD drive . Key exchange client  sends the DvdStartSession request to key exchange server  via RPC. Key exchange server  calls IOCTL_DVD_START_SESSION to start an authentication session with DVD drive . If successful, key exchange server  returns the AGID (received from DVD drive ) to key exchange client .","Second in the authentication of act , DVD player  sends a bus challenge key to DVD drive  and receives an encrypted response known as bus key . If successful, DVD player  decrypts bus key  to verify that it is communicating with an authentic DVD drive.","In one exemplary implementation, the DVD navigator gets the AM_PROPERTY_DVDCOPY_CHLG_KEY property to obtain a bus challenge key (which is typically, at least in part, a random or pseudo-random number) from the audio decoder , video decoder , or sub-picture decoder. Key exchange client  calls DvdSendKey to send the decoder's bus challenge key to the remote DVD drive . Key exchange client  sends the DvdSendKey request to key exchange server  via RPC. Key exchange server  calls IOCTL_DVD_SEND_KEY to send the bus challenge key to DVD drive . Key exchange client  calls DvdReadKey to get bus key  from the remote DVD drive . Key exchange client  sends the DvdReadKey request to key exchange server  via RPC. Key exchange server  calls IOCTL_DVD_READ_KEY to read bus key  from DVD drive . If successful, key exchange server  returns the DVD drive's bus key  to the key exchange client . Key exchange client  sets the AM_PROPERTY_DVD_COPY_DVDKEY property to provide the DVD drive's bus key  to the decoder. Based on the known bus challenge key and the returned encrypted response, the decoder can verify that the DVD drive is authentic if the challenge key is encrypted in the proper manner (e.g., using the proper encryption key).","Third in the authentication of act , DVD drive  sends a bus challenge to DVD player  and receives an encrypted response known as bus key . If successful, DVD drive  has verified that it is communicating with an authentic DVD player  application.","In one exemplary implementation, key exchange client  calls DvdReadKey to get the bus challenge key (which is typically, at least in part, a random or pseudo-random number) from the remote DVD drive . Key exchange client  sends the DvdReadKey request to key exchange server  via RPC. Key exchange server  calls IOCTL_DVD_READ_KEY to get the bus challenge key from DVD drive . If successful, key exchange server  returns the DVD drive's bus challenge key to key exchange client . Key exchange client  sets the AM_PROPERTY_DVDCOPY_CHLG_KEY property to provide the DVD decoder with the drive's bus challenge key, and gets the AM_PROPERTY_DVDCOPY_DEC_KEY property to read the decoder's bus key . Key exchange client  calls DVDSendKey to send the decoder's bus key  to the remote DVD drive . Key exchange client  sends the DvdSendKey request to key exchange server  via RPC. Key exchange server  calls IOCTL_DVD_SEND_KEY to send the decoder's bus key  to DVD drive . Based on the known bus challenge key and the returned encrypted response, the DVD drive can verify that the DVD player is authentic if the challenge key is encrypted in the proper manner (e.g., using the proper encryption key).","If mutual authentication is successful, then the DVD drive  and DVD player  establish a bus key. The bus key is used to encrypt subsequent communications between the DVD drive and DVD-Player. Additional information regarding CSS and the generation of the bus key is available from Toshiba Corporation of Tokyo, Japan. In one exemplary implementation, DVD drive  establishes a bus key with an audio decoder , video decoder , or sub-picture decoder within a DVD player  application.","Once player  and drive  are mutually authenticated, DVD content player  obtains the encrypted disk key for DVD disk  (act ). DVD disk  stores an encrypted copy of the disk key for each authentic brand of DVD player . DVD player  uses DVD drive  to read the list of encrypted disk keys from DVD disk . DVD player  uses its own secret key to decrypt the disk key.","In one exemplary implementation, key exchange client  calls DvdReadKey to get the list of encrypted disk keys from the remote DVD drive . Key exchange client  sends the DvdReadKey request to key exchange server  via RPC. Key exchange server  calls IOCTL_DVD_READ_KEY to read the list of encrypted disk keys from the DVD disk  in DVD drive . If successful, key exchange server  returns the list of encrypted disk keys to key exchange client . Key exchange client  sets the AM_PROPERTY_DVDCOPY_DISC_KEY property to provide the audio decoder , video decoder , or sub-picture decoder with the list of encrypted disk keys. The decoder then uses its own private key to decrypt the disk key.","Each DVD disk  may include one or more titles. Each title is encrypted with a title key, and each title key is encrypted with the disk key. In order to play an encrypted title on the disk, DVD player  obtains the disk key (act ) and the title key (act ), uses the disk key to decrypt the title key, and then uses the title key to decrypt the title.","In one exemplary implementation, key exchange client  calls DvdReadTitleKey to retrieve the encrypted title key for the current title from the DVD disk  in remote DVD drive . Key exchange client  sends the DvdReadTitleKey request to key exchange server  via RPC. Key exchange server  calls IOCTL_DVD_READ_KEY to read the encrypted title key from the DVD disk  in DVD drive . If successful, key exchange server  returns the encrypted title key to key exchange client . Key exchange client  sets the AM_PROPERTY_DVDCOPY_TITLE_KEY property to provide the audio decoder , video decoder , or sub-picture decoder with the current title key. The decoder uses the disk key to decrypt the title key.","The encrypted content from DVD  is then streamed to DVD player  for rendering (act ). This streaming occurs via the file system modules  and . DVD content is communicated from file system module  to file system module  in blocks requested by file system module . In one implementation these blocks have a size of 61,440 data bytes, although different implementations can employ different (larger or smaller) block sizes. Various additional control commands may also be submitted to key exchange client  by content player  (e.g., pause, fast forward, rewind, etc.). These commands are received by key exchange client  and communicated to file system  for issuance to disc drive  as appropriate.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 4","FIG. 4","FIG. 2","FIG. 4","FIG. 2","FIG. 4","FIG. 4"],"b":["200","102","104","102","104"]},"Initially, key exchange client  receives a request from DVD content player  for information (act ). Different types of information can be requested, such as region information, authentication information (e.g., \u201cbus\u201d keys), disk keys, and title keys.","In one exemplary implementation, a DVD copy protection property set is supported by key exchange client . This property set includes property IDs and property data types used for the key exchange process. The property IDs are illustrated in Table I below while the property data types are illustrated in Table II below. Additional property IDs and data types may be included in the DVD copy protection property set, however, values that are not relevant to the key exchange process have not been described herein. Values for these properties in the DVD copy protection property set can be set or retrieved using \u201cSet\u201d and \u201cGet\u201d interfaces from the IKsPropertySet Interface, illustrated in Table III below.",{"@attributes":{"id":"p-0044","num":"0043"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE I"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Property ID","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["AM_PROPERTY_DVDCOPY_CHLG_KEY","Both get and set operations are supported on this property."]},{"entry":[{},"A get operation requests the decoder to provide its bus"]},{"entry":[{},"challenge key. A set operation provides the decoder with"]},{"entry":[{},"the bus challenge key from the DVD drive. The data"]},{"entry":[{},"passed in this property will be a structure of type"]},{"entry":[{},"AM_DVDCOPY_CHLGKEY (a DVD challenge key)."]},{"entry":["AM_PROPERTY_DVDCOPY_DEC_KEY2","This is a get-only property. This property requests that the"]},{"entry":[{},"decoder's bus key 2 be transferred to the DVD drive. The"]},{"entry":[{},"data passed will be a structure of type"]},{"entry":[{},"AM_DVDCOPY_BUSKEY (a DVD bus key)."]},{"entry":["AM_PROPERTY_DVDCOPY_DISC_KEY","Set-only property. This provides disc key. The key is a"]},{"entry":[{},"structure of type AM_DVDCOPY_DISCKEY (a DVD"]},{"entry":[{},"disc key)."]},{"entry":["AM_PROPERTY_DVDCOPY_DVD_KEY1","This is a set-only property. This property provides the"]},{"entry":[{},"DVD drive bus key 1 to the decoder. The data passed will"]},{"entry":[{},"be a structure of type AM_DVDCOPY_BUSKEY (a DVD"]},{"entry":[{},"bus key)."]},{"entry":["AM_PROPERTY_DVDCOPY_SET_COPY_STATE","Both get and set are supported on this property. Get is"]},{"entry":[{},"called first to determine if authentication is required. The"]},{"entry":[{},"set properties are indications as to which phase of copy"]},{"entry":[{},"protection negotiation the filter is entering. The data"]},{"entry":[{},"passed will be a structure of type"]},{"entry":[{},"AM_DVDCOPY_SET_COPY_STATE (determines the"]},{"entry":[{},"copy protection state of the filter)."]},{"entry":["AM_PROPERTY_DVDCOPY_TITLE_KEY","This is a set-only property. This provides title key from"]},{"entry":[{},"current content. The key is a structure of type"]},{"entry":[{},"AM_DVDCOPY_TITLEKEY (a DVD title key from the"]},{"entry":[{},"current content)."]},{"entry":["AM_PROPERTY_DVDCOPY_REGION","Region code requests the region definition that the decoder"]},{"entry":[{},"is allowed to play in as defined by the DVD consortium."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE II"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Data Structure","Definition"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["AM_PROPERTY_DVDCOPY_REGION","typedef struct_DVD_REGION {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"UCHAR CopySystem; \/\/specifies whether the disk is copy protected"]},{"entry":[{},{},"UCHAR RegionData; \/\/information about the region from decoder"]},{"entry":[{},{},"UCHAR SystemRegion; \/\/information about region from DVD drive"]},{"entry":[{},{},"UCHAR Reserved; \/\/Reserved"]},{"entry":[{},"}","DVD_REGION, *PDVD_REGION;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["AM_DVDCOPY_BUSKEY","typedef struct_AM_DVDCOPY_BUSKEY {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"BYTE BusKey[5]; \/\/DVD drive bus key"]},{"entry":[{},{},"BYTE Reserved[1]; \/\/Reserved"]},{"entry":[{},"}","AM_DVDCOPY_BUSKEY, *PAM_DVDCOPY_BUSKEY;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["AM_DVDCOPY_CHLGKEY","typedef struct_AM_DVDCOPY_CHLGKEY {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"BYTE ChlgKey[10]; \/\/Challenge key"]},{"entry":[{},{},"BYTE Reserved[2]; \/\/Reserved"]},{"entry":[{},"}","AM_DVDCOPY_CHLGKEY, *PAM_DVDCOPY_CHLGKEY;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["AM_DVDCOPY_DISCKEY","typedef struct_AM_DVDCOPY_DISCKEY {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"BYTE DiscKey[2048]; \/\/DVD disc key"]},{"entry":[{},"}","AM_DVDCOPY_DISCKEY, *PAM_DVDCOPY_DISCKEY;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["AM_DVDCOPY_SET_COPY_STATE","typedef struct AM_DVDCOPY_SET_COPY_STATE {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ULONG DVDCopyState;","\/\/Copy protection state of the filter."]},{"entry":[{},{},"Member of the AM_DVDCOPYSTATE"]},{"entry":[{},{},"enumerated data type."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}","AM_DVDCOPY_SET_COPY_STATE,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"*PAM_DVDCOPY_SET_COPY_STATE;"]},{"entry":["AM_DVDCOPYSTATE","typedef enum {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"AM_DVDCOPYSTATE_INITIALIZE,"]},{"entry":[{},{},"AM_DVDCOPYSTATE_INITIALIZE_TITLE,"]},{"entry":[{},{},"AM_DVDCOPYSTATE_AUTHENTICATION_NOT_REQUIRED,"]},{"entry":[{},{},"AM_DVDCOPYSTATE_AUTHENTICATION_REQUIRED,"]},{"entry":[{},{},"AM_DVDCOPYSTATE_DONE"]},{"entry":[{},"}","AM_DVDCOPYSTATE;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Element Definitions"]},{"entry":[{},"AM_DVDCOPYSTATE_INITIALIZE-Starting a full key-exchange"]},{"entry":[{},"algorithm."]},{"entry":[{},"AM_DVDCOPYSTATE_INITIALIZE_TITLE-Starting a title key-"]},{"entry":[{},"exchange algorithm."]},{"entry":[{},"AM_DVDCOPYSTATE_AUTHENTICATION_NOT_REQUIRED-"]},{"entry":[{},"Authentication is not required."]},{"entry":[{},"AM_DVDCOPYSTATE_AUTHENTICATION_REQUIRED-"]},{"entry":[{},"Authentication required."]},{"entry":[{},"AM_DVDCOPYSTATE_DONE-Key exchange negotiation is"]},{"entry":[{},"complete."]},{"entry":["AM_DVDCOPY_TITLEKEY","typedef struct AM_DVDCOPY_TITLEKEY {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"ULONG KeyFlags; \/\/Key flags"]},{"entry":[{},{},"UCHAR TitleKey[6]; \/\/Title key"]},{"entry":[{},{},"UCHAR Reserved[2]; \/\/Reserved"]},{"entry":[{},"}","AM_DVDCOPY_TITLEKEY, *PAM_DVDCOPY_TITLEKEY;"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0046","num":"0045"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE III"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Interface","Definition"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["IKsPropertySet::Get","Syntax"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["(Retrieves a property","HRESULT Get("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["identified by a property set","REFGUID guidPropSet,"]},{"entry":["Globally Unique Identifier","DWORD dwPropID,"]},{"entry":["(GUID) and a property ID)","LPVOID pInstanceData,"]},{"entry":[{},"DWORD cbInstanceData,"]},{"entry":[{},"LPVOID pPropData,"]},{"entry":[{},"DWORD cbPropData,"]},{"entry":[{},"DWORD *pcbReturned"]},{"entry":[{},");"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Parameters"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"guidPropSet"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"[in] Property set GUID."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"dwPropID"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"[in] Identifier of the property within the property set."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"pInstanceData"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[out, size_is(cbInstanceData)] Pointer to instance data for"]},{"entry":[{},"the property."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"cbInstanceData"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[in] Number of bytes in the buffer to which"]},{"entry":[{},"pInstanceData points."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"pPropData"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[out, size_is(cbPropData)] Pointer to the retrieved buffer,"]},{"entry":[{},"which contains the value of the property."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"cbPropData"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[in] Number of bytes in the buffer to which pPropData"]},{"entry":[{},"points."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"pcbReturned"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[out] Pointer to the number of bytes returned in the buffer"]},{"entry":[{},"to which pPropData points."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Return Value"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Returns an HRESULT value that depends on the implementation of the"]},{"entry":[{},"interface."]},{"entry":[{},"The current Microsoft\u2009\u00ae DirectShow\u2009\u00ae implementation returns"]},{"entry":[{},"E_PROP_SET_UNSUPPORTED if the property set is not supported or"]},{"entry":[{},"E_PROP_ID_UNSUPPORTED if the property ID is not supported for"]},{"entry":[{},"the specified property set."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Remarks"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"To retrieve a property, allocate a buffer which this method will then fill"]},{"entry":[{},"in. To determine the necessary buffer size, specify NULL for"]},{"entry":[{},"pPropData and zero (0) for cbPropData. This method returns the"]},{"entry":[{},"necessary buffer size in pcbReturned."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["IKsPropertySet::Set (Sets a","Syntax"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["property identified by a","HRESULT Set("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["property set GUID and a","REFGUID guidPropSet,"]},{"entry":["property ID)","DWORD dwPropID,"]},{"entry":[{},"LPVOID pInstanceData,"]},{"entry":[{},"DWORD cbInstanceData,"]},{"entry":[{},"LPVOID pPropData,"]},{"entry":[{},"DWORD cbPropData"]},{"entry":[{},");"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Parameters"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"guidPropSet"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"[in] Property set GUID."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"dwPropID"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"[in] Identifier of the property within the property set."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"pInstanceData"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[out, size_is(cbInstanceData)] Pointer to instance data for the"]},{"entry":[{},"property."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"cbInstanceData"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"[in] Number of bytes in the buffer to which pInstanceData points."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"pPropData"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[out, size_is(cbPropData)] Pointer to the retrieved buffer, which"]},{"entry":[{},"contains the value of the property."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"cbPropData"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"[in] Number of bytes in the buffer to which pPropData points."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Return Value"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Returns an HRESULT value that depends on the implementation of the"]},{"entry":[{},"interface."]},{"entry":[{},"The current DirectShow implementation returns"]},{"entry":[{},"E_PROP_SET_UNSUPPORTED if the property set is not supported or"]},{"entry":[{},"E_PROP_ID_UNSUPPORTED if the property ID is not supported for"]},{"entry":[{},"the specified property set."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Based on the type of information requested, key exchange client  sends the appropriate command to key exchange server  to obtain the requested information (act ). Key exchange server  receives the command from key exchange client  (act ) and queries the disc drive  for the requested information (act ). From the viewpoint of disc drive , key exchange server  is a DVD content player requesting the information\u2014disc drive  has no knowledge that it is dealing with an intermediary or agent for a DVD content player.","In one exemplary implementation, a DeviceIoControl function is used to allow the key exchange server  to communicate with disc drive , and is illustrated in Table IV below. Additionally, the control codes of the DeviceIoControl function that are used are illustrated in Table V below.",{"@attributes":{"id":"p-0049","num":"0048"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE IV"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Function","Definition"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["BOOL DeviceIoControl","BOOL DeviceIoControl("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HANDLE hDevice,"]},{"entry":[{},"DWORD dwIoControlCode,"]},{"entry":[{},"LPVOID lpInBuffer,"]},{"entry":[{},"DWORD nInBufferSize,"]},{"entry":[{},"LPVOID lpOutBuffer,"]},{"entry":[{},"DWORD nOutBufferSize,"]},{"entry":[{},"LPDWORD lpBytesReturned,"]},{"entry":[{},"LPOVERLAPPED lpOverlapped"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},");"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Parameters"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"hDevice"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[in] Handle to the device on which to perform the operation,"]},{"entry":[{},"typically a volume, directory, file, or alternate stream."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"dwIoControlCode"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[in] Specifies the control code for the operation. This value"]},{"entry":[{},"identifies the specific operation to be performed and the type of"]},{"entry":[{},"device on which to perform it. Exemplary control codes are"]},{"entry":[{},"illustrated in Table V."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"lpInBuffer"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[in] Pointer to a buffer that contains the data required to perform"]},{"entry":[{},"the operation. This parameter can be NULL if the"]},{"entry":[{},"dwIoControlCode parameter specifies an operation that does not"]},{"entry":[{},"require input data."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"nInBufferSize"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[in] Specifies the size, in bytes, of the buffer pointed to by"]},{"entry":[{},"lpInBuffer."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"lpOutBuffer"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[out] Pointer to a buffer that receives the operation's output data."]},{"entry":[{},"This parameter can be NULL if the dwIoControlCode parameter"]},{"entry":[{},"specifies an operation that does not produce output data."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"nOutBufferSize"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[in] Specifies the size, in bytes, of the buffer pointed to by"]},{"entry":[{},"lpOutBuffer."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"lpBytesReturned"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[out] Pointer to a variable that receives the size, in bytes, of the"]},{"entry":[{},"data stored into the buffer pointed to by lpOutBuffer."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"lpOverlapped"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[in] Pointer to an OVERLAPPED structure. If hDevice was"]},{"entry":[{},"opened with the FILE_FLAG_OVERLAPPED flag,"]},{"entry":[{},"lpOverlapped must point to a valid OVERLAPPED structure. In"]},{"entry":[{},"this case, the operation is performed as an overlapped"]},{"entry":[{},"(asynchronous) operation. If the device was opened with"]},{"entry":[{},"FILE_FLAG_OVERLAPPED and lpOverlapped is NULL, the"]},{"entry":[{},"function fails in unpredictable ways. If hDevice was opened"]},{"entry":[{},"without specifying the FILE_FLAG_OVERLAPPED flag,"]},{"entry":[{},"lpOverlapped is ignored and DeviceIoControl does not return"]},{"entry":[{},"until the operation has been completed, or an error occurs."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Return Value"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If the function succeeds, the return value is nonzero."]},{"entry":[{},"If the function fails, the return value is zero."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Remarks"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If hDevice was opened with FILE_FLAG_OVERLAPPED and the"]},{"entry":[{},"lpOverlapped parameter points to an OVERLAPPED structure, the"]},{"entry":[{},"operation is performed as an overlapped (asynchronous) operation. In"]},{"entry":[{},"this case, the OVERLAPPED structure contains a handle to a manual-"]},{"entry":[{},"reset event object created by a call to a CreateEvent function."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE V"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Control Code","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["IOCTL_DVD_START_SESSION","Starts an authentication session and returns an authentication session"]},{"entry":[{},"ID known as an AGID."]},{"entry":["IOCTL_DVD_READ_KEY","Reads a bus challenge key or bus key 1 or the list of encrypted disk"]},{"entry":[{},"keys or an encrypted title key from the DVD drive."]},{"entry":["IOCTL_DVD_SEND_KEY","Sends a bus challenge key or bus key 2 to the DVD drive."]},{"entry":["IOCTL_DVD_END_SESSION","Ends an authentication session."]},{"entry":["IOCTL_DVD_GET_REGION","Reads the region information from the DVD disk in the DVD drive."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Key exchange server  receives the requested information from disc drive  (act ) and returns the information to the client  (act ). Key exchange client  receives the information from key exchange server  (act ) and returns the requested information to DVD player  (act ). DVD player  is thus able to interact, via the key exchange client and key exchange server  and , with disc drive  as if player  and drive  were situated at the same device.","Returning to , in one implementation key exchange client and key exchange server  and  are implemented using the well-known remote procedure call (RPC) protocol. In this implementation, key exchange server  is implemented as an RPC server to which key exchange client  can communicate command messages. An exemplary implementation of the interface provided by key exchange server  is shown in the following code:","interface DvdRpc","{\n\n","HRESULT DvdStartSession ([in] LPCWSTR pszRoot, [in] ULONG KeyLength, [out] ULONG *pSessionld);","HRESULT DvdSendKey ([in] LPCWSTR pszRoot, [in] ULONG KeyLength, [in, out, size_is (KeyLength)]BYTE *pBuffer);","HRESULT DvdReadKey ([in] LPCWSTR pszRoot, [in] ULONG KeyLength, [in, out, size is (KeyLength)] BYTE *pBuffer);","HRESULT DvdReadTitleKey ([in] LPCWSTR pszfile, [in] ULONG KeyLength, [in, out, size_is (KeyLength)] BYTE *pBuffer);","HRESULT DvdEndSession ([in] LPCWSTR pszRoot, [in] ULONG SessionID);","}","The \u201cDvdGetRegion\u201d command is a request to key exchange server  to obtain the region information (returned in the *pRegion parameter) from the DVD (the path to or location of the DVD is identified by the pszRoot parameter). The \u201cDvdStartSession\u201d and \u201cDvdEndSession\u201d commands define the beginning and ending of a key exchange session between the key exchange client and key exchange server  and  for a DVD having a path or location identified by the pszRoot parameter and an AGID identified by the *pSessionId or SessionID parameter and having a size identified by the KeyLength parameter. The \u201cDvdSendKey\u201d command sends a bus challenge key or bus key  (identified by the *pBuffer parameter having a size identified by the KeyLength parameter) to the remote DVD drive, with the pszRoot parameter identifying the path or location of the DVD. The \u201cDvdReadKey\u201d command reads the bus challenge key or bus key , or the list of encrypted disk keys, (identified by the *pBuffer parameter having a size identified by the KeyLength parameter) from the remote DVD drive, with the pszRoot parameter identifying the path or location of the DVD. The \u201cDVDReadTitleKey\u201d command reads an encrypted title key (identified by the *pBuffer parameter having a size identified by the KeyLength parameter) from the remote DVD drive, with the pszFile parameter identifying the file on the DVD that the command corresponds to.","Alternatively, other protocols besides the RPC protocol may be used to communicate commands and results between client and server components  and . For example, the well-known SOAP (Simple Object Access Protocol) protocol may be used.","Various enhancements may also be made to client device  and\/or server device  to improve the performance of streaming DVD content from server  to client . In one implementation, one or both of client  and server  includes an optional hard drive (drives  and , respectively) or other mass storage device. The use of a hard drive allows data from disc  to be cached either at server  (by hard drive ) or at client  (by hard drive ). Hard drives typically operate at faster speeds than optical disc drives, so caching data from disc  at server  could allow server  to handle streaming to more clients  concurrently than without such caching. Additionally, by caching data at client , latencies and uncertainties in communicating the data across the network can be accounted for.","An additional enhancement that can be made is referred to as \u201coverlapped I\/O\u201d. Overlapped I\/O allows client component , via file system module , to request multiple read requests (requests for a block (s) of data from disc ) before the results from one of those read requests is returned. Thus, a continuous flow of read commands can be issued without waiting for the results of a previous read request to be returned prior to issuing another read request.",{"@attributes":{"id":"p-0065","num":"0065"},"figref":"FIG. 5","b":["300","300","300","300"]},"Computer environment  includes a general-purpose computing device in the form of a computer . Computer  can be, for example, any of computing devices  or  of . The components of computer  can include, but are not limited to, one or more processors or processing units , a system memory , and a system bus  that couples various system components including the processor  to the system memory .","The system bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. By way of example, such architectures can include an Industry Standard Architecture (ISA) bus, a Micro Channel Architecture (MCA) bus, an Enhanced ISA (EISA) bus, a Video Electronics Standards Association (VESA) local bus, and a Peripheral Component Interconnects (PCI) bus also known as a Mezzanine bus.","Computer  typically includes a variety of computer readable media. Such media can be any available media that is accessible by computer  and includes both volatile and non-volatile media, removable and non-removable media.","The system memory  includes computer readable media in the form of volatile memory, such as random access memory (RAM) , and\/or non-volatile memory, such as read only memory (ROM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently operated on by the processing unit .","Computer  may also include other removable\/non-removable, volatile\/non-volatile computer storage media. By way of example,  illustrates a hard disk drive  for reading from and writing to a non-removable, non-volatile magnetic media (not shown), a magnetic disk drive  for reading from and writing to a removable, non-volatile magnetic disk  (e.g., a \u201cfloppy disk\u201d), and an optical disc drive  for reading from and\/or writing to a removable, non-volatile optical disc  such as a CD-ROM, DVD-ROM, or other optical media. The hard disk drive , magnetic disk drive , and optical disc drive  are each connected to the system bus  by one or more data media interfaces . Alternatively, the hard disk drive , magnetic disk drive , and optical disc drive  can be connected to the system bus  by one or more interfaces (not shown).","The various drives and their associated computer-readable media provide non-volatile storage of computer readable instructions, data structures, program modules, and other data for computer . Although the example illustrates a hard disk , a removable magnetic disk , and a removable optical disc , it is to be appreciated that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes or other magnetic storage devices, flash memory cards, CD-ROM, digital versatile discs (DVD) or other optical storage, random access memories (RAM), read only memories (ROM), electrically erasable programmable read-only memory (EEPROM), and the like, can also be utilized to implement the exemplary computing system and environment.","Any number of program modules can be stored on the hard disk , magnetic disk , optical disc , ROM , and\/or RAM , including by way of example, an operating system , one or more application programs , other program modules , and program data . Each of such operating system , one or more application programs , other program modules , and program data  (or some combination thereof) may implement all or part of the resident components that support the distributed file system.","A user can enter commands and information into computer  via input devices such as a keyboard  and a pointing device  (e.g., a \u201cmouse\u201d). Other input devices  (not shown specifically) may include a microphone, joystick, game pad, satellite dish, serial port, scanner, and\/or the like. These and other input devices are connected to the processing unit  via input\/output interfaces  that are coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port, or a universal serial bus (USB).","A monitor  or other type of display device can also be connected to the system bus  via an interface, such as a video adapter . In addition to the monitor , other output peripheral devices can include components such as speakers (not shown) and a printer  which can be connected to computer  via the input\/output interfaces .","Computer  can operate in a networked environment using logical connections to one or more remote computers, such as a remote computing device . By way of example, the remote computing device  can be a personal computer, portable computer, a server, a router, a network computer, a peer device or other common network node, and the like. The remote computing device  is illustrated as a portable computer that can include many or all of the elements and features described herein relative to computer .","Logical connections between computer  and the remote computer  are depicted as a local area network (LAN)  and a general wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When implemented in a LAN networking environment, the computer  is connected to a local network  via a network interface or adapter . When implemented in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the wide network . The modem , which can be internal or external to computer , can be connected to the system bus  via the input\/output interfaces  or other appropriate mechanisms. It is to be appreciated that the illustrated network connections are exemplary and that other means of establishing communication link (s) between the computers  and  can be employed.","In a networked environment, such as that illustrated with computing environment , program modules depicted relative to the computer , or portions thereof, may be stored in a remote memory storage device. By way of example, remote application programs  reside on a memory device of remote computer . For purposes of illustration, application programs and other executable program components such as the operating system are illustrated herein as discrete blocks, although it is recognized that such programs and components reside at various times in different storage components of the computing device , and are executed by the data processor (s) of the computer.","Computer  typically includes at least some form of computer readable media. Computer readable media can be any available media that can be accessed by computer . By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile discs (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other media which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The invention has been described herein in part in the general context of computer-executable instructions, such as program modules, executed by one or more computers or other devices. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.","For purposes of illustration, programs and other executable program components such as the operating system are illustrated herein as discrete blocks, although it is recognized that such programs and components reside at various times in different storage components of the computer, and are executed by the data processor (s) of the computer.","Alternatively, the invention may be implemented in hardware or a combination of hardware, software, and\/or firmware. For example, one or more application specific integrated circuits (ASICs) could be designed or programmed to carry out the invention.","Although the description above uses language that is specific to structural features and\/or methodological acts, it is to be understood that the invention defined in the appended claims is not limited to the specific features or acts described. Rather, the specific features and acts are disclosed as exemplary forms of implementing the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
