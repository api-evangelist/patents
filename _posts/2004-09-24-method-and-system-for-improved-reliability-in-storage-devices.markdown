---
title: Method and system for improved reliability in storage devices
abstract: A method of preventing data loss in a data storage system includes supplying write data to a high speed volatile write buffer and supplying electrical power from an energy storage device upon detection of a primary power loss event. The backup electrical power is supplied to the write buffer and nonvolatile cache. Under backup power, the write data is transferred into the nonvolatile cache and the backup power is removed. Upon regaining main power, a data presence indication triggers a transfer of the write data from the nonvolatile cache to the long term storage media. The method may be implemented for a system to protect it from inadvertent power losses or it may implemented in a system where the long term storage device is power cycled to save power. The energy storage device is not necessarily needed in the power cycled system unless power failure protection is also desired.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07395452&OS=07395452&RS=07395452
owner: Microsoft Corporation
number: 07395452
owner_city: Redmond
owner_country: US
publication_date: 20040924
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED PATENT APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS"],"p":["The following references have subject matter in common with the current application:","Co-Pending patent application Ser. No. 10\/837,986 filed May 3, 2004 entitled \u201cNon-Volatile Memory Cache Performance Improvement\u201d commonly assigned with the present application; and","U.S. Pat. No. 7,036,040 filed Nov. 26, 2002 entitled \u201cImproved Reliability Of Diskless Network-Bootable Computers Using Non-Volatile Memory Cache\u201d commonly assigned with the present application.","This invention relates in general to the field of data protection in computer systems. More particularly, this invention relates to a technique to preserve data being written to a long term storage device upon the loss of primary power.","Large capacity storage devices, such as the mechanical disk drive, are one of the slowest and most unreliable components in modern computer systems largely due to their mechanical nature. These devices provide high capacity, long-term data storage at a very low cost but typically have long time delays during write operations because of the time it takes to move mechanical parts such as the record heads across the spinning magnetic media. These delays are observed when data is being written to random locations on the media requiring the heads to move frequently. These delays become evident to a computer user when performing operations such as saving files to a disk and give the impression that the computer is slow and unresponsive.","Storage device designers have generally employed write buffers made from fast, volatile, solid state memory to try to minimize the effects of the delays. This technique attains faster write performance but at the expense of the reliability of the data. Data is lost if power to the storage unit fails while there is data in the volatile write buffer that has not been transferred to the long-term non-volatile media. Data lost during a power interruption to a disk can be temporary or permanent but generally it is always distressing to a system user as the loss can waste time and have adverse economic impacts on business.","Thus, there is a need for a technique to eliminate data loss when power to at least a disk drive is lost. In addition, it would also be useful for the technique to be useful in systems which use power cycling as an intentional method of saving power in a computer system. The present invention addresses the aforementioned needs and solves them with additional advantages as expressed herein.","An embodiment of the invention includes a method to recover data that was transmitted by a computer system but not yet stored in a long term storage device when a power interruption to at least the storage device is lost. A write buffer is used to accept data from a data source, such as a computer, and forward that data onto a long term storage device such as a disk drive. When a power interruption occurs, one embodiment uses the charge from an energy storage device, such as a battery or capacitor, to provide backup power to both the write buffer and a nonvolatile cache. The backup power also allows a logic controller, such as a state machine, to transfer write data from the write buffer to the nonvolatile cache before backup power is exhausted. This action preserves the write data between the time when main power begins to fail and when backup power is removed or dissipates. After the main power is re-established, the preserved data in the nonvolatile cache is transferred to the long term storage device.","Exemplary Embodiments of the Invention",{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 1","FIG. 1","FIG. 1"],"b":"100"},"The storage system  has a data interface  that may be a host computer bus such as an ATA, SCSI, PCI, or other type of data communication bus. The interface may be serial or parallel and presents data at its output . The write data  is written immediately into a write buffer  made of a relatively small amount of high speed, volatile, memory, such as a static random access memory (SRAM) or dynamic random access memory (DRAM). In the nonvolatile cache mode, the write data  stored in the write buffer  is then moved to a nonvolatile cache . The nonvolatile cache can be made of a larger amount of medium speed, solid state, nonvolatile memory, such as flash memory. One specific type of flash memory is NAND Flash memory.","The write data  of the nonvolatile memory  is eventually moved to the large capacity, long-term storage media , such as spinning magnetic media or optical media. The high speed volatile write buffer  allows the storage unit  to accept data from the data input interface  at maximum speed for short periods of time, independent of the speeds of non-volatile devices down stream. Under normal conditions, the controller  uses control lines , ,  and  to orchestrate the above described movement of data from the data input interface  to the long term storage media . While under main power, the storage unit control , which may be associated with the long term storage media may be used to control the mechanisms inside the long term storage media .","In one embodiment, an optional write data path  may be used to connect the volatile write buffer  to the long term storage media  under normal conditions where the main power is supplied to the system . This option is referred to as the bypass mode.","In the nonvolatile mode, there are two data reliability issues with respect to the storage units. The first is that write data  must be moved to the nonvolatile cache  as soon as possible to avoid overrunning the write buffer  and slowing down the data rate on the data input interface . This write data queue issue may not exist if the system is operated in the bypass mode where write data from the volatile write buffer  is transferred directly to the long term storage media  under main power. However, there are periods of time that the data is in the volatile write buffer  is vulnerable to losses of main power. Upon loss of main power, the volatile write buffer  would be unable to complete its transfer of data to long term storage . The second issue is that the long-term storage media  may occasionally develop bad physical memory locations and this can lead to unreliable data storage if not handled carefully. This second issue is present in both modes of operation.","To guarantee that write data is never lost once accepted at the data input interface , two conditions are preferably met. The first is that write data stored to the nonvolatile cache  preferably reaches the long-term storage media  at the logical address written to by the host computer. The second is that write data stored in the volatile write buffer  preferably reaches the nonvolatile cache  if main power to the system  or just power to the storage unit  fails.","The first condition may be met as follows. Write data is normally provided with logical storage addresses. The write data and the associated logical address information is stored in the write buffer  in the bypass mode and in the nonvolatile cache  in the nonvolatile mode. The storage unit controller  firmware maintains a map of logical addresses to physical addresses. When the storage unit controller  moves data from the write buffer  in the bypass mode or from the nonvolatile cache  in the nonvolatile mode to the long-term storage media , it may discover that one or more memory cells at the physical address are bad. If bad cells are discovered, the storage unit controller  firmware must remap the logical storage address to a new physical address with good memory cells. In this way, write data reaches the long-term storage media  even if in the presence of bad memory cells in that media.","The second condition may be met as follows. To avoid loosing write data during a loss of main power to the system , memory space is preferably reserved in the nonvolatile cache  to hold the contents of the volatile write buffer . The size of the reserved memory space in nonvolatile cache  is preferably equal to or greater than the size of the volatile memory buffer. However, if main power is lost, no transfer of data is possible without backup power from some source. The controller  in  implements a circuit that detects if the main power is lost and if there is unsaved data in the volatile write buffer . Main power loss is detected by sensing the main power voltage present in the system . Unsaved write data in the write buffer  is detected using a volatile data present signal line coming from the volatile write buffer . This signal may be one of the control signals  from the write buffer.","If main power loss is detected by the controller  and there is unsaved data in the volatile write buffer, the controller  routes backup power  from the energy storage device  to the devices critical for moving data from the volatile write buffer  to the nonvolatile cache . These critical devices may include interface drivers and receivers as well as logic circuits for the volatile write buffer , the nonvolatile cache , and the controller . Backup power is preferentially not applied to other, non-critical devices during this data recovery state. For example, backup power is not necessary for the storage control unit  and long term storage media  as these units are not needed for the transfer of data from the write buffer  to the nonvolatile cache .","Logic for the controller  includes not only the power and data detection circuitry but also a state machine or its equivalent to perform the transfer. The state machine is triggered to start by a combination of a power loss signal and a data present signal from the write buffer. Once the data is moved from the volatile write buffer  to the nonvolatile cache , the volatile data present detection signal is de-asserted and the backup power may be removed from the devices.","In one embodiment, the controller  ensures that devices at the interface between un-powered and backup powered circuitry sections have controlled inputs so as to avoid the problem of unspecified device loading characteristics when an un-powered device is connected to a powered device. This can be performed with any of the well known techniques such as using high impedance outputs, pull up resistors to backup power on floating inputs, and special interface isolation devices.","In one embodiment, the controller  can embody the storage unit control . In another embodiment, the controller  can be broken into multiple sub-units. For example, the controller can be split up into a power controller and a data controller. Such options are well known in the art. The use of state machines for logical control is also well known and may be applied as an integrated controller unit, such as an ASIC or programmable controller, or as multiple sub-units composed of one or more state machines. In an alternate embodiment, the controller  could put all non-essential devices into a low power state upon detection of a power loss signal if such a state is supported by the devices and the low power state does not compromise the ability to recover the data.","The energy storage device  may be a large capacitor or a small battery depending on the power requirements of the devices of the system  that need backup power to move data from the volatile write buffer  to the nonvolatile cache . The energy storage device must nominally supply enough stored energy to complete the data recovery process. The amount of stored energy depends on the amount of circuitry to be supplied backup power and the length of time to complete the data transfer from the write buffer to the nonvolatile cache. These parameters are implementation dependent and may vary considerably if, for example one implementation uses discrete components while another uses highly integrated, low power devices. Example benchmarks for sizing include a write buffer using a 1 MB DRAM, a nonvolatile cache of 32 MB of NAND flash, a digital controller implemented using an ASIC device and a write transfer time of approximately 200 microseconds per 4 KB block. Under these backup power constraints, the energy storage device need not be large because all the data can be transferred in short amount of time (50 msec) so that a small battery or large capacitor may suffice.","After the controller or state machine, using backup power, performs the write data transfer from the write buffer  to the nonvolatile cache , then the system can remove backup power and can lie dormant until the restoration of main power. Upon the restoration of main power, the nonvolatile cache  can signal the controller  or equivalent state machine that there is write data present. The controller  can then activate the nonvolatile cache  along with the storage unit control  to transfer the write data to the long term storage media . The controller  can also respond to new write data being presented to the data input interface . The energy storage device can be re-charged and prepared for the next main power loss.","In one embodiment, the long term storage media can be power cycled to save power. Disk drive systems are known to consume large amounts of power and power cycling is one technique to reduce power consumption between active disk accesses. In such an environment, the nonvolatile mode of the invention would be used where data flows from the data input interface  to the write buffer  to the nonvolatile cache  to the long term storage media . The optional data path  may or may not be used in such a configuration. The nonvolatile cache  is needed to store data not being transferred into long term storage  while that storage was being powered down. It is estimated that for reasonable power savings, a disk storage version of the long term storage would have to be powered down for at least 0.5 minutes. This parameter, and the write transfer into the nonvolatile cache can be used to estimate the size of the nonvolatile cache needed. In this power cycled disk embodiment, the energy storage device would still only need to be sized to accommodate a transfer of write data from the smaller write buffer to the nonvolatile cache because during a power cycle, only the disk drive would be powered down and not the other data transfer circuitry. The energy storage device need only be used during a main power loss and not during a power cycling event.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2","b":["200","205","210","215","200","220"]},"At this time, as the main power is going down, the backup power from the energy storage device is being applied to the volatile storage and nonvolatile cache (step ). This action may be conditioned on the detection of write data in volatile memory. This action allows the write data in the volatile storage to be preserved. Next, the detected write data is transferred from the volatile storage or write buffer to the nonvolatile cache (step ). This action preserves the write data in the nonvolatile cache such that if the backup power is lost or removed, the write data is not lost. At this time, the backup power may be fully dissipated or it may optionally be removed (Step ). In either event, the write data lies dormant but preserved in the cache. Main power is restored in step . Upon the restoration of main power, the process  continues by transferring the preserved write data stored in the nonvolatile cache into it's final destination; the long term storage (step ). The occurrence of other activities, such as the initiation of additional write data in step  on the input to the process  during the transfer of step , do not affect the core process steps reflected in .","In another embodiment, the core steps of process  may be modified somewhat and repeated in a system which utilizes a long term storage device, such as a disk drive, which may be power cycled to save system power. In that environment, the process  of  may apply. The process  is a continuous one wherein it is assumed that no unintentional power failure is experienced, but, aspects of the current invention may be utilized to advantage. In the process, write data input to a system is being transferred from an input to the long term storage destination (step ). Somewhere in this continuous transfer, the long term storage device, such as a magnetic or optical disk, is intentionally powered down to save power (step ). Although data may still be incoming, all write data that is received is transferred from volatile storage (write buffer) to nonvolatile cache (step ). Here the data lies safely stored until disk power is purposely restored (step ). Upon restoration of power, the long term storage device is reactivated to full service. Then, the preserved write data is transferred from nonvolatile cache to the long term storage device (step ). Additional data may then be flowed through the system as before (step ) until the next intentional power cycling of the disk drive at step . Thus the process may repeat allowing the disk drive to be power cycled while data is being preserved for eventual long term storage.","In one embodiment of the invention, the process of  and the process of  are both used. The embodiment is a system where the long term storage device is intentionally power cycled to save overall system power. Additionally, an energy storage device is used such that inadvertent main power losses do not result in the loss of write data as in the flow of  and the configuration of . In this embodiment, a discrimination between an inadvertent power loss and a purposeful power cycling event may be necessary. This is accomplished by discriminating between main power loss and long term storage device power cycling as the two events are distinct and can be detected separately as is well known in the art.","In one embodiment, the controller  or aspects thereof are under the control of a processor, preferably a low power processor, whose instructions include performing the control functions of the methods indicated in . The instructions can be available as Read only memory, random access memory, or other solid state memory form. Such instructions may be programmable in that the instructions may be downloadable from a host computer-readable medium, such as a floppy disk, to the controller  of .","Exemplary Computing Device",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 4","FIG. 4"],"b":"441"},"Although not required, embodiments of the invention can also be implemented via an operating system, for use by a developer of services for a device or object, and\/or included within application software. Software may be described in the general context of computer-executable instructions, such as program modules, being executed by one or more computers, such as client workstations, servers or other devices. Generally, program modules include routines, programs, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. Typically, the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover, those skilled in the art will appreciate that various embodiments of the invention may be practiced with other computer configurations. Other well known computing systems, environments, and\/or configurations that may be suitable for use include, but are not limited to, personal computers (PCs), automated teller machines, server computers, hand-held or laptop devices, multi-processor systems, microprocessor-based systems, programmable consumer electronics, network PCs, appliances, lights, environmental control elements, minicomputers, mainframe computers and the like. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network\/bus or other data transmission medium. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices and client nodes may in turn behave as server nodes.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4","b":["400","400","400","400"]},"With reference to , an exemplary system for implementing an embodiment of the invention includes a general purpose computing device in the form of a computer system . Components of computer system  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus (also known as Mezzanine bus).","Computer system  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer system  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, Random Access Memory (RAM), Read Only Memory (ROM), Electrically Erasable Programmable Read Only Memory (EEPROM), flash memory or other memory technology, Compact Disk Read Only Memory (CD ROM), compact disc-rewritable (CDRW), digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can accessed by computer system . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer system , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer system  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk , such as a CD ROM, CDRW, DVD, or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in  provide storage of computer readable instructions, data structures, program modules and other data for the computer system . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer system  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface , which may in turn communicate with video memory (not shown). In addition to monitor , computer systems may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer system  may operate in a networked or distributed environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer system , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks\/buses. Such networking environments are commonplace in homes, offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer system  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer system  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer system , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Various distributed computing frameworks have been and are being developed in light of the convergence of personal computing and the Internet. Individuals and business users alike are provided with a seamlessly interoperable and Web-enabled interface for applications and computing devices, making computing activities increasingly Web browser or network-oriented.","For example, MICROSOFT\u00ae's .NET\u2122 platform, available from Microsoft Corporation, includes servers, building-block services, such as Web-based data storage, and downloadable device software. While exemplary embodiments herein are described in connection with software residing on a computing device, one or more portions of an embodiment of the invention may also be implemented via an operating system, application programming interface (API) or a \u201cmiddle man\u201d object between any of a coprocessor, a display device and a requesting object, such that operation may be performed by, supported in or accessed via all of .NET\u2122's languages and services, and in other distributed computing frameworks as well.","As mentioned above, while exemplary embodiments of the invention have been described in connection with various computing devices and network architectures, the underlying concepts may be applied to any computing device or system in which it is desirable to implement a scheme to prevent data loss upon interruption of power to a long term storage device. Thus, the methods and systems described in connection with embodiments of the present invention may be applied to a variety of applications and devices. While exemplary programming languages, names and examples are chosen herein as representative of various choices, these languages, names and examples are not intended to be limiting. One of ordinary skill in the art will appreciate that there are numerous ways of providing object code that achieves the same, similar or equivalent systems and methods achieved by embodiments of the invention.","The various techniques described herein may be implemented in connection with hardware or software or, where appropriate, with a combination of both. Thus, the methods and apparatus of the invention, or certain aspects or portions thereof, may take the form of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other machine-readable storage medium, wherein, when the program code is loaded into and executed by a machine, such as a computer, the machine becomes an apparatus for practicing the invention. In the case of program code execution on programmable computers, the computing device will generally include a processor, a storage medium readable by the processor (including volatile and non-volatile memory and\/or storage elements), at least one input device, and at least one output device. One or more programs that may utilize the signal processing services of an embodiment of the present invention, e.g., through the use of a data processing API or the like, are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer. However, the program(s) can be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language, and combined with hardware implementations.","While aspects of the present invention has been described in connection with the preferred embodiments of the various figures, it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiment for performing the same function of the present invention without deviating therefrom. Furthermore, it should be emphasized that a variety of computer platforms, including handheld device operating systems and other application specific operating systems are contemplated, especially as the number of wireless networked devices continues to proliferate. Therefore, the claimed invention should not be limited to any single embodiment, but rather should be construed in breadth and scope in accordance with the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing summary, as well as the following detailed description of exemplary embodiments, is better understood when read in conjunction with the appended drawings. For the purpose of illustrating embodiments of the invention, there is shown in the drawings exemplary constructions of the invention; however, the invention is not limited to the specific methods and instrumentalities disclosed. In the drawings:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
