---
title: Method and system for recording videoconference data
abstract: A recording system for capturing videoconference session data is provided. The recording system includes a packet intercepting unit configured to identify packets related to the videoconference data being transmitted over a network. The packet intercepting unit is further configured to sort the related packets into corresponding files, wherein each data stream of the videoconference session is associated with one of the corresponding files. A decoder configured to decode data in each of the corresponding files to respective data streams is included, as well as a mixer/composer configured to combine the respective data streams into a single data stream. A recording device configured to record the single data stream onto a storage medium is included. A videoconference system and methods for efficiently recording videoconference data are included.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07558221&OS=07558221&RS=07558221
owner: Seiko Epson Corporation
number: 07558221
owner_city: Tokyo
owner_country: JP
publication_date: 20040213
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application is related to U.S. patent application Ser. No. 10\/192,080, filed on Jul. 10, 2002, and entitled \u201cMulti-Participant Conference System with Controllable Content Delivery Using a Client Monitor Back-Channel.\u201d This application is hereby incorporated by reference in its entirety for all purposes.","The present invention relates generally to video conferencing systems, and more particularly to a method in system for recording audio\/video streams of a video conference without requiring extra bandwidth or CPU processing power.","As videoconferencing becomes more prevalent, additional features are being provided in order for the videoconferencing applications to further appeal to a broader range of participants. One feature that is being pursued is the ability to record the videoconference session. Currently, the server hosting the videoconference session processes incoming audio\/video streams, generates composite frames for each participant, encodes the generated frames and transmits those frames to each participant.","Recording videoconference sessions may require extra bandwidth and central processing unit (CPU) processing power. Videoconference meetings hosted by a meeting conference unit (MCU) server requires a significant amount of CPU processing power in order to process the incoming audio\/video stream, generate composite frames for each participant, encode the generated frames, and transmit those frames to a participant. Thus, any additional processing required for the recording of the videoconference session will add extra overhead to the MCU server. Consequently, participants may start to get a choppy audio, noisy video, and a lower frame rate when viewing the videoconference. In essence, the actual videoconference session quality perceived by each participant may drop in order to provide the ability to record the videoconference session.","In view of the foregoing, what is needed is a method and system for recording a videoconference session without adding extra overhead to the host server, and the recorded videoconference session is easily accessible for review.","Broadly speaking, the present invention fills these needs by providing a method and system for intelligently recording a videoconference session without adding to the overhead of the host server. The present invention can be implemented in numerous ways, including as a process, an apparatus, a system, a device, a method, or a computer readable media. Several embodiments of the present invention are described below.","In one embodiment, a method for recording videoconference data without impacting performance of a host videoconference server is provided. The method includes the operations of: a) intercepting a packet associated with the host videoconference server; b) analyzing the packet; and c) determining if the packet is related to a videoconference session associated with the host videoconference server. If the packet is related to the video conference session, then the method includes, d) determining a videoconference stream corresponding to the packet; e) storing the packet in a file associated with the videoconference stream; and f) repeating a)-e) for additional packets of the videoconference session. Upon completion of the videoconference session, a single videoconference stream is generated from packets in each file associated with the videoconference stream. Then, the single videoconference stream ,may be stored onto a storage medium, wherein the recorded video conference stream includes an index related to a timestamp of the packet.","In another embodiment, a method for efficiently recording videoconference data of a videoconference session is provided. The method initiates with identifying videoconference data transmitted over a distributed network. Then, packets associated with the videoconference data are sorted according to a contributing source identification. Next, a videoconference audio signal and a videoconference video signal are generated from the sorted packets. Then, the videoconference audio signal and the videoconference video signal are mixed based upon a time stamp, or a series of time stamps, associated with each of the sorted packets. Next, an event recorded during the videoconference session is associated with the mixed signal according to common time stamps of the mixed signal and the event. Then a layout of a display associated with the mixed signal is composed based on the event. It should be appreciated that a time index for the audio\/video stream may generated here.","In a further embodiment, a computer readable medium having program instructions for recording videoconference data of a videoconference session is provided. The computer readable medium includes program instructions for identifying videoconference data transmitted over a distributed network and program instructions for sorting packets associated with the videoconference data according to a contributing source identification. Program instructions for generating a videoconference audio signal from the sorted packets and program instructions for generating a videoconference video signal from the sorted packets are included. Program instructions for mixing the videoconference audio signal and the videoconference video signal based upon a time stamp associated with each of the sorted packets are provided. Program instructions for associating an event recorded during the videoconference session with the mixed signal according to common time stamps of the mixed signal and the event and program instructions for composing a layout of a display associated with the mixed signal based on the event are included. Program instructions for generating a time index are included.","In yet another embodiment, a video conference system is provided. The video conference system includes a plurality of clients and a host server configured to distribute media to the plurality of clients over a distributed network. The host server is further configured to receive media from the plurality of clients. The system includes a packet intercepting unit having access to the distributed network. The packet intercepting unit is configured to identify packets related to a video conference session hosted by the host server. The packet intercepting unit is further configured to sort the identified packets according to a contributing source. A media management system in communication with the host system is included. In one aspect of the invention, the media management system includes a media management server configured to manage both media data and annotation data for distribution to participants of the videoconference session and a storage server in communication with the media management server. The storage server is configured to store the media data and the annotation data. The media management system may also include an event database in communication with the media management server. The event database is configured to capture events associated with the annotation data. In another aspect of the invention, the media management system includes a media analysis server that is in communication with the media management server, the event database, and the storage server. The media analysis server is configured to associate the stored annotation data with the captured events.","In still yet another embodiment, a recording system for capturing videoconference session data is provided. The recording system includes a packet intercepting unit configured to identify packets related to the videoconference data being transmitted over a network. The packet intercepting unit is further configured to sort the related packets into corresponding files, wherein each data stream of the videoconference session is associated with one of the corresponding files. A decoder configured to decode data in each of the corresponding files to respective data streams is included, as well as a mixer\/composer configured to combine the respective data streams into a single data stream. A recording device configured to record the single data stream onto a storage medium is included.","Other advantages of the invention will become apparent from the following detailed description, taken in conjunction with the accompanying drawings, illustrating by way of example the principles of the invention.","An invention for a videoconference system capable of recording a videoconference session without incurring added overhead for the host videoconference server is provided. In the following description, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be understood, however, to one skilled in the art, that the present invention may be practiced without some or all of these specific details. In other instances, well known process operations have not been described in detail in order not to unnecessarily obscure the present invention.","The embodiments described herein provide for a recording system that intelligently processes audio\/video streams of a videoconference in a manner that does not add overhead to a host videoconference server. The recording system utilizes a sniffer configured to identify packets associated with a videoconference based upon packet header data. The sniffer (also referred to as a packet intercepting unit) filters the videoconference packets being distributed over a network from non-videoconference packets. In one embodiment, the sniffer is a network adapter set to promiscuous mode to intercept and identify packets. It should be appreciated that while the packets are intercepted by the sniffer, the packets are not destroyed\/consumed. Thus, packet transmission on the network is unaffected by the sniffer. In another embodiment, the sniffer filters the packets according to a packet type and a port number associated with the packet. For example, the packet type for the videoconference packets may be associated with a real time protocol (RTP). Then, the sniffer sorts the filtered packets according to a contributing source (CSRC) which is used to identify the videoconference stream. The sorted packets are decoded and a mixer\/composer then takes the decoded sorted data and combines the data to provide a composite audio\/video stream. This composite stream is recorded onto a computer readable media, e.g., a video compact disc (VCD) or a digital versatile disc (DVD). In one embodiment, an index for the computer readable media is created through matching time stamps associated with events generated during the videoconference session and time stamps of the composite stream. It should be appreciated that the recording is accomplished off-line from the videoconference host server. Thus, there is no impact on the overhead or CPU processing power.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1","b":["122","122","122","122","144","146","144","130","130","144"],"i":["a ","n","a","n ","a ","a "]},"CM is configured to monitor conference client A That is, CM looks at how a user is interacting with the software application by monitoring a video display window of client A , in one embodiment. In addition, CM interprets the users interactions in order to transmit the interactions to the server component. In one embodiment, CM  is configured to provide four functions. One function monitors the start\/stop of a conference channel so that a back-channel communication session can be established in parallel to a conference channel session between the participant and the server component. A second function monitors events, such as user interactions and mouse messages, within the video window displayed by conference client . A third function handles control message information between CM  and a back-channel controller  of the server component. A fourth function provides an external user-interface for the participant that can be used to display and send images to other conference members, show the other connected participants' names, and other suitable communication information or tools.","As mentioned above, the client monitor watches for activity in the associated conference client. In one embodiment, this includes monitoring user events over the video display region containing the conference content, and also includes the conference session control information. For example, CM  watches for the start and end of a conference session or a call from the conference client. When conference client  places a call to media transport server  to start a new conference session, CM  also places a call to the media transport server. The call from CM  establishes back-channel connection  for the participant's conference session. Since CM  can monitor the session start\/stop events, back-channel connection  initiates automatically without additional user setup, i.e., the back-channel connection is transparent to a user. Accordingly, a new session is maintained in parallel with conference client  activity. It should be appreciated that conference channels -provide a video\/audio connection between the associated conference client  and conference connection  of media transport server . In one embodiment, conference channel  provides a communication link for real-time video\/audio data of the conference session communicated between the client component and the server component.","CM  may specifically monitor activity that occurs over the conference's video frame displayed by conference client . For example, CM  may monitor the video image in MICROSOFT'S NETMEETING application. Mouse activity in the client frame is relayed via protocol across back-channel connection  to media transport server . In turn, back-channel controller  can report this activity to another participant, or event handler  for the respective participant. In this embodiment, the monitoring of conference client  application occurs through a hook between the operating system level and the application level. As mentioned above, the video window can be watched for mouse clicks or keyboard strokes from outside of the videoconferencing application. Alternatively, proprietary videoconferencing application software may be provided which integrates the client monitor functionality to provided relevant information to a back-channel network.","In another embodiment, CM  can present a separate user-interface to the participant. This interface can be shown in parallel to the user interface presented by conference client  and may remain throughout the established conference. Alternatively, the user interface presented by CM  may appear before or after a conference session for other configuration or setup purposes.","In yet another embodiment, CM  may provide an interface for direct connection to a communication session hosted by media transport server  without need for a conference client. In this embodiment, CM  presents a user interface that allows back-channel connection  to be utilized to return meeting summary content, current meeting status, participant information, shared data content, or even live conference audio. This might occur, for instance, if the participant has chosen not to use conference client  because the participant only wishes to monitor the activities of the communication. It should be appreciated that the client component can be referred to as a thin client in that conference client  performs minimal data processing. In short, any suitable videoconference application may be included as conference client .","As previously mentioned, CM is configured to recognize when the videoconference application of conference client A starts and stops running, in turn, the CM can start and stop running as the conference client does. CM can also receive information from the server component in parallel to the videoconference session. For example, CM may allow participant A to share an image during the conference session. Accordingly, the shared image may be provided to each of the client monitors so that each participant is enabled to view the image over a document viewer rather than through the video display region of the videoconference software. As a result, the participants can view a much clearer image of the shared document. In one embodiment, a document shared in a conference is available for viewing by each of the clients.","The server component includes media transport server , which provides a multi-point control unit (MCU) that is configured to deliver participant customizable information. It should be appreciated that media transport server  and the components of the media transport server may include software code configured to execute functionality as described herein. In one embodiment, media transport server  is a component of a hardware based server implementing the embodiments described herein. Media transport server  includes media mixer , back-channel controller , and event handler . Media transport server  also provides conference connection . More specifically, conference connection A completes the link allowing the videoconferencing software, e.g., a peer-to-peer videoconferencing application, of conference client A to communicate with media transport server . That is, conferencing endpoint emulates another peer and performs a handshake with conference client A , which is expecting a peer-to-peer connection.","In one embodiment, media transport server  provides Multipoint Control Unit (MCU) functionality by allowing connections of separate participants into selectable logical rooms for shared conference communications. As an MCU, media transport server  acts as a \u201cpeer\u201d to a conference client, but can also receive calls from multiple participants. One skilled in the art will appreciate that media transport server  internally links all the participants of the same logical room, defining a multi-participant conference session for each room, with each peer-to-peer conference client operating with the media hub only as a peer. As mentioned above, media transport server  is configured to conform to the peer requirements of the associated conference client. For example, if the conference clients are using H.323 compliant conference protocols, as found in applications like MICROSOFT'S NETMEETING, media transport server  must also support the H.323 protocol. In other words, the conference communication can occur via H.323 protocols, Session Initiated Protocols (SIP), or other suitable APIs that match the participant connection requirements.","Still referring to , media mixer  is configured to assemble audio and video information specific to each participant from the combination of all participants' audio and video information, the specific participant configuration information, and server user-interface settings. Media mixer  performs multiplexing work by combining incoming data streams, i.e., audio\/video streams, on a per participant basis. In one embodiment, media mixer  includes a video layout processor and an audio distribution processor which assemble the conference signals. A client monitor-back-channel network allows media transport server  to monitor a user's interactions with conference client  and to provide the appearance that the peer-to-peer software application has additional functionality. The additional functionality adapts the peer-to-peer functionality of the software application, executed by conference client , for the multi-participant environment described herein. The client monitor-back-channel network includes client monitor , back-channel connection , back-channel controller , and event handler .","Back-channel connections -are analogous to a parallel conference in addition to conference channels -, respectively. Back-channel controllers (BCCs) -maintain the communication link from each associated client monitor. Protocols defined on the link are interpreted at media transport server  and passed to the appropriate destinations, i.e., other participant's back-channel controllers, event handler , or back to the CM . Each of the back-channel controllers -are in communication through back-channel controller communication link . Media management system , which is discussed in more detail below, communicates through the back channel network.","In one embodiment, media transport server  provides a client configurable video stream containing a scaled version of each of the conference participants. A participant's event handler  in media transport server  is responsible for maintaining state information for each participant and passing this information to media mixer  for construction of that participants user-interface. In another embodiment, a server-side user-interface may also be embedded into the participant's video\/audio streams. Further details on the architecture illustrated by  may be found in U.S. patent application Ser. No. 10\/192,080, filed on Jul. 10, 2002, and entitled \u201cMulti-Participant Conference System with Controllable Content Delivery Using a Client Monitor Back-Channel.\u201d","It should be appreciated that  represents one particular architecture for media transport server and the client component. It will be apparent to one skilled in the art that media transport server  may be based on any suitable architecture that includes the back-channel functionality. In addition, the client component may include any suitable client software configurations that enable a view of the videoconference session. The client software configurations may range from commercially available software packages, i.e., NETMEETING, to proprietary software configurations which may be downloaded to a client through a distributed network, such as the Internet. Thus,  represents one exemplary architecture that may be employed with the embodiments described below and is not meant to be limiting.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 2","FIG. 2","FIG. 1","FIG. 2","FIG. 1","FIG. 1"],"b":["130","134","150","130","150","122","122","150","134"],"i":["a","n "]},"Media management system  of  includes media management server . Media management server  includes web server module , meeting scheduling service module , annotation service module  and virtual pointer service module . In one embodiment, annotation service module  provides the functionality for a conference client to add annotation data during a videoconference session or view annotation data from a previously recorded videoconference session. Also included in media management system  is media analysis server , event database  and storage server . Media management server  manages and organizes the meeting, e.g., manages and organizes videoconference data for distribution among the participants of the meeting. Additionally, media management server  builds the database to manage the medias and allow the meeting participants to retrieve the media data from storage server . Media management server  also retrieves the information from media analysis sever  and any modules for media playback and presentation. The post-processing of the media data recorded during the meeting, i.e., videoconference session, is performed by media analysis server . Media analysis server  adds and retrieves information to event database  to store the information for the media presentation and playback.","Storage server  is responsible for storing the media generated during a videoconference session, which may include annotation data and virtual pointer data. For example, all sketches made during the meeting are captured and may be displayed as part of a meeting summarization. In one embodiment, the meeting summarization allows annotations to be viewed in the context of other events that take place during the meeting. In another embodiment, the annotation data will be stored on storage server  in vector format so that it can be scaled for display on devices of any output resolution. It should be appreciated that annotation data and virtual pointer data may be associated with a time stamp corresponding to an origination time in one embodiment.","As described with reference to , media transport server  handles the videoconference connections from the participants and combines the many incoming video and audio streams into a single output stream in the desired format for each participant\/client. During a videoconference session, media transport server  communicates with media management server , informing the media management server of such details as when participants connect or disconnect.","Web server module  enables the downloading of any software code needed for participating or viewing the videoconference session. Meeting scheduling service module  enables a user to set up or join a videoconference session. That is, a user that desires to set up or join a videoconference session may do so through a web browser that may download hyper text markup language (HTML) type pages provided through web server module . Once the user has joined the video conference session, software code may be downloaded from web server , e.g., software code related to client functionality after which the client begins communicating with media transport server . It should be appreciated that through meeting scheduling service module , media management server  connects to the appropriate media transport server to enable the video conference session. In another embodiment, since the video conference session is stored, upon completion of the video conference session a meeting summary may be created. The meeting summary may be accessed through web server . The meeting summary is an overview of the meeting that may be presented to a user so that the user may better decide whether to view the meeting, or what portions of the meeting to view. In one embodiment, the recording system described herein, is configured to provide an index associated with the videoconference session where captured events or annotation data are correlated to the recorded videoconference session. Thus, the recorded videoconference session may include this index, which is analogous to scene selections provided on DVD's of commercially available movies.","Media management server  is in communication with media analysis server . In one embodiment, media management server  retrieves the information from media analysis server  and associated modules for media playback and presentation. Media analysis server  is also in communication with event data base  and storage server . As mentioned above, media analysis server  performs the post-processing of the media recorded during the meeting and analyzes the media to build information to be used for media presentation and playback. Media analysis server  may also add and retrieve annotation information to event database . In one embodiment, the annotation information is identified through the insertion of indices and markers into the stored videoconference data, thereby enabling reconstruction of the stored videoconference data based upon the annotation information. It should be noted that a time stamp may be used as an index or marker. As used herein, annotation information may include virtual pointer information. Virtual pointer information may refer to mouse moves transmitted to media management server  and then distributed out to participants, so that each participant may view the mouse moving within the associated client display. It should be appreciated that annotation management information may be referred to as virtual ink. In another embodiment, the annotation information includes the data stored in event data base  as discussed below.","Storage server  of  is configured to store media associated with the videoconference. Storage server  is responsible for storing any suitable media utilized for the videoconference session. In one embodiment, storage server  contains storage devices, such as hard drives, magnetic tapes, and DVD-Rom, etc. Access to the stored media may be provided through a set of application programming interfaces (APIs) defined for accessing the media that may be retrieved from storage server  by other components in the system. In another embodiment, storage server  accepts network connections for users or participants of the videoconference to upload their medias. Exemplary mechanisms for uploading the medias to the storage server include: Simple transport control protocol\/Internet protocol (TCP\/IP) socket connection, hypertext transport protocol (HTTP) file upload protocol, simple object oriented access protocol (SOAP\/XML), and other suitable network transport protocols.","Event database  of  stores annotation events occurring during the videoconference session. Exemplary annotation events include the following events: the annotation start point, the annotation end point, an annotation clear page, the annotation data, user information associated with the annotation start and the annotation end, the annotation target, e.g., type of media, a target identifier, and other suitable annotation information.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 3","FIG. 3"],"b":["130","206","206","202","200","130","202","206","206","202","206","206","202","208","202"],"i":["a ","n ","a","n ","a","n "]},"Meeting sniffer  of , is configured to identify packets related to a video conference session and log the packets to a corresponding hard drive. Here, meeting sniffer  identifies the relevant packets according to predefined criteria. The predefined criteria may include a source internet protocol (IP) address, a destination IP address, a contributing source (CSRC) identifier, a packet type, and a port number. The identified packets are then delivered to corresponding real time protocol (RTP) files through . The corresponding RTP files through to which a packet is delivered is determined through the analysis of a CSRC reference. In one embodiment, the CSRC reference is a unique identifier to the source for a payload contained in a respective RTP packet. An exemplary configuration of a RTP packet header having a CSRC field is described below.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 4","b":"229"},"Field  of RTP header  indicates the RTP version number. Field  is a padding field that, if set, contains one or more additional padding bytes at the end of which are not part of the payload. Field , if set, indicates that the header is followed by exactly one header extension. Field  indicates a contributing source count (CC). Here, the four-bit field contains the number of contributing source identifiers that follow the fixed header. Field  represents a one-bit marker that is defined by a profile. This marker is intended to allow significant events, such as frame boundaries, to be marked in the packet stream. Field  contains the payload type (PT), which identifies the format of the RTP payload and determines its interpretation by the application. Field  identifies a 16-bit sequence number which increments by one for each RTP data packet sent. It should be appreciated that field  may be used by the receiver, e.g., the sniffer described herein, to detect data packet loss and to restore packet sequence. Field  represents a 32-bit time stamp that reflects the sampling instant of the first octet in the RTP data packet. In one embodiment, the sampling instant is derived from a clock at increments monotonically and linearly in time to allow synchronization and jitter calculations. As mentioned previously, the time stamp of the packet header may be used to correlate events into a recorded videoconference session and to create an index for the recorded video conference session.","Field  of  identifies the synchronization source (SSRC). This identifier may be chosen randomly with the intent that no two synchronizations sources within the same RTP session will have the same SSRC identifier. Field  identifies the contributing source (CSRC) for the payload contained in the RTP packet. As mentioned above, the number of identifiers in CSRC field  is provided by field . The CSRC identifiers are inserted by mixers, using the SSRC identifiers of the contributing sources. For example, for audio packets, the SSRC identifiers of all sources that were mixed together to create a packet are listed, allowing correct talker indication at the receiver.","Returning to , each video conference session may include four streams. These four streams represent two audio streams (audio up and audio down), and two video streams (video up and video down). In one embodiment, where the participants communicate through a server, such as a MCU, and each participant runs a videoconference session, then each session is associated with two video streams and two audio streams. The data within each of RTP files through is decoded through a corresponding decoder -, -, -, and -, as described in more detail with reference to . The corresponding audio streams - and - and video streams - and - are then merged into one stream through mixer\/composer . In one embodiment, an index is used to intelligently merge the audio and video streams into one single stream. This index may be provided through management server , which includes a time stamp associated with each of the segments of the audio and video streams. In another embodiment, this time stamp may correspond to the time stamp associated with an event stored in event data base . Here, an annotation event or any other suitable event, such as a participant leaving or entering the conference session, may be used to generate an index for play back control (PBC) purposes, as described below with reference to . The composite video\/audio stream  is then delivered to a compact disc\/digital versatile disc writer . Here, composite video\/audio data  is captured on a storage medium, e.g., a compact disc (CD) or digital versatile disc (DVD).","Meeting sniffer  has access to Ethernet bus , as does server . Because Ethernet hub  broadcasts all the network packets, all the Ethernet adapters connected to this bus will receive the packets on the bus, as long as the adapter driver is set to promiscuous mode. It will be apparent to one skilled in the art that server  may communicate with Ethernet bus  through a network interface card (NIC) of the server. In one embodiment, characteristics that are used to sniff all the packets for a video conference session matches the following criteria:","1. The destination host of the packet is server .","2. The packet is a RTP packet.","It should be a appreciated that packets having this criteria may be found by examining the packet header. Thus, the above criteria is used to filter the packet data on the network, so that data associated with the videoconference session is kept, while other data is discarded. Once a packet that matches the above criteria is received, the following pseudo code is executed:",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Retrieve the CSRC field that identifies the RTP connection."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if","(the retrieved CSRC exists in the hash table created) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Validate the RTP packet identifies a good connection."]},{"entry":[{},"If (valid) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Save the packet to the RTP file dump."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"} else {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Create a new RTP file."]},{"entry":[{},"Create a new entry in the hash table maps CSRC to RTP file."]},{"entry":[{},"Save the packet to the RTP file dump."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"Consume the packet"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"b":["1","2","1","2"]},"After a meeting in the MCU server finishes, meeting mixer composer  will initiate as an offline process while the meeting sniffer is a real time process. That is, when a meeting ends, an offline process initiates. Thus, there is no extra overhead incurred by server . Several RTP files through are created and saved for the videoconference meeting. In one embodiment, all of the audio RTP files - and - are decoded to a corresponding decoder to pulse code modulation (PCM) streams, while the video RTP files - and - are decoded by a corresponding decoder to YUV format frames. One skilled in the art will appreciate that the digitization of the analog audio\/video signals may be accomplished through a communications circuit, where the analog signal is digitized through a quantization process or other suitable digitization process known in the art through logic of the communications circuit.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 5","b":["214","210","210"],"i":["a ","b"]},"As mentioned above, the data from audio RTP files are decoded into PCM streams through audio decoder module  of . One skilled in the art will appreciate that audio decoder module  may be a communications circuit configured to generate the PCM streams from the corresponding RTP files. Each of the decoded audio streams - through - are then mixed through audio mixer module . It should be appreciated that each of audio streams - through - have the same time stamp. That is,  represents a snapshot where each audio stream - through - have a common time stamp. In essence, , represents the capture of the audio for each participant at a particular time point of the videoconference. Thus, meeting mixer\/composer  mixes the audio streams into single audio stream . Mixed audio stream  is then encoded through audio encoder module . In one embodiment, audio encoder module  encodes the audio as motion picture expert group (MPEG) audio file . It will be apparent to one skilled in the art that audio encoder  may encode the audio stream into any suitable format or standard and is not limited to the MPEG standard.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 6","FIG. 3"],"b":["214","210","210","260","260","262"],"i":["c ","d "]},"Still referring to , frame rate converter module  provides video frames - through - for mixing. Here, similar to the audio frames of , each video frame - through - have the same time stamp, as  also represents a snapshot of the mixing process. The time stamp of the video may be matched with the timestamp of the corresponding audio from , through audio information module  of . It should be appreciated that the audio information of audio information module  is developed from audio streams - through - of . Additionally, management server  may provide information for intelligently composing video frames - through -. For example, with reference to , event information stored in event database , which is accessed through management server , is provided to video composer . Thus, events such as a participant who changed a slide in the conference session corresponding to the time point, or a participant drawing the annotation, may be the main speaker. Other events include, when a participant joins the conference, when a participant leaves the conference, and any suitable annotation.","Video composer  of  may utilize this event information to cause the participant associated with the event to be displayed as the main speaker in a user interface of the recorded videoconference session. Here, the main speaker may be represented as the largest portion of a display for the frame relative to the other participants. For example, where there are four participants on the videoconference, the an image of the main speaker occupies half of the display, while the images of the remaining 3 participants occupy equal segments of the remaining half of the display. Of course, the main speaker may be highlighted or represented in some other suitable fashion to differentiate the main speaker from the other participants. In another embodiment, the main speaker may be identified through the analysis of the audio power for each of the participants, as enabled through audio information module . Here, the participant with the most powerful audio signal will be represented as the main speaker. Video composer  outputs video frame  according to the intelligent composition scheme described above. Composed video frame  is then encoded through video encoder module , which may be any suitable video encoder known in the art. Where video encoder module  is an MPEG video encoder, the resulting output from the video encoder is MPEG video file .",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 7","FIGS. 5 and 6","FIG. 2"],"b":["270","258","272","272","272","274","274","274","274","276","276","104","276","104","278","218"],"i":["a ","n ","a ","n "]},{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 8","FIGS. 5 and 6","FIG. 6"],"b":["280","282","284","286","288","290","288","292"]},"In summary, embodiments of the present invention enable the intelligent recording of a videoconference session. The use of a packet intercepting unit that discriminates between videoconference session data and non-videoconference session data and subsequently sorts the videoconference session data, avoids adding overhead to the host server. Thus, the videoconference session may be viewed from the computer readable media that the session is stored on. The integration of the meeting management server and the media analysis server enables the generation of composite audio\/video streams. It should be noted that the composite stream defined through the recording system has a higher resolution then the streams sent to the participants during the videoconference session. For example, where a video frame is composed of video data for four participants and each video from the participants has a resolution of 320\u00d7240, a resolution of 640\u00d7480 may be obtained on the combined frame of the four participants.","With the above embodiments in mind, it should be understood that the invention may employ various computer-implemented operations involving data stored in computer systems. These operations are those requiring physical manipulation of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. Further, the manipulations performed are often referred to in terms, such as producing, identifying, determining, or comparing.","The invention can also be embodied as computer readable code on a computer readable medium. The computer readable medium is any data storage device that can store data which can be thereafter read by a computer system. The computer readable medium also includes an electromagnetic carrier wave in which the computer code is embodied. Examples of the computer readable medium include hard drives, network attached storage (NAS), read-only memory, random-access memory, CD-ROMs, CD-Rs, CD-RWs, magnetic tapes, and other optical and non-optical data storage devices. The computer readable medium can also be distributed over a network coupled computer system so that the computer readable code is stored and executed in a distributed fashion.","Although the foregoing invention has been described in some detail for purposes of clarity of understanding, it will be apparent that certain changes and modifications may be practiced within the scope of the appended claims. Accordingly, the present embodiments are to be considered as illustrative and not restrictive, and the invention is not to be limited to the details given herein, but may be modified within the scope and equivalents of the appended claims. In the claims, elements and\/or steps do not imply any particular order of operation, unless explicitly stated in the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute part of this specification, illustrate exemplary embodiments of the invention and together with the description serve to explain the principles of the invention.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 7","FIGS. 5 and 6"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
