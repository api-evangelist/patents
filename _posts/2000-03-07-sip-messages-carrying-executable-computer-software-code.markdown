---
title: SIP messages carrying executable computer software code
abstract: Modifications to SIP (Session Initiation Protocol) are made which significantly extend the functionality of SIP. SIP messages are associated with computer software code such as Java byte code, Java applets or mobile autonomous software agents. SIP clients are arranged such that on receipt of a SIP message that has been associated with computer software code, that code is executed by a processor associated with the SIP client. In the case that Java applets are contained in a SIP message these are executed by a Java Virtual Machine associated with the SIP client. If a Java mobile agent is contained in the SIP message this executes on a Java Mobile Agent Virtual Machine associated with the SIP client. Preferably an indicator is put into the header of a SIP message to indicate that it has been associated with computer software code, and SIP clients are arranged to detect the presence of such indicators.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07743149&OS=07743149&RS=07743149
owner: Nortel Networks Limited
number: 07743149
owner_city: St. Laurent, Quebec
owner_country: CA
publication_date: 20000307
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application is the non-provisional filing of provisional applications Nos. 60\/171,777, filed Dec. 22, 1999 and 60\/171,801, filed Dec. 22, 1999.","1. Field of the Invention","This invention relates to a method communicating between a first and a second node in a communications network, each of the nodes comprising a SIP client. The invention also relates to a communications network node comprising a SIP client arranged to implementing the method, a computer program for controlling the communications network node and a communications network incorporating such a node. The invention also relates to a method of setting up a conference call between more than two parties using the method of communication.","2. Description of the Prior Art","Session initiation protocol (SIP) is used to set up communications sessions such as data or voice communication sessions between two SIP clients. SIP is a simple signalling protocol for Internet conferencing and telephony and details about SIP are available on the Internet at www.cs.columbia.edu\\\u02dchgs\\sip\\ and also in the document \u201cRequest for comments (RFC) 2543 SIP: Session Initiation Protocol\u201d Handley, et al. March 1999 available from the internet site listed above. As well as being used to set up communications sessions, SIP is also used to modify and terminate sessions with one or more participants. For example, these sessions may be Internet multimedia conferences, internet telephone calls and multimedia distribution. Communication between members of a session is via multicast or a mesh of unicast relations, or a combination of these. Using SIP, session descriptions that allow participants to agree on a set of compatible media types may be used. Also, user mobility is supported by proxying and redirecting requests to a user's current location. As well as this SIP is not tied to any particular conference control protocol. However, the standard SIP protocol only supports a limited set of functionality and this is a significant drawback.","Multimedia teleconferencing and other conference calls are a complicated service for an end user to use. Because of this complexity many conferences experience problems or interrupts as various users set up the calls incorrectly. Central manual operators are often required to set-up the calls and this is expensive.","It is accordingly an object of the present invention to provide a method of communicating between a first and a second node in a communications network where those nodes each comprise a SIP client, which overcomes or at least mitigates one or more of the problems noted above.","Modifications to SIP are made which significantly extend the functionality of SIP for example by allowing a service for automatically setting up multi-media conferences to be easily provided. SIP messages are associated with computer software code such as Java byte code, Java applets or mobile autonomous software agents. An example of a mobile autonomous agent is a Java mobile agent. This computer software code may be contained in the body of a SIP message or an address indicating where the computer software code is located is stored in the SIP message. SIP clients are arranged such that on receipt of a SIP message that has been associated with computer software code, that code is executed by a processor associated with the SIP client. For example, in the case that Java applets are contained in a SIP message these are executed by a Java Virtual Machine associated with the SIP client. If a Java mobile agent is contained in the SIP message this executes on a Java Mobile Agent Virtual Machine associated with the SIP client. In one example, such computer software code must always be executed by the processor associated with the SIP client before that SIP client carries out any other actions related to the SIP message. Preferably an indicator is put into the header of a SIP message to indicate that it has been associated with computer software code, and SIP clients are arranged to detect the presence of such indicators. An application programming interface is created in order that the computer software code may control the SIP client and\/or any processor associated with that SIP client. In one example, computer software code is associated with SIP messages in order that a service for automatically setting up multi-media conferences is provided.","According to an aspect of the present invention there is provided a method of communicating between a first and a second node in a communications network, each of said nodes comprising a SIP client, said method comprising the steps of:\u2014\n\n","This provides the advantage that the functionality of SIP is greatly increased. It is possible to associate computer software code such as Java applets or a Java Mobile Agent with a SIP message such that the code is executed by a receiving communications network node. For example, the code can be used to control the second node in order to provide services such as a service for automatically setting up a multimedia conference call.","Preferably said computer software code is added to the SIP message. This enables the code to be easily accessed by the second node.","Preferably, said step of associating computer software code with the SIP message comprises adding an address to the SIP message which indicates where the computer software is stored. This provides the advantage that the size of the SIP message is not greatly increased whilst at the same time allowing the second node easy access to the computer software code using the address.","Preferably the method described above further comprises the step of proceeding with any SIP process related to the SIP message. This provides the advantage that any SIP process related to the SIP message is not affected by the presence of the computer software code unless that code is intended to affect that process.","Advantageously, the second SIP client is arranged such that on receipt of a SIP message containing an indicator, the computer software code associated with the SIP message is executed by the second node before that second node carries out any other processes related to the SIP message. This provides the advantage that if the computer software code is designed to affect the SIP process associated with the SIP message, this is achieved.","According to another aspect of the present invention there is provided a communications network node comprising:\n\n","This provides the advantage that SIP messages that have been associated with computer software code in order to extend the functionality of SIP are received and the computer software code executed. This enables the extra functionality provided by the computer software code to be implemented.","According to another aspect of the present invention there is provided a computer program arranged to control a communications network node, said node comprising a SIP client and a processor, said computer program being arranged to control the node such that if a SIP message is received by the SIP client, any computer software code associated with the received SIP message is executed by the processor.","According to another aspect of the present invention there is provided a communications network comprising a plurality of communications network nodes each such node comprising:\n\n","This provides the advantage that a communications network capable of implementing the improved SIP protocol is provided.","According to another aspect of the present invention there is provided a method of setting up a conference call between two or more parties, each party comprising a SIP client and a host processor, said method comprising the steps of:\n\n","According to another aspect of the present invention there is provided a system for automatically setting up a conference call between two or more parties, each party comprising a SIP client and a host processor, said system comprising:\u2014a processor for associating computer software code with a SIP message and to send that SIP message to each of the parties; and wherein each of said host processors is arranged to execute the computer software code in use, when the SIP message is received. The system provides a means for automatically setting up conference calls such that attendees do not need to take complex actions to set up the call.","According to another aspect of the present invention there is provided a method of upgrading or replacing interconnected SIP clients each SIP client being associated with a host processor said method comprising the steps of:\u2014\n\n","According to another aspect of the present invention there is provided a method of testing members of a group of SIP clients each SIP client being associated with a host processor said method comprising the steps of:\u2014\n\n","According to another aspect of the present invention there is provided a method of forwarding a call from a first SIP client to a second SIP client, each of said SIP clients being associated with a host processor, said method comprising the steps of:\u2014\n\n","This provides the advantage that a call is quickly and efficiently forwarded in the event that the call is not answered at a first SIP client. This method can be extended for greater numbers of connected SIP clients, for example, so that if a call to a person in an office is not answered that call will automatically be forwarded to other terminals in the office until the call is answered.","Further benefits and advantages of the invention will become apparent from a consideration of the following detailed description given with reference to the accompanying drawings, which specify and show preferred embodiments of the invention.","Embodiments of the present invention are described below by way of example only. These examples represent the best ways of putting the invention into practice that are currently known to the Applicant although they are not the only ways in which this could be achieved.","The term \u201cSIP Client\u201d is used to refer to a computer program that is arranged to control a communications network node such that it is able to send SIP messages such as SIP request messages. The computing platform that the SIP client runs on is referred to as a \u201chost system\u201d. The communications network node either comprises the host system or is associated with the host system.","The term \u201cJava virtual machine\u201d is used to refer to a processor which is arranged to execute Java applets or Java byte code.","The term \u201cmobile autonomous software agent\u201d is used to refer to a computer program that is able to halt itself and move itself from a first processor to another processor that is connected to the first processor for example by a communications network. The computer program is referred to as being autonomous because it is able to \u201cdecide\u201d where to move and what it will do independently of external requests. An example of a mobile autonomous software agent is a Java mobile agent. Details about Java mobile agents are given in the article, \u201cUnder the Hood: The architecture of aglets\u201d, by Bill Venners, JavaWorld April 1997 the contents of which are incorporated herein by reference.","By extending the SIP protocol increased functionality is provided. SIP messages are modified to carry computer software code such as Java applets or to carry an address such as an universal resource locator (URL) indicating where computer software code is stored. An application programming interface (API) is also defined which allows the computer software code to interact with a receiving host system: SIP clients are also modified in order that they execute the computer software code associated with the SIP messages before any other actions are taken as a result of receipt of the SIP message.",{"@attributes":{"id":"p-0043","num":"0064"},"figref":"FIG. 1","b":["1","10"],"ul":{"@attributes":{"id":"ul0015","list-style":"none"},"li":{"@attributes":{"id":"ul0015-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0016","list-style":"none"},"li":["a SIP client ;","an input  arranged to receive SIP messages which may be associated with computer software code; and","a processor  arranged such that in use, when a SIP message is received, any computer software code associated with that SIP message is executed by the processor. This processor is provided by the host system and may comprise a Java virtual machine or any other suitable processor. These communications network nodes are referred to as enhanced SIP nodes because they are arranged to allow the enhanced SIP process to work.\n\nThe communications network of  is used in conjunction with the method illustrated in  in order to implement the enhanced SIP process.  is a flow diagram of a method of communicating between a first and a second node in a communications network, each of said nodes comprising a SIP client, said method comprising the steps of:\u2014\n","associating computer software code with a SIP message (box  in );","sending the SIP message from the first SIP client associated with the first node to the second SIP client associated with the second node (box  in ); and","executing the computer software using the second node (box  in )."]}}}},"For example,  illustrates an example of how a plurality of enhanced SIP clients , , , ,  interact. Each SIP client is supported on a communications network node (not shown). SIP client A  is connected to SIP client B  via a communications link  and SIP client B  is connected to both SIP client C  and SIP client D  via communications links . SIP client B  has a host system  which comprises a Java virtual machine. SIP client D  is also connected to SIP client E via a communications link. SIP client D and has a host system  which comprises a Java mobile agent virtual machine and SIP client E  also has a host system   which comprises a Java mobile agent virtual machine .","Using the enhanced SIP protocol, computer software code such as Java applets are associated with a SIP message . That is, the computer software code may be added to the SIP message body itself or may be stored separately and an address of the storage location added to the SIP message. It is not essential to use Java applets or Java mobile agents; any other suitable computer software code may be used. The message  is sent from SIP client A  to SIP client B . SIP client B detects the presence of the Java applets (or other computer software code) associated with the SIP message  and executes these Java applets using its Java virtual machine  (or other type of host processor).","Any suitable method of detecting the presence of computer software code associated with the SIP message  may be used. For example, an indicator may be placed in the header of the SIP message  and the SIP client  arranged to detect that indicator and associate it with the presence of computer software code. An example of such an indicator in a SIP message is described in more detail below.","By executing the Java applets, two new SIP messages ,  are created one of which  contains a Java mobile agent and the other which does not. This is just one example of a something that the computer software code associated with the SIP message could do. For example, the computer software code could also be arranged to modify existing SIP messages, delete existing SIP messages, generate SIP messages, receive SIP messages or to control the SIP client and\/or the host processor to perform any other suitable function. The computer software code is arranged to interact with the host processor via an API as described below. Security restrictions may be enforced by the SIP client and or host system in order to limit the actions that any software code associated with a SIP message is able to effect. More detail about these security restrictions is given below.","The executed Java applets then cause SIP client B  to send one of the created messages  to SIP client D  and the other  to SIP client C . The message  sent to SIP client D contains a Java mobile agent (or other computer software code or an address of computer software code). If SIP client D has the capability to execute the Java mobile agent contained in message  then SIP client D does so. However, if SIP client D does not have this capability, for example, if SIP client D has no Java mobile agent virtual machine, then SIP client D simply follows the standard SIP procedure for unsupported require extensions. This involves returning an error message to SIP client B, indicating that the Java applet in message  was not executed.","In the meantime, SIP message  which is not associated with any computer software code, is sent to SIP client C  and any SIP process associated with that message  is carried out following the standard SIP protocol.","In this example, SIP client D does have an associated Java mobile agent virtual machine  and so when message  arrives, the Java mobile agent in message  begins to execute on this processor. At some point in the execution, the Java mobile agent suspends itself and includes itself in SIP message  which is sent to SIP client E. This is one example of a process that may occur by incorporating a Java mobile agent into a SIP message.","In the enhanced SIP protocol described herein, standard SIP messages are modified by associating computer software code with them as described above. For example, one or more Java applets or Java mobile agents are stored in a multipart MIME section in the body of a SIP message or a URL indicating where the Java applets or Java mobile agents are stored is added to the SIP message.","In some examples, an indicator is added to the SIP message header, in order to indicate that computer software code is associated with that SIP message. For example, a \u201cRequire request-header\u201d is used to indicate that Java enhanced SIP must be supported to process a SIP message that is associated with Java applets or Java byte code. This require request header is the same as the header for a standard SIP message except that the content type field in the entity header is used to indicate that the content type is a Java applet or the URL of a Java applet which must be retrieved. Also, the require field of the request-header is used to specify that Java enhanced SIP must be supported to process the message concerned.",{"@attributes":{"id":"p-0053","num":"0080"},"figref":["FIG. 4","FIG. 4","FIG. 4"],"b":["40","41","42","43","44"]},{"@attributes":{"id":"p-0054","num":"0081"},"figref":"FIG. 5","b":"50"},"The SIP clients used to implement the improved SIP protocol are the same as standard SIP clients except that they are arranged to do the following things:\n\n","The SIP client's host processor is modified as compared to a standard SIP client's host processor in that it must comprise a processor of a specific type. For example, a Java virtual machine in the case that Java applets are associated with the improved SIP messages. In the case that Java mobile agents are used, a Java mobile agent virtual machine is required. Also, the SIP client's host processor has access to or comprises an API to allow the computer software code associated with the improved SIP messages to interact with the SIP client. For example, in the case that Java applets are used, the SIP client's host has access to a set of Java classes or applets that are defined in a Java enhanced SIP API. This API allows access into the SIP client to allow SIP messages to be built and sent subject to security restrictions. Using the API received Java applets or Java mobile agents are able to generate and receive SIP messages using the receiving SIP client.","Passing of Control Between the Computer Software Code Associated with Improved SIP Messages and the SIP Client Concerned","In the case that standard SIP messages are used, these are processed by SIP clients in the standard way and control remains with the SIP clients. However, in the improved SIP case described herein, any computer software code associated with a SIP message takes precedence over other standard SIP processes associated with the SIP message or with any other SIP messages received by a SIP client during processing of the computer software code.","For example, the computer software code associated with a SIP message can be arranged to initiate a SIP session and to wait for a SIP response before proceeding. During this waiting period, control remains with the computer software code. The computer software code is able to specify that it will go to sleep and wait for the next SIP message which matches a particular pattern. In that case, the SIP client does no other actions during the sleep period. Alternatively, the computer software code can deal with any other incoming SIP messages itself during the sleep period. Thus control does not pass back to the SIP client until the computer software code wants it to even if SIP messages from other sessions are arriving.","Application Programming Interface (API)","As described above an API is specified in order that the computer software code associated with improved SIP messages is able to affect the SIP client. For example, this API allows a received Java applet or Java mobile agent access to the SIP messaging functions on the SIP client.","Examples of methods that the API supports comprise\n\n","Following standard SIP as defined in \u201cRequest for comments (RFC) 2543 SIP: Session Initiation Protocol\u201d, SIP proxy and redirect servers must ignore features that are not understood. That is, if a SIP proxy or redirect server is not arranged to understand the improved SIP messages described herein then it must ignore features of those messages that are not common to standard SIP. A SIP proxy server is a communications network node which communicates using the SIP protocol on behalf of other parties. A SIP redirect server is a communications network node which receives SIP messages and directs these to another communications network node. If a particular extension to the standard SIP protocol requires that intermediate devices support it, the fact that the extension is being used must be tagged in the proxy-require field as well (see section 6.28 of the SIP RFC mentioned above). Thus for the improved SIP described herein, an indicator is placed in the proxy-require field to specify that the improved SIP is being used.","Security","Preferably, security mechanisms are incorporated in to the improved SIP protocol although this is not essential. For example, a host system which supports a SIP client preferably comprises security mechanisms for controlling the activity of software code such as Java applets or Java mobile agents received as a result of the improved SIP messages. These security mechanisms may be configured by a user or operator, for example, to always allow or prevent certain operations from being carried out by Java applets or Java mobile agents received from improved SIP messages. The user may datafill a matrix of SIP operations against security mechanism actions. It is also possible for the security mechanism to prompt the user to ask for permission to proceed with certain actions. The security mechanisms are put into effect by a security manager which takes the form of a computer software application located at each SIP client. Preferably, all the methods specified in the API are arranged to check with the security manager at the SIP client concerned before proceeding with the rest of that method. In the case that Java byte code, Java applets or Java mobile agents are used, then the security mechanisms are preferably designed to conform to the standard Java security practices.","An example of an algorithm for a security mechanism is:\n\n","Using the improved SIP protocol a conferencing service is created whereby a single chairperson is able to set up the conference by sending out SIP INVITE messages. The method is suitable for multimedia conferences. The INVITE messages are associated with computer software code which executes on the host machines of invited attendees to set up the conference call. This greatly simplifies the process of setting up a conference call such as a multimedia conference call.","For example, the computer software code associated with the improved SIP INVITE messages can be arranged to set up connections from each attendee's machine to several video sources and to an electronic whiteboard to be shared for the meeting. The computer software code can also be arranged to start up a web browser to a page relevant to the meeting on each attendee's machine. As well as this the computer software code is able to set up all the audio paths between all the parties with everyone but the chairman initially on mute. As well as this the computer software code is able to take into account different capabilities of individual attendee's host machines. For example, a particular attendee such as a mobile caller may only have audio capabilities whilst a full multimedia caller may have audio, video, data and web capabilities. In order that these capabilities are taken into account, attendee's indicate what their capabilities are in SIP messages as required.","The multimedia conferencing service is particularly advantageous from the attendee's point of view. All the attendee has to do is to accept the incoming call and SIP INVITE message and everything will be set up for them automatically. Alternatively, the attendee may call a conference number and receive a SIP message in reply which is associated with the required computer software code. The conference number may be the number of a particular user client or of a central conference service provider.","Preferably security mechanisms are used in the multimedia conferencing service as described above.",{"@attributes":{"id":"p-0069","num":"0119"},"figref":["FIG. 6","FIG. 6","FIG. 6","FIG. 6"],"b":["60","61","62"]},"The Java applet(s) query the exact capabilities of the user's SIP client and host machine and taking these capabilities into account, initiate SIP sessions for any audio, video and data streams associated with the conference as appropriate given the capabilities (box  of ). Depending on how the user has his or her security mechanisms set he or she may be prompted before the sessions are set up for the various media streams. When the Java applet(s) initiate the SIP sessions (box  of ) they may also be arranged to set up these SIP sessions such that all the attendees except for a chairperson are on mute. This is particularly advantageous, because the chairperson is then easily able to announce the beginning of the meeting and to chair the meeting in an organised fashion.","The Java applets(s) may also be arranged to forward details of a web page from each attendee to a chairperson or to the conference service system. For example, a web page giving biographical details of each attendee may be forwarded to a chairperson who then makes these available to each other attendee. In a similar manner, digital photographs of each attendee may be forwarded to the chairperson by the Java applets. It is also possible for the Java applets to request a joining message from each attendee which is then forwarded to a chairperson automatically by the Java applets. This joining message may contain security requirements specific to each attendee.","Depending on the number of parties to the conference, a conferencing bridge facility may be used as is known in the art. Alternatively, a software based technique is used to connect the parties to the conference.","An example of an algorithm that is encoded in the Java applet(s) of the method described immediately above is:\n\n",{"@attributes":{"id":"p-0074","num":"0130"},"figref":"FIG. 7","ul":{"@attributes":{"id":"ul0026","list-style":"none"},"li":{"@attributes":{"id":"ul0026-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0027","list-style":"none"},"li":["associating computer software code with a SIP message (box  of );","sending the SIP message to each of the parties (box  of );","executing the computer software code at each of the host processors (box  of )."]}}}},{"@attributes":{"id":"p-0075","num":"0134"},"figref":"FIG. 1","b":["10","11","13","13","10","13"]},"In the case that a conferencing system is used, this system sends the SIP messages to each party as a result of request calls from those parties to the system. In the case that a chairperson sets up the call, then the chairperson sends the SIP messages to each party.","Hunt Group System","An example of the use of improved SIP with Java mobile agents is now described. In this example, a service is provided whereby an automated system calls several telephones within a defined group (such as a team in an office) until one of those telephones is answered. For example, the nodes of the communications network in  may each provide a telephone implemented by software in the SIP clients . Each telephone within the group  comprises a SIP client  and a host processor  as illustrated in  and the telephones are connected to one another via a communications network  as shown in . The host processors each comprise a Java mobile agent virtual machine.","A user, which may be an automated service or a human using a terminal connected to the communications network , telephones one of the telephones  within the defined group. If the called telephone is not answered after a specified number of rings or an elapsed time, then software at the SIP client  of the called telephone creates a Java mobile agent, associates this with a SIP message, and sends the SIP message to a predefined second SIP client. This second SIP client is one of the telephones within the defined group .","The second SIP client receives the SIP message which is associated with the Java mobile agent. The Java mobile agent then executes itself on the Java mobile agent virtual machine associated with the second SIP client. The Java mobile agent is arranged to apply ringing to the second telephone and queries the second telephone's identification details and sends these back to the original caller. If the caller is using a host processor that has a display system associated with it, then information about the call and the fact that it has been forwarded to the second telephone in the defined group is sent by the Java mobile agent to this display.","If the second SIP client does not answer after a specified number of rings or time then the second SIP client repeats the method that the first SIP client carried out as described above. However, the second SIP client incorporates information about the fact that the call has been forwarded again.","After the method has been repeated a pre-determined number of times and if the call is not answered, then the call is sent back to the first SIP client that was called. A display of the route taken and the fact that the call was not answered is made at the first SIP client if a display is available.","If the call is answered, information about the route taken and the identity of the answering SIP client is sent back to the caller which may be an automated service.",{"@attributes":{"id":"p-0083","num":"0142"},"figref":"FIG. 10","ul":{"@attributes":{"id":"ul0028","list-style":"none"},"li":{"@attributes":{"id":"ul0028-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0029","list-style":"none"},"li":["receiving a call at the first SIP client and if that call is not answered then associating computer software code with a SIP message said computer software code being arranged to forward a call (box  );","sending the SIP message from the first SIP client to a specified second SIP client (box  ); and","executing the computer software using the host processor associated with the second SIP client such that the call is forwarded to the second SIP client (box  ).\n\nClient Test System\n"]}}}},"Another example of the use of Java mobile agents with improved SIP involves a test system for a pre-defined group of SIP clients. For example, the network of SIP clients shown in . The SIP clients  are connected to one another to form a communications network  as illustrated in . Each SIP client  is associated with a host processor  which comprises a Java mobile agent virtual machine.","A test system (for example, software located at one of the nodes  in the communications network ), which may be an automated software service, creates a Java mobile agent, associates this with a SIP message, and sends that SIP message to one of the SIP clients  in the group. The Java mobile agent executes on the receiving SIP client and sets up one or more test sessions. The results of these test sessions are stored by the Java mobile agent in its private data, together with any other required information. The Java mobile agent then associates itself with another SIP message and arranges that this SIP message be sent to another SIP client in the group. When the SIP message reaches another SIP client the process of obtaining information is repeated so that more information is added to the Java mobile agent's private data. Another SIP message is used to send the Java mobile agent on to another SIP client and so on, until all the SIP clients in the group have been visited. Once all the SIP clients in the group have been visited by the Java mobile agent, this agent associates itself with a SIP message in order to be sent back to the originating SIP client. The Java mobile agent may also be arranged to initiate other actions to fix any faults that it finds as it finds them.",{"@attributes":{"id":"p-0086","num":"0148"},"figref":"FIG. 9","ul":{"@attributes":{"id":"ul0030","list-style":"none"},"li":{"@attributes":{"id":"ul0030-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0031","list-style":"none"},"li":["associating computer software code suitable for said testing with a SIP message (box  );","sending the SIP message one of the SIP clients (box  );","executing the computer software at the host processor associated with that SIP client in order to obtain test results (box  ); and","repeating steps (ii) to (iii) for each of the other SIP clients in the group (box  ).\n\nUpgrade or Replacement of SIP Clients\n"]}}}},"Consider a situation in which it is required to upgrade or replace SIP clients which support the improved version of SIP described herein. This may be carried out automatically as follows:","The software for the upgrade or new SIP client is associated with a SIP message, for example, by building the software into a Java applet and adding this applet to a SIP message. This SIP message is then sent to all the SIP clients which are to be upgraded or replaced. On receipt of the SIP message at a SIP client, the existing SIP client runs the software code in order to effect the upgrade or replacement. The extent to which the upgrade or replacement is effected depends on the security specifications and the type of SIP client. By using the improved SIP protocol in this way, upgrades or replacement of a plurality of SIP clients is achieved quickly and easily.",{"@attributes":{"id":"p-0089","num":"0155"},"figref":"FIG. 8","ul":{"@attributes":{"id":"ul0032","list-style":"none"},"li":{"@attributes":{"id":"ul0032-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0033","list-style":"none"},"li":["associating computer software code suitable for said upgrade or replacement with a SIP message (box  );","sending the SIP message to each of the SIP clients (box  ); and","executing the computer software at each of the host processors (box  )."]}}}},"A range of applications are within the scope of the invention. These include situations in which it is required to communicate between entities using an improved SIP protocol. For example to enable multimedia conferences to be set up automatically with minimum input from attendees, to carry out an automated test of several nodes in a communications network, or to provide a service whereby if a call is not answered, the call is forwarded automatically to other members of a specified group. Another example concerns third party call control whereby a third party sets up a communication session on behalf of two other parties. The third party may be an automated service such as a web page. For example, a software service may be arranged to monitor stock prices and be arranged such that when a threshold price is reached a communication session between a subscriber and his or her stockbroker service is set up. In such an example, Java applets or other software code associated with improved SIP messages may be used to prepare forms or other documents to request sale or purchase of stocks."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0028","num":"0049"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0029","num":"0050"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0030","num":"0051"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0031","num":"0052"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0032","num":"0053"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0033","num":"0054"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0034","num":"0055"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0035","num":"0056"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0036","num":"0057"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0037","num":"0058"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
