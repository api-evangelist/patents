---
title: Systems and methods for automated retrieval, monitoring, and storage of online content
abstract: Systems and methods for automated retrieval, monitoring, and storage of online digital content, wherein such content includes source code and files for hosting websites, audio files, video files, data files, system files, image files, or any other content that is typically stored in third party servers. A content retrieval system hosted on a physical server or a cloud continuously monitors user data hosted on a third party server for changes to the data. The method involves creation of an index list that is updated periodically to keep track of changes to the metadata associated with the user's content. Such an approach saves time and valuable resources to individuals and/or organizations enabling them to perform periodic monitoring of their data, and enabling rollback to a previous version of their data whenever needed. The system additionally monitors user content for malicious attacks and hacks, and provides notification alerts relating to the same.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09069885&OS=09069885&RS=09069885
owner: CodeGuard, Inc.
number: 09069885
owner_city: Atlanta
owner_country: US
publication_date: 20111123
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION OF DRAWINGS"],"p":["This application claims benefit under 35 U.S.C. \u00a7119(e) of U.S. Provisional Patent Application No. 61\/417,371, filed Nov. 26, 2010, and entitled \u201cWebsite File Monitoring and Version Control System\u201d, which is incorporated herein by reference as if set forth herein in its entirety.","The present disclosure relates generally to systems and methods involved in the automated retrieval and storage of online digital content, particularly related to systems and methods for the retrieval, monitoring, backup, and storage of online digital content, wherein such content exemplarily includes source code and files for hosting websites, audio files, video files, data files, system files, image files, or any other types of content that are typically stored in third party servers.","Many organizations, corporate entities and private individuals make use of automated backup systems to backup and store data. Such automated backup systems are usually offered by third party providers as periodic backup services either for free or, a one time service charge, or sometimes a periodic fee charged weekly, monthly or yearly. Data stored in the backup systems can help in restoring individual files, folders, or even the entire system in the event the original copy of the data becomes corrupted, lost, unreliable, or is unavailable for any other reason. Such events can be the result of intentional malicious hacking attacks by hackers, or, even unforeseen system crashes. In many scenarios, data stored in backup systems is shared (e.g., software code) and reused by developers and technical persons who utilize backup systems to access a current version or a previous version of the stored data.","For performing backups, most conventional backup systems retrieve a current working version of the data and store the data in its entirety. In other words, if a backup system performs an hourly backup of a website, then the backup system stores a complete working version of the website every hour. However, this approach is disadvantageous because it can easily lead to large amounts of data being stored in the backup systems, and thus necessitates continuously increasing backup storage space.","In several scenarios, version control software (also called revision control systems) such as GIT, APACHE SUBVERSION, other open source software programs are used for performing backups. These software programs allow management and systematic tracking of changes (revisions) to data including documents, source code and other information stored as computer files. Changes are usually identified by a number and\/or letter code combination, wherein such a combination is termed as a \u201crevision number\u201d, \u201crevision level\u201d, \u201ccommit id\u201d, or simply \u201crevision\u201d. For example, an original first version of file a might be called \u201crevision 1\u201d. After a first set of changes are made and saved, the resulting version might be termed as \u201crevision 2\u201d, and so on. Each revision is generally associated with a timestamp and a username of the person making the change. Version control software can be used to identify differences between two versions, restore a present version to a previously stored version, and with some types of files, two versions can even be merged.","Notwithstanding the aforementioned benefits, most version control software programs cannot perform manipulations and comparisons on metadata associated with the user's data. Thus, version control software programs perform a complete backup of the end user's data, every time a change in user's data is identified. Further, even most data storage providers (third party storage providers) who merely offer storage space also perform a complete backup of the end user's data, every time a backup is performed. Furthermore, most third party storage providers (such as website hosting providers) utilize graphical user interfaces and sophisticated automation tools designed to allow end users with several options and features associated with hosting a website. However, such graphical user interfaces and automation tools can be quite complicated and even cumbersome, and usually differ from one third party storage provider to another. Additionally, most website owners use publishing platforms such as WORDPRESS\u2122 to create blogs and websites. Such platforms periodically release software updates, and it is typically the expectation of third party storage providers or website storage providers that website owners install updates when they are released, or deal with the consequences otherwise\u2014which unfortunately can be somewhat dire for small and medium-sized businesses, e.g., once a website site has been hacked, traffic drops and revenue drops.","Therefore, there is a long-felt but unresolved need for a streamlined system or method that allows in automated retrieval and storage of online digital content, wherein such content is owned by users (businesses and individuals) and is stored on third party storage providers. If the user's data relates to website hosting data, then the retrieval process provides the ability to rollback to a previous version of the website, whenever needed. In order to make optimum use of storage space, a preferred retrieval process saves data only when a change is detected in the user's data. Further, the system should notify webmasters, system administrators, website owners, and\/or other relevant persons when changes are detected in the retrieved data. An ideal retrieval process should not consume too much time, and should be able to be performed easily by individuals with minimal technical skills, and further can be repeated more than once, as necessary. Also, the system should allow users to setup multiple user accounts to retrieve and backup data relating to multiple websites, wherein the data can be stored at the same or different third party storage providers. Additionally, the system performing the retrieval should periodically ascertain the \u201chealth\u201d and reliability of the retrieval data, e.g., whether the data has been exposed to phishing or malware activities. In the event a hack or an unauthorized change is detected, webmasters can quickly revert to the last known \u201cgood\u201d version and have their site working in minutes without engaging a developers to remediate the issue.","Briefly described, and according to one embodiment, aspects of the present disclosure generally relate to systems and methods for the automated retrieval, monitoring, and storage of online content stored in third party servers, using an embodiment of a Content Retrieval System (CRS) that is hosted on a computer server at a physical location or virtually. Aspects of the present disclosure include providing individuals and\/or organizations the ability to retrieve previously stored versions of data, and perform automated periodic monitoring of their data via the CRS. User's data (user's content) monitored by the CRS include user's content such as source code, files for hosting websites, audio files, video files, data files, system files, image files, or any other content that is typically stored in third party servers.","Aspects of the present disclosure include a monitoring process during which the CRS scans a current version of the user's data stored on the third party servers, and the last stored version of the data in the CRS, for changes. Specifically speaking, and according to one aspect, the CRS detects changes by comparing metadata associated with the user's data. According to another aspect, and as will be discussed in greater detail herein later, changes in metadata are indicated in an index list that is created by the CRS. In the event that one or more changes are detected in the metadata, the CRS creates the index list, and saves the changes incrementally within an exemplary CRS database. Additionally, the CRS also saves the index list (in an exemplary CRS database) for use in a subsequent monitoring process. According to one aspect, the CRS notifies webmasters, system administrators, website owners, and\/or other relevant persons when changes are detected in the user's contents. In an exemplary aspect, the CRS additionally provides summary reports (and related analytics) of the detected changes via email, text messages, MMS, etc.","These and other aspects, features, and benefits of the claimed invention(s) will become apparent from the following detailed written description of the preferred embodiments and aspects taken in conjunction with the following drawings, although variations and modifications thereto may be effected without departing from the spirit and scope of the novel concepts of the disclosure.","For the purpose of promoting an understanding of the principles of the present disclosure, reference will now be made to the embodiments illustrated in the drawings and specific language will be used to describe the same. It will, nevertheless, be understood that no limitation of the scope of the disclosure is thereby intended; any alterations and further modifications of the described or illustrated embodiments, and any further applications of the principles of the disclosure as illustrated therein are contemplated as would normally occur to one skilled in the art to which the disclosure relates.","Aspects of the present disclosure relate to systems and methods for automated retrieval, monitoring, and storage of online content stored in third party servers, using an embodiment of a Content Retrieval System (CRS). Additionally, aspects of the present disclosure include providing individuals and\/or organizations the ability to retrieve previously stored versions of data, and perform automated periodic monitoring of their data by the CRS. Data monitored by the CRS includes user's content such as source code, files for hosting websites, audio files, video files, data files, system files, image files, or any other content that are typically stored in third party servers. Aspects of the present disclosure include a monitoring process during which the CRS scans a current version of the user's data stored on the third party servers, and the last stored version of the data in the CRS, for changes. Specifically speaking, and according to one aspect, the CRS detects changes by comparing metadata associated with the user's data. According to another aspect, and as will be discussed in greater detail herein later, changes in metadata are indicated in an index list that is created by the CRS. In the event that one or more changes are detected in the metadata, the CRS creates the index list, and saves the changes incrementally in an auxiliary storage space associated with the CRS. Additionally, the CRS also saves the index list (in an exemplary CRS database) for use in a subsequent monitoring process. According to one aspect, the CRS notifies webmasters, system administrators, website owners, and\/or other relevant persons when changes are detected in the user's contents. In an exemplary aspect, the CRS additionally provides summary reports (and related analytics) of the detected changes via email, text messages, MMS, etc.","According to an aspect, the CRS periodically monitors the user's content (stored in the third party servers) for phishing or malware activities. In the event a hack or an unauthorized change is detected, webmasters or website owners or system users can retrieve a previously stored version of the data stored in the CRS, and use that data for partial restoration or complete restoration, as needed.","Referring now to the figures,  illustrates an overview  of an embodiment of a content retrieval system (CRS)  in an exemplary environment, constructed and operated in accordance with various aspects of the present disclosure. According to one embodiment, system users, or simply, users  store their data on servers owned and operated by Third Party Content Storage . It will be understood that Third Party Content Storage  includes website hosting providers, Internet Service Providers (ISPs), or any other system that hosts and\/or stores data belonging to system users. It will be further understood that system users include individuals who own data, webmasters or system administrators of organizations, or any other persons who store and have access to their data on Third Party Content Storage . Users typically establish a user account with user credentials by registering with a Third Party Content Storage . For purposes of this disclosure, the term \u201cthird party servers\u201d is considered generally synonymous with Third Party Content Storage .","According to one embodiment of the present disclosure, a CRS  is used to perform automated retrieval, monitoring, and backup of the content (data of system users ) hosted in Third Party Storage . According to another embodiment, a CRS  comprises a Content Retrieval Manager  and a CRS database . As will be described in greater detail later herein, and in one exemplary aspect, the Content Retrieval Manager  is a software module (or, collection of software modules) that retrieves and monitors user's data stored in Third Party Storage  for intentional and unintentional changes in user's data. According to an embodiment of the present disclosure, exemplary attributes relating to the user's data such as (by way of example) a network address of the third party servers, a time corresponding to a most recent modification of the user's data, metadata associated with the user's data, and various other types of information are stored in the CRS database . For example, a data table showing various attributes (stored in CRS database ) relating to a user's website (data) belonging to a system user, is displayed in .","Typically, communication between users' computers\/computing devices and the Third Party Storage  proceeds through a network  using a service such as a Web-deployed service with client\/service architecture, a corporate Local Area Network (LAN) or Wide Area Network (WAN), the Internet, or through a cloud-based system. Further, as will be understood and appreciated, various networking components like routers, switches, hubs etc., are typically involved in communication between users' computers\/computing devices and Third Party Storage . Although not shown in , it can also be further understood that such communication may include one or more gateways\/firewalls that provide information security from unwarranted intrusions and cyber attacks.","As shown in , a system user  accesses his or her data stored in Third Party Storage  and makes changes to the data. Exemplarily speaking, a 1st version of the data, A is changed into a 2nd version, B after the user makes changes. According to a specific example as shown, A is a data folder comprising a folder called Folder1, and a file called sample.doc. Further, it is also shown that the contents in Folder1 were last modified on 10-29-2011 at 10:00 AM, and the contents of sample.doc were last modified on 10-30-2011 at 12:30 PM.","As shown and according to one aspect, system users  (or webmasters\/system administrators affiliated with third party servers) provide a user's access credentials to the CRS  and thereafter the CRS  accesses the Third Party Storage  (remotely over networks ) using such credentials. It will be understood that the first time the CRS  accesses the user's data, it stores the user's data in a CRS database  or in an auxiliary storage . According to one aspect, auxiliary storage  includes secondary storage that is external to the CRS, and can even involve data storage units available commercially from data storage providers. Subsequently the system user  makes changes to the user's data A, for example, the contents of the sample.doc file. Consequently, and as shown, the user's current data B comprises folder1 (which is unchanged from its previous A version) and a modified sample.doc file that was last modified on 10-31-2011 at 1:00 pm. As will be understood, the CRS  periodically monitors the user's data on Third Party Storage , and hence, detects changes in the data. Such monitoring can be performed every day, every other day, hourly, or at any other predetermined time interval.","According to one aspect, the CRS  creates an index list (discussed in greater detail in ) based on the metadata associated with the A and B versions of the user's data. This way of tracking changes in the user's data using the associated metadata facilitates in optimum usage of storage space and bandwidth. As will be understood, during a subsequent periodic monitoring phase, the CRS  uses the pre-stored index list to determine whether or not changes have occurred to the user's content. For example, the index list identifies changes to names of files, types of files, times when files were modified, etc.","It will be understood that the aforementioned index list provides the advantage of detecting changes easily. In other words, the metadata information in the index list allows the CRS  to determine quickly and with minimal resources whether or not changes have occurred to the user's content, as opposed to comparing the content in two revisions line by line, which as will be understood, is time and resource intensive.","If one or more changes in the metadata are detected, then according to one aspect, the CRS  retrieves content corresponding to metadata that has undergone changes. Then, the CRS  applies version control software (for example, GIT\u2122) to create a compressed repository comprising the incremental differences of the content between the most recently pre-stored version (in CRS ) and a current version of the user's data. In one example, the incremental differences of the contents in A and B are backed up by the CRS and stored as a compressed repository (archive) in an auxiliary storage database . As will be understood and appreciated, most conventional version control software programs maintain an automated list of changes that have occurred within every revision and a location (on disk) pointing to the last unchanged version of the file. Such a list, in conjunction with the compressed archives generated by the CRS , can be used to restore a current version to a previously stored version of the user's data. According to one exemplary aspect, the CRS  names the compressed repository change_ID_N_sample_tar.gz, where N corresponds to a revision number after a user changes the stored contents. Future changes are exemplarily named change_ID_(N+1)_sample_tar.gz, change_ID_(N+2)_sample_tar.gz, and so on, to account for the corresponding revisions. As will be understood and appreciated, the repositories can be named differently, and not limited to the names discussed herein. According to another aspect, the CRS  stores the compressed repository in an exemplary CRS database . As will be apparent to one of ordinary skill, CRS databases  and auxiliary databases  can be virtual (in the \u201ccloud\u201d), or can include physical storage units\/data centers.","According to yet another aspect, communication between the Third Party Storage  and the CRS proceeds via dedicated Application Programming Interfaces (API's), or via a web interface. Typically, and as will be understood, such communication involves a secure data transfer session using protocols such as FTP, SFTP, SSH, and other protocols. Details of an exemplary CRS process will be explained with flowcharts in connection with . Alternatively, and in one aspect, if no changes are detected in the user's data during a monitoring process, the CRS  takes no further action. As will be understood, the compressed repositories can be used to generate or re-create any previous version of the user's data.","A screenshot of an exemplary CRS interface is shown in . Screenshots showing various CRS settings\/options associated with retrieval of content stored in third party servers are shown in . An exemplary list of various files (comprising a user's data) that have undergone changes is shown in . According to one aspect, the CRS  provides a summary of a summary of a monitoring process performed on user's content stored in third party servers. An exemplary screenshot displaying such a summary is shown in . According to another aspect, the CRS provides to system administrators, web masters, and\/or website owners summarizing the effects of monitoring of user's content stored in third party servers. A screenshot showing exemplary alerts is shown in .","As will be understood, the above-mentioned screenshots and flowcharts discussed herein are for illustrative purposes only. The discussion above in association with  is intended to merely provide an overview of an embodiment of the present system for automated retrieval, monitoring, backup, and storage of contents stored on third party servers, and is not intended to limit in any way the scope of the present disclosure. Alternate embodiments can involve multiple users storing their content on a plurality of third party servers with different hardware and software configurations.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 1","b":"110"},"Turning now to , an exemplary CRS architecture  is shown, involving architectural details of the Content Retrieval Manager  (comprising various software modules and components) communicating with a Third Party Content Storage  (third party server). As shown in the embodiment in , a Third Party Content Storage  includes a Third Party Content Storage Processor  for communicating with the CRS, and a Third Party Content Storage Database  that hosts the user's content. For example, a Third Party Content Storage Processor  may have specific configurations such as application programming interfaces (APIs) and web interfaces for developers and software programmers to access, monitor, and\/or retrieve user's content hosted by the Third Party Content Storage . As shown in , the CRS  comprises a Content Retrieval Manager  and a CRS database  that are explained below.","In one aspect, the Content Retrieval Manager  communicates with the Third Party Content Storage Processor  over a network , in order to monitor and retrieve user's content and associated metadata. According to an embodiment of the present disclosure, the Content Retrieval Manager  further comprises several software modules, for example, a back end server  and a front end server . As referred to herein, a server can mean hardware components as well as software modules and engines that execute various processes on the hardware components. Typically, according to an embodiment, the back end server  typically performs periodic monitoring of the user's content, whereas the front server  interacts with the Third Party Content Storage  (third party server). According to one aspect, webmasters or system administrators affiliated with the Third Party Content Storage  provide access control information and information relating to user's content physically via a web interface. An exemplary screenshot showing a web interface will be discussed in connection with . According to another aspect, such types of information is obtained from the Third Party Content Storage  via APIs.","According to one aspect, the back end server  further comprises app server A, app server B, . . . app server N. In one aspect, functionalities of a back end server  are performed by the individual app servers. However, in alternate embodiments, the app servers can perform various other functions and processes.","Similarly, the front end server  comprises web server A, web server B, . . . web server N. Individual web servers typically perform the same function as the front end servers. It will be apparent to one of ordinary skill that the number of app servers or web servers depends on the computational capacities of each server, and the processing load imposed on them. No limitation is imposed on the number or configurations (both hardware and software) of such servers. In alternate embodiments of the CRS, a single app server and a single web server can suffice. In other alternate embodiments of the CRS, a single server that provides combined functionalities of a back end server  and a front end server  can be used.","As shown in , the CRS  comprises a CRS database  to store access control information and information relating to user's contents. Examples of access control information include (but are not limited to) FTP URL or a IP address of the location in the Third Party Storage wherein the user's contents are stored, username\/password of the user's account in third party servers, name of a user's website, etc. An exemplary screenshot showing an interface to enter access control information is shown in . It will be recalled from the description accompanying in  that during a monitoring process, the CRS  creates an index list (discussed in greater detail in connection with ) based on the information relating to user's contents, e.g., metadata. In one exemplary aspect, such an index list is also stored in the CRS database .","As will be understood and appreciated, software modules and databases discussed in the present disclosure are provided for exemplary purposes only. Various other software modules and databases can be used in alternate embodiments of the present disclosure. For example, in one embodiment, the Content Retrieval Manager  additionally comprises a FTP server that can be used by programmers and software developers as a development environment that can be used for purposes of modifying content (e.g., source code), and perform various other administrative functions as will occur to one skilled in the art.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 3","FIG. 2","FIGS. 4-6"],"b":["300","110","110","300","400","500","600"]},"Starting at process , the CRS  retrieves initial information from the Third Party Storage . Examples of initial information include a user's access credentials for the user's account hosted on the Third Party Storage , a first version of the user's data, and several other types of information. A first version of the user's data that is stored and backed up by the CRS  is usually a current version of the user's data at the time a first retrieval is made by the CRS. Hence, the earliest version of the user's data that the CRS  can revert back to is the version that is retrieved during process . According to one aspect, information retrieved from the Third Party Storage  is stored in a CRS database  or auxiliary storage . Additional details of sub-routine  will be recited in connection with .","At process  (details of which are shown in ), the CRS  performs monitoring of the user's content stored in Third Party Storage  in order to detect changes in the user's content. Such monitoring is typically performed periodically at a predetermined time interval. As will be understood by one of ordinary skill in the art, the user, independent of the CRS , accesses his or her content and makes changes to his or her content, as and when necessary. Changes made by users are detected by the CRS  during a content monitoring process. As previously recited, an embodiment of the CRS  uses an index list (created using metadata associated with the user's content) to keep track of the changes to the user's content.","If changes are detected during the monitoring process, then the CRS  stores the user's changes during a backup process  (shown in greater detail in ). If no changes are detected, the CRS  continues the content monitoring process . During a backup process, the CRS  by itself, or by leveraging functionalities of version control software, creates a repository containing incremental changes to the user's content from the previously stored version. It will be understood that previous versions can be stored in a CRS database  or in an auxiliary storage  that can be accessed by the CRS  over a network .","Now referring to , an exemplary information retrieval process  showing computer-implemented method steps involved in retrieval of initial information from the Third Party Storage  is described. Starting at step , the CRS  receives user credentials and other access control settings information from a Third Party Storage . An exemplary screenshot showing user credentials and other settings needed to access a user's account is shown in . A user's credentials and other access control information are provided to the CRS  by the users themselves, or by system administrators affiliated with the third party servers. In alternate embodiments, the CRS  receives such information via Application Program Interfaces (APIs). Examples of such settings include a username\/password, a URL corresponding to a network location in the Third Party Storage  wherein the user's data is stored, and various other settings. Credentials received at step  are validated by the Third Party Storage  at step . Then, at step , the CRS  initiates a session with a Third Party Storage  over a communication protocol such as Secure File Transfer Protocol (SFTP), File Transfer Protocol (FTP), Secure Shell (SSH) or the like. In alternate embodiments, the CRS receives user credentials by integrating with various software plugins such as CPANEL\u2122 and various others that are currently available as well as those that will occur to one of ordinary skill in the art.","At step , the CRS  retrieves metadata associated with the user's contents (data) from the Third Party Storage , and creates an index list of metadata. It will be understood that metadata typically refers to a set of data that describes and gives information about data. As referenced in the present disclosure, metadata provide information about the user's data (user content). Examples of metadata retrieved from the Third Party Storage  include a file name, a modification time, a modification date, a size of the corresponding file, and other attributes as will occur to one skilled in the art. As discussed above, the index list is used by the CRS  to track changes between two versions in the user's data\u2014a local and a current version. A local version represents a version of the user's data that was retrieved previously from third party servers, and subsequently stored in an exemplary CRS database (or, auxiliary storage). On the other hand, a current version of the user's data represents a version that is presently stored in third party servers, and in the event it has undergone changes from the local version, will be retrieved during a backup process.","The first time the CRS  retrieves the user's content there are no locally stored copies of the user's data. Therefore, during this first retrieval, the index list is initialized to the metadata associated with the user's content. According to one aspect, system users and\/or system administrators affiliated with the third party servers can indicate to the CRS a list of files (or folders) that do (or, alternately do not) need to be monitored and backed up. Accordingly, the CRS  creates the index list based on information provided by system users and\/or system administrators. By default, the CRS  backs up every file and folder stored in the user's account on third party servers.","Still continuing with , at step , the CRS  retrieves the user's data from the third party servers. Next, at step , the CRS  executes version control software to create a repository of the user's data. According to one exemplary aspect, a version control software (or, alternately the CRS ) automatically generates a summary list of changes that have occurred within every revision and a location in the database pointing to the last unchanged version of the file. Because such a list is being created at a first instance, such a list is initialized to indicate this is the oldest copy of the user's contents in the repository, and its corresponding location in the database.","Subsequently at step , the version control software (or, the CRS ) compresses the user's contents and the index list (indicating the changes in user's content) and thereafter stores the same in a CRS database  or auxiliary storage . In alternate embodiments, the index list is stored in a CRS database  and the repository is stored in the auxiliary storage , or vice-versa. In what follows next, an embodiment of a monitoring process will be described in greater detail.","Referring to , a monitoring process  is described during which the CRS scans the current data on the third party servers, and the last stored version of the data in the CRS, for changes between the two versions. Starting at step , the CRS  initiates a session with a Third Party Storage  over a communication protocol such as SFTP, FTP, SSH or the like. At step , the CRS  retrieves metadata associated with the current version of the user's contents. Examples of metadata retrieved from the Third Party Storage  include a file name, a modification time, a modification date, a size of the corresponding file, and other attributes as will occur to one skilled in the art. Then, at step , the CRS  retrieves the index list that is stored locally in the CRS, e.g. in CRS database  or auxiliary storage . At step , the CRS  compares the index list and the retrieved metadata, for purposes of detecting changes. For example, the CRS  determines whether or not changes (including additions, deletions) have been made to the names of files and folders. The CRS  additionally determines whether or not a file has been renamed, or moved into a folder, or vice-versa. In an aspect of comparing the index list and the retrieved metadata, the CRS  also determines whether changes have occurred in connection with the size, the last modification time, or any other change or update as will occur to one of ordinary skill in the art.","During the comparison step, if one or more changes in the metadata are detected, then at step , the CRS  proceeds to a backup process  as described next. If no changes are detected, the CRS  loops back to step  and continues to monitor the user's content stored in third party servers for changes. Thus, it will be understood that the monitoring process  is repetitively performed at periodic intervals of time. Although not shown in , in alternate aspects of a monitoring process , the CRS  periodically determines the \u201chealth\u201d and reliability of the retrieval data and\/or the Third Party Storage , e.g., whether the third party server (and hence the data stored therein) has been exposed to phishing or malware activities. The results of analyzing the \u201chealth\u201d of the user's data can be used to alert the user and\/or the associated third party server. In the event a hack or an unauthorized change is detected, webmasters can quickly revert to the last known \u201cgood\u201d version of the website or content data, and have their site restored.","Now referring to , a backup process  is described corresponding to backup of a current version of the user's content in response to changes in the user's content that are detected during the monitoring process . Starting at step , the CRS  retrieves content corresponding to metadata that has undergone changes as determined at step  in process . Next, at step , the CRS  executes version control software to create a repository of the user's data. According to one exemplary aspect, a version control software (or, alternately the CRS ) automatically generates a summary list of changes that has occurred within every revision and a location (in an exemplary database) pointing to the last unchanged version of the file(s). Further, at step , the CRS  creates an index list of the metadata associated with the current version of the user's contents. According to one exemplary aspect, the CRS overwrites the previous index list with a current one every time a new index list is created during a backup phase. Finally, at step , the version control software (or, the CRS ) compresses the user's content and the index list and thereafter stores the same in a CRS database  or auxiliary storage . According to one aspect, the compressed repository created by the CRS  or a version control software includes the incremental differences of the content between the most recently pre-stored version (available from the most recent revision) and a current version of the user's data. This way of storing the incremental differences allows efficient use of storage space. In what follows next, various attributes of a index list will be described in more detail.","Turning to , a schematic  of an index list  is shown comprising various metadata associated with a user's content. As shown in , an exemplary and illustrative list of a user's most recently pre-stored metadata A changes into current metadata B. As described herein, the changes in metadata are the result of changes in one or more files associated with the user's content (e.g., website). Exemplarily, metadata associated with the user's contents include a unique file name, a modification time, a modification date, a size of the corresponding file, and other attributes as will occur to one skilled in the art. Further, it will be understood that changes made by a user to the user's contents (data) will be reflected in the metadata associated with the user's contents. Various exemplary scenarios illustrating different ways in which metadata changes occur will now be described.","In , as shown, a file called file1 is unchanged, as apparent from the associated metadata in versions A and B. A file called file2 is modified on 10-30-2011 at 12:00 hrs from its previous 10:35 version, although the size of file2 does not change. In another instance, a file called file3 is modified by including additional contents, causing its size to change. A time and date corresponding to such changes are reflected in the metadata associated with the files. It is also shown that a file called file4 is added.","In one aspect, the aforementioned exemplary changes are detected by the CRS  in a comparison step carried out during a monitoring phase , and the outcome of the comparison step is used to create an exemplary index list . Since the metadata associated with file2, file3, and file4 have undergone changes, the CRS will retrieve contents of file2, file3, and file4 during a backup process. Details of a monitoring process  and a backup process  have been discussed previously in connection with  and  respectively.","Now referring to , an exemplary profile table  (stored in an exemplary CRS database ) comprising several variables in connection with user content stored in third party servers is shown. As recited previously, in one aspect, the user content relates to a website. In such an example, the user content will usually comprise source code and other files associated with the website. Such an example is illustrated in profile table . In alternate embodiments, different types of user content and correspondingly different variables can be included in a profile table.","For example, as shown in , a \u201cWebSite Name\u201d column stores the name (e.g., www.mysite.com) of a user's website. Such an exemplary website is identified by a unique website ID (e.g., Website ID 1). Content relating to this website is stored exemplarily at a third party server (Third Party Storage ) having server address (e.g., 192.168.1.110). A SFTP address of this server is exemplarily indicated as ftp.ftpserver1.com that can be accessed via an exemplary SFTP port .","In one aspect, the CRS  periodically scans the user's content to verify whether the contents of the user's site have been exposed to malicious attacks or hacks. In the event that such malicious attacks or hacks have occurred, then a user's website is not considered safe for browsing. Thus, a yes or a no in a \u201cSafebrowsing ok\u201d column indicates whether a user's website is \u201csafe\u201d.","Additionally, a \u201cDisk Usage\u201d column indicates the total size (e.g., contents of the site with Website ID 1 occupies 21 MB) of the user's content. Further, a \u201cLast Modified Time Stamp\u201d column indicates a date\/time (e.g. 10-31-2011 at 10:30 hrs) corresponding to the last modification of the content on the user's website. Changes to the user's content are usually identified by a revision number comprising a number and\/or letter code combination such as a \u201cCommitID\u201d. A \u201cCommitID\u201d column indicates a revision number (e.g., Last Commit ID 5 indicates that 5 different versions of the user's contents have been detected and backed up by the CRS ). Furthermore, as will be understood by one having ordinary skill in the art, the profile table  is presented for illustrative purposes only, and embodiments of the present CRS  are not limited to data, information, and fields in the specific data table shown.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 9","FIG. 10","FIG. 9","FIG. 15"],"b":"900"},"In an exemplary embodiment, the CRS  allows users to setup multiple user accounts to retrieve and backup data relating to multiple websites, the data being stored with the same or different third party storage providers. Therefore, an \u201cAdd Site\u201d button present in most CRS interfaces (including the interface shown in ) provides the ability to add multiple sites to be monitored and backed up by the CRS. It will be understood that these sites may be hosted with the same or different third party server(s).","Now referring to , an exemplary screenshot  displaying various settings\/options associated with access and retrieval of content stored in third party servers, is shown. For example, as will be understood by one of ordinary skill, a \u201cWebsite URL\u201d box is used to enter a name of a user's website. A \u201cDestination FTP URL or IP\u201d box is used to indicate the FTP URL or a IP address of the location in the Third Party Storage wherein the user's contents are stored. An \u201cAccount\u201d and a \u201cPassword\u201d box indicate a name (username) and a password respectively, of a user's account. Users and system administrators can choose to receive notification alerts from the CRS when changes are detected, via email, SMS, MMS, or any other mechanism. A \u201cNotifications Enabled\u201d check-box provides such a functionality. Further, depending on the security policies or communication policies of the hosting provider (third party server), communications between the CRS and the hosting provider can be over a FTP or a secure FTP (SFTP) connection. In many scenarios, depending on the security policies or communication policies of the hosting provider, this connection proceeds via a non-standard network port. The port number for the connection can be entered via the interface shown in . By default, the CRS communicates with the hosting provider (third party server) via a standard, predetermined port number (e.g., 21).","Continuing with the description of , users can specify a directory location wherein the user content (that will be retrieved, monitored and backed up by the CRS) is located. In one aspect, the CRS performs a real-time check of whether the location is a valid location or not, and A \u201cCheck Directory\u201d button is provided on the interface for that purpose. If a user clicks on the \u201cCheck Directory\u201d button, then the CRS accesses that location and displays a list of the contents (including files and folders) in that location. An exemplary list is also displayed in the interface shown in . An \u201cUpdate\u201d button displayed in this interface  saves the information (locally in CRS) relating to various settings\/options provided by users, webmasters, or system administrators. Although not shown in , it will be understood that in alternate embodiments, the CRS obtains information in connection with various settings\/options automatically by a software plugin or an API, as will occur naturally to one skilled in the art.","Next referring to , an exemplary screenshot is shown of a CRS interface displaying various settings\/options associated with manual (user-initiated) backup of content stored in third party servers. In many scenarios, users, webmasters and system administrators prefer to have an on-demand backup of the user content. Such a functionality is provided in this interface. Particularly, a \u201cStart Manual Backup\u201d button can be clicked by a user to initiate an on-demand backup. After this button is clicked, the interface displays details for the this backup under an \u201cExisting Backups\u201d menu bar. Changes in the user's content that are detected by the CRS are displayed by clicking on a \u201cChanges\u201d button on this interface. An exemplary screenshot of an interface that appears after a user clicks on the \u201cChanges\u201d button will be discussed next in connection with .","As shown in , a \u201cTime Machine\u201d button is provided on the interface to automatically revert back to a previous version of the user's website (or, in general user's content) pre-stored in an exemplary CRS database. For example, in one embodiment, after the \u201cTime Machine\u201d button is clicked, the CRS displays a snapshot of a previous version of homepage (and other pages) of a user's website. In order to generate the snapshot, it will be understood and appreciated by one skilled in the art that the CRS processes the pre-stored data relating to the user's website.","In many scenarios, users, webmasters and system administrators prefer to receive a copy of the current version of the user's content (data) that is stored in the third party servers. A \u201cRequest zip\u201d button on this interface provides the option of downloading into a local folder on the user's computer a compressed copy of the current version of the user's contents.","Referring now to , a screenshot  of an exemplary CRS interface showing exemplary files (comprising user's content stored in third party servers) that have undergone changes is shown. Such a list (as will be recalled from the discussions in ) is typically the outcome of an on-demand backup initiated by a user. As shown in , the interface indicates a timestamp when the monitoring was performed by the CRS, statistics relating to the monitoring, and the names of the files contained in the user's content. For example, the interface reveals that there were 716 additions in total, and nothing was deleted. In one exemplary aspect, the CRS specifies the number of lines added to a file, the number of files deleted from a file, and a total number of lines contained in the file. For example, the CRS specifies this information in the following format: \/path\/file name (lines added to file, lines deleted from file, total lines). Thus, as shown, nine (9) new lines were added to the file called \u201c.htaccess\u201d and no lines (that existed previously) were deleted. Similarly, fifty-five (55) new lines were added to the file called \u201cmycode.cpanelplugin\u201d and no lines were deleted. As will be understood, in alternate embodiments, the CRS displays various other information to users, and moreover, such information can be displayed in different screen layouts and formats. In what follows next, an exemplary screenshot showing user configuration settings associated with providing notification alerts to users, will be described next.","Now referring to , a screenshot  of an exemplary CRS interface is illustrated showing various CRS settings\/options associated with providing notification alerts, according to one embodiment of the present system. For example, users can choose to be notified (or not) when backups are performed. They can also choose various ways of receiving the notifications, such as SMS, email, MMS, or any other mechanism. Further, as will be recalled, the CRS monitors the user's content at predetermined intervals (hourly, daily, etc.). According to one aspect, such an interval can be specified by users based on their preferences. In another aspect, users can also choose to be notified only when substantive changes occur to the content, i.e., for minor changes or changes that involve changes in system files, caches and the like, users may choose not to be notified by the CRS. Various illustrative details associated with a monitoring and backup of user's content are described next.","Turning to , a screenshot  is shown of an exemplary CRS interface displaying a summary of the monitoring and backup of user's content stored in third party servers, according to one embodiment of the present system. As shown, constituents of the user's contents (in terms of different file name extensions or format) is shown with the help of a pie-chart under a \u201cFile Mix\u201d menu. For example, it is shown that there are 8 .htm files, 87 .php files, 16 .mo files, etc. As will be understood, no limitations are imposed on the number or type of files that comprise the user's contents, or that are monitored by embodiments of the CRS .","Additionally, the outcome of monitoring the \u201chealth\u201d of the user's content is displayed in a \u201cSite Health\u201d menu. According to one aspect, the CRS checks the user's contents against a constantly updated list of suspected phishing and malware sources. Such a list is maintained from information pre-stored within the CRS, as well as information released by computer security companies and other sources.","In another exemplary aspect, the CRS provides confirmation relating to the monitoring and backup of user's content. For example, as shown in , a user's site was last backed up Oct. 27, 2011 at 1:37 UTC. A confirmation code relating to this backup is also displayed on the interface, along with a current size of the user's contents. In what follows next, a screen displaying notification alerts to users will now be described.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 15","b":["1500","110"]},"The discussions above in association with various flowcharts and screenshots merely provide an overview of an embodiment of the present system describing the automated retrieval, monitoring, backup and storage of a user's online digital content and are not intended to limit in any way the scope of the present disclosure. Such content exemplarily includes source code and files for hosting websites, audio files, video files, data files, system files, image files, or any other content that is typically stored in third party servers. Accordingly, various modifications to represent further embodiments of the present disclosure are possible, as will be understood by one of ordinary skill.","Accordingly, it will be understood from the foregoing description that various embodiments of the present system described herein are generally implemented as a special purpose or general-purpose computer including various computer hardware as discussed in greater detail below. Embodiments within the scope of the present disclosure also include computer-readable media for carrying or having computer-executable instructions or data structures stored thereon. Such computer-readable media can be any available media which can be accessed by a general purpose or special purpose computer, or downloadable through communication networks. By way of example, and not limitation, such computer-readable media can comprise physical storage media such as RAM, ROM, flash memory, EEPROM, CD-ROM, DVD, or other optical disk storage, magnetic disk storage or other magnetic storage devices, any type of removable non-volatile memories such as secure digital (SD), flash memory, memory stick etc., or any other medium which can be used to carry or store computer program code in the form of computer-executable instructions or data structures and which can be accessed by a general purpose or special purpose computer, or a mobile device.","When information is transferred or provided over a network or another communications connection (either hardwired, wireless, or a combination of hardwired or wireless) to a computer, the computer properly views the connection as a computer-readable medium. Thus, any such a connection is properly termed and considered a computer-readable medium. Combinations of the above should also be included within the scope of computer-readable media. Computer-executable instructions comprise, for example, instructions and data which cause a general purpose computer, special purpose computer, or special purpose processing device such as a mobile device processor to perform one specific function or a group of functions.","Those skilled in the art will understand the features and aspects of a suitable computing environment in which aspects of the disclosure may be implemented. Although not required, the present disclosure is described in the general context of computer-executable instructions, such as program modules or engines, as described earlier, being executed by computers in networked environments. Such program modules are often reflected and illustrated by flow charts, sequence diagrams, exemplary screen displays, and other techniques used by those skilled in the art to communicate how to make and use such computer program modules. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types, within the computer. Computer-executable instructions, associated data structures, and program modules represent examples of the program code for executing steps of the methods disclosed herein. The particular sequence of such executable instructions or associated data structures represent examples of corresponding acts for implementing the functions described in such steps.","Those skilled in the art will also appreciate that the present disclosure may be practiced in network computing environments with many types of computer system configurations, including personal computers, hand-held devices, multi-processor systems, microprocessor-based or programmable consumer electronics, networked PCs, minicomputers, mainframe computers, and the like. The present disclosure is practiced in distributed computing environments where tasks are performed by local and remote processing devices that are linked (either by hardwired links, wireless links, or by a combination of hardwired or wireless links) through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","An exemplary system for implementing the present disclosure, which is not illustrated, includes a general purpose computing device in the form of a conventional computer, including a processing unit, a system memory, and a system bus that couples various system components including the system memory to the processing unit. The computer will typically include one or more magnetic hard disk drives (also called \u201cdata stores\u201d or \u201cdata storage\u201d or other names) for reading from and writing to. The drives and their associated computer-readable media provide nonvolatile storage of computer-executable instructions, data structures, program modules, and other data for the computer. Although the exemplary environment described herein employs a magnetic hard disk, a removable magnetic disk, removable optical disks, other types of computer readable media for storing data can be used, including magnetic cassettes, flash memory cards, digital video disks (DVDs), Bernoulli cartridges, RAMs, ROMs, and the like.","Computer program code that implements most of the functionality described herein typically comprises one or more program modules may be stored on the hard disk or other storage medium. This program code, as is known to those skilled in the art, usually includes an operating system, one or more application programs, other program modules, and program data. A user may enter commands and information into the computer through keyboard, pointing device, a script containing computer program code written in a scripting language or other input devices (not shown), such as a microphone, etc. These and other input devices are often connected to the processing unit through known electrical, optical, or wireless connections.","The main computer that effects many aspects of the present disclosure will typically operate in a networked environment using logical connections to one or more remote computers or data sources, which are described further below. Remote computers may be another personal computer, a server, a router, a network PC, a peer device or other common network node, and typically include many or all of the elements described above relative to the main computer system in which aspects of the present disclosure are embodied. The logical connections between computers include a local area network (LAN), a wide area network (WAN), and wireless LANs (WLAN) that are presented here by way of example and not limitation. Such networking environments are commonplace in office-wide or enterprise-wide computer networks, intranets and the Internet.","When used in a LAN or WLAN networking environment, the main computer system implementing aspects of the present disclosure is connected to the local network through a network interface or adapter. When used in a WAN or WLAN networking environment, the computer may include a modem, a wireless link, or other means for establishing communications over the wide area network, such as the Internet. In a networked environment, program modules depicted relative to the computer, or portions thereof, may be stored in a remote memory storage device. It will be appreciated that the network connections described or shown are exemplary and other means of establishing communications over wide area networks or the Internet may be used.","In view of the foregoing detailed description of preferred embodiments of the present disclosure, it readily will be understood by those persons skilled in the art that the present disclosure is susceptible to broad utility and application. While various aspects have been described in the context of a preferred embodiment, additional aspects, features, and methodologies of the present disclosure will be readily discernable from the description herein, by those of ordinary skill in the art. Many embodiments and adaptations of the present disclosure other than those herein described, as well as many variations, modifications, and equivalent arrangements and methodologies, will be apparent from or reasonably suggested by the present disclosure and the foregoing description thereof, without departing from the substance or scope of the present disclosure. Furthermore, any sequence(s) and\/or temporal order of steps of various processes described and claimed herein are those considered to be the best mode contemplated for carrying out the present disclosure. It should also be understood that, although steps of various processes may be shown and described as being in a preferred sequence or temporal order, the steps of any such processes are not limited to being carried out in any particular sequence or order, absent a specific indication of such to achieve a particular intended result. In most cases, the steps of such processes may be carried out in a variety of different sequences and orders, while still falling within the scope of the present disclosure. In addition, some steps may be carried out simultaneously.","Accordingly, while the present disclosure has been described herein in detail in relation to preferred embodiments, it is to be understood that this disclosure is only illustrative and exemplary of the present disclosure and is made merely for purposes of providing a full and enabling disclosure. The foregoing disclosure is not intended nor is to be construed to limit the present disclosure or otherwise to exclude any such other embodiments, adaptations, variations, modifications and equivalent arrangements, the present disclosure being limited only by the claims appended hereto and the equivalents thereof."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate one or more embodiments of the disclosure and, together with the written description, serve to explain the principles of the disclosure. Wherever possible, the same reference numbers are used throughout the drawings to refer to the same or like elements of an embodiment, and wherein:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 15"}]},"DETDESC":[{},{}]}
