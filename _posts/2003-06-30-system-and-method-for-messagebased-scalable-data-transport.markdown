---
title: System and method for message-based scalable data transport
abstract: The invention deploys a message-based data transport platform, in which a communication engine controls the delivery of server or other backup data or other large quantity data to a remote site based on message objects as fundamental units. Data sessions from one or more servers or other data sources may be buffered over established pipes for delivery to a remote data host which likewise contains messaging control. Relatively large message units may wait for communication over the channel in a queue, and be released when prior messaging is complete. Completion port or other polling or other mechanisms may indicate that connections have become open for use. In embodiments the message objects may be signed, or encrypted to safeguard against alteration or unauthorized viewing. The communication engine may rely upon TCP or other underlying transport mechanisms to effect lower level transmission.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07693998&OS=07693998&RS=07693998
owner: Microsoft Corporation
number: 07693998
owner_city: Redmond
owner_country: US
publication_date: 20030630
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EMBODIMENTS"],"p":["The subject matter of this application is related to the subject matter of U.S. patent application Ser. No. 10\/608,191 entitled \u201cMESSAGE-BASED SCALABLE DATA TRANSPORT PROTOCOL\u201d, filed of even date with this application, having the same inventor as this application, assigned or under obligation of assignment to the same entity as this application, and which application is incorporated by reference herein.","Not applicable.","The invention relates to the field of information technology, and more particularly to a platform configured to initiate and process large-scale network and other data backups or transfers via efficient message-based sessions.","The increased demand for data enterprise and other storage solutions has fueled corresponding demand in data backup and management tools. Companies, government and scientific organizations and others may require the reliable backup of gigabytes or terabytes of data, or more for archival and other purposes. While physical storage media such as storage area networks, optical storage media, redundant arrays of inexpensive disk (RAID) and other platforms have increased the total archival capacity available to data managers, the ability to efficiently harvest large data backups to host facilities has not always similarly progressed.","For instance, a network administrator may periodically wish to extract the data updates stored to network storage, such as server drives on a local area network (LAN), and transport that data to a secure backup repository at a remote site. However, scheduling and executing that type of large-scale data transport is not always efficient using current technology. For instance, in the case of storing LAN data to a remote site, the administrator may attempt to move that quantity of data using a conventional network protocol, such as the Transfer Control Protocol (TCP).","However, TCP as one transport solution may prove to be a difficult vehicle to communicate the data backup to the remote host, in part because TCP tends to decompose data into comparatively small packets, on the order of a few tens of bytes to a few thousands of bytes. When attempting to drive gigabytes of original or update data to a remote host, that scale will not suffice for efficient transport. Moreover, when performing data flow control on the channel, TCP may pause to seek available bandwidth or capacity on the channel as small as a few thousand bytes, stop and fill that available space in the pipe, and then wait for additional open slots. Again, pushing data on the order of megabytes, gigabytes or more through an intermittent channel at those scales is not efficient when using the granularity of TCP API. Better large-scale and other data backup technologies are desirable. Other problems exist.","The invention overcoming these and other problems in the art relates in one regard to a system and method for message-based scalable data transport, in which one or more individual servers or other nodes communicate data backups and other information to a remote storage host via a communication engine. In embodiments, the communication engine may interface to an underlying transport layer, such as TCP or other protocols, and mediate the data flow from the nodes to the remote store. The communication engine may decompose the data awaiting transport into a set of message objects which are buffered out over connections bundled into established data pipes. The encapsulation of the data into fundamental message objects permits more continuous delivery of the data payload, since the messaging continues as long as the connection is not occupied and is clear, in contrast for instance to pure TCP transport which may exhibit stop-and-go or \u201cchatter\u201d type behavior. In embodiments, one originating session may transmit data over more than one connection, to maximize channel utilization. The communication engine may perform traffic control based on the polling of completion ports to indicate message completion, or other channel mechanisms, but in general not requiring acknowledgment of individual packets or other comparatively smaller data objects. High throughput through the inventive platform and protocol may be achieved.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1","b":["102","104","102","104","104","102"]},"As illustrated, when data backups or other data transfers are generated, in embodiments the data transmitted by one or more of the data sources in the set of data sources  may be communicated to a storage server , which in turn communicates the data to storage . Storage  may in embodiments be or include hard disk resources such as RAID banks, optical media such as rewritable CD-ROMs or DVD-ROMs or others, magnetic tape drives, electronic storage capacity such as random access memory, flash memory or other electronic components, or other storage media. In embodiments, storage  may likewise be, include or interface to data storage resources such as storage area networks (SANs) or other assets. In embodiments, storage  may be equipped to accept and store relatively large-scale amounts of data backup, for instance megabytes, gigabytes, terabytes or more for enterprise and other purposes.","As illustrated in , according to an embodiments of the invention each of the sources within the set of data sources  may communicate with communication engine  to initiate, manage and complete a data transport session to data server  or other remote or local destination. Communication engine  may include or interface to an application programming interface (API)  which may expose variables, calls and other interface parameters to the set of data sources  to carry out effective data transfer. In the embodiment as shown, each of the data sources in the set of data sources  may generate or be associated with a corresponding session within a set of sessions . The set of sessions  may contain a queue of input\/output buffers , with one or more input\/output buffer being allocated to each session. Other arrangements of sessions, queues, buffers and other resources are possible. An example of illustrative code which may in embodiments instantiate a new session from a session object class follows:",{"@attributes":{"id":"p-0016","num":"0015"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CSession Object:",{}]},{"entry":"typedef enum {"},{"entry":["\u2003CE_SS_SEND_SYNC,","\/\/ NEED to send sync"]},{"entry":["\u2003CE_SS_APP_CONFIRM_ACCEPT_ACK,","\/\/ NEED to send ACK from app"]},{"entry":["\u2003CE_SS_APP_CLOSE_SESSION,","\/\/ NEED to send FIN"]},{"entry":"\u2003CE_SS_ACTION_REQUIRING_STATE,"},{"entry":["\u2003CE_SS_NULL,","\/\/ null"]},{"entry":["\u2003CE_SS_SENDING_SYNC,","\/\/ Sending SYNC"]},{"entry":["\u2003CE_SS_WAITING_ACK,","\/\/ Waiting for ACK from machine Z"]},{"entry":["\u2003CE_SS_WAITING_FOR_ACCEPT_ACK,","\/\/ Waiting for ACK from app"]},{"entry":["\u2003CE_SS_SENDING_APP_SESSION_ACK,","\/\/ Sending ACK from machine Z to A"]},{"entry":["\u2003CE_SS_SESSION_WAITING_FOR_SYNC_COMPLETE,","\/\/ Waiting for WRITE complete"]},{"entry":[{},"\/\/ after WRITE (SYNC)"]},{"entry":["\u2003CE_SS_SENDING_FIN,","\/\/ Sending FIN"]},{"entry":["\u2003CE_SS_SESSION_CLOSED,","\/\/ Session is CLOSED"]},{"entry":["\u2003CE_SS_SESSION_READY,","\/\/ Session is ready"]},{"entry":"} CE_SESSION_STATE;"},{"entry":"Client Thread:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CSession *pSes = new CSession;",{}]},{"entry":["hr=pSes->Init (L\u201c175.1.1.10\u201d,","\/\/ IP address of backup LAN or just DNS name"]},{"entry":["\u2003\u200333701,","\/\/ TCP port"]},{"entry":["\u2003\u2003L\u201cDLS_SERVER_1\u201d,","\/\/ principal's name"]},{"entry":["\u2003\u20032*1024*1024,","\/\/ Output queue length 2 MB"]},{"entry":["\u2003\u20034*1024*1024,","\/\/ Input queue length 4 MB"]},{"entry":["\u2003\u2003pSesContext,","\/\/ points to \u201cGUID_REPLICA\u201d"]},{"entry":"\u2003\u2003dwSesContextLen"},{"entry":"\u2003\u2003);"},{"entry":["hr=pCE->CreateSession (pSes);","\/\/ completes immediately, response on IOCP"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Other code, languages or modules or different APIs are possible.","As shown, each of the sessions in the set of sessions  may in turn communicate with a dispatcher module in the set of dispatcher modules . The set of dispatcher modules  may themselves secure connections to one or more of a set of connections . The set of connections  (which may be one or more) may in embodiments use multiple possible underlying communications mechanisms like TCP via Winsock, pipes or others. Each connection in the set of connections  aggregated into a logical pipe  may communicate with storage server , or other remote or local hosts or resources. In embodiments pipe  may be established before establishing the set of connections  within that structure, but other setup phases and configurations are possible. In embodiments, the invention may support or employ a large number of connections in one or more pipes, for instance on the order of 1000 simultaneous connections, or more or less depending on implementation.","As illustrated, the storage server  may contain a destination input\/output queue , to buffer incoming and outgoing message traffic to the storage server  or other ultimate destination. More particularly, at fixed, periodic, selected or other times, one or more of the sources in the set of data sources  may initiate a data transfer to the storage server  via communication engine  and associated resources. The data transfer may be or include, for instance, the backup of a server hard disk or other storage, the capture of large-scale scientific or commercial data, or other data transport tasks. Communication engine  may decompose the resident data from the one or more sources in the set of sources  into a set of message objects, for more efficient queuing and transfer.","As shown, the session illustrated as Session A in the set of sessions  may generate two messages, labeled Message  and Message , for transfer to storage server . Those and other messages may in embodiments be on the order of many megabytes, or larger or smaller, in size. Likewise illustrated Session B has generated a message labeled Message  for transport to storage server . Session C is illustrated as receiving a message labeled Message , on the intake side.","Dispatcher modules in the set of dispatcher modules  may bind multiple message streams from the set of input\/output buffers  to one or more connections in the set of connections  and multiplex messages from different sessions into the same pipe of connections. As illustrated, dispatcher module labeled D communicates traffic from Session A including Message  and Message  to Connection , while dispatcher module D combines the message stream to and from Session B and Session for connection to Connection . Other combinations are possible. As shown, communication engine  interacting with the set of sessions  and the set of dispatchers  and other resources may attempt to drive the greatest possible number of pending messages through the set of connections  of pipe , to achieve the greatest possible utilization of available bandwidth to storage server . In embodiments, individual sessions in the set of session  may specify different types of network connections, such as ports, sockets or other parameters, for different messages or sets of messages.","Each of the data sources in the set of data sources , as well as individual connections in the set of connections  and other links in the transport chain to storage server , may have different available bandwidths or other transmission characteristics. The queue of input\/output buffers  in conjunction with the other transmission resources permit buffering action to accommodate the slowest link or links in that chain and varying characteristics of traffic both on sender and receiver side, while driving data transport to the greatest possible utilization. The communication engine  may for instance continuously or periodically scan the set of connections  to determine whether they are occupied with an outgoing or incoming message stream.","In embodiments those probes or scans may be made using the completion port facility available under the Microsoft Windows\u2122 family of operating systems, according to which the GetQueuedCompletionStatus and other commands may return messages indicating the departure of a given message from queue, or not. Since the communication engine , set of dispatchers  and other resources may rely upon a message object as the fundamental unit of data transfer, the overall operation of the invention in embodiments may be directed toward fast large-scale transfers, since there is no stop and go effect from the processing of individual pieces of data as in pure TCP transmission modes. Rather, according to the invention a comparatively large-scale message may be generated, entered into queue in the queue of input\/output buffers , and released for transmission to storage server  or other destination.","In embodiments, each session in the set of sessions  or communication engine  may wait to replenish the queue until the session itself determines that the transmission of the message object is complete. Since the duty to confirm that status resides on the transmitter side, there is no feedback loop from the receiver end, and that type of overhead cost is avoided. The set of sessions  may instead wait for confirmation from the queue of input\/output buffers  that space in queue has opened, to prepare the next message for transmission. The set of sessions  thus may not attempt to refill the queue until whole message units are processed. The set of sessions  may incorporate a timeout function, to remove a message from the queue of input\/output buffers  if the corresponding input\/output buffer does not confirm the departure of the message to the set of connections  within a fixed amount of time, such as 1 minute. The set of sessions  may use other timeout or other checking criteria, such as variable delay times, a fixed or variable number of repeat attempts to be made before retiring a message, or others.","Each of the message objects themselves may be communicated via the connections in the set of connections  using TCP itself as a lower level protocol. Other protocols are possible. Because the communication engine  and its associated message-based protocols govern flow control at a higher level, TCP datagrams may flow without small-scale flow control, error checking or other processing which would tend to slow down large, scalable transfers of the type managed by embodiments of the invention.","In embodiments, the communication engine , API  and other resources may introduce layers of security protection to protect the data transported to the storage server  or other destination. For instance, each session in the set of sessions  or connection in the set of connections  may be authenticated via digital certificates such as Kerberos, X.509 or other objects, secure socket layers or other mechanisms, before being permitted to be aggregated into pipe . Individual messages themselves may likewise be encrypted to deter interception or alteration of the data being moved to storage server . Various security, encryption or other techniques, such as Microsoft\u2122 Security Support Provider Interface (SSPI), public key such as RSA standards, private keys such as Digital Encryption System (DES) mechanisms, or others may be employed to protect message content or other aspects of the transmission process. In embodiments, authentication, encryption and related information may be exposed at the level of API .",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3","b":["126","112","114","1","1","2","1","3","3","1","2","1","2","1","1","1","1","2","2","1","2","1","2","1","2","1","3","3"]},"Overall data transport processing is illustrated in . In step , one or more sessions in the set of sessions  may be generated. In step , a session sync message may be transmitted from a data source in the set of data sources  and transmitted to the destination input\/output buffer  of storage server . In step , a completion message for session sync may be posted to storage server . In step , the storage server  may accept the session request.","In step , a session sync acknowledgement message may be transmitted from the destination input\/output buffer  of storage server  to the corresponding input\/output buffer in the set of input\/output buffers  for the requesting data source. In step , a completion message for session acknowledgement may be posted to the originating data source in the set of data sources . In step , the transmitting data source may transmit a first message, denoted Message , to its associated input\/output buffer in the set of input\/output buffers . In step , the transmitting data source may transmit a second message, denoted Message , to its associated input\/output buffer in the set of input\/output buffers . In step , the transmitting data source may transmit a third message, denoted Message , to its associated input\/output buffer in the set of input\/output buffers . In step , the data source may receive an error message indicating that the corresponding input\/output buffer is full, so that Message  is not accepted into queue. In step , Message  may be transmitted to the destination input\/output buffer  of storage server . In step , a completion message for the transmission of Message  may be posted to storage server  or other destination. In step , an acknowledgement message acknowledging receipt of Message  may be transmitted to the input\/output buffer of the data source of that message. In step , a completion message for Message  may be transmitted to the corresponding data source.","In step , Message  may be transmitted to the destination input\/output buffer  of storage server  or other destination. In step , a completion message for Message  may be posted to the storage server . In step , Message  may be retransmitted to the input\/output buffer corresponding to the data source of that message. In step , an acknowledgment message indicating receipt of Message  with a window size (WndSize) of zero units may be transmitted to the input\/output buffer of the data source for that message. In step , a completion message for Message  may be posted to that source. In step , Message  may be transmitted from a data source among the set of data sources  to its corresponding input\/output buffer among the queue of input\/output buffers .","In step , the client application or other resource to receive Message  retrieves Message  from the destination input\/output buffer . In step , an acknowledgement message for Message  with a window size (WndSize) of 1 unit may be transmitted to the corresponding input\/output buffer of the source of that message. In step , Message  may be transmitted to the destination input\/output buffer  of storage server . In step , processing may terminate, repeat, or return to a prior processing point.","The foregoing description of the invention is illustrative, and modifications in configuration and implementation will occur to persons skilled in the art. For instance, while the invention has in embodiments been described in terms of multiple data sources communicating via one communications link to a remote host, in embodiments one or more nodes or sessions may communicate via separate physical or logical links to a remote data host or other destination.","Similarly, while the invention has in embodiments been described as transporting backup data to a single remote host, in embodiments the data may be delivered to separate logical or physical hosts or media. Other hardware, software or other resources described as singular may in embodiments be distributed, and similarly in embodiments resources described as distributed may be combined. The scope of the invention is accordingly intended to be limited only by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
