---
title: Auto configuration of portable computers for use in wireless local area networks
abstract: A method and apparatus for the configuration of a wireless network adapter is disclosed. A wireless network adapter is provided with software that enables the adapter to recognize and connect with one or more networks. Software profiles are loaded onto or created on the adapter. The software profiles each correspond to a unique network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07103661&OS=07103661&RS=07103661
owner: 
number: 07103661
owner_city: 
owner_country: 
publication_date: 20010309
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE PRIOR ART","SUMMARY","DETAILED DESCRIPTION","Profile Management","Unattended Installation Creation"],"p":["This application claims the priority of U.S. Provisional Patent Application 60\/236,981 filed on Sep. 29, 2000 and U.S. Provisional Patent Application 60\/217,796 filed on Jul. 12, 2000.","This invention relates to wireless local area networks, and more particularly to auto configuration software for use in portable computers communicating with wireless local area networks.","Wireless local area networks (WLANs) use infrared (IR) or radio frequency (RF) communications channels to communicate between portable or mobile computer terminals and stationary access points or base stations. These access points are connected by wired or wireless communication channels to a network infrastructure which connects groups of access points together to form a local area network (LAN), which can include one or more host computers. In turn, the LAN can be connected to another larger network such as the Internet and the World Wide Web (Web). Several protocols, including the IEEE 802.11 standard, \u201cWireless LAN Medium Access Control (MAC) and Physical Layer (PHY) Specifications\u201d have been designed to standardize WLAN communications. Such standardization is useful for optimizing user requirements, including spatial layout, response time, loading and throughput requirements of the network.","\u201cRoaming\u201d terminals are mobile units that can associate with any access point (AP) associated with a WLAN and seamlessly move from AP to AP. Each roaming terminal analyzes received signals from access points in its vicinity and associates with a single access point. Communication with an access point connects a terminal with the LAN and therefore with external networks such as the Internet. The region around an access point can be referred to as a \u201ccell\u201d. Roaming terminals can move from cell to cell and remain connected to the LAN and any other network to which the LAN has connected.","The IEEE 802.11 standard is one protocol used for WLAN communications. Typically, a mobile unit must be configured by hand by the manual entry of network and user parameters in order to be able to communicate with an access point. Once configured, each unit must be reconfigured if it is to communicate with another WLAN. Furthermore, each access point is associated with a finite number of frequency channels. Often, there can be several unrelated WLANs in a dense area such as an office building. These unrelated WLANs, or other RF communication systems, may use the same frequencies. Therefore it is possible for a mobile unit associated with one WLAN to pick up a communications interference with an unrelated WLAN. This situation is not desirable. Therefore, even if a roaming unit is to have the broadest possible communication coverage with an associated WLAN, unauthorized users from unrelated WLANs can possibly breach the communication link.","However, many users of roaming terminals expect to connect to multiple unrelated WLANs that do not create a security breach. For example, a company may have multiple offices around the world with a WLAN in every office. In such a situation, an employee of the company may want to use one roaming unit in several of the offices. The ability to connect to several unrelated WLANs requires a different configuration. However, it is burdensome to have to reconfigure the terminal each time the user desires to use the terminal with a different WLAN. Furthermore, if there are several roaming terminals for the several WLANs, attended installation of a new configuration is required for each of the terminals.","The present invention provides an auto configuration method and apparatus for seamless connection of a single terminal to numerous different WLANs. The method and apparatus also allow an unattended installation for a large number of wireless clients.","In general, in one aspect, the invention features a software-implemented method of configuring a computer to associate with a network through a wireless communication link. The method includes creating a computer profile corresponding to a network having an Extended Service Set identifier, using the computer profile to cause the computer to recognize the network and creating a communication link between the computer and the network.","Implementations may include one or more of the following advantages. Variable network parameters such as encryption key status, frequency and power requirements may be used to create the computer profile. The software may be integrated into the operating system of the computer. Data passing over the communication link between the computer and the network may be encrypted. The computer may be programmed to contain multiple profiles to recognize and connect with multiple unrelated networks. The name of a selected profile may be stored for use by other programs.","Once profiles that define a communications link between a remote unit and a WLAN are established, they are stored, encrypted and can be password protected.","WLAN service providers can create profiles away from the client computer and load the profiles on a network such as the Internet. A customer signing up for service can download the profiles and store on their computer. Users who download can't change the encryption that creates a default security system.","The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features and advantages of the invention will be apparent from the description and drawings, and from the claims.","Like reference symbols in the various drawings indicate like elements.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 1","b":["1","100","10","11","12","13","11","11","14","12","13","11","12","13","14","15","15"],"i":"a"},"The network can have a large number of base stations, typically up to sixty-four, and several hundred remote units . Furthermore, the first LAN  may be coupled to additional LANs , ,  through controllers such as bridges ,  or routers , , , , , . Other typical embodiments for the remote units  as a WLAN adapter include but are not limited to hand-held devices for network access to enable a user to receive personal itinerary such as airline e-tickets, hotel confirmation information, credit card, bank account or brokerage account access and the like.","This network environment  can also be used for any facility having the need for a number of remote units to access a central control station such as a LAN . Such facilities can be but are not limited to a manufacturing facility, office building complex, warehouse, retail establishment, or like commercial facilities, or combination of facilities where bar code readers, for example, or similar data-gathering terminals are used for inventory control in stockroom or receiving\/shipping facilities, at check out (point of sale) counters, for reading forms or invoices or the like, for personal security checking at gates or other checkout points, at time clocks, for manufacturing or process flow control, and other similar uses. The bar code readers may be hand-held laser-scan type bar-code readers or bar-code readers of the wand-type. The readers may be stationary rather than hand-held. The device may be of the optical character recognition (OCR) type as well. Other types of data gathering devices may implement features such as temperature or pressure measuring devices, event counters, voice or sound activated devices, intrusion detectors and the like.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 2","FIG. 1"],"b":["10","12","13","14","10","220","221","222","223","224","223","225","20","222","11"]},"The base stations , ,  each utilize a CPU  connected to a memory  through a bus . A communications adapter  connects the bus  to the communications link . An RF transceiver  is connected to the CPU  in each base station , ,  through the local bus  and is connected to an antenna  for RF transmission to and reception from the remote units  using a transmit\/receive exchange protocol. In one embodiment, the exchange protocol is similar to a collision-sense multiple access (CSMA) protocol. A detailed discussion of this exchange protocol is presented below with respect to . An additional RF transceiver can be used as an RF link to and from other base stations, using antenna , if necessary.","Base stations , ,  are typically stationary units that use line power and are often not accessible to an operator. The RF signal path in a typical environment is changeable because equipment in the environment may move around as the locations of the remote units  change. As a result, the particular base station that is in communication with a particular remote unit  can change. In an implementation, a \u201chand-off\u201d protocol is used to change the base station that is designated to communicate with the remote unit . In this manner, a remote unit  has a confirmed virtual link with only one base station at a time, although other base stations may be in range. The base stations , ,  act as intermediaries for the communication link between the remote unit  and the host computer . The main function of the base stations , ,  is to relay data between the remote units  and the host computer.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 3","b":["15","15","340","342","341","342","340","343","342","343","343","346","347","341","343","344","12","13","14","10","344","342","345","345"]},"Typically, the remote unit  has a manual entry device  such as a keyboard, and a visual display  such as an liquid crystal display (LCD) device. The elements of the entry device  and the display  are scanned by signals generated in the CPU , or generated in a entry device and display I\/O controller. In one embodiment, the I\/O controller is an Intel\u00ae 8052 microcontroller.","As discussed above, in one embodiment, a transmit\/receive exchange protocol is used by the remote unit  to communicate with the base units , , . The exchange protocol is similar to a collision-sense multiple access (CSMA) protocol. The remote unit  first listens before transmitting, and does not transmit if the channel is not free. If an RF channel is quiet a transceiver in the remote unit  can start a transmission. A transceiver in the remote unit  typically begins a data exchange at its own initiative by first listening for other traffic for a brief time interval t, and, if the RF channel is quiet, starting a transmission at a time of its own selection. An outgoing transmission data packet lasts for a certain time interval t, then at a precise time delay tafter the mobile unit  starts its transmission, the transceiver  begins listening for a return data packet from the base stations , , . The remote unit  waits for a very small time interval tfor this return, or \u201cacknowledge\u201d packet. If this packet is not returned during the time interval t, the remote unit  ignores any data packets that follow. Because the mobile units  control the data exchange between the remote units  and the base stations , , , the CPU  handles all exchange related tasks including data input from the bar code scanner , keyboard and display scans, RF control, data stream transfers to and from the RF transceiver, and data coding and encoding. The remote unit  is therefore the primary controller of RF transmission and reception. The remote units  send a periodic data packet, having no data, to the base stations , ,  in case the base stations , ,  have data to transmit to the remote units .","As discussed above, the mobile unit  can be a portable computer. The portable computer can be used for a variety of computing purposes including but not limited to Internet access, word processing, scheduling, mathematical computation and the like. For these purposes, the portable computer is loaded with an operating system. In an embodiment, the operating system can be all Windows 9x and NT platforms. In other embodiments, the operating system can be Windows 2000, Windows CE, Palm 05, Linux, or others. In one embodiment, the memory  can be random access memory into which the operating system is loaded. In another embodiment, the memory  can be any type of firmware such as EPROM or EEPROM into which the operating system is \u201cburned.\u201d",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4","b":["430","430","15","430","341","343","344"]},"Referring to , an application environment  contains one or more software application processes , . Each application ,  can have a dynamic link library (DLL) ,  and ,  respectively associated with it. A DLL is a feature of Windows\u00ae platform that allows executable code modules to be loaded on demand and dynamically linked at run time. Library code can be updated, transparent to the applications , , and unloaded when no longer needed.","The operating system  can include an application programming interface  (API). The API  is the software that the application processes ,  use to request and carry out lower level services performed by the operating system . For Windows\u00ae, the API also helps applications ,  manage windows, menus, icons and other graphical user interface (GUI) elements. The API  includes a set of standard software interrupts, calls and data formats that applications , use to initiate contact with device drivers ,.","The operating system  can include one or more device drivers , . The device drivers ,  provide control functionality specific to a particular physical device or class of devices. Additionally, the device drivers ,  provide standard software interfaces allowing other system components to access the controlled device. For example, one device driver  can control the code data acquisition device  and provide data to and from applications ,  through the API . The other device driver  can control the RF transceiver  that allows data to be transferred under the control of operating system  to the RF transceiver  through device driver . Operating system  also includes a BIOS  to run standard start up routines for the remote unit .","A variety of application programs can be loaded into the operating system. One such application is a WLAN auto configuration program. Since the remote unit  can be associated with a single WLAN having base stations , , , or multiple unrelated WLANs having multiple unrelated base stations, it is necessary for the mobile unit  to be able to configure itself to adapt to and communicate with one or more of several possible WLANs within range. This auto configuration program can enable a user to store configurations for numerous WLANs such that when a user turns on the mobile unit , the program automatically loads the correct configuration for the WLAN that the mobile unit  is near. As the number of WLANs increase, it is very useful for the user to be able to connect to the WLAN where he is physically located without being required to use the time to manually change the computer's configuration settings to associate with the WLAN and Internet.","In a Windows\u00ae implementation, the program includes a window in the Windows environment similar to control panel or Dial-Up networking. The program seamlessly blends into the operating system. The Windows shell uses a single hierarchical name space to organize all objects such as files, storage devices, printers, network resources, and anything else that can be viewed using an application such as Windows Explorer.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 5","b":["570","572","574","576","578"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 5A","b":["520","525","530","535","540","545","550","555","560"]},"In one embodiment, the program is implemented in two DLLs. The first DLL is the name space extension DLL. The name space extension DLL is responsible for registering itself with the system and exposing the component object model (COM) interface. The COM interface encapsulates commonly used functions and services in the Windows\u00ae environment. As the COM interfaces are called by the Windows Explorer shell, the auto configuration program name space extension reads the program's registry area and creates the user interface representation of the data in the registry. Responding to user input, the name space extension calls a WLAN Profile Wizard DLL to execute the create, copy, delete, rename and edit functions required by the program.","A user can use the Wizard interface to help in the creation and management of the WLAN profiles. To use the Wizard, the user opens the configuration application on the remote unit  and clicks on an Add New Profile icon or clicks on an existing profile. The WLAN profile Wizard is launched as part of the Windows\u00ae Name Space Extension application. Once the Wizard is launched, it takes on a traditional windows wizard appearance. This wizard is a series of presentations or pages, displayed in a secondary window that helps the user through the WLAN profile creation task. The pages include controls that gather input from the user. The input is then used to complete the profile creation task for the user. Once the new profile is created, it appears in the namespace window client area.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 6","b":["600","610","610","610","610","610"],"i":["a","b ","b ","c "]},"The Wizard has two major functions. The first function is the creation and editing of profiles that are stored in the Windows registry for the local machine. The second function is the creation and exporting of profiles that are remotely installed on another computer.","As shown in , all profiles created and managed by the WIZARD DLL are stored in the Windows\u00ae registry  under a unique data identification key . For example, the registry key can be located at ..\\WLANPlaces\\Profiles . Each subkey below the profiles subkey is the actual name of the profile as typed by the user. Thus, a virtually infinite number of profiles are possible. However, as a practical matter a typical user will implement typically, ten or less WLAN profiles. When the profile Wizard creates a new profile in the registry, it first checks to see if a profile with the name the user is assigning to the new profile already exists. If the profile already exists, the user is prompted to select a unique name for the new profile. All profile properties are saved inside the newly named registry subkey.","During the initialization process of the name space window, the name space DLL creates a list of all known profiles by name. As mentioned above, duplicate profile names are not allowed. In addition, the name space window does not present features to the user that require a pre-existing profile. Therefore, if no preexisting profiles are found in the registry, the certain functions that are normally available in the name space window (e.g., copy and paste functions) are not accessible to the user.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 7","b":["703","705","710","710","710"],"i":["a ","c ","b"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 8","b":["800","805","15","15","15","15","810","810","810"],"i":["a ","c ","b. "]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 9","FIG. 10"],"b":["900","905","910","910","910","910"],"i":["a ","a ","c ","b "]},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 10","b":["1000","1004","1005","1010","1010","1010"],"i":["a ","b ","c "]},"The values in the registry are encrypted using a proprietary encryption algorithm to protect their privacy. Referring again to  (WEP), if the user chooses not to enable WEP, then the mobile Unit (MU) Encryption Algorithm setting in the registry is set to \u201cOpen System\u201d (no encryption). The user can then click the Next button to continue the process or click Cancel button to exit the wizard.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 11","b":["1100","1103","1104","1105"]},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 12","b":["1200","15","15","1205","1210","1210","1210","15"],"i":["b ","c","a "]},"The user of the remote unit  can optionally copy an existing profile. Copying existing profiles is similar to copying a file on a typical computer. In one embodiment, on the Windows\u00ae platform, using the Windows\u00ae shell commands that are used to copy files, profiles are copied. The user can also copy a profile using the Edit menu on the WLAN configuration application window. The new profile is assigned a new name based on the old name, and the name can be edited the same way a Windows\u00ae file name is edited. To edit the properties of a newly copied profile, the user double clicks an icon associated with the profile to launch the edit portion of the Wizard. Subsequently, the process is similar to the Edit profile process described above. The newly copied profile is stored in its own location in the registry. The Wizard DLL exports the function WLANProfileWizardCopy for use when the Name space extension is to copy an existing profile.","The user can rename an existing profile in a manner similar to renaming a file on a computer using Windows\u00ae shell commands (using clicking steps). The user can also rename a profile using the Edit menu in the WLAN configuration application window. The renamed profile gets the new name if the name does not already exist. If a duplicate name is entered, an error message is generated and the profile is not renamed. The Wizard DLL exports the function WLANProfileWizardRename for use when the name space extension is to rename an existing profile.","To delete a profile, a similar process as for deleting a file on a computer is used. However, the removed profile does not go into the recycle bin as it does on when a file is deleted on the Windows\u00ae platform. The profile can be deleted by either highlighting the profile icon and hitting the delete key or by using the edit menu in the WLAN configuration application window. The user is prompted for a confirmation prior to deleting the profile. The Wizard DLL exports the function WLANProfileWizardDelete when the name space extension is to delete a profile. In an implementation, there is no undo function after the profile has been removed.","To edit an existing profile, the wizard displays a series of property pages similar to choosing properties from a menu in a Windows\u00ae application. The user may have to enter a valid password if one is required by the profile in order to edit. The user can edit any of the information for the profile in the properties pages.  illustrates a screen shot of an implementation of a properties window . Three tabs , ,  allow the user access to general, encryption and password properties respectively. In one embodiment, under the general tab, the user can edit the profile name in a profile name field , the profile description in a profile description field , or the ESSID in an ESSID field . Under the encryption tab , the user can change any of the properties involving the encryption such as the encryption key number ( in ) or the encryption key ( in ). Under the password tab , the user can change the password, if one was chosen, (see ), or choose a password if a password was not previously chosen. The user can edit the profile and click an OK button , or cancel the operation by clicking a Cancel bottom . If the user made any changes to the properties of the profile, the user can click an Apply button to write the changes to the registry. The wizard DLL exports the function WLANProfileWizardEdit when the name space extension is to edit an existing profile.","The WLAN wizard has the ability to use the profiles to create an unattended WLAN driver installation process. Once the creation process is completed, a single WLAN driver with, typically, multiple profiles is created. The process of the invention can be used to deploy large numbers of configured WLAN computers with multiple profiles, or a single profile, saving an enormous amount of software installation labor and eliminating installation errors. The process can be loaded onto a storage medium and can be distributed as needed.","The creation of the installation process can be implemented from the WLAN configuration application menu, choosing the \u201ccreate installation\u201d item. The wizard steps the user through the process of selecting the profiles the user wants to add to the installation process storage medium (for example on a floppy disk) and clicks the next button. The user chooses a destination device and path for the newly created installation and completes the process by clicking the finish button. In an implementation, an image disk is created.","One example of an automatic installation is through creation of an installation program and corresponding profile as a web site through the use of a scripting language.","A WLAN driver sits between the registry containing the profiles and the remote unit  hardware. The driver uses a prioritized discovery process for submitting profile information to the adapter firmware and checking for a successful association between a profile and the WLAN which allows automatic connection to the WLAN to be completed. If an association is established a match is considered found. If the association fails, the discovery process continues to the next highest priority profile in the driver's list of profiles. The process continues until the list is exhausted or a successful association takes place.","Once a successful association takes place the driver increments the priority counter stored for the selected profile in the registry. The counter is stored as a DWORD allowing it to become very large. The value of the counter determines the priority of the profile in the driver's list of profiles during the boot process. Therefore, the more often the particular network profile is associated during the boot process, the higher the priority becomes. The driver also stores the name of the selected profile for use by other programs. The profiles are stored redundantly in the adapter's parameter area. The driver reads through the profiles below its parameter area and collects the profile information for each profile.","Another feature of the present invention is to provide a graphical user interface which enables a user to develop a network architecture or to specify operational parameters for a mobile unit through the use of icons, buttons, meters, slides, or other objects implemental on an interactive display. More particularly, the present invention may also provide an interactive display to the user depicting a graph of the network architecture, wherein points represent mobile units, access points, network nodes, bridges, routers, gateways, hubs, or other well known designated network units together, while lines represent channels or other connectivity media and the user may define the architecture by pointing and clicking, or drag and dropping, on such objects on the display as is well known in the art. Network parameters such as shared encryption keys, access or authentication ranges of mobile units, security levels, quality of service levels, delay tolerances, addressing schedules and the like may be specified for each network node and\/or link so as to achieve the desired network architecture. One such architecture is specified by a user or network manager, it may be exported or broadcast as a software file to the actual various network elements represented, along with activation schedules, to indicate the duration, context, or other bounds with which the network is to be so configured.","In addition to the ad hoc network configuration by a user, by interacting with a graphical user interface, the present invention also allows the automatic reconfiguration of a network \u201con the fly\u201d, or adaptively in response to changing traffic patterns, instructions in signal protocols, or the like. Resident software modules at each network node may adaptively configure the network node or channel links attached to the network node, according to levels or type of incoming traffic, or in response to signaling protocols. Such adaptation may take place through the use of separate signaling channels or through the use of management packets addressed to a specific network node and designed to reconfigure that network node in connection with a specific session or traffic condition. In addition to the foregoing, the network node may also be reconfigured for a series or set of packets, i.e. in the context for providing higher quality of service to particular identified set of packets while providing normal quality of service to all other packets. One application of the foregoing is to achieve uniformity in the quality of service from end to end, along each network link from source to destination regardless of the particular packet path chosen or network nodes encountered during the transmission from source to destination. The exporting or automatic installation of software modules in network nodes or mobile units according to the present invention is one suitable method for achieving such \u201con the fly\u201d adaptive network configuration.","Various aspects of the techniques and apparatus may be implemented in digital circuitry, or in computer hardware, firmware, software, or in combinations of them. Apparatus of the invention may be implemented in computer products tangibly embodied in a machine-readable storage device for execution by a programmable processor. The foregoing techniques may be performed, for example, by a programmable processor executing a program of instructions to perform functions of the invention by operating on input data and generating output. The methods may advantageously be implemented in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from, and to transmit data and instructions to, a data storage system, at least one in\/out device, and at least one output device. Each computer program may be implemented in a high-level procedural or object-oriented programming language, or in assembly or machine language if desired; and in any case, the language may be compiled or interpreted language. Suitable processors include, by way of example, both general and special purpose microprocessors. Generally, a processor will receive instructions and data from read-only memory and\/or random access memory. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non-volatile memory, including by way of example, semiconductor devices, such as EPROM, EEPROM, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM disks. Any of the foregoing may be supplemented by or incorporated in, specially designed application-specific integrated circuits (ASICS).","A number of embodiments of the invention have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the invention. For example, in addition to the operation parameters associated with a WLAN connection (such as ESSID, encryption key, etc.) provided by current WLAN specifications, various additional properties, such as encryption algorithms, quality of service parameters, etc. may be autoconfigured as such features and properties are implemented on WLANs. Accordingly, other embodiments are within the scope of the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
