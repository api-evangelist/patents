---
title: Method and system for executing an internet radio application within a vehicle
abstract: Various embodiments may include a computer-implemented method and system for operating a computer application stored on a nomadic wireless communication device (ND) located within the vicinity of a vehicle. An input may be received at a vehicle computer system (VCS) to pair the VCS with the ND for establishing a wireless communication link. A number of instructions may be received at the VCS from the ND over the wireless communication link. The instructions may include instructions for establishing a connection with an internet radio application and instructions for prompting a user for one or more internet radio application events. A request from the user for the one or more internet radio application events may be received at the VCS and the one or more internet radio application events may be executed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09641625&OS=09641625&RS=09641625
owner: Ford Global Technologies, LLC
number: 09641625
owner_city: Dearborn
owner_country: US
publication_date: 20090609
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Technical Field","Various embodiments include a method and system for executing an internet radio application. More particularly, the various embodiments include executing an internet radio application from a vehicle.","2. Background","Typically, applications stored on a portable device (such as a mobile phone) require tactile commands to accomplish one or more operations of the application. For example, if a user desires to operate an internet radio application on his or her portable device, he or she may be required to physically input which stations and\/or genres of music they want to listen to from his or her portable device keypad. An exemplary internet radio application known in the art is the Pandora application distributed by Pandora Media, Inc. Furthermore, applications on a portable device may require the user to visually receive outputs from the application in order to operate the application. What is desired is a way for a user to operate one or more applications from a portable device using hands-free access in order to enable safe driving for the user.","An internet radio application is an exemplary application which a user may desire to operate using hands-free accessibility from his or her portable device. Various embodiments of an internet radio are present in the art. One exemplary environment in which a user may want to operate the internet radio application is in his or her vehicle equipped with the SYNC communications system manufactured and distributed by the Ford Motor Company.","U.S. Pat. No. 6,314,094 issued to Boys discloses a mobile wireless internet portable radio. The Internet-capable radio has a communication port for connection to a modem and a connection function for connecting to the Internet upon user initiation while connected to the modem. The radio also had sound circuitry for rendering audio data packets received over the Internet as analog audio output and for delivering the audio output to one or more speaker ports. Two or more stored hyperlinks addressing Internet broadcast servers are also present and a user input adapted to enable a user to select among the stored hyperlinks. Selection of one of the stored hyperlinks by the user input invokes the hyperlink and connects the radio to the server addressed by the hyperlink, initiating an audio data stream as data packets from the broadcast server to the radio. The radio renders the data stream as analog audio data delivered to the one or more speaker ports. The user input has a plurality of pushbuttons associated with hyperlinks, which can be asserted by activating a pushbutton. A directory server is used for editing user profiles and programming connected Internet-capable radios.","US Publication Number 2002\/0072326 to Qureshy et al discloses an intelligent radio. The intelligent radio apparatus is adapted to receive Web radio broadcasts. The Web Radio provides a user interface that is less like a computer program and more like a conventional radio. The intelligent radio provides familiar radio-type user controls such as switches, a tuning knob, joysticks, cursor controls, and voice activated controls. The radio-type user controls allow the user to select a Web radio station and control other aspects of the operation of the intelligent radio in a manner that is more like a conventional radio and less like a computer program. The intelligent radio is configured to run software needed to access the Internet. The intelligent radio also provides Internet telephony, voicemail, and voice-email capabilities.","One aspect of the various embodiments includes a computer-implemented method for operating a computer application stored on a nomadic wireless communication device (ND) located within the vicinity of a vehicle. The method may include receiving input at a vehicle computer system (VCS) to pair the VCS with the ND to establish a wireless communication link between the VCS and the ND. The method may further include receiving at the VCS one or more first instructions from the ND over the wireless communication link.","The one or more first instructions may include instructions for establishing a connection with an internet radio application and instructions for prompting a user for one or more internet radio application events. The instructions for establishing a connection with the internet radio application may further include instructions for establishing an Internet connection using the ND. In one embodiment, the one or more first instructions may further include instructions for disconnecting the connection between the internet radio application and the VCS.","The method may further include receiving at the VCS a request from the user for the one or more internet radio application events. The method may further include executing the one or more internet radio application events.","In some embodiments, executing the one or more internet radio application events may include transmitting one or more messages to the ND to execute the one or more internet radio application events according to the request. The one or more internet radio application events may include, but are not limited to, playing a plurality of songs, storing one or more songs, changing a station played from the internet radio application, changing a track played from the internet radio application, receiving and storing feedback associated with one or more songs, and terminating the internet radio application.","In some embodiments, the executing step of the method may include receiving one or more second instructions from the internet radio application executing on the ND. The one or more second instructions may include instructions for speaking textual information issued from the internet radio application. The textual information may include, but is not limited to, a connection confirmation, at least one radio station name, an artist name, and a song name.","In some embodiments, the first instructions or second instructions may further include at least one additional instruction associated with a completion of an operation performed by the one or more first instructions or the one or more second instructions. The method may further include transmitting an identifier and the at least one additional instruction to the internet radio application executing on the ND. The identifier may identify the completion of the operation performed by the one or more first instructions or the one or more second instructions.","In some embodiments, the method may further include utilizing an application programming interface (API) to establish a connection between the VCS and the internet radio application executing on the ND to transmit data between the VCS and the internet radio application.","In some embodiments, the method may further include receiving at the VCS a request from the user for operating the internet radio application executing on the ND. The request may be received from the user in response to a trigger in the vehicle such as a button press, a voice-activated trigger, or both.","Another aspect of the various embodiments includes a computer-implemented system for operating a computer application stored on a nomadic wireless communication device (ND) located within the vicinity of a vehicle. The system may include a vehicle computer system (VCS). The VCS may be configured to pair with the ND to establish a wireless communication link between the VCS and the ND. The VCS may be further configured to receive one or more first instructions from the ND over the wireless communication link.","The one or more first instructions may include instructions for establishing a wireless connection with an internet radio application and instructions for prompting a user for one or more internet radio application events. The instructions for establishing a connection with the internet radio application may further include instructions for establishing an Internet connection using the ND.","The VCS may be further configured to receive a request from the user for the one or more internet radio application events and execute the one or more internet radio application events.","In some embodiments, the VCS may execute the one or more internet radio application events by transmitting one or more messages to the ND for execution of the one or more internet radio application events according to the request.","The VCS maybe further configured to receive one or more second instructions from the ND. The one or more second instructions may include instructions for speaking textual information issued from the internet radio application.","The first instructions or second instructions may further include at least one additional instruction associated with a completion of an operation performed by the one or more first instructions or the one or more second instructions. The VCS maybe further configured to transmit an identifier and the at least one additional instruction to the internet radio application. The identifier may identify the completion of the operation performed by the one or more first instructions or the one or more second instructions.","Another aspect of the various embodiments includes a computer-implemented system for operating a computer application stored on a nomadic wireless communication device (ND) located within the vicinity of a vehicle. The system may include a means for receiving input at a vehicle computer system (VCS) to pair the VCS with the ND to establish a wireless communication link between the VCS and the ND. The system may further include a means for receiving a request from a user for operating an internet radio application executing on the ND. The system may further include a means for receiving at the VCS one or more first instructions from the ND over the wireless communication link.","The one or more first instructions may include instructions for establishing a connection with an internet radio application and instructions for prompting the user for one or more internet radio application events.","The system may further include a means for receiving at the VCS a request from the user for the one or more internet radio application events. The system may further include a means for executing the one or more internet radio application events. The system may execute the one or more internet radio application events by transmitting one or more messages to the ND to execute the one or more internet radio application events according to the request.","These and other aspects of the present invention will be better understood in view of the attached drawings and following detailed description of the invention.","Detailed embodiments of the present invention are disclosed herein. However, it is to be understood that the disclosed embodiments are merely exemplary of an invention that may be embodied in various and alternative forms. Therefore, specific functional details disclosed herein are not to be interpreted as limiting, but merely as a representative basis for the claims and\/or as a representative basis for teaching one skilled in the art to variously employ the present invention.","Mobile devices today are more than just a communication vehicle for users. Mobile devices may be equipped with features that provide the user the benefit of engaging in activities that may traditionally have been performed through another means. With mobile devices becoming an integral part of society, users want uninterrupted access to their device's services and features. The difficulty and concern with such access occurs when the user is driving a vehicle. Drivers, in particular, cannot be distracted from focusing on their driving.","For example, drivers may want to access certain application on their phone such as audio files, text messages, and their calendar to name a few. Typically, a user may be required to physically operate his or her mobile device in order to retrieve these applications. This may not only create a hazard for the driver and\/or passenger, but may create a hazard for others on the road as well.","Some mobile devices provide applications for an internet radio (e.g., the Pandora Application). Internet radio allows a user to listen to a number of radio stations, as in conventional radios, but the music is streamed over an internet connection to the mobile device. Like conventional radios, internet radios, even on mobile devices, may require a user to physically operate the application through, for example, button presses. Furthermore, the internet radio may only have a visual interface, thus requiring the user to receive all outputs from the internet radio and submit all inputs through visual interaction with the application.","Accordingly, a method and system for managing an internet radio application from a vehicle is presented in one or more embodiments. While various embodiment disclosed are presented in the context of operating an internet radio application from a vehicle, this is provided by way of example only. The present invention may be used within other types of environments in which hands-free accessibility of mobile device applications is desired.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 1","b":["1","1","4"]},"In the illustrative embodiment shown in , a processor  controls at least some portion of the operation of the vehicle-based computing system . Provided within the vehicle, the processor  allows onboard processing of commands and routines. Further, the processor  maybe connected to both non-persistent  and persistent storage . In this illustrative embodiment, the non-persistent storage is random access memory (RAM) and the persistent storage is a hard disk drive (HDD) or flash memory.","The processor  is also provided with a number of different inputs allowing the user to interface with the processor . In this illustrative embodiment, a microphone , an auxiliary input  (for input ), a USB input , a GPS input  and a BLUETOOTH input  are all provided. An input selector  is also provided, to allow a user to swap between various inputs. Input to both the microphone and the auxiliary connector is converted from analog to digital by a converter  before being passed to the processor .","Outputs to the system can include, but are not limited to, a visual display  and a speaker  or stereo system output. The speaker is connected to an amplifier  and receives its signal from the processor  through a digital-to-analog converter . Output can also be made to a remote BLUETOOTH device such as PND  or a USB device such as vehicle navigation device  along the bi-directional data streams shown at  and  respectively.","In one illustrative embodiment, the system  uses the BLUETOOTH transceiver  to communicate  with a user's nomadic device  (e.g., cell phone, smart phone, PDA, etc.) (hereinafter referred to ND ) using BLUETOOTH antenna . The ND  can then be used to communicate  with a network  outside the vehicle  through, for example, communication  with a cellular tower .","Pairing a ND  and the BLUETOOTH transceiver  can be instructed through a button  or similar input, telling the CPU  that the onboard BLUETOOTH transceiver will be paired with a BLUETOOTH transceiver in a nomadic device.","Data may be communicated between CPU  and network  utilizing, for example, a data-plan, data over voice, or DTMF tones associated with nomadic device . Alternatively, it may be desirable to include an onboard modem  in order to transfer data between CPU  and network  over the voice band. In one illustrative embodiment, the processor  is provided with an operating system including an API to communicate with modem application software. The modem application software may access an embedded module or firmware on the BLUETOOTH transceiver to complete wireless communication with a remote BLUETOOTH transceiver (such as that found in a nomadic device). In another embodiment, nomadic device  includes a modem for voice band or broadband data communication. In the data-over-voice embodiment, a technique known as frequency division multiplexing may be implemented when the owner of the nomadic device can talk over the device while data is being transferred. At other times, when the owner is not using the device, the data transfer can use the whole bandwidth (300 Hz to 3.4 kHz in one example).","If the user has a data-plan associated with the nomadic device, it is possible that the data-plan allows for broad-band transmission and the system could use a much wider bandwidth (speeding up data transfer). In still another embodiment, nomadic device  is replaced with a cellular communication device (not shown) that is affixed to vehicle .","In one embodiment, incoming data can be passed through the nomadic device via a data-over-voice or data-plan, through the onboard BLUETOOTH transceiver and into the vehicle's internal processor . In the case of certain temporary data, for example, the data can be stored on the HDD or other storage media  until such time as the data is no longer needed.","Additional sources that may interface with the vehicle include a personal navigation device , having, for example, a USB connection  and\/or an antenna ; or a vehicle navigation device , having a USB  or other connection, an onboard GPS device , or remote navigation system (not shown) having connectivity to network .","Further, the CPU  could be in communication with a variety of other auxiliary devices . These devices can be connected through a wireless  or wired  connection. Also, or alternatively, the CPU could be connected to a vehicle based wireless router , using for example a WiFi  transceiver. This could allow the CPU to connect to remote networks in range of the local router .","Operation of one or more embodiments of the present invention will be described with respect to . Upon pairing the ND  to the CPU  as in block , a user may request operation of the internet radio computer application (hereinafter referred to as the \u201cApplication\u201d) by triggering activation of the Application from the vehicle as in block . For example, a user may press a button on the vehicle steering wheel (e.g., a push-to-talk button) or speak a command to activate. In one embodiment, prior to receiving a request for the Application, the CPU  may establish a connection to one or more client-side APIs or applets executing on ND  using an application programming interface (API) as illustrated in block . The API is described below in greater detail with respect to .","The CPU  may establish a connection based on a trigger from the user (e.g., a button press, a voice command or both). For example, a user may press a push-to-talk button disposed on a steering wheel of the vehicle and then say \u201capplications.\u201d The CPU  may include speech recognition software so that the CPU  may interpret and process instructions issued from a user. For example, the CPU  may receive instruction for establishing a connection with the ND  using the API. It should be understood that the speech recognition software may recognize other commands as described throughout this application and that the example provided is illustrative.","Using the API, the CPU  may then query the ND  to determine the applications present on the device for operation via CPU . The user may or may not then receive a prompt for another request. In either case, the user may then issue another request (e.g., through a button press and\/or voice instruction) for one or more applications available on the ND . The CPU  may provide to the user (e.g., via a display  or in a spoken language outputted from speaker ) the one or more applications available on the ND  as in block .","The requested Application may or may not be available on the ND  as in block . If the Application is not available, the user may be prompted that the Application is unavailable as illustrated in block . The user may be required to first download the Application from an external website or from the VCS  memory (e.g., HDD ) prior to operating the Application. If the Application is available on the ND , the user may then operate the Application as described below.","In one embodiment, the user may \u201cwake-up\u201d the CPU  (e.g., through a button press or a voice command) prior to making a request for any application so that the user may operate applications via CPU .","If the Application is available on the ND  and when a request for activation of the Application is received by the CPU , the CPU  may then communicate a message to the ND  to activate or launch the requested Application on ND  as in block . The message may be translated into Unicode (e.g., UTF-8 or UTF-16) and transmitted to the ND . In one illustrative embodiment, the message may be translated into ASCII code.","Upon receiving the message from the CPU , the ND  may launch the Application as in block . Using the client-side API or applet, the Application may output a number of instructions to the CPU  for operating the Application as will be described in further detail below with respect to . In one embodiment, the instructions may be in the extensible markup language (XML) format. Alternatively or additionally, the Application may directly output instructions from the ND  to the CPU  for accomplishing one or more operations of the various embodiments of the present invention.","In one embodiment, one or more of the operations\/instructions may be synchronous or asynchronous. As used herein, an asynchronous operation may be one that runs until a return message is sent back to the Application indicating that the instruction is completed. In one embodiment, instructions relating to the operation and management of the Application may be transmitted and executed before the Application receives the completion instruction.","The instructions to perform the operation may be in the form of \u201cprocedure (parameter)\u201d wherein \u201cprocedure\u201d may define the task or event to be performed and \u201cparameter\u201d may define the one or more arguments that the procedure may accept to perform the task or event. It should be understood that this format is exemplary and, therefore, non-limiting, such that other formats may be used for achieving one or more operations described below.","With additional reference to , upon receiving one or more messages from the CPU , the Application may transmit an instruction to connect with the CPU  as in block  (). One exemplary instruction may be \u201cClientAppConnect (appName).\u201d A connection may be established as illustrated in block .","\u201cAppName\u201d may identify the application to be operated. Thus, for example, if the application is the internet radio application (e.g., such as \u201cPandora\u201d manufactured and distributed by Pandora Media, Inc.), the instruction may be written as \u201cClientAppConnect (Pandora).\u201d If the application is an appointment reader, the syntax may be \u201cClientAppConnect (CalendarReader).\u201d In one embodiment, the Application may receive a return instruction identifying a connection status (e.g., a completed connection) with the CPU . An exemplary return instruction may be \u201cOnConnectionStatusReceived.\u201d CPU  may determine whether the connection operation is complete as in block . If the connection operation is not complete, then CPU  may delay transmission of the OnConnectionStatusReceived instruction as illustrated in block . If the connection operation is complete, then CPU  may transmit the instruction to the Application as in block .","The Application may also receive a unique identification (ID) number representing the connection status with the CPU . The ID may only be valid for the duration of the connection (i.e., until the connection is disconnected).","After a connection has been made with the CPU , the Application may be activated and operated through the CPU  after launching the internet radio application as in block . Establishing a connection may include establishing a connection to the Application over a communication network (e.g., the Internet).","A user may have the option to disconnect operation of the Application at any time as illustrated in block . If the user chooses to disconnect use of the Application, he or she may speak a command to exit the Application. One or more messages may be transmitted from the CPU  to the ND  for disconnecting the internet radio session. In response, a disconnect instruction may be received by CPU  as in block . An instruction to disconnect with the CPU  may be represented by \u201cClientAppDisconnect.\u201d Accordingly, once the connection to the CPU  is terminated, any further communication by the Application to the CPU  using the same connection may be ignored as in block .","If the user chooses not to disconnect, CPU  may receive instructions from ND  to speak the connection status to operate the Application as in block . Operation of the Application may be accomplished through a text-to-speech (TTS) and\/or a speech-to-text (STT) conversion. For example, when a user desires to use the Application (and other applications that may be on his or her ND ), he or she may issue a voice-activated command to activate the Application which may be received by microphone . A module in the CPU  may include computer-executable instructions for converting the speech into text. The text may then be communicated (e.g., in ASCII code) to the client-side API or applet in the ND  for activating the requested Application. The Application may then be activated upon receiving the instructions from the client-side API.","The ND  may then issue a return command to the CPU  to speak the requested application signaling to the user that the requested application has been identified as in block . The return command may be generated from the Application as text. Accordingly, an instruction may be issued by the Application to speak the specified text to the user as in block . For example, if the user requests the application \u201cPandora,\u201d the Pandora application (through the ND ) may then transmit an instruction to the CPU  to say, for example, \u201cWelcome to Pandora. Connecting . . . \u201d Such a message may be displayed on the visual interface of the ND  (if operating the Application through the ND ). Using one or more embodiments of the present invention, however, the text maybe converted to speech.","One syntax example of a return instruction may be \u201cSpeakText (text,completionCorrelationID)\u201d (hereinafter referred to as \u201cthe speak text instruction\u201d). The instruction may include an additional instruction to identify the completion of the event (i.e., speaking the text) as in block . One syntax example of such an instruction may be \u201cOnSpeakComplete.\u201d CPU  may determine whether the speak text operation is complete. If CPU  determines that the operation is not complete, CPU  may delay transmission of the OnSpeakComplete instruction as illustrated in block . If the connection operation is complete, then CPU  may transmit the instruction to the Application as in block . The speak text instruction may be used to speak the specified text through the VCS  speakers . SpeakText may represent the event that is to occur, \u201ctext\u201d may represent the text to be spoken by the CPU  through VCS , and \u201ccompletionCorrelationID\u201d may represent an identifier to be returned upon completion of the event. The identifier may be sent with the \u201cOnSpeakComplete\u201d event.","In one embodiment, in order for the speak text instruction to be completed, the Application may or may not be required to be \u201cin focus\u201d as in block . Thus, for example, for the user to receive the message, \u201cWelcome to Pandora,\u201d from the VCS , the system may be programmed to ensure that the Application is the one with which the user is interacting at that time. In instances where the system may be programmed so that Application does not need to be \u201cin focus,\u201d the Application may issue the same or a separate instruction. One example of a separate instruction may be \u201cspeakAlert (text,completionCorrelationID)\u201d (hereinafter referred to as the \u201cspeak alert instruction\u201d) which may be received by CPU  if the Application is not required to be in focus as in block . If the Application is required to be in focus, then the speak text instruction may be received as in block . The speak alert instruction may be asynchronous and include the instruction \u201cOnSpeakAlertComplete\u201d to signify the completion of the speak text instruction event to the Application. CPU  may determine whether the speak alert operation is complete as in block . If the operation is not complete, then CPU  may delay transmission of the OnSpeakAlertComplete instruction as illustrated in block . If the connection operation is complete, then CPU  may transmit the instruction to the Application as in block .","It should be understood that the speak text instruction may be issued when connecting to the Application and during operation of the Application. Thus, it is not only limited to launching the Application. It may be used for commanding operation of the Application.","For example, the CPU  may receive from the Application instructions to provide one or more radio channels that can be played to the user from the CPU  through VCS . These channels may then be presented to the user using the speak text instructions. For example, an instruction issued from the Application may cause the CPU  to say, \u201cPlease say a station: \u201890's rock\u2019, \u201870's classics,\u2019 \u2018top 40.\u2019\u201d If a user desires to listen to a particular genre of music or channel from his or her Application, he or she may say \u201cTop 40\u201d which may be received by microphone  and transmitted to the CPU . The CPU  may then transmit one or more messages (e.g., in ASCII code) to the client-side API or applet on ND  to cause the Application to launch a Top 40 station. The audio from that channel may then be streamed to the CPU  for playback through speakers .","Other non-limiting voice commands for operating the Application may include commands for moving between tracks (e.g., \u201cnext track\u201d), rating songs (e.g., \u201cvote down\u201d and \u201cvote up\u201d), saving songs (e.g., \u201cbookmark song\u201d), moving between stations (e.g., \u201cchange stations\u201d), listing stations (e.g., \u201clist stations\u201d), and exiting the Application (e.g., \u201cexit\u201d).","The CPU  may prompt the user for commands to operate the Application as in block . For example, a user may hear \u201cPlease say a station: \u201890's rock\u2019, \u201870's classics,\u2019 \u2018top 40.\u2019\u201d One or more of these prompts may include a plurality of parameters. One exemplary instruction may be for prompting the user and listening for a recognized response. As will be described below, the recognized responses may be based on additional instructions programmed to the module. The prompting instructions and the recognizing response instructions may have a particular syntax. For example, one exemplary syntax may be \u201cPromptAndListen (initialPrompt, helpPrompt, rejectionPrompt, timeoutPrompt, recoPhraseSetHandleList, completionCorrelationID) (hereinafter referred to as the \u201cprompt instruction\u201d). This instruction may be associated with an additional instruction signifying the completion of this event. An exemplary syntax of such an instruction may be \u201cOnPromptAndListenComplete.\u201d CPU  may determine whether the prompt and listen operation is complete as in block . If the operation is not complete, then CPU  may delay transmission of the OnPromptAndListenComplete instruction as illustrated in block . If the prompt and listen operation is complete, then CPU  may transmit the instruction to the Application as in block .","\u201cPromptAndListen\u201d of the prompt instruction may represent the occurring event (i.e., prompt and listen). \u201cinitialPrompt\u201d may include the text to be spoken to the user before listening starts. \u201chelpPrompt\u201d may include the text to be spoken to the user if he or she asks for help during a listening event. \u201crejectionPrompt\u201d may include text to be spoken to a user if he or she fails to speak a recognizable phrase. \u201ctimeoutPrompt\u201d may include the text to be spoken to the user if he or she fails to speak a recognizable phrase. \u201crecoPhraseSetHandleList\u201d may include a number of phrase set handles (or phrase set identifiers) created during the event session for recognizing one or more pre-programmed phrases. In one embodiment, any recognized phrases may be returned to the application using the \u201cOnPromptAndListenComplete\u201d instruction. The return instruction may also include an identifier included in the \u201ccompletionCorrelationID\u201d instruction event.","Recognizing the responses listened for by the CPU  upon outputting a prompt may be accomplished through a number of further instructions as in block . These instructions may create a set of phrases that can be listened for during a \u201cPromptAndListen\u201d operation. An exemplary syntax of such an instruction may be \u201cCreateRecoPhraseSet (phraseSetList, thresholdIgnore, thresholdReject, completionCorrelationID)\u201d (hereinafter referred to as the \u201crecognized response instruction\u201d). The recognized response instruction may be associated with an additional instruction to signify the completion of the recognized response event. An exemplary return instruction may be \u201cOnRecoPhraseSetCreationComplete.\u201d The return instruction may include a phrase set identifier (i.e., handle) for use with subsequent prompt instructions. CPU  may determine whether the recognized response operation is complete as in block . If the operation is not complete, then CPU  may delay transmission of the OnRecoPhraseSetCreationComplete instruction as illustrated in block . If the recognized response operation is complete, then CPU  may transmit the instruction to the Application as in block .","\u201cCreatRecoPhraseSet\u201d of the recognized response instruction may represent the phrase set creation event used for recognition. \u201cphraseSetList may include a number of phrase strings to be recognized by the CPU . \u201cthresholdignore\u201d may include a numeric value between a predetermined range (e.g., between 0 and 100) indicating the recognition confidence level to be attained for a response (i.e., phrase) from the user to not be ignored. \u201cthresholdReject\u201d may include a numeric value between a predetermined range (e.g., between 0 and 100) indicating the recognition confidence level to be attained for a response (i.e., phrase) from the user to not be rejected. \u201ccompletionCorrelationID\u201d may be an identifier included in the \u201cOnRecoPhraseSetCreationComplete\u201d instruction which may signify completion of a phrase-set creation operation.","Upon receiving a request for the internet radio application event (e.g., play \u201cTop 40\u201d), the CPU  may then transmit one or more messages (e.g., in ASCII code) to the client-side API or applet causing the Application to execute the internet radio application event as in block . For example, if the user requests \u201cTop 40,\u201d the Application may launch media items (e.g., songs) from the \u201cTop 40\u201d staton. The CPU  may then receive over communication network  (e.g., the Internet) media items (e.g., songs) from the requested station as in block . The songs may be received as metadata from the Application. In one embodiment, the CPU  may receive a playlist of songs. The internet application event may be executed at the VCS  such that, for example, the audio from that channel may then be streamed to the user as in block . The one or more internet radio application events may be to terminate operation of the Application. If the CPU  receives instructions to exit the Application as in block , then CPU  may terminate the session as in block .","Other non-limiting internet radio application events may include moving between tracks, rating songs, saving songs, moving between stations, and listing stations.","In one embodiment, text may be displayed on display . The text that is displayed to be limited to a predetermined amount (e.g., 12 characters). In one embodiment, the text may be displayed to the user in a \u201cmarquee-style.\u201d The Application may issue a further instruction in order to accomplish this operation. One example instruction may be \u201cDisplayText (text)\u201d where \u201ctext\u201d may represent the text to be displayed on the radio head (not shown) of the CPU . When a station is selected by a user (e.g., \u201ctop 40\u201d), the Application may transmit metadata representing information about the media item. This may accomplish, in some embodiments, a \u201cplay list\u201d to be generated and displayed to the user. In one embodiment, the system may be programmed so that the Application is in focus in order for this instruction to be performed.","In some embodiments, the Application may communicate with a number of executable programs (i.e., dynamic link libraries or DLLs) stored in a module in the ND . The DLLs may be used to interface with an Application programming interface (API) in order to communicate with the CPU . Additionally, the Application may communicate with one or more DLLs for performing World Wide Web (WWW) operations (e.g., based on the .Net architecture developed and distributed by the Microsoft Corporation).",{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 4","b":["209","247","209","201","205","247","203","207","209","247","211","209"]},"Data is passed from the remote device to the vehicle communication system through a communication link . This can be a wired or wireless link, and can be half or full duplex. In one illustrative embodiment, the communication is a full duplex communication. In one non-limiting example, the link is a BLUETOOTH link.","The vehicle system  has various applications stored thereon, including, but not limited to: a communications manager , an API abstraction application , a management and arbitration application , and an adaptation application  (these applications can also be layers of a single or plurality of applications, such as a service provider application ).","The communication manager  may handle all transports, forwarding incoming messages to the abstraction application (or layer) , and ensuring that outgoing messages are sent via the proper transport channel.","The abstraction application  may transform incoming messages into action to be performed by a service and create outgoing messages out of information and events from local modules.","The management and arbitration application  may virtualize the local vehicle based computing system for each application by managing use of HMI elements and governing resource consumption.","The adaptation application  may encapsulate the local API and coexist with core local applications. This application may be modified or replaced to allow a communication connection to be compatible with different versions of the vehicle based computing system software.","In at least one exemplary implementation, a message protocol may be used to encode messages exchanged between a mobile client and the vehicle based computing system to command and control a Human Machine Interface (HMI) for purposes such as displaying and speaking text, listening, propagating button-pushes, etc. These messages may contain small amounts of data (e.g. text phrases, button identifiers, status, thumb-drive file data, configuration data, etc.). This protocol, using complementary support provided by the message specification, will permit multiple client application sessions to concurrently use a single transport channel.","Other open standard protocols may be used where appropriate and available, such as the A2DP BLUETOOTH profile for streaming audio from the mobile device to the vehicle audio system (not all mobile devices support A2DP). However, some open standard protocols are not always available on every mobile device, or are not always implemented uniformly. In addition, API support for use of these protocols may not be uniformly implemented on all mobile platforms. Therefore, the function of some open standard protocols (e.g. OBEX) may be provided as part of the message protocol, when it is technically simple enough to do and a significant increase in uniformity can be achieved across platforms.","Transports may be configured to support full-duplex communication in order to provide prompt event propagation between client applications and the vehicle based computing system. A transport may also support multiple concurrent channels in order to permit concurrent connections from one or more devices.","One or more exemplary transports are Serial (RS232) and TCP\/IP. Serial transport communication with mobile devices may be provided, for example, through a BLUETOOTH Serial Profile. Most mobile devices support this profile, and most provide a common programming model for its use. The serial programming model is widely used and highly uniform. If the vehicle based computing system provides Serial-over-USB support, then the Serial transport could be used with any mobile device that is USB-connected to the vehicle based computing system (if that mobile device provides support for Serial over its USB connection).","In addition, a TCP\/IP transport provides the ability for applications running on the vehicle based computing system to use the local HMI. If the module provides external TCP\/IP connectivity in the future, this transport will allow external clients to connect over that TCP\/IP connectivity. The socket programming model (including the API) for TCP\/IP is typically highly portable. Such an example would be a locally loaded application , using a client-side API  to communicate through a local socket .","In at least one exemplary embodiment, the decoupled nature of the system, where the vehicle based computing system is unaware of client applications until they connect, demands a discovery mechanism whereby system and the mobile device client can discover each other's existence and capabilities.","Dual discovery is possible, whereby the mobile device client will be able to discover the environment, locale and HMI capabilities of the local platform and the system will be able to discover the applications available on a remote device and have the ability to launch those applications.","In this illustrative embodiment, the native API  has various services associated therewith, that can be accessed by remote devices through function calls. For example, a display function  may be provided.","The system may provide an API allowing client applications to write to vehicle displays and query their characteristics. The characteristics of each display may be described generically such that client applications will not require hard coding for individual display types (Type 1 FDM, Type 3 GAP, Type 6 Navigation, etc). Specifically, the system may enumerate each display and indicate each display's intended usage (primary or secondary display). Furthermore, the system may enumerate the writable text fields of each display, provide each writable text field's dimensions, and indicate each field's intended general usage. To promote consistency with the current user interface, support for the scrolling of long text may also be included, where permitted by driver distraction rules.","The system may also include text to speech capability . The system may provide an API allowing client applications to leverage the vehicle based computing system's text-to-speech functionality. Client applications may also be able to interleave the play of audio icons with spoken text. They may be able to utilize preexisting audio icons or provide short audio files of their own. The format of application provided audio files will be limited to those natively supported.","Further functionality of the illustrative embodiments may include one or more button inputs . One example of this would be controlling an application on a remote device through use of buttons installed in a vehicle (such as steering wheel buttons).","Another exemplary function could be a speech recognition function . The system may provide an API allowing client applications to leverage the vehicle based computing system's speech recognition capabilities. The system may also simplify the vehicle based computing systems' native speech recognition APIs to provide a simpler development model for client application developers. The speech grammar APIs will also be simplified while retaining most of the native API's flexibility. For example, the system (on behalf of client applications) will recognize global voice commands such as \u201cBLUETOOTH Audio\u201d or \u201cUSB\u201d and pass control to the appropriate application.","Audio I\/O  may also be provided in an exemplary implementation. The system may provide regulated access to the HMI while enforcing the interface conventions that are coded into core applications. A single \u201cin focus\u201d client application may be allowed primary access to the display, buttons, audio capture or speech engine. Client applications without focus (e.g. Text Messaging, Turn By Turn Navigation, etc.) will be allowed to make short announcements (e.g. \u201cNew Message Arrived\u201d or \u201cTurn Left\u201d). Stereo audio may continue to play after a mobile device audio application.","The system may provide an API allowing client applications to capture audio recorded using a microphone. The client application may specify duration of the capture, though capture can be interrupted at any time. Captured audio may be returned to the client application or stored on a local or portable drive.","Additionally, file I\/O  may also be provided with the system. For example, the system may provide an API allowing client applications to read from, write to, create and\/or delete files on a remote drive. Access to the remote drive file system may be restricted in that a client application may only read\/edit data in a directory specific to that client application.","While the best mode for carrying out the invention has been described in detail, those familiar with the art to which this invention relates will recognize various alternative designs and embodiments for practicing the invention as defined by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Features of the present invention which are believed to be novel are set forth with particularity in the appended claims. The present invention, both as to its organization and manner of operation, together with further object and advantages thereof, may best be understood with reference to the following description, taken in connection with the accompanying drawings, which:",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
