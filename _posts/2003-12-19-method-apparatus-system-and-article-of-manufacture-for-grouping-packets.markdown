---
title: Method, apparatus, system, and article of manufacture for grouping packets
abstract: In certain embodiments, a first unit receives a plurality of packets, wherein the plurality of packets are capable of being processed according to at least a first protocol and a second protocol. The first unit sorts the plurality of packets into a first group and a second group, wherein all packets in the first group are capable of being processed according to the first protocol, and all packets in the second group are capable of being processed according to the second protocol. The first unit sends the first group and the second group to a second unit.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07814219&OS=07814219&RS=07814219
owner: Intel Corporation
number: 07814219
owner_city: Santa Clara
owner_country: US
publication_date: 20031219
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["1. Field","The disclosure relates to a method, apparatus, system, and article of manufacture for grouping packets.","2. Background","A network may be a system for communication between a plurality of devices. In networking, a communications protocol or a network protocol may be the specification of a set of rules for a particular type of communication. Different protocols may describe different aspects of a single communication. Taken together, the different protocols that describe different aspects of the single communication may form a protocol stack.","Computer networks may be implemented using a variety of protocol stack architectures, where a protocol stack is a particular software implementation of a computer networking protocol suite. A protocol stack may have a plurality of protocol modules. The protocol modules may be referred to as protocol layers in the protocol stack.","For example, a protocol stack may include a Transmission Control Protocol (TCP) layer running over an Internet Protocol (IP) layer, where the IP layer runs over an Ethernet layer. Operating systems may have software interfaces between various layers of protocol stacks. For example, the Microsoft Windows* operating system has the Network Driver Interface Specification (NDIS) interface. The NDIS interface may define a plurality of Application Programming Interfaces (API) for devices, such as, Network Interface cards (NIC). The NDIS APIs may be used for integrating protocol drivers and device drivers. Other operating systems may have other software interfaces for various layers of protocol stacks. Microsoft Windows is a trademark of Microsoft Corp.","In the following description, reference is made to the accompanying drawings which form a part hereof and which illustrate several embodiments. It is understood that other embodiments may be utilized and structural and operational changes may be made.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["100","102","104","100","102","104","102","104","102","104","102","104","104","104"]},"The host  may include one or more protocol layers . . . , an operating system interface , and a device driver . The host may  may include additional components (not shown) such as a processor, a memory, and an operating system.","In certain embodiments, the protocol layers . . . , may include any protocol layer, such as, Internet Packet Exchange\/Sequential Packet exchange (IPX\/SPX*), NetBios Extended User Interface (NetBEUI*), Internet Protocol Version 4 (IPv4), etc. IPX\/SPX is a local-area network communications protocol that exchanges information between network clients, applications, and network peripherals. NetBEUI is an enhanced version of the NetBIOS protocol used by various network operating systems. IPv4 is an Internet Protocol over which other protocols, such as, the Transmission Control Protocol (TCP), can run. Additional protocol layers such as Internet Protocol version 6 (IPv6) may also be included in the protocol layers . . . . IPX and SPX are trademarks of Novell, Inc.NetBEUI is a trademark of International Business Machines Corp.","In certain embodiments the operating system interface  may include an NDIS  interface or other interfaces. The operating system interface  may be used for interfacing the protocol layers . . . with the device driver . In certain embodiments, the operating system interface  may include APIs capable of processing groups of packets.","The device driver  may be a program that controls the hardware device . The device driver  may act like a translator between the hardware device  and the operating system interface . The device driver  may accept commands from the operating system interface  and translate the accepted commands into specialized commands for the hardware device . In certain embodiments, in which the hardware device  is a network adapter, the device driver  may be a driver for the network adapter.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["110","108","102","108","106","106"],"i":["a ","n. "]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 2","FIG. 1"],"b":["100","102","200","200","200","200","102"],"i":["a ","m","a ","m "]},"The hardware device  sends the packets . . . to the device driver . The packets . . . may be sent in the same order in which the packets are received by the hardware device . In certain embodiments, where packet order is not important, the packets . . . may be sent in a different order than the order in which the packets are received by the hardware device . However, packet order is maintained within any end-to-end communication, such as, a TCP connection. Furthermore, the hardware device  may sent a packet to the device driver , in response to the packet arriving at the hardware device  or may wait for a plurality of packets to arrive at the hardware device  before sending the plurality of packets to the device driver .","In association with a packet . . . that is sent by the hardware device , the hardware device  may indicate a protocol layer that is capable of processing the packet . . . . For example, the hardware device  may send packet to the device driver  and indicate that packet is capable of being processed by an IPX\/SPX protocol layer, such as protocol layer A . In alternative embodiments, a packet . . . may include information on the protocol layer that is capable of processing the packet . . . , and the hardware device  may not indicate the protocol layer of a packet while sending the packet to the device driver .","The device driver  receives the packets . . . from the hardware device  and sorts the packets into one or more packet bundles . . . corresponding to the protocol layers . . . . For example, packet bundle A may include the packets . . . that are capable of being processed by protocol layer A , packet bundle B may include the packets . . . that are capable of being processed by protocol layer B , and packet bundle N may include the packets . . . that are capable of being processed by protocol layer N , where the packets . . . , . . . , . . . correspond to the packets . . . that are received by the device driver . All packets included in a packet bundle are capable of being processed by a single protocol layer. For example, all packets included in the packet bundle A  are capable of being processed by the protocol layer A , all packets in the packet bundle B are capable of being processed by the protocol layer B , and all packets in the packet bundle N are capable of being processed by the protocol layer N ","The device driver  sends the packet bundles . . . to the operating system interface . The operating system interface  forwards the packet bundles . . . to the corresponding protocol layer . . . for processing. For example, in certain embodiments the operating system interface  may send the packet bundle A to the protocol layer A , the packet bundle B to the protocol layer B , the packet bundle N to the protocol layer N . Packet order is maintained within any end-to-end communication, such as, a TCP connection, by both the device driver  and the operating system interface .","For example, in certain embodiments if the packets . . . can collectively be processed by the IPX\/SPX, NetBEUI and IPv4 protocol layers, then the device driver  may sort the packets . . . into packets bundles corresponding to the IPX\/SPX, NetBEUI and IPv4 protocol layers. In certain embodiments, the device driver  may adopt various strategies that take into consideration the latency for processing packets in deciding the number of packets to bundle in a packet bundle . . . ","The operating system interface  may forward the packets in the packet bundle corresponding to the IPX\/SPX protocol layer to be processed by the IPX\/SPX protocol layer. Additionally, the operating system interface  forwards the packets in the packet bundle corresponding to the NetBEUI protocol layer to be processed by the NetBEUI protocol layer and further forwards the packets in the packet bundle corresponding to the IPv4 protocol layer to be processed by the IPv4 layer.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2","b":["110","110","108","6","108"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 3","FIGS. 1-2"],"b":["200","200"],"i":["a ","m "]},"Control starts at block , where the hardware device  sends a sequence of packets . . . to the device driver , and for each packet . . . indicates to the device driver , the corresponding protocol layer . . . that is capable of processing the packet.","The device driver  receives (at block ) the packets . . . . The device driver sorts (at block ) the received packets . . . into one or more packet bundles . . . based on the protocol layer capable of processing each of the received packets . . . , such that, all packets sorted into a packet bundle are capable of being processing by the same protocol layer and different packet bundles may be capable of being processed by different protocol layers.","The device driver  sends (at block ) the packet bundles . . . to the operating system interface . The operating system interface  forwards (at block ) the packet bundles . . . to the corresponding protocol layer . . . for processing.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 3","b":["110","200","200","202","202","202","202","108","108","202","202","106","106"],"i":["a ","m ","a ","n","a ","n ","a ","n ","a ","n "]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 4","b":"110"},"The device driver  takes an input  from the hardware device  and sends an output  to the operating system interface , where in certain embodiments the input  includes packets , , ; , , , , , , , where each packet is capable of being processed by one protocol layer, such as, IPX\/SPX, NetBEUI, or IPv4. For example, Packet A  is capable of being processed by the IPX\/SPX protocol. The device driver  sorts the packets in the input  into three groups based on the protocol capable of processing the packets in the input .","For example, in certain embodiments the device driver  may determine that packets , , ,  are capable of being processed by the IPX\/SPX protocol layer, packets , ,  are capable of being processed by the IPv4 protocol layer, and packets , ,  are capable of being processed by the NetBEUI protocol layer. The device driver  may sort the packets received in the input  into an IPX\/SPX packet bundle  that includes the packets , , , , an IPv4 packet bundle  that includes the packets , , , and a NetBEUI packet bundle  that includes the packets , , . The device driver  sends the output , comprising the packet bundles , , , to the operating system interface .",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 4","b":["110","110","108"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 5","b":["100","110","102"]},"Control starts at block , where a first unit receives a plurality of packets, wherein the plurality of packets are capable of being processed according to at least a first protocol and a second protocol. In certain embodiments the first unit is the device driver . In certain embodiments, the first unit is the hardware device .","The first unit sorts (at block ) the plurality of packets into a first group and a second group, wherein all packets in the first group are capable of being processed according to the first protocol, and all packets in the second group are capable of being processed according to the second protocol.","The first unit sends (at block ) the first group and the second group to a second unit. In certain embodiments, in which the first unit the device driver , the second unit may comprise the operating system interface . In certain other embodiments, the first unit may be the hardware device  and the second unit may comprise the device driver . In such a case, the device driver  does not have to parse the incoming packets for the operating system interface . In certain additional embodiments, the first unit may be the hardware device  and the second unit may comprise the operating system interface .","Certain embodiments group received packets by protocol type. The groups of packets are sent to corresponding protocol layers for processing. If the operating system interface  supports multi-packet API's for transmitting and receiving packets, the embodiments may use the features of the operating system interface.","The embodiments maintain packet orders within any given end-to-end communication such as a TCP connection. The embodiments generate fewer calls to packets arrival APIs of the protocol layers because packets are bundled together. The device driver generated packet bundles can be forwarded to the protocol layers without sending individual packets.","Certain embodiments allow systems, such as, servers, that may receive heterogeneous packets from various systems in an interleaved manner to take advantage of the multi-packet APIs of the operating system interface , such as, NDIS .","The described techniques may be implemented as a method, apparatus or article of manufacture involving software, firmware, micro-code, hardware and\/or any combination thereof. The term \u201carticle of manufacture\u201d as used herein refers to program instructions, code and\/or logic implemented in circuitry (e.g., an integrated circuit chip, Programmable Gate Array (PGA), ASIC, etc.) and\/or a computer readable medium (e.g., magnetic storage medium, such as hard disk drive, floppy disk, tape), optical storage (e.g., CD-ROM, DVD-ROM, optical disk, etc.), volatile and non-volatile memory device (e.g., Electrically Erasable Programmable Read Only Memory (EEPROM), Read Only Memory (ROM), Programmable Read Only Memory (PROM), Random Access Memory (RAM), Dynamic Random Access Memory (DRAM), Static Random Access Memory (SRAM), flash, firmware, programmable logic, etc.). Code in the computer readable medium may be accessed and executed by a machine, such as, a processor. In certain embodiments, the code in which embodiments are made may further be accessible through a transmission medium or from a file server via a network. In such cases, the article of manufacture in which the code is implemented may comprise a transmission medium, such as a network transmission line, wireless transmission media, signals propagating through space, radio waves, infrared signals, etc. Of course, those skilled in the art will recognize that many modifications may be made without departing from the scope of the embodiments, and that the article of manufacture may comprise any information bearing medium known in the art.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 6","FIG. 6"],"b":["104","102","104","102","600","602","604","606","600","104","102","606","606","606","604","602","608","610","612"]},"In certain embodiments, the device , such as, a network adapter may be included in a computer system including any storage controller, such as, a Small Computer System Interface (SCSI), AT Attachment Interface (ATA), Redundant Array of Independent Disk (RAID), etc., controller, that manages access to a non-volatile storage device, such as a magnetic disk drive, tape media, optical disk, etc. In alternative embodiments, the device  may be included in a system that does not include a storage controller, such as certain hubs and switches.","Certain embodiments may be implemented in a computer system including a video controller to render information to display on a monitor coupled to the computer system including the device , such as, a network adapter, where the computer system may comprise a desktop, workstation, server, mainframe, laptop, handheld computer, etc. An operating system may be capable of execution by the computer system, and the video controller may render graphics output via interactions with the operating system. Alternatively, some embodiments may be implemented in a computer system that does not include a video controller, such as a switch, router, etc. Furthermore, in certain embodiments the device may be included in a card coupled to a computer system or on a motherboard of a computer system.","At least certain of the operations of  may be performed in parallel as well as sequentially. In alternative embodiments, certain of the operations may be performed in a different order, modified or removed.","Furthermore, many of the software and hardware components have been described in separate modules for purposes of illustration. Such components may be integrated into a fewer number of components or divided into a larger number of components. Additionally, certain operations described as performed by a specific component may be performed by other components. In certain embodiments the network adapter may be a specialized part of the central processing unit of the host system.","The data structures and components shown or referred to in  are described as having specific types of information. In alternative embodiments, the data structures and components may be structured differently and have fewer, more or different fields or different functions than those shown or referred to in the figures.","Therefore, the foregoing description of the embodiments has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the embodiments to the precise form disclosed. Many modifications and variations are possible in light of the above teaching."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 3","FIGS. 1-2"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
