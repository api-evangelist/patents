---
title: Managing power consumption based on utilization statistics
abstract: The present invention, in various embodiments, provides techniques for managing system power. In one embodiment, system compute loads and/or system resources invoked by services running on the system consume power. To better manage power consumption, the spare capacity of a system resource is periodically measured, and if this spare capacity is outside a predefined range, then the resource operation is adjusted, e.g., the CPU speed is increased or decreased, so that the spare capacity is within the range. Further, the spare capacity is kept as close to zero as practical, and this spare capacity is determined based on the statistical distribution of a number of utilization values of the resources, which is also taken periodically. The spare capacity is also calculated based on considerations of the probability that the system resources are saturated. In one embodiment, to maintain the services required by a Service Level Agreement (SLA), a correlation between an SLA parameter and a resource utilization is determined. In addition to other factors and the correlation of the parameters, the spare capacity of the resource utilization is adjusted based on the spare capacity of the SLA parameter. Various embodiments include optimizing system performance before calculating system spare capacity, saving power for system groups or clusters, saving power for special conditions such as brown-out, high temperature, etc.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06996728&OS=06996728&RS=06996728
owner: Hewlett-Packard Development Company, L.P.
number: 06996728
owner_city: Houston
owner_country: US
publication_date: 20020426
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT","Network Overview","Computer System Overview","Resources Consuming Power","Power Management Based on System Component Loads and Independent of Program Applications","Power Management Based on Application Performance or Service Level Agreements","Performance Optimization","Groups and Clustered Systems","Predefined Conditions","Steps Illustrating a Method for Managing System Power","The Power Manager","Illustration of Executing the Power Manager"],"p":["The present invention relates generally to system power and, more specifically, to managing such power.","Computer systems including network servers that use electric grids generally operate at full power as long as the power is turned on regardless of the compute load, which is the amount of computation needed to be performed in order to deliver computational services to end users. Compute loads include, for example, central processing unit (CPU) cycles, disk access, memory access, input-output (I\/O) access, etc. Laptop computers (laptops) and battery-powered systems entertain various modes of operation such as \u201csleep,\u201d \u201cstandby,\u201d \u201chibernate,\u201d etc., which reduces power when the system is inactive. However, these power-saving modes are usually based on whether the system is or is not in use, e.g., active or inactive, but not on system performance or system loads. Further, these modes switch the system to full power operation if there is any user activity even though the activity does not require full power. Because servers are seldom completely inactive, they run at full power most of the time without greatly benefiting from the power-save modes that work acceptably for laptops and battery-powered systems. Based on the foregoing, it is desirable that mechanisms be provided to solve the above deficiencies and related problems.","The present invention, in various embodiments, provides techniques for managing system power. In one embodiment, system compute loads and\/or system resources invoked by services running on the system consume power. To better manage power consumption, the spare capacity of a system resource is periodically measured, and if this spare capacity is outside a predefined range, then the resource operation is adjusted, e.g., the CPU speed is increased or decreased, so that the spare capacity is within the range. Further, the spare capacity is kept as close to zero as practical, and this spare capacity is determined based on the statistical distribution of a number of utilization values of the resources, which is also taken periodically. The spare capacity is also calculated based on considerations of the probability that the system resources are saturated.","In one embodiment, to maintain the services required by a Service Level Agreement (SLA), a correlation between an SLA parameter and a resource utilization is determined. In addition to other factors and the correlation of the parameters, the spare capacity of the resource utilization is adjusted based on the spare capacity of the SLA parameter.","Various embodiments include optimizing system performance before calculating system spare capacity, saving power for system groups or clusters, saving power for special conditions such as brown-out, high temperature, etc.","In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. However, it will be apparent to one skilled in the art that the invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to avoid obscuring the invention.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","b":["100","100","110","120","1","120","2","120","150","100","110","120","110","100","110","150","110","100"]},"Server  is any kind of computer and runs various services including, for example, web, database, mail, security, communications, accounting, load balancing, file storage services, etc. This list of services is used for illustration purposes; other services, programs, loads, and their equivalences run by server  are within the scope of the invention. To request services, a user or a program application sends a request from a client  or a server (not shown) through communication link  to server .","Communication link  is a mechanism for server  to communicate with clients . Communication link  may be a single network or a combination of networks that utilizes one or a combination of communication protocols such as the Transmission Control Protocol\/Internet Protocol (TCP\/IP), the Public Switched Telephone Network (PSTN), the Digital Subscriber Lines (DSL), the cable network, the satellite-compliant, the wireless-compliant, etc. Examples of communication link  include network media, interconnection fabrics, rings, crossbars, etc. Each client  may use different communication links to communicate with servers . In one embodiment, communication link  is the Internet.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2","b":["200","200","110","120","200","204","208","212","216","220","224"]},"CPU  controls logic, processes information, and coordinates activities within computer system . Normally, CPU  executes instructions stored in RAMs  and ROMs , by, for example, coordinating the movement of data from input device  to display device . CPU  may include one or a plurality of processors.","RAMs  are usually referred to as main memory or memory system, and temporarily store information and instructions to be executed by CPU . RAMs  may be in the form of single in-line memory modules (SIMMs) or dual in-line memory module (DIMMs). Information in RAMs  may be obtained from input device  or generated by CPU  as part of the algorithmic processes required by the instructions that are executed by CPU .","ROMs  store information and instructions that, once written in a ROM chip, are read-only and are not modified or removed. In one embodiment, ROMs  store commands for configurations and initial operations of computer system .","Storage device , such as floppy disks, disk drives, or tape drives, durably stores information for use by computer system .","Communication interface  enables computer system  to interface with other computers or devices. Communication interface  may be, for example, a modem, an integrated services digital network (ISDN) card, a local area network (LAN) port, etc. Those skilled in the art will recognize that modems or ISDN cards provide data communications via telephone lines while a LAN port provides data communications via a LAN. Communication interface  may also allow wireless communications.","Bus  can be any communication mechanism for communicating information for use by computer system . In the example of , bus  is a media for transferring data between CPU , RAMs , ROMs , storage device , communication interface , etc.","Computer system  is typically coupled to an input device , a display device , and a cursor control . Input device , such as a keyboard including alphanumeric and other keys, communicates information and commands to CPU . Display device , such as a cathode ray tube (CRT), displays information to users of computer system . Cursor control , such as a mouse, a trackball, or cursor direction keys, communicates direction information and commands to CPU  and controls cursor movement on display device .","Computer system  may communicate with other computers or devices through one or more networks. For example, computer system , using communication interface , communicates through a network  to another computer  connected to a printer , or through the world wide web  to a server . The world wide web  is commonly referred to as the \u201cInternet.\u201d Alternatively, computer system  may access the Internet  via network .","Computer system  may be used to implement the techniques disclosed herein. In various embodiments, CPU  performs the steps of the techniques by executing instructions brought to RAMs . In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the described techniques. Consequently, embodiments of the invention are not limited to any one or a combination of firmware, software, hardware, or circuitry.","Instructions executed by CPU  may be stored in and\/or carried through one or more computer-readable media, which refer to any medium from which a computer reads information. Computer-readable media may be, for example, a floppy disk, a hard disk, a zip-drive cartridge, a magnetic tape, or any other magnetic medium, a CD-ROM, a CD-RAM, a DVD-ROM, a DVD-RAM, or any other optical medium, paper-tape, punch-cards, or any other physical medium having patterns of holes, a RAM, a ROM, an EPROM, or any other memory chip or cartridge. Computer-readable media may also be coaxial cables, copper wire, fiber optics, etc. As an example, the instructions to be executed by CPU  are in the form of one or more firmware or software programs and are initially stored in a CD-ROM being interfaced with computer system  via bus . Computer system  loads these instructions in RAMs , executes some instructions, and sends some instructions via communication interface , a modem, and a telephone line to a network, e.g. network , the Internet , etc. A remote computer, receiving data through a network cable, executes the received instructions and sends the data to computer system  to be stored in storage device .","In one embodiment, server , implemented as a computer , includes a power manager  responsible for managing system power of server . Manager  is implemented as a software package running on server . However, manager  can run on any other computer conveniently connected to network . For illustration purposes, power manager  is shown in memory  where is it executed.","Various components in server , including, for example, CPUs , memory , storage device , cards for connecting accessories, peripheral devices such as printers and external disks, etc., usually consume significant power. However, each of these components provides interfaces through which the power can be controlled. Depending on the component, the interface, and the manufacturers, etc., an interface can be hardware, firmware, software, hardware working in conjunction with firmware drivers and\/or software, etc. Those skilled in the art will recognize that firmware can be invoked by another firmware or software program. In one embodiment, manager , based on instructions and specifications of the interface, controls the components and thus their power consumption.","The total power consumed by CPU  depends on a number of parameters such as the clock frequency at which a processor is running, the duty cycle, the number of processors active in the system, etc. Duty cycle is the time for which a processor runs at normal speed divided by the total time. Currently, under normal working conditions, to deliver the maximum computational power, CPU  in server  usually runs at its maximum clock rate. However, in accordance with the techniques of the invention, when the maximum computational power is not required, manager  reduces and\/or adjusts one or a plurality of the above parameters to reduce the power consumed by CPU  and hence by server . For example, in one embodiment, a CPU  implemented as a Pentium 4 manufactured by Intel Corporation of Santa Clara, Calif., includes a Thermal Control Circuit (TCC) interface. To control the speed of CPU  and thus its power consumption, manager , through the TCC interface, follows the CPU specifications and instructions to alter the duty cycle of any processor in CPU . Manager , when appropriate, also sets this duty cycle to zero, which effectively halts CPU  even though it is still powered on. In another embodiment, manager , through an application using the ACPI interface, turns off CPU  implemented by the Intel's processor chips and board designs. In another embodiment, manager  via a CPU board interface reduces the clock speed driving CPU .","In one embodiment, RAMs  operate in a slow RAM refresh and a hibernate mode in which the data is swapped to disk. To reduce power consumption, manager  puts RAMs  in either one of those two modes because either mode requires less power than the normal operating mode. Disk drives being implemented as storage device  also include interfaces through which manager  spins down the disk drives for them to operate in a low power mode. In this mode, the disk platters stop rotating.","In one embodiment, manager  uses the Advanced Configuration and Power Interface (ACPI) standard to reduce the power consumption of server . In the S state, server  operates normally at its full power. In the S state, manager  stops CPU  and refreshes RAMs  so that server  runs in a low power mode. In the S state, manager  puts CPU  in a \u201cno power\u201d mode, refreshes RAMs , and server  is in a lower power mode than the S state. In the S mode, manager  puts CPU  in the \u201cno power\u201d state, RAMs  in a slow refresh state, and the power supply of server  in a reduced power mode. In the S or hibernate state, manager  shuts off the hardware completely and saves the system memory to disk. In the S state, manager  shuts off the hardware completely, shuts down the operating system running server , and server  requires a reboot to return to the normal operating state.","To determine system performance, in one embodiment, manager , independent of program applications running on server , measures the system load by the degree of utilization of system components, such as CPU, memory, disk drives, bus, etc. Further, CPU utilization is defined as % (100*(total time\u2212idle time)\/total time); disk and memory I\/O utilization is defined as % (100*(max rate\u2212actual rate)\/max rate), and bus utilization is defined as % ((100*current data rate of the bus)\/max data rate).","For illustration purposes, CPU performance is used as an example. However, the illustrative concept can be used for other components of server  and for performance parameters discussed below. To obtain the utilization values, manager , in one embodiment, uses the operating-system-provided application programming interfaces such as the Win32 API for Microsoft Windows operating system. Manager  then uses the obtained utilization values to calculate the mean and standard deviation of CPU utilization as: \n\n\nwherein\n\n","The relationship between parameter m and the probability of having the CPU saturated is given by the equation: \n\n\nAlternatively, this relationship is shown in table A and table B included in  and , respectively.\n","In one embodiment, manager  changes operation of server , e.g., changes the clock speed or duty cycle required to obtain the desired change in CPU utilization as:\n\n\u0394\u2003\u2003(5)\n\nwhere H is a value desirable for the spare capacity to reach. For example, if the current spare capacity is at 10%, and it is desirable for the spare capacity to be at 0%, then manager  causes the clock speed to be reduced by 10%, e.g., \u0394c=\u221210%+0%=\u221210%. However, if the spare capacity is to be at 5%, then \u0394c=\u221210%+5%=\u22125%. If the spare capacity is to be at 10%, then \u0394c=\u221210%+10%=0%, etc. Alternatively, the spare capacity may be acceptable if it is within a range, e.g., from 0 to value H. For illustration purposes, the spare capacity is to be at 0%.\n","In general, after the clock speed is adjusted according to equation (5), the parameter m translates to a probability that the CPU will be saturated during its performance. For example, if {overscore (x)}=40%, m=2 and \u03c3=10, then, from equation (3), s=40%, and, from equation (5), \u0394c=\u221240%. In this example, as m=2, equation (4) or table A provides that P(2)=2.275. That is, the probability for CPU to be saturated is 2.275%. Further, since \u0394c=\u221240%, the clock speed or duty cycle of the CPU may be reduced by 40% while still achieving the objective of not saturating the CPU for more than 2.275% of the time.","As another example, if m=3, then using the above equations and table , P(3)=0.135% and \u0394c=\u221230%. Alternatively speaking, there is a 0.135% probability that the CPU will be saturated after the clock speed has been reduced by 30%. If m=0, then P(0)=0.5 and \u0394c=\u221260%, or there is a 50% probability that the CPU will be saturated after the clock speed has been reduced by 60%. Thus, a higher value of parameter m implies a greater margin of safety but also reduces the opportunity for reducing the CPU speed and hence the power consumption.","Conversely, if the system load increases after the CPU speed has been reduced as illustrated above, then the CPU speed is increased as determined by equation (5). For example, if m=2, {overscore (x)}=90, and \u03c3=10, then, from equation (3), the spare capacity s=\u221210. Hence, by equation (5), \u0394c=10. The clock speed is thus increased by 10% to restore the desired power-performance tradeoff at the desired safety margin. Similarly, if m=3, {overscore (x)}=90, and \u03c3=10, then s=\u221220, and \u0394c=20. The clock speed is accordingly increased by 20% to achieve the desired tradeoff.","In one embodiment, power manager  periodically measures the utilization values for a system resource over a period of time, and, from those values, manager  approximates or determines the statistical distribution with its mean and variance. For example, for every 10 minutes, manager  obtains 60 values of utilization xeach at every 10 seconds, and, based on those 60 values, calculates the mean, standard deviation, spare capacity, etc. In one embodiment, the statistical distribution is acquired using the normal or Gaussian distribution. The period for acquiring the utilization values, normally referred to as the sampling period, and the number of samples xvary depending on various factors including whether the system utilization is stable or fluctuates, which in turn may depend on the time of the day, the day of the week, etc. For example, during daytime the system loads may fluctuate more often because different working customers request different services. Consequently, the sampling period during this time is shorter than that at nighttime or weekends where system utilization is more stable. Similarly, the number of samples is higher during weekdays than during nighttime and weekends.","Generally, the value of parameter m is selected based on the probability distribution that describes the measured data and the required safety margin, which is the acceptable probability for a system resource, e.g., the CPU, to reach saturation. In one embodiment, this probability and\/or parameter m is agreed in a Service Level Agreement. If the service application is critical such that system saturation must be avoided as much as possible, then parameter m is selected as high as, e.g., 5. However, if the application is not that critical, then m can be selected as 0, and, as explained above, with m equals to 0, there is a 50% chance that the CPU reaches saturation after the CPU clock rate has been adjusted as prescribed by equation (5).","In one embodiment, having the acceptable value m for the safety margin for each resource, manager  brings the spare capacity s corresponding to that resource to a predefined range, which is as close to zero as practical. This optimizes system power for system resources. Depending on the resources, different variables are adjusted to adjust the spare capacity. For example, in a single processor situation, the clock speed corresponding to the processor utilization is adjusted as illustrated above. In case of multiple processors, turning on and off one or more processors is applicable. For example, if 4 processors are running, and, if the spare capacity is at 50% or higher, then 2 processors may be turned off to lower the spare capacity. If the resource is a disc drive, then the spinning speed is adjusted, etc.",{"@attributes":{"id":"p-0047","num":"0049"},"figref":"FIG. 3A","b":["300","300"]},{"@attributes":{"id":"p-0048","num":"0050"},"figref":"FIG. 3B","b":["300","300","300","300"]},"Besides system resource utilization, manager  measures system performance based on applications running on server  and\/or performance parameters defined by a Service Level Agreement (SLA). These parameters include, for example, the response time, the number of user authentications or the number of web pages provided per a time unit, etc. The response time may be defined in various ways such as the period of time from the time a user requests a service to the time the user receives the response, the time it takes an application to service a request, etc. Manager  accesses performance parameters via an application interface (API). In one embodiment, manager  measures the parameters by calling an appropriate API and compares them to what is required pursuant to the Service Level Agreements, which, in one embodiment, represents a threshold. If the performance delivered by server  is better than the threshold, then manager  reduces the power consumption by one or a combination of the mechanisms described above. That is, manager  reduces the clock speed, turns off some processors, spins down the disc drives, etc. Similarly, when server  cannot perform pursuant to the SLA, manager  increases system power so that server  can increase its performance and thus meet the SLA requirements.","Usually, one or a combination of resource utilization parameters affects an SLA parameter. For example, one or a combination of the CPU utilization, the disk access time, etc., affects the response time in retrieving a web page, the number of user authentications per minute, etc. In one embodiment, to meet the SLA requirements, manager  considers the correlation between pairs of parameters. For illustration purposes, a pair of variables x and y corresponding respectively to the mean of the CPU utilization and the mean of the response time to serve a web page is used. Manager  determines the correlation between variable x and variable y. In one embodiment, manager  uses tools such as SightLine by Fortel Inc., of Fremont, Calif. to acquire a correlation coefficient \u03c1, which indicates the degree of correlation between variable x and variable y. Coefficient \u03c1=1 implies that x and y are correlated, and, that is, if x changes by a percentage amount, then y changes by the same amount. For example, if x changes by 10%, then y changes by 10%. If x changes by 20%, then y changes by 20%, etc. In contrast, if \u03c1=0, then x and y are independent and therefore changing one parameter has no effect on the other. However, if \u03c1 is between 0 and 1, then there is some degree of correlation between x and y.","Manager  uses the following equation (6) to determine the probability distribution function for a bivariate distribution of x and y: \n\n\nwhere:\n\n","To establish function \u0192(x,y) in equation (6), manager  periodically measures a plurality of corresponding pairs of response time and CPU utilization, and, for each set of the measured values, calculates the corresponding means. Similarly, manager , from a plurality of sets of values, or a plurality of the means, calculates the means of the means and corresponding standard deviations.","Function \u0192(x,y) may be represented in a 3-axis graph including coordinates x, y, and \u0192(x,y) in which the x-axis and the y-axis form an x-y plane. From equation (6), a trend line representing the relationship between variable x and variable y is obtained. This trend line is the locus of the maximum points of \u0192(x,y) projected onto the x-y plane and is determined using the equation \n\n\nBased on mathematical calculations, this trend line is represented by the equation: \n\n\nand thus provides a slope: \n\n",{"@attributes":{"id":"p-0054","num":"0063"},"figref":"FIG. 4","b":["400","400"]},"Manager , based on the Service Level Agreement, establishes a desired value D for variable y, and a confidence level associated with this desired value D. This confidence level indicates the probability for variable y to be at or below value D. For illustration purposes, D is at one second, and if the confidence level is 60%, 70%, or 80%, then there is a probability that 60%, 70%, and 80%, respectively, that the mean of the response time is one second or less. Those skilled in the art will recognize that if the confidence level is 50%, then value D corresponds to a point on trend line , which, is point U. Further, the corresponding CPU utilization value is 80%, or value E, on the x-axis. However, if it is desirable to achieve the desired value D 95% of the time, then manager  selects a target response time T on the y-axis that is faster than one second. This target value T provides the margin so that 95%, instead of 50%, of the time the response time is below the desired value D of one second. In one embodiment, manager  uses variable m to determine the probability of 95%, which, in table B yields that m equals to 1.6449. Variable m is also the number of standard deviations below the desired value D to achieve value T. The relationship between value T and value D is\n\n()\u2003\u2003(9)\n","Manager  uses the following equation to determine the spare capacity expressed in terms of the number m of standard deviations of variable y: \n\n\nwhere:\n\n","In equation (10), value A represents the actual or real time value of variable y that is normally acquired soon before calculating equation (10). In embodiments where variable y is the mean of the response time, this value A is determined based of a plurality of values of response time that are measured periodically.","Based on value T, manager  determines a corresponding CPU utilization R, which indicates that when CPU runs at value R, there is a 95% confidence level that the response time is at or below value D, or one second in the above example.","Using trend line , \u0394x, the change in variable x from value E to value R that corresponds to the change from value D to value T, is calculated as: \n\n\nwhere, \u03c1 is the slope of trend line , which is defined in equation (8) above. \u0394x may be referred to as the spare capacity of variable x, or the spare capacity of CPU utilization.\n","In one embodiment, manager  changes operation of server , e.g., changes the clock speed or duty cycle required to obtain the desired change in CPU utilization as:\n\n\u0394\n\nwhere G is a value desirable for the spare capacity to reach. For example, if the current spare capacity is 10%, and it is desirable for the spare capacity to be at zero, then manager  causes the clock speed to be reduced by 10%, e.g., \u0394c=\u221210%+0%=10%. However, if the spare capacity is to be at 5%, then \u0394c=\u221210%+5%=\u22125%. If the spare capacity is to be at 3%, then \u0394c=\u221210%+3%=\u22127%, etc. Alternatively, the spare capacity is acceptable if it is within a range, e.g., from 0 to value G.\n","Manager  also saves power by one or a combination of various techniques such as optimizing performance, combining services performed by various servers , satisfying predefined conditions, turning off non-essential or non-critical programs, etc.","Because performance optimization creates greater system spare capacity for a given load, power manager  uses performance optimization to reduce power consumption while maintaining the same system performance. In one embodiment, to periodically optimize system performance, a system administrator, depending on the operating environment, uses one of several available tools such as OpenView, GlancePlus, GlancePlus Pak 2000 by Hewlett-Packard Company of Palo Alto, Calif., Unicenter Performance Management for open VMS by Computer Associates International of Islandia, N.Y., Tivoli Application Performance Management by IBM of Armonk, N.Y., etc. Normally, soon after performance optimization, manager  uses one of the power-saving techniques to manage system power.","In one embodiment, performance optimization is achieved by tuning various \u201ctunable\u201d parameters that can be dynamic or static. Dynamic parameters can be changed during normal system operations and do not require a re-boot. Dynamic parameters include, for example, priority levels of all applications and services running on server , application level memory cache size for caching web pages and intermediate query results for data bases, the number concurrent users accessing a service or logins to a service, CPU time slice limit for applications, etc. Static parameters require re-booting the system to take effect, and include parameters such as Redundant Array of Independent Disk (RAID) configurations, swap page size, system memory size, system cache size, etc.","In one embodiment, when a group of servers  are being run in a clustered or load-balanced environment, manager , based on the performance of each server  and when appropriate, consolidates the program applications to fewer systems. For example, if two servers - and - provide web page services, and if the sum of the spare capacity of the two servers exceeds 100% then server - is put into a higher \u201csleep\u201d state such as the S or S state or even shut-down, and server - executes applications of its own and of server -. For another example, the spare capacity of server - is 20% with a database application running, and this capacity increases to 50% without the database application. In one embodiment, the database application on server - is turned off or transferred to e.g., a server -, so that the 50% capacity of server - can be used to provide services that require 50% capacity and are being run from, e.g., server -. In one embodiment, the spare capacity of a server is the spare capacity of the CPU. In many situations, service combinations result in a higher power saving than reducing the power of some resources in each server individually.","Manager  executes power management also based on predefined conditions and requirements. In special or exception conditions, manager , based on configuration information that has been previously provided and when appropriate, turns off programs or applications that are not absolutely required or non-essential under the prevailing environment conditions. Turning off non-essential programs or non-critical services boosts the performance of other services resulting in extra capacity. Special conditions are triggered by external events such as \u201cbrown-out\u201d conditions, excessive electricity price periods, smog and \u201csave-the-air\u201d advisories, local facilities air-conditioning overload due to hot weather, etc.",{"@attributes":{"id":"p-0066","num":"0080"},"figref":"FIG. 5A"},"In step , manager  periodically optimizes system performance.","In step , manager  obtains the utilization values xof various system resources over a set of n measurements.","In step , manager  calculates the means {overscore (x)} and standard deviation \u03c3 of xfor the corresponding resources.","In step , manager  acquires the probability acceptable for the resources to be saturated. That is, manager  acquires the probability P of equation (4).","In step , manager , from the probability P, acquires parameter m.","In step , having the values of {overscore (x)}, \u03c3, m, manager  calculates the spare capacity s.","If step  determines that the spare capacity is within an acceptable range, then the system is operating acceptably, and the method flows to step .","However, if step  indicates that the spare capacity s is not within the acceptable range, then manager  in step  calculates the percentage of change in resource utilization \u0394c.","In step , to reflect the change in \u0394c, manager  adjusts the system operation such as CPU clock speed. Once the resource utilization is adjusted, the spare capacity s should be in an acceptable range. The method flows to step  and the power managing process continues.",{"@attributes":{"id":"p-0076","num":"0090"},"figref":"FIG. 5B"},"In step , manager  periodically optimizes system performance.","In step , manager  samples the response time and corresponding CPU utilization. From each set of samples, manager  obtains a corresponding mean value, and, from a plurality of sets of samples, manager  obtains the means of the means and corresponding standard deviations.","In step , manager  determines the correlation coefficient between the CPU utilization and the response time.","In step , manager  establishes a relationship, e.g., in the form of a trend line for the response time and CPU utilization.","In step , manager , based on the Service Level Agreement, establishes a desired value D for the response time, e.g., one second, and a confidence level associated with this desired value D. If the confidence level is 50%, then the CPU utilization corresponding to this desired value D can be obtained directly from equation (7). However, for illustration purposes, the confidence level is more than 50%, e.g., 95%.","In step , manager , determines a target response time value, e.g., value T, which is faster than one second so that if the response time is at value T, then there is 95% percent probability that the response time will be below the desired value D.","In step , manager , based on the target value T, calculates the spare capacity of the response time.","In step , manager  calculates the spare capacity of the CPU corresponding to the spare capacity of the response time.","If step  determines that the CPU spare capacity is within an acceptable range, then the system is operating acceptably, and the method flows to step . However, if step  indicates that the spare capacity is not within the acceptable range, then manager  in step  calculates the percentage of change in CPU utilization.","In step , manager  adjusts operation of server  including adjusting the clock speed of the CPU so that the spare capacity of CPU is at the acceptable level. The method flows to step  and the power managing process continues.","During the above steps in , manager  may turn off some programs applications as some of the predefined conditions are met, consolidating program applications, etc.",{"@attributes":{"id":"p-0088","num":"0102"},"figref":"FIG. 6","b":["280","610","620","630","640","650","660","6050"]},"In one embodiment, program  is executed as a Windows Service or Unix Demon, and includes an administrative user interface  and a start-up program . User interface  allows a user to enter configuration information, execute commands, scripts, and\/or make choices in a graphic user interface (GUI). Start-up program  launches performance measurement program , performance control program , and scripts at start up time and does initialization work such as reading configuration that might have been previously entered and saved via interface .","Performance measurement program  monitors performance of system resources and of parameters included in Service Level Agreements. Performance program  computes the statistical mean and standard deviation of performance parameters and compares to what is required pursuant to the Service Level Agreement. Program  also computes the spare capacity values. Program , via appropriate component and application interfaces, continuously measures and records these parameters, and, when desired, signals control program  to take appropriate actions to manage the power.","Performance control program  employs one of the power-saving methods to reduce or increase power. Control program  includes information and interfaces required to control the system resources. For example, control program , via the TTC circuit, reduces or increases the effective clock speed of the CPU, spins the disc drives up or down or turning them on or off as appropriate.","Performance optimization program  in one embodiment builds a dynamic model for the relationship between system performance and \u201ctunable\u201d parameters. Based on the model, program  adjusts these parameters to optimize system performance, and as discussed above, once the system is optimized, measurement program  and control program , as appropriate, apply one of the various power-saving techniques discussed above.","Scripts  and  execute power management policies based on prevailing conditions and requirements. In one embodiment, script , executing for normal operation, implements logic to collect and analyze performance information. For example, script  invokes performance measurement program  to compute the statistical mean and standard deviations of performance parameters, to measure the spare capacity, etc. Based on the measurement results, script  invokes control program  to control power.","Script  provides the logic to deal with exception operating condition. Based on configuration information, script  turns off or on corresponding programs. For example, when the \u201cbrown-out\u201d condition is met, script  invokes program control  for it to reduce power. Script  also turns off non-essential programs, etc.",{"@attributes":{"id":"p-0095","num":"0109"},"figref":"FIG. 7"},"In step , a system Administrator installs power manager  on server .","In step , the Administrator, via interface , configures various information such as the times during the day the programs and services run on server . The Administrator identifies the programs that are optional but desirable to run if conditions permit, the programs that are not required to run but can be executed on demand, etc. The Administrator maps the applications to the times during which the applications may be turned off, given lower priority, or be available for execution on demand, etc. The Administrator maps script  to normal conditions and script  to exception conditions. The Administrator programs the scripts to be executed when the condition is met. The Administrator often changes the information and mapping in this step  as appropriate.","In step , after a system boot, program  executes scripts  for normal operation. Program  also launches program  and program  to measure and optimize system performance.","In step , when external environment conditions vary, the Administrator uses interface  to issue commands notifying power manager  of the changes. Based on the new conditions, power manager , via program , executes script  and  that have been configured for the new conditions.","In the foregoing specification, the invention has been described with reference to specific embodiments. However, it will be evident that various modifications and changes may be made without departing from the broader spirit and scope of the invention. Accordingly, the specification and drawings are to be regarded as illustrative rather than as restrictive."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings in which like reference numerals refer to similar elements and in which:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
