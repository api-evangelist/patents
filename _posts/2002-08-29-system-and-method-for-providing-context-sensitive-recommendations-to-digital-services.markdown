---
title: System and method for providing context sensitive recommendations to digital services
abstract: A system and method is disclosed to provide recommendations to a wireless device, based on stored bookmark/short-cut data. When a wireless device accesses services, data pertaining to the service access, along with any context related information is transmitted within the wireless device, or to a remote server. The data is processed in conjunction with bookmarks/short-cuts specified within the device, and are organized and presented to the wireless device in accordance with preference instructions specified within the wireless device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07570943&OS=07570943&RS=07570943
owner: Nokia Corporation
number: 07570943
owner_city: Espoo
owner_country: FI
publication_date: 20020829
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DISCUSSION OF THE INVENTION","Context Sensitive Web Services","Example Wireless Application Protocol (WAP) Embodiment","Alternate Embodiment","Bookmark\/Short-Cut Example"],"p":["1. Field of the Invention","The invention disclosed broadly relates to the field of wireless communication and Internet services. More specifically, the invention revolves around recommending Internet services to mobile terminal users.","2. Background Art","Wireless devices and terminals are widely employed by people to access the growing number of available digital services. Such access typically entails the utilization of a menu structure to enable a wireless user to identify the service of interest to be accessed. However, such configurations are often slow and cumbersome for the user. In current mobile terminals, a service, such as a Wireless markup Language (WML) page, may be accessed by manually typing in a Universal Resource Locator (URL) of the required service or selecting a previously stored bookmark containing the URL of the required service. Another method involves the use of hypertext links to access a directly linked service.","Conventional mobile telecommunications devices such as telephone handsets, have been designed primarily for speech calls and have only a limited capability for handling data. Recommendations have been developed to provide a wireless application protocol (WAP) to promote common standards and specifications for data services that operate over wireless communication networks. WAP enabled telephone handsets have been developed which allow the user to access remote servers. Data content is provided in a mark up language, similar to conventional hyper text mark up language (HTML) known as a wireless mark up language (WML), which is configured to allow a page of WML data to be displayed as a deck of individual cards which are of the size suited for display on the relatively small display screen usually available on a mobile device such as a cellular telephone handset or personal digital assistant (PDA).","The data is supplied by WML servers at individual network addresses, with a homepage which act as an entry point to a particular site together with further pages or decks with individual addresses that can be navigated by the user. To this end, the mobile device is provided with a browser to display the data.","A WML server can be accessed by dialing an individual telephone number associated with a WAP gateway which acts as a proxy server between the WML server itself and the mobile device, which acts as the client.","Newer, faster data services for mobile communication devices have been developed, including I-Mode, GPRS and UMTS which operate in a generally similar way, with the mobile device acting as client to remote servers, and a browser to display the accessed data on the mobile device. The browser that is used for mobile telecommunications devices is conventionally known as a micro-browser, which is controlled by keys on the mobile device. Instead of using a mouse-driven cursor, a focus region is provided, which can be navigated around the display by keys which may include a scrolling key on the mobile device. The keys may be so-called soft keys which can be pre-programmed to perform different functions depending on the display provided by the browser. Conventionally, one of the soft keys allows the user to move backwards through previously visited network addresses. Also, a bookmark list may be stored so that individual network addresses can be readily accessed","One of the many problems of current systems is that all the services required by a user cannot be accessed via hyperlinks. Furthermore, user interfaces of many terminals are small, and have limited keyboard capabilities. Thus, the entry of URL's is thus slow and cumbersome, since the majority of URL's are long and unintuitive. Furthermore, current recommendation systems and algorithms cannot supply context-based recommendations, wherein bookmarks are organized and presented to the user according to customized protocols.","According to an embodiment of the present invention, a wireless device, such as a phone, PDA, etc. is enabled to compile multiple lists of bookmarks, wherein lists may be organized on the basis of user access. Under the embodiment, a mobile telecommunications device is provided, which includes a browser to permit a user to navigate between different pages and display information therefrom. The device further comprises a processor to compile various lists of bookmarks. The lists may contain entries selected by the user or may comprise bookmarks downloaded to the device, for example by a network operator. The lists may also comprise the bookmarked addresses accessed most recently or most frequently by the user. The lists may further comprise entries corresponding to addresses previously accessed by the user manually typing the address into the handset. The lists may be restricted to a limited amount of entries, or may contain all the entries in the bookmark list or manually entered, in order of frequency of access by the user.","An embodiment of the invention further provides a method of having wireless device bookmarks be automatically organized and presented to the user. An embodiment of the system provides access to network addresses, allowing navigation between different addresses and displaying of information therefrom. Also, context-related information, such as location, time of day, etc. can be used to supplement bookmarked recommendations to automatically organize and present links to users. Thus, in accordance with the invention, a user of a mobile device can readily navigate to the most useful network addresses without needing to scroll through large numbers of entries, or be susceptible to outside influences for recommendations.","In , a mobile station, in the form of a battery driven telephone cellular handset MS , is shown schematically in radio communication with PLMN . Mobile handset MS, includes a microphone , keypad , soft keys , a liquid crystal display device , ear-piece  and internal antenna . It is understood that the spirit and scope of the present invention applies to numerous other handsets, such as those illustrated in subsequent illustrations, and that the examples shown herein are for illustrative purposes. The circuitry of handset MS  is shown in more detail in . Signal processing is carried out under the control of digital micro-controller  which has an associated RAM\/ROM  and flash memory . Electrical analog audio signals are produced by microphone  and amplified by pre-amplifier . Similarly, analog audio signals are fed to the ear-piece  through an amplifier . The micro-controller receives instruction signals from the keypad and so-called soft keys , and controls operation of the LCD display .","Information concerning the identity of the user is held on a smart card  in the form of a GSM SIM card which contains a GSM international mobile subscriber identity and encryption Kthat is used for encoding the radio transmission in a manner well known per se. The SIM card  is removably received in a SIM card holder . Radio signals are transmitted and received by means of the antenna  connected through a RF Interface stage  to a codec , configured to process signals under the control of a micro-controller .","Thus, in use for speech, the codec  receives analog signals from the microphone amplifier , digitizes them into a form suitable for transmission and feeds them to the RF stage  for transmission through antenna element  to PLMN  shown in . Similarly, signals received from PLMN  are fed through the antenna element to be demodulated by the RF interface stage  and fed to codec  so as to produce analog signals fed to amplifier  and ear-piece .","The mobile station MS is also configured to operate as a client to receive data from remote servers and to communicate through PLMN  to a gateway  shown in  which acts as a proxy server for connection to remote servers, such as server . For example, for a WAP enabled system, access to the gateway  is provided by dialing a telephone number associated with the gateway although other communication techniques can be used e.g. for GPRS and UMTS. The server  may provide data corresponding to individual sites each with an individual homepage with a specific network address or universal resource locator (URL). The data may be provided in WML through the PLMN  to the handset MS, which acts as a mobile client.","The mobile handset MS runs a micro-browser. The software for running the micro-browser may be held in flash memory  shown in , so as to be run by the micro-controller  and provide an output on display .","An example of the display provided by the micro-browser is shown in more detail in . In this example of the display , the user has elected to view the bookmark list, listing network addresses previously selected by the user, as illustrated by information bar . The bookmarks include entries in the form of menu options which comprise links to corresponding network addresses. The links may be selected using a so-called focus region  which can be scrolled upwardly and downwardly shown in  using key , which can be pushed upwardly and downwardly in the direction of arrow  in order to perform a scrolling function. Thus, as shown in , the network address \u201cwww.news.wml\u201d falls within the focus region . The bookmarks may have been produced by the user in a conventional manner or may have been downloaded to the handset for example by a network operator.","Soft keys and are attributed functions shown on the display , which varies from display to display. For the bookmark list shown in , the keys , are attributed functions \u201coptions\u201d and \u201cback\u201d respectively and appropriate legends \u2032 and \u2032 are displayed on the LCD display  under the control of software being run by controller . If the key is actuated, a list of options e.g. select, re-load, help etc are displayed (not shown) on the display . The \u201cselect\u201d function may then chosen from the displayed list using the scrolling key , in the event that the user wants to actuate the link to the \u201cwww.news.wml\u201d address shown in . At this time, the soft key function attributed to the key is itself \u201cselect\u201d so that an operation of the key will cause the link to the news page within the focus region  to be actuated and navigation to the \u201cwww.news.wml\u201d network address is carried out.","Alternatively, the user may elect to view a different list of bookmarks, e.g. the \u201cre-dial\u201d list shown in , which lists the bookmarks which are deemed most likely to be re-dialed by the user. The user has recently navigated to network addresses \u201cwww.news.wml\u201d, \u201cwww.sport.wml\u201d and \u201cwww.weather.wml\u201d. This other list stores only addresses that were previously bookmarked, or manually entered by the user and, therefore, the individual network addresses associated with pages decks or cards within these sites that were navigated previously are not stored in the second list. The re-dial list of  can only contain a small number of bookmarks compared with the bookmark list of . For example, the bookmark list may have a maximum capacity of 200 bookmarks whereas the re-dial list may have a maximum capacity of 10 bookmarks. The soft key is attributed a \u201cselect\u201d function so that the user can scroll using key to select one of network addresses and navigate directly to the relevant page by appropriately moving the focus region  and operating the select key ",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 5","FIGS. 3 and 4"],"b":["23","24","500","501","24","506"]},"If the displayed page is not a homepage, then at , it is determined whether the page displayed at  was accessed using bookmark list  or redial list . In this instance, re-dial list  is updated (), to include a relevant network address. If the page was accessed by other means, the user may choose to bookmark it (), in which case an entry is made in main bookmark list  (). If the user had typed in the address, determined in step , a separate entry is made in re-dial list  (), regardless of whether the user has bookmarked the page. Re-dial list  therefore contains entries relating to homepages, pages accessed using bookmark list , re-dial list , or by entering an address manually. Network addresses accessed by following links are not included, so that the re-dial list  is limited the pages that are likely to be currently important to the user. Alternately, network addresses may be included for a complete link history for the user.","The process of updating the bookmark list is explained with reference to .  depicts memory organization of the RAM\/ROM  shown in . Memory locations corresponding to a selected number of network addresses for the visited pages are cached in a shift register according to how recently they were last accessed. When a page is accessed by a user via the bookmark list , re-dial list , or manual address entry (), the controller  determines whether the relevant network address is already stored in the re-dial list (). If this is not the case, a check is made at step  to determine if the re-dial list is full of bookmark entries It is not full, the new address may be added to the top of the list shown at step . If the list  is full the final entry  is deleted from the memory location corresponding to the bottom of the list () and the entries above it, - () and addresses D-I, are shifted () so that the new address  may be added to the top of the list  (). However, the page already has an entry in the re-dial list, e.g. if the address to be added  related to www.sport.wml, the previous entry  relating to that page is removed (), any preceding entries ,  are shifted accordingly () and the address stored at the memory location corresponding to the top of the list  (). In this manner, the most frequently used network addresses will tend to remain on the re-dial list, producing a short list of the pages visited most regularly by the user.","The re-dial list comprises the network addresses that are likely to be most frequently accessed by a user and, as it may be much shorter than the main bookmark list, allows the user of a mobile telecommunications device to quickly select and access a favorite network address without the inconvenience of scrolling through large numbers of bookmarks. Many modifications and variations falling within the scope of the invention will be evident to those skilled in the art. For example, whilst the described example relates to the use WAP technology, the invention can be used in any mobile telecommunications system in which mobile devices act as clients for remote servers. Also, whilst the invention has been described in relation to the example of a telephone handset, it can be used in other mobile devices such as PDAs, gaming devices and remote handheld devices for home entertainment systems.","A service recommendation engine or algorithms (used interchangeably herein) are configured to recommend or determine a subset of services from a plurality of services according to user-related filter criteria. Such criteria may be any factor unique or personal to the user or the user's wireless device which can be utilized in ascertaining or inferring possible services preferred by a particular user. Examples of user-related filter criteria may include static or dynamic factors, such as the user's service usage pattern or preference (e.g., when, where, how, a number of times, etc. that a service was used); the user's current context which may inferred from the user's perceived environment through various sensory devices; the user's past and current activities; the user's profile (habits, likes-dislikes, personal characteristics, personal background, etc.); and\/or the current environment of the wireless device sensed by one or more sensors (e.g., a location\/positioning sensor, a compass, a touch sensor, an audio sensor, a light sensor, and a temperature sensor). Once a set of recommended services are determined, the service may be stored as bookmarks in the wireless device, or at a remote server.","Accordingly, through the above-noted combination, a wireless device may be configured to enable a user to access preferred or desired services by short cuts\/bookmarks, user command or other form of user input (e.g., keypad, touch-display, etc.), while reducing or minimizing the processing load and memory and other hardware requirements necessary to implement such functionality or control in a wireless device. Such an arrangement does not require the user to remember the exact service addresses, which are often complex and difficult to remember, to access desired services; reduces privacy concerns for the user in the access of services; provides for service options which may be organized and accessed without requiring substantial effort on the part of the user.","In one exemplary embodiment, such a system and method are implemented through a portable wireless device including a recommendation engine and a database of past services accessed by the user. The recommendation engine recommends or determines a subset of services from a plurality of services to provide recommendations which are personal to and preferred by the user. The recommendation may be based on various user-related filter criteria (e.g., context) and, if desired, limited to the range of past used services of the user. These recommended services may then be visibly or audibly outputted to the user for selection thereof, and such output may include information identifying short-cuts for one or more or each of the recommended services. For example, visual output of enabled services may be displayed in the form of an icon or other visual forms (e.g., URL address) to inform the user of the availability of such short-cuts so as to assist the user in effectively utilizing such short-cuts. This may also be accomplished by other output means, such as audio output. The service may also be enabled to provide URL completion functions of stored addresses or bookmarks, which automatically complete partial entries by a user.","The user may thereafter input a command to select a service to be accessed from the subset of recommended services. When the input is received, a portable wireless device processes input to an appropriate computer readable format (e.g., metadata), compares the processed data to data associated with the recommended services, and identifies the service with short-cut matching the user's command. Thereafter, the portable wireless device, such as through its micro-browser, accesses the selected service automatically or upon a user command.","In another embodiment, such a system and method are implemented through a distributed networked system in which various processing tasks and data maintenance may be distributed between a portable wireless device and one or more network elements, such as a network server, ad hoc network partner, and so forth. The tasks may be distributed in the following manner:","[1] The network server(s) or other network element may be configured to implement both the recommendation and bookmark\/short-cut processing. For example, after initiation of the micro-browser by the user or other triggering event, the wireless device receives a bookmark\/short-cut command from the user and forwards the command data to the network server and other relevant information, such as user-related filter criteria (e.g., context) and\/or information for determining such criteria. The network server determines a subset of recommended services from a plurality of services based on the user-related filter criteria. The network server then, identifies a service therefrom with a short-cut matching the user's command. The network server then returns information corresponding to the identified service, such as the service's address (e.g., URL) or other service access information, to the wireless device for access thereof. Alternatively, the network server may act as an intermediary between the wireless device and the service provider of the identified service and access the identified service for the wireless device.","In another example, after initiation of the micro-browser by the user or other triggering event, the wireless device requests a service recommendation from a network server. The request may include other relevant information, such user-related filter criteria (e.g., context.) or information for determining such criteria. The network server receives the request along with any relevant information and determines a subset of recommended services from a plurality of services based on the user-related filter criteria. These recommendations are then sent to the wireless device which outputs, audibly or visibly, the availability of such recommended services through user input bookmarks\/short-cuts.","The wireless device then receives the user's command and passes corresponding command data to the network server. The server then performs processing on the command to identify a service (from the plurality of recommended services) with a short-cut matching the user's command. The network server then returns information corresponding to the identified service, such as the service's address (e.g., URL) or other service access information, to the wireless device for access thereof. Alternatively, the network server may act as an intermediary between the wireless device and the service provider of the identified service and access the identified service for the wireless device.","[2] The network server(s) may be configured to implement the recommendation processing within the wireless device. For example, after initiation of the micro-browser by the user or other triggering event, the wireless device requests recommendations from a network server. The request may include other relevant information, such as user-related filter criteria or associated information in determining such criteria. The network server receives the request and relevant information and determines a subset of recommended services from a plurality of services based on the user-related filter criteria. These selections are then sent to the wireless device, and the device outputs, audibly or visibly, the availability of such recommended services through user input short-cuts.","The wireless device then receives the user's short-cut command and performs processing of the command to identify a service (from the plurality of recommended services) with a short-cut matching the user's command. Thereafter, the wireless device, via its micro-browser or other platform, accesses the selected service automatically or upon the user command.","[3] The network server(s) or other network element may be configured to implement the short-cut processing. For example, after the recommended services are transmitted to the user, the wireless device receives a command from the user and forwards the command data to the network server and possibly other relevant information, such as the recommended services information and\/or other short-cuts (e.g., XML tags) for such services. The network server identifies a service (from the plurality of recommended services) with a short-cut matching the user's command. The network server then returns information concerning the identified service, such as the service's address (e.g., URL) or other service access information, to the wireless device for access thereof. Alternatively, the network server may act as an intermediary between the wireless device and the provider of the identified service and access the identified service for the wireless device.","In further embodiments, the maintenance and generation of short-cuts(s) for a particular digital service may be accomplished in various ways, for example, as follows:","[A] Address attributes, such as host name and service name, or other portions of the address attributes may be utilized as a short-cut of a digital service when performing bookmark\/shortcut processing.","[B] Bookmarks\/short-cuts may be generated from metadata associated with a particular service site. Metadata is often employed by search engines, service sites and\/or other network entities to characterize or classify the content on a particular service site to facilitate user searches. Accordingly, one or more short-cuts may be generated for association with a particular service according to the metadata associated with that service, such as by identifying and selecting one or more words or terms from the metadata which aptly characterizes the service. This may be accomplished by manually examining the metadata associated with a service site, or through probability analysis in which the words or terms showing up a significant number of times or the greatest number of times is used as the short-cut.","[C] A bookmark\/short-cut registry or the like may be maintained by a network element, such as a server, which maintains a relational database of service addresses and their associated bookmark\/short-cut tag. The registry may be similar to domain name registry, in which bookmark\/short-cut tags may be uniquely defined for a particular service using a standard format, such as in XML. Through a central registry, a uniform standard may be achieved for bookmark\/short-cut tags or the like and their usage in enabling access to associated services. A wireless device may request bookmark\/short-cut tags from the registry for the subset of recommended services prior to performing processing. Alternatively, whenever a service site is accessed, the site may deliver the bookmark\/short-cut tag to the accessing device which can store the bookmark\/short-cut tag for future use.","Along similar lines, a service provider may predefine bookmark\/short-cut tags for its service addresses and provide such information to the wireless device or other network elements in communication with the wireless device to facilitate bookmark\/short-cut based access to such service(s). For example, the service provider may embed bookmark\/short-cut tags in an XML message sent to the user's wireless device.","[D] A user may define, change or delete bookmark\/short-cuts for a particular service which are stored locally on the user's wireless device or at a remote location accessible by the wireless device.","[E] The wireless device generally may download predefined or generated short-cuts associated with services from a remote location, via a network. Such download may be performed when a new service is accessed by the user, at periodic intervals, upon a user request, or upon some other predetermined triggering event.","[F] Short-cut(s) may also be a \u201ctemporary\u201d short-cut assigned to a recommended service, such as according to hierarchy or priority of the recommendations. For example, the short-cut \u201cbookmark one\u201d or \u201cbookmark \u201d can be temporarily assigned to a first recommended service of the subset, the short-cut \u201cbookmark two\u201d or \u201cbookmark \u201d can be temporarily assigned to a second recommended service of the subset, and so forth. Alternatively, the short-cut \u201cA\u201d can be temporarily assigned in an outline form to a first recommended service of the subset, the short-cut \u201cB\u201d can be temporarily assigned to a second recommended service of the subset, and so forth. Temporary short-cuts may be employed together with a selection menu, whether displayed or audibly outputted, for enabling short-cut to recommended services.","[H] To specify a short-cut, bookmark\/short-cut tags may be used to categorize the bookmark\/short-cut short-cut for a particular service. For example, a bookmark\/short-cut may be tagged for a particular service in XML format (\u201cbookmark XML tag\u201d), e.g., <BOOKMARK TAG>[short cut]<\/BOOKMARK TAG> to facilitate access in a digital service environment, such as with Internet service, etc.","These and other exemplary embodiments will now be discussed in further detail below with reference to the Figures. Turning to , an exemplary network environment is provided in which a user, operating a portable wireless device , is able to employ multi-modal input forms, along with other user input forms, to access preferred digital services through device . This is accomplished through combination of a service recommendation engine and a short-cut engine, each of which may be implemented locally at the portable wireless device or at a remote location, such as at a network server , to provide short-cuts to the user's preferred services.","A recommendation engine may be employed to determine a subset of recommended services from a plurality of services based on user-related filter criteria (e.g., context, etc.). Commands by the user may be further processed to compare and match the commands to short-cuts associated with the recommended services to enable user selection and access of a service from the recommended services by short-cut.","As shown, a network diagram illustrates an example of a relationship between the user's portable wireless device , a wireless access point , an infrastructure network , a network server , and a third party service provider  interconnected over the Internet . The user's wireless device  communicates over a radio link with the wireless access point , which is connected to a wireless network , which is connected to a protocol gateway . The gateway  is connected over the Internet  to the server .","The network  formed by the wireless device , wireless access point , and infrastructure network  can be implemented as a digital wireless wide area network (WAN), based on architectures such as Global System for Mobile Communication (GSM), IS-136 TDMA-based Digital Advanced Mobile Phone Service (DAMPS), Personal Digital Cellular (PDC), IS-95 CDMA-based cdmaOne System, General Packet Radio Service (GPRS) and broadband wireless architectures such as W-CDMA and Broadband GPRS. For more information on these digital wireless, wide area network architectures, see the book by Yi-Bing Lin, et al. entitled , John Wiley & Sons, 2001. Network  can also be a short-range wireless system connected to a wide area landline infrastructure network such as the Internet . Short-range wireless systems include both wireless personal area network (\u201cPAN\u201d) and wireless local area network (\u201cLAN\u201d). Both of these networks have the common feature of operating in unlicensed portions of the radio spectrum, usually either in the 2.4 GHz Industrial, Scientific, and Medical (ISM) band or the 5 GHz Unlicensed-National Information Infrastructure (\u201cU-NII\u201d) band. Wireless personal area networks use low cost, low power wireless devices that have a typical range of ten meters. The best-known example of wireless personal area network technology is the Bluetooth Standard, which operates in the 2.4 GHz ISM band. It provides a peak air link speed of one Mbps and a power consumption low enough for use in personal, portable electronics such as PDAs and mobile phones. The Bluetooth Special Interest Group, , Version 1.0B, Volumes 1 and 2, December 1999, describes the principles of Bluetooth device operation and communication protocols. Wireless local area networks generally operate at higher peak speeds of from 10 to 800 Mbps and have a longer range, which requires greater power consumption. Wireless local area networks are typically used as wireless links from portable laptop computers to a wired LAN, via an access point (AP). Examples of wireless local area network technology include the IEEE 802.11 Wireless LAN Standard and the HIPERLAN Standard, which operates in the 5 GHz U-NII band. For more information on wireless LANs, see the book by Jim Geier entitled , Macmillan Technical Publishing, 1999. The network  formed by the wireless device , wireless access point , and infrastructure network  can use a wireless communications protocol, such as the Wireless Application Protocol (WAP), the I-Mode protocol, or the mobile IPv6 protocol.","Portable wireless device  may take the form of a processor-based wireless communication-enabled device, such as a wireless mobile telephone (see , MS), pager, two-way radio, smartphone, personal communicator, laptop or notebook computer, wireless personal digital assistant (PDA) or the like. Typically, wireless device  has a resident memory , CPU , radio , speaker , and sensor interface . Portable wireless device  includes a plurality of output subsystems, such as a displayed browser  and speaker , to provide for supplemental multi-modal output functionality and a plurality of user input subsystems, such as microphone , keypad , a touch-display and so forth, to provide for multi-modal input functionality. Browser  may be partitioned, as desired, to have a main display area, along with other display or touch-screen areas, such as in the form of an icon or other visual representation to notify the user of the availability of shortcuts to recommended services.","The portable wireless device  further includes various programs and databases, including the user's personal programs and databases, programs and databases associated with the conventional operation of the wireless device, and programs and databases to implement short-cut service access processes discussed herein. These programs and databases may include, for example, application programs , communication programs , service history log , current context state , recommendation algorithms or engine  to enable local and\/or network-based service recommendations. These programs may alternately include a voice response unit (VRU) (not shown) for converting data, such as text, to speech which can be outputted to the user via speaker .","As further shown in , the portable wireless device  may also include a plurality of sensors for sensing the mobile user's ambient conditions. The sensors shown include Positioning Sensor , Touch Sensor , Audio Sensor , Compass Sensor , Ambient light Sensor , Ambient Temperature Sensor , and Three-Axis Acceleration Sensor . Audio sensor  can be a microphone, for example, which can detect speech or other environmental sounds. The positioning sensor  can be, for example, a GPS receiver integrated in the device. The positioning sensor can also be, for example, a radio beacon triangulation sensor that determines the location of the wireless device by means of a network of radio beacons, base stations, or access points, as is described for example, in Nokia European patent EP 0 767 594 A2, entitled \u201cMobile Station Positioning System\u201d. These sensors provide inputs which are sampled by the wireless device  to sense the user's environment and to infer a current context which may be used to provide recommendations to the user based on the user's environment. The portable wireless device  may perform context inference techniques locally, or may offload to the network server  some of the computationally intensive computing involved in context inference techniques.","For example, in one or more embodiments discussed herein, as the user carries about the wireless device , its sensors may automatically and continuously measure the geographic location and context of the device. The wireless device may periodically transmit the current context in a message over the wireless network to the network server . There are several types of messages, each of which is distinguished by its own unique op code. When the wireless device sends a message containing the current context, the network server  parses the op code and responds with information corresponding to the op code, the information being related to the current context.","If the op code indicates that the message is a spontaneous message which is automatically transmitted by the device , then the network server  may respond with information such as a service category menu, or information such as recommended services (along with associated short-cuts) based on the current context, or prepaid advertising of local services related to the current context. As shown in , the user's portable wireless device  further includes a service history log . The activities stored in the service history log  may be divided into two major categories: past recommendations made by the wireless device  and\/or network server , and services including short-cuts. Under one embodiment, the category of services may be broken into four sub-categories: (1) Past Services used, (2) Prestored Service Preferences, (3) Special requested service requirements, and (4) Digital Services and Associated Short-Cuts. The term \u201cactivities\u201d, as used herein, may refer to any of these categories and sub-categories. The service history log  may store five component databases: [1] Past Recommendations and Context, [2] Past Services Used and Context, [3] Prestored Service Preferences, [4] Special Requested Service Requirements, and [5] Digital Services and Short-Cuts. An example is shown in  of the two component databases: [1] past recommendations and context  and [2] past services used and context .","When implementing distributed processing with the network server , the wireless device  can automatically send messages with a unique op code designating that the message is an automatically transmitted message containing the device's past recommendations and context or past services used and context, in addition to the current context or other information for use in enabling short-cut access to recommended services. In one or more embodiments, the network server  may parse the op code and uses the device's past recommendations and context or past services used and context to find similar service recommendations in its database. The network server  then responds with information customized to the user's perceived interests, the information being related to the current context. While the above discusses one approach to recommending services, any user-related filter criteria may be employed to determine recommendations personal to the user.","The user of the wireless device  can also manually enter requests for menus and recommendations related to the current context. In any event, the wireless device  may then determine the service recommendations locally based on the current context and enable short-cut access to such recommended services. Alternatively, the wireless device  may send messages with a unique op code designating that the message is a manual request by the user containing the device's past recommendations and context or past services used and context, in addition to the current context or other information for use in enabling short-cut access to recommended services. The network server parses the op code and uses the device's past recommendations and context or past services used and context to find similar recommendations in its database consistent with the user's manual request. The network server  then responds with information customized to the user's expressed interests, the information being related to the current context. While the above discusses one approach to recommending services, any user-related filter criteria may be employed to determine customized or personalized recommendations to the user.","Under one embodiment, the service history log  can accumulate data on past services used by the user of the device  in several ways. The service history log  can be programmed to capture on-line transactions and activities, such as ticket purchase information for services, access of a service, and so forth. The service history log  can also be programmed to monitor the dwell-time of the device at scheduled events and to draw the inference that the user is in fact engaged in such an event. The event and the current context are then stored in the database \u201c[2] past services used and context\u201d, in the service history log .","While the portable wireless device  may be configured to perform the context, recommendation and short-cut processing alone, one or more or all of these processes can be offloaded to one or more other network elements, such as the network server . Accordingly, depending on which processes are offloaded, the network server  may include context inference engine , digital service and short-cuts database , recommendation algorithms or engine , and context-activity pairs database .","In one distributed system embodiment, the wireless device  provides recommendations to its user that are appropriate to the device's current environment by selecting an activity (e.g., a category or sub-category), pairing it with the current context result, and sending the context-activity pair to the network server . The network server  searches its database of recommendations using the context-activity pair, and returns recommendations to the user. While the portable wireless device  and the network server  may employ context-activity pairs to determine recommended services, other user-related criteria and processes may be employed to ascertain preferred services desired to be accessed by the user.","Portable wireless device , in combination with context inference engine , are configured to determine a current context based on the user's current context which, in turn, may be inferred through sensory information from sensors of the device (e.g., location sensor, speed sensor, light sensor, sound sensor, etc.), clock, user's activities, and so forth. The portable wireless device , in combination with the recommendation engine , determine and recommend a subset of services from a plurality of services based on user-related filter criteria, such as the current context or other personal factors (e.g., service usage history\u2014those services utilized the most by the user, etc.). To reduce the workload of the wireless device, the searchable range of services may be limited to past used services.","Once determined, recommended services may then be visibly (or audibly) outputted to the user for selection thereof by user input, and such output may include information identifying the short-cut(s) for one or more or each of the recommended services. For example, visual output of short-cut enabled services may be displayed in the form of an icon or other visual forms (e.g., URL address) to inform the user of the availability of such short-cuts so as to assist the user in effectively utilizing such short-cuts. This may also be accomplished as well by other output means, such as audio output. The user may thereafter enter a command to select a service to be accessed from the subset of recommended services.","In operation, after initiation of the micro-browser  by the user or upon some other triggering event, the portable wireless device  requests recommendations from the network server . The request may include other relevant information, such as user-related filter criteria or associated information in determining such criteria. The network server  receives the request and any relevant information and determines a subset of recommended services from a plurality of services based on the user-related filter criteria. These selections are then sent back to the wireless device , and the device outputs, audibly or visibly, an indication of the availability of such recommended services through user input short-cut. The short-cuts for the recommended services may be forwarded by the network server  or may be already stored locally for lookup on the portable wireless device .","In one operational example, after initiation of the micro-browser  by the user or upon some other triggering event, the portable wireless device  may request service recommendations from the network server . The request may include other relevant information, such user-related filter criteria or information for determining such criteria. The network server  receives the request and any relevant information, and determines a subset of recommended services from a plurality of services based on the user-related filter criteria. These selections are then sent back to the wireless device , and the device outputs, an indication of the availability of such recommended services through user input short-cuts.","The portable wireless device  then receives the user's input command and passes corresponding command data to the network server  which performs processing of the command to identify a service (from the subset of recommended services). The network server  then returns information on the identified service, such as the service address (e.g., URL) of the service site operated by service provider  or other service access information, to the wireless device ,  for access thereof. Alternatively, the network server  may act as an intermediary between portable wireless device  and service provider  of the identified service and access the identified service for wireless device .","In an alternative example, after initiation of the micro-browser  by the user or upon some other triggering event, the portable wireless device  receives a command from the user and forwards the command data to the network server , along with other relevant information, such as user-related filter criteria (e.g., context) and\/or information for determining such criteria. The network server  determines a subset of recommended services from a plurality of services based on the user-related filter criteria. Thereafter, server  identifies a service from the subset of recommended services. Network server  then returns information on the identified service, which may include the service address (e.g., URL) of the service site operated by service provider , to wireless device  for access thereof. Alternatively, network server  may act as an intermediary between the portable wireless device  and service provider  of the identified service and access the identified service for the wireless device.","To facilitate ease of use as well as to explain various functions enabled on the portable wireless device , a Recommendation Web Services Menu may be provided and displayed on browser  of the device. An example of such a menu as well as other screen shots of recommended services will be discussed below with reference to .","In , the user's portable wireless device  includes the browser  which displays the Recommendation Web Services menu , to enable the user to navigate through the cards or pages being displayed and to select options that are programmed by the application programs . Recommendation Web Services Menu  may provide the user with the following options to select:\n\n","Reference to  illustrate how processes to be implemented at the wireless device  or the network server  may be invoked through the menu selection of . One or more of the processes to be discussed below, particularly the recommendation related processes, may alternatively be invoked upon initiation of browser  or some other triggering event.","As shown in , the option  to [1] SELECT A SERVICE CATEGORY invokes process  in the user's device , to RETRIEVE UPDATED SERVICE CATEGORY MENU, as shown further in . Process  of  sends updated menu request message  to process  in the network server , to UPDATE SERVICE CATEGORY MENU, as shown in . The updated menu  () is returned in updated menu response message , as shown in . The updated menu  is displayed in the device's browser  in . This same sequence of steps is automatically performed by the wireless device  and the network server  in response to wireless device  automatically transmitting messages with a unique op code designating that the message is an automatically transmitted message.","The option  to [2] SEND PAST RECEIVED RECOMMENDATIONS invokes process  in the user's device , to SEND CONTEXT & PAST RECEIVED RECOMMENDATIONS, as shown in . Process  sends recommendation request message  to process  in the network server , to PROVIDE NEW RECOMMENDATIONS CORRESPONDING TO PAST RECOMMENDATIONS as shown in . The recommendations  () are returned in recommendation response message . The recommendations  are displayed  in the device's browser  in . This same sequence of steps is automatically performed by the wireless device  and the network server  in response to the wireless device  automatically transmitting messages with a unique op code designating that the message is an automatically transmitted message.","The option  to [3] SEND PAST SERVICES USED invokes process  in user's device , to SEND CONTEXT AND PAST SERVICES USED, as shown in  & G. Process  sends recommendation request message  to process  in network server , to PROVIDE NEW RECOMMENDATIONS CORRESPONDING TO PAST SERVICES USED, as shown in . The recommendations  are returned in recommendation response message , as shown in . Recommendations  are displayed in the device's browser  in . This same sequence of steps is automatically performed by wireless device  and network server  in response to wireless device  automatically transmitting messages with a unique op code designating that the message is an automatically transmitted message.","The option  to [4] SEND PRESTORED SERVICE PREFERENCES invokes process  in the user's device , to SEND CONTEXT AND PRESTORED SERVICE PREFERENCES in the pre-stored service preferences file , as shown in  & F. An example of pre-stored service preferences is shown displayed  in the browser  of . Process  sends message  to process  in network server , to PROVIDE RECOMMENDATIONS CORRESPONDING TO SERVICE PREFERENCES. The recommendations  are returned in message .","Option  to [5] ENTER SPECIAL SERVICE REQUIREMENTS invokes process  in user's device , to SEND CONTEXT AND SPECIAL SERVICE REQUIREMENTS. An example of special service requirements is shown displayed  in the browser  of . Process  sends message  to process  in network server , to PROVIDE RECOMMENDATIONS CORRESPONDING TO SPECIAL REQUIREMENTS. The recommendations  are returned in message .","The option  to [6] CHANGE PRESTORED SERVICE PREFERENCES invokes process  in user's device , to CHANGE PRESTORED SERVICE PREFERENCES. An example of a menu to change pre-stored service preferences is shown displayed  in the browser  of .","The option  to [7] CHANGE PRIVACY FILTER SETTINGS invokes process  in user's device , to CHANGE PRIVACY FILTER SETTINGS. An example of a menu to change privacy filter settings is shown displayed  in the browser  of .","The option  to [8] LOCAL RECOMMENDATION invokes process  in the user's device, to initiate LOCAL RECOMMENDATION, e.g., to determine service recommendations locally at the user's device. An example of a menu to initiate local recommendation is shown displayed  in the browser  of . The local recommendations may be determined from a database of [a] past used services or [b] downloaded services from a network server, such as server . An example of service recommendations displayed on the browser  is shown in . Additional options, such as ones to change short-cut setting may also be utilized to initiate associated processes.","As the user carries about wireless device , sensors - continuously measure the geographic location and context of the device, which are compiled into a metadata vector  representing the current context (). Wireless device  periodically transmits the current context in an updated menu request message , shown in , over the wireless network  to the network server . The updated menu request message  includes the network address of the server , an op code value RQ_MN that designates the message as an updated menu request message, and an operand portion containing the current context. The network server  of  includes a server op code parser  that interprets the op code value RQ_MN as indicating that the message is an updated menu request message . In response, the server op code parser  invokes step  of the server recommendation algorithms . Step  gets from a database a list of services provided by regional advertisers corresponding to the current context of the device . Step  flows to step , which gets from a database a list of services provided by regional points of interest, such as galleries, monuments, museums, and the like, corresponding to the current context of the device . Step  flows to step , where the list of services provided by regional advertisers and the list of services provided by regional points of interest are filtered for weather related and time related service categories, eliminating those services that cannot be used by the user in the current context. For example, night_baseball is eliminated, if the current context is \u201cdaytime\u201d. Hiking_nature_trail is eliminated if the current context is \u201cbad weather\u201d. Likewise, in a digital service scenario, electronic_stock_trading may be eliminated, if the current context is \u201cnighttime\u201d. Step  flows to step , where the updated menu message \u2032 is prepared. The updated menu message \u2032 includes the network address of the device , op code RSP_MN that designates the message as an updated menu server response message, and operands. The operands include the updated menu  (). The updated menu  is returned to the device  in the updated menu response message \u2032, as shown in . This same sequence of steps is automatically performed by the wireless device  and the network server  in response to the wireless device  automatically transmitting messages with a unique op code designating that the message is an automatically transmitted message.","The device op code parser  in  interprets the op code value \u201cRSP_MN\u201d as indicating that the message is an updated menu server response \u2032. In response, the device op code parser  invokes step  of the device recommendation algorithms . Step  stores and displays the updated menu  in the device's browser  in .","The user can initialize the device  by entering special service requirements as shown in the browser  of . Examples of special service requirements that can be stored in the service history log  of device  are:\n\n","The user can initialize the device  by entering stored service preferences, as shown in the browser  of . Examples of stored service preferences that can be stored in the service history log  of device  are:\n\n","The user can initialize the device  by entering privacy filter settings, as shown in the browser  of . Privacy filter settings are used to remove the user's private information from the messages sent by the device  to the network server . Examples of privacy filter settings that can be stored in the device  are:\n\n","The service history log  in the user's device  may store activities in five component databases: [1] past recommendations and context, [2] past services used and context, [3] pre-stored service preferences, [4] special requested service requirements, and [5] services and short-cuts. An example is shown in  of the two component databases: [1] past recommendations and context  and [2] past services used and context . The embodiment of the database shown in  uses extensible markup language (XML) files to provide a coherent view of the wide variety of data that can be used to characterize a contexts, services, and recommendations.","To specify the current context, XML tags are used to categorize each type of context data that characterizes the current context. Each unit context data is delineated by a beginning tag and an ending tag, forming an element. For example, the element\n\n",{"@attributes":{"id":"p-0119","num":"0161"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<LOCATION>"]},{"entry":[{},"<LAT>38 degrees, 48 minutes North<\/LAT>"]},{"entry":[{},"<LON>76 degrees, 38 minutes West<\/LON>"]},{"entry":[{},"\u2003<\/LOCATION>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"A typical specification of the context for an activity stored in the service history log  would be, for example:",{"@attributes":{"id":"p-0121","num":"0163"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<CONTEXT>"]},{"entry":[{},"<LOCATION>"]},{"entry":[{},"\u2003<LAT>38 degrees, 48 minutes North<\/LAT>"]},{"entry":[{},"\u2003<LON>76 degrees, 38 minutes West<\/LON>"]},{"entry":[{},"\u2003<ALT>400 meters<\/ALT>"]},{"entry":[{},"\/LOCATION>"]},{"entry":[{},"<DATE>2001:01:31<\/ DATE>"]},{"entry":[{},"<TIME>1100<\/TIME>"]},{"entry":[{},"<TEMPERATURE>10 degrees Celsius <\/TEMPERATURE>"]},{"entry":[{},"\u2003<\/CONTEXT>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"A typical specification of the short-cut for service stored in the service history log  may be, for example:",{"@attributes":{"id":"p-0123","num":"0165"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<NAME>"]},{"entry":[{},"\u2003<HOSTNAME> HistoryMuseum.com<\/HOSTNAME>"]},{"entry":[{},"\u2003<SERVICENAME>\/exhibits.wml\/<\/SERVICE NAME>"]},{"entry":[{},"\u2003<BOOKMARK>History<\/BOOKMARK>"]},{"entry":[{},"<\/NAME>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"By expressing the context in the service history log  in XML, the stored expression is both human and machine readable, it defines the content, and it defines the hierarchical structure of the content. XML also separates the appearance of the content from the structure of the content, so that the content can be displayed in any format by using customized style sheets in each different type of display device. Extensible Stylesheet Language (XSL) can provide flexible document presentation, enabling the content of an XML file to be displayed on the large display screen of a personal computer, as well as in the browser . Messages exchanged between the wireless device  and the network server  can include XML files carried in the Simple Object Access Protocol (SOAP) messaging protocol or the SyncML synchronization protocol. For additional background on XML, see the book by Heather Williamson, , Osborne\/McGraw-Hill, 2001.","Both the wireless device  and the network server  may be configured to interpret the tags of the XML elements in the XML file in the same way. This can be accomplished by incorporating the same XML tag parser in both the device recommendation algorithms  of the wireless device  and in the server recommendation algorithms  of the network server . In its simplest form, the XML tag parser can be a simple string comparison function that searches the XML file for XML tag strings, such as the beginning tag \u201c<LOCATION>\u201d and the ending tag \u201c<\/LOCATION>\u201d. When it finds the a particular beginning tag, it gets the data located between the beginning tag and the ending tag and passes the data as \u201clocation data\u201d to program subroutines that operate on location data. Such program subroutines include the database search routine in the server recommendation algorithms  in the server , that forms a query from the latitude and longitude data to search for recommendations for services in the database  having similar or related to the latitude and longitude values.","Another way for both the wireless device  and the network server  to interpret the tags of the XML elements in the XML file in the same way, is by means of a standard XML parser. The two principal, standard XML parsers are the Simple API for XML (SAX) event-based parser and the Document Object Model (DOM) tree-based parser. The principal difference between them is in the way the XML data is made available to the client application, such as the device recommendation algorithms . SAX is an event driven model, wherein the client application is continuously notified as the XML document features are recognized by the parser. As the SAX parser reads an XML file, it sends to the application program  information from the XML file in real time. Each time the parser sees a beginning tag, an ending tag, character data, or a processing instruction, it reports it to the client application. The entire XML file does not have to be read before acting on the data at the beginning of the file. The entire document does not have to reside in memory, which can be an advantage for the wireless device .","The Document Object Model (DOM) model parser is object based, on the other hand, wherein the entire XML document is parsed and stored as a hierarchical tree of objects that the client application can then randomly access. A document type definition (DTD) is available to both the wireless device  and in the network server , either being stored locally or at a server they can reference. A DTD is a set of declarations that specify the allowed order, structure, and meaning of the tags for a particular XML file. The XML file references the DTD that governs its order, structure, and meaning, at a specified location, such as the directory of the local filesystem, and its filename as a handle. Standard XML parsers are part of many operating systems now available. A DOM tree-based parser reads in the DTD and the XML file and converts the XML file into programming constructs accessible to the application logic. A document type declaration element must appear in the XML file to indicate the DTD to which the XML file complies and where to find it. It starts with \u201c<DOCTYPE\u201d and ends with \u201c>\u201d. The example given below is\n\n","An example of a complete XML file specifying a past recommendation received by the device  and the context in which it was received, is shown in the following TABLE A, which is the XML file  taken from the service history log  of .",{"@attributes":{"id":"p-0129","num":"0173"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE A"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example of an XML File Specifying a Past"},{"entry":"Recommendation"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?XML VERSION=\u201c1.0\u201d?>"]},{"entry":[{},"<DOCTYPE PAST_RECOMMENDATIONS_OBJECT"]},{"entry":[{},"\u201cxml_directory\\object.dtd\u201d>."]},{"entry":[{},"\u2003<PAST_RECOMMENDATIONS_OBJECT>"]},{"entry":[{},"\u2003<DESCRIPTION>Past Recommendation<\/DESCRIPTION>"]},{"entry":[{},"\u2003<PLACE-EVENTS>Museums<\/PLACE-EVENTS>"]},{"entry":[{},"\u2003<PAST_RECOMMENDATIONS>"]},{"entry":[{},"\u2003<NAME>"]},{"entry":[{},"<HOSTNAME>HistoryMuseum.com<\/HOSTNAME>"]},{"entry":[{},"<SERVICENAME>\/exhibits.wml\/<\/SERVICE NAME>"]},{"entry":[{},"<BOOKMARK>History<\/BOOKMARK>"]},{"entry":[{},"<\/NAME>"]},{"entry":[{},"<CONTEXT>"]},{"entry":[{},"\u2003<LOCATION>"]},{"entry":[{},"\u2003<LAT>38 degrees, 48 minutes North<\/LAT>"]},{"entry":[{},"\u2003<LON>76 degrees, 38 minutes West<\/LON>"]},{"entry":[{},"\u2003<ALT>400 meters<\/ALT>"]},{"entry":[{},"<\/LOCATION>"]},{"entry":[{},"<DATE>2001:01:31<\/DATE>"]},{"entry":[{},"<TIME>1100<\/TIME>"]},{"entry":[{},"<TEMPERATURE>10<\/TEMPERATURE>"]},{"entry":[{},"<METAVECTOR>FF12AB34CD<\/METAVECTOR>"]},{"entry":[{},"<\/CONTEXT>"]},{"entry":[{},"\u2003<\/PAST_RECOMMENDATIONS>"]},{"entry":[{},"\u2003<\/PAST_RECOMMENDATIONS_OBJECT>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"An abbreviated example of a corresponding document type definition (DTD) that specifies the allowed order, structure, and meaning of the tags for a past recommendation XML file, is shown in the following TABLE B. This example may be part of a file named \u201cobject.dtd\u201d stored in the local filesystem directory named \u201cxml_directory\u201d in both the wireless device  and the network server . It illustrates, for example, that the PAST_RECOMMENDATIONS element must include the NAME of the past recommended service, and the CONTEXT in which it was recommended. The NAME element should include the HOSTNAME, the SERVICENAME, and the BOOKMARK. The CONTEXT element must include the LOCATION, the DATE, the TIME, the TEMPERATURE, and the METAVECTOR containing the metadata vector  characterizing the context of device. The LOCATION element must include latitude LAT, the longitude LON, and the altitude ALT of the device.",{"@attributes":{"id":"p-0131","num":"0175"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE B"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Abbreviated Example of a Document Type Definition (DTD)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<!ELEMENT PAST_RECOMMENDATIONS_OBJECT"},{"entry":"(DESCRIPTION, PLACE-EVENTS, PAST_RECOMMENDATIONS)>"},{"entry":"<!ELEMENT PAST_RECOMMENDATIONS (NAME,"},{"entry":"SERVICE, CONTEXT)>"},{"entry":"<!ELEMENT NAME (HOSTNAME, SERVICENAME)>"},{"entry":"<!ELEMENT CONTEXT (LOCATION, DATE, TIME,"},{"entry":"TEMPERATURE, METAVECTOR)>"},{"entry":"<!ELEMENT LOCATION (LAT, LON, ALT)>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{},"ul":{"@attributes":{"id":"ul0017","list-style":"none"},"li":{"@attributes":{"id":"ul0017-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0018","list-style":"none"},"li":["\u201c<LAT>38 degrees, 48 minutes North<\/LAT>\u201d\n\nwould be specified in the DTD as\n","\u201c<!ELEMENT LAT (#PCDATA)>\u201d\n\nto indicate that these elements are present and contain only data, and do not contain other elements.\n"]}}}},"Great flexibility is provided by the use of XML to define the data to be included in the files of the five component databases of the service history log : [1] past recommendations and context, [2] past services used and context, [3] pre-stored service preferences, [4] special requested service requirements and [5] services and short-cuts (e.g., tags). These XML files can be readily identified, accessed, and their elements parsed to obtain the relevant data pertaining to each category. The meaning of the data is assured by its location in a known element type. The XML files, themselves, can be included in the messages exchanged between the wireless device  and the network server . This can be seen in the following discussion of the process  in the wireless device  of , to process the user's request for a recommendation by gathering XML files  of past received recommendations from the service history log  and pairing them with the current context of the device. The context-activity pair is then sent in a recommendation request message  to the network server .","In , the user selects the option [2] SEND PAST RECEIVED RECOMMENDATIONS. Then, in , the user selects the service category of \u201cGALLERIES\u201d from the service category menu , . Then in , step , the wireless device  receives the user's input and flows to step  to get the current context. The process then flows to step  to access the service history log  for XML files  of past received recommendations. The process then flows to step  to apply privacy filter settings  to the data in the XML files . For example, step  can remove any occurrence of the user's name, the location of past recommendations, the date of past recommendations, the name of past service providers, and the like. Then, the recommendation request message  is assembled. The recommendation request message  includes the network address of the server , an op code \u201cRQ_REC_\u201d that designates the message as a recommendation request message, and the operands. The operands include the current context expressed in a separate field as the metadata vector , the past recommendation and context XML file , and the pre-stored service preferences XML file . The wireless device  then sends recommendation request message  to the network server , as shown in .",{"@attributes":{"id":"p-0134","num":"0180"},"figref":["FIG. 11D","FIG. 11D"],"b":["826","1150","800","826","1151","3","1150","1151","1152","829","1152","1134","1150","830","1153","1147","1150","1154","1148","1150","1148"]},{"@attributes":{"id":"p-0135","num":"0181"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE C"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example of an XML File Specifying User Preferences"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?XML VERSION=\u201c1.0\u201d?>"]},{"entry":[{},"<PREFERENCES_OBJECT>"]},{"entry":[{},"<DESCRIPTION>Preferences<\/DESCRIPTION>"]},{"entry":[{},"<GALLERIES>Modern Art<\/GALLERIES>"]},{"entry":[{},"<MONUMENTS>Maritime<\/MONUMENTS>"]},{"entry":[{},"<MOVIES>Family Oriented<\/MOVIES>"]},{"entry":[{},"<\/PREFERENCES_OBJECT>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The process then flows to step  which updates usage statistics and stores them in a database. The process then flows to step  which assembles the recommendation response message \u2032 and transmits it back to the wireless device . The recommendation response message \u2032 includes the network address of the wireless device , the op code \u201cREC_\u201d that designates the message as a recommendation response message, and the operands. The operands include the recommendations XML file .",{"@attributes":{"id":"p-0137","num":"0183"},"figref":["FIG. 11E","FIG. 11E","FIG. 9G","FIG. 9G","FIG. 9G","FIG. 9G"],"b":["800","1146","3","1150","1146","1158","817","1158","1157","1150","1157","1157","1141","815","1159","801","1157","801","1160","1157","813","800","826","800"]},"The process then continues to step  in which the wireless device receives the user's command and identifies the service (from the recommended services) with a user short-cut . At step , the wireless device accesses the identified service. For example, the user may input command \u201cArts\u201d or any equivalent thereof to initiate access to the service \u201cArtsclub.com\u201d. As shown in , the short for the recommended services may be received from the server  as tags in an XML file.","The recommendations XML file  providing two digital service recommendations for galleries, is shown as the example XML file of TABLE D, as follows:",{"@attributes":{"id":"p-0140","num":"0186"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE D"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example of an XML File Specifying New Recommendations"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?XML VERSION=\u201c1.0\u201d?>"]},{"entry":[{},"<DOCTYPE RECOMMENDATIONS_OBJECT"]},{"entry":[{},"\u201cxml_directory\\object.dtd\u201d>."]},{"entry":[{},"<RECOMMENDATIONS_OBJECT>"]},{"entry":[{},"\u2003<DESCRIPTION>New Recommendations<\/DESCRIPTION>"]},{"entry":[{},"\u2003<RECOMMENDATION>"]},{"entry":[{},"\u2003\u2003<NAME>"]},{"entry":[{},"\u2003\u2003<HOSTNAME>Artsclub.com<\/HOSTNAME>"]},{"entry":[{},"\u2003\u2003\u2003<SERVICENAME>[service name or extension]"]},{"entry":[{},"\u2003\u2003\u2003<\/SERVICENAME>"]},{"entry":[{},"\u2003\u2003\u2003<BOOKMARK>Arts<\/BOOKMARK>"]},{"entry":[{},"<\/NAME>"]},{"entry":[{},"\u2003\u2003<LOCATION>"]},{"entry":[{},"\u2003\u2003\u2003<ADDRESS>789 Eastern Blvd.<\/ADDRESS>"]},{"entry":[{},"\u2003\u2003\u2003<AREA>Southside<\/AREA>"]},{"entry":[{},"\u2003\u2003\u2003<LAT>(Lat)<\/LAT>"]},{"entry":[{},"\u2003\u2003\u2003<LON>Lon<\/LON>"]},{"entry":[{},"\u2003\u2003<\/LOCATION>"]},{"entry":[{},"\u2003\u2003<AGES>Adult<\/AGES>"]},{"entry":[{},"\u2003\u2003<TIMES>10:00-17:00<\/TIMES>"]},{"entry":[{},"\u2003\u2003<ADMISSION>$5.00 adult<\/ADMISSION>"]},{"entry":[{},"\u2003\u2003<DRESS>casual dress<\/DRESS>"]},{"entry":[{},"\u2003<\/RECOMMENDATION>"]},{"entry":[{},"\u2003<RECOMMENDATION>"]},{"entry":[{},"\u2003\u2003<NAME>"]},{"entry":[{},"\u2003\u2003<HOSTNAME>Wayoutart.com<\/HOSTNAME>"]},{"entry":[{},"\u2003\u2003\u2003<SERVICENAME>[service name or extension]"]},{"entry":[{},"\u2003\u2003\u2003<\/SERVICENAME>"]},{"entry":[{},"\u2003\u2003<BOOKMARK>Way Out<\/BOOKMARK>"]},{"entry":[{},"<\/NAME>"]},{"entry":[{},"\u2003\u2003<LOCATION>"]},{"entry":[{},"\u2003\u2003\u2003<ADDRESS>248 Circle Rd.<\/ADDRESS>"]},{"entry":[{},"\u2003\u2003\u2003<AREA>Mountains <\/AREA>"]},{"entry":[{},"\u2003\u2003\u2003<LAT>(Lat)<\/LAT>"]},{"entry":[{},"\u2003\u2003\u2003<LON>Lon<\/LON>"]},{"entry":[{},"\u2003\u2003<\/LOCATION>"]},{"entry":[{},"\u2003\u2003<AGES>All Ages<\/AGES>"]},{"entry":[{},"\u2003\u2003<TIMES>10:00-17:00<\/TIMES>"]},{"entry":[{},"\u2003\u2003<ADMISSION>$5.00 adult\/$2.50 child<\/ADMISSION>"]},{"entry":[{},"\u2003\u2003<DRESS>casual dress<\/DRESS>"]},{"entry":[{},"\u2003<\/RECOMMENDATION>"]},{"entry":[{},"<\/RECOMMENDATIONS_OBJECT>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"An abbreviated example of a corresponding document type definition (DTD) that specifies the allowed order, structure, and meaning of the tags for a new recommendation XML file , is shown in the following TABLE E. This DTD is part of a file named \u201cobject.dtd\u201d stored in the local filesystem directory named \u201cxml_directory\u201d in both the wireless device  and the network server . It illustrates, for example, that new RECOMMENDATIONS sent to the wireless device  should include NAME and LOCATION of the service, but it does not include the complete CONTEXT. The NAME should include HOSTNAME, SERVICENAME, BOOKMARK; and the LOCATION should include ADDRESS, AREA, LAT, LON. The DTD can provide for optional data in the XML file, as well, by including other elements, such as \u201c<ADMISSION>\u201d and designating them with an asterisk \u201c*\u201d so that they are not necessarily required in each XML file. The same XML tag parser in both the device recommendation algorithms  of the wireless device  and in the server recommendation algorithms  of the network server , can search the XML file for optional XML tag strings, such as the beginning tag \u201c<ADMISSION>\u201d and the ending tag \u201c<\/ADMISSION>\u201d, and if they are found, the XML tag parser gets the data located between the tags and passes it as \u201cadmission data\u201d to program subroutines that operate on admission data.",{"@attributes":{"id":"p-0142","num":"0188"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE E"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Abbreviated Example of a DTD for New"},{"entry":"Recommendations"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<!ELEMENT RECOMMENDATIONS_OBJECT (DESCRIPTION,"},{"entry":"RECOMMENDATION)>"},{"entry":"<!ELEMENT RECOMMENDATION (NAME, LOCATION,"},{"entry":"ADMISSION*)>"},{"entry":"<!ELEMENT NAME (HOSTNAME, SERVICENAME, TAG)>"},{"entry":"<!ELEMENT LOCATION (ADDRESS, AREA, LAT, LON)>"},{"entry":"<!ELEMENT ADMISSION (#PCDATA)>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"To enable the wireless device  to read the XML recommendations file  of TABLE D, a DOM tree-based parser in the device  reads in the DTD of TABLE E and the XML file  received from the network server . The DOM tree-based parser converts the XML file  into a hierarchical tree data structure enabling the data for each element to be accessible to the application programs  and recommendation algorithms .","This process also works in reverse in the network server  and enables the network server to construct the XML recommendations file . The DOM tree-based parser can read in the DTD of TABLE E and create the hierarchical tree data structure that serves as a template for the recommendation algorithm  in server . The recommendation algorithm  can then fill the nodes of the tree with recommendation data, such as ADDRESS data, AREA data, LAT data, and LON data. The DOM tree-based parser uses this newly created tree of data to create a corresponding XML recommendations file  of TABLE D, that conforms to the DTD of TABLE E. The recommendation algorithm  and the DOM tree-based parser, in effect, work together as a document generator. The Document Object Model (DOM) defines the characteristics of the XML file hierarchical tree data structure and an application programming interface (API) for manipulating it. A description of DOM is provided on the web site http:\/\/www.w3.org\/TR\/DOM-Level-2-Core\/. For additional information on the Document Object Model and the XML file hierarchical tree data structure, see the book by Elliotte Harold, et al, entitled , O'Reilly & Associates, 2001.","In an alternate embodiment, the wireless device uses the SAX event-driven parser and the network server  uses the DOM tree-based parser. This arrangement confers the advantage of requiring a smaller memory allocation for the SAX parser in the wireless device  and yet it provides the capability of the DOM parser to construct the XML recommendations files  in the network server .","In another alternate embodiment, Extensible Hypertext Markup Language (XHTML) can be used to display in the wireless device  the recommendations  in step  which are received from the network server . XHTML is a hybrid between HTML and XML specifically designed for network device displays. A subset of XHTML is XHTML Basic, which defines a document type that is rich enough to be used for content authoring and precise document layout, yet can be shared with wireless mobile devices  with small screens, such as PDAs and cell phones. XHTML Basic is the mobile adaptation of XHTML, and includes everything in XHTML except those capabilities, such as frames, that are not appropriate for devices with small screens. XHTML Basic is an XML-based standard, which allows the automatic parsing and transcoding of content through the use of Extensible Stylesheet Language Transformations (XSLT), part of the XSL style sheet language for XML. XSLT provides a language for transforming XML documents into other XML documents. Using XSLT, a system can automatically transform the same XML content into multiple markup languages depending on the browser . Through such transformations, content can be created for one type device and automatically transformed to appear on another type device. For example, the network server  can create its recommendations once in XML and use XSLT to dynamically convert it to XHTML Basic and HTML for presentation on mobile wireless devices .","XHTML Basic can used with cascading style sheets (CSS) to describe how documents are presented on screen in the browser . Through the use of CSS, document authors can control the presentation of documents without sacrificing device independence. The use of well-known standard HTML tags avoids storing multiple versions of content. The network server  does not need to provide for extra overhead for transcoding required to prepare content for an array of different markup languages. CSS enables a document author to specify the presentation of an application once for each type of device, by means of a corresponding style sheet. If the presentation needs to be changed at any time, the change is made once in the style sheet and the modification is dynamically reflected throughout all the pages in the network server . CSS separates the content of the document from the presentation. This allows creating browser-specific versions of the same content simply by creating a corresponding style sheet for each browser type. Then, when a user requests a page at the wireless device , the network server  server identifies the requesting device and returns the content with a link to the appropriate style sheet. The style sheet is downloaded once and cached by the browser  for use with subsequent pages, which speeds the rendering of all pages received from the network server . CSS enables every aspect of the appearance of the document, such as positioning, fonts, text attributes, borders, margin alignment, and flow, to be defined in the style sheet. A change to any aspect of the document's appearance needs to be made only once. CSS also gives carriers greater control over the look and feel of the services they provide through their wireless portal. The operator can use XHTML Basic to define a default style sheet for all devices it supports, which will ensure a basic look and feel consistent for all devices .",{"@attributes":{"id":"p-0148","num":"0194"},"figref":["FIG. 11F","FIG. 11F","FIG. 11D","FIG. 11F"],"b":["826","1150","800","800","826","1151","4","1150","1151","240","829","1152","1134","1150","830","1153","1147","1150","1154","1148","1150","1155","1157","1150","800","1150","800","3","1157"]},{"@attributes":{"id":"p-0149","num":"0195"},"figref":["FIG. 11G","FIG. 11E"],"b":["800","801","800","826","800"]},"Another example is when the user requests a location-based recommendation with the device . As discussed above,  shows the service history log  has accumulated data on past services used by the user of the device  and the contexts of those past services. The recommendation algorithms  automatically filters the service history log  and selects past services used by the user of the device  and the contexts of those past services, treating them as context-activity pairs. It is not necessary that these pairs of selected past services used and past contexts be related to the current context of the device . Two examples of these past pairs of selected past services used and past contexts are numbered [10] and [11] as follows:\n\n","The device  then sends these two automatically selected past pairs to the network server . The recommendation algorithms  filter out any reference to the user's ID before sending the pairs to the server. Then, device  then sends the current context \u201clocation=xyz3\u201d to the network server . The current context \u201cxyz3\u201d can represent the airport, for example. When the network server  receives the two example past pairs of selected past services used and past contexts, it stores them in its database . Past pairs such as these can be accumulated from many users as recommendation resource in the database  for use by many other users. Examples of nine other past pairs previously accumulated in database  from other users are:\n\n","The network server  compares the current context \u201clocation=xyz3\u201d the past contexts of past pairs previously accumulated in database . There are four matches:\n\n","The network server  sends a list of the four past services used (by others) taken from the list of the four matches, as four recommendations to the user's device . The four recommendations are:\n\n","The recommendation algorithms  in the user's device can filter these four recommendations received from the server, if desired. The filtered recommendations are then output, audibly or visually, to the user and one or more of these recommendations can be selected by user command or other input mechanism. The user's selected recommendations and the current context \u201clocation=xyz3\u201d are then stored in the service history log . For example, if the user selects:\n\n",{"@attributes":{"id":"p-0155","num":"0221"},"figref":["FIG. 11H","FIG. 9A"],"b":["800","817","1165","800","1166","1167","1168","800","1169","800","1170","800","1171","800","1172"]},"Turning now to , a functional block diagram is shown of the wireless device , with its various components and programs. The memory  of the wireless device  is connected by means of the bus  to radio , keypad , speaker , microphone , Display , which displays the browser , CPU , and Sensor Interface . Memory  stores the context-activity pair and service history log , which is shown in greater detail in a first example in  and in a second example in . The memory  also stores the current context state  which includes a description of the environment of the wireless device  at the present time. As will be discussed further below, the characterization of the environment of the wireless device , may include generation of the metadata vector  which includes information relating to the sensor signals input from the sensors at the current time. Also included in the memory  are recommendation algorithms  and WAP client program .",{"@attributes":{"id":"p-0157","num":"0223"},"figref":["FIG. 13","FIG. 11B","FIG. 13","FIG. 14A"],"b":["800","826","827","1302","1134","1303","1301","1300","800","826","831","800"]},"Turning now to , a network process flow diagram is shown of the interaction of the wireless device  and the network server  when the user's wireless device sends a current context-activity pair to the network server  and the resultant service recommendations received back from the server . There are two ways that the user's device  can initiate sending the current context-activity pair to the server . The first way is shown in step  of , where the user's device  is programmed to automatically get the current context state  from the context inference engine , and to select an appropriate activity from the history log , and to send the current context-activity pair to the server . The activities can be past recommendations made by the network server , past services used, pre-stored service preferences, special requested service requirements, or any combination of these. The second way that the device  can send a context-activity pair is shown in step , where the user inputs a selection of an activity onto the request a recommendation sub menu shown in  or F. In response, the device  then gets the current context state  from the context inference engine . The device  then sends the current context-activity pair to the server .","Step  of  shows that the context-activity pair can be processed by the recommendation algorithms  in the wireless device , before transmission to the server . One important feature is that the information transmitted to the network server  can be without any direct user identification, in order to preserve the privacy of the user's information. Often instead of single context-activity pair  a sample filtered by recommendation algorithm  of representative context-activity pairs and related service history items from log  is transmitted to recommendation algorithm . That is, message  is often a set of context-activity pairs and related service history items. In an alternate embodiment shown in , step \u2032 sends to recommendation algorithm  in server , a sample of representative context-activity pairs filtered by algorithm  and related service history items from log  as a set of context-activity pairs and related service history items.","In step  of , the network server  receives the context-activity pair  from the device , and processes the context-activity pair with the recommendation algorithms . The recommendation algorithms  match the context-activity pairs stored in the database  which are similar to the context-activity pair which was received from the device , and it accesses the associated recommendations for the matched context-activity pairs from the database . This can be seen to better advantage in  which shows an example of the context-activity pairs and associated services database  in the server .","Referring for a moment to , the user has selected at the wireless device , the activity of \u201cdining-restaurant\u201d. The current context is a particular local time and location, a particular light level, ambient temperature, speed and acceleration. This current context information, values sent from the recommendation algorithms  in the device , past recommendations  or past services used , and optionally the corresponding metadata vector , are sent as the context-activity pair information  to the network server .","Referring now to  showing an example of the contents of the database , the first row in the context-activity pairs column gives a range of times, a range of locations, a range of temperatures and a range of speed and accelerations for context-activity pairs which are to be matched with the current context-activity pair being transmitted from the wireless device . The corresponding associated service recommendations are shown in the middle column. For each respective service recommendation in the middle column, there is a corresponding number of times that that particular recommendation has been made to other users in the past, as shown in the right-hand column of . The current context is 8:00 PM at night and therefore the service recommendations seen to be different from the service recommendations that would be made from the second row of the database  in . In the second row it can be seen that the context-activity pairs deal with a morning timeframe at the same location. There, it can be seen that in the middle column for the second row, the recommendations are not the same as they were for the nighttime recommendations for the first row. Similar to the previous description, the right-hand column of  gives the number of times that each respective service recommendation has been made to prior users. The recommendation algorithms  in the network server  perform the matching operation and identify the first row in  as a match for context-activity pairs. Accordingly, the recommendation algorithms  in the network server  return the recommendations  to the user's wireless device . Those recommendations are the service recommendations shown in the upper row middle column of . The number of times each recommendation has been made can also be transmitted in the recommendations . This is performed in the step  of the process diagram of . The \u201cnumber of times recommended\u201d is only one of the measures which can be used to generate new recommendations. Other measures include parameters based on feedback.","Step  of  receives the recommendations  at the wireless device , and the recommendation algorithms  apply a filtering operation to the received recommendations to identify any new or significant information. New information can be determined by reference to the context-activity pairs and service history log  in device , which is shown in greater detail in  and in . There it can be seen that in the past, this particular wireless device  has received old recommendations for two entries which are also part of the set of recommendations  now being received from the server . The recommendation algorithm  removes the two old recommendations shown in the top row middle column of  so that only the new recommendations received in the recommendations  from the network server  are to be displayed to the user in the wireless device . The recommendations algorithms  can make other determinations, for example it can examine the user's rating of the respective old recommendations as shown in  and can take the user's rating into consideration in the display of current recommendations to the user. The recommendation algorithms  in the wireless device  can also take into consideration the number of times that each respective recommendation has been previously recommended to other users, that information having been transmitted in recommendations  to the wireless device .","Then in step  of , the wireless device displays and\/or audio outputs the filtered recommendations to the user. Alternately, the wireless device can transfer the filtered recommendations to an application program for further processing. In some embodiments the wireless device  provides feedback to the server  after step . The feedback is used to enhance the quality of later matching operations in step . Then in step , the wireless device  receives the user's command which may take the form of a user command or any other user input form, and accesses the service from the recommended service corresponding to the user command or other user input in step .","At the network server , as shown in , step  transitions to step  in which the new context-activity pairs and recommendations are added to the database . A unique feature of this method and system herein is that there is no user identification which is included in the database , if such is not desired. Then step  of  computes usage statistics for the context-activity pairs in the database  and associates the usage statistics with the respective recommendations stored in the database . This information can have economic value to third party service providers such as the service provider . As is seen in , step  shows the third party service provider  purchasing selected data sets from the database  to be used for market research.","An alternate embodiment is shown in . In the alternate embodiment, the context-activity pair information  sent by the wireless device  in  to the network server , includes the metadata vector . Where the processing power or memory capacity of the wireless device  may be limited, the network server  can make a more accurate determination of the mobile user's current context by assisting in the further processing of the metadata vector . The metadata vector , which is discussed in greater detail below, represents the current sensor signals and characterizes the current state of the wireless device . A context inference engine  in the network server  of  is embodied as programmed instructions executed within the server . The resultant current context computed by the server  and the activity information received from the wireless device  in the context-activity pair , constitute the current context-activity pair. The context-activity pair database  maintained by the server  associates a current context-activity pair with appropriate recommendations made in the past to many users. As the system makes new recommendations to users in response to context-activity pairs submitted by their wireless devices, the server  gathers the new recommendations and adds them to its context-activity pair database . No user personal data is included, as desired, in the context-activity pair database . In this manner, the variety, quality and pertinence of the recommendations in the database  grows as the recommendation system is used. As an added benefit, the server  compiles statistical usage information about the recommendations and stores this in the context-activity pair database .","The network process flow diagram of an alternate embodiment shown in  begins with either step  or step  in the user's wireless device . In step , the user's device  is programmed to automatically obtain the current metadata vector  from the context inference engine , and to select an appropriate activity from the history log . In alternate step , the user can make an activity selection from the request a recommendation sub menu shown in  or F. Both steps  and  flow into step  in the user's wireless device . In step , the context inference engine  contacts the context inference engine  of the network server  shown in , and sends the metadata vector  and activity as the context-activity pair  to server . The process then flows to step  in the network server . The context inference engine  at network server  uses user information stored in the server in the user database  to make a more accurate determination of the wireless device's current context. Step  then flows to step , and the rest of the steps in the flow diagram of  are substantially the same as those described above for . In this manner, the network server  can then assist the wireless device  in determining the wireless device's current context, as well as the server  sending the resultant service recommendations back to the wireless device  to enable short-cut requests to the recommended services.","The context sensitive web services feature enables a mobile phone or wireless PDA to use context inference techniques to sense the user's environment and in response, to provide recommendations to the user that is appropriate to the user's environment and that can be accessed by the user's command or other form of user input. In the distributed network embodiment, the feature offloads some of the computationally intensive computing necessary in context inference techniques, recommendation techniques from the mobile user's wireless device to a server and to web sites on the Internet.","The context sensitive web services feature may also maintain a personal profile of the mobile user's personal preferences in an online server or web site. The mobile user is provided with the ability to control access by application programs in the wireless device, to the user's private data. The context sensitive web services feature provide the mobile user with the ability to control any access to the user's profile by the online server or web site, particularly where processing is offloaded from the wireless device to other network elements.","The mobile user's wireless device is equipped with a context inference engine for providing an awareness of the mobile user's context to application programs, including third party applications. Since the processing power and storage capacity is limited in typical wireless devices, the computational load and storage requirements of the context inference engine are distributed to a context inference server capable of processing the context data. This equally holds true in various embodiments in which other processing tasks, such as service recommendation, are offloaded to network elements.","The feature also enables the mobile user to control which application programs in the wireless device are granted access to the user's private context information. A privacy control block in the wireless device grants or revokes access by application programs to the private context information, based on the mobile user's preferences stored in a privacy profile. The same privacy control and privacy profile is extended to the context inference server, thereby enabling the extension of the user's privacy control to any web server connected to the context inference server. The feature thus enables building an infrastructure for context sensitive applications and services within the wireless device and the server, while providing to the mobile user control over the privacy user's context information.","The Recommendation Web Services menu displayed by the browser  in  is rendered by the WAP client program under the control of the application programs , which are shown in . If the [C] UPDATE PRIVACY FEATURES session type is selected by the user, the Recommendation Web Services menu of  then presents to the user the UPDATE PRIVACY FEATURES sub-menu, shown in , from which the user can select the following options:\n\n","Option [1] of UPDATE YOUR PRIVACY PROFILE, leads to a second sub-menu shown in , which has the following options:\n\n","Option [2] of UPDATE YOUR PERSONAL DATA, leads to a another sub-menu shown in , which has the following options:\n\n","Option [3] of AUTHENTICATE A PROGRAM, leads to a another sub-menu shown in , which has the following options:\n\n","The AUTHENTICATE A PROGRAM option calls the privacy control  of the wireless device  in . If an application program A, B, X, or Y has been verified for its acceptability by a trusted authority, then the trusted authority will have issued a digital certificate on a message authentication code (MAC) it has computed for the application program, which can be checked by the privacy control . As long as the privacy control  trusts the trusted authority issuing the digital certificate, authentication of the application program is straight forward.","Once the mobile user has verified the program's digital certificate and is satisfied that the application program will not subvert the integrity or security of the user's private data, the user can register the program. Registration is the granting by the user of access permission to the program, to access the current context of the user's wireless device and\/or to access other portions of the user's private data. There are several levels of permission that can be granted by the user in two categories, [a] when can the accesses take place and [b] what data can be accessed.","Option [4] of REGISTER A PROGRAM, leads to another sub-menu shown in , which has the following options:\n\n","For the first category of [a] when can the accesses take place, the highest level of permission in this category is that access can occur anytime and without notice. The lowest level of permission in this category is that access can only occur at specified times or under specified conditions, and only after notice to the user and specific authorization by the user. For the second category of [b] what data can be accessed, the highest level of permission in this category is to access unlimited datasets in the user's private data, including current context information, personal data entered by the user, the user's Internet usage history data, the user's Internet cookie data, and the user's application program usage data. The lowest level of permission in this category is that access of any data can only occur after notice to the user and specific authorization by the user. The user can configure any levels of permission in between the highest and lowest and make that the basis for the registration. The user can include the terms of registration in a digital certificate signed by the user and appended to the application program. This registration certificate can be presented by the program to the privacy control  prior to a proposed access event, the privacy control  to automatically verify the registration status of the program. The registration certificate can be constructed as follows.","The privacy control  can compute a message authentication code (MAC) and its own digital signature and append it as a certificate to an acceptable application program A, B, X, or Y. The privacy control  can include the terms of registration in the digital certificate. Then when the program requests access to the user's private data, the privacy control  can automatically check the MAC and its own digital signature to verify that the program has not been changed and the privacy control  can also automatically verify the registration status of the program. This is achieved by the privacy control  computing a hash value for the entire application program A, B, X, or Y (or some portion of it) and the terms of registration, and then forming a message authentication code (MAC) from the hash value. The privacy control  then uses its PKI private key to digitally sign the message authentication code (MAC). The terms of the registration, the MAC and the privacy control's digital signature are appended to the application program A, B, X, or Y as a registration certificate.","Then, whenever the application program A, B, X, or Y requests access to the user's context data or private data, the privacy control  will require the application program to present the registration certificate so that the privacy control  can check that the presented MAC compares with a computed MAC and that the presented digital signature is genuine. The privacy control  can then automatically grant access permission to the application program, in accordance with the terms of the registration.","Methods to generate and evaluate message authentication codes to insure the integrity of data are described in the book by Stephen Thomas entitled , published by John Wiley and Sons, 2000. Two example algorithms for message authentication are RSA's Message Digest (MD5) and the Secure Hash Algorithm (SHA), both of which are described in the book by Stephen Thomas. Another reference that goes into greater detail in its discussion of data integrity methods is the book by Bruce Schneier entitled 2published by John Wiley and Sons, 1996. Methods to generate and evaluate digital signatures to insure the source of the digital program are described in the book by Richard E. Smith entitled , published by Addison Wesley, 1997.","What has been described here for the privacy control  in the wireless device , is equally applicable to the privacy control  in the network server  of . The privacy control  in the network server  can compute the message authentication code (MAC) and its own digital signature and append it, with the terms of the registration, as a registration certificate to an acceptable application program in the web server . Privacy control  has a cached copy  of the Privacy Profile  of the wireless device . This enables automatically processing the privacy check in the network Server  for access requests from web server . When the application program in the web server  requests access to the user's private data in the network server  or in the wireless device , the privacy control  in the network server  will require the application program in the web server  to present the registration certificate so that it can check the MAC and its own digital signature to verify that the application program has not been changed. The privacy control  can then automatically grant access permission to the application program in the web server , in accordance with the terms of the registration.",{"@attributes":{"id":"p-0184","num":"0274"},"figref":"FIG. 12","b":["800","800","800","806","808","809","807","810","811","3","812","1134"]},{"@attributes":{"id":"p-0185","num":"0275"},"figref":"FIG. 12","b":["880","800","1215","805","882","803","804","883","881","802","880","881","880","818","1201","1206","1207","1202","1203","1204","1205","1201","1134","813","880","1"]},"If sufficient computational power and storage capacity are available in the wireless device , further processing of the metadata vector  can take place in the context inference engine , toward the objective of producing the result of an inferred current context. However, if at some point in the computation, the context inference engine  needs the processing power or storage capacity available at the network server , the metadata vector  is sent from the wireless device  to the context inference engine  in the network server  of . The context inference engine  in the network server  an inferred current context can perform the required processing on the metadata vector  and then return it to the context inference engine  in the wireless device  for completion of the an inferred current context result. Alternately, the context inference engine  in the network server  can complete the required processing and then return the resultant inferred current context to the wireless device .",{"@attributes":{"id":"p-0187","num":"0277"},"figref":["FIG. 12","FIG. 8"],"b":["806","807","808","809","810","811","3","812"]},{"@attributes":{"id":"p-0188","num":"0278"},"figref":"FIG. 12","b":["806","812","1201","1202","1205","1202"]},{"@attributes":{"id":"p-0189","num":"0279"},"figref":"FIG. 12","b":["1","800"]},{"@attributes":{"id":"p-0190","num":"0280"},"figref":["FIG. 12","FIGS. 13 and 14A"],"b":["1202","1201","1201","1206","1206","1207","1208","1209","1210","1211","800","1206","1206","1207"]},"In , the Context Inference Engine  in the wireless device  makes inferences from all the sensor inputs based on where the wireless device is located by the mobile user. For instance the inferred current context of the device  may be \u201cIN THE USER'S POCKET\u201d, when a certain set of sensors input a specific combination of signals having a specific value range. As an example, the resulting inference of the current context by the Context Interference Engine  could be expressed in XML language format as follows:",{"@attributes":{"id":"p-0192","num":"0282"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<Context Inference Engine in Device>"},{"entry":"\u2003<device placement> pocket <\/ device placement>"},{"entry":"\u2003<User Interface state> sleep mode <\/User Interface state>"},{"entry":"\u2003<device location> in elevator 5 building 1 floor 2<\/ device location>"},{"entry":"\u2003<API active actions> meeting starting on floor 3 room 322 "},{"entry":"\u2003<\/API active actions>"},{"entry":"<\/Context Inference Engine in Device >"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The Context Inference Engine  in the wireless device  can perform the context inference process with any of several methods. Different input information from the sensors can be weighted according to their relative value of importance appropriate for each environment condition or situation to be analyzed. Each sensor has it's own weight value. Alternatively, the weight values for each sensor for each environment condition can be learned from training sessions using, for example artificial neural networks (ANNs), self-organizing maps (SOMs), decision trees, fuzzy rule-based systems, or model-based systems such as Hidden Markov Modeling (HMM). Combinations of two or more of the alternate methods can be used, depending on the application.","The Context Inference Engine  can continuously adapt its weights through adaptive and continuous learning methods, where the user teaches the wireless device  new environment conditions and names them. Hidden Markov Modeling (HMM) can be used, for example, to implement an adaptive and continuous learning method for the Context Inference Engine . Alternately, the wireless device  can be programmed to spontaneously recognize a changed scene by comparing it with known scenes. The user can teach the wireless device new environmental conditions and name them, using the adaptive and automatic learning capability of neural networks. Adaptive and continuous learning methods are computationally intensive and are appropriate candidates to place on the network server , which assists the wireless device , as discussed below.","The field of context inference has applied the principles of automated pattern recognition to processing diverse types sensor inputs. Speech recognition has been applied to processing speech signals and handwriting recognition has been applied to processing hand force and accelerometer signals. In the field of robotics, image recognition has been applied to processing digitized still and motion images, mechanical location recognition has been applied to processing laser and sonar range finder signals, and mechanical motion recognition to has been applied to processing inertial, acceleration, and heading signals. In the field of prosthetic devices, touch recognition has been applied to processing tactile sensor signals. In the field of medicine, automated diagnostic programs recognize various pathologies by processing bioelectric field signals, as well as the more traditional pulse, respiration rate, and body temperature signals. These diverse sensor signal recognition processes have the common feature that an initial training stage is conducted where sampled signals are equated with a statistical model for those signals.","The principles of automated pattern recognition for these diverse sensor inputs are exemplified by the techniques for recognizing speech patterns. A common technique used in recognition models is Hidden Markov Modeling (HMM). The term \u201cHidden\u201d refers to the probabilistic and not directly observable events which underlie a speech signal. HMM speech recognition systems typically use realizations of phonemes which are statistical models of phonetic segments having parameters that are estimated from a set of training examples. Models of words are made by chaining or linking appropriate statistical models of phonetic segments. The statistical models serve as standards which are to be matched with the unknown voice signals to be recognized. Some useful references discussing the principles of Hidden Markov Models are:\n\n","To illustrate how Hidden Markov Modeling (HMM) can be extended beyond speech recognition, an example is given here for touch recognition. In the training stage for touch recognition, tactile sensor signals are input from touching a tactile transducer to a rough texture, such as for example sandpaper. The tactile sensor signals are transformed into a statistical model of the input signal. The statistical model is stored as a standard in a computer memory under the handle \u201crough_texture\u201d. To expand the range of sensor signals that are included in the model for \u201crough_texture\u201d, several training sessions can be conducted, each with a different direction or pressure for touching the sandpaper, resulting in several different samples of the statistical model. The set of samples of the statistical model are stored as a standard under the handle \u201crough_texture\u201d. Other training sessions are conducted with a smooth texture, such as glass. The tactile sensor signals input from touching the tactile transducer to the smooth texture are transformed into a statistical model of the input signal and stored as a standard under the handle \u201csmooth_texture\u201d. Later, in the recognition mode, an unknown object is touched by the tactile transducer resulting in a sample tactile sensor signal. Recognition of unknown touch signals requires sampling and digitizing the touch transducer's signals. These digitized sensor signals are then processed into metadata. The metadata is then compared with the standard statistical models of \u201crough_texture\u201d and \u201csmooth_texture\u201d. The most likely match is then the inferred touch recognition result.","Combinations of two or more types of sensors can have their signals combined into an input metadata vector that characterizes a composite sampling event. The composite sampling event can be recognized using the principles of Hidden Markov Modeling (HMM). An example composite sampling event can be the state of the health and fatigue of the user of a wireless device . For example, a wireless device  can be equipped with a tactile transducer which outputs tactile sensor signals in response to the hand force and pulse rate of the user who is gripping the wireless device . The wireless device  can be equipped with a temperature sensor which outputs body temperature signals in response to the user gripping the wireless device . Hidden Markov Modeling (HMM) can be used to recognize a force\/temperature input metadata vector that characterizes the combination of the hand force and the temperature sensor signals resulting from a sampling event. A composite sampling event in this example can have an extended duration so that the force sensor can transduce the pulse rate of the user over a period of time.","In the training stage, the tactile sensor signals and the force sensor signals are output while the user is in a condition of good health and resting normally. The tactile sensor signals and the force sensor signals are combined into a force\/temperature input metadata vector which is transformed into a statistical model of the input signals. The statistical model is stored as a standard in the computer memory of the wireless device  under the handle \u201cgood_health_resting_normally\u201d. Other training sessions are conducted with the user in different states of health and fatigue. For example, the user may be training the wireless device  while working late at night at the office. The tactile sensor signals and the force sensor signals resulting from holding the wireless device , are combined into a force\/temperature input metadata vector for the user in the condition of being in good health but fatigued. The force\/temperature input metadata vector is transformed into a statistical model of the input signals and stored as a standard under the handle \u201cgood_health_fatigued\u201d.","Later, in the recognition mode, as the user holds the wireless device , the tactile sensor signals and the force sensor signals are sampled. The Health\/Fatigue_State recognition consists of sampling and digitizing the touch transducer's signals. These digitized sensor signals are then processed into a metadata vector. The metadata vector is then compared with the standard statistical models of handle \u201cgood_health_resting_normally\u201d and \u201cgood_health_fatigued\u201d. The most likely match is then the inferred touch recognition result.","In accordance with the feature, this recognition result can be used by a health maintenance application program in the wireless device , to provide useful and appropriate information to the user. For example, a health maintenance program can process the recognition result, and in response, signal an alarm to the user and provide suggestions for medications to palliate the sensed fatigue. One problem with automatic recognition programs is that they are either relatively large or they call databases that are relatively large in comparison to the memory capacity of the wireless device .","Another aspect of the feature is the recognition result can be used by a supplementary application program in a remote server, to provide additional and more detailed useful and appropriate information to the user. For example, the server can access a large database of suggestions for medications to palliate the sensed fatigue of the user. The results of the search of the database can be returned to the wireless device . The server can also maintain a personal profile of the user's characteristics and preferences and it can use that profile in automatically formulate its query to the database. For example, the user's drug allergies can be stored in the server's database, to insure that recommendations are not made that will result in an allergic reaction by the user to the suggested medication.",{"@attributes":{"id":"p-0203","num":"0297"},"figref":"FIG. 12","b":["800","826","827","1134","1206","1134","1206","1134","1206"],"i":["SSL and TLS","Internet Cryptography"]},{"@attributes":{"id":"p-0204","num":"0298"},"figref":"FIG. 12","b":["800","800","1134","827","826","800","827"]},{"@attributes":{"id":"p-0205","num":"0299"},"figref":["FIG. 13","FIG. 13"],"b":["800","826"],"ul":{"@attributes":{"id":"ul0045","list-style":"none"},"li":{"@attributes":{"id":"ul0045-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0046","list-style":"none"},"li":["1. The sensors continuously provide the sensor data to the Context Inference Engine  (see also  in ) in the wireless device .","2. An application program that utilizes the context awareness APIs  may request the latest context information, or the application program may be registered to receive any changes to specific context information.","3. The Context Inference Engine  securely contacts the Context Inference Engine  of the network server  and sends the metadata vector  to the server . Depending on the sensors and the implementation details, Context Inference Engine  may preprocess part of the sensor data in the metadata vector  prior to sending it. Depending on the sensors and the interval for processing, there may be virtual connection open between Context Inference Engine  and Context Inference Engine  for frequent data exchanges. Context Inference Engine  at the network server , has the processing power and memory capacity to handle computationally intensive and\/or memory intensive processing of the preprocessed sensor data in the metadata vector  to produce the current context result information.","4. Context Inference Engine  at the network server  may utilize local user information (history information, customer details) stored in the user database  for making a more accurate determination of the mobile user's current context.","5. Context Inference Engine  at the network server  then securely returns the current context awareness information to Context Inference Engine  in the wireless device .","6. Context Inference Engine  in the wireless device  then provides the current context awareness information through Context Awareness APIs  to the application programs registered for to receive that information."]}}}},{"@attributes":{"id":"p-0206","num":"0306"},"figref":["FIG. 13","FIG. 12"],"b":["827","800","827","1","800","827","1310","800"]},"In , Web Service Server  uses the Context Inference Client  to contact the Context Inference Server  in the network server . Context Inference Client  may utilize customer database information in database  to enhance the context sensitivity capabilities of the web server . The contact to the network server  is done through a context awareness interface  to the Context Inference Server  in the network server .","Context Inference Server  registers the Web Services of the web server  through the privacy control  of the network server  to the Context Inference Engine . Privacy control  has a cached copy  of the Privacy Profile  of the wireless device . This enables processing of the privacy check in the network Server  for access requests from web server . The communication between web server  and network server  is secured using the Internet secure protocols such as HTTPS or SSL. The Context Inference Server  can publish its own service as a Web Service to other Web Services on the Internet, in which case the implementation of the interface  between web server  and network server  can be Extensible Markup Language (XML) messages carried in the Simple Object Access Protocol (SOAP) messaging protocol.","The Context inference Engine  in the network server  will receive processed sensor metadata vector  information and possibly some application API information originated from the Context Inference Engine  of the wireless device . The Context inference Engine  of the network server has user database  information of the behavior of the user and of the past usage of the wireless device. The Context inference Engine  of the network server may also have third party services available (such as instances offering content and\/or services) to be offered to potential users. What is offered to the user can also depend on the user profile . The nature of the Context inference Engine  information of the wireless device  that is conveyed to the Context inference Engine  of the network can be controlled with the privacy control  that is managed by the user of the wireless device . The user may thus fully or partly disable the Context inference Engine  of the network to control the amount of his\/her information that can be used by third party services. The privacy control  enables the user to control access by anyone to his\/her private information.","The Context inference Engine  of the wireless device receives an input from the API interface  from the applications A, B, X, or Y located in the wireless device . An example would be from a calendar application program indicating that a meeting is starting in 25 minutes time. As another example the calendar application program indicates that Lisa is having a birthday tomorrow into which you are participating. The Context inference Engine  of the wireless device can convey processed result information to the Context inference Engine  of the network server. Now in addition to the sensor information, information from the application programs A, B, X, or Y can also be used in the decision making of the Context inference Engine  of the wireless device. A combination of the sensor information and information coming from the application programs A, B, X, or Y can be processed by the Context inference Engine . The user's behavior or usage patterns can be detected from the sensor and recorded in the user database, concerning the usage of the application programs. As previously discussed, the processing of this combined information from the sensors and from the application programs can be shared between the Context inference Engine  and the Context inference Engine .","The information transfer from the Context inference Engine  of the wireless device to the Context inference Engine  of the network server can be done in alternative ways. The system can be managed so that the current consumption and transfer capacity between the wireless device  and the network server  is taken into account. The context information does not always have to be collected so frequently that it would have to be periodically transferred to the network side  every few seconds. Depending on the application, the timing window applied to information transfer from the Context inference Engine  of the wireless device  to the Context inference Engine  of the server  can vary from seconds to minutes. If there were no event change or condition change in the environment of the wireless device , there would be no need to transfer information to the Context inference Engine  of the server . Additionally information can be temporarily stored in a buffer in the wireless device , which can then transferred less frequently to the network Context inference Engine . Packet based GPRS and UMTS can support the less frequent information transfer rates. Also, it is advantageous to send the network Context inference Engine  information from the wireless device  as an attachment, immediately subsequent to other signaling made to in the network direction from the wireless device , thus saving the radio transmitter of the wireless device  from having to be switched on again for transferring the Context inference Engine  information separately to the network server .","Returning to , the relationship is shown between the network server , the Universal Description, Discovery and Integration (UDDI) registry , and a plurality of web site servers . UDDI is a defacto standard for an Internet-based registry. The UDDI registry  enables the network server  to discover new web sites for services and businesses on the Internet. Once such services and businesses are identified by the UDDI registry  to the network server , then the server  must apply the mobile user's cached privacy profile  in , in order to prevent unauthorized access of the user's private data by application programs on the newly discovered web sites.",{"@attributes":{"id":"p-0213","num":"0313"},"figref":"FIG. 14A","b":["800","826","827","800","800","1400"],"ul":{"@attributes":{"id":"ul0047","list-style":"none"},"li":{"@attributes":{"id":"ul0047-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0048","list-style":"none"},"li":["Step : PRIVACY CONTROL  IN WIRELESS DEVICE  SENDS UPDATED PRIVACY PROFILE TO NETWORK SERVER .\n\nThen the network server  continues with step :\n","Step : NETWORK SERVER  UPDATES CACHED PRIVACY PROFILE .\n\nThe wireless device  continues with the following steps , , and :\n","Step : SENSORS CONTINUOUSLY PROVIDE SENSOR DATA TO CONTEXT INFERENCE ENGINE  IN WIRELESS DEVICE .","Step : APPLICATION PROGRAM THAT USES CONTEXT AWARENESS API  REQUESTS LATEST CONTEXT INFORMATION.","Step : CONTEXT INFERENCE ENGINE  CONTACTS CONTEXT INFERENCE ENGINE \u00b0 F. THE NETWORK SERVER  AND SENDS THE METADATA VECTOR  TO SERVER .\n\nThen the network server  continues with steps  and :\n","Step : CONTEXT INFERENCE ENGINE  AT NETWORK SERVER  USES LOCAL USER INFORMATION STORED IN USER DATABASE  TO MAKE A MORE ACCURATE DETERMINATION OF THE MOBILE USER'S CURRENT CONTEXT.","Step : NETWORK SERVER  REQUESTS DATA FROM WEB SERVER . THE NETWORK SERVER'S ACCESS IS AUTHORIZED BY CACHED PRIVACY PROFILE  IN NETWORK SERVER.\n\nThen the web server  continues with step :\n","Step : WEB SERVER PROVIDES USER INFORMATION STORED IN DATABASE  TO NETWORK SERVER .\n\nThen the network server  continues with step :\n","Step : CONTEXT INFERENCE ENGINE  AT THE NETWORK SERVER  THEN SECURELY RETURNS THE CURRENT CONTEXT AWARENESS INFORMATION TO CONTEXT INFERENCE ENGINE  IN THE WIRELESS DEVICE .\n\nThen the wireless device  finishes with step :\n","Step : CONTEXT INFERENCE ENGINE  IN THE WIRELESS DEVICE  THEN PROVIDES THE CURRENT CONTEXT AWARENESS INFORMATION THROUGH CONTEXT AWARENESS APIs  TO THE APPLICATION PROGRAMS REGISTERED TO RECEIVE THAT INFORMATION."]}}}},{"@attributes":{"id":"p-0214","num":"0324"},"figref":"FIG. 15","b":["826","1500","1520","1305","1306","1535","1523","1500","410"]},"In , the functional components of an exemplary network server  are shown arranged as an object model. The object model groups the object oriented software programs into components that perform the major functions and applications in network server . The object model for memory  of network server  employs a three-tier architecture that includes presentation tier , infrastructure objects partition , and business logic tier . The object model further divides business logic tier  into two partitions, application objects partition  and data objects partition .","Presentation tier  retains the programs that manage the device interfaces to network server . In , presentation tier  includes network interface . A suitable implementation of presentation tier  may use Java servlets to interact with WAP protocol gateway  via the hypertext transfer protocol (\u201cHTTP\u201d). The Java servlets ran within a request\/response server that manages the exchange of messages between WAP protocol gateway  and network server . A Java servlet is a Java program that runs within a Web server environment. A Java servlet takes a request as input, parses the data, performs logic operations, and issues a response back to WAP protocol gateway . The Java runtime platform pools the Java servlets to simultaneously service many requests. Network interface  accepts request messages from WAP protocol gateway  and passes the information in the request to visit object  for further processing. Visit object  passes the result of that processing to network interface  for transmission back to the WAP protocol gateway . Network interface  may also use network adapter  to exchange data with another user device.","Infrastructure objects partition  retains the programs that perform administrative and system functions on behalf of business logic tier . Infrastructure objects partition  includes operating system , and an object oriented software program component for database server interface , and system administrator interface .","Business logic tier  in  includes multiple instances of visit object , \u2032, \u2033. A separate instance of visit object  exists for each network interface  session. Each visit object  is a stateful session object that includes a persistent storage area from initiation through termination of the session, not just during a single interaction or method call. The persistent storage area retains information associated with the session.","When WAP protocol gateway  sends a metadata vector  message to network server , the message is sent to network interface  to invoke a method that creates visit object  and stores connection information as a state in visit object . Visit object  may, in turn, invoke a method in context inference engine  application  to perform a context inference on the metadata vector and return a current context result.","When WAP protocol gateway  sends a privacy control data  message to network server , the message is sent to network interface  to invoke a method that creates visit object  and stores connection information as a state in visit object . Visit object  may, in turn, invoke a method in privacy control  application  to update the cached privacy profile .","When WAP protocol gateway  sends a context-activity pair message  to network server , the message is sent to network interface  to invoke a method that creates visit object  and stores connection information as a state in visit object . Visit object  may, in turn, invoke a method in context-activity pair recommendations application . Application  compares four types of activities in the context-activity pairs received from the wireless device , with the recommendations in the database : [1] past recommendations, [2] past services used, [3] prestored service preferences, and [4] special requested service requirements. Application  may, in turn make a method call to context-activity recommendations usage statistics application .","When WAP protocol gateway  sends a metadata vector message of the user's command to network server , the message is sent to network interface  to invoke a method that creates visit object  and stores connection information as a state in visit object . A description of server programming applications developed with Enterprise Java Beans is provided in the book by Ed Roman entitled , published by John Wiley and Sons, 1999. A description of the use of an object model in the design of server applications is provided in the book by Matthew Reynolds entitled -, Wrox Press Inc., 2000, (ISBN: 1861003986). Java servlets and the development of web site servers is described in the book by Duane K. Fields, et al. entitled , published by Manning Publications Co., 2000.","The user's Wireless Application Protocol (WAP)-enabled portable wireless device  accesses a small file called a deck which is composed of several smaller pages called cards which are small enough to fit into the display area of the device's browser . The small size of the browser  and the small file sizes accommodate the low memory constraints of the portable wireless device  and the low-bandwidth constraints of a wireless network . The cards are written in the Wireless Markup Language (WML) which is specifically devised for small screens and one-hand navigation without a keyboard. The WML language is scaleable from two-line text displays on the browser  of a cellular telephone, up through large LCD screens found on smart phones and personal communicators. The cards written in the WML language can include programs written in WMLScript, which is similar to JavaScript, but makes minimal demands on memory and CPU power of the device  because it does not contain many of the unnecessary functions found in other scripting languages.","The Nokia WAP Client Version 2.0 is a software product containing the components necessary to implement the WAP client on the wireless device . These components include a Wireless Markup Language (WML) Browser, WMLScript engine, Push Subsystem, and Wireless Protocol Stack. The Nokia WAP Client is a source-code product that can port and integrate into wireless devices such as mobile phones and wireless PDAs. Application programs  stored in the wireless device  interact with the WAP Client to implement a variety of communications applications. Details of the Nokia WAP Client Version 2.0 can be found in the online paper: 2.0, Nokia Internet Communications, 2000, www.nokia.com\/corporate\/wap.","The WAP Client includes the Wireless Public Key infrastructure (PKI) feature, providing the infrastructure and the procedures required for authentication and digital signatures for servers and mobile clients. Wireless PKI is a certificate-based system that utilizes public\/private key pairs associated with each party involved in a mobile transaction. Wireless Identity Module (WIM) is a security token feature of the WAP Client, which includes security features, such as the public and private keys and service certificates, needed for user authentication and digital signatures. Additionally, it has the ability to perform cryptographic operations to encrypt and decrypt messages.","The WAP protocol gateway  links the Internet  and the wireless network . The WAP protocol gateway  includes the Wireless Public Key infrastructure (PKI) feature to help provide a secure Internet connection to the wireless device . The WAP protocol gateway  enables the WAP-enabled wireless device  to access Internet applications such as headline news, exchange rates, sports results, stock quotes, online travel and banking services, or to download distinctive ringing tones.","The user's WAP-enabled portable wireless device  communicates with the wireless access point  and can exchange messages for distances up to several kilometers. The types of wireless networks  supported by the WAP standard include Cellular Digital Packet Data (CDPD), Code-Division Multiple Access (CDMA), Global System for Mobile Communications (GSM), Time Division Multiple Access (TDMA), GPRS, 3G-Broadband, and the like. The overall process of communication between the user's WAP-enabled wireless device (the client) , through the WAP protocol gateway , to the server  resembles the way Web pages are served on the Internet using the HyperText Transfer Protocol (HTTP) or World Wide Web protocol:\n\n","In , the protocol gateway  includes a WAP protocol stack organized into five different layers. An application layer is the wireless application environment, which executes portable applications and services. A session layer is the wireless session protocol, which supplies methods for the organized exchange of content between client\/server applications. A transaction layer is the wireless transaction protocol, which provides methods for performing reliable transactions. A security layer is the wireless transport layer security, which provides authentication, privacy, and secure connections between applications. The transport layer is the wireless datagram protocol, which shelters the upper layers from the unique requirements of the diverse wireless network protocols, such as CDPD, CDMA, GSM, etc. Additional information about the WAP standard and the WAP protocol stack can be found in the book by Charles Arehart, et al. entitled, , published by Wrox Press Ltd., 2000 (ISBN 1-861004-04-1).",{"@attributes":{"id":"p-0229","num":"0345"},"figref":["FIGS. 16A and 16B","FIGS. 16A and 16B","FIGS. 16C and 16D"],"ul":{"@attributes":{"id":"ul0051","list-style":"none"},"li":{"@attributes":{"id":"ul0051-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0052","list-style":"none"},"li":["(1) AUTOMOBILE\n        \n        ","(2) DINING\n        \n        ","(3) ENTERTAINMENT\n        \n        ","(4) TRAVEL\n        \n        "]}}}},"If the user selects the option of (c) REQUEST A RECOMMENDATION, from the recommendation web services menu of , then the REQUEST A RECOMMENDATION sub menu is displayed on the wireless device, as is shown in . The options presented to the user in the REQUEST A RECOMMENDATION sub menu are activity categories. The activity categories are displayed as follows:\n\n","If the user selects the option of DINING ACTIVITIES and specifically \u201crequest restaurant recommendation\u201d in the browser  of , then the wireless device  proceeds to interact with the network server , to produce the result of the browser  displaying the page shown in . As is seen in , the user selected activity of \u201cDINING-restaurant\u201d is coupled with the context that the wireless device  determines to exist at the present time in the vicinity of the wireless device . The activity coupled with a description of the current context, is transmitted from the wireless device  to the network server . There at the server , context-activity pairs in the database  are approximately matched to the current context-activity pair received from the device , and the server accesses associated recommendations that are stored in the database . The associated recommendations are then transmitted back to the device . The user can thereafter initiate access to the digital services via short-cut or other user input form. For short cuts, the user selects or inputs a desired service, such as via URL address. The wireless device  compares the service with past used services at and determines whether this is the first time the service has been accessed. If not, the wireless device  proceeds to accesses the service. A database may be maintained by wireless device  and\/or network server , in which user short-cuts are maintained for each service. As shown, a database may store a service name, a service access mode, a host address\/channel, short-cuts for the host address\/channel, extensions (e.g., service name) and short-cuts for the extensions. For example, a user seeking to access the service at \u201cyahoomobile.com\/news\/world.wml\u201d would employ the shortcut command: \u201cyahoomobile\u201d then \u201cworldnews\u201d.","An operational example of wireless device  employing, locally or remotely, a service recommendation subsystem in combination with bookmarking subsystem is discussed below with reference to  through J. A user initiates a browsing operation via the browser  to trigger a recommendation process to be performed locally at the wireless device  or remotely at network server  (discussed in greater detail above). In either case, a subset of recommended digital services are determined from a plurality of digital services (which may be quite a large set) based on user-related filter criteria, such as a current context. The subset of recommended services reflects those services the user would likely desire, preferably with a high probability, in the current context.","For instance, a user, such as a business person, operating his or her wireless device  between 11:00 AM-2:00 PM on Wall St. during the daytime at a temperature between 15\u00b0 C.-25\u00b0 C. and a speed between 0-50 kph at 1:00 pm may be provided with the following recommended services:",{"@attributes":{"id":"p-0234","num":"0382"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Host: wap.yahooMobile.com"]},{"entry":[{},"Services (address):"]},{"entry":[{},"\u2003-world news (\/news\/world.wml)"]},{"entry":[{},"\u2003-business news (\/news\/business.wml)"]},{"entry":[{},"\u2003-F1 news (\/sports\/f1\/news.wml)"]},{"entry":[{},"Host: wap.business.com"]},{"entry":[{},"Services (address):"]},{"entry":[{},"\u2003-on-line news (\/online.wml)"]},{"entry":[{},"\u2003-main news (\/index.wml)"]},{"entry":[{},"\u2003-stock quotes: Nokia (\/stocks\/quotes.pl?ticker=NOK)"]},{"entry":[{},"Host: wap.f1-forum.com"]},{"entry":[{},"Services (address):"]},{"entry":[{},"\u2003-news (\/news.wml)"]},{"entry":[{},"\u2003-results (\/results.wml)"]},{"entry":[{},"\u2003-table (\/table.wml)"]},{"entry":[{},"Host: wap.weatherOnLine.com:"]},{"entry":[{},"Services:"]},{"entry":[{},"\u2003-Helsinki tomorrow (\/forecast.pl?city=Helsinki&day=+1)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The recommended services may be outputted, audibly and\/or visibly, in a menu form (if desired) to the user. Thereafter, the user selects the following browsing command (host, service): \u201cf1-forum, news\u201d. The command may be a touchscreen link, or an icon, located on the display . The bookmark\/shortcut engine ( or ) identifies the host and service commands by comparing the commands to the limited set of most probable host and service alternatives and informs the browser  which service should be loaded, e.g., wap.f1-forum.com\/news.wml.","One example of such a menu is shown in  in which both the host and service names are displayed for selection by the user. Another example of such a menu is shown in  in which  shows an initial menu of the host names of the recommended services and  shows a subsequent menu of the service name of the selected host name. In this example, the user may access the home page of a service site by an initial command, and then browse the service extensions of the site through addition commands. Such an arrangement provides a multi-layered access arrangement to reduce further the range of short-cuts to be processed, as well as providing multi-modal input functionality in initial service access and subsequent browsing.","Another embodiment includes the automatic delivery of bookmarked short-cuts to a wireless device according to the history log and sensor information. Using the teachings shown above, log formats may me algorythmically (or manually) organized to provide information of matters like: service name, URL (host port, path, filename), number of times accessed, time of last\/first access, links to other URL's, derived information on the service, and metadata received from the service. The information can be averaged or compressed with context information on other factors as well, e.g.: date and time, geographical\/logical terminal location (e.g., office, home, airport, etc.\u2014logical information may also include available BlueTooth\u2122 devices), type of network connection (e.g., GPRS, WCDMA, BlueTooth\u2122, including capacity, quality, supported network services, etc.), operational mode of the device (e.g. selected profile: \u201cmeeting\u201d, \u201csilent\u201d, \u201coutdoors\u201d, etc.), or other information, including sensor data or other context information. The logs may be also configured to contain one row per service instead of one row per request, in order to reduce the amount of stored information.","Thus, as an example, a user may obtain bus schedules and read daily news services (e.g., Yahoo!\u2122, Wall Street Journal) when travelling to work. Under an embodiment of the present invention, the wireless device  or server  would organize the bookmarks or links accordance to the service accessed, and the time of day the service was accessed. Once enabled by the user, the links or bookmarks most often used by the user for that time of day would be presented for user selection. As the time of day changes, the bookmarks or links shown to the user may change as well. It is understood in the teachings of the invention that a multitude of content\/context combinations may be made, and preferences may be organized or set as rules for presentation. As an example, the following list shows a portion of the types of preference combinations that may be made:\n\n","Although illustrative embodiments have been described herein in detail, it should be noted and understood that the descriptions and drawings have been provided for purposes of illustration only and that other variations both in form and detail can be made thereupon without departing from the spirit and scope of the invention. The terms and expressions have been used as terms of description and not terms of limitation. There is no limitation to use the terms or expressions to exclude any equivalents of features shown and described or portions thereof."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE FIGURES","p":["In order that the invention may be more fully understood an embodiment thereof will now be described by way of example with reference to the accompanying drawings in which:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIGS. 6 and 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 9B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIGS. 9D"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIGS. 9F and 9G"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 9H"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIGS. 9I"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 11A"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 11B"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 11C"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 11D"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 11E"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 11F"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 11G"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 11H","b":"800"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 14A"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 14B"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 14C"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 14D","b":["326","829","826","817","815"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIGS. 16A and 16B"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIGS. 16C and 16D"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIGS. 16E and 16F"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIGS. 16G and 16H"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 17A","b":["192","826"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 17B","b":["815","800"]}]},"DETDESC":[{},{}]}
