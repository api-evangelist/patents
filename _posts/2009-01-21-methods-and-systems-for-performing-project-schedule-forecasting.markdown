---
title: Methods and systems for performing project schedule forecasting
abstract: A computer-implemented method of performing project schedule forecasting based on stored project data includes receiving a first user input selecting a first plurality of work items in a project. Respective work items of the first plurality have respective work estimates. A second user input is received specifying one or more first work item attributes referencing historical work completion data. A first historical rate of work completion is determined in accordance with the historical work completion data referenced by the one or more first work item attributes. An estimated time of completion of the first plurality of work items is calculated in accordance with the first historical rate of work completion and provided for display.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08875088&OS=08875088&RS=08875088
owner: Versionone, Inc.
number: 08875088
owner_city: Alpharetta
owner_country: US
publication_date: 20090121
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DESCRIPTION OF EMBODIMENTS"],"p":["The disclosed embodiments relate generally to project management software, and more particularly, to performing project schedule forecasting using project management software.","Agile software development refers to software development methodologies in which software is developed incrementally in steps referred to as iterations. Iterations typically are measured in weeks and may vary in length from one week or less to one month or more. Examples of agile software development methodologies include Scrum, Extreme Programming (XP), Crystal, Lean Development, AgileUP, and Dynamic Systems Development Method (DSDM). Agile software development methods also have been referred to as lightweight methods. Methodologies may have their own vocabulary. For example, an iteration may be referred to as a sprint or a timebox, depending on the methodology. Agile software development is distinguishable from the \u201cwaterfall\u201d model of sequential software development.","Software for implementing agile development methodologies and for tracking and reporting on projects that use agile methodologies can help developers to realize fully the benefits, such as flexibility and rapid cycle times, offered by these methodologies. Accordingly, there is a need for robust agile development management software that is convenient to use.","More generally, regardless of the project management methodology being used, project managers may desire to use historical data regarding rates of work completion to perform accurate forecasting and may desire to rapidly evaluate different project scheduling scenarios. Accordingly, there is a need for project management software that allows for data-driven, on-the-fly project schedule forecasting.","In some embodiments, a computer-implemented method of performing project schedule forecasting based on stored project data includes receiving a first user input selecting a first plurality of work items in a project. Respective work items of the first plurality have respective work estimates. A second user input is received specifying one or more first work item attributes referencing historical work completion data. A first historical rate of work completion is determined in accordance with the historical work completion data referenced by the one or more first work item attributes. An estimated time of completion of the first plurality of work items is calculated in accordance with the first historical rate of work completion and provided for display.","In some embodiments, a computer-implemented method of performing project schedule forecasting based on stored project data is performed at a client system. In the method, a first user input is received selecting a first plurality of work items in a project. Respective work items of the first plurality have respective work estimates. A second user input is received specifying one or more first work item attributes referencing historical work completion data. The first and second user inputs are transmitted to a server system distinct from the client system. An estimated time of completion of the first plurality of work items, calculated in accordance with a first historical rate of work completion determined in accordance with the historical work completion data referenced by the one or more first work item attributes, is received from the server system and displayed.","In some embodiments, a system for performing project schedule forecasting based on stored project data includes memory, a display, one or more processors, and one or more programs stored in the memory and configured for execution by the one or more processors. The one or more programs include instructions to receive a first user input selecting a first plurality of work items in a project. Respective work items of the first plurality have respective work estimates. The one or more programs also include instructions to receive a second user input specifying one or more first work item attributes referencing historical work completion data, instructions to determine a first historical rate of work completion in accordance with the historical work completion data referenced by the one or more first work item attributes, instructions to calculate an estimated time of completion of the first plurality of work items in accordance with the first historical rate of work completion, and instructions to provide the estimated time of completion of the first plurality of work items for display.","In some embodiments, a system for performing project schedule forecasting based on stored project data includes memory, a display, one or more processors, and one or more programs stored in the memory and configured for execution by the one or more processors. The one or more programs include instructions to receive a first user input selecting a first plurality of work items in a project. Respective work items of the first plurality have respective work estimates. The one or more programs also include instructions to receive a second user input specifying one or more first work item attributes referencing historical work completion data and instructions to transmit the first and second user inputs to a server system distinct from the client system. The one or more programs further include instructions to receive and display an estimated time of completion of the first plurality of work items, wherein the estimated time of completion is calculated in accordance with a first historical rate of work completion determined in accordance with the historical work completion data referenced by the one or more first work item attributes.","In some embodiments, a computer readable storage medium stores one or more programs configured to be executed by a computer system to perform project schedule forecasting based on stored project data. The one or more programs include instructions to receive a first user input selecting a first plurality of work items in a project. Respective work items of the first plurality have respective work estimates. The one or more programs also include instructions to receive a second user input specifying one or more first work item attributes referencing historical work completion data, instructions to determine a first historical rate of work completion in accordance with the historical work completion data referenced by the one or more first work item attributes, instructions to calculate an estimated time of completion of the first plurality of work items in accordance with the first historical rate of work completion, and instructions to provide the estimated time of completion of the first plurality of work items for display.","In some embodiments, a computer readable storage medium stores one or more programs configured to be executed by a client computer system to perform project schedule forecasting based on stored project data. The one or more programs include instructions to receive a first user input selecting a first plurality of work items in a project. Respective work items of the first plurality have respective work estimates. The one or more programs also include instructions to receive a second user input specifying one or more first work item attributes referencing historical work completion data and instructions to transmit the first and second user inputs to a server system distinct from the client system. The one or more programs further include instructions to receive and display an estimated time of completion of the first plurality of work items, wherein the estimated time of completion is calculated in accordance with a first historical rate of work completion determined in accordance with the historical work completion data referenced by the one or more first work item attributes.","Like reference numerals refer to corresponding parts throughout the drawings.","Reference will now be made in detail to embodiments, examples of which are illustrated in the accompanying drawings. In the following detailed description, numerous specific details are set forth in order to provide a thorough understanding of the present invention. However, it will be apparent to one of ordinary skill in the art that the present invention may be practiced without these specific details. In other instances, well-known methods, procedures, components, and circuits have not been described in detail so as not to unnecessarily obscure aspects of the embodiments.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":["100","100"]},"Work item planning () includes identifying work to be performed during the software development process. For example, features to be included in the software being developed are specified and software defects to be fixed during development are identified. Depending on the agile methodology being used, features also may be referred to as stories, backlog items, or requirements. In the context of agile software development, a work item is any item for which the agile development management software platform can track progress, such as time spent working on the item. Estimates for the time that work items require for completion (e.g., the time to complete features or to fix defects) may be entered during the work item planning process. Furthermore, groups of work items may be defined. For example, a feature group may be defined to include a plurality of features. Defined groups of work items may contain different types or levels of work items and thus be hierarchical, or alternatively may contain a single type or level of work items and thus be flat. Work estimates for the features within a feature group may be added together to provide an overall work estimate for the feature group. The work estimate for a group of work items (e.g., a feature group) thus may provide a roll-up of the work estimates for the individual work items (e.g., features) in the group.","Release planning () includes assigning identified work items (e.g., features and defects) to particular planned software releases. For example, certain features may be included in an initial release, with additional features to be added in subsequent releases. Similarly, fixing various defects may be scheduled across multiple releases. More generally, release planning may include assigning identified work items to levels or nodes in a project hierarchy. The project hierarchy may include projects, sub-projects, releases, teams and other internal organizations, clients or customers, and vendors.","Iteration planning () includes assigning work items to iterations. There may be multiple iterations performed to prepare a particular software release; iteration planning thus involves specifying what work will be performed in which iterations. For example, features and defects are assigned to particular iterations. Within each iteration, tasks and tests corresponding to the features and defects are defined. A task is a unit of work performed as part of delivering a feature. In some embodiments, a task is defined such that it takes no more than 3 days to perform. A test is an acceptance criterion that a feature must satisfy. Estimates for the time required to complete tests and tasks may be entered. In some embodiments, the estimates for tasks and tests are independent of the estimates for their features. Tasks and tests are examples of work items.","One or more goals may be defined during work item planning , release planning , and\/or iteration planning . A goal name may be entered and one or more work items assigned to the goal. The goal thus serves as a roll-up of a set of work items. In some embodiments, the set of work items is user-defined. Work items assigned to a particular goal may be associated with a single level or multiple levels in a project hierarchy. For example, a particular goal may roll up work items associated with a particular project, sub-project, release, team and other internal organization, client or customer, or vendor. Alternatively, a particular goal may roll up work items associated with various projects, sub-projects, releases, teams and other internal organizations, clients or customers, and\/or vendors. Examples of goals include an objective for a particular project, a project milestone, and a strategic goal for a company or business unit.","The actual time spent working on the work items (e.g., on the features and defects and their corresponding tasks and tests) during an iteration is tracked () and compared against the estimates. Progress and status reports may be displayed graphically. For example, a \u201cdashboard\u201d user interface may display multiple graphical reports. Possible graphical reports include burndown charts, velocity charts, burn-up charts, Gantt charts, parking lot reports, scope change, defect trending, test case status, and defect actuals. A burndown chart illustrates remaining work vs. time. Velocity refers to the estimated work per iteration on a project. Scope change refers to a change in requirements, such as the addition or deletion of features and defects. Reports may be generated for a specified level or node in the project hierarchy (e.g., for a specified project, sub-project, release, team or other internal organization, client or customer, and\/or vendor.) Reports also may be generated for particular goals.","The operations in the development process flow  are presented sequentially in  for purposes of illustration. However, the operations need not be performed sequentially. For example, the planning operations , , and  may be updated dynamically throughout the agile development process. Similarly, tracking  may be performed dynamically, and may prompt subsequent planning changes. Furthermore, multiple operations may be combined into a single operation and additional operations may be added to the flow .","As used herein, terms such as \u201cwork item,\u201d \u201crelease,\u201d \u201cproject hierarchy,\u201d and \u201cgoal\u201d are not limited to the context of agile development management software, but instead may apply to any type of project management software. A work item thus is any item for which project management software can track progress, such as time spent working on the item, and a goal is a roll-up of a set of work items. A release may refer to any type of product release. A project hierarchy may refer to any set of levels or nodes associated with a project being managed using project management software. In addition, \u201cvelocity\u201d is merely one example of a rate of work completion associated with a project. Other rates of work completion include but are not limited to the amount of estimated work completed per release or per a specified period of time (e.g., a day, a week, or a month).","At a high level, a project development process such as the agile software development process  has various assets associated with it. Nodes in the project hierarchy, such as projects, sub-projects, releases, teams, clients, and vendors, can be considered assets, as can iterations. Work items such as features and defects are assets, as are tasks and tests. Feature groups are assets, as are goals. Assets may be associated with (i.e., related to) other assets. In some embodiments, for example, tasks and tests are associated with corresponding features and defects, which in turn may be associated with corresponding iterations. In another example, features in a particular feature group are associated with the feature group.","An asset includes various attributes. In some embodiments, each kind of asset (e.g., work item, project, goal, feature group, feature, task, etc.) has a specified set of associated, or related, attributes. Types of attributes include text strings, numerical values, values calculated according to a formula (\u201csynthetic attributes\u201d), and associated\/related assets. A first asset associated with (i.e., related to) a second asset thus is considered an attribute of the second asset. An attribute may be automatically included (e.g., hard-coded or created for a particular installation) in project management software or may be customized (i.e., user-defined).","Attention is now directed to user interfaces (UIs) for project management software. While the following UIs are described with respect to agile development management software, analogous UIs may be provided by other types of project management software. In some embodiments, UIs are shown in a browser window. In some embodiments, UIs are shown by a stand-alone application.","Agile development management software can display groups of assets of a particular type. For example, groups of assets associated with work item planning, release planning, or iteration planning may be displayed.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 2A","FIG. 2A"],"b":["200","201","202","201","201","208","210","209","211"]},"The displayed assets in the group  are associated with a particular project hierarchy node , displayed for example in a project selection window .","Assets may be added to the group , for example, by selecting an \u201cadd story\u201d (i.e., add feature) link  or an \u201cadd defect\u201d link . In general, a user interface for displaying a group of assets may include multiple links or icons for adding multiple respective kinds of assets, or may include a single link or icon for adding assets (e.g., a single \u201cadd work item\u201d link (not shown)). In some embodiments, selection of a link or icon for adding assets results in the display of a separate user interface for adding assets (not shown).","Assets displayed in the group  also may be edited, for example, by selecting an \u201cedit\u201d link (e.g., ) corresponding to a respective asset. In some embodiments, selection of an edit link or corresponding icon results in the display of a separate user interface for editing assets, as described below with regard to .","The displayed assets include a set of attributes selected for display, such as title , ID , owner , status , priority , estimate , and project . Some of the attributes are also assets, such as project . Some of the values for the attributes are blank: for example, no owner , status , priority , or estimate  is shown for a number of assets, including feature .","Assets to be displayed in the group  may be filtered according to one or more attributes using filters .","A subset of the displayed attributes includes user input fields to accept edits to attribute values. For example, a user may select a priority from a drop-down box  and may enter a work or size estimate (e.g., an estimate of time) in a text input box .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 2B","FIG. 2A","FIG. 2B"],"b":["251","262","263","262","264","265","209","211","262","255","262","261","261","206","261","206","262"]},"Assets to be displayed in the group  may be filtered according to one or more attributes using filters . Assets may be added to the group  by, for example, selecting an \u201cadd backlog item\u201d link  or an \u201cadd defect\u201d link .","The displayed assets in the group  include a set of attributes, such as title , ID , owner , status , estimate , detail estimate , and \u201cto do\u201d . The \u201cestimate\u201d  and \u201cdetail estimate\u201d  attributes provide estimates of quantities of work associated with assets, while the \u201cto do\u201d  attribute provides estimates of quantities of work remaining to be done for assets. As discussed with regard to , some of the attributes may be assets associated with a displayed asset in the group  (i.e., may be related assets).","In some embodiments, an asset displayed in the group  may be edited by selecting a link corresponding to the asset, which results in display of a separate user interface (UI) for editing the asset. For example, selection of the \u201cplan backlog item\u201d link  for the \u201center RMA\u201d asset  results in display of a window  (). (\u201cBacklog item\u201d in this context is a type of work item). The window  displays attributes  of the \u201center RMA\u201d asset , such as ID, title, project, iteration, feature group, description, and estimate. In some embodiments, the attributes are displayed in a list.","The window  also displays related assets  associated with the \u201center RMA\u201d asset . In this example, the related assets  include tasks and tests associated with the \u201center RMA\u201d asset , which is a feature. Attributes of the related assets  (e.g., title , ID , owner , and detail estimate ) are displayed.","The related assets  may be edited by selecting a corresponding link. For example, related asset  (\u201cEnter RMA Using Order Number\u201d) may be edited by selecting an \u201cedit\u201d link . In some embodiments, in response to selection of the \u201cedit\u201d link , a UI  () for editing the related asset  is displayed in the window  along with the attributes  and related assets . The UI  includes user input fields (e.g., , , , and ) to display and receive edits to attributes of the related asset . In some embodiments, the UI  includes drop-down menus (e.g., , ) to select values for attributes of the related asset . In some embodiments, the user may enter values directly into the user input fields. Edits may be applied by selecting the \u201cOK\u201d link  or canceled by selecting the \u201ccancel\u201d link . In some embodiments, upon selection of the \u201cOK\u201d link , display of the UI  is ceased and displayed attribute values for the edited related asset  are updated in response to the edits. The user then may select another edit link associated with another related asset, resulting in display of another UI  within the window  for displaying and editing the newly selected related asset. In some embodiments, multiple UI's for displaying and editing multiple respective related assets may be open simultaneously within the window  and may be accessed simply by scrolling within the window .","In some embodiments, a new related asset may be added via the window . For example, a new task or test for the \u201center RMA\u201d asset  may be added by selecting the \u201cadd task\u201d link  or \u201cadd test\u201d link . In some embodiments, selection of the \u201cadd task\u201d link  or \u201cadd test\u201d link  results in display, within the window , of a user interface analogous to UI  for which the user input fields (e.g., , , , and ) are blank. The user may enter attribute values for the new task or test through the user input fields. In some embodiments, the user may specify attribute values via drop-down menus (e.g., , ). In some embodiments, creation of the new task or test is completed by selecting the \u201cOK\u201d icon  or canceled by selecting the \u201ccancel\u201d icon . In some embodiments, upon selection of the \u201cOK\u201d icon , display of the UI for creating the new related asset is ceased and the new related asset is displayed among the related assets .","The window  thus provides a single integrated interface through which a user may view multiple levels of information for an asset in addition to performing edits. For example, the user may view attributes of the asset itself and of related assets, and may edit or create related assets. The integrated interface allows the user to perform these tasks without having to browse through a succession of windows.","Agile development management software can provide user interfaces for creating and tracking goals, as illustrated in  in accordance with some embodiments.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 2E","b":["2002","2022","2002","2004","2006","2008","2022","2012","206","2014"]},"The list  displays various attributes of the listed goals, such as title , ID , priority , project , estimate , progress , and percentage of project . Estimate  provides an estimate of the time or amount of work required to complete the goal, in arbitrary units (e.g., worker days or worker hours). Thus, \u201cTest Goal\u201d  is estimated to require 2.0 units of work to complete and \u201cTest Goal 2\u201d  is estimated to require 6.0 units of work to complete. Progress  provides an estimated degree of completion of a goal, which may be displayed using a bar chart (e.g., bar chart  for \u201cTest Goal\u201d  and  for \u201cTest Goal 2\u201d ). Alternatively, the progress  may be displayed as a percentage value of the estimated degree of completion. Percentage of project  displays the percentage of a project's work (e.g., estimated work) accounted for by a particular goal.","In some embodiments, a goal may be defined for a top level in a project hierarchy (or may have a definition that does not specify a project hierarchy level), but may be specifically associated with one or more lower levels in the project hierarchy. The \u201cTargeted\u201d field  in the UI  indicates whether a respective goal in the list  is specifically associated with a specified level in the project hierarchy. For example, goals  and  are specifically associated with, and thus targeted to, Release 8.2.","A new goal may be created and added to the list  by selecting the \u201cAdd Goal\u201d link . In response, a goal creation UI  is displayed, as illustrated in  in accordance with some embodiments. In some embodiments the UI  or similar user interface also may be used to edit an existing goal. The goal creation UI  includes various user input fields for specifying attributes of a goal . Examples of the user input fields include:\n\n","Once a goal has been created, work items may be assigned to the goal.  is a schematic screenshot of a user interface  for assigning work items to goals in accordance with some embodiments. The UI  may be accessed, for example, by selecting the \u201cGoal Assignments\u201d tab  or other appropriate menu items. The UI  displays a list  of goals (e.g., \u201cTest Goal\u201d  and \u201cTest Goal 2\u201d ), which may be filtered by a project hierarchy level specified in the project selection window . No work estimate  values are shown for the goals  and , indicating that no work items have yet been assigned to the goals  and  (or that the only work items to have been assigned to the goals  and  do not have work estimates).","The UI  also displays a list  of work items available for assignment to a goal. The list  includes fields for various attributes of the work items, such as title , estimate , and goals . If a work item were assigned to a goal, the title  of the goal would be displayed in the goals field . The list  is hierarchical: it includes multiple levels of work items. For example, \u201cStrategic Features\u201d  is a feature group that includes other feature groups (i.e., \u201cIntegration\u201d , \u201cCollaboration\u201d , and \u201cVirtual Whiteboard\u201d ). The \u201cCollaboration\u201d feature group  in turn includes features -, each of which may include multiple tasks and\/or tests (not shown, but in some embodiments tasks and tests also may be displayed in the list ). The work estimate  for \u201cCollaboration\u201d  is a roll-up of the work estimates  for the features -: these work estimates  sum to 5.0, which is the work estimate  for \u201cCollaboration\u201d .","A work item displayed in the list  may be selected and assigned to a goal in the list . For example, a user may drag-and-drop a work item (e.g., the \u201cAdd\/Manage Milestones\u201d feature ) from the list  onto a goal (e.g., \u201cTest Goal\u201d ). The result of this action is illustrated in : \u201cAdd\/Manage Milestones\u201d  has been assigned to \u201cTest Goal\u201d , as indicated in the goals field  of \u201cTest Goal\u201d , and the work estimate field  of \u201cTest Goal\u201d  has been updated to display the work estimate for \u201cAdd\/Manage Milestones\u201d . The degree of completion displayed in the progress field  of \u201cTest Goal\u201d  also may be updated to reflect a degree of completion of \u201cAdd\/Manage Milestones\u201d . In the example of , the progress bar  is entirely blank (as indicated by the black fill), indicating that no progress has been made toward completing the \u201cAdd\/Manage Milestones\u201d feature .","The UI  allows the user to specify multiple work items for assignment to a goal. Work items assigned to a goal may be of different types: for example, feature groups, features, defects, tasks, and\/or tests all may be assigned to the same goal. Thus, in some embodiments, a goal is a hierarchical set of work items. In some embodiments, however, while features and\/or defects may be assigned to a goal, individual tasks and tests are not available for assignment to the goal. Furthermore, the work items assigned to a goal may be unrelated: for example, if a first feature group, first feature, and first task are assigned to a goal, the first feature may be part of a different feature group than the first feature group, and the first task may be part of a feature that is distinct from the first feature and is not included in the first feature group. The work items assigned to a goal also may be associated with distinct levels in a project hierarchy, such as distinct projects, sub-projects, releases, teams, clients, customers, and\/or vendors. The goal provides roll-ups of the work estimates and degrees of completion for the work items assigned to the goal.","Attention is now directed to user interfaces for performing project schedule forecasting such as release forecasting.  is a schematic screenshot of a UI  for performing project schedule forecasting in accordance with some embodiments. In some embodiments, the UI  is accessed by selecting one or more menu items (e.g., \u201cPlanning\u201d tab  and \u201cRelease Planning\u201d tab ). A project selection window  in the UI  allows the user to select a project hierarchy level (e.g., \u201cRelease 8.2\u201d ) from a drop-down menu . A graph  is displayed showing work estimates  versus dates  for the selected project hierarchy level . Each bar in the graph  displays estimates of completed and remaining work, measured in arbitrary units (e.g., man-hours or man-days), for a respective period of time. In some embodiments, each respective period of time corresponds in turn to a respective iteration. For example, in  each bar in the graph  corresponds to a distinct 2-week iteration.","The graph  includes a group of bars  displaying historical work estimate data for the selected project hierarchy level . Each bar in the group  displays both completed work estimates  and remaining work estimates  for a respective historical (i.e., past) period of time. The sum of the completed work and remaining work estimates, which corresponds to the height of the bar, gives the total work estimate. The increase in total work estimate over time for bars in the group  indicates that the work estimates were updated over time (e.g., to reflect anticipated project delays).","The graph  also includes a group of bars  displaying estimates of complete and remaining work for successive future time periods for the selected project hierarchy level , wherein each bar corresponds to a respective future time period. Again, the sum of the completed and remaining work estimates for each time period gives the total work estimate. The ratio of the estimate of completed work to the total work estimate for each time period gives an estimated degree of completion of work items for that time period. The final bar in the group , corresponding to an iteration ending on May 24, 2008, has a 100% degree and thus indicates that May 24, 2008 is the estimated time of completion of work items associated with the selected project hierarchy level . Summary information below the graph  also displays May 24, 2008 as the estimated time of completion , which may be compared against the previously scheduled time of completion . The summary information also displays a forecasted number of additional iterations  required to reach the time of completion","In general, data displayed by the group of bars  are based on work estimate values for a specified plurality of work items and on a velocity value based on historical work completion data. For example, the number of remaining iterations, and thus the time to completion, may be calculated by dividing the remaining work estimate by the velocity value. Degrees of completion for successive future time periods may be extrapolated based on the velocity value and a current degree of completion. For example, degrees of completion for successive future time periods may be calculated by assuming a constant future velocity (e.g., equal to the velocity value) and thus a linear increase in the degree of completion over time. Alternatively, future degrees of completion may be calculated by extrapolating using a nonlinear model in accordance with the current degree of completion and the velocity value.","Data displayed by the group of bars  are based on historical data stored for time periods corresponding to the bars in the group , including historical work estimates and historical work completion data for the specified plurality of work items during the time periods.","In some embodiments, when the user initially accesses the UI  and selects a project hierarchy level , the graph  displays data that is determined based on default values for the selected project hierarchy level . For example, the default work estimate used to generate the group of bars  may be the combined or rolled-up work estimates of every work item associated with the selected project hierarchy level . The default velocity used to generate the group of bars  may be the average historical velocity of all teams associated with the selected project hierarchy level .","The UI  allows the user to perform on-the-fly forecasting experiments by varying the estimate of remaining work and\/or the project velocity, in response to which the graph  is automatically regenerated. For example, the user may enter a remaining work estimate in the user input field  and may enter a projected velocity in the user input field , and then may select (e.g., click on) the Go button . In response, the graph  and summary information  and  are updated to reflect the value(s) entered by the user. The updated graph  displays an estimate time of completion and estimated degrees of completion over time for the work estimate and velocity entered in the fields  and  respectively. In some embodiments, the Go button  is omitted and the graph  is regenerated each time a new value is entered in a user input field  or .","Instead of directly entering a remaining work estimate in the user input field , the user may specify a plurality of work items having respective work estimates. In response, the graph  is automatically regenerated, such that the estimated time of completion and degrees of completion displayed by the graph are based on a roll-up of work estimates for the specified plurality of work items in accordance with a currently specified velocity value. To specify the plurality of work items, the user selects (e.g., clicks on) the Set Parameters button  next to the Remaining Work Estimate input field , in response to which a menu  () is displayed. The menu  allows the user to specify criteria (e.g., work item attributes) that identify the plurality of work items. For example, the menu  includes a Workitem input field  that allows the user to select a group of work items, a Priority input field  that allows the user to select a work item priority value, a Team input field  that allows the user to select a team with which work items are associated, and Status check-boxes  that allow the user to select work item status values. The menu  may include other input fields for specifying other work item attributes besides those shown in . For example, an input field may allow specification of a version of respective work items, wherein each version of a respective work item has a distinct work estimate. In some embodiments, one or more input fields in the menu  are implemented as drop-down menus. In some embodiments, the menu  allows the user to specify more than one value for respective criteria (e.g., for respective work item attributes).","The project management software identifies work items that satisfy the criteria provided by the user in the menu  and regenerates the graph  accordingly. For example, the project management software retrieves work items that satisfy the provided criteria from the asset data  in the database  () and calculates a roll-up of work estimates for the retrieved work items; this roll-up is used as the remaining work estimate to regenerate the graph . In some embodiments, summary data , , and\/or  also are regenerated in response to changes to criteria in the menu . The user may repeatedly vary the criteria provided via the menu , in an on-the-fly manner, to explore different possible forecasted times of completion for different pluralities of work items.","Instead of directly entering a projected velocity in the user input field , the user may specify work item attributes that reference historical work completion data. In response, a new velocity value is determined in accordance with the historical work completion data referenced by the user-specified work item attributes. The graph  is automatically regenerated to display the estimated time of completion and degrees of completion in accordance with the new velocity value. To specify the work item attributes, the user selects (e.g., clicks on) the Set Parameters button  () next to the Projected Velocity input field , in response to which a menu  () is displayed. The menu  allows the user to specify criteria (e.g., work item attributes and a statistical metric) that reference the historical work completion data. For example, the menu  includes a Team field  for selecting a team, a Start Iteration field  for selecting a first historical iteration, a Stop Iteration field  for selecting a second historical iteration, and a Mode input field for specifying a statistical metric to be used to determine the new velocity value. The iterations specified in the Start and Stop Iteration fields  and  together specify an historical period of time. Statistical metrics include, for example, average velocity (e.g., mean, median or mode), highest velocity, or lowest velocity for the specified team(s) with the specified historical period of time. The menu  may include other input fields for specifying other work item attributes besides those shown in . In some embodiments, one or more input fields in the menu  are implemented as drop-down menus. In some embodiments, the menu  allows the user to specify more than one value for respective criteria (e.g., for respective work item attributes).","The project management software identifies historical work completion data referenced by the criteria provided in the menu , determines a velocity value based on the referenced data, and regenerates the graph  accordingly. For example, the project management software retrieves work items that satisfy the provided criteria from historical work completion data  in a database  (). The retrieved work items are then used to calculate a velocity value based on records in the database  indicating a rate or rates of completion of the retrieved work items (e.g., by calculating the total amount of estimated work completed per iteration for the retrieved work items). In some embodiments, the retrieved work items are used to generate a population of velocities (e.g., different velocities for different iterations) to which the statistical metric is then applied. Alternatively, a rate of work completion may be separately calculated for each retrieved work item based on recorded time to complete the work item, resulting in a population of work completion rates to which the statistical metric is then applied, resulting in a final work completion rate used to regenerate the graph.","In some embodiments, summary data , , and\/or  also are regenerated in response to changes to criteria in the menus  and\/or . The user may repeatedly vary the criteria provided via the menus  and\/or , in an on-the-fly manner, to explore different possible forecasted times of completion for different pluralities of work items and different rates of work completion (e.g., different velocities).","In some embodiments, the UI  allows the user to save and later recall graphs  associated with various scenarios specified using input fields and\/or menus , , , and\/or  (e.g., using Save Scenario and Recall Scenario icons, not shown).","In the menus  and , selection of an OK option  or  approves entered criteria, selection of a Reset option  or  restores default values, and selection of a Cancel option  or  cancels entry of criteria into the various input fields.",{"@attributes":{"id":"p-0076","num":"0082"},"figref":"FIGS. 3A-3F","b":"300"},"In the method , a first user input (e.g., selecting a project hierarchy level  in the window  and\/or specifying one or more criteria in the menu , ) is received () selecting a first plurality of work items in a project. Respective work items of the first plurality have respective work estimates. In some embodiments, the respective work estimates comprise estimates of remaining work for respective work items of the first plurality. In some embodiments, the first user input specifies one or more of a status of respective work items of the first plurality (e.g., via check-boxes , ), a team to which respective work items of the first plurality are assigned (e.g., via input field , ), a priority of respective work items of the first plurality (e.g., via input field , ), and a defined group of work items (e.g., a feature group) with which respective work items of the first plurality are associated (e.g., via input field , ). In some embodiments, the first user input specifies multiple statuses, teams, priorities, and\/or defined groups of work items (e.g., feature groups). In some embodiments, the defined groups of work items (e.g., feature groups) are associated with an agile software development process.","A second user input is received () specifying one or more first work item attributes referencing historical work completion data (e.g., specifying one or more attributes in the menu , ). In some embodiments, the second user input specifies one or more of a team (e.g., via input field , ), an historical period of time (e.g., via input fields  and , ), and a statistical metric (e.g., via input field , ). In some embodiments, the second input specifies multiple teams and\/or historical periods of time. Examples of an historical period of time include but are not limited to a range of past dates, a completed iteration, a range of completed iterations (e.g., as specified in the input fields  and ), a period of time associated with a completed product release, and a period of time associated with a range of completed product releases. Examples of a statistical metric include but are not limited to an average (e.g., mean, median, or mode) rate of work completion, an above-average rate of work completion, and a below-average rate of work completion. In some embodiments, the above-average rate of work completion is the highest rate of work completion in a population of work completion rates or is a rate of work completion at a specified percentile or number of standard deviations above the mean in the population of work completion rates. In some embodiments, the below-average rate of work completion is the lowest rate of work completion in a population of work completion rates or is a rate of work completion at a specified percentile or number of standard deviations below the mean in the population of work completion rates.","A first historical rate of work completion is determined () in accordance with the historical work completion data referenced by the one or more first work item attributes (e.g., as described above with regard to ). An estimated time of completion of the first plurality of work items is calculated () in accordance with the first historical rate of work completion. For example, the estimated time of completion is calculated by dividing the remaining work estimate by the first historical rate of work completion.","The estimated time of completion of the first plurality of work items is provided () for display (e.g., in the graph  and\/or as the forecasted date of completion , ). In some embodiments, a previously scheduled time of completion (e.g., scheduled date of completion , ) of the first plurality of work items is also provided () for display, for comparison to the estimated time of completion.","In some embodiments, the first plurality of work items corresponds to a first goal in the project and the estimated time of completion of the first plurality of work items provides an estimated time of completion of the first goal. In some embodiments, the first plurality of work items corresponds to a product release and the estimated time of completion of the first plurality of work items provides an estimated date for the product release.","For embodiments in which the second user input specifies one or more teams (e.g., via input field , ), the first historical rate of work completion is calculated based on historical work completion data for the one or more teams. For embodiments in which the second user input specifies one or more historical periods of time (e.g., via input fields  and , ), the first historical rate of work completion is calculated based on historical work completion data during the one or more historical periods of time. For embodiments in which the second user input specifies a statistical metric (e.g., via input field , ), the first historical rate of work completion is calculated based on historical work completion data in accordance with the first statistical metric.","If the second user input specifies both (1) one or more teams and (2) one or more historical periods of time, the first historical rate of work completion is calculated based on the historical work completion data for the one or more teams during the one or more historical periods of time. If the second user input specifies both (1) one or more teams and (2) a statistical metric, the first historical rate of work completion is calculated based on the historical work completion data for the one or more teams in accordance with the statistical metric. If the second user input specifies both (1) one or more historical periods of time and (2) a statistical metric, the first historical rate of work completion is calculated based on the historical work completion data during the one or more historical periods of time in accordance with the statistical metric. If the second user input specifies (1) one or more teams, (2) one or more historical periods of time, and (3) a statistical metric, the first historical rate of work completion is calculated based on the historical work completion data for the one or more teams during the one or more historical periods of time in accordance with the first statistical metric.","In some embodiments, the method  further includes the method  illustrated in . In the method , a user input is received () (e.g., via the menu , ) specifying one or more second work item attributes referencing historical work completion data. The one or more second work item attributes are distinct from the one or more first work item attributes. A second historical rate of work completion is determined () in accordance with the historical work completion data referenced by the one or more second work item attributes. Operations  and  may be performed as described for operations  and  () respectively.","The estimated time of completion of the first plurality of work items is recalculated () in accordance with the second historical rate of work completion. The recalculated estimated time of completion of the first plurality of work items is provided () for display (e.g., in the graph  and\/or as the forecasted date of completion , ).","In some embodiments, the user input of operation  specifies a second team (e.g., distinct from a first team specified by the second user input of operation , ) and the second historical rate of work completion is determined () in accordance with historical work completion data for the second team. In some embodiments, the user input of operation  specifies a second historical period of time (e.g., distinct from a first historical period of time specified by the second user input of operation , ) and the second historical rate of work completion is determined () in accordance with historical work completion data during the second historical period of time. In some embodiments, the user input of operation  specifies a second statistical metric (e.g., distinct from a first statistical metric specified by the second user input of operation , ) and the second historical rate of work completion is determined () in accordance with the second statistical metric.","In some embodiments, the method  further includes the method  illustrated in . In the method , a user input is received () (e.g., via the menu , ) selecting a second plurality of work items in the project. Respective work items of the second plurality have respective work estimates. The second plurality of work items is distinct from the first plurality of work items.","An estimated time of completion of the second plurality of work items is calculated () in accordance with the first historical rate of work completion and provided () for display (e.g., in the graph  and\/or as the forecasted date of completion , ).","In some embodiments, the method  further includes the method  illustrated in . In the method , a new user input specifying a work estimate is received () (e.g., via the input field , ). An estimated time of completion of the work estimate specified by the third user input is calculated () in accordance with the first historical rate of work completion and provided for display () (e.g., in the graph  and\/or as the forecasted date of completion , ).","In some embodiments, the method  further includes the method  illustrated in . In the method , a new user input specifying a rate of work completion is received () (e.g., via the input field , ). The estimated time of completion of the first plurality of work items is recalculated () in accordance with the rate of work completion specified by the new user input. The recalculated estimated time of completion of the first plurality of work items is provided () for display (e.g., in the graph  and\/or as the forecasted date of completion , ).","In some embodiments, the method  further includes the method  illustrated in . In the method , successive estimated degrees of completion of the first plurality of work items are calculated () for successive future periods of time prior to the estimated time of completion of the first plurality of work items in accordance with the first historical rate of work completion. For example, the successive estimated degrees of completion are calculated by extrapolating from a current degree of completion assuming a constant future rate of work completion equal to the first historical rate of work completion. In some embodiments, the successive future periods of time correspond to successive future iterations in an agile software development process.","The successive estimated degrees of completion are provided for display () in a graph (e.g., for display by successive bars in the group , ). In some embodiments, one or more historical degrees of completion of the first plurality of work items corresponding to one or more respective historical periods of time are also provided for display () in the graph (e.g., for display by successive bars in the group , ).","In some embodiments, the graph is a bar graph (e.g., , ) having respective bars (e.g., group , ) corresponding to respective estimated degrees of completion for respective future periods of time of the successive future periods of time. In some embodiments, the graph is a line graph, scatter plot, or other type of graph.","The method  thus provides a user-friendly, flexible, and robust way to perform project schedule forecasting on the fly. While the method  includes a number of operations that appear to occur in a specific order, it should be apparent that the method  can include more or fewer operations, which can be executed serially or in parallel. An order of two or more operations may be changed and two or more operations may be combined into a single operation.","In some embodiments, performance of various operations in the method  may be split between client and server systems, as described below with regard to . In some embodiments, the method  is performed entirely at a server system (e.g., , ), such that receiving the first and second user inputs in operations  and  includes receiving, at a server, data corresponding to the first and second user inputs as transmitted from a client (e.g., , ) and transmitting times of completion in operations  and  includes transmitting data corresponding to the times of completion from the server to the client. In some embodiments, the method  is performed entirely at a computer-system running stand-alone project management software.",{"@attributes":{"id":"p-0096","num":"0102"},"figref":["FIG. 4","FIG. 4"],"b":["400","400","404","402","406","402","406"]},"The server system  includes a server  and a database . Server  serves as a front-end for the server system . Server , sometimes called a front end server, provides an interface between the server system  and the client systems . In some embodiments, the functions of server  may be divided or allocated among two or more servers.","The server system  stores data relating to the agile development process, including asset data . The asset data  includes attributes for respective assets. An exemplary data structure  for asset data  is illustrated in , described below. The asset data  includes goal data  and historical work completion data .","It should be appreciated that the server system , including the server  and the database , may be implemented as a distributed system of multiple computers. However, for convenience of explanation, the server system  is described herein as being implemented on a single computer, which can be considered a single logical system.","A user interfaces with the server system  at a client system or device  (hereinafter called the client system for ease of reference). The client system  includes a computer  or computer controlled device, such as a personal digital assistant (PDA), cellular telephone or the like. The computer  typically includes one or more processors (not shown); memory, which may include volatile memory (not shown) and non-volatile memory such as a hard disk drive ; and a display . The computer  may also have input devices such as a keyboard and a mouse (not shown).","In some embodiments, a user may interact with the server system  via an agile development user interface  presented on the display . Examples of user interfaces  are illustrated in . In some embodiments, the agile development user interface  may be a web-based user interface. That is, the user interface  may include one or more web pages. It is noted that a single web page can contain multiple frames, each of which may appear (when displayed by a browser application) to be a distinct web page. The web page(s) may be written in the Hypertext Markup Language (HTML), Extensible Markup Language (XML), or any other suitable language for preparing web pages, and may include one or more scripts for interfacing with the server system . For example, the web page(s) may include a JavaScript application that interfaces with the server system  via an application programming interface (API). The JavaScript application receives asset data and reporting data from the server system , manages the rendering of that data at the client, and also performs the client-side aspects of other tasks, such as receiving user input assigning assets to goals and updating attribute values according to data entered in user input fields, and transmitting user requests to the server system .","In some other embodiments, the agile development user interface  may be a part of a stand-alone application that is run on the client system . The standalone application may interface with the server system  via an application programming interface (API).","The agile development management system  may perform the method  (), including the methods , , , , and\/or  (), in accordance with some embodiments. Performance of various operations in the method  may be divided between the client system  and server system . For example, operations  and  may be performed at a client system , and the received input may be transmitted to the server system , where operations - are performed, such that providing an estimated (and, in some embodiments, a previously scheduled) time of completion includes transmitting the time of completion from the server system  to the client system  for display. This allocation of operations between the client system  and server system  is merely one example of multiple possible allocations. In some embodiments, the method  is performed entirely by the server system .","Instead of using a client-sever model, project management software (e.g., agile development management software) may be installed and used on a single computer system combining the functionalities of the server system  and client system . For example, the method  () may be performed entirely on a single computer system.",{"@attributes":{"id":"p-0105","num":"0111"},"figref":["FIG. 5","FIG. 4"],"b":["500","402","502","506","504","514","514","500","508","510","512","504","504","502","504","504","504"],"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":["an operating system  that includes procedures for handling various basic system services and for performing hardware dependent tasks;","a network communication module  that is used for connecting the client computer  to other computers via the one or more communication network interfaces  and one or more communication networks, such as the Internet, other wide area networks, local area networks, metropolitan area networks, and so on;","an agile development management module  for handling data relating to the agile development process; and","a client application , such as a web browser."]}}}},"In some embodiments, the agile development management module  includes a local database  for storing data sent by the server (e.g., asset data, which includes goal data and historical work completion data), an asset display module  for displaying assets (e.g., via UI ,  or UI , ) and for displaying an asset's attributes and related assets (e.g., via window , ), an asset editing module  for updating attribute values (e.g., in accordance with data entered via user input fields), a schedule forecasting module  for performing project schedule forecasting (e.g., via UI , ), and a server interface module  for interfacing with server computer . The asset display module  includes a goal display module  for displaying goals (e.g., via UI ,  or UI , ). The asset editing module  includes a goal planning module  for creating and editing goals (e.g., via UI ,  and UI , ). In some embodiments, the schedule forecasting module  correspond to instructions for performing all or a portion of the operations in the method  (). In some embodiments, the server interface module  includes a cache for storing data to be transmitted to the server.","In some embodiments, the agile development management module  may be a script-based module, embedded in a web page served from the server system  (). The web page may be rendered by a client application , such as a web browser, at the client computer . When the web page is rendered, the agile development management module  is executed, thereby providing a web-based interface to the server system . The script-based agile development management module may be written in JavaScript, AJAX, ECMAScript, Perl, or any other suitable scripting language.","In some other embodiments, the agile development management module  may be a standalone application stored in memory  of the client computer .","In some embodiments, the agile development management module  is replaced with a more general project management module that is not specific to agile software development.","Each of the above identified elements in  may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various embodiments. In some embodiments, memory  may store a subset of the modules and data structures identified above. Furthermore, memory  may store additional modules and data structures not described above.",{"@attributes":{"id":"p-0111","num":"0121"},"figref":["FIG. 6","FIG. 4"],"b":["600","600","404","602","606","604","610","610","600","608","604","604","602","604","604","604"],"ul":{"@attributes":{"id":"ul0005","list-style":"none"},"li":{"@attributes":{"id":"ul0005-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0006","list-style":"none"},"li":["an operating system  that includes procedures for handling various basic system services and for performing hardware dependent tasks;","a network communication module  that is used for connecting the server system  to other computers via the one or more communication network interfaces  and one or more communication networks, such as the Internet, other wide area networks, local area networks, metropolitan area networks, and so on;","an agile development management database  for storing data relating to the agile development process, including asset data ; and","an agile development management application programming interface (API)  for exchanging information with the agile development management modules  in one or more client computers ."]}}}},"In some embodiments, the asset data  includes goal data  and historical work completion data . In some embodiments, the agile development management database  includes database management software for performing one or more operations of the method  (). In some embodiments, the application interface  includes a presentation layer  for rendering user interfaces (e.g., ) accessed by a client system .","In some embodiments, the agile development management database  is replaced with a more general project management database that is not specific to agile software development.","Each of the above identified elements in  may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various embodiments. In some embodiments, memory  may store a subset of the modules and data structures identified above. Furthermore, memory  may store additional modules and data structures not described above.","Although  shows a \u201cserver computer,\u201d  is intended more as a functional description of the various features which may be present in a set of servers than as a structural schematic of the embodiments described herein. In practice, and as recognized by those of ordinary skill in the art, items shown separately could be combined and some items could be separated. For example, some items shown separately in  could be implemented on single servers and single items could be implemented by one or more servers.","The agile development management database  stores data in various tables. For example, an \u201cAsset Type\u201d table includes an entry for each kind of asset, such as goal, feature group, feature, defect, task, or test. An \u201cAttribute Definition\u201d table defines the attributes associated with each kind of asset listed in the \u201cAsset Type\u201d table. A \u201cSynthetic Attribute\u201d table references formulas used to calculate synthetic attributes. For example, if a work estimate or degree of completion is defined as a roll-up of estimates or degrees of completion for other assets, the roll-up may be specified in a Synthetic Attribute table. An \u201cAttribute Security Check\u201d table contains references to operations used to determine whether a user may access or modify particular attributes. For attributes that are associated assets, a \u201cRelation Definition\u201d table defines relationships between assets. In addition, a \u201cMany to Many Relation Definition\u201d table may contain relationship information for assets in many-to-many relationship with other assets. Other tables may specify business rules for various assets.","Attribute values for particular assets are stored in asset tables , as illustrated in  in accordance with some embodiments. In some embodiments, a table  corresponds to a particular type of asset, such as goal, feature group, feature, defect, task, or test. The asset table  includes a row  for each respective asset stored in the table. Each row includes fields that contain values for attributes of the respective asset, as defined in the \u201cAttribute Definition\u201d table. For example, the attribute fields may include title , asset ID , project , estimate , and various other attributes  (e.g., progress\/degree of completion). The asset table  also includes fields  to specify attributes that are associated (i.e., related) assets. For example, if a respective asset is a feature or defect, fields  may specify tasks and tests associated with the feature or defect, for example by providing the asset IDs of the tasks and tests. If a respective asset is a goal, fields  may specify work items assigned to the goal. In another example, a field  may specify an iteration to which an asset is assigned.","In some embodiments, an asset table  for work items stores multiple versions of respective work items, wherein each version of a respective work item has a distinct work estimate value. The version is specified, for example, in a version field.","The tables  thus include information to allow the agile development management application interface  to respond to a request from a client computer  when a user seeks to create, display, and modify assets or to access information regarding assets. The interface  can access the asset tables  (e.g., by writing to or querying the tables ) in response to requests from the client computer .","The foregoing description, for purpose of explanation, has been described with reference to specific embodiments. However, the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications, to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1","b":"100"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIGS. 2A and 2B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 2C and 2D"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2E"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2F"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 2G and 2H"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIGS. 2I-2K"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIGS. 3A-3F"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
