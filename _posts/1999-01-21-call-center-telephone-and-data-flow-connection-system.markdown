---
title: Call center telephone and data flow connection system
abstract: A method and system for transferring telephone calls and data between computer programs in a call center. Flow connection modules associated with call center application programs allow data and telephone calls to be transferred from one computer program to another in the call center. The flow connection modules may be combined with a locator program such that the combination replaces the automatic call distributor (“ACD”) in a call center. The flow connection modules enable development of modular call centers, allowing call center agent workstations to be easily increased or decreased. In operation, an application notifies its flow connection module that a call on a telephone in the workstation should be transferred to another application. The flow connection module establishes a data connection with a flow connection module associated with the other application. The flow connection module sends call-related data to the other flow connection module which then returns the telephone extension associated with the other application. The flow connection module requests a computer telephony interface (“CTI”) link associated with a phone switch to transfer the call to the other application's telephone. The CTI link directs the phone switch to transfer the telephone call from the original application's workstation to the telephone of the other workstation. Having received notification of the transferred call, the other flow connection module informs the original flow connection module that the call has been successfully transferred, and the original flow connection module then disconnects the data connection.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07295669&OS=07295669&RS=07295669
owner: Avaya Technology Corp.
number: 07295669
owner_city: Basking Ridge
owner_country: US
publication_date: 19990121
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The invention relates generally to telephone call centers and, more particularly, to providing telephone and data flow connections among the call-handling applications in a call center.","A typical call center includes a number of agents who field inbound telephone calls and place outbound telephone calls. Call center telephone calls frequently have associated data, such as customer information. An agent may place outbound sales calls or field inbound calls (such as on 800 telephone numbers) from potential customers. The agents are organized into groups, known as Skill\/Split Hunt Groups.","A conventional call center typically comprises either an Automatic Call Distributor (\u201cACD\u201d) or Private Branch Exchange (\u201cPBX\u201d) which receives incoming calls through a Public Switched Telephone Network (\u201cPSTN\u201d) and routes the calls to a group of ACD agents having like skills, the Skill\/Split Hunt Group, rather than to a specific agent. An ACD typically contains a superset of the functions provided by a PBX. Specialized telephones, known as ACD\/PBX feature phones, interface with a specific manufacturer's ACD\/PBX and provide the agents with an array of advanced telephony functions.","In recent years, call center telephony has begun moving from proprietary ACD\/PBX feature phones designed for a specific ACD\/PBX to software-controlled telephony applications (\u201cSoftphones\u201d) that can either co-exist with a proprietary ACD\/PBX feature phone or can utilize telephone sets not necessarily designed for any particular ACD\/PBX. To equip a call center with ACD\/PBX proprietary feature phones typically costs three to four times as much as equipping with Softphones associated with a non-proprietary phone. In addition, the ACD\/PBX itself is also quite costly. A conventional ACD\/PBX call center not only requires a proprietary ACD\/PBX feature phone, but also requires ACD\/PBX interface line cards utilizing a proprietary protocol. Softphones provide a less expensive means for attaining many of the capabilities of an ACD\/PBX feature phone while using only software in combination with a \u201cplain-old-telephone set\u201d (\u201cPOTS\u201d) and an associated and less expensive line card. A Softphone call center equipped with Softphones and POTS is considerably less expensive to establish and to maintain with the latest upgrades than a call center configured with ACD\/PBX feature phones. A Softphone has the added advantage that persons who are not permanent call center agents may be provisioned with call center telephone capabilities without the need for an expensive upgrade to an ACD\/PBX feature phone.","The software-controlled application that drives a Softphone call center generally provides the call center agent with a graphical user interface (\u201cGUI\u201d) that replaces the function control buttons on an ACD\/PBX feature phone used by the agent to control telephony functions. While interacting with a caller over the Softphone, the agent uses hot keys or an electronic mouse to select telephony functions on a workstation screen. A hot key is a keystroke or combination of keystrokes that sends a command to the computing system that provides the Softphone capability. Softphone telephony features emulate the feature buttons on an ACD\/PBX feature phone and are supported via a Computer-Telephony Integration (\u201cCTI\u201d) link to an ACD or a PBX. The CTI link allows the Softphone system to control telephone call handling operations in the ACD\/PBX such as answering a call, making a call, transferring a call, and making a conference call, by sending requests and receiving event messages over the CTI link. An event message is an action or occurrence to which the Softphone may respond. Software client\/server CTI Middleware products interface to the ACD\/PBX proprietary CTI link and simplify the application programming interface (\u201cAPI\u201d) needed by the Softphone to communicate with the ACD\/PBX.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 1","FIG. 1"],"b":["102","100","108","120","108","101","100","102","103","102","103","102","104","105","104","102","104","100","104","105","104","106","106","107","108","106","102","103","104","105","106","106","120"]},"Each agent workstation  has an agent telephone  that receives calls directed to either of two numbers. The first number is the telephone number for the telephone instrument itself at the agent workstation , or the Phone Directory Number (\u201cPhone DN\u201d). The second number is a telephone number corresponding to the agent, i.e., an Agent Directory Number (\u201cAgent DN\u201d). The Agent DN follows an individual call center agent. Thus, the agent may switch from one agent workstation  to another agent workstation  and still retain the same Agent DN. The Agent DN constitutes a personal telephone number for the agent and returns a busy signal if the agent is not logged into the ACD . The Agent DN connects the call to the agent if the agent is available when the call arrives. If the agent is busy on another call, the caller hears a ringback tone until the agent is free. If the agent is not working on a particular day, or has not otherwise logged into the call center, then the Agent DN will not be active, and a party calling the Agent DN will receive a message to that effect.","A Call Control application server  communicates with the ACD  through a Computer Telephony Integration (\u201cCTI\u201d) link . The Call Control application server  comprises a standard computing system, such as a PC, and a CTI server application which processes calling information for an agent via a Softphone application  in the agent workstation . Each agent typically has a terminal that provides a GUI to the Softphone application . The Softphone application  emulates the button functions of a conventional ACD\/PBX feature phone. The Call Control application server  synchronizes the Softphone application  with the ACD  by sending event messages to the Softphone application  pertaining to the set of Agent DNs and Phone DNs that have been provided with the Softphone capability. The Call Control application server  services telephony commands from the Softphone application  to provide the agent with a Softphone. The combination of the agent workstation  utilizing a POTS such as the telephone  and the Softphone application  provides the agent with the features available on more expensive ACD\/PBX feature phones.","A Softphone application's requirements resemble those of a robotic call-handling application. The primary difference is that the Softphone manages calls arriving at a specific Phone DN while a robotic application manages calls arriving at a specific Route Point DN. A robotic application may communicate with both the route point , the ACD Skill\/Split Hunt Group , and the Agent DN and the Phone DN at the agent's workstation . Some robotic applications may receive information from the client calls  and may, in some instances, handle a call in a manner much like that of a call center agent. As robotic technologies grow more sophisticated, robotic applications may even begin replacing many, or in some instances all call center agents. A Robotic application can therefore be considered a robotic call center agent having many similar needs to a human call center agent or as a robotic application that replaces many of the aforementioned ACD capabilities. In many instances, robotic applications require capabilities beyond those required by human call center agents, such as handling many more calls than would a human agent.","While call centers equipped with Softphones have provided a degree of modularity beyond that of a conventional call center equipped with ACD\/PBX feature phones, Softphone call centers nevertheless still rely upon the presence of an ACD\/PBX. A conventional ACD performs important call routing tasks in the call center but does not route data, including call-related data. In some conventional call centers, a computing system external to the ACD may monitor the ACD to determine where the ACD has routed a call, e.g., an agent workstation. The external computing system may then forward call-related data to the agent workstation that received the call routed from the monitored ACD. Moreover, agent workstations do not have the ability to transfer directly messages, including calls and data, to other agent workstations. As discussed above, a conventional ACD is an inflexible and costly piece of equipment that thwarts the attainment of true modularity in call center design. Accordingly, call center design would be improved by a decreased reliance upon or outright replacement of the conventional ACD.","The invention provides a method and system for transferring telephone calls and data between computer programs in a call center. Flow connection modules associated with call center application programs allow data and telephone calls to be transferred from one computer program to another through simple programming invocation statements.","The invention also provides a method and system for routing telephone calls in a call center in such a manner so as to obviate the necessity for providing flow control in an automatic call distributor (\u201cACD\u201d) in the call center. The flow connection modules themselves may be arranged in such a manner so as to replace, or augment, a call center's ACD flow control tasks.","Another embodiment of the invention comprises flow connection modules, a locator program, and a private branch exchange (\u201cPBX\u201d) that collectively replace a call center's ACD. Thus, the flow connection modules enable development of low cost, modular call centers in which call center agent workstations may be easily increased or decreased.","In operation, an application at a workstation notifies a flow object in its flow connection module that a call on a telephone in the workstation should be transferred to another application in the call center. The flow object establishes a data connection with the flow connection module associated with the other application. The flow object sends call-related data to the other flow connection module which then returns the telephone extension associated with the other application. The flow object requests a computer telephony interface (\u201cCTI\u201d) link associated with a phone switch to transfer the call to the other application's telephone. Having received notification of the transferred call, the other flow connection module then informs the flow object that the call has been successfully transferred, and the flow object then disconnects the data connection. The other flow connection module may then provide the data associated with the phone call to the other application.","Embodiments of the invention provide a flow connection method and system for telephone calls and data in a call center. Flow connection, or flow control, refers to controlling the transfer of information between two points in a network, such as between two agent workstations in a call center. Call-handling applications in the call center may access an associated flow connection module that coordinates all aspects of transferring telephone calls and data to the flow connection modules respectively associated with other call-handling applications in the call center, according to an embodiment of the invention. The flow connection modules may be accessed by any application in the call center, including software-controlled telephony applications (\u201cSoftphones\u201d) utilized by call center agents and robotic call-handling applications.","The flow connection modules permit the development of modular call centers in which the number of agent workstations in the call center may be readily increased or decreased. The flow connection modules applied in conjunction with a locator program and a telephone routing switch may replace a conventional automatic call distributor (\u201cACD\u201d) in the call center, according to an embodiment of the invention. The flow connection modules may also be applied as an adjunct to a call center's ACD, according to another embodiment of the invention. The telephone routing switch preferably provides capabilities similar to those associated with a private branch exchange (\u201cPBX\u201d), such as a dial tone on receiver pickup, an ability for making calls, a ringing tone associated with inbound calls, the ability to answer calls, the ability to transfer calls, a capacity for providing an extension numbering plan, and trunk line selection.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 2","b":["201","120","202","203","120","203","202","203","201","202","203","206","102","205","204","120","205","205","202","206","206","206","206","205","209","206","209","210","205","202","210"],"i":["a ","a","b ","a"]},"The flow connection module  sends back to the flow object  a phone number for an agent telephone  associated with the workstation . The flow object  then transfers the call on the telephone  to the telephone  using the telephone number provided by the flow connection module . The flow object  transfers the call utilizing a phone switch (not shown) and a computer-telephony interface (\u201cCTI\u201d) link (not shown). As discussed above, operation of the phone switch requires functionality such as that typically associated with a PBX. Once the call has been transferred, the flow connection module  notifies the flow object  of the call's transfer. The flow object  then disconnects the data connection with the flow connection module . The flow connection module  provides the data associated with the flow object  to a data set  associated with the call-handling application . The call-handling application  may then utilize the data set  in processing the transferred call now on the telephone . Should the call-handling application  need to send the data set  to the call-handling application , the procedure would be identical to the one just described albeit in a reverse order, e.g., the flow object  would establish a communications link with the flow connection module .","Arrangements of flow connection modules in conjunction with a locator program may provide the functionality of an ACD without requiring the complicated hardware associated with a conventional ACD, according to an embodiment of the invention. This embodiment of the invention further enables the construction of modular call centers in which agent workstations may be easily added and removed.  illustrates an embodiment of the invention in which the flow connection modules collectively provide the functionality of an ACD in a call center .","The call center  comprises a PBX and a CTI link , a call routing workstation , one or more agent workstations , , a locator , and a database of customer data . The agent workstations , , respectively, comprise the agent telephones , , the call-handling applications , , the flow connection modules , , and agent user interfaces (not illustrated). The agent workstations , may operate on personal computers, or a host\/server arrangement, or in any other computing architecture that provides each call center agent with access to both a call-handling application, a flow connection module, a call center telephone, and the locator . The routing workstation  contains a routing application , a telephone , and a flow connection module . The telephone  may comprise a telephone, a telephone stub, a telephone switch, or a facility for receiving calls and parking them. The locator  contains a list of the active call-handling applications in the call center  and may also contain a list of Phone DNs and Agent DNs for the agents and telephones in the call center . The locator , as will be described below, provides a call center agent-identification functionality similar to a conventional Skill\/Split Hunt Group.","A client telephone  places a call to the call center  through a public switched telephone network (\u201cPSTN\u201d) . The PBX receives the telephone call into the call center . The CTI link associated with the PBX initially directs the call into the telephone  associated with the routing workstation . The routing workstation  may be a single piece of call-processing hardware that provides the call-processing functions described herein, according to an embodiment of the invention. The routing application , a specialized call-handling application, determines a profile for the call, e.g., to which call center client telephone number the call was placed. The routing application  may also reference the database  containing information related to the call center client. The database  may also contain information related to the call, e.g., information retrieved using the caller's telephone number as a reference where caller ID is available. The routing application  then identifies a suitable agent workstation or for the call by referencing data in the locator . The routing application  accesses the locator  essentially to determine an appropriate Skill\/Split Hunt Group identifier for the call. The routing application  then invokes a flow object  in the flow connection module . The flow object  receives as its call-related data an identifier for the call on the telephone  and any data retrieved by the routing application  from the database . The flow object  also receives a destination reference, such as a Skill\/Split Hunt Group identifier, from the routing application  and uses the destination reference to locate a suitable and available agent workstation by querying the locator .","The locator  returns to the flow object  an address for a call-handling application at a suitable, available agent workstation, e.g., the workstation . The locator  maintains information queues that relate to the various application programs available within the call center . The locator  also maintains information related to the availability of a call-handling application at an agent workstation. The locator  may further maintain lists of the Phone DNs and the Agent DNs for the call center's telephones, as well as any other information helpful in processing calls in the call center . The information queues within the locator  provide functionality somewhat akin to the Skill\/Split Hunt Groups within a conventional ACD.","The flow object  establishes a data connection with the flow connection module  associated with the workstation . The flow object  then sends the call-related data to the flow connection module  associated with the workstation . The flow connection module  returns to the flow object  an identifier associated with the telephone  of the workstation , e.g., a Phone DN. The identifier is used in transferring the call from the telephone  to the telephone .","Upon receiving the identifier, the flow object  sends a request to the CTI link to transfer the call from the telephone  to the telephone . The CTI link then notifies the flow connection module  of the incoming phone call to the telephone , and the PBX transfers the call from the telephone  to the telephone . Upon receipt of the transferred call into the workstation , the flow connection module  then notifies the flow object  of the phone call's transfer. The flow object  then disconnects its data connection with the flow connection module . The flow connection module  forwards the call-related data from the flow object  to the call-handling application  so that the agent in the workstation may process the call.","If the agent determines that the call should be transferred to another agent workstation, such as the workstation , then the procedure would operate in the manner described with regard to . Of course, incoming calls to the call center  may also be initially directed to the workstation or other workstations (not shown), as appropriate, and will not necessarily always be assigned to the workstation ",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIGS. 4A and 4B","FIG. 2"],"b":["201","200","205","204","401","201","205","209","206","206","206","202"]},"The flow object  obtains the destination address with a locator program, such as the locator  shown in  (step ). The locator program prevents the flow object  from transferring a call to the call-handling application  when it is not active, as well as preventing transfer to an incorrect application. The flow object  may even invoke the locator program in a loop fashion (step ) such that if a first destination is not available, then the flow object  will obtain an address for an alternate destination (step ). Once the flow object  has obtained a destination, then the flow object  may contact the flow connection module  associated with the call-handling application .","The flow object  then establishes a communications link with the flow connection module  associated with the call-handling application  (step ). If the flow object  cannot establish a connection with the flow connection module  (step ), then the flow object  attempts reconnection a configurable number of times (step ). If after a configurable number of times the flow object  is still unable to establish a connection, then the flow object  notifies the call-handling application  that a connection cannot be obtained (step ).","If the flow object  establishes a connection with the flow connection module  (step ), then the flow object  sends the call-related data to the flow connection module  (step ). The flow connection module  instantiates a flow object  and populates the flow object  with the received data. The flow connection module  sends back to the flow object  the actual telephone address associated with its destination (step ). As previously noted, each telephone in a call center may have both a Phone DN and an Agent DN. If, for example, the flow connection module  provides an Agent DN, then the flow object  (or a CTI link) will need to determine the actual physical phone number (the Phone DN) associated with the flow connection module . The flow object  then sends a transfer request to the call center's CTI link requesting that the phone call associated with the call-handling application  be transferred a telephone associated with the call-handling application  (step ). The CTI link then notifies the flow connection module  that a call is about to be transferred to the telephone associated with the call-handling application  (step ). Using the phone number provided by the flow object , a phone switch transfers the call from the call-handling application's telephone in workstation to the call-handling application's telephone in workstation ","Once the flow connection module  receives confirmation that the telephone call has been transferred, then the flow connection module  notifies the flow object  of the call's receipt (step ). The flow object  then disconnects its data connection with the flow connection module  (step ). The flow connection module  transfers the data in the flow object  to the call-handling application  (step ). The call-handling application  may instead invoke a request to the flow connection module  to receive the data of the flow object , e.g., \u201cReceive (fo, data)\u201d where \u201cfo\u201d is an identifier for the flow object . The call-handling application's request to the flow connection module  may be either a synchronous or an asynchronous request. Having received data from the flow object , the call-handling application  may then process the telephone call and operate on the data in its normal manner.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 5"},"In order to receive and transfer calls in a call center, an application must ensure that its telephone extension has been initialized. Accordingly, an application  begins the process of making itself available by sending a flow connection module  an initialization command, e.g., \u201cinitialize(DN2).\u201d Here, DN2 is the telephone number (Phone DN) for a telephone associated with the workstation on which the application  resides. The flow connection module  then sends a \u201cmonitor(DN2)\u201d command to a phone switch and CTI link . Calls arriving at the phone switch and CTI link  destined for an initialized extension (e.g., DN2) also cause the phone switch and CTI link  to send a notification to the flow connection module (e.g., the flow connection module ) associated with the extension, in addition to transferring the call. After initialization, the conventional CTI commands are enabled, such as call transfer and call park. Call park refers to placing a call in a location where the call may be terminated, or held, and given a treatment while the call is being held. A typical treatment involves playing music or providing informational messages. The initialization procedure must occur whether the telephone line is \u201cfirst party call control\u201d or \u201cthird party call control.\u201d First party call control allows an agent to receive and transfer calls on his phone line only. Third party call control provides an agent with some control over a call even after transfer.","A locator  not only determines which call center applications and agents are presently active but also determines which call center agents are presently available. Accordingly, initialization of an application in an agent's workstation also requires making the application  known to the locator . The application  sends a \u201csetAvailable\u201d command to the flow connection module . The flow connection module  in turn sends a \u201csetAvailable(FlowConn2Addr)\u201d command to the locator . \u201cFlowConn2Addr\u201d refers to an address for the application , such as an address in a computing network. The \u201csetAvailable\u201d procedure results in the locator  putting the address for the application  into one or more of its queues.","The locator  may maintain multiple queues, each distinguished by its attributes. In this embodiment, the command \u201csetAvailable(FlowConn2Addr)\u201d provides attributes that allow the locator  to determine into which queue to place an address for the application . \u201cQueuing\u201d within the locator  provides the ACD-like operation in the call center. As previously discussed, embodiments of the invention may coordinate the transfer of a call and data associated with the call without the \u201cqueuing\u201d procedure provided by the locator . In both embodiments of the locator , following initialization, the application  may utilize the flow connection module  to transfer and receive calls and call-related data in the call center.","Assume an application  wishes to transfer a call and its associated data to the application . The application  first transmits a \u201csend(Attributes, Data)\u201d command to a flow object . The flow object  then invokes a find command addressed to the locator . The find command may have the format \u201cfind( )\u201d or the format of \u201cfind(Attributes),\u201d depending upon whether the locator  is a basic locator or a queuing locator. When the flow object  calls the locator  using the \u201cfind(Attributes)\u201d command, the locator  searches its queues identified by the \u201cAttributes.\u201d If the locator  finds an application in the identified queue, the locator  copies the application's address (e.g., \u201cFlowConn2Addr\u201d) from the queue and returns the application's address to the calling program, e.g., the flow object . If the locator  cannot find an application in the specified queue, the locator  then waits a configurable amount of time for the application address to appear in the queue before generating an error message.","Having received a destination address, the flow object  invokes an \u201cestablishDataConnection (FlowConn2Addr)\u201d command in order to connect to the flow connection module . The flow connection module  returns to the flow object  an identifier (\u201cFlowObj2\u201d) for a flow object . The flow object  then transfers the call-related data to the flow object . The flow object  in turn provides the flow object  with the telephone extension (\u201cDN2\u201d) associated with the application . The flow object  then requests (\u201cnotifyonCall\u201d) that the flow connection module  notify it when a call has been transferred to the telephone associated with the application .","The flow object  then sends a transfer instruction (\u201ctransfer(DN2)\u201d) to the phone switch and CTI link  requesting that a call be transferred from the telephone associated with the application  to the telephone associated with the application . The phone switch and CTI link  then notifies (\u201cnotifyTransferIn\u201d) the flow connection module  that the phone switch and CTI link  is transferring a call to its associated telephone. The flow connection module  then notifies (\u201con Call\u201d) the flow object  that the call has been transferred, making the call's data available to the flow connection module . The flow object  notifies the flow object  of the call's transfer, and the flow object  accordingly terminates the data connection with the flow object . The flow connection module  then provides the transferred data to the application . As shown in , the application  has sent a command (\u201crecv(FlowObj2,Data)\u201d) to the flow connection module  that causes the application  to wait asynchronously for the flow connection module  to provide the data, according to an embodiment of the invention.","A similar process would be used for transferring a call and data from the application  to the application , with a flow connection module  receiving the transferred data from the flow object . The flow connection module  will provide the same functionality to the flow object  and the application  as the flow connection module  provides to the application  and the flow object .",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 6","FIG. 3"],"b":["350","120","203","201","305","120","201","203","208","120","120","201","205","204","305","201","205","304","201","304","206","120","304","206","304","206","205"],"i":["a ","a ","b ","b ","b"]},"The flow object  contacts the flow connection module  associated with the call-handling application . The flow connection module  instantiates a flow object . The flow object  then transmits the data to the flow object . The flow object  sends the actual telephone number (the Phone DN) for the telephone  to the flow object . The flow object  then contacts the CTI link to request transfer of the call on the telephone  to the telephone . The CTI link contacts the flow connection module  to inform it that a call is about to be transferred to the telephone . The phone switch then transfers the call from the telephone  to the telephone . Upon receipt of the transferred call, the flow connection module  notifies the flow object  that the transferred telephone call has been received, and the flow object  similarly notifies the flow object . The flow object  then disconnects its data connection with the flow object . The flow connection module  then provides the call-handling application  with an identifier for the flow object  and its associated data. The call-handling application  may now process the customer's call on the telephone  and access the data provided by the call-handling application .",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIGS. 7A and 7B","FIG. 3"],"b":"304"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 7A","b":["701","701","702","702","703","704","703","704","703","1","120","701","702","704"],"i":"a"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 7B","b":["705","705","706","706","707","708","709","710","707","705","707","708","703","701","709","704","701","710","705","707","706","705","1","102","2","102","705","1","102","1"],"i":["a ","c ","d "]},"The application list  may alternatively contain a list of agent identifiers or telephone identifiers. For example, the application list may alternatively contain Agent DNs instead of applications in both the basic locator  and the queuing locator . Alternatively, a locator may contain additional location tables that contain additional sets of possible identifiers or addresses. For example, a call center designer may wish to allow call center applications to transfer data and calls through the flow connection modules on the basis of attributes, application names, Agent DNs, and Phone DNs. As discussed, allowing transfer based on attributes provides functionality similar to the conventional Skill\/Split Hunt Groups. Allowing transfer based on an application name or a workstation name allows a call center agent to transfer a call and data on the basis of a known application. Allowing a call center agent to transfer a call and data on the basis of an Agent DN or Agent ID permits the call center agent to transfer a telephone call and data on the basis of another call center agent's name or identification. Likewise, allowing the call center agent to transfer a telephone call and its data to a known telephone number provides the call center agent with additional flexibility.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 8","b":["850","801","802","802","803","801"]},"A client telephone  connects to the PBX and the CTI link . The CTI link directs the PBX to transfer all initial calls into a telephone  associated with the routing workstation . The CTI link sends a call transfer notice to a flow connection module , which notifies a routing application  of the call's arrival. Upon arrival of the call at the telephone , the routing application , a specialized call-handling application, determines an appropriate Skill\/Split Hunt Group reference based upon criteria associated with the call, e.g., referencing the actual telephone number to which the call was directed with an attribute list. The routing application  then references the queuing locator  to determine an appropriate agent in the Skill\/Split Hunt Group to process the call. The queuing locator  identifies the set of agents in the appropriate Skill\/Split Hunt Group and selects one of the agents based upon criteria such as availability. If the queuing locator  cannot locate an available agent, then the queuing locator  examines a programmable range of alternatives, e.g., directing the call to a default Skill\/Split Hunt Group for the same client or directing the call to a default agent workstation for the call center. Assuming the queuing locator  identifies a suitable agent to receive the call, the queuing locator  returns to the routing application  an appropriate identifier or address for the agent.","Depending upon its programming, the routing application  may retrieve client data from the database . The routing application  may also retrieve data related to the caller from the database , utilizing the caller's telephone number as a database key. Having received the identification for an available agent, the routing application  then notifies a flow object  of the flow connection module  to transfer a call, e.g., send(destination(AgentID), data). Assuming that the destination corresponds to the agent workstation , the flow object  establishes a communications link with the flow connection module  and transmits the call-related data. The flow object  returns to the flow object  the Phone DN for the telephone . The flow object  then sends a request to the CTI link to transfer the call from the telephone  to the telephone . Once the flow object  receives notification that the call has been transferred, then the flow object  disconnects the communications link with the flow connection module . The flow connection module  accordingly notifies the call-handling application  of the transferred telephone call and the receipt of data.","Assume that the agent at the workstation now wants to transfer the call and its related data to the agent at the workstation . Accordingly, the flow object  receives a destination and data from the call-handling application . The flow object  may first attempt to identify the flow connection module  using the basic locator . Under many circumstances, the basic locator  may provide satisfactory performance while also lessening the burden on the queuing locator . If the basic locator  returns an address for the flow connection module , then the flow object  continues to process the transaction. On the other hand, if the basic locator  does not provide satisfactory results, then the flow object  may attempt to find the destination address from using the queuing locator . Once the flow object  has received the destination address, then the flow object  processes the transaction in the manner previously described for the flow connection module system.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 9","FIG. 2"],"b":["201","120"],"i":"a "},"An agent retrieves a parked call by selecting a specific parked call from a graphical user interface (\u201cGUI\u201d) associated with the Softphone application. This action directs the Softphone application to send a call retrieval message to its flow connection module that retrieves the call from the location at which it has been parked. A GUI  associated with the call-handling application, such as a Softphone application, provides a parked call identification chart , as shown in . The parked call identification chart  includes the name of each parked caller, the time each call was parked, and the park duration for each call. As shown in the exemplary GUI , the agent has parked six calls, -. The call-handling application provides the agent with a utility that allows entry of the name of the parked caller. The park time and the park duration information may be automatically supplied using information provided by the call-handling application.","The agent may retrieve a specific parked call for continued processing by actuating a software radio button  displayed alongside each parked call such as the radio button displayed alongside the parked call . In one embodiment, the agent may actuate the radio button  by using either a combination of hot keys or by clicking on the radio button  using the cursor of a mouse. In another embodiment, the agent may be provided with a touch-sensitive screen and may simply touch the radio button .","By actuating the button , the agent initiates continued processing of a parked call. For example, the agent may use the button  to initiate transfer of the parked call to another agent workstation, using flow connection modules, or may retrieve the parked call for continued processing at his own workstation. In some embodiments, parked calls may be parked at a remote location, and the retrieval process utilizes flow connection modules to return the parked call to the agent's workstation. The agent may select any of the six parked calls - which have been previously parked. In addition, the agent may actuate the six parked call retrieval buttons  in any order. Thus, the agent does not necessarily have to retrieve the calls in the order in which they have been stored.","An agent using a call-handling application may also purge a parked call from the list of calls associated with the agent workstation and redirect one or more calls at the workstation to a default location using its flow connection module. Thus, a purged call is not necessarily disconnected from the call center but merely disassociated from a particular agent's workstation. The agent is also provided with a call drop button  which is provided alongside each of the parked calls, such as the call drop button provided alongside the parked call . The call drop button  may be selectively actuated for any of the six parked calls -. For example, the agent could use the call drop button  associated with the caller listed as \u201cirate.\u201d Engaging the call drop button  initiates the return of the parked call to a default DN, such as a default DN for the call center as specified in the locator. Depending upon the type of call and the call center configuration, this may result in redirection of the call to the agent's Skill\/Split Hunt Group or to some other destination. On the other hand, if the call was directed initially to the Agent DN or to the Phone DN at the agent's workstation, then actuating the call drop button  could be configured to result in the call being disconnected.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 10","FIG. 10"]},"The workstations shown in  generally resemble the workstations shown in  except that the workstation now contains two call-handling applications, the call-handling application  and the call-handling application . A flow connection module may be a part of the programming of a call-handling application or may exist as a standalone program that is accessible by more than one call-handling application. For example, the call-handling application  may be a Softphone application that parks and retrieves calls at the workstation . The call-handling application  may be a specialized call-handling application, such as one associated with a particular call center client, e.g., a loan processing application for a banking client. Both the call-handling application  and the call-handling application  may access the flow object  and the flow connection module  in processing calls, and the flow connection module  may pass data received from another flow object to both the call-handling application  and the call-handling application .","The call-handling application  contains a data set  associated with a call on the telephone . The data set  may contain any type of call-related data, including data retrieved from a database or data retrieved from the call itself The call-handling application  sends the data set  to the flow object . The call-handling application  has directed that the data set and call on the telephone  be transferred to the workstation and a workstation , e.g., \u201csend(destinations, data)\u201d where \u201cdestinations\u201d is an array containing two destinations, the workstation and the workstation . Accordingly, the flow object  establishes a data connection with the flow connection module  associated with the workstation and establishes another data connection with a flow connection module  associated with the workstation ","The flow object  then transmits the data set  to the flow connection module  and the flow connection module . The flow connection module  deposits the data with the flow object  while the flow connection module  deposits the data with a flow object . The flow object  returns to the flow object  the telephone number associated with the telephone  while the flow object  returns to the flow object  the telephone number of a telephone  associated with the workstation . The flow object  then sends a request to a CTI link (not shown) requesting that the call on the telephone  be transferred to both the telephone  and the telephone .","After the transfer of the call to the telephone , the flow object  notifies the flow object  that the call has been received, and the flow object  disconnects the data connection with the flow connection module . Similarly, once the flow object  receives notification of the transfer of the call to the telephone , the flow object  notifies the flow object  of the call's receipt, and the flow object  disconnects its data link with the flow object . The flow object  then makes the data set  available to the call-handling application . Similarly, the flow object  makes the data set  available to a call-handling application  in the workstation . The agents at the workstations , may then process the call in a conference-like fashion.","From the foregoing it will be appreciated that, although specific embodiments of the invention have been described herein for purposes of illustration, various modifications may be made without deviating from the spirit and scope of the invention. Accordingly, the invention is not limited except as by the appended claims.","A multiple call-handling application that could be used in combination with the present invention is disclosed in U.S. patent application Ser. No. 09\/060,038, \u201cMultiple Call Handling in a Call Center,\u201d filed on Apr. 13, 1998, assigned to the Mosaix Corporation, and which is incorporated herein by reference.","While the present invention has been described with reference to preferred embodiments thereof, those skilled in the art will appreciate that various changes in form and detail may be made without departing from the intended scope of the present invention as defined in the appended claims. For example, the flow connection modules, the call-handling applications, and the workstations may differ from those shown in the figures and additional flow connection modules might be provided to support various additional functions. Workstation applications in addition to being interacted with by a human may also be interacted with by a robotic application. Accordingly, embodiments of the invention are applicable to call centers staffed entirely with human agents, call centers having hybrid robotic and human agent workstations, and call centers having completely robotic applications.","The flow connection modules may be run on different types of computing systems or on computing systems differing substantially from the computing network discussed herein. In addition, the flow connection modules within a given call center may each operate on a different type of computing system provided that the flow connection modules may ultimately perform the communications tasks described herein. The flow connection modules may be provided in microcode in a hardware device, such as that provided on a computer chip or an application specific integrated circuit (\u201cASIC\u201d). The flow connection method and system may also be invoked through a specialized call center telephone such that selection, or actuation, of a button on the specialized call center telephone initiates flow connection between the telephone and its call-related data and another telephone. Similarly, the flow connection modules may also be used to transmit data without necessarily also transferring a telephone call.","In one exemplary alternative embodiment, a flow connection module may be provided as a plug-in device at a workstation. In this embodiment, a utility program could be run in the workstation to appropriately configure the workstation for operations with the plug-in device. Such a device would operate in all significant respects in the same manner as the embodiments described herein. In another embodiment of the invention, the flow connection module may be merged into the application. The flow connection modules may be programmed in any programming language. In addition, a workstation may contain more than one application that interacts with the flow connection module in the workstation. The flow connection modules may also interface with CTI middleware products, as such IBM Callpath, Genesys T-Server, or Dialogic CT-Connect.","The locator program may be configured to operate with a variety of call-directing devices. In addition, an initialization program may operate in connection with the workstations in the call center and the locator program to enter the site-specific information, such as the Agent DNs for the agents within a call center and the Phone DNs for the call center telephones. The initialization program may also allow logical functions, like the Agent DNs, to be matched to physical functions like the Phone DNs. The initialization program further assigns Agent DNs to queues in the locator program in a manner resembling Skill\/Split Hunt Groups and installs the appropriate calling scripts for the Skill\/Split Hunt Groups in a call routing program.","The flow connection modules may also produce an event log of the calls and data transferred into and out of one or more applications at a workstation. The log data may be stored in a data repository on the workstation or may be stored in a remote database. The log may be examined by appropriate supervisory personnel to ensure that the system is functioning within expected parameters. An abundance of erroneous transfer messages may signal an anomalous condition in the call center or in the flow connection module associated with a workstation.","If a caller hangs up while a call is being transferred through the flow connection modules, the CTI link may notify the appropriate flow connection module of this event through a call disconnected message. The flow connection module then notifies the appropriate call-handling application of the call disconnection.","In yet another embodiment, a call-handling application may direct its flow object to blind transfer a call from the telephone at the workstation to another telephone. A blind transfer is a call transfer in which the transferor indicates a transfer location for a call without checking whether the new transferred location is available. For example, in a conventional telephone system, a caller is typically placed on hold, then the transferor dials a telephone number and hits a transfer button which initiates an automatic transfer of the call. A blind transfer contrasts with a supervised transfer in which the transferor actually verifies that the transferred number is available before the call is transferred.","Although specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as will be recognized by those skilled in the relevant art. The teachings provided herein of the invention can be applied to other call center designs, not necessarily the exemplary call center described above. Various exemplary computing systems, and accordingly, various other system configurations can be employed under the invention.","The embodiments of the invention disclosed herein have been discussed with regard to call center installations, such as those using large computing systems. However, the invention finds applicability in other computing systems, such as small, portable computerized systems and even de-centralized computing devices distributed in a network. The flow connection modules may be utilized for transferring data only, calls only, or even other types of connections.","These and other changes can be made to the invention in light of the above detailed description. In general, in the following claims, the terms used should not be construed to limit the invention to the specific embodiments disclosed in the specification and the claims, but should be construed to include all distributed resource allocation systems that operate under the claims. Accordingly, the invention is not limited by the disclosure, but instead its scope is to be determined by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["An embodiment of the invention will be described below relative to the following figures. Note that similar elements and steps in the figures have the same reference number.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIGS. 4A and 4B","FIG. 2"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 5","FIG. 2"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7B"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 8","FIG. 2"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 9","FIG. 2"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
