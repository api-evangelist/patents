---
title: Method and system for checking the security on a distributed computing environment
abstract: An automated method for checking the adequacy of security in a distributed computing environment (DCE) consisting of a client and a server(s). The method comprises of first loading a DCE security tool on the DCE server/client machine. The security is a software application which instantiates the security checks of the invention. The DCE security tool is executed on the DCE by entering an executable command on the client or the server. This causes the DCE security tool to automatically search for security violations or warnings and output a resulting report with any violation or warning found.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07454791&OS=07454791&RS=07454791
owner: International Business Machines Corporation
number: 07454791
owner_city: Armonk
owner_country: US
publication_date: 19990923
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["1. Technical Field","The present invention relates in general to distributed computing environments (DCE) and in particular to security of DCEs. Still more particularly, the present invention relates to a method and system for checking the health of the security of a DCE.","2. Description of the Related Art","Computer networks are well known in the arts and continue to grow in both size and complexity. This growth is fueled by more computers being connected to networks and connecting networks to other networks. These connections enable computers to work together efficiently, and to simplify sharing resources such as files, applications, printers, and even special computers.","The Open Systems Foundations (\u201cOSF\u201d) Group developed the Distributed Computing Environment (\u201cDCE\u201d). DCE transforms a group of networked computers into a single, coherent computing engine. DCE masks differences among different kinds of computers, thereby enabling users to develop and execute distributed applications that can tap into a network's latent power, using widespread resources such as storage devices, CPU's, and memory. The distributed parts of these application can execute concurrently, and thus, they are much more powerful than single processor applications that act on data sequentially.","The Distributed Computing Environment (DCE) software provides an enormous opportunity to transform a group of networked computers into a single, coherent computing engine. As a layer of software that masks the differences among different kinds of computers, DCE enables a user to develop and execute distributed applications that can tap into a network's latent power, using widespread resources such as storage devices, CPUs, and memory. Because distributed parts of these applications can execute concurrently, they can be much more powerful than single-processor application that must act on data sequentially.","With a standard network (i.e., non-DCE), the applications are executed on the individual machine or a local server host. Typically, each user must first provide his or her identity by using a secret password to log onto the local host. The local host uses the password, which is known only to the user and the local host, as proof that the user is who he or she claims to be. Once the user logs onto the local host, the host resources are usually protected further by means of permissions or privileges associated with each file. The permissions regulate whether a user can read, write or execute that file. The number of users on a single local host is typically small enough so that the host alone can manage all of the passwords and permission functions.","A distributed computing environment, on the other hand, might support thousand of users accessing files on any of hundreds or thousands of local hosts in the environment. Because it is impractical to maintain every DCE user's security information on every host in the environment, DCE serves security information from a centralized database. This database, along with a distributed set of daemons and libraries, compose the DCE security service.","Many kinds of computers use a variety of measure to protect resources such as files and applications from unauthorized access. When servers enforce the security, each client must provide its user's identity and access rights. These are provided on the first remote procedure call (RPC), and sometimes in highly secure environment, on every RPC call. Because access to every DCE resource\u2014directories, files, printers, and so on\u2014is controlled by a server, the server's typically require comprehensive network security for authentication and authorization.","A cell is the basic unit of operation and administration in DCE. A cell is a group of users, systems, and resources that typically have a common purpose and share common DCE Services. At a minimum, the cell configuration includes the Cell Directory Service, the Security Service, and the Time Service.","The DCE Security Service has been utilized to authenticate all DCE users and servers, making certain that people and programs using DCE are who they claim to be. Furthermore, resource administrators can protect distributed resources from unauthorized access using the authorization capabilities of the DCE Security Service.","In an authenticated environment, users and servers, known as principals, must prove their identities before being allowed to accomplish a task. This proof is in the form of a special kind of password. When a user enters a password at login, an authentication server verifies it against the data stored for that user in the authentication database. Principals within a cell share a common authentication server and database. If the security of a cell's authentication server is compromised, all passwords in that cell must be changed because they can no longer be considered secure. The larger the cell, the more work it can be to repair the damage resulting from a breach of security.","In DCE, the security service, which is also known as a registry, serves a single source of security and manages information about users, groups, and the like. This gives a company a single place to define and manage users. One limitation to this approach is the propagation of passwords. Additionally, most security checks are performed manually by a system administrator. This tends to be rather time consuming and inefficient and susceptible to human error.","Unfortunately, distributed computing environments provide some security concerns particularly, how to protect data that must be shared among multiple users. Highly publicized network break-ins have alerted everyone to the vulnerability of distributed systems. Different kinds of networked computers use different security mechanisms that often do not operate together seamlessly or, more frequently, do not operate together at all. Such a patchwork of security mechanisms often leaves security holes that attract network snoopers and eavesdroppers.","When clients use servers in other cells, the cooperating cells must share a password. Thus a DCE environment with 5 cells that cooperate with each other cell must maintain 20 passwords for complete intercell operation. Each cell administrator maintains a separate account and password for the other 4 cells, exchanging replacement passwords with other cells' administrators when they expire or when the security of a cell's authentication server is compromised. This may not be a problem in DCE environments with 5, 10, or even 20 cells, but it may be a problem if 100 cells (sharing 9,801 passwords) must get new passwords.","The DCE software provides a secure environment for clients to conduct business and therefore it is immensely important to DCE and Distributed File Server (DFS) servers in the cell, to be security compliant.","Resources such as servers, directories, files, or even records in databases can have an associated access control list (ACL) that specifies which operations can be performed by which user. When a file or directory can be accessed by anyone, it is termed \u201cworld readable\u201d or world writable.\u201d","DCE components and applications can use different kinds of ACLs to protect their resources. The types of ACLs and their exact effects depend on how they are defined by the ACL manager for the specific component or application. If a user wishes to use ACLs to protect his application's resources, he must write his own ACL manager.","DCE provides a secure operating environment when in use (i.e, transporting packets over the network from one DCE client machine to another DCE client machine), therefore ensuring the actual DCE software installed on the AIX machine is secure is of utmost importance.","A DCE administrator manages aspects of a cells DCE security. This very manual and timely process must be performed by all DCE administrators and users who also are required to document the results manually.","The present invention appreciates the fact that it would be desirable to provide a method and system for automatically checking the security health of a DCE. It would further be desirable to be able to automatically correct problems with the security of a DCE.","It is therefore one object of the present invention to provide an improved distributed computing environment (DCE).","It is another object of the present invention to provide a method and system for improving security on DCE server(s) and client(s).","It is yet another object of the present invention to provide a method and system for improving the security of a DCE by automatically checking the health of the security via a program application.","The foregoing objects are achieved as is now described. An automated method is disclosed for checking the adequacy of security in a distributed computing environment (DCE) comprising client(s) and server(s). The method comprises of first loading a DCE security tool on the AIX machine which is a DCE server or client. The security is a software application which instantiates the security checks of the invention. The DCE security tool is executed on the DCE client or server machine by entering an L executable command on the client or the server. This causes the DCE security tool to automatically search for a security violation or warning and output a result with any violation or warning found.","In a preferred embodiment, the DCE security tool checks the user access codes, the file and directory permissions and ownership, and whether certain required files exist on the DCE server or client machine. The outputs indicate to a system administrator what steps need to be taken to beef-up the security of the DCE. In a preferred embodiment, the administrator corrects the security errors and the program code is re-run to ensure that all errors have been fixed.","The above as well as additional objects, features, and advantages of the present invention will become apparent in the following detailed written description.","The present invention is directed to a method for implementing a security health checking mechanism on a distributed computing environment (DCE) such as the DCE of . The invention may, however, be implemented in other configurations of terminals and networks and, while the present invention may be described with reference to the provided Figures, these references should not be construed in a limiting sense.","The invention is implemented as a software tool which automates preforming security health checks to ensure the DCE software on the machine (clients and servers) is secure its and in an audit ready state. In the illustrative embodiments, the software tool shall be interchangeably referred to as DCECOPS and\/or security tool.","In a preferred embodiment, the tool performs security checks according to International Business Machine (IBM) Corporation's which is hereby incorporated by reference and published on the Internet at http\/\/w3. ibm.com\/transform\/cio.nsf \/Files\/ITCS204V2.1\/$file\/ITCS204V2.1_CIO.htm on Aug. 15, 1999. The IBM's Security Standards For Providers Of Network and Computing Services establishes security practices for the protection of IBM's information assets on network and computing environments within IBM. This standard also defines the requirements for network infrastructures and system services which support IBM business processing and where the infrastructures and system services are provided to multiple users, including and services within the IBM.COM domain. In a preferred embodiment, Operating System Resources (OSR) file and directory, permissions and owners are verified under the mentioned standard which determines the configuration of the machine and verifies that default shipped passwords have been changed.","One advantage of using this tool with the IBM standard is that administrators can use the tool to automate required security checks on machines instead of performing the checks manually. The tool produces a log file that stores any security violations or warnings found, saving the administrator the work of documenting the results manually. Once the administrator has fixed any security exposures found, the tool is run again storing the latest results in the log file also.","With reference now to the figures, and in particular with reference to , there is depicted the basic structure of a data processing system  utilized in the preferred embodiment of the invention. Data processing system  has at least one central processing unit (CPU) or processor  which is connected to several peripheral devices, including input\/output devices  (such as a display monitor, keyboard, and graphical pointing device) for user interface, a permanent memory device  (such as a hard disk) for storing the data processing system's operating system and user programs\/applications, and a temporary memory device  (such as random access memory or RAM) that is utilized by processor  to implement program instructions. Processor  communicates with the peripheral devices by various means, including a bus  or a direct channel  (more than one bus may be provided utilizing a bus bridge).","Data processing system  may have many additional components which are not shown such as serial, parallel, and USB ports for connection to, e.g., modems or printers. In the preferred embodiment of the invention, communication to the data processing system is made possible via a modem connected to a land line or wireless cellular telephone system which is in turn connected to other components to create a network or distributed system. A distributed system may be a wide are network (WAN) such as an Internet. Additionally, data processing system may be connected to a distributed system via an ethernet\/network card. Communicated data arrives at (or is sent through) the modem or network card and is processed to be received by the data processing system's CPU or other software application. In a preferred embodiment, a data processing system operates as a condition detection component for analyzing and recognizing conditions of interest in a distributed system. The data collection components may also be data processing systems.","Those skilled in the art will further appreciate that there are other components that might be utilized in conjunction with those shown in the block diagram of ; for example, a display adapter connected to processor  might be utilized to control a video display monitor, and a memory controller may be utilized as an interface between temporary memory device  and processor . Data processing system  also includes firmware  whose primary purpose is to seek out and load an operating system (OS) from one of the peripherals (usually permanent memory device ) whenever the data processing system is first turned on. In the preferred embodiment, data processing system contains a relatively fast CPU  along with sufficient temporary memory device  and space on permanent memory device , and other required hardware components necessary for providing quick evaluation of events within a condition detection environment.","Referring now to , there is depicted a pictorial representation of a distributed data processing system  or distributed computing environment (DCE) system, which may be utilized to implement the method and system of the present invention. As may be seen, distributed data processing system  may include a plurality of local resource networks, such as Local Area Networks (LAN)  and , each of which preferably includes a plurality of individual computers  an , respectively. Of course, those skilled in the art will appreciate that a plurality of Intelligent Work Stations (IWS) coupled to a host processor may be utilized for each such network.","As is common in such data processing systems, each individual computer may be coupled to a storage device  and\/or a printer\/output device . One or more such storage devices  may be utilized, in accordance with the method of the present invention, to store the various data objects or documents which may be periodically accessed and processed by a user within distributed data processing system , in accordance with the method and system of the present invention. In a manner well known in the prior art, each such data processing procedure or document may be stored within a storage device  which is associated with a Resource Manager or Library Service, which is responsible for maintaining and updating all resource objects associated therewith.","Still referring to , it may be seen that distributed data processing system  may also include multiple mainframe computers, such as mainframe computer , which may be preferably coupled to Local Area Network (LAN)  be means of communications link . Mainframe computer  may also be coupled to a storage device  which may serve as remote storage for LAN . A second Local Area Network (LAN)  may be coupled to LAN  via communications controller  and communication link  to a gateway server . Gateway server  is preferable an individual computer or Intelligent Work Station (IWS) which serves to link LAN  to LAN .","As discussed above with respect to LAN  and LAN , a plurality of data processing procedures or documents may be stored within storage device  and controlled by mainframe computer , as Resource Manager or Library Service for the data processing procedures and documents thus stored.","Of course, those skilled in the art will appreciate that mainframe computer  may be located a great geographical distance from Local Area Network (LAN)  and similarly Local Area Network (LAN)  may be located a substantial distance from Local Area Network (LAN) . That is, Local Area Network (LAN)  may be located in California while Local Area Network (LAN)  may be located within Texas and mainframe computer  may be located in New York.","It is often desirable for users within one portion of distributed data processing network  to access a data object or document stored in another portion of data processing network . The data processing procedures and documents may be accessed by enrolled users within distributed data processing system  and periodically \u201clocked\u201d to prevent access by other users. However, in a preferred embodiment, it is the system administrator who controls access and performs modifications for security.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 3A","FIG. 3A"],"b":["300","303","304","304","305","307","309","311","313","315","317","315","317","303","319","321","309"]},"In the preferred embodiment, administrators use the security tool to automate required security checks on machines (such as data processing systems) instead of performing a check manually. The security tool produces a log file that stores any security violations or warnings found. Once the administrator has fixed any security exposures found, the tool stores the latest results in the log file also.","This security tool preferably operates on AIX DCE\/DFS clients and servers of the network. It automates performing security health checks to ensure the DCE software on the machine is secure and in an audit ready state. The need for all machines to be security compliant to pass audits including Operating System software as well  as all other software installed, configured and running on the machine, has been described in the background section.","Utilizing the security tool, Operating System Resources (OSRs), file and directory, permissions and owners are verified according to the mentioned standard. The tool also allows for the determining the configuration of the machine and verifying that default shipped passwords have been changed. The specific checks that the tool performs are outlined below and referenced in Appendix A, which is attached (the assignee of the present invention retains all copyrights in said Appendix and other attached Appendices).",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 3B","b":["320","322","332","336","338","322","324","326","328","330","332","336","338","340","334"]},"In the preferred embodiment, the tool, \u201cDCECOPS\u201d, is an executable program for the AIX operating system that is written in C++. DCECOPS is comprised of a collection of several C++ classes compiled to generate the dcecops executable. The DCECOPS program does not use the DCE C APIs, but is merely a C++ program which performs the file permission, file owner, and other checks against AIX DCE files and directories. In another embodiment, a second  program, referred to herein as \u201cDCEAUTH\u201d is affiliated with the security tool. DCEAUTH is a DCE C++ program. It takes parameters from the DCECOPS and uses the DCE \u2018C\u2019 Application Programming Interface (API) to verify DCE passwords.","The security tool is run by the system administrator, as root, on an AIX machine running a DCE or DFS server, or a DCE client. As the security tool is being run and the checks are being performed, a report is generated indicating any warnings or violations found in the DCE software per the checks the tool is performing.","The security tool generates a report of every use. The report is written to \u201cstdout,\u201d (i.e., the screen), and also to a default file on the system or a file specified by the administrator running the tool. (see Appendix A, Invocation Examples). In a preferred embodiment, any warnings and\/or violations received during the first run of the tool is fixed by the system administrator and the security tool is run again. This process is repeated until all warnings and violations are fixed. The reports generated during implementation of the dcecops tools are stored and may be used by the administrator as evidence during an audit to show any previously existing violations and when the violations were fixed.","The tool automates the following security requirements:","Ads (A) DCE Passwords\u2014In many cases, default passwords are shipped with operating systems and program products for use during system and product installation and setup. These default passwords must be changed as soon as possible during or following their initial use. The tool checks to ensure that passwords being utilized after initial operations are not the default passwords.\n\n(B) DCE Server\/Client Operation System Resources (OSR)\u2014In a secured system, all files and directories under \u201c\/var\/dce\u201d are owned by an AIX administrative userid, as identified in Appendix D, and must not be updatable by general users. The tool ensures that these files and directories are owned by an AIX administrative userid and an AIX administrative groupid, and that the UNIX permission bits are set to not allow \u2018other\u2019 write access. Some exceptions to this requirement are recognized (i.e., permission settings on the following directories and files can be set with world-writable access, per DCE design). These exceptions include:\n\n","Also, in a secured system, the directory \u201c\/krb5\u201d is owned by root and is not updatable by non-administrative userids.","(C) DCE Server\/Client Operating System Resources\u2014The tool ensures that the following directories are owned by root and are not updatable by non-administrative userids:",{"@attributes":{"id":"p-0062","num":"0000"},"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":["1. \/var\/dce\/dfs","2. \/var\/dce\/dfs\/adm","3. \/var\/dce\/dfs\/adm\/dfsbind","4. \/var\/dce\/dfs\/adm\/salvage","5. \/var\/dce\/dfs\/backup","6. \/var\/dce\/dfs\/backup\/butc","7. \/var\/dce\/dfs\/aggrs","8. \/var\/dce\/dfs\/BosConfig","9. \/var\/dce\/dfs\/admin.bak","10. \/var\/dce\/dfs\/admin.bos","11. \/var\/dce\/dfs\/admin.ft","12. \/var\/dce\/dfs\/admin.fl","13.\/var\/dce\/dfs\/dfstab\n\n(E) DFS Server Operating System Resources\u2014The tool ensures that all files and directories under \u201c\/var\/dce\u201d are owned by an AIX administrative userid are not updatable by general users. The tool ensures that these files and directories are owned by the AIX administrative userids, as identified in Appendix D, or the AIX administrative groupid, and that the UNIX permission bits are set to not allow \u2018other\u2019 write access. there are several exceptions, which are similar to the exceptions of B above. Also, the tool ensures that the directory \u201c\/krb5\u201d is owned by root and is not updatable by non-administrative userids. The tool further ensures that non-administrative userids may not have read or write access to the DFS cache directory (default location \/var\/dce\/adm\/dfs\/cache).\n\nDCECOPS Details\n"]}}}},"The parameters used within DCECOPS are now presented. In the preferred embodiment, users are allowed to specify certain parameters to control the actions of the security tool. When the user fails to specify these parameters, the program runs using default values. The parameters with their descriptions include:","-o <Path to place output report>\n\n","-v Verbose Mode\n\n","-h Help\n\n","-? Help\n\n","An example of the use of the parameters within DCECOPS is presented as:","dcecops -v -o \/home\/userone\/bin","[Appendix B illustrates a typical output report] In a preferred embodiment, the output or program returns are:\n\n",{"@attributes":{"id":"p-0071","num":"0098"},"figref":"FIG. 4A","b":["401","403","402","405","402"]},"The program then checks whether the machine is a DCE or DFS server (step ). If the machine is a DCE or DFS server, the program checks to ensure the default shipped DCE passwords for DCE IDs cell_admin and root have been changed (step ). If the default password (-dce-) has not been changed, the program reports this as a violation (step ). This check is only performed when running this tool on DCE or DFS server machines since only the DCE administrator has the proper authority to change these passwords. Thus, if the machine is not a DCE or DFS server, the program skips the default checking step (step ). The program then performs a series of checks (step ). These checks are illustrated in , C and , and described below. The program then determines if any violations were found (step ). If violations were found the program exits with an appropriate message, exit() (step ). If no violations were found, the program then determines if any warnings were issued (step ). If warnings were issued, the program exits with the appropriate message, exit() (step ). If no warnings were issued, the program exits successfully, exit() (step ). Then the process ends(step ).","In a preferred embodiment, the dcecops program calls a stand alone executable, dceauth (DCE Authentication Program), passing it the DCE ID and DCE password as parameters. The dceauth utility program verifies a users DCE ID and password without actually logging on the DCE ID. It is coded using the C program DCE APIs so it runs as a DCE executable program. The output of the program is \u201c0\u201d if the password is valid for the given DCE ID. If the password is not valid for the given DCE ID, the output of the program is \u201c1.\u201d The specific check performed here is \u201c<program> cell_admin -dce-\u201dand \u201c<program>root -dce-\u201d. If either check returns a 0, then a violation is issued for not having changed a default shipped password.",{"@attributes":{"id":"p-0074","num":"0101"},"figref":["FIG. 4B","FIG. 4A"],"b":["411","421","423","425","427","429","427","431"]},"An example script which is packaged with the tool to handle the sending of mail or gathering of file(s) and sending them as mail is illustrated in Appendix C. During implementation, the script checks the program return to determine if there were any warnings or violations or system errors. The script handles sending any mail, not the actual tool. This provides more flexibility to administrators on the AIX platform for site customization if desired. An example of a script command is:","dcecops\u00a6mail -s \u201cdcecops output\u201d","adminus@xx.ibm.com","The report file name always defaults to <date>.dce. The output path and filename is specified in the on screen output. If the -o option during program invocation is not used, the report is placed in the default directory and file and is also outputted to the screen. The default directory \/<hostname>\/<toolname> is created if it does not already exist, and the file \u201cYYYYMMDD.dce\u201d is placed in this directory. If the -o option is used, the report file is placed in the directory specified in the -o option. The file name YYYYMMDD.dce remains the same (i.e., only the directory is different.) The resulting file location thus looks like \/myhost\/dcecops\/19990215.dce","DCE Server\/Client Operating System Resources Checks","The OSR checks involves a check of a long list of files and directories. If any of the files or directories are missing, no violations are reported since DCE cannot possibly be running successfully if DCE files are missing. If the base OSR directories are missing, it is reported as a warning. The directories which are checked and reported as warnings (if missing) include \/var\/dce and \/krb5.","At the end of the program, the report is printed with a total of warnings and violations. (Note: The only warnings reported are if DCE seems to be installed (i.e., \/opt\/dcelocal exists), but directories \/var\/dce or \/krb5 do not exist. This condition yields one of the following outputs:","WARNING: The directory \/var\/dce does not exist. Verify your installation of DCE.","WARNING: The directory \/krb5 does not exist. Verify your installation of DCE.)","All other files found on the system, that are not in compliance, are reported as violations.",{"@attributes":{"id":"p-0084","num":"0111"},"figref":"FIG. 4C","b":["441","443","444","445","447","449","450","451","450","453","450","455","457","458","459","458","461"]},"In step , the directories that are checked are those within\/var\/dce. Some exceptions apply when permission settings on the directories and files can be set with world-writable access, per DCE design. These exceptions are provided in item B of the automated security requirements listed above.","Code Examples","The function which performs the various checks processes the \/var\/dce directory and looks at all of it's files. The function is a recursive function call. When a directory within the \/var\/dce directory is encountered, the function calls itself to process nested directories. All files and directories encountered under the \/var\/dce directory are checked with the exception of the exception files in item B using the C programming language \u201cstat\u201d function to check file ownership and permissions. An illustrative code example is: struct stat status;","stat(filename, &status);","In a preferred embodiment, only files and directories are checked. Socket or pipe files are not examined as they do not fall in the scope of the security health checking requirements. To implement this the following code example is utilized:","if ((!S_ISSOCK(status.st_mode)) &&\n\n","if (status.st_uid !=0 && status.st_uid . . . , check all the AIX administrative IDs), report a violation and move to next file.","As soon as a violation is reported for one of the files or directories, the checking is stopped for that file or directory and the same set of checks are run for the next file or directory. If the first check was passed, then the group owner of the file is checked. If the file is not owned by an AIX administrative group, a violation is reported. The code example is:\n\n","If this second check is passed, the next check is run.","Next, the file permissions are checked.\n\n","Once all files under \/var\/dce have been checked, the following check is performed:\n\n","In secured systems, non-administrative userids may not have read or write access to the DFS cache directory (default location \/var\/dce\/adm\/dfs\/cache). This check is always performed since all DCE and DFS servers also have the DCE client installed. Next, the file permissions are checked in two separate checks. Each check is run individually for better message reporting to the administrator. A program example includes:\n\n",{"@attributes":{"id":"p-0096","num":"0142"},"figref":"FIG. 5","b":["501","503","505","507","509","511","509","513"]},"In the preferred embodiment, no other directories or files other than the ones pre-defined are checked. If files are missing, no violations or warnings are reported. As the function for the \/var\/dce checks is being run, it processes through each file and directory in the \/var\/dce directory, and recursively calls itself. Whenever any of the DFS files and directories listed above are encountered, a method to perform the needed checks is called. The checks that are performed against the above listed DFS files:\n\n","Although the embodiment presented herein is described as a system that operates as a DCE system, it will be readily apparent to those skilled in the art that the present invention is not limited to a DCE implementation only, but is extendable to all distributed LANs that use a main or global system server that can accommodate foreign or remote registry services. Accordingly, although DCE is used in its properly accepted definition, that definition is extended in this disclosure to mean extended LANs or WANs having a plurality of non-common remote servers attached to a main system for allowing a user or plurality of users to maintain password synchronization across the non-common remote servers from their particular local host server.","It is important to note that while the present invention has been described in the context of a fully functional data processing system, those skilled in the art will appreciate that the mechanism of the present invention is capable of being distributed in the form of a computer readable medium of instructions in a variety of forms, and that the present invention applies equally, regardless of the particular type of signal bearing media utilized to actually carry out the distribution. Examples of computer readable media include: nonvolatile, hard-coded type media such as read only memories (ROMs) or erasable, electrically programmable read only memories (EEPROMs), recordable type media such as floppy disks, hard disk drives and CD-ROMs, and transmission type media such as digital and analog communication links.","Finally, while the invention has been particularly shown and described with reference to a preferred embodiment, it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself however, as well as a preferred mode of use, further objects and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
