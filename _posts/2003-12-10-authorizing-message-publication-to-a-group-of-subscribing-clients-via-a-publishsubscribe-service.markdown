---
title: Authorizing message publication to a group of subscribing clients via a publish/subscribe service
abstract: Publishing electronic messages to clients within a group in a Pub/Sub message publishing environment wherein the group includes authorized participating clients in network communication with a pub/sub service. A client is authenticated for authority to publish messages to a selected group of subscribing clients.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07941488&OS=07941488&RS=07941488
owner: International Business Machines Corporation
number: 07941488
owner_city: Armonk
owner_country: US
publication_date: 20031210
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","COPYRIGHT NOTICE","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This is a divisional application of Ser. No. 10\/207,711 \u201cINTERACTIVE FILTERING ELECTRONIC MESSAGES RECEIVED FROM A PUBLICATION\/SUBSCRIPTION SERVICE\u201d filed on Jul. 26, 2002 and assigned to IBM. The disclosure of the forgoing application is incorporated herein by reference.","A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","The present invention is related to systems and methods for Publication\/Subscription, more particularly to systems and methods for distributed computer users to securely subscribe and publish by way of a Pub\/Sub channel.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1","b":["100","101","106","107","105","111","107","105","106","102","110","104","103","108","109","104","103","102","1","112","112","109"]},"In  an example Internet system is shown. A user at client   uses applications on his system. This user (user  ) at client   can interact with clients - - by way of a client server computer . Applications  may be provided by each client - and or the client server  or some remote server  by way of the network . The user at client   can interact with a remote user (user  ) at client   by way of the Internet .","Recently, peer to peer (P2P) interconnection has become an interesting alternative.  shows an example P2P network  wherein peer   can communicate with other peers directly. Each peer essentially includes client and server function. Thus, Peer   acts as a client in sending messages to Peer  . Peer  performs some function as a result of receiving the message and may return a message to peer . Thus, peer   acts as a server for peer  . P2P grids provide networked computers that cooperate to perform distributed computing.","Networked clients comprise applications for communication. E-mail applications provide for sending a message to a mail server that then makes the recipient aware of the waiting message. The recipient then can elect to open the message and view it at his client machine. E-mail messages can be sent to a single recipient or can contain a list of several recipients (one to many). One to many e-mail transactions are popular with advertisers and the use of one to many e-mails has been dubbed \u201cSPAM-ing\u201d. Recently Instant Messaging (IM) has gained popularity in the form of sending text messages directly to another client. A first user composes an IM and selects a second user as the target. A message is then sent directly to the second user and appears on his display as either a message or the notification of a message. IMs are typical one to one messages.","Refer now to  which depicts a logical view of a pub\/sub system of the prior art. A pub\/sub service  receives messages originating from a content service - and delivers them to client subscribers  . An example message published includes a topic string, a set of property name-value pairs, and a body. A subscriber identifies a topic string pattern and properties test, and receives matching messages according to a standard, for instance JAVA Message Service (JMS).","The pub\/sub system is made up of a Content Provider application (Service) -, the Subscriber (Client) -, and the Pub-Sub Service . Applications may implement one or more of these roles. The content provider - generates content for distribution through the pub\/sub system . Content providers - send structured content to one or more instances of the pub\/sub service . The subscriber - sends subscription requests  to an instance of the pub\/sub service  and, subject to acceptance of a particular subscription request, receives content  from the pub\/sub service. The actual content received will be determined by the subscription and the message selection process.","The pub\/sub service  acts as both a subscription manager  and a content distribution agent . Applications implementing the pub\/sub service role  accept subscription requests  from subscribers  and, subject to any applicable authentication or access control policies, accept or reject subscription requests; and distribute content  to valid subscribers .","The actual content sent to each subscriber - by the pub-sub service  will be determined by the subscription process  and through the message selection process .","Applications implementing some aspect of the pub\/sub system may act in different roles in different circumstances. For example, an application implementing the pub\/sub service role  may itself act as a subscriber, subscribing to and receiving content from another instance of the pub-sub service. Similarly, an application acting in the subscriber role may act as a content producer if the end-user of the application wishes to publish a message to the service.","The pub\/sub system provides for communication among applications implementing the application roles. There are two primary communications in the pub\/sub system: messages are sent from content providers to pub\/sub services; and pub\/sub services send messages to subscribers , .","Content providers - may generate messages from any content source, and subscribers may dispose of messages in any manner they choose. For example, a content provider may simply be a gateway between a raw content source, such as e-mail or web pages, to the pub-sub service. Similarly, a subscriber ,  may act as a gateway between the pub-sub service and an external service such as NNTP or e-mail. An application implementing a particular role defined in the Pub\/Sub System may implement different roles at different times.","For example, an application implementing the pub\/sub service role  may itself act as a subscriber, subscribing to content through another instance of the pub-sub service and receiving messages from that service.","The present invention (Shotgun) teaches a system for publishing electronic information by way of channels. A user subscribes to a \u201cchannel\u201d of information similarly to selecting a Television Channel. Messages of information broadcast from that channel are then directed to the subscriber application which comprises filtering mechanisms to selectively permit messages to be passed on to the shotgun client user. The system maintains a database directory of applications, accessed through an administrative SOAP service. The directory contains security information, channel access controls, owner identification, help text and the like.","Publish\/subscribe systems contain information producers and information consumers. Information producers publish events to the system, and information consumers subscribe to particular categories of events within the system. The \u201csystem\u201d ensures the timely delivery of published events to all interested subscribers. In addition to supporting many-to-many communication, the primary requirement met by publish\/subscribe systems is that producers and consumers of messages are anonymous to each other, so that the number of publishers and subscribers may dynamically change, and individual publishers and subscribers may evolve without disrupting the entire system.","The earliest publish\/subscribe systems were subject-based. In these systems, each message belongs to one of a fixed set of subjects (also known as groups, channels, or topics). Publishers are required to label each message with a subject; consumers subscribe to all the messages within a particular subject. For example a subject-based publish\/subscribe system for stock trading may define a group for each stock issue; publishers may post information to the appropriate group, and subscribers may subscribe to information regarding any issue.","In one embodiment, a method for receiving electronic messages published through a pub\/sub service is described wherein the pub\/sub service is in network communication with one or more client systems, the method comprising the steps of: Receiving a message (optionally comprising XML fields, HTML, instant message, email, JPG, JIF, MPEG or SOAP protocol for example) at a client application, published from the pub\/sub service the message containing first identifying information; inspecting content of the message according to predefined criteria (comprising keyword search, boolean search etc.) wherein the predefined criteria was created using a GUI interface; and accepting the message by the client application when the first identifying information meets the predefined criteria.","In another version, the accepting step further comprises any one of displaying the message, passing the message to another program module or forwarding the message over a network.","In another embodiment, electronic messages are published within a group in a Pub\/Sub message publishing environment the group comprising authorized participating clients in network communication with a pub\/sub service, the method comprising the steps of: authenticating a first client identity; receiving a message (optionally comprising XML fields, HTML, instant message, email, JPG, JIF, MPEG or SOAP protocol for example) from the authenticated first client destined for publication to a first group; verifying the first client identity is authorized for the first group; and publishing the message by way of the pub\/sub service to clients of the group.","In another version of the embodiment, the message comprises a message envelope, the envelope comprising a message body and a message header.","In another version of the embodiment, the first service publishes to any one of a first application, an automated instant message address (Bot), a servlet or a Mobile Device. The publication may be an application to be run on the authorized subscribers client and the Client Identity is optionally associated with a client group in an authorization database (or table) in one case using LDAP services.","In another embodiment, secure publication and subscription is provided in a system having a pub\/sub server having one or more channels, the method comprising the steps of: Providing first subscription access capability to a group channel the first subscription access requiring user authorization; Providing second subscription access capability to a public channel wherein the second subscription access is universally authorized.","In another embodiment, a method is provided for invoking a first client application in a system wherein the system includes a pub\/sub server and a second client application, the method comprising the steps of: Subscribing to a channel of a pub\/sub server; Receiving a message for invoking the first client application at the second client application from the pub\/sub server; and Invoking the first client application using information supplied by the message.","In one option, the embodiment comprises the further step of delaying invoking the first client application until a predefined action is taken at the second client application.","In another option, the embodiment comprises the further steps of: Creating a message for invoking a first client application; Sending the message from a third client application to the pub\/sub server channel, the message for publication by way of the pub\/sub server channel.","In another embodiment, a method is provided for dynamic management of pub\/sub user applications by a user, the method comprising the steps of: Creating a list of pub\/sub user applications available to a user; Using the list of user applications to create a GUI interface to a user, the GUI interface comprising at least one of a first user application identifier, an activate first user application function, a deactivate first user application function, a first user application active indicator or a method for displaying information about the first user application.","In one version, the optional step of subscribing to the first user application uses the GUI interface.","Another version comprises the step of performing an authorization action in conjunction with the list in order to permit a user application to appear on the GUI interface to the user.","In still another version, the subscribing step further comprises the step of permitting subscribing to the first user application only when the user is authorized.","In another embodiment, a method is provided for filtering messages from a pub\/sub channel, the method comprising the steps of: Receiving a message from the pub\/sub channel; Performing an operation on the message wherein the operation is any one of: Saving information to a user file, executing an application identified by the message, presenting information to the user only when predefined criteria permit, permitting user override of function specified by the message, transforming the message to a predetermined media format or forwarding the message to another node.","In one version of the embodiment, the transforming of the message is from any one of text, audio, video or image format to any one of encrypted, decrypted, compressed, decompressed, text, audio, video or image format.","In another version of the embodiment, the other node comprises any one of computer, telephone, radio, television or data file.","In another embodiment, a method is provided for invoking an adjunct application in first client in a system comprising a pub\/sub server in network communication with the first client, the method comprising the steps of: Subscribing to a pub\/sub server channel using a client application; Receiving a first message from the pub\/sub server channel; Obtaining an adjunct application; Incorporating the adjunct application with the client application; Invoking an application published by the pub\/sub server channel with the client application.","In one version of the embodiment, obtaining an adjunct application is by way of any one of the first message, a user provided adjunct application or an adjunct application provided by a third party.","In another embodiment, a method for accessing a web service is provided, the method comprising the steps of: retrieving a list of subscribers comprising a community of cooperating users; publishing a message to the community of cooperating users according to the list, the message comprising interfacing information for the web service.","In one optional version of the embodiment, the further step is described for accessing the web service using the interfacing information.","In one embodiment a method for secure publishing of services in a pub\/sub system provides web services for security. The web services perform the authentication and authorization and subscribers are authorized via an authorized subscriber table.","Another embodiment provides for publishing automated agents, the method comprising the steps of: Creating an automated agent; Providing an interface to a pub\/sub channel for publishing the automated agent; Publishing the automated agent to authorized subscribers to the pub\/sub channel.","Another embodiment describes providing a program service comprising one or more modules of program instructions the program service available to subscribing clients comprising the steps of: executing a first module of the program instructions; accessing a remote network service (such as the Internet of the world wide web) by way of a network protocol (such as HTTP); exchanging information with the remote network service thereby performing part of the program service at the remote network service.","It is therefore an object of the present invention to provide a method for publishing electronic messages to clients within a group in a Pub\/Sub message publishing environment said group comprising authorized participating clients in network communication with a pub\/sub service.","It is another object of the invention to authenticate a client for authority to publish messages to a group of subscribers.","It is yet another object of the invention to publish XML structured messages.","It is another object of the invention to publish messages comprising a message envelope comprising a body and header.","It is another object of the invention to publish SOAP messages.","It is still another object of the invention to publish to applications, automated instant message addresses (Bots), servlets or mobile devices.","It is another object of the invention to publish application to run on authorized subscriber clients.","It is another object of the invention to associate a client identity with a publish\/subscribe client group in an authorization database.","The above as well as additional objectives, features, and advantages of the present invention will become apparent in the following written description.","The present invention provides a method for publishing electronic messages by way of channels in a pub\/sub server system wherein subscription to applications and channels is provided by way of a secure GUI application. The example system employing the present invention is herein called \u201cShotgun\u201d.","In a preferred embodiment, Shotgun comprises a Shotgun server application and a Shotgun client application. The Shotgun server application comprises:\n\n","A Shotgun client application resides on the client machine. The Shotgun client application provides:\n\n",{"@attributes":{"id":"p-0079","num":"0085"},"figref":["FIG. 5","FIG. 4"],"b":["404","401","403","404"]},"In a preferred embodiment, a channel is a \u201ctopic\u201d field appended to a message. The topic may have sub-topic fields associated with it as well. When a subscriber subscribes to a channel of a service, the pub\/sub service publishes messages having the selected topic field to the subscriber. Shotgun further provides a filter mechanism to permit the user to define the sub-topics that he is interested in. Shotgun will only publish to the subscriber, messages having topics and sub-topics according to the subscriber's selection.","Shotgun provides a mechanism for allowing a subscriber to subscribe to a service - and to a channel provided by the service. Shotgun also provides a mechanism to allow a user to create filters on channels and message content (message identifying information) published by the pub\/sub service such that only selected channel messages (those messages containing identifying information in accordance with predetermined inspection criteria) are received by the user. Thus, a user can create a channel filter to receive only stock quote messages and a message filter to only receive messages that include IBM stock.","Services A-C - are available by subscription. Clients  and  - comprise Applications  and  respectively -. A user at Client   subscribes by way of Pub\/Sub server  to Service B . The user performs the Subscription operation using a GUI interface described later herein. Service B  sends messages to subscribers by way of Pub\/Sub Server . Messages are filtered - by examining the content of the message body for keywords, boolean compares or other methods well known in the art. The filtering criteria is pre-programmed by the user of client   such that only messages containing information of interest to the user appear at the user's display. Shotgun Application   controls the filtering criteria but the actual filtering may be done at the pub\/sub server in one embodiment or on the client's  machine (App  ) in another embodiment. Content filtering is performed on the incoming messages based on key words or more complex boolean tests, depending on the implementation. In one embodiment, the user is alerted when a message is available (has passed the filter test) and can elect to receive the full message or discard it.","Subscription to a service - persists as long as the shotgun client application is active or can be maintained based on other criteria such as elapsed time or specific user actions (on\/off selection for example). In a preferred embodiment, the user optionally enables the Shotgun client application to save subscriber information locally and use it to automatically subscribe to predetermined services with predetermined filtering whenever the client is activated (power on).","In a preferred embodiment, shotgun client applications - include an application program interface (API)  providing an interface so that adjunct applications can be provided to the shotgun client applications -. This provides similar functionality to application plug-ins used to extend Web Browser functionality in a Web environment. In a preferred embodiment, an instant messaging (IM) application is provided during a session such that clients can communicate with one another using IM facilities.","In another preferred embodiment, the shotgun client application - provides a user API  enabling a third party application to be plugged into the shotgun client application.","In another preferred embodiment, reference , Client   subscribes to Service A  by way of the pub\/sub server . Service A provides an active agent IM A  which interfaces to the system acting like a user. IM A  has an IM address (which it supplies to it's subscribers) and subscribers can communicate with Service A  using IM facilities.","Using the embodiment above, a shotgun client can receive information from Service A and communicate with other users or Service A as if Service A were another user (client) by way of IM.","Shotgun automates the security mechanism for controlling who can publish data and on what channels. Shotgun maintains a database directory of applications, accessed through an administrative SOAP service. (SOAP is a lightweight XML based protocol for exchange of information in a decentralized, distributed environment. It includes an envelope that defines a framework for describing what is in a message and how to process it and transport binding framework for exchanging messages using an underlying protocol.) The directory of applications contains channel access controls, owner identification, help text and other application parameters.","The shotgun infrastructure revolves around a publish and subscribe (pub\/sub) service. In a preferred embodiment it is an IBM WEBSPHERE service called \u201cMQ Publish & Subscribe\u201d. Any pub\/sub application could be used to create a Shotgun service as taught by the present application. The WEBSPHERE service adds Enterprise level of security on top of a common broadcast component. The LDAP (Lightweight Directory Access Protocol) directory provides authentication and a grouping technology provides authorization. The application registration provides an additional level of authorization on top of the free form Corporate architecture.","LDAP is a well known directory service protocol that runs over TCP\/IP. LDAP provides a method for a client to authenticate or prove its identity to a directory server to help protect the information the server contains.","Secure publisher preferred embodiment (WebService interface):","Security (authentication\/Authorization) for the publisher is provided by a private LDAP Directory, an application registration database or any appropriate authorization technique. The publisher preferably uses a Web Service SOAP interface and calls the pub\/sub service by providing topic (channel), message, user ID and password over HTTPS secure socket. Alternatively, the publisher calls the pub\/sub service by providing topic (channel) and message over HTTPS wherein the user name and password are stored in the HTTP specified REMOTE_USER field.","Gryphon functionality is available in IBM WEBSPHERE available from INTERNATIONAL BUSINESS MACHINES particularly in the component IBM WEBSPHERE MQEVENT BROKER also available from INTERNATIONAL BUSINESS MACHINES, Gryphon provides a new alternative to subject-based systems is content-based messaging systems. Functionality associated with Gryphon can be found in the following U.S. patents: U.S. Pat. No. 6,216,132 \u201cMETHOD AND SYSTEM FOR MATCHING CONSUMERS TO EVENTS\u201d (Chandra et al.); U.S. Pat. No. 6,091,724 \u201cROUTING MESSAGES WITHIN A NETWORK USING THE DATA CONTENT OF THE MESSAGE\u201d (Chandra et al.); U.S. Pat. No. 6,336,119 \u201cMETHOD AND SYSTEM FOR APPLYING CLUSTER-BASED GROUP MULTICAST TO CONTENT-BASED PUBLISH-SUBSCRIBE SYSTEM\u201d (Banavar et al.). Each of these patents is assigned to INTERNATIONAL BUSINESS MACHINES and incorporated herein by reference.","A significant restriction with subject-based publish\/subscribe is that the selectivity of subscriptions is limited to the predefined subjects. Content-based systems support a number of information spaces, where subscribers may express a \u201cquery\u201d against the content of messages published.","The Gryphon system provides content-based publish\/subscribe functionality. Clients access the system through an implementation of the Java Message Service (JMS) API. The Gryphon message broker is scalable, available, and secure:","Scalability: Brokers may be added into the network to provide support for additional clients. The configuration support is flexible enough to efficiently support geographic distribution of brokers. Server farms in multiple geographies may be linked through a number of explicit links rather than requiring N\u00d7N connectivity between all brokers.","Availability: Gryphon responds to the failure of one broker in a network by rerouting traffic around the failed broker. Reconfiguration is automatic and requires no intervention by an administrator.","Security: Gryphon supports access controls for limiting who may publish and subscribe to portions of the information space. Further, Gryphon currently supports four authentication mechanisms for verifying client identity: simple password (e.g. telnet), mutual secure password authentication (password is never sent over the wire), asymmetric SSL (password sent over a secure SSL connection to the server) and symmetric SSL (both client and server use certificates to authenticate each other). Secrecy and integrity of sensitive messages are protected through state-of-the-art encryption mechanisms.","Gryphon is a distributed computing paradigm for message brokering, which is the transferring of information in the form of streams of events from information providers to information consumers.","In Gryphon, the flow of streams of events is described via an information flow graph. The information flow graph specifies the selective delivery of events, the transformation of events, and the generation of derived events as a function of states computed from event histories.","Message brokering is motivated by the need for efficient delivery of information across a large number of users and applications, in an environment characterized by heterogeneity of computing platforms, anonymity between information producers and consumers, and dynamic change due to system evolution. Within a single business, such as a stock exchange or a weather forecasting agency, there is a dynamically varying number of sub-applications supplying events, and a varying number consuming events. The suppliers and consumers may not necessarily be aware of one another; instead the suppliers may simply be supplying information of a certain type to any interested consumer and each consumer may be interested in subsets of this information having particular properties. For example, in a stock exchange, one consumer may be interested in all stock trades greater than 1000 shares, and another in specific market trends, such as all stock trades representing a drop of more than 10 points from the previous day's high.","There is also a growing need to \u201cglue\u201d together applications within multiple businesses, to support inter-business network commerce or maybe as a result of mergers and acquisitions. For example, a retailer may need to connect to its suppliers and customers, or a customer to various retailers and financial organizations. This may require transforming events from different sources into a compatible form, merging them, and selecting from these events.","Message brokering is an extension of publish-subscribe technology. The Gryphon approach augments the publish-subscribe paradigm with the following features:\n\n","Gryphon technology includes a collection of efficient implementations to support this paradigm and still provide scalability, high throughput and low latency.","The Gryphon Model","As mentioned earlier, event processing in Gryphon is described via an information flow graph. An information flow graph is a directed acyclic graph constituting an abstraction of the flow of events in the system. In one example, stock trades from two information sources, NYSE and NASDAQ, are combined, transformed, filtered and delivered to a client. The two sources produce events of type (price, volume), which are merged into a single stream. A path computes a new stream of events of type, and another path filters out events with capital less than $1,000,000.","A Gryphon information flow graph is an abstraction because Gryphon is free to physically implement the flow any way it chooses, possibly radically altering the flow pattern, provided that the consumers see the appropriate streams of events consistent with the incoming events and the transformations specified by the graph. Gryphon optimizes graphs and deploys them over a network of brokers (or servers). The broker network is responsible for handling client connections and for distributing events.","The nodes of the graph are called information spaces. spaces are either 1. event histories\u2014monotonically growing collections of events, e.g., stock trade events of the form (price, volume), or 2. event interpretations\u2014states representing interpretations of sequences of events, such as a table (latestprice, highestprice). Each information space has a schema defining the structure of the history or state it contains. Each arc (path) in the information flow graph defines an operation to derive the information space at the head from that at the tail. Arcs can be one of the following types:\n\n","The Gryphon system consists of several components for efficiently realizing the information flow graph over a large distributed network of brokers. Areas of interest include:\n\n","Referring now to , Shotgun  is an end-to-end Publish\/Subscribe e-Utility. It includes three major components: the IBM GRYPHON \u201cpub\/sub\u201d broker , a Web Service publisher , and a generic IBM SASH subscriber application (Shotgun client subscriber application). Working together, these services provide a complete, easy to use solution for applications requiring message broadcast capability.","The GRYPHON message brokering system merges Pub\/Sub communications and database functionality using \u201cinformation flow graph\u201d concepts. The information flow graph specifies the selective delivery of events, the transformation of events and the generation of new events from providers to information consumers. In the prior art pub\/sub paradigm, events in a distributed environment are classified through a set of subjects (also known as topics, channels or groups). GRYPHON extends this paradigm to allow the selection of events by content (and\/or subject) rather than simply subject and to allow event transformations. GRYPHON provides a general structure for message transformation. Events may change format, drop fields or gain new fields.","The SASH application, also available from International Business Machines, is a dynamically configurable programming environment for rapidly building and deploying platform-integrated desktop applications using JavaScript and DHTML. This programming environment enables Web programming beyond the browser, and the resulting applications are integrated seamlessly into the common desktop environment and take advantage of the latest standards in Web services.","The pub\/sub model allows applications to publish data on \u201cchannels\u201d, similar to television or radio broadcasting, and clients can \u201ctune in\u201d to listen for data\u2014even listen on many channels at one time.","Shotgun supports multiple applications -, all publishing using the same infrastructure, with each application broadcasting data on one or more channels. For example Application A might be analogous to a TV cable company broadcasting to your home several channels of programs, and you might even be watching a ball game and keeping an eye on the weather channel at the same time (e.g. using PIP). Application B might be similar to a radio station broadcasting on both AM and FM channels to your home. And Application C might be analogous to an emergency support vehicle driving through your neighborhood, announcing evacuation procedures using a load speaker\u2014in this case, a \u201csingle-channel\u201d broadcast of information, which you may choose to \u201csubscribe\u201d to by opening your window.","The Shotgun GRYPHON Web Service  provides two major advantages to application developers. First, it provides a convenient SOAP interface to publish messages via the GRYPHON pub\/sub server , without the need for incorporating its lower-level API, while supporting the most common broadcast requirements. Secondly, it automates the security mechanism for controlling who can publish data on channels. This is accomplished by integrating Password authorization.","Shotgun maintains a DB2 database directory of applications, accessed through an administrative SOAP service (which can be used for controlled self-registration of user-written applications). The directory contains channel access controls, owner identification, help text, and other application parameters used by the Shotgun client.","The Shotgun client - is a Sash web application (weblication), that is downloaded from the Web. The Shotgun client serves as a common interface to the GRYPHON server  for all pub\/sub-enabled weblications running on the client machine. A user can download his choice of shotgun-enabled weblications from the Web, and, using a settings control option from the Shotgun client GUI, can easily select applications and channels, define message filters, and control new message alerts.",{"@attributes":{"id":"p-0117","num":"0142"},"figref":"FIG. 10","b":["1001","1003","1002","1001","1003","1004","1004","1005"]},"\u201cQuickPoll\u201d and \u201cSkillTap\u201d are implemented as Sash weblications and must be downloaded separately from the Web (Sash Weblication Factory). \u201cTradIt\u201d is a Java Websphere application, which requires no shotgun client download. \u201cTest\u201d is available for users to send test messages to simulate application publishing, and to test alert handling for channel and text filters. As mentioned earlier, some applications support multiple channels and others require no channel selection. In the example , QuickPoll allows user selection of listening channels.","In , pressing the \u201cedit\u201d button  for the \u201cquickpoll\u201d application in the \u201cChannels\u201d column brings up a window  at the shotgun client terminal. If the application provides a public broadcast channel (meaning anyone can subscribe), its name is displayed first (\u201copenmic\u201d  in this case). Anyone with a valid ID is allowed to publish on this channel. To listen for messages on the public channel , the user selects the check box . Next, if enabled by the application, is the personal channel , which matches the user's personal network ID. Only the user can publish on this channel, but others can elect to listen. A check in the Personal box  enables the user to receive any data he publishes.","In the preferred embodiment, a user has the option to add as many other personal channels  (i.e., your manager's Intranet ID) or \u201cgroup\u201d channels . Groups  are defined using a program called BlueGroups. The Shotgun GRYPHON Web Service will authenticate the publisher's network ID to ensure that it is a member of the group and that the channel name on which the data is published matches the group name. In the example , only members of group \u201cwebahead\u201d (defined as a set of department numbers via an LDAP search filter) are allowed to publish on the webahead channel .","Referring now to , in addition to channel selection, a user may set message \u201cfilters\u201d for any application using the \u201cedit\u201d button  on the settings menu . The message filter allows the user to test for certain words, phrases, or combinations using simple \u201cAND\u201d and \u201cOR\u201d expressions or even complex programming-style expressions that evaluate to true or false, to determine whether he will be presented with an alert box displaying the incoming message. This allows the user to filter out unwanted messages.",{"@attributes":{"id":"p-0122","num":"0147"},"figref":"FIG. 14","b":["1301","1302"]},"When an \u201calert\u201d option in the settings menu is checked for an application, messages that contain the information defined by the channel and filter settings will cause a notification window to display rather than displaying the filtered message immediately.  shows an example alert message  for the \u201ctradeit\u201d application (identified in the alert window ) that includes the filter criteria \u201cethernet switch\u201d in the alert message . The alert display includes an action UI button function  that allows the user to decide whether or not he wants to continue in the application, in which case he hits the \u201cyes\u201d button.","The application (\u201cTradeit\u201d in this case) is shown in the alert window  of , along with a \u201cblast\u201d message , with words highlighted in red that match the filter rule that was fired. The user then has the option  to ignore the event, or select \u201cyes\u201d to trigger a \u201cbackfire URL\u201d that was set by the application. In this example, Selecting \u201cyes\u201d will cause an Internet browser window to launch for an HTTP URL (in the case of a web application, such as Tradeit). In another embodiment, another Sash weblication may be launched by the backfire URL (such as QuickPoll or SkillTap). In this case, the Tradeit backfire URL calls a servlet that displays details about the item posted for trade by the responder. Note  that if the \u201calert\u201d option is unchecked in the selection table, but the application is enabled (via \u201con\/off\u201d), and an incoming message passes the channel and filter rules, the backfire URL will be launched immediately.","Table 1 shows example message fields for a preferred embodiment. Table 2 shows an example \u201crequest for publish\u201d message and a corresponding \u201cpublish\u201d message.",{"@attributes":{"id":"p-0126","num":"0151"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Message Fields:"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Blast"]},{"entry":[{},"\u2003\u2003Possible values: string"]},{"entry":[{},"\u2003\u2003Used as the message present to a user if alert"]},{"entry":[{},"mechanism is active"]},{"entry":[{},"Payload"]},{"entry":[{},"\u2003\u2003Possible values: string"]},{"entry":[{},"\u2003\u2003Non-Shotgun application specific information"]},{"entry":[{},"Backfire"]},{"entry":[{},"\u2003\u2003Possible values: null, string in the format of"]},{"entry":[{},"proto:\/\/params and args"]},{"entry":[{},"\u2003\u2003URI defining action needed to be taken to fulfill"]},{"entry":[{},"Channel (Added by publish mechanism)"]},{"entry":[{},"\u2003\u2003Possible values: null, string"]},{"entry":[{},"\u2003\u2003Channel the message is intended for"]},{"entry":[{},"Publisher (Added by publish mechanism)"]},{"entry":[{},"\u2003\u2003Possible values: string"]},{"entry":[{},"\u2003\u2003ID of the publisher"]},{"entry":[{},"Proxy (Added by publish mechanism)"]},{"entry":[{},"\u2003\u2003Possible values: string"]},{"entry":[{},"\u2003\u2003ID of the user the publisher is publishing on behalf"]},{"entry":[{},"of"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0127","num":"0152"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},")LOAD MOBALERT"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"322pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SAVED 2002-07-16 13.26.26 (GMT-4)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2207To [\u25a1]\u2207"]},{"entry":["[0]","To;CH;F;FROM;L;LF;MSG;P;SUBJ;SV1;TF;TO;TOP;XML"]},{"entry":["[1]","\u2002\u2002A FORWARD A SHOTGUN ALERT TO A MOBILE DEVICE"]},{"entry":["[2]","\u2003TO 6\u2193 "]},{"entry":["[3]","\u2003TOP UPC 6\u2193 "]},{"entry":["[4]","\u2003LF \u2032ON,\u2032\u2261UPC 3\u2191F 4\u2193L  "]},{"entry":["[5]","\u2003F 3\u2193F"]},{"entry":["[6]","\u2003LAST_XML XML \u03b5\u0394FV TF  "]},{"entry":["[7]","\u2003DELETE TF"]},{"entry":["[8]","\u2003 (0=\u03c1CH \u2032topic\u2032 XGET XML)\/END"]},{"entry":["[9]","A IS THIS A CHANNEL WE ARE INTERESTED IN?"]},{"entry":["[10]","\u2003 (~(UPC CH)MATCH TOP)\/END"]},{"entry":["[11]","A WHO IS THE SENDER?"]},{"entry":["[12]","\u2003FROM \u2032publisher\u2032 XGET XML"]},{"entry":["[13]","\u2003 (0\u2260\u03c1P \u2032proxy\u2032 XGET XML)\/\u2032FROM P\u2032"]},{"entry":["[14]","\u2003 (\u2032<![CDATA[\u2032\u22619\u2191MSG \u2032blast\u2032 XGET XML)\/\u2032MSG 9\u21933\u2193MSG\u2032"]},{"entry":["[15]","\u2003SUBJ \u2032Shotgun\u2032,8\u2193CH"]},{"entry":["[16]","A SEND THE ALERT VIA THE SMTP SERVICE"]},{"entry":["[17]","\u2003P MAIL FROM TO SUBJ MSG"]},{"entry":["[18]","A LOG THE EVENT IF REQUESTED BY THE USER"]},{"entry":["[19]","\u2003P P,\u2032 (From: \u2032,FROM,\u2032, To: \u2032TO,\u2032, Subject: \u2032,SUBJ"]},{"entry":["[20]","\u2003 LF\/\u2032F LOG P,\u2033, Message: \u2032\u2032,MSG,\u2033)\u2032\u2033"]},{"entry":["[21]","END:"]},{"entry":[{},"\u22072002-07-15 14.01.14 (GMT-4)"]},{"entry":[{},"\u2207XGET[\u25a1]\u2207"]},{"entry":["[0]","Z TAG XGET STRING"]},{"entry":["[1]","\u2003Z 2\u2283(\u2032<\u2032,TAG,\u2032>\u2032)(\u2032<\/\u2032,TAG,\u2032>\u2032)EXTRACT STRING"]},{"entry":[{},"\u22072002-02-09 23.30.09 (GMT-4)"]},{"entry":[{},"\u2207LOG [\u25a1]\u2207"]},{"entry":["[0]","F LOG D;RC"]},{"entry":["[1]","A SV100 ((\u2212(\u03c6F)L\u2032\\\u2032)\u2193F,\u2032\\NOW \u2032,(DBLQUOTE\u03b5D),\u2032>>\u2032,F"]},{"entry":["[2]","A RC SV100"]},{"entry":["[3]","\u2003F APPENDFILEV\u2282(\u2032[\u2032,(NICE_DATETIME \u25a1TS),\u2032] \u2032),\u03b5D"]},{"entry":[{},"\u2207|2002-02-25 22.27.52 (GMT-4)"]},{"entry":[{},"\u2207MATCH[\u25a1]\u2207"]},{"entry":["[0]","Z STR MATCH PAT;I;\u25a1IO "]},{"entry":["[1]","A DOES STRING MATCH PATTERN (WITH {circumflex over (\u2009)} AS WILDCARDS)?"]},{"entry":["[2]","\u2003\u25a1IO 0"]},{"entry":["[3]","LP:"]},{"entry":["[4]","A EXIT IF FIRST PART OF STRING DOES NOT MATCH"]},{"entry":["[5]","\u2003 (~Z (I\u2191STR)\u2261(I PAT\u2514\u2032{circumflex over (\u2009)}\u2032)\u2191PAT)\/END"]},{"entry":["[6]","A PATTERN ENDS WITH WILDCARD AFTER MATCH SO FAR - OK"]},{"entry":["[7]","\u2003 (Z (0=\u03c1PAT (I+1)\u2193PAT) \u2032{circumflex over (\u2009)}\u2032=1\u2191PAT)\/END"]},{"entry":["[8]","A DONE IF EXACT MATCH OF REMAINING TEXT (NO OTHER {circumflex over (\u2009)})"]},{"entry":["[9]","\u2003 (Z (0=\u03c1STR I\u2193STR) 0=\u03c1PAT)\/END"]},{"entry":["[10]","A NO MATCH IF END OF STRING, BUT NOT END OF PATTERN"]},{"entry":["[11]","\u2003 (~Z 0\u2260\u03c1STR)\/END"]},{"entry":["[12]","A NO MATCH IF \u2260 STRING END & PATTERN END & NO END {circumflex over (\u2009)}"]},{"entry":["[13]","\u2003 (~Z 0\u2260\u03c1PAT)\/END"]},{"entry":["[14]","A DROP WILDCARD MATCHES, IF NOTHING LEFT, NO MATCH"]},{"entry":["[15]",{"img":[{"@attributes":{"id":"CUSTOM-CHARACTER-00049","he":"2.12mm","wi":"1.78mm","file":"US07941488-20110510-P00003.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00050","he":"2.12mm","wi":"2.79mm","file":"US07941488-20110510-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00051","he":"2.12mm","wi":"2.79mm","file":"US07941488-20110510-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}],"u":"\u2208"}]},{"entry":["[16]","\u2003 LP"]},{"entry":["[17]","END:"]},{"entry":[{},"\u2207 2002-07-16 13.21.35 (GMT-4)"]},{"entry":[{},"\u2207MAIL[\u25a1]\u2207"]},{"entry":["[0]","Z MAIL ARGS;FROM;MSG;SUBJ;T;TO"]},{"entry":["[1]","A SEND MAIL VIA SMTP SERVER, ARGS: FROM TO SUBJ TEXT"]},{"entry":["[2]","A MAIL \u2032me@foo.com\u2032 \u2032ed@bar.com\u2032 \u2032Shotgun alert\u2032 \u2032Hi!\u2032"]},{"entry":["[3]","\u2003(FROM TO SUBJ MSG) ARGS"]},{"entry":["[4]","\u2003Z \u2032webservices.ibm.com\/soap\/servlet\/rpcrouter\u2033\u2032\u2033"]},{"entry":["[5]","\u2003Z Z, \u2032urn:BlueMail\u2032 \u2032simplesend\u2032 \u2033 10"]},{"entry":["[6]","\u2003T \u2032<myTo xsi:type=\u2033xsd:string\u2033>\u2033,TO,\u2032<\/myTo>\u2032"]},{"entry":["[7]","\u2003T T, \u2032<myFrom xsi:type=\u2033xsd:string\u2033>\u2032 ,FROM, \u2032<\/myFrom>\u2032"]},{"entry":["[8]","\u2003T T, \u2032<mySub xsi:type=\u2033xsd:string\u2033>\u2032 ,SUBJ, \u2032<\/mySub>\u2032"]},{"entry":["[9]","\u2003T T, \u2032<myMsg xsi:type=\u2033xsd:string\u2033>\u2032 ,MSG, \u2032<\/myMsg>\u2032"]},{"entry":["[10]","\u2003Z Z SOAPWS T"]},{"entry":["[11]","\u2003T \u2032<return\u2032"]},{"entry":["[12]","\u2003Z (1+((\u2032<\/\u2032 , 1\u2193T)Z)\u25141)\u2191Z (Z\u2514 \u2032>\u2033)\u2193Z ((TZ)\u2514) \u2193Z"]},{"entry":[{},"\u2207 2002-07-16 13.26.23 (GMT-4)"]},{"entry":[{},"\u2207SOAPWS[\u25a1]\u2207"]},{"entry":["[0]","XML_OUT PARMS SOAPWS XML_IN;ENDPOINT;ACTION;NAMESPACE;"]},{"entry":[{},"METHOD;IDPW;TIMEOUT;PROXY;USEPROXY;PORT;HOST;INDX;LEN;REQ;RC;"]},{"entry":[{},"SOCK;VAR119; SOAP119"]},{"entry":["[1]","A ISSUE A WEB SERVICE REQUEST VIA SOAP HTTP INTERFACE"]},{"entry":["[2]","A PARMS: SOAP ENDPOINT URL, SOAP ACTION, NAMESPACE URI,"]},{"entry":[{},"METHOD NAME, USERID:PW, TIMEOUT [,PROXY URL]"]},{"entry":["[3]","\u2003(ENDPOINT ACTION NAMESPACE METHOD IDPW TIMEOUT PROXY)"]},{"entry":[{},"\u2003 7\u2191PARMS,c\u2033"]},{"entry":["[4]","\u2003 (2\u2260RC 119 SVOFFER VAR119 \u2032SOAP119\u2032)\/ER"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[5]","\u2003USEPROXY 0\u2260\u03c1PROXY ","A USING PROXY?"]},{"entry":["[6]","\u2003PORT 80 ","A DEFAULT EP PORT NUMBER"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[7]","\u2003 ((\u03c1HOST)<INDX (HOST (LEN 1+ENDPOINT\u2514\u2032\/\u2033)\u2191ENDPOINT)\u2514"]},{"entry":[{},"\u2003\u2032:\u2032)\/NOPORT"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[8]","PORT \u203280\u2032 \u25a1EA INDX\u2193HOST ","A EXTRACT EP PORT NUMBER"]},{"entry":["[9]","HOST (INDX\u22121)\u2191HOST ","A AND EP HOST DOMAIN NAME"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[10]","NOPORT:"]},{"entry":["[11]","\u2003REQ (HOST ACTION NAMESPACE METHOD IDPW)SOAPENV XML_IN"]},{"entry":["[12]","\u2003REQ \u2032POST \u2032,(USEPROXY\/\u2032http:\/\/\u2032),((LENx-USEPROXY)\u2193END"]},{"entry":[{},"\u2003POINT),REQ"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[13]","\u2003 (1\u2261\u2191RC SOCK GETSOCK \u2033)\/ER ","A GET A SOCKET"]},{"entry":["[14]","\u2003 (1\u2261\u2191RC BLOCKING SOCK 0)\/ER ","A NON-BLOCKING MODE"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[15]","\u2003 (1\u2261\u2191RC CONNECT SOCK(\u2191USEPROXY\u03c6PORT,80) (\u2191USEPROXY\u03c6HOST"]},{"entry":[{},"\u2003PROXY))\/ER"]},{"entry":["[16]","\u2003 ((1\u2261\u2191RC)v~(,SOCK)\u22612\u2283RC SELECT(,SOCK)\u2032W\u2032 TIMEOUT)\/ER"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["[17]","\u2003 (1\u2261\u2191RC SENDALL SOCK REQ)\/ER ","A HTTP POST"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["[18]","\u2003LEN \u03c1XML_OUT \u2033 ","A INIT XML RESPONSE"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[19]","RECVLOOP:"]},{"entry":["[20]","\u2003 ((1\u2261\u2191RC)v~(,SOCK)\u22611\u2283RC SELECT(,SOCK)\u2032R\u2032 TIMEOUT)\/ER"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[21]","\u2003 (1\u2261\u2191RC RECV SOCK)\/ER ","A READ NEXT CHUCK"]},{"entry":["[22]","\u2003XML_OUT XML_OUT,RC ","A ADD TO RESPONSE BUFF"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["[23]","\u2003 ((LEN \u03c1XML_OUT)\u2260LEN)\/RECVLOOP ","A MORE TO RECEIVE?"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["[24]","\u2003 DISCON ","A COMPLETED, DISCONNECT"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["[25]","ER:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["[26]","\u2003XML_OUT RC ","A RETURN ERROR CODES"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[27]","\u2003 EXIT"]},{"entry":["[28]","DISCON:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["[29]","R\u2003C CLOSE SOCK ","A CLOSE SOCKET"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[30]","EXIT:"]},{"entry":[{},"\u2207|2002-07-16 13.50.03 (GMT-4)"]},{"entry":[{},"\u2207SOAPENV[\u25a1]\u2207"]},{"entry":["[0]","ENV PARMS SOAPENV XML_IN;ACTION;HOST;IDPW;NAMESPACE;METHOD;"]},{"entry":[{},"NL;XML"]},{"entry":["[1]","A GENERATE SOAP ENVELOPE FOR HTTP TRANSPORT"]},{"entry":["[2]","A PARMS: HOST, SOAP ACTION, NAMESPACE URI, METHOD NAME,"]},{"entry":[{},"USERID:PW"]},{"entry":["[3]","\u2003(HOST ACTION NAMESPACE METHOD IDPW) PARMS"]},{"entry":["[4]","\u2003NL \u25a1TC[\u25a1IO+1 2]"]},{"entry":["[5]","\u2003XML \u2032<?xml version=\u2032\u20321,0\u2033 encoding=\u2032\u2032UTF-8\u2033?>\u2032"]},{"entry":["[6]","\u2003XML XML,\u2032<SOAP-ENV:Envelope \u2033"]},{"entry":["[7]","\u2003XML XML,\u2032xmlns:SOAP-ENV=\u201chttp:\/\/schemas.xmlsoap.org\/"]},{"entry":[{},"\u2003soap\/envelope\/\u2033 \u2032"]},{"entry":["[8]","\u2003XML XML,\u2032xmlns:xsi=\u2033http:\/\/www.w3.org\/1999\/XMLSchema-"]},{"entry":[{},"\u2003instance\u2033 \u2032"]},{"entry":["[9]","\u2003XML XML,\u2032xmlns:xsd=\u2033http:\/\/www.w3.org\/1999\/XMLSchema\u2033"]},{"entry":[{},"\u2003>\u2032"]},{"entry":["[10]","\u2003XML XML,\u2032<SOAP-ENV:Body>\u2033"]},{"entry":["[11]","\u2003XML XML,\u2032<ns1:\u2032,METHOD,\u2032 xmlns:ns1=\u2033\u2032,NAMESPACE,\u2032 \u2033 \u2032"]},{"entry":["[12]","\u2003XML XML,\u2032SOAP-ENV:encodingStyle=\u2033http:\/\/schemas.xmlsoap.org\/"]},{"entry":[{},"\u2003soap\/encoding\/\u2033>\u2032"]},{"entry":["[13]","\u2003XML XML,XML_IN"]},{"entry":["[14]","\u2003XML XML,\u2032<\/ns1:\u2032,METHOD,\u2032>\u2032"]},{"entry":["[15]","\u2003XML XML,\u2032<SOAP-ENV:Body>\u2032"]},{"entry":["[16]","\u2003XML XML,\u2032<SOAP-ENV:Envelope>\u2032"]},{"entry":["[17]","\u2003ENV \u2032 HTTP\/1.0\u2032,NL"]},{"entry":["[18]","\u2003 (0\u2260\u03c1IDPW)\/\u2032ENV ENV,\u2032\u2032Authorization: Basic \u2033,(BASE64"]},{"entry":[{},"\u2003_ENCODE IDPW),NL\u2032"]},{"entry":["[19]","\u2003ENV ENV,\u2032Host: \u2032,HOST,NL"]},{"entry":["[20]","\u2003ENV ENV,\u2032Content-Type: text\/xml; charset=utf-8\u2032,NL"]},{"entry":["[21]","\u2003ENV ENV,\u2032Content-Length: \u2032,( \u03c1XML),NL"]},{"entry":["[22]","\u2003ENV ENV,\u2032SOAPAction: \u2033\u2032,ACTION,\u2032 \u2033 \u2032,NL"]},{"entry":["[23]","\u2003ENV ENV,NL,XML"]},{"entry":[{},"\u2207 2001-12-11 23.16.19 (GMT-4)"]},{"entry":[{},"\u2207BASE64_ENCODE[\u25a1]\u2207"]},{"entry":["[0]","BASE64 SPLIT BASE64_ENCODE DATA;\u25a1IO;AV64;BINARY"]},{"entry":["[1]","A Encode using MIME Content-Transfer-Encoding: Base64"]},{"entry":[{},"as specified in RFC 2045."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[2]","A Arguments: ","DATA - Network character data to be encoded"]},{"entry":["[3]","A ","SPLIT - Whether result should be split in to 76 byte records"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[4]","A Result: Encoded data in network character representation"]},{"entry":["[5]","\u2003\u25a1IO 0"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["[6]","A\u25a1ES(1<\u03c1\u03c1DATA)\/5 2 ","A Must be scalar or vector"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["[7]","A\u25a1ES(255v,<\u25a1AV\u2514DATA)\/5 4 ","A Must be single-byte character"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[8]","\u2003 (0=\u03c1DATA)\/0 BASE64 \u2033"]},{"entry":["[9]","\u2003SPLIT \u20320\u2033 \u25a1EA \u2032SPLIT\u2032"]},{"entry":["[10]","A Encoding alphabet"]},{"entry":["[11]","\u2003AV64 \u2032ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu"]},{"entry":[{},"\u2003vwxyz0123456789+\/\u2032"]},{"entry":["[12]","A Convert alphabet to network character representation"]},{"entry":["[13]","\u2003AV64 HTONC AV64"]},{"entry":["[14]","A Ensure data is a vector"]},{"entry":["[15]","\u2003DATA ,DATA"]},{"entry":["[16]","A Convert to bits"]},{"entry":["[17]","\u2003BINARY \u2032B1 1 {circumflex over (\u2009)}\u2032 A RTA DATA"]},{"entry":["[18]","A Reshape to 6 column bit matrix"]},{"entry":["[19]","\u2003BINARY ((\u250c(\u03c1BINARY)\u00f76),6)\u03c1BINARY,6\u03c10"]},{"entry":["[20]","A Add two columns on the left"]},{"entry":["[21]","\u2003BINARY (\u22120 2+\u03c1BINARY)\u2191BINARY"]},{"entry":["[22]","A Convert to alphabet selections"]},{"entry":["[23]","\u2003BASE64 AV64[\u25a1AF \u2032B1 1 {circumflex over (\u2009)}\u2032 ATR,BINARY]"]},{"entry":["[24]","A Pad to multiple of 4 byte length"]},{"entry":["[25]","\u2003BASE64 (4\u00d7\u250c(\u03c1BASE64)\u00f74)\u2191BASE64,HTONC \u2032===\u2032"]},{"entry":["[26]","\u2003 (SPLIT\u22610)\/0"]},{"entry":["[27]","A Partition into 76 byte records"]},{"entry":["[28]","\u2003BASE64 ((\u03c1BASE64)\u03c1(76\u21912,75\u03c11))\u2282BASE64"]},{"entry":["[29]","A Add carriage return line feeds"]},{"entry":["[30]","\u2003BASE64 \u03b5BASE64, \u2033\u2282HTONC \u25a1TC[1 2]"]},{"entry":[{},"\u2207 2002-07-16 13.52.53 (GMT-4)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"The plugin capability of the present invention vastly extends the functionality of the present invention by permitting customized applications to perform function on incoming messages. It further allows the customized applications to interface with the shotgun application by way of a simple interface (API). In addition, the messages forwarded via the API to the customized application(s) use the powerful Channel and Filtering functions available to the Shotgun application.","While the preferred embodiment of the invention has been illustrated and described herein, it is to be understood that the invention is not limited to the precise construction herein disclosed, and the right is reserved to all changes and modifications coming within the scope of the invention as defined in the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 24"}]},"DETDESC":[{},{}]}
