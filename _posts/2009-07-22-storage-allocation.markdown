---
title: Storage allocation
abstract: Techniques for storage allocation of a data record are provided. The techniques include attempting to identify a first location for storing a data record, wherein the data record comprises one or more data record attributes, if the first location is identified, selecting the first location for storing the data record, and if the first location is not identified, identifying a second location for storing the data record using a cost penalty function and selecting the second location for storing the data record based on the cost penalty function.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08122219&OS=08122219&RS=08122219
owner: International Business Machines Corporation
number: 08122219
owner_city: Armonk
owner_country: US
publication_date: 20090722
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EMBODIMENTS"],"p":["Embodiments of the invention generally relate to information technology, and, more particularly, to storage allocation.","When a new record is to be inserted into a table in a database management system (DBMS), a storage manager must find a sufficiently large block of storage for this record. A storage manager has several contradictory goals: to allocate a block quickly, to place related data in some proximity, to avoid or minimize internal and external fragmentation.","To achieve a good speed of record allocation and a low internal fragmentation, some storage managers partition a new chunk of storage into equally sized blocks and use that region of storage only for the allocation of blocks of that particular size. The disadvantage of this approach is external fragmentation, and if the size of such a block is not popular, the remainder of the storage block will not be used.","To achieve a faster query time, some storage managers place related data on the same storage block. The disadvantage of this approach is that if there are not enough related records, some of the storage goes unused. To mitigate this, some storage allocators try to use the remaining storage for records that are not related. However, this will largely reduce the effectiveness and the original purpose of the scheme (that is, to try to provide with a quick access to related records) because the new related records will have to be placed elsewhere. Placing related records together is often called clustering.","Some database records may contain a portion which has a variable length. In addition, to reduce the amount of storage, users may want to compress the data of records. As a result, different records of a relational table (which normally all have the same size) may have a different size in a compressed form depending on the nature (compressibility) of data. Hence, related records may have different sizes and naive storage allocation methods that operate on fixed sized blocks are impractical.","Additionally, existing approaches include a one-dimensional view of available storage properties and\/or attributes for search, that is, only one search property is considered such as either a size or a key value, but not both.","Principles and embodiments of the invention provide techniques for storage allocation. An exemplary method (which may be computer-implemented) for storage allocation of a data record, according to one aspect of the invention, can include steps of attempting to identify a first location for storing a data record, wherein the data record comprises one or more data record attributes, if the first location is identified, selecting the first location for storing the data record, and if the first location is not identified, identifying a second location for storing the data record using a cost penalty function and selecting the second location for storing the data record based on the cost penalty function.","One or more embodiments of the invention or elements thereof can be implemented in the form of a computer product including a tangible computer readable storage medium with computer usable program code for performing the method steps indicated. Furthermore, one or more embodiments of the invention or elements thereof can be implemented in the form of an apparatus including a memory and at least one processor that is coupled to the memory and operative to perform exemplary method steps. Yet further, in another aspect, one or more embodiments of the invention or elements thereof can be implemented in the form of means for carrying out one or more of the method steps described herein; the means can include (i) hardware module(s), (ii) software module(s), or (iii) a combination of hardware and software modules; any of (i)-(iii) implement the specific techniques set forth herein, and the software modules are stored in a tangible computer-readable storage medium (or multiple such media).","These and other objects, features and advantages of the present invention will become apparent from the following detailed description of illustrative embodiments thereof, which is to be read in connection with the accompanying drawings.","Principles of the invention include storage allocation for improving the placement of related data and reducing space fragmentation. Additionally, one or more embodiments of the invention include techniques that a database management system (DBMS) (or other storage management system) can use to allocate storage for a new record that needs to be inserted into a table.","As detailed herein, one or more embodiments of the invention include identifying an ideal location for at least one data record attribute, selecting an ideal location if such a location exists, else identifying an alternative location using a cost of penalty function, and selecting an alternative location for the data records attribute based on the cost penalty function. In contrast to the disadvantages of existing approaches, the techniques described herein allocate the storage based on both record key value and free block size in order to achieve better record clustering as well as lower space fragmentation.","Additionally, one or more embodiments of the invention maintain lists of free blocks for different combinations of block sizes and key values to find ideal location and alternatives. A penalty function is used to evaluate the impact of violating the clustering property, and a scope of search policy is used to guide free space search.","A record to be inserted (for example, into a table) has some \u201ckey\u201d value and some \u201csize.\u201d For a record, there is an ideal location defined by L=L(key, size). One or more embodiments of the invention try to allocate a record at that ideal location L first. If there is no space at location L, instead of allocating a new storage block, the techniques described herein can proceed as follows.","A penalty function f (key, size) is defined whose value is associated with impact on clustering and space fragmentation when a record has to be placed at a location that is not the ideal, by deviating key value or increasing a block size when searching for available space. The value of the penalty function increases as the deviation of the key value increases or the increment of the block size increases.","For example, one or more embodiments of the invention attempt to place a new record next to less related records but still close enough. At the same time, one or more embodiments of the invention explore the possibility of placing a new record into a bigger memory block (some fragmentation) while still maintaining the property of \u201crelated records are together.\u201d When both choices have free space available for record placement, the decision is made based on comparing the values of penalty function for each choice.","The techniques described herein also define a search limit with the constraint f(key,size)<M, where Mis the maximum penalty one is willing to incur when allocating a record at a not ideal location. One or more embodiments of the invention start at location L=L(key, size). Then, one can measure the penalty of placing a new record at L (Key+delta_key, size+delta_size), where delta_key is a small deviation from original key value, and delta_size is an increment in a block size. As such, the best location with the smallest penalty is selected. Also, if too many locations are tried without meeting Mconstraints, one can allocate a new storage block (extend).","As detailed herein, one or more embodiments of the invention provide a balanced approach that allocates storage within certain time constraints, allocates related records relatively close to each other, and keeps storage fragmentation within bounds.","Additionally, one or more embodiments of the invention include data structures. The data structures maintain lists of free blocks for the different combination of block size and key values or key value ranges. The key value ranges can be coarse-grained or fine-grained. Also, the data structures can denote the lists of free blocks, for example, as L(key_i, blockSize_j), i=1 . . . n, j=1 . . . m.","Further, the data structures define a cost-penalty function \u201cf\u201d that factors in parameters such as reduced data clustering and the impact on space fragmentation. f(key,size)=0 when a space is found in the space list that matches both intended inserting key and block size. The value of \u201cf\u201d increases when either the difference of the key (compare to intended inserting key) or difference of block size (compare to intended inserting block size) increases.","The data structures can also define a search constrain M, as well as define a collection C containing pairs of an available search list and the cost value computed from penalty function \u201cf,\u201d and initialize collection C to null.","In one or more embodiments of the invention, a flow of searching free blocks for inserting k=key and s=size can proceed as follows.\n\n","1a) If found, return to caller with the location found.","1b) If not found, remove {L(k,s). f=0} from C, let k=k, s=s and go to step 2.\n\n","2a) If f(k_new,s)>Mand f(k_new,s)>M, go to step 3.","2b) Else: store {L(k_new,s) and f(k_new,s)} to C if f(k_new,s)\u2266M; and store {L(k_new,s) and f(k_new,s)} to C if f(k_new,s)\u2266M, and go to step 4.\n\n","3a) If F=f(k,s_new)>Mlimit, go to step 5.","3b) Else: add L(k_new,s) and f(k_new,s) to C, go to step 4. (In one or more embodiments of the invention, one can limit the search by only storing the smaller f in C between step 2b and step 3b).\n\n",{"@attributes":{"id":"p-0035","num":"0042"},"figref":["FIG. 1","FIG. 1"],"b":["102","104","106","108"]},{"@attributes":{"id":"p-0036","num":"0043"},"figref":"FIG. 1"},"The Y axis of the diagram shows that different keys values are represented across that axis and can optionally be ordered in ascending or descending order. The X axis represents the sizes of storage blocks that range from small to big. When a new block is allocated, one or more embodiments of the invention attempt to pick an \u201cideal location\u201d as shown in . If there is no room there, one or more embodiments of the invention attempt the locations outlined by the dashed lines representing a search space boundary  which deviates along the Y axis (shown as de-clustering ) and also stretches into bigger block sizes (for example, as shown by label ).",{"@attributes":{"id":"p-0038","num":"0045"},"figref":["FIG. 2","FIG. 2"],"b":["202","0","0","204","0","0","204","206","204","234","204","236","0","208","1","1","1","2","2","2"]},"Step  includes determining if f>Mand f>M. If the response to the query in step  is \u201cyes,\u201d one proceeds to step  to determine f (that is, f(k, s_new) (considering, for example, s_new=next block larger than s). If the response to the query in step  is \u201cno,\u201d one proceeds to step  to determine is f\u2266M. If the response to the query in step  is \u201cyes,\u201d one proceeds to step  and stores {L(k_new,s); f} to C. If the response to the query in step  is \u201cno,\u201d one proceeds to step  and determines whether f\u2266M. If the response to the query in step  is \u201cyes,\u201d one proceeds to step  and stores {L(k_new,s); f} to C. If the response to the query in step  is \u201cno,\u201d one proceeds to step  to determine if enough iterations have been performed. If the response to the query in step  is \u201cno,\u201d one proceeds to step  and gets the next element L(k\u2032, s\u2032) in C, and lets k=k\u2032 and s=s\u2032. If the response to the query in step  is \u201cyes,\u201d one proceeds to step  to determine if allocation can be performed. If the response to the query in step  is \u201cno,\u201d one proceeds to step  to allocate space in extend. If the response to the query in step  is \u201cyes,\u201d one proceeds to step  to use L(k,s) with the smallest f in C.","Additionally, step  includes determining if f>M. If the response to the query in step  is \u201cyes,\u201d one proceeds to step . If the response to the query in step  is \u201cno,\u201d one proceeds to step  and adds {L(k,s_new); f} to C and then proceeds to step .",{"@attributes":{"id":"p-0041","num":"0048"},"figref":["FIG. 3","FIG. 3"],"b":["312","1","2","302","0","1","2","310","304","1","2","306","308"]},"As depicted in , the block of storage that is allocated depends on the storage attributes of a record . One attribute can be a record key. Another attribute can be a record size. In one or more embodiments of the invention, there can be more attributes such as, for example, access pattern to a record.","The ideal location is identified by the identifier of an ideal location for storing data  which uses storage allocation attributes  and consults storage metadata  to find an empty block corresponding to storage attributes .","One or more alternate locations are identified by the identifier of an adequate location for storing data , which uses storage allocation attributes  and consults storage metadata  to find an empty block corresponding to storage attributes . The identifier of an adequate location for storing data  uses a cost penalty function via the cost penalty function module  to determine the penalty of allocating a record at a non-ideal location.","The storage location selector module  selects a location to be used for storing a record either based on the location identified by the identifier of an ideal location for storing data  or, if no ideal location is found, then based on the location identified by the identifier of an adequate location for storing data . The storage location selector module  denotes in the storage metadata module  which storage location it selects for storing a record.",{"@attributes":{"id":"p-0046","num":"0053"},"figref":"FIG. 4","b":["402","404","408","406","410","408","410","412"]},{"@attributes":{"id":"p-0047","num":"0054"},"figref":["FIG. 5","FIG. 3"],"b":["502","308"]},"Step  includes if the first location is identified, selecting the first location for storing the data record. Step  includes if the first location is not identified, identifying a second location for storing the data record using a cost penalty function and selecting the second location for storing the data record based on the cost penalty function. Identifying the second location for storing the data record can include identifying a location having key values proximate to a key value of the data record, as well as identifying a location having one or more data blocks capable of accommodating the data record. Also, selecting the second location for storing the data record can include selecting the location to achieve a more efficient record clustering as well as a lower space fragmentation.","Additionally, the techniques depicted in  can include maintaining a list of one or more free blocks, wherein the list of free blocks includes one or more combinations of block sizes and key values.","One or more embodiments of the invention can also incorporate a statistical biasing based on assumptions on block distributions or on the history of block operations encountered so far (that is, observations). For example, if blocks within a certain key cluster are much more prevalent and\/or correlate with certain key sizes, then one or more embodiments of the invention can adapt the free block organization to answer requests for those kinds of blocks faster.","The techniques depicted in  can also, as described herein, provide a system (and be run on a system), wherein the system includes distinct software modules, each of the distinct software modules being embodied on a tangible computer-readable recordable storage medium. The distinct software modules can include, for example, an ideal location identifier module, a storage location selector module, an adequate location identifier module and a cost penalty function module executing on a hardware processor. For example, one or more embodiments of the invention can also include a storage metadata module, which could reside on a storage system and be called via an application programming interface.","Additionally, the techniques depicted in  can be implemented via a computer program product that can include computer usable program code that is stored in a computer readable storage medium in a data processing system, and wherein the computer usable program code was downloaded over a network from a remote data processing system. Also, in one or more embodiments of the invention, the computer program product can include computer usable program code that is stored in a computer readable storage medium in a server data processing system, and wherein the computer usable program code are downloaded over a network to a remote data processing system for use in a computer readable storage medium with the remote system.","A variety of techniques, utilizing dedicated hardware, general purpose processors, firmware, software, or a combination of the foregoing may be employed to implement the present invention or components thereof. One or more embodiments of the invention, or elements thereof, can be implemented in the form of a computer product including a computer usable medium with computer usable program code for performing the method steps indicated. Furthermore, one or more embodiments of the invention, or elements thereof, can be implemented in the form of an apparatus including a memory and at least one processor that is coupled to the memory and operative to perform exemplary method steps.","One or more embodiments can make use of software running on a general purpose computer or workstation. With reference to , such an implementation might employ, for example, a processor , a memory , and an input\/output interface formed, for example, by a display  and a keyboard . The term \u201cprocessor\u201d as used herein is intended to include any processing device, such as, for example, one that includes a CPU (central processing unit) and\/or other forms of processing circuitry. Further, the term \u201cprocessor\u201d may refer to more than one individual processor. The term \u201cmemory\u201d is intended to include memory associated with a processor or CPU, such as, for example, RAM (random access memory), ROM (read only memory), a fixed memory device (for example, hard drive), a removable memory device (for example, diskette), a flash memory and the like. In addition, the phrase \u201cinput\/output interface\u201d as used herein, is intended to include, for example, one or more mechanisms for inputting data to the processing unit (for example, mouse), and one or more mechanisms for providing results associated with the processing unit (for example, printer). The processor , memory , and input\/output interface such as display  and keyboard  can be interconnected, for example, via bus  as part of a data processing unit . Suitable interconnections, for example via bus , can also be provided to a network interface , such as a network card, which can be provided to interface with a computer network, and to a media interface , such as a diskette or CD-ROM drive, which can be provided to interface with media .","Accordingly, computer software including instructions or code for performing the methodologies of the invention, as described herein, may be stored in one or more of the associated memory devices (for example, ROM, fixed or removable memory) and, when ready to be utilized, loaded in part or in whole (for example, into RAM) and executed by a CPU. Such software could include, but is not limited to, firmware, resident software, microcode, and the like.","Furthermore, the invention can take the form of a computer program product accessible from a computer-usable or computer-readable medium (for example, media ) providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description, a computer usable or computer readable medium can be any apparatus for use by or in connection with the instruction execution system, apparatus, or device. The medium can store program code to execute one or more method steps set forth herein.","The medium can be an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system (or apparatus or device) or a propagation medium. Examples of a tangible computer-readable storage medium include a semiconductor or solid-state memory (for example memory ), magnetic tape, a removable computer diskette (for example media ), a random access memory (RAM), a read-only memory (ROM), a rigid magnetic disk and an optical disk (but exclude a propagation medium). Current examples of optical disks include compact disk-read only memory (CD-ROM), compact disk-read\/write (CD-R\/W) and DVD.","A data processing system suitable for storing and\/or executing program code will include at least one processor  coupled directly or indirectly to memory elements  through a system bus . The memory elements can include local memory employed during actual execution of the program code, bulk storage, and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.","Input\/output or I\/O devices (including but not limited to keyboards , displays , pointing devices, and the like) can be coupled to the system either directly (such as via bus ) or through intervening I\/O controllers (omitted for clarity).","Network adapters such as network interface  may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems, cable modem and Ethernet cards are just a few of the currently available types of network adapters.","As used herein, including the claims, a \u201cserver\u201d includes a physical data processing system (for example, system  as shown in ) running a server program. It will be understood that such a physical server may or may not include a display and keyboard.","Computer program code for carrying out operations of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider). One or more embodiments of the invention can also be implemented (partly or entirely) on a storage server.","Embodiments of the invention have been described herein with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a tangible computer-readable storage medium that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable medium produce an article of manufacture including instruction means which implement the function\/act specified in the flowchart and\/or block diagram block or blocks. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The flowchart and block diagrams in the figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","Furthermore, it should be noted that any of the methods described herein can include an additional step of providing a system comprising distinct software modules embodied on a tangible computer readable storage medium; the modules can include any or all of the components shown in . The method steps can then be carried out using the distinct software modules and\/or sub-modules of the system, as described above, executing on a hardware processor. Further, a computer program product can include a tangible computer-readable storage medium with code adapted to be executed to carry out one or more method steps described herein, including the provision of the system with the distinct software modules.","In any case, it should be understood that the components illustrated herein may be implemented in various forms of hardware, software, or combinations thereof; for example, application specific integrated circuit(s) (ASICS), functional circuitry, one or more appropriately programmed general purpose digital computers with associated memory, and the like. Given the teachings of the invention provided herein, one of ordinary skill in the related art will be able to contemplate other implementations of the components of the invention.","At least one embodiment of the invention may provide one or more beneficial effects, such as, for example, allocating storage based on both record key value and free block size in order to achieve better record clustering as well as lower space fragmentation.","It will be appreciated and should be understood that the exemplary embodiments of the invention described above can be implemented in a number of different fashions. Given the teachings of the invention provided herein, one of ordinary skill in the related art will be able to contemplate other implementations of the invention. Indeed, although illustrative embodiments of the present invention have been described herein with reference to the accompanying drawings, it is to be understood that the invention is not limited to those precise embodiments, and that various other changes and modifications may be made by one skilled in the art."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
