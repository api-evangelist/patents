---
title: Bin enabled data object encryption and storage apparatuses, methods and systems
abstract: The BIN ENABLED DATA OBJECT ENCRYPTION AND STORAGE APPARATUSES, METHODS AND SYSTEMS (“MBIN”) transforms bin creation requests, bin templates and unencrypted object storage inputs, using MBIN components, into encrypted object storage bins and encrypted bin objects. A method comprises the creation of encrypted object storage bins, the storage of encrypted bin objects, and an application framework that allows privileged applications to leverage the capabilities of and data stored in the encrypted object storage bins.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09369445&OS=09369445&RS=09369445
owner: Mustbin Inc.
number: 09369445
owner_city: Boston
owner_country: US
publication_date: 20141110
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application is a non-provisional of and claims priority under 35 USC \u00a7119 to: U.S. provisional patent application Ser. No. 61\/902,113 filed Nov. 8, 2013, entitled \u201cBIN ENABLED DATA OBJECT ENCRYPTION AND STORAGE APPARATUSES, METHODS AND SYSTEMS,\u201d.","The entire contents of the aforementioned application(s) are expressly incorporated by reference herein.","This application may contain material that is subject to copyright, mask work, and\/or other intellectual property protection. The respective owners of such intellectual property have no objection to the facsimile reproduction of the disclosure by anyone as it appears in published Patent Office file\/records, but otherwise reserve all rights.","The present innovations generally address the creation, storage, and usage of encrypted objects and object enabled applications. Some embodiments relate to the use of encrypted object storage containers and corresponding data structures in order to guide a user through the creation of encrypted bin objects.","Modern computing platforms generate data in a multitude of different file formats. Data files may contain audio, visual (such as photos, drawings, and\/or the like), textual, or other types of information. Data files may contain or describe personal information that users desire to keep private. Users may access their files and may frequently update the file contents or create different versions of a file. Encryption may be used to convert an ordinary file into a secure file that can only be read by those possessing a \u201ckey.\u201d","The leading number of each reference number within the drawings indicates the figure in which that reference number is introduced and\/or detailed. As such, a detailed discussion of reference number  would be found and\/or introduced in . Reference number  is introduced in , etc.","The BIN ENABLED DATA OBJECT ENCRYPTION AND STORAGE APPARATUSES, METHODS AND SYSTEMS (hereinafter \u201cMBIN\u201d user interface) transform unencrypted objects into secure bin enabled objects, via MBIN components, in response to user bin object storage requests. In some embodiments, this is carried out in real time.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":["101","102","105","108"]},"In alternative embodiments, a bin guide , may be provided by the MBIN in order to facilitate the collection of various bin objects, such as documents photos and\/or the like, that are connected with or associated with a given user task. For example, a bin guide  that is associated with a user wallet bin may contain guide instructions that will direct and\/or facilitate the user's collection of data and the formation of bin objects from items typically in a user's wallet. An example wallet bin guide may prompt the user to photograph both sides of their license, collect important account numbers and\/or customer service data, and\/or the like. By allowing the aggregation of data and leveraging the user device's camera, the MBIN may enable a user to follow best practices in the collection of data connected with a certain activity, a certain location, and\/or the like. Other example bin guides may provide instructions and\/or functionality for aggregating data and creating bin objects associated with, for example, the items in the user's house, a user's car, financial statements associated with a user's account, items that a user has not yet purchased but which the user desires to acquire, individuals that the user has met and\/or interacted with, and\/or the like. In some embodiments, the MBIN may use bin guides that are provided by bin cloud , and\/or developed by other users of the bin cloud. In so doing, user  may leverage knowledge regarding data acquisition best-practices as shared through a community of MBIN users.","In one embodiment, user device  encrypts the content and\/or file generated by a user, e.g. , and stores the encrypted file on the local user device  in a manner such that the information is encrypted while at rest on the user device but may be still easily consumed and\/or used by the user. In some embodiments, user device  may synchronize a bin object that has been encrypted with bin cloud , e.g. . The bin cloud  may contain multiple bins associated with an individual user of the cloud, and\/or one or more bins associated with other MBIN users. In some embodiments of the MBIN a user may designate a bin as a shared bin and such a bin may thereafter be synchronized with other devices and\/or users that are trusted by the primary user. For example, a trusted shared bin user  may utilize a user device  that has been configured to maintain a shared bin, e.g. . In one embodiment, the trusted shared bin user device  may create a public and private encryption key set and provide the public key to user device  and\/or bin cloud , e.g. , for use in encrypting bin objects and\/or the encryption keys associated with encrypted bin objects, that are to be synchronized with the trusted shared bin user device .","In one embodiment, user device  may, in addition to providing an encrypted bin object  to bin cloud in, additionally provide a symmetrical encryption\/decryption key suitable for decrypting encrypted bin object . The symmetrical decryption key provided by user device  may be itself encrypted using the trusted shared bin user device provided public key , e.g. no. In so doing, the user device  may advantageously provide a single version of an encrypted object to bin cloud in for synchronization to a plurality of shared bin user devices, and provide one or more encrypted decryption keys that are each readable by at least one shared bin user device. In some embodiments, bin cloud  may thereafter synchronize the encrypted object  to shared bin . Additionally, bin cloud  may provide the necessary decryption key for encrypted object  but may provide the decryption key in a form that has been encrypted with public key , e.g. . In so doing, user device  and trusted shared bin user device  may synchronize bins, collections of bins, and\/or objects stored in bins utilizing bin cloud in, while not providing access to bin objects to adversaries that may gain access to bin cloud in and\/or that may be able to observe communication between the bin cloud and the various devices that are so connected to enable the bin and bin object synchronization.","In other embodiments of the MBIN, user device  may provide multiple versions of encrypted bin objects for synchronization. For example, in addition to encrypted bin object , a second encryption object representing the same underlying file contents may be generated by user device  using credentials provided by trusted shared bin user device  in order to encrypt the object for synchronization. In so doing, the MBIN may be configured such that each object stored in a shared bin is comprised of multiple encrypted versions each readable only by a single user and\/or a single user device. Furthermore, increased security may be achieved such as when an individual trusted shared user device has been compromised. In such a configuration, the MBIN may enable the rotation of future object encryption keys such that an adversary in possession of a trusted shared bin user device may not have access to future bin synchronized objects.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":["201","202","201","203"]},"In one embodiment, bin cloud  may contain a plurality of bin scenario templates that may be queried dynamically or preloaded onto user device . In other embodiments, scenario templates may be provided by or contained within bin definition templates. The MBIN scenario handler  may parse the user input utilizing an integrated or third-party natural language parsing library to determine a primary scenario handler template , such as a lost wallet handler template. Examples of natural language processing libraries suitable for this processing include Apache OpenNLP, Natural Language Toolkit (NLTK 2.0) and\/or the like. In other embodiments, the user may provide scenario handler input by selecting one or more predefined scenarios from a list. Additionally, in further embodiments, the user may customize their scenario selection utilizing a predefined list of scenario customization capabilities that the scenario handler has been configured to customize based on. An example scenario handler template , substantially in the form of an HTTP(S) POST message including XML-formatted data, is provided below:",{"@attributes":{"id":"p-0033","num":"0032"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"POST \/scenario_handler.php HTTP\/1.1"},{"entry":"Host: localhost"},{"entry":"Content-Type: Application\/XML"},{"entry":"Content-Length: 667"},{"entry":"<?XML version = \u20331.0\u2033 encoding = \u2033UTF-8\u2033?>"},{"entry":"<scenario_handler_template>"},{"entry":"\u2003<timestamp>2025-12-12 15:22:43<\/timestamp>"},{"entry":"\u2003<message_credentials type=\u2033device_api_key\u2033>"},{"entry":"\u2003\u2003<auth_key>h767kwjiwnfe456#niimidrtsxbi<\/auth_key>"},{"entry":"\u2003<\/message_credentials>"},{"entry":"\u2003<scenario>"},{"entry":"\u2003\u2003<trigger>"},{"entry":"\u2003\u2003\u2003<or>"},{"entry":"\u2003\u2003\u2003\u2003<when type=\u2033user_input\u2033 val=\u2033launch_scenario\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003<when type=\u2033receive_bin_app_msg\u2033 val=\u2033walletLost\u2033 \/>"},{"entry":"\u2003\u2003\u2003<\/or>"},{"entry":"\u2003\u2003<\/trigger>"},{"entry":"\u2003\u2003<actions type=\u2033user_guidance\u2033>"},{"entry":"\u2003\u2003\u2003<action id=\u203312\u2033 name=\u2033police_report\u2033"},{"entry":"\u2003\u2003\u2003\u2003type=\u2033todo\u2033"},{"entry":"\u2003\u2003\u2003\u2003message=\u2033File police report\u2033"},{"entry":"\u2003\u2003\u2003\u2003linked_action_ id=\u203317\u2033"},{"entry":"\u2003\u2003\u2003\u2003link_type=\u2033delay_until_bin_snapshot_available\u2033 \/>"},{"entry":"\u2003\u2003<\/actions>"},{"entry":"\u2003\u2003<actions type=\u2033local_bin\u2033>"},{"entry":"\u2003\u2003\u2003<action id=\u203315\u2033 name=\u2033photo_police_report\u2033"},{"entry":"\u2003\u2003\u2003\u2003type=\u2033bin_object_slot\u2033"},{"entry":"\u2003\u2003\u2003\u2003prompt_message=\u2033Photograph completed police report\u2033"},{"entry":"\u2003\u2003\u2003\u2003linked_action_id=\u203312\u2033"},{"entry":"\u2003\u2003\u2003\u2003link_type=\u2033delay_until_complete\u2033 \/>"},{"entry":"\u2003\u2003<\/actions>"},{"entry":"\u2003\u2003<actions type=\u2033bin_cloud\u2033>"},{"entry":"\u2003\u2003\u2003<action id=\u203317\u2033 name=\u2033snapshot_bin\u2033"},{"entry":"\u2003\u2003\u2003\u2003type=\u2033bin_snapshot\u2033"},{"entry":"\u2003\u2003\u2003\u2003param-bin_snapshot_id=\u2033lost_wallet_$DATE\u2033"},{"entry":"\u2003\u2003\u2003\u2003param-bin_auto_share=\u2033true\u2033"},{"entry":"\u2003\u2003\u2003\u2003param-bin_auto_share_delay=\u20332hours\u2033"},{"entry":"\u2003\u2003\u2003\u2003param-bin_auto_share_id=\u2033parse_ocr:police:12\u2033 \/>"},{"entry":"\u2003\u2003<\/actions>"},{"entry":"\u2003\u2003<actions type=\u2033triggered\u2033 delay=\u20331hour\u2033>"},{"entry":"\u2003\u2003\u2003<action id=\u203322\u2033 name=\u2033notify_dmv\u2033"},{"entry":"\u2003\u2003\u2003\u2003type=\u2033notify-GET\u2033"},{"entry":"\u2003\u2003\u2003\u2003description=\u2033Notify DMV\u2033"},{"entry":"\u2003\u2003\u2003\u2003link=\u2033https:\/\/dmv.com\/report\/id=$BIN[\u2032wallet\u2032]"},{"entry":"\u2003\u2003\u2003\u2003\u2003[\u2032license\u2032] [\u2032license_id\u2032]&"},{"entry":"\u2003\u2003\u2003\u2003\u2003state=$BINUSER[\u2032home_state\u2032]\u2033 \/>"},{"entry":"\u2003\u2003\u2003<action id=\u203324\u2033 name=\u2033notify_issuers\u2033"},{"entry":"\u2003\u2003\u2003\u2003type=\u2033invoke_api\u2033"},{"entry":"\u2003\u2003\u2003\u2003api_definition=\u2033card_issuer.wsdl\u2033"},{"entry":"\u2003\u2003\u2003\u2003update_wsdl=\u2033true\u2033"},{"entry":"\u2003\u2003\u2003\u2003method_name=\u2033lostCard\u2033"},{"entry":"\u2003\u2003\u2003\u2003method_param1=$BIN[\u2032wallet\u2032] [\u2032card1\u2032] [\u2032number\u2032] \/>"},{"entry":"\u2003\u2003<\/actions>"},{"entry":"\u2003\u2003<actions>"},{"entry":"\u2003\u2003\u2003..."},{"entry":"\u2003\u2003<\/actions>"},{"entry":"\u2003\u2003<scenario_customizers>"},{"entry":"\u2003\u2003\u2003<if sub_scenario=\u2033traveling:overseas\u2033>"},{"entry":"\u2003\u2003\u2003\u2003<action id=\u203324\u2033 name=\u2033notify_issuers\u2033>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<add method_param2=\u2033rush_expedited_delivery\u2033\/>"},{"entry":"\u2003\u2003\u2003\u2003<\/action>"},{"entry":"\u2003\u2003\u2003<\/if>"},{"entry":"\u2003\u2003\u2003<else>"},{"entry":"\u2003\u2003\u2003\u2003..."},{"entry":"\u2003\u2003\u2003<\/else>"},{"entry":"\u2003\u2003\u2003..."},{"entry":"\u2003\u2003<\/scenario_customizers>"},{"entry":"\u2003<\/scenario>"},{"entry":"<\/scenario_handler_template>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The bin scenario handler template may have multiple actions associated with the invocation of the scenario. By utilizing the encrypted bin object store that may be available on user device , and\/or in a bin cloud in communication with the user device, the scenario handler may utilize not only information that is present on the local user device , but may leverage application programming interfaces available through the bin cloud, objects contained in shared bins, and\/or the like. In one embodiment, the invocation of the bin scenario handler made provide user guidance actions, e.g. , local bin actions, e.g. , bin cloud actions, e.g. , triggered actions, e.g. , and\/or the like.","In one embodiment, user guidance actions  may take the form of instructions to the user of actions to perform, bin objects to create, and\/or other activities to initiate or engage in as a result of the scenario invocation. For example, in a lost wallet scenario, the user guidance action may instruct the user to file a police report and utilize the user device  integrated global positioning system antenna and an automated Internet search to provide the user with instructions and\/or the location of the nearest police station at which to file the report. In one embodiment, local bin actions, e.g. , may include actions that either request or automatically collect information and store it in a local user device bin and\/or synchronize the bin objects to a third-party, to the bin cloud, and\/or the like. For example, in the lost wallet scenario described herein, a local bin action may instruct the user to point their user device camera at a completed police report and may automatically store and\/or parse data contained in the police report for storage as MBIN encrypted object or objects in a local bin. In some embodiments, the cloud actions, e.g. , may include actions that are taken either automatically upon invocation of a bin scenario, or upon instruction of user . For example, a bin cloud action associated with a lost wallet scenario handler may create a snapshot of the user's wallet bin that has been previously synchronized to the bin cloud. In so doing, a record of the contents of the user's wallet at the time of loss may be provided by the MBIN and potentially utilized in establishing a loss record for user . In some embodiments, actions invoked by the bin scenario handler may be contingent upon one another, invoked only after the completion of one or more other actions, and\/or dependent upon a bin scenario template or user defined custom logic. For example, bin cloud action  instructing the bin cloud to preserve a snapshot of the user's wallet bin, may invoke a linked action, e.g. , that automatically shares the contents of the bin snapshot with the police agency the user reports their lost wallet to. However, the user guidance action  to file a police report may itself be contingent upon, connected to and\/or linked with, e.g. , a local bin action  such as the storage of a bin object containing a photo of the please report. In such a scenario, the bin handler may provide functionality to perform optical character recognition upon the photo of the please report in order to determine the appropriate agency the user filed the report with. An example library suitable for performing optical character recognition is Tesseract. As a result of that determination, the bin cloud action, e.g. , may thereafter be successfully invoked to share the wallet snapshot with the previously identified police agency. In such configurations, the MBIN scenario handler may therefore temporarily pause or suspend scenario actions while waiting for other actions within the scenario to complete or reach a determine state such that the relevant action can proceed.","In some embodiments, the bin scenario handler may invoke triggered actions, e.g. . Triggered actions may include actions that are external to the MBIN system yet are invoked by definitions present in a bin scenario handler template, e.g., . For example, a triggered action may be associated with a lost wallet scenario handler, such that the Department of Motor Vehicles in the user's  home country may be notified immediately upon invocation of the lost wallet scenario handler. Similarly, card issuers such as credit card issuers may be notified that the user's payment cards have been lost. The information relevant to triggered actions  need not, in all embodiments, be specified in the definition of the triggered action. For example, a bin scenario handler for a lost wallet that utilizes encrypted bin objects representing card data may be configured to extract the customer service number from each encrypted object which may be a photo of the front and back of the user's payment card, and notify the issuer utilizing such information. In such a configuration, the triggered actions may be defined independent of the bin object contents yet be configured to utilize content that may be stored within bin objects at the time the scenario handler is ultimately invoked. Additionally, in some embodiments, upon scenario invocation one or more transactions may be engaged in by the bin scenario handler on behalf of the user. For example, a user who has recently lost their wallet may be automatically enrolled in a credit report monitoring service as a result of a bin scenario handler. In some embodiments, additional details provided to the bin scenario handler may be utilized to customize a base scenario. As such, bin scenario customizer  may utilize the additionally provided information that a user invoking a base handler such as the lost wallet scenario handler had additional characteristics associated with the invocation such as the user was traveling and the user lost a plane ticket in connection with their lost wallet. The scenario customizer may then utilize bin scenario handler definitions associated with other scenario templates and\/or sub scenario templates associated with the primary bin scenario handler in order to customize the actions that are initiated by the base scenario handler. For example, the bin scenario customizer  may customize triggered action  that requests that card issuers be alerted of the user's card loss upon invocation of the base handler. The bin scenario customizer, with an awareness that the user is additionally traveling, may be configured to request that expedited overseas delivery, e.g. , be requested for delivery of replacement cards to the user while traveling. Furthermore, the bin scenario customizer may utilize the additional scenario invocation information that the user has lost their plane tickets to request a completely new triggered action configured to invoke an airline's lost plane ticket request application programming interface in order to proactively request that the user be issued replacement tickets, and\/or be converted from a physical ticket to an electronic ticket, e.g. . By combining the capabilities of the bin scenario handler  and the bin scenario customizer  with the other MBIN capabilities described herein, such as the ability for a user to source bin scenarios from other users and\/or from the bin cloud , complex scenario templates and bin scenario handlers may be provided to the user preconfigured with options relevant to either the majority of users or to users similarly situated as the current user. For example, the bin cloud may recommend a scenario handler with many scenario customizations relevant to international travel to a user who frequently stores bin objects in their travel information bin that indicates the user frequently travels outside their home country. Similarly, the bin cloud may alternatively provide bin scenario handlers that are simplified and\/or require less user interaction, to users that infrequently travel.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 3","b":["301","301","305","305"]},{"@attributes":{"id":"p-0038","num":"0037"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"POST \/create_secure_storage HTTP\/1.1"},{"entry":"Host: localhost"},{"entry":"Content-Type: Application\/XML"},{"entry":"Content-Length: 667"},{"entry":"<?XML version =\u20331.0\u2033 encoding = \u2033UTF-8\u2033?>"},{"entry":"<create_secure_storage>"},{"entry":"\u2003<timestamp>2025-12-12 15:22:43<\/timestamp>"},{"entry":"\u2003<device>"},{"entry":"\u2003\u2003<device_uid>EHGFYT65GFDCRTESDRXFRDEX<\/device_uid>"},{"entry":"\u2003\u2003<device_pkey>"},{"entry":"\u2003\u2003\u2003B3NzaC1yc2EAAAABIwAAAQEAyyA8wePstP"},{"entry":"\u2003\u2003\u2003C69PeuHFtOwyTecByonsHFAjHbVnZ+h0dp"},{"entry":"\u2003\u2003\u2003omvLZxUtbknNj3+c7MPYKqKBOx9gUKV\/di"},{"entry":"\u2003\u2003\u2003R\/mIDqsb405MlrI1kmNR9zbFGYAAwIH\/Gx"},{"entry":"\u2003\u2003<\/device_pkey>"},{"entry":"\u2003<\/device>"},{"entry":"\u2003<storage>"},{"entry":"\u2003\u2003<password val=\u2033userchosenpassword\u2033 \/>"},{"entry":"\u2003\u2003<security_questions>"},{"entry":"\u2003\u2003\u2003<question num=\u20331\u2033 id=\u2033q76765\u2033>"},{"entry":"\u2003\u2003\u2003\u2003<prompt val=\u2033Favorite color\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003<user_answer val=\u2033blue\u2033 \/>"},{"entry":"\u2003\u2003\u2003<\/question>"},{"entry":"\u2003\u2003\u2003<question num=\u20332\u2033 id=\u2033q942346\u2033>"},{"entry":"\u2003\u2003\u2003\u2003<prompt val=\u2033Favorite color\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003<user_answer val=\u2033blue\u2033 \/>"},{"entry":"\u2003\u2003\u2003<\/question>"},{"entry":"\u2003\u2003\u2003<question num=\u20333\u2033 id=\u2033q878753\u2033>"},{"entry":"\u2003\u2003\u2003\u2003<prompt val=\u2033Favorite color\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003<user answer val=\u2033blue\u2033 \/>"},{"entry":"\u2003\u2003\u2003<\/question>"},{"entry":"\u2003\u2003<\/security_questions>"},{"entry":"\u2003\u2003<secure_storage_settings>"},{"entry":"\u2003\u2003\u2003<!-- allows local credentials to be encrypted using a PIN."},{"entry":"\u2003\u2003\u2003\u2003\u2003if set to false, no local credentials stored -->"},{"entry":"\u2003\u2003\u2003<allow_PINkey_credential_storage val=\u2033true\u2033 \/>"},{"entry":"\u2003\u2003\u2003<!-- specify how much device space bin objects can use -->"},{"entry":"\u2003\u2003\u2003<bin_object_local_cache_size val=\u203310GB\u2033 \/>"},{"entry":"\u2003\u2003\u2003<!-- decrypt and reencrypt objects in bin using a new"},{"entry":"\u2003\u2003\u2003\u2003\u2003key on this schedule -->"},{"entry":"\u2003\u2003\u2003<bin_key_rotation_frequency val=\u2033monthly\u2033 \/>"},{"entry":"\u2003\u2003\u2003<!-- use a different symmetrical key for every object"},{"entry":"\u2003\u2003\u2003\u2003\u2003stored in a bin (instead of one key for each bin) -->"},{"entry":"\u2003\u2003\u2003<unique_key_per_bin_object val=\u2033false\u2033 \/>"},{"entry":"\u2003\u2003<\/secure_storage_settings>"},{"entry":"\u2003\u2003<scenario_handler enabled=\u2033true\u2033>"},{"entry":"\u2003\u2003\u2003<auto_invoke>"},{"entry":"\u2003\u2003\u2003\u2003<condition type=\u2033if\u2033 value=\u2033phone_reported_lost:true\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003<scenario type=\u2033custom\u2033>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<step num=\u20331\u2033 type=\u2033local_bin_action\u2033>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<command val=\u2033delete_all_bins\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<report to=\u2033binserver\u2033 val=\u2033bins_secured\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/step>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<step num=\u20332\u2033 type=\u2033local_bin_action\u2033>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<command val=\u2033remove_pinkey_secured_credentials\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<report to=\u2033binserver\u2033 val=\u2033credentials_secured\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/step>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<step num=\u20333\u2033 type=\u2033bin_cloud_action\u2033>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<command val=\u2033deregister_device\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/step>"},{"entry":"\u2003\u2003\u2003\u2003<\/scenario>"},{"entry":"\u2003\u2003\u2003<\/auto_invoke>"},{"entry":"\u2003\u2003<\/scenario_handler>"},{"entry":"\u2003\u2003<users_to_synchronize_storage_with>"},{"entry":"\u2003\u2003\u2003<user id=\u2033876876654\u2033 name=\u2033Jane\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003relation=\u2033wife\u2033 sync=\u2033all_bins\u2033 \/>"},{"entry":"\u2003\u2003<\/users_to_synchronize_storage_with>"},{"entry":"\u2003\u2003<devices_to_synchronize_storage_with>"},{"entry":"\u2003\u2003\u2003<device id=\u2033AEDFRW\u2033 name=\u2033My iPad\u2033 \/>"},{"entry":"\u2003\u2003\u2003<device id=\u20337656532\u2033 name=\u2033My Work Phone\u2033 \/>"},{"entry":"\u2003\u2003<\/devices_to_synchronize_storage_with>"},{"entry":"\u2003<\/storage>"},{"entry":"<\/create_secure_storage>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In one embodiment, the user device may transmit a secure storage set up request  containing information from create secure storage input  to MBIN server . The secure storage set up request may be generated natively by the user device or, in some embodiments, by an application the user has installed on their user device for purposes of facilitating secure bin object storage. MBIN server  may receive the secure storage set up request  and extract or determine a device identity. Thereafter, the MBIN server may create a device linked certificate that may be used to authenticate and secure future communication with the user device, e.g. . In one embodiment, the device linked certificate may facilitate device to MBIN server communication over Secure Sockets Layer (SSL). In some embodiments, the device certificate may be in the form of the cryptographic public key the may be used by the user device to encrypt future communications directed to MBIN server  and additionally may allow MBIN server  to verify that the user device associated with a future communications or API request is the same device that initiated the initial secure storage set up request. In some embodiments, MBIN server  may generate a device certificate and sign the certificate using a third-party certificate authority such that a chain of certification trust may be independently verified by the user device. In other embodiments, MBIN server  may act as its own certificate authority and therefore sign the created device certificate acting as its own certificate authority. In embodiments where the MBIN server  acts as its own certificate authority, the OpenSSL library may be used to generate a device linked certificate. For example, in acting as its own certificate authority MBIN server  may initially generate a signed root certificate. Example commands for generating a root certificate and signing the generated root certificate, substantially in the form of a series of bash shell commands is:",{"@attributes":{"id":"p-0040","num":"0039"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"MBINSERVER$ openssl genrsa -out MBIN_CA_ROOT_KEY.key 2048"},{"entry":"MBINSERVER$ openssl req -x509 -new -nodes -key"},{"entry":"MBIN_CA_ROOT_KEY.key -days 9125 -out MBIN_CA_SIGNED_ROOT_KEY.pem"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In order to generate a device linked API certificate, in some embodiments the user device may generate a private key and a certificate signing request. Example commands for generating a device private key and a certificate signing request, substantially in the form of a series of bash shell commands is:",{"@attributes":{"id":"p-0042","num":"0041"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"USERDEVICE$ openssl genrsa -out USERDEVICE.key 2048"},{"entry":"USERDEVICE$ openssl req -new -key USERDEVICE.key -out"},{"entry":"USERDEVICE.csr"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In some embodiments, the user device certificate signing request may be provided to MBIN server  as part of secure storage setup request . In some embodiments, MBIN server  may respond to the secure storage set up request  with a device linked API certificate . The device linked API certificate  may be linked to the user device such that another device in possession of the API certificate would not be able to impersonate the authenticated user device. Example commands for generating a device linked API certificate, substantially in the form of a series of bash shell commands is:",{"@attributes":{"id":"p-0044","num":"0043"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"MBINSERVER$ openssl x509 -req -in USERDEVICE.csr -CA"},{"entry":"MBIN_CA_SIGNED_ROOT_KEY.pem -Cakey MBIN_CA_ROOT_KEY.key -"},{"entry":"CAcreateserial -out USERDEVICE_LINKED_API_CERTIFICATE.crt -days"},{"entry":"9125"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In one embodiment, upon receipt of the device linked API certificate , the user device may thereafter generate an asymmetrical encryption key pair, e.g. a public\/private encryption key pair, for use in facilitating MBIN storage operations, e.g., . Example commands for generating a user device public\/private key pair, substantially in the form of a series of bash shell commands is:",{"@attributes":{"id":"p-0046","num":"0045"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"USERDEVICE$ openssl genrsa -out DEVICE_KEY.pem 2048"},{"entry":"USERDEVICE$ openssl rsa -in DEVICE_KEY.pem -pubout >"},{"entry":"DEVICE_PUBLIC_KEY.pub"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The user device may thereafter encrypt the generated private key using a key derivation function and password provided by user  in connection with create secure store input . Additionally, the user device may encrypt the generated private key using, in one embodiment, a string representing a concatenation of one or more user security questions provided in connection with the create secure store input . For example, if user  indicated in connection with create secure storage input , that their favorite color was blue and their high school mascot was an eagle, the user's private key may be encrypted using a key generated from lowercase concatenation of the two answers, e.g., concat (\u201cblueeagle\u201d), and\/or the like. In other embodiments, the user may provide answers to multiple security questions and\/or security questions in addition to those required to generate the encrypted private key. In such embodiments, the MBIN may facilitate the creation of multiple versions of the user's encrypted private key that may be decrypted utilizing various combination of the user's security question answers. For example, if a user provided or was requested to provide answers to three security questions (such as answers X, Y and Z), their private key may be encrypted utilizing multiple permutations of two security question answers, e.g., X+Y, X+Z, Y+Z, and\/or the like. In so doing, the user may later be able to decrypt their security answer encrypted private key using less than all of the answers to the security questions provided by the user. This feature may allow a user to successfully retrieve their private key from an encrypted private key when they have forgotten or otherwise lost some of the information comprising one or more of the security answers utilized in generating the encrypted private key. Example commands for generating private key encryption keys using a user's password input and security question answers in conjunction with a key derivation function, substantially in the form of Objective-C code is:",{"@attributes":{"id":"p-0048","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"#import <CommonCrypto\/CommonKeyDerivation.h>"},{"entry":"\/\/salt array is populated by, for example,"},{"entry":"\/\/SecRandomCopyBytes( ) before generation"},{"entry":"NSData* salt = [self generateSalt256];"},{"entry":"\/\/user password"},{"entry":"NSString* userPass = @\u2033usersecretpassword\u2033;"},{"entry":"NSData* userPassData ="},{"entry":"\u2003\u2003[userPass dataUsingEncoding:NSUTF8StringEncoding];"},{"entry":"\/\/user security questions"},{"entry":"NSString* userSecQ = @\u2033blueeagle\u2033;"},{"entry":"NSData* userSecQData ="},{"entry":"\u2003\u2003[userSecQ dataUsingEncoding:NSUTF8StringEncoding];"},{"entry":"\/\/generate two keys"},{"entry":"\/\/one key using password"},{"entry":"unsigned char keyPass[32];"},{"entry":"CCKeyDerivationPBKDF(kCCPBKDF2,"},{"entry":"\u2003userPassData.bytes,"},{"entry":"\u2003userPassData.length,"},{"entry":"\u2003salt.bytes,"},{"entry":"\u2003salt.length,"},{"entry":"\u2003kCCPRFHmacAlgSHA256,"},{"entry":"\u20032000,"},{"entry":"\u2003keyPass,"},{"entry":"\u200332);"},{"entry":"\/\/one key using security question answers"},{"entry":"unsigned char keySecQ[32];"},{"entry":"CCKeyDerivationPBKDF(kCCPBKDF2,"},{"entry":"\u2003userSecQData.bytes,"},{"entry":"\u2003userSecQData.length,"},{"entry":"\u2003salt.bytes,"},{"entry":"\u2003salt.length,"},{"entry":"\u2003kCCPRFHmacAlgSHA256,"},{"entry":"\u20032000,"},{"entry":"\u2003keySecQ,"},{"entry":"\u200332);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The keys generated using the user's password and security question answers may thereafter, in one embodiment, by used to encrypt the user's private key. By encrypting the generated private key using information provided by and only known to user , the private key may be provided to one or more third parties such as MBIN server  while simultaneously not allowing said third parties access to the underlying private key such that they may decrypt objects encrypted using the generated public key. In so doing, the MBIN facilitates a mechanism by which one or more parties may encrypt data, e.g. using the generated public key, while simultaneously storing an encrypted copy of the private key corresponding to the used public key, and yet be unable to decrypt either the private key or the object encrypted using the public key.","In one embodiment, the user device may store the generated public key  in a local storage in communication with the user device, e.g. . In other embodiments, the encrypted private keys may additionally be stored on the user device local storage. In one embodiment, the user device may transmit the private key encrypted using the selected user password, the private key encrypted using one or more security answers or other data provided by user , a representation of the selected user password input, and the public key corresponding to the encrypted private key to MBIN server , e.g., . An example credential transfer message , substantially in the form of an HTTP(S) POST message including XML-formatted data, is provided below:",{"@attributes":{"id":"p-0051","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"POST \/credential_transfer.php HTTP\/1.1"},{"entry":"Host: www.MBINserver.com"},{"entry":"Content-Type: Application\/XML"},{"entry":"Content-Length: 667"},{"entry":"<?XML version = \u20331.0\u2033 encoding = \u2033UTF-8\u2033?>"},{"entry":"<credential_message>"},{"entry":"\u2003<timestamp>2020-12-12 15:22:43<\/timestamp>"},{"entry":"\u2003<message_credentials type=\u2033device_api_key\u2033>"},{"entry":"\u2003\u2003<auth_key>h767kwjiwnfe456#niimidrtsxbi<\/auth_key>"},{"entry":"\u2003<\/message_credentials>"},{"entry":"\u2003<secure_storage_credentials>"},{"entry":"\u2003\u2003<private_key encrypted_using=\u2033password\u2033>"},{"entry":"\u2003\u2003\u2003lWXFCR+o3FXRitBqxiX1nKhXpHAZsMciLq8V6Rj"},{"entry":"\u2003\u2003\u2003sNAQwdsFvS1VK\/7XAt3FaoJoAsncM1Q9x5+3V0W"},{"entry":"\u2003\u2003\u2003w68\/eIF1zuUFljQJKprrX88XypNDvjYNby6vw\/P"},{"entry":"\u2003\u2003\u2003b0rwert\/En+AW4OZPnTPI89ZPmVMLuayrD2cE86"},{"entry":"\u2003\u2003<\/private_key>"},{"entry":"\u2003\u2003<private_key encrypted_using=\u2033securityAnswers\u2033>"},{"entry":"\u2003\u2003\u2003<key version=\u20331\u2033 key=\u2033ans1+ans2\u2033>"},{"entry":"\u2003\u2003\u2003\u2003XbsLjKIBP\/jaL2w92U72cUmKiXgVFaxP7LgRylF0"},{"entry":"\u2003\u2003\u2003\u2003UHjFoPfbbesYsfdHTgGnbmJDOui+RHGNiLl6f62q"},{"entry":"\u2003\u2003\u2003\u20030mPIZQxyq6SSyqILNiO3IlyrsCSXAerkrdxAAAAFQ"},{"entry":"\u2003\u2003\u2003\u2003D7wt2MuZU27cF4o0d6Ecm\/jl7wAAAIEAvQvsiBcg"},{"entry":"\u2003\u2003\u2003<\/key>"},{"entry":"\u2003\u2003\u2003<keyversion=\u20332\u2033 key=\u2033ans2+ans3\u2033>"},{"entry":"\u2003\u2003\u2003\u2003rzdT6xRLuqNzSGnGuq0ldg6JU+XyHTdNksOBDNz0"},{"entry":"\u2003\u2003\u2003\u2003PU2cCJBh+un9Bf1JrB5H6N9Kz2STJZSZdAAAAIBE"},{"entry":"\u2003\u2003\u2003\u2003G6g8HQEZhYcaDYNk\/23FUBTQp++NVWHcSP6gLGH7"},{"entry":"\u2003\u2003\u2003\u2003KlGAHG+fbaRleH\/1zjvFMTgnhB\/0Y5XHEjE9jhFo"},{"entry":"\u2003\u2003\u2003<\/key>"},{"entry":"\u2003\u2003\u2003..."},{"entry":"\u2003\u2003<\/private_key>"},{"entry":"\u2003\u2003<public_key>"},{"entry":"\u2003\u2003\u2003aC1yc2EAAAABIwAIEArkwv9X8eTVK4F7pMlSt4A"},{"entry":"\u2003\u2003\u20035pWoiakFkZG9BjydOJPGH0RFNAy1QqIWBGWv7vS"},{"entry":"\u2003\u2003\u20035K2tr+EEO+F8WL2Y\/jK4ZkQgoi+n7DWQVOHsRij"},{"entry":"\u2003\u2003\u2003cS3LvtO+Np4yjXYWJKh29JL6GHcp8o7+YKyVUMB"},{"entry":"\u2003\u2003<\/public_key>"},{"entry":"\u2003\u2003<password preprocessing=\u2033hashed_by_user_device\u2033>"},{"entry":"\u2003\u2003\u2003E83CYDhK4AhabnltFE5ZbefwXW4FoKOO+n8AdDfSPas8"},{"entry":"\u2003\u2003<\/password>"},{"entry":"\u2003<\/secure_storage_credentials>"},{"entry":"<\/credential_message>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In some embodiments, MBIN server  may utilize a database and\/or escrow storage to store the multiple versions of the encrypted user private key, the user's public key, and\/or the like for future use in MBIN operations.","In some embodiments, the key and credential transfer  may include a clear text, encrypted, and\/or hashed version of the password selected by user  and used in one of the provided private key encryptions. In embodiments where the user password is provided unencrypted, MBIN server  may utilize a hashing function to generate a storable representation of the user password suitable for authenticating the user via a different bin access vector, such as a bin web portal, and\/or the like. In embodiments where the user password provided, e.g. , has already been encrypted and\/or hashed by the user device, MBIN server  may additionally encrypt and\/or hash the password (e.g., encrypt a hash, hash a hash, encrypt a ciphertext, and\/or the like). In so doing, adversaries that were able to intercept key and data transfer  may be prevented from asserting themselves as user  and\/or the user device.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 4","FIG. 17"],"b":["401","404","402","405","402","402","402"]},"In one embodiment, upon successful authentication of the user's account utilizing the hashed password, the MBIN server  may retrieve previously deposited encrypted private keys associated with the user which have been encrypted using the user's password, e.g., . Furthermore, a device linked API certificate may be retrieved. In other embodiments, the device linked API certificate may be regenerated based on a known device identifier or other device specific information such that each secure object storage device login request generates a unique device linked API certificate.","MBIN server  may then reply with a generated device linked API certificate and the encrypted private key for the user, e.g. . The user device may then create an authenticated local device bin storage session and\/or create required session artifacts, e.g. , in order to instantiate the device's login to the secure object storage. Further detail with respect to creating an authenticated local device bin storage session may be found with respect to , e.g., BDSES component .","In one embodiment, the user device may store a local pin enabled encryption API certificate, e.g. , and a local pin enabled encrypted private key, e.g. , in a user device local storage . In so doing, the user may, in some embodiments, utilize their pin to quickly gain access to encrypted objects using their device without being required to undergo a full device authentication and\/or login because the necessary credentials have been PIN secured on the user's device in connection with the secure object storage device session creation.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 5","b":["500","501","502","504","503","502","506","507","502","501","507","502","509","503","510","511"]},"A user PIN selection input, e.g. , may be utilized in connection with a cryptographic key derivation function in order to generate a key suitable for encrypting object access keys while at rest on the user secure storage device. Further detail regarding generating encryption keys using a PIN input may be found with respect to . In one embodiment, a storage device may query an encryption security database for the minimum requirements necessary for use of a key derivation function for pin enabled storage, e.g., . For example, the minimum requirement for a derivation function may require a minimum number of rounds during the generation of the encryption key from the PIN input. If a key derivation function is not available that meets the required security parameters, e.g. , the user secure storage device may then initiate a no-device-artifact storage session as described above. In so doing, even when PIN enabled storage is not allowed or not available to a user secure storage device, access to encrypted bin objects may be maintained through communication with MBIN server  and\/or the like. In embodiments where a suitable key derivation function is available, e.g. , the derivation function may be executed on the user PIN selection input to derive a PIN enabled encryption key, e.g. .","In one embodiment, the user secure storage device  may then decrypt the received encrypted private key using the password input provided by user . If the received encrypted private key is not decryptable using the password input, the user may be prompted to reenter their password. In other embodiments, the user may provide answers to their account security questions established upon secure storage account creation. In still other embodiments, the user may initiate an MBIN server facilitated password reset, e.g. , either independently or in connection with the provision of their security question answers.","If the encrypted private key is successfully decrypted using the user password input, e.g. , the private key may be immediately recrypted using the PIN enabled encryption key generated earlier, e.g. . The user secure storage device  may furthermore encrypt the received API certificate using the derived PIN enabled encryption key, e.g. . The private key and the API certificate may, as a result, be locally encrypted on the user secure storage device using the generated PIN encryption key. In some embodiments, the user secure storage device  may store the PIN encrypted private key and the PIN encrypted API certificate in the local device's storage area, e.g. , such as on the local device application accessible memory storage. Upon successfully generating the session artifacts, the user's secure storage device may notify MBIN server  that the device bin storage session has been successfully authenticated, e.g. .",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 6","FIG. 2"],"b":"601"},"In one embodiment, user  may provide a bin creation input , specifying the parameters to be used in creating a bin. The user input may be in the form of a tap, a double tap, a swipe, a gesture, a QR code scan, a device motion, a device location indication including, in some embodiments, an automated location indication such as a user device GPS signal, and\/or the like, e.g. . The user device may thereafter retrieve a bin template corresponding to the bin creation input. An example bin template , substantially in the form of an HTTP(S) POST message including XML-formatted data, is provided below:",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"POST \/create_bin_from_bin_template.php HTTP\/1.1"},{"entry":"Host: localhost"},{"entry":"Content-Type: Application\/XML"},{"entry":"Content-Length: 667"},{"entry":"<?XML version = \u20331.0\u2033 encoding = \u2033UTF-8\u2033?>"},{"entry":"<create_bin_ from_template>"},{"entry":"\u2003<timestamp>2025-12-12 15:22:43<\/timestamp>"},{"entry":"\u2003<message_credentials type=\u2033device_api_key\u2033>"},{"entry":"\u2003\u2003<auth_key>h767kwjiwnfe456#niimidrtsxbi<\/auth_key>"},{"entry":"\u2003<\/message_credentials>"},{"entry":"\u2003<bin_template id=\u20338765\u2033 name=\u2033wallet\u2033 type=\u2033JSON\u2033"},{"entry":"\u2003\u2003\u2003\u2003bin_object_redundancy_req=\u20333-copies\u2033>"},{"entry":"{"},{"entry":"\u2003\u2033id\u2033: \u2033com.mustbin.bin.wallet\u2033,"},{"entry":"\u2003\u2033name\u2033: \u2033Wallet\u2033,"},{"entry":"\u2003\u2033desc\u2033: \u2033Capture all of your cards and personal"},{"entry":"\u2003\u2003\u2003\u2003information in your wallet\u2033,"},{"entry":"\u2003\u2033icon\u2033: \u2033BinTypeWalletIcon.png\u2033,"},{"entry":"\u2003\u2033SupportedDocTemplates\u2033: ["},{"entry":"\u2003\u2003\u2033com.mustbin.doc.card.credit\u2033,"},{"entry":"\u2003\u2003\u2033com.mustbin.doc.card.id\u2033,"},{"entry":"\u2003\u2003\u2033com.mustbin.doc.card.business\u2033,"},{"entry":"\u2003\u2003\u2033com.mustbin.doc.card.insurance\u2033,"},{"entry":"\u2003\u2003\u2033com.mustbin.doc.card.rewards\u2033,"},{"entry":"\u2003\u2003\u2033com.mustbin.doc.card.socialsecurity\u2033,"},{"entry":"\u2003\u2003\u2033com.mustbin.doc.card.id.license\u2033,"},{"entry":"\u2003\u2003\u2033com.mustbin.doc.multiImage.receipt\u2033,"},{"entry":"\u2003\u2003\u2033com.mustbin.doc.multiImage.passport\u2033,"},{"entry":"\u2003\u2003\u2033com.mustbin.doc.photo\u2033,"},{"entry":"\u2003\u2003\u2033com.mustbin.doc.text.note\u2033"},{"entry":"\u2003],"},{"entry":"\u2003\u2033SupportedActionTemplates\u2033: [\u2033com.mustbin.action.lostwallet\u2033],"},{"entry":"\u2003\u2033GuideTitle\u2033: \u2033Capture your wallet\u2033,"},{"entry":"\u2003\u2033GuideDescription\u2033: \u2033This will help you capture"},{"entry":"\u2003\u2003\u2003\u2003the most important items in your wallet.\u2033,"},{"entry":"\u2003\u2033Steps\u2033: ["},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2033StepType\u2033: \u2033Intro\u2033,"},{"entry":"\u2003\u2003\u2003\u2033DocTemplate\u2033: \u2033com.mustbin.doc.card.credit\u2033,"},{"entry":"\u2003\u2003\u2003\u2033Title\u2033: \u2033Capture Your Wallet\u2033,"},{"entry":"\u2003\u2003\u2003\u2033Subtitle\u2033: \u2033A guide to help you capture the"},{"entry":"\u2003\u2003\u2003\u2003most important items in your wallet.\u2033,"},{"entry":"\u2003\u2003\u2003\u2033DefaultImage\u2033: \u2033WalletGuideIcon.png\u2033,"},{"entry":"\u2003\u2003\u2003\u2033PreviousButtonHidden\u2033: \u2033true\u2033,"},{"entry":"\u2003\u2003\u2003\u2033CaptureButtonHidden\u2033: \u2033true\u2033,"},{"entry":"\u2003\u2003\u2003\u2033NextButtonHidden\u2033:\u2033true\u2033,"},{"entry":"\u2003\u2003\u2003\u2033HiddenInSummary\u2033: \u2033true\u2033"},{"entry":"\u2003\u2003},"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2033StepType\u2033: \u2033Multiple\u2033,"},{"entry":"\u2003\u2003\u2003\u2033DocTemplate\u2033: \u2033com.mustbin.doc.card.credit\u2033,"},{"entry":"\u2003\u2003\u2003\u2033Title\u2033: \u2033Credit Cards\u2033,"},{"entry":"\u2003\u2003\u2003\u2033Subtitle\u2033: \u2033Tap the + button below to capture a card.\u2033,"},{"entry":"\u2003\u2003\u2003\u2033CaptureButtonHidden\u2033: \u2033false\u2033"},{"entry":"\u2003\u2003},"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2033StepType\u2033: \u2033Multiple\u2033,"},{"entry":"\u2003\u2003\u2003\u2033DocTemplate\u2033: \u2033com.mustbin.doc.card.insurance\u2033,"},{"entry":"\u2003\u2003\u2003\u2033Title\u2033: \u2033Insurance Cards\u2033,"},{"entry":"\u2003\u2003\u2003\u2033Subtitle\u2033: \u2033Tap the + button below to capture a card.\u2033,"},{"entry":"\u2003\u2003\u2003\u2033CaptureButtonHidden\u2033: \u2033false\u2033"},{"entry":"\u2003\u2003},"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003..."},{"entry":"\u2003\u2003}"},{"entry":"\u2003]"},{"entry":"}"},{"entry":"\u2003<\/bin_ template>"},{"entry":"\u2003<bin template id=\u20338623\u2033 name=\u2033contacts\u2033 type=\u2033JSON\u2033>"},{"entry":"\u2003\u2003..."},{"entry":"\u2003<\/bin>"},{"entry":"\u2003<bin template id=\u20334633\u2033 name=\u2033house_contents\u2033 type=\u2033XML\u2033>"},{"entry":"\u2003\u2003..."},{"entry":"\u2003<\/bin>"},{"entry":"\u2003..."},{"entry":"<\/create_bin_from_template>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In one embodiment, the user device may then generate an encryption key for use in encrypting bin objects for storage, e.g., . In one implementation, the bin key may be in the form of an AES-256 encryption key that can be used to block encrypt and decrypt bin objects. For example, the bin key may utilize a block cipher in converting an unencrypted bin file object into an encrypted bin file object. The user device may thereafter encrypt the generated bin encryption key utilizing the previously generated public key. In so doing, the MBIN may facilitate a capability such that a bin encryption key can only be decrypted with possession of the user's private key. Said differently, because bin objects may be encrypted utilizing a symmetrical bin key, and the symmetrical bin key is itself encrypted using the public key from a public-private key pair, an adversary would be required to obtain access to the user's private key in order to recover a bin's bin key and therefore be able to decrypt encrypted bin objects. In still further implementations, bins may contain encrypted bin objects where each bin object is encrypted using a different bin key, a per object key, and\/or the like. In MBIN configurations where bin objects are synchronized to other devices, bins may be configured such that bin objects are encrypted multiple times using different credentials such that the bin key used to encrypt a bin object on a given user device will not decrypt that same object in the form synchronized to another device. In one embodiment, the user device may store the encrypted bin key on a user device local storage , e.g. .","In one embodiment, the user device may generate a bin creation request including bin metadata and the encrypted bin key and transmit the request to MBIN server , e.g. . An example bin creation request , substantially in the form of an HTTP(S) POST message including XML-formatted data, is provided below:",{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"POST \/do_create_bin.php HTTP\/1.1"},{"entry":"Host: www.MBINserver.com"},{"entry":"Content-Type: Application\/XML"},{"entry":"Content-Length: 667"},{"entry":"<?XML version = \u20331.0\u2033 encoding = \u2033UTF-8\u2033?>"},{"entry":"<bin_ creation_request>"},{"entry":"\u2003<timestamp>2025-12-12 15:22:43<\/timestamp>"},{"entry":"\u2003<message_credentials type=\u2033device_api_key\u2033>"},{"entry":"\u2003\u2003<auth_key>h767kwjiwnfe456#niimidrtsxbi<\/auth_key>"},{"entry":"\u2003<\/message_credentials>"},{"entry":"\u2003<bin id=\u20331\u2033>"},{"entry":"\u2003\u2003<bin_keys>"},{"entry":"\u2003\u2003\u2003<key type=\u2033encrypted_binkey\u2033 pubKey=\u2033user:self\u2033>"},{"entry":"\u2003\u2003\u2003\u2003uysLjKiuhiuh2w92U72cUmKiXgVFaxP7LgRylF0"},{"entry":"\u2003\u2003\u2003\u200387jFoPfbbesYsfdHTgGnbmJDOui+RHGNiLl6f62q"},{"entry":"\u2003\u2003\u2003\u2003cfPIZQxyq6SSyqLNiO3IlyrsCSXAerkrgfd4rAFQ"},{"entry":"\u2003\u2003\u2003<\/key>"},{"entry":"\u2003\u2003\u2003<key type=\u2033encrypted_binkey\u2033 pubKey=\u2033shared:user[7657]\u2033>"},{"entry":"\u2003\u2003\u2003\u2003..."},{"entry":"\u2003\u2003\u2003<\/key>"},{"entry":"\u2003\u2003\u2003<key type=\u2033encrypted_binkey\u2033 pubKey=\u2033shared:device[3232]\u2033>"},{"entry":"\u2003\u2003\u2003\u2003..."},{"entry":"\u2003\u2003\u2003<\/key>"},{"entry":"\u2003\u2003<\/bin_keys>"},{"entry":"\u2003\u2003<bin_definition base_bin_template=\u2033wallet\u2033>"},{"entry":"\u2003\u2003\u2003<alter key=\u2033bin_object_redundancy_req\u2033 value=\u20334-copies\u2033>"},{"entry":"\u2003\u2003\u2003<add type=\u2033template item\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003format=\u2033JSON\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003after_location=\u2033Root:Steps:Title[\u2032Insurance Cards\u2032]\u2033>"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2033StepType\u2033: \u2033Multiple\u2033,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2033DocTemplate\u2033:\u2033com.mustbin.doc.card.rewards\u2033,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2033Title\u2033: \u2033Rewards Cards\u2033,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2033Subtitle\u2033: \u2033Tap the + button below to"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003capture a card.\u2033,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2033CaptureButtonHidden\u2033: \u2033false\u2033"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003<\/add>"},{"entry":"\u2003\u2003<\/bin_definition>"},{"entry":"\u2003<\/bin>"},{"entry":"\u2003<bin>"},{"entry":"\u2003\u2003..."},{"entry":"\u2003<\/bin>"},{"entry":"<\/bin_creation_request>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The MBIN server may thereafter verify that the user and\/or user device has permission to create the requested bin and apportion or allocate storage necessary for the bin and\/or bin objects, e.g. . MBIN server  may then store the encrypted bin key and the bin metadata  in an MBIN database and\/or escrow storage .",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 7","b":["701","706"]},"In one embodiment, the user device may request from a user local storage  an encrypted private key and encrypted bin key, e.g. . If available, the local storage may return an encrypted private key and an encrypted bin key for use in encrypting the object to be stored in a bin, e.g. . The user device may thereafter utilize the provided PIN in a key derivation function to generate a decryption key from the provided PIN and thereafter utilize the generated PIN key to decrypt the received encrypted private key, e.g. . Further detail with respect to PIN key generation using a PIN input may be found herein and particularly with respect to . Upon obtaining access to the decrypted private key, the user device may then utilize the private key to decrypt the encrypted bin key, e.g. . The user device may thereafter utilize the decrypted bin key, which in some embodiments is a symmetrical encryption key, for use in encrypting the provided object for bin storage, e.g. . An example library suitable for encrypting a bin object using a bin key is Apple's Common Crypto, e.g., CC_crypto( ) library.","In some embodiments, the encrypted bin object may thereafter be stored in the user's local device storage until access to MBIN server  may be established. In some MBIN configurations, access to the MBIN server  may be time-limited, data rate throttled, and\/or otherwise configured to optimize MBIN performance. The user device may provide the encrypted object as part of an encrypted object storage request, e.g. . An example encrypted object storage request , substantially in the form of an HTTP(S) POST message including XML-formatted data, is provided below:",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"POST \/object storage.php HTTP\/1.1"},{"entry":"Host: www.MBINserver.com"},{"entry":"Content-Type: Application\/XML"},{"entry":"Content-Length: 667"},{"entry":"<?XML version = \u20331.0\u2033 encoding = \u2033UTF-8\u2033?>"},{"entry":"<encrypted_object_storage_request>"},{"entry":"\u2003<timestamp>2025-12-12 15:22:43<\/timestamp>"},{"entry":"\u2003<message_credentials type=\u2033device_api_key\u2033>"},{"entry":"\u2003\u2003<auth_key>h767kwjiwnfe456#niimidrtsxbi<\/auth_key>"},{"entry":"\u2003<\/message_credentials>"},{"entry":"\u2003<object id=\u203316545623\u2033 num=\u20331\u2033 count=\u20332\u2033>"},{"entry":"\u2003\u2003<bin_destination_id value=\u2033654323\u2033 \/>"},{"entry":"\u2003\u2003<object_encryption_parameters>"},{"entry":"\u2003\u2003\u2003<bin_key id=\u2033765654\u2033 \/>"},{"entry":"\u2003\u2003\u2003<encryption type=\u2033AES256\u2033 \/>"},{"entry":"\u2003\u2003\u2003<private_key user_id=\u2033654\u2033 \/>"},{"entry":"\u2003\u2003<\/object_encryption_parameters>"},{"entry":"\u2003\u2003<object_metadata>"},{"entry":"\u2003\u2003\u2003<type val=\u2033image\u2033 \/>"},{"entry":"\u2003\u2003\u2003<format val=\u2033PNG\u2033 \/>"},{"entry":"\u2003\u2003\u2003<user_description val=\u2033My license front\u2033 \/>"},{"entry":"\u2003\u2003<\/object_metadata>"},{"entry":"\u2003\u2003<object_content type=\u2033contentstream\u2033>"},{"entry":"\u2003\u2003\u2003\u2030PNGbw\u2022{hacek over (S)}UDs\u2009 \u2009{circumflex over (\u2009)}{\u00c3{hacek over (z)}\u00d8\u00a9\u00e4\u00e3\u2009 \u2009f\u2009 \u20099\u00b1\u00f5P\u00f4H\u00f4H\u212b+buq"},{"entry":"\u2003\u2003\u2003\u00f38\u2009 \u2009\u2032\u00b6\u2009 \u2009\u00d8\u00f4c\u2009 \u2009\u2020X}\u2033\u20221{hacek over (Z)}\u00ff\u00b0\u2033\u00e3Ol\u2030\u00cd\u00cf\u00cb<\u00d8\u2033p{hacek over (Z)}\u00a6<\u00f7\u2009 \u2009"},{"entry":"\u2003\u2003\u20036c\u00c3\u00ed\u00e0\u00d8\u2009 \u2009D\u00f4iRli\u00f9=\u00e6\u00ff\u00ef\u2009 \u2009-\u2009{umlaut over (\u2009)}\u00fb\u00f9\u00d8x\u2032=\u00ce[\u00dbr\u20335sj"},{"entry":"\u2003\u2003\u2003\u00ee\u00e4s\u00a9\u00f5\u00fa\u00d8\u2033\u00d6\u00ecD{grave over (\u2009)}\u00d8\u2009 \u2009\u00c1\u00b1\u00e8\u2009 \u2009\u00f9xt6w\u00a6s\u00bc\u00d2\u00d2YD\u2032\u00e16\u2032d"},{"entry":"\u2003\u2003<\/object_content>"},{"entry":"\u2003<\/object>"},{"entry":"\u2003<object id=\u203387654344\u2033 num=\u20332\u2033 count=\u20332\u2033>"},{"entry":"\u2003\u2003..."},{"entry":"\u2003<\/object>"},{"entry":"<\/encrypted_object_storage_request>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In some embodiments, as part of the bin object storage request , user  may provide additional metadata that describes the bin object and which may not be encrypted. In such an MBIN configuration, limited metadata regarding bin encrypted objects may be obtained even in the absence of the appropriate bin object decryption credentials. MBIN server  may then process the bin storage request, e.g. . Further detail with respect to processing bin storage requests may be found with respect to , e.g. BSR component .","In one embodiment, MBIN server  may store bin object metadata and the storage location of the encrypted bin object determined during processing of the bin storage request in MBIN database , e.g. . Furthermore, MBIN server  may provide a bin storage request including the encrypted bin object and an identifier with which the object is to be associated, e.g. , to MBIN object server . In some MBIN configurations, multiple MBIN object servers may be utilized to replicate the encrypted bin object. In one embodiment, MBIN object server  will store the encrypted object including the unique object identifier, e.g. .",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIGS. 8A-B","FIG. 17"],"b":["800","801","803","802","804","805","809","807","801","808","806","802","809","802","810","801"]},"If the MBIN server determines that a user bin storage quota has not been exhausted, e.g. , the server may thereafter apportion storage for the bin object, e.g. , such as by determining the encrypted or decrypted size of the object being stored and apportioning a proportional amount of bin storage. The MBIN server may generate a unique global identifier for the object, e.g. . The object identifier may be unique across all MBIN managed bins, or unique only to a user or a bin. The MBIN server may then update the bin database using the received bin object metadata and the object unique identifier, e.g. .","In one embodiment, the MBIN server may query an endpoint database containing information about bin storage object servers and user bin redundancy requirements. User bin redundancy requirements may be set on a per bin, a per user, a per device, and\/or the like and may define a number of object storage servers which must contain copies of any bin objects stored in a given bin. Bin redundancy object requirements may be employed in order to protect against MBIN object server failure, with more bin object copies being used for sensitive or highly valuable bin objects. If enough object storage servers are not available to meet the bin redundancy requirements, e.g. , the MBIN server may determine whether the bin permissions allow a temporarily reduced bin redundancy requirements. The temporarily reduced bin redundancy requirement may allow the storage of a bin object in less than the required number of bin object storage servers for a temporary period of time, such as may be the case when object storage servers are undergoing maintenance or otherwise unavailable but are expected to be available within a time quantum. If the bin permissions do not allow temporarily reduced bin redundancy requirements, e.g. , the MBIN server may generate a bin redundancy requirements error  and transmit the error to user secure storage device  for display, e.g. . If user bin permissions do allow temporarily reduced bin redundancy requirements, e.g. , the MBIN server may set bin redundancy requirements to the number of available bin object storage servers and set a follow-up trigger configured to initiate the storage of the bin object on additional servers after a time quantum, e.g. . If the MBIN is configured to allow a user device to directly transfer encrypted object from the device to an object storage server, e.g. , the MBIN server may, while the number of object storage servers storing the encrypted object is less than the bin redundancy requirement, initiate or instruct the device to transfer the encrypted object directly to one or more object storage servers, e.g. . The user secure storage device  may thereafter transfer the encrypted object to the designated object storage server, e.g. , and return the transfer status to MBIN server . In other embodiments, if direct device to object storage server transfer support is not enabled, e.g. , and while the count of the number of object storage servers containing the encrypted bin object is less than the bin redundancy requirement the MBIN server may itself transfer the object to one or more object storage servers, e.g. . The logic flow continues with respect to .","With respect to , in one embodiment, if the encrypted object storage request is a bin that is shared with one or more devices and\/or one or more users, e.g. , then the MBIN server may determine whether the appropriate bin encryption key has been encrypted with the target devices or target users public key and transmitted to the target user or target device, e.g. . If the target's bin encryption key has not been forwarded then MBIN server  may request a bin key share distribution refresh  via user secure storage device . The user secure storage device may thereafter encrypt the appropriate bin key with each shared target device's or shared target user's public key, e.g. . MBIN server  may thereafter transmit the encrypted bin key to the target devices or target users as well as store a copy in an escrow database in communication with the MBIN server, e.g. . In one embodiment, the MBIN server may store the encrypted object in a bin associated with the shared user or a shared device. In so doing, objects stored in one bin may be automatically synchronized with additional bins by the MBIN without providing the MBIN server with access to the unencrypted objects or to credentials utilized by any device and\/or any user to access the various versions of the encrypted bin object. In one embodiment, MBIN server  may then run post encryption object bin storage processing on a bins that have been changed, e.g. . The post encryption object processing may include the rotation of device keys, the rotation of API access keys, the decryption and re-encryption of bins or bin objects, and\/or the like. Upon completion of any required post object bin storage processing, MBIN server  may generate a bin storage request success message, e.g. , and transmit the success message to user secure storage device  for display, e.g. .",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 9","b":["905","904","905","906","902","906","903","903","902","906"]},{"@attributes":{"id":"p-0080","num":"0079"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"POST \/bin_object_retrieve.php HTTP\/1.1"},{"entry":"Host: www.MBINserver.com"},{"entry":"Content-Type: Application\/XML"},{"entry":"Content-Length: 667"},{"entry":"<?XML version = \u20331.0\u2033 encoding = \u2033UTF-8\u2033?>"},{"entry":"<bin_object_retrieval_request>"},{"entry":"\u2003<timestamp>2025-12-12 15:22:43<\/timestamp>"},{"entry":"\u2003<message_credentials type=\u2033device_api_key\u2033>"},{"entry":"\u2003\u2003<auth_key>h767kwjiwnfe456#niimidrtsxbi<\/auth_key>"},{"entry":"\u2003<\/message_credentials>"},{"entry":"\u2003<bin_objects count=\u20332\u2033>"},{"entry":"\u2003\u2003<bin_object uid=\u203316545623-grfdrtere\u2033 \/>"},{"entry":"\u2003\u2003<bin_object uid=\u203387654344-defrszxjy\u2033 \/>"},{"entry":"\u2003<\/bin_objects>"},{"entry":"<\/bin_object_retrieval_request>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In one embodiment, MBIN server  may initiate a bin retrieval object request  to MBIN server . The MBIN object server may thereafter retrieve the encrypted object and transmit the encrypted object as an object retrieval response to the user device, e.g. . An example encrypted object retrieval response , substantially in the form of an HTTP(S) POST message including XML-formatted data, is provided below:",{"@attributes":{"id":"p-0082","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"POST \/bin_object_retrieval_response.php HTTP\/1.1"},{"entry":"Host: www.userdevice.com"},{"entry":"Content-Type: Application\/XML"},{"entry":"Content-Length: 667"},{"entry":"<?XML version = \u20331.0\u2033 encoding = \u2033UTF-8\u2033?>"},{"entry":"<bin_object_retrieval_response>"},{"entry":"\u2003<timestamp>2025-12-12 15:22:43<\/timestamp>"},{"entry":"\u2003<message credentials type=\u2033device_api_key\u2033>"},{"entry":"\u2003\u2003<auth_key>h767kwjiwnfe456#niimidrtsxbi<\/auth_key>"},{"entry":"\u2003<\/message_credentials>"},{"entry":"\u2003<encrypted_bin_object id=\u203316545623-grfdrtere\u2033"},{"entry":"\u2003\u2003\u2003\u2003num=\u20331\u2033 count=\u20332\u2033>"},{"entry":"\u2003\u2003<object_metadata>"},{"entry":"\u2003\u2003\u2003<type val=\u2033image\u2033 \/>"},{"entry":"\u2003\u2003\u2003<format val=\u2033PNG\u2033 \/>"},{"entry":"\u2003\u2003\u2003<user_description val=\u2033My license front\u2033 \/>"},{"entry":"\u2003\u2003<\/object_metadata>"},{"entry":"\u2003\u2003<object_content type=\u2033contentstream\u2033>"},{"entry":"\u2003\u2003\u2003\u2030E3UDs\u2009 \u2009{circumflex over (\u2009)} {\u00c3{hacek over (z)}\u00d8\u00a9\u00e4\u00e3\u2009 \u2009f\u2009 55\u20099\u00b1\u00f5P\u00f4H\u00f4H\u212b+buq"},{"entry":"\u2003\u2003\u2003\u00f38\u2009 \u2009\u2032\u00b6\u2009 \u2009\u00d8\u00f4c\u2009 \u2009\u2020X}\u2033\u20221{hacek over (Z)}\u00ff\u00b0\u2033\u00e3Ol\u2030\u00cd\u00cf\u00cb<\u00d8\u2033p{hacek over (Z)}\u00a6<\u00f7\u2009 \u2009"},{"entry":"\u2003\u2003\u20036c\u00c3\u00ed\u00e0\u00d8\u2009 \u2009\u00f4iRli\u00f9=\u00e6\u00ff\u00ef\u2009 \u2009-{umlaut over (\u2009)}\u00fb\u00f9\u00d8x'=\u00ce[\u00dbr\u20335sj"},{"entry":"\u2003\u2003\u2003\u00ee\u00e4s\u00a9\u00f5\u00fa\u00d8\u2033\u00d6\u00ecD{grave over (\u2009)}\u00d8\u2009 \u2009\u00c1\u00b1\u00e8\u2009 \u2009\u00f9xt6w\u00a6s\u00bc\u00d2\u00d2YD\u2032a6\u2032d"},{"entry":"\u2003\u2003<\/object_content>"},{"entry":"\u2003<\/encrypted_bin_object>"},{"entry":"\u2003<encrypted_bin_object id=\u203387654344-defrszxjy\u2033"},{"entry":"\u2003\u2003\u2003\u2003num=\u20332\u2033 count=\u20332\u2033>"},{"entry":"\u2003\u2003..."},{"entry":"\u2003<\/encrypted_bin_object>"},{"entry":"<\/bin_object_retrieval_response>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In embodiments where PIN-based storage has been enabled or authorized, the user device may initiate an encrypted private key and an encrypted bin key request  to user device local storage . In response, to local storage may provide the user's encrypted private key, which in some embodiments is encrypted using the PIN-based key, and the encrypted bin key corresponding to the encrypted object bin, e.g. . In one embodiment, the user device may use the user PIN to generate a PIN key, such as by utilizing a key derivation function. The user device may then utilize the pin key to decrypt the received private key, e.g. . Upon retrieval of the user's private key the user device may thereafter decrypt the bin key utilizing the user's private key, e.g. . Upon obtaining the decrypted bin key, the user device may finally decrypt the received encrypted object to produce the unencrypted bin object in a usable form, e.g. , such as a photo for viewing or a document for editing.",{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 10","b":["1001","1006","1003","1006"]},{"@attributes":{"id":"p-0085","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"POST \/bin_application_setup.php HTTP\/1.1"},{"entry":"Host: www.server.com"},{"entry":"Content-Type: Application\/XML"},{"entry":"Content-Length: 667"},{"entry":"<?XML version = \u20331.0\u2033 encoding = \u2033UTF-8\u2033?>"},{"entry":"<bin_application_setup>"},{"entry":"\u2003<timestamp>2025-12-12 15:22:43<\/timestamp>"},{"entry":"\u2003<message_credentials type=\u2033device_api_key\u2033>"},{"entry":"\u2003\u2003<auth_key>h767kwjiwnfe456#niimidrtsxbi<\/auth_key>"},{"entry":"\u2003<\/message_credentials>"},{"entry":"\u2003<bin_application name=\u2033bin_object_comments\u2033>"},{"entry":"\u2003\u2003<attach_to bin_id=\u2033765543\u2033 bin_name=\u2033work_bin\u2033 \/>"},{"entry":"\u2003\u2003<interations>"},{"entry":"\u2003\u2003\u2003<menu location=\u2033bin_object_view_menu\u2033>"},{"entry":"\u2003\u2003\u2003\u2003<item value=\u2033Add Comment\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<type val=\u2033text_input\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003name=\u2033the_comment\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003prompt=\u2033Enter your bin doc comment:\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<after_invoke"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003action=\u2033create_object\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003object_name=$APP[\u2032uid\u2032+the_comment]"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003object_bin=$APP[shared_app_bin]"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003encrypt_object_with=$APP[shared_app_bin] [key]"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003object_type=\u2033application_message\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003object_format=\u2033JSON\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003<\/item>"},{"entry":"\u2003\u2003\u2003\u2003<item value=\u2033View Comment\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<type val=$APP[bin] [object_id] \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<after_invoke"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003action=\u2033display_from_app_storage\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003storage name=\u2033comment_storage\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003object_name=\u2033prefix:\u2033+$BIN[$OBJ] [\u2032uid\u2032] \/>"},{"entry":"\u2003\u2003\u2003\u2003<\/item>"},{"entry":"\u2003\u2003\u2003\u2003<item value=\u2033Remove Comment\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<type val=\u2033select\u2033 name=\u2033comment_to_remove\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003populate_from=\u2033comment_storage\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003return=\u2033comment_text\u2033>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<after_invoke"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003action=\u2033remove_object\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003object_name=$APP[\u2032uid\u2032+comment_to_remove]"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003object_bin=$APP[shared_app_bin]"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003encrypt_object_with=$APP[shared_app_bin] [key]"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003object_type=\u2033application_message\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003object_format=\u2033JSON\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003<\/item>"},{"entry":"\u2003\u2003\u2003<\/menu>"},{"entry":"\u2003\u2003<\/interactions>"},{"entry":"\u2003\u2003<monitor_for_changes val=$APP[shared_app_bin] \/>"},{"entry":"\u2003\u2003<application_storage name=\u2033comment_storage\u2033>"},{"entry":"\u2003\u2003\u2003<for type=\u2033inbound_encrypted_app_object\u2033>"},{"entry":"\u2003\u2003\u2003\u2003<action type=\u2033retrieve_object\u2033 \/>"},{"entry":"\u2003\u2003\u2003\u2003<action type=\u2033decrypt_object\u2033"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003key=$APP[shared_app_bin] [key] \/>"},{"entry":"\u2003\u2003\u2003\u2003<action type=\u2033update_storage\u2033 val=\u2033comment_storage\u2033\/>"},{"entry":"\u2003\u2003\u2003<\/for>"},{"entry":"\u2003\u2003\u2003<for type=\u2033outbound_encrypted_app_object\u2033>"},{"entry":"\u2003\u2003\u2003\u2003<action type=\u2033update_display\u2033 \/>"},{"entry":"\u2003\u2003\u2003<\/for>"},{"entry":"\u2003\u2003<\/application_storage>"},{"entry":"\u2003<\/bin_application>"},{"entry":"<\/bin_application_setup>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The user device may thereafter instantiate the bin application and\/or attach the instantiated bin application to an already instantiated bin, e.g. . In embodiments where multiple user devices may communicate using the capabilities of a bin application, MBIN server  may transmit additional encrypted bin application setup definitions, e.g. , to other user devices, e.g. , which may themselves instantiate copies of the bin application, e.g. ","In one embodiment, user device  may load an application interaction definition template , such as may be provided in an encrypted bin application setup definition . The application interaction definition template may specify the user interface and\/or a modified user interface as well as commands executable by the user device and\/or a MBIN application executing on the user device and providing MBIN capabilities. In one embodiment, user  may provide a bin application input . A bin application input may be any of the user comment or post associated with a bin object, a user chat request and\/or message to another user of a shared bin, a direct message between users associated with the MBIN service, and\/or the like. User device  may thereafter convert the bin application input, which may be in the form of an item selection, a string representing the desired user message, a user device location, and\/or the like, and convert the application communication object into a bin object. In some embodiments, the bin object may be substantially in the form of a text file containing a JSON structure parseable by the instantiated application and defined in the encrypted bin application setup definition , . Further detail regarding a suitable parser for use in instantiating the application interaction definition templates may be found with respect to . In one embodiment, the application communication bin object may be encrypted, marked as a non-user object such that the object may be stored in a bin associated with the application but will otherwise be hidden from users listing objects contained within the bin, and stored in an associated application bin storage area, e.g. . In one embodiment, user device  may transmit an application bin object storage request  to MBIN server . In alternative embodiments, user device  may directly transmit the application bin object storage request to user device . For example, direct user device to user device transfers may be enabled when user devices are in a given proximity to one another. Additionally, the encrypted application bin object may be transferred via the storage request as defined in an chained series of transmission vectors. For example, the chained transmission series may specify that initially the user device shall attempt to deliver the encrypted bin object associated with the instantiated application by a direct user device to user device transfer. In instances where the destination user device is not available, the user device may attempt to store the application bin object on other devices providing MBIN services which may themselves then forward the encrypted object to the destination device when available. The chain series may further specify that where the destination device is not available, and no other MBIN devices that may be able to provide an assisted object transfer are available, an MBIN server  may be utilized for processing the application bin object storage request . In one embodiment, MBIN server  may provide the received application bin object to user device , e.g. . User device  may receive the application bin object and store the object in a shared bin. An application associated with the shared bin may thereafter decrypt the object and invoke a handler associated with the application processing received application messages, e.g. . In one embodiment, the bin application may then provide an output to user , e.g. . In so doing, applications executing on multiple user devices may be facilitated in communicating on behalf of the user and\/or in support of bin object services through the use of the MBIN.","Applications, or bin applications, may leverage the various capabilities of the MBIN. Bin applications may utilize any MBIN capability described herein including secure bin object storage, the synchronization of bin objects between multiple bin datastores, the decryption of bin objects, and conversion or transcoding of bin object content, the creation of alternate bin objects, the versioning of bin objects, and\/or the like. In some embodiments, bin applications may themselves create new bins (e.g., create new bin object datastores). The bin applications may then monitor the bin objects stored in the bin, add or remove objects from the bin, trigger actions based upon bin contents, and\/or the like.","For example, in one embodiment, a bin application may be configured to synchronize user content stored on a cloud storage service such as DropBox\u2122 with a designated bin. The bin application may be configured to periodically download the content of a user's cloud storage and create bin objects corresponding to the contents therein. In one embodiment, the bin application may thereafter delete the files that were synchronized into the bin from the remote cloud storage provider. In so doing, a bin application can automatically secure files previously stored unencrypted on cloud storage services (e.g., by creating encrypted bin objects from the files and removing the unencrypted files from the cloud storage service).","In one embodiment, a bin application may create a bin that is not available to an MBIN user in the same manner as a normal bin described herein. For example, a bin created by a bin application may have its visibility set to hidden and therefore not appear to a user in a list of available bins. Such a configuration of the MBIN may allow bin applications to provide enhanced services to the user. For example, a hidden bin can be utilized as the storage backend for a bin application providing secure messaging services to the user. The bin application may hide the created bin from the user and instead define a custom interface that maps the user's interactions onto base MBIN operations. For example, a secure messaging bin application may describe (e.g., via a bin application definition file) a plurality of user interface screens including interfaces to add a message recipient (e.g., create a shared-bin with the same secure bin application running on a second user's device), to send a secure message (e.g., create an encrypted bin object describing the content of one or more messages between bin application users and synchronize the encrypted bin object to bins associated with the other bin application users), to delete a message (e.g., to delete an encrypted bin object corresponding to a message), and\/or the like. As illustrated, a bin application can define interactions to include a number of atomic MBIN operations.","A bin application may, in one configuration, utilize a bin whereby all objects stored in the bin are encrypted using the same symmetric block encryption key (for example, an AES key). In the example messaging system described above, this symmetric key may be made available to each side of the messaging conversation through the use of a shared bin. In such a configuration, upon generation, the symmetric block encryption key may be encrypted using multiple public keys. One of the public keys would correspond to the user or device associated with the local bin application and the encrypted key would be stored locally and\/or on a bin datastore synchronization server such that the key is available in the future to the local bin application. Other of the public keys may correspond to a user or device associated with the bin application running on a remote device and in communication with a remote synchronized bin. Once encrypted, the encrypted symmetric block encryption key would then be synchronized to the remote device for use decrypting the contents of the shared bin objects encrypted by the bin application under the given key.","In other configurations of the MBIN, a bin may contain sub-bins. The sub-bins may be logical sub-bins such that they are in fact discrete bins themselves (e.g., not contained by a parent bin) but are presented to and available to a bin application as sub-bins (e.g., forming a hierarchy of bins). In still other configurations, the sub-bins may in fact be bin objects of their parent bins. Sub-bins, whether actual or logical, may be utilized by bin applications to provide enhanced security for bin application functions. For example, the messaging application described above may utilize sub-bins such that a new sub-bin is created periodically by the bin application. A new sub-bin may be created, for example, after a user messaging session expires. A user messaging session expiration may be determined by, for example, the elapsing of a time quantum, the sending of a certain number of messages, and\/or the like. In high security configurations of the MBIN, sub-bins may be created for each discrete operation of a bin application. For example, the secure messaging bin application may create a sub-bin for every secure message sent. In so doing, the MBIN may be conceptually thought of as providing bin object level encryption (or, any multiple of bin objects up to and including all objects in a given bin). Regardless of the binning strategy employed by a bin application, the MBIN features discussed herein may be utilized by bins, sub-bins, or any combination therein.","Although the bin application described above was described as utilizing the MBIN shared bin functionality to provide a secure channel between two device users of the MBIN, alternate configurations of the MBIN may utilize a third-party server (or the MBIN itself) as the recipient of shared bin objects. For example, a bin application that transcodes media files between different file formats may create a bin that is paired with the provider of the bin application's servers. The MBIN would then synchronize any bin objects placed in the shared bin with the bin application provider's servers which would transcode the bin object and then reverse synchronize a new bin object from the output. Such a bidirectional synchronization capability, combined with the MBIN's ability to allow bin applications to suppress or hide bins and define custom bin user interfaces (as described herein) allow the MBIN to provide a highly flexible platform for third-party bin applications. In fact, in some configurations, the MBIN may itself act as a third-party bin application provider. For example, the MBIN may offer enhanced bin features such as bin object versioning, enhanced bin object metadata, and\/or the like by itself using the bin application platform described herein.",{"@attributes":{"id":"p-0094","num":"0093"},"figref":"FIG. 11","b":["1101","1102","1103","1103"]},{"@attributes":{"id":"p-0095","num":"0094"},"figref":"FIG. 12","b":["1202","1201","1203","1203","1201","1204","1205","1206"]},{"@attributes":{"id":"p-0096","num":"0095"},"figref":"FIG. 13","b":["1301","1302","1303","1302","1304","1305","1302","1306","1307","1308","1309","1308","1309","1301","1301","1301","1311","1312"]},"Bin server  may additionally contain copies of the AES keys associated with shared bins whereby the AES keys have been encrypted with the public key of each shared user and\/or device, e.g. . The public keys associated with users and\/or devices as well as document metadata that may reference unique object identifiers may be stored in a database in communication with bin server , e.g. . In one embodiment, encrypted bin objects may be stored in a server data store, e.g. , with a unique encrypted object identifier as the filename.",{"@attributes":{"id":"p-0098","num":"0097"},"figref":"FIG. 14","b":["1401","1402","1403","1404","1405"]},{"@attributes":{"id":"p-0099","num":"0098"},"figref":"FIG. 15","b":["1501","1502","1503","1504"]},{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 16","b":["1601","1601","1602","1603"],"i":"a"},{"@attributes":{"id":"p-0101","num":"0100"},"figref":["FIG. 17","FIG. 5"],"b":["1701","702","703","701","702","703","1741","502","1741","501","502"]},"Typically, users, which may be people and\/or other systems, may engage information technology systems (e.g., computers) to facilitate information processing. In turn, computers employ processors to process information; such processors  may be referred to as central processing units (CPU). One form of processor is referred to as a microprocessor. CPUs use communicative circuits to pass binary encoded signals acting as instructions to enable various operations. These instructions may be operational and\/or data instructions containing and\/or referencing other instructions and data in various processor accessible and operable areas of memory  (e.g., registers, cache memory, random access memory, etc.). Such communicative instructions may be stored and\/or transmitted in batches (e.g., batches of instructions) as programs and\/or data components to facilitate desired operations. These stored instruction codes, e.g., programs, may engage the CPU circuit components and other motherboard and\/or system components to perform desired operations. One type of program is a computer operating system, which, may be executed by CPU on a computer; the operating system enables and facilitates users to access and operate computer information technology and resources. Some resources that may be employed in information technology systems include: input and output mechanisms through which data may pass into and out of a computer; memory storage into which data may be saved; and processors by which information may be processed. These information technology systems may be used to collect data for later retrieval, analysis, and manipulation, which may be facilitated through a database program. These information technology systems provide interfaces that allow users to access and operate various system components.","In one embodiment, the MBIN controller  may be connected to and\/or communicate with entities such as, but not limited to: one or more users from user input devices ; peripheral devices ; an optional cryptographic processor device ; and\/or a communications network .","Networks are commonly thought to comprise the interconnection and interoperation of clients, servers, and intermediary nodes in a graph topology. It should be noted that the term \u201cserver\u201d as used throughout this application refers generally to a computer, other device, program, or combination thereof that processes and responds to the requests of remote users across a communications network. Servers serve their information to requesting \u201cclients.\u201d The term \u201cclient\u201d as used herein refers generally to a computer, program, other device, user and\/or combination thereof that is capable of processing and making requests and obtaining and processing any responses from servers across a communications network. A computer, other device, program, or combination thereof that facilitates, processes information and requests, and\/or furthers the passage of information from a source user to a destination user is commonly referred to as a \u201cnode.\u201d Networks are generally thought to facilitate the transfer of information from source points to destinations. A node specifically tasked with furthering the passage of information from a source to a destination is commonly called a \u201crouter.\u201d There are many forms of networks such as Local Area Networks (LANs), Pico networks, Wide Area Networks (WANs), Wireless Networks (WLANs), etc. For example, the Internet is generally accepted as being an interconnection of a multitude of networks whereby remote clients and servers may access and interoperate with one another.","The MBIN controller  may be based on computer systems that may comprise, but are not limited to, components such as: a computer systemization  connected to memory .","A computer systemization  may comprise a clock , central processing unit (\u201cCPU(s)\u201d and\/or \u201cprocessor(s)\u201d (these terms are used interchangeable throughout the disclosure unless noted to the contrary)) , a memory  (e.g., a read only memory (ROM) , a random access memory (RAM) , etc.), and\/or an interface bus , and most frequently, although not necessarily, are all interconnected and\/or communicating through a system bus  on one or more (mother)board(s)  having conductive and\/or otherwise transportive circuit pathways through which instructions (e.g., binary encoded signals) may travel to effectuate communications, operations, storage, etc. The computer systemization may be connected to a power source ; e.g., optionally the power source may be internal. Optionally, a cryptographic processor  and\/or transceivers (e.g., ICs)  may be connected to the system bus. In another embodiment, the cryptographic processor and\/or transceivers may be connected as either internal and\/or external peripheral devices  via the interface bus I\/O. In turn, the transceivers may be connected to antenna(s) , thereby effectuating wireless transmission and reception of various communication and\/or sensor protocols; for example the antenna(s) may connect to: a Texas Instruments WiLink WL1283 transceiver chip (e.g., providing 802.1 in, Bluetooth 3.0, FM, global positioning system (GPS) (thereby allowing MBIN controller to determine its location)); Broadcom BCM4329FKUBG transceiver chip (e.g., providing 802.11n, Bluetooth 2.1+EDR, FM, etc.); a Broadcom BCM4750IUB8 receiver chip (e.g., GPS); an Infineon Technologies X-Gold 618-PMB9800 (e.g., providing 2G\/3G HSDPA\/HSUPA communications); and\/or the like. The system clock typically has a crystal oscillator and generates a base signal through the computer systemization's circuit pathways. The clock is typically coupled to the system bus and various clock multipliers that will increase or decrease the base operating frequency for other components interconnected in the computer systemization. The clock and various components in a computer systemization drive signals embodying information throughout the system. Such transmission and reception of instructions embodying information throughout a computer systemization may be commonly referred to as communications. These communicative instructions may further be transmitted, received, and the cause of return and\/or reply communications beyond the instant computer systemization to: communications networks, input devices, other computer systemizations, peripheral devices, and\/or the like. It should be understood that in alternative embodiments, any of the above components may be connected directly to one another, connected to the CPU, and\/or organized in numerous variations employed as exemplified by various computer systems.","The CPU comprises at least one high-speed data processor adequate to execute program components for executing user and\/or system-generated requests. Often, the processors themselves will incorporate various specialized processing units, such as, but not limited to: integrated system (bus) controllers, memory management control units, floating point units, and even specialized processing sub-units like graphics processing units, digital signal processing units, and\/or the like. Additionally, processors may include internal fast access addressable memory, and be capable of mapping and addressing memory  beyond the processor itself; internal memory may include, but is not limited to: fast registers, various levels of cache memory (e.g., level 1, 2, 3, etc.), RAM, etc. The processor may access this memory through the use of a memory address space that is accessible via instruction address, which the processor can construct and decode allowing it to access a circuit path to a specific memory address space having a memory state. The CPU may be a microprocessor such as: AMD's Athlon, Duron and\/or Opteron; ARM's application, embedded and secure processors; IBM and\/or Motorola's DragonBall and PowerPC; IBM's and Sony's Cell processor; Intel's Celeron, Core (2) Duo, Itanium, Pentium, Xeon, and\/or XScale; and\/or the like processor(s). The CPU interacts with memory through instruction passing through conductive and\/or transportive conduits (e.g., (printed) electronic and\/or optic circuits) to execute stored instructions (i.e., program code) according to conventional data processing techniques. Such instruction passing facilitates communication within the MBIN controller and beyond through various interfaces. Should processing requirements dictate a greater amount speed and\/or capacity, distributed processors (e.g., Distributed MBIN), mainframe, multi-core, parallel, and\/or super-computer architectures may similarly be employed. Alternatively, should deployment requirements dictate greater portability, smaller Personal Digital Assistants (PDAs) may be employed.","Depending on the particular implementation, features of the MBIN may be achieved by implementing a microcontroller such as CAST's R8051XC2 microcontroller; Intel's MCS 51 (i.e., 8051 microcontroller); and\/or the like. Also, to implement certain features of the MBIN, some feature implementations may rely on embedded components, such as: Application-Specific Integrated Circuit (\u201cASIC\u201d), Digital Signal Processing (\u201cDSP\u201d), Field Programmable Gate Array (\u201cFPGA\u201d), and\/or the like embedded technology. For example, any of the MBIN component collection (distributed or otherwise) and\/or features may be implemented via the microprocessor and\/or via embedded components; e.g., via ASIC, coprocessor, DSP, FPGA, and\/or the like. Alternately, some implementations of the MBIN may be implemented with embedded components that are configured and used to achieve a variety of features or signal processing.","Depending on the particular implementation, the embedded components may include software solutions, hardware solutions, and\/or some combination of both hardware\/software solutions. For example, MBIN features discussed herein may be achieved through implementing FPGAs, which are a semiconductor devices containing programmable logic components called \u201clogic blocks\u201d, and programmable interconnects, such as the high performance FPGA Virtex series and\/or the low cost Spartan series manufactured by Xilinx. Logic blocks and interconnects can be programmed by the customer or designer, after the FPGA is manufactured, to implement any of the MBIN features. A hierarchy of programmable interconnects allow logic blocks to be interconnected as needed by the MBIN system designer\/administrator, somewhat like a one-chip programmable breadboard. An FPGA's logic blocks can be programmed to perform the operation of basic logic gates such as AND, and XOR, or more complex combinational operators such as decoders or mathematical operations. In most FPGAs, the logic blocks also include memory elements, which may be circuit flip-flops or more complete blocks of memory. In some circumstances, the MBIN may be developed on regular FPGAs and then migrated into a fixed version that more resembles ASIC implementations. Alternate or coordinating implementations may migrate MBIN controller features to a final ASIC instead of or in addition to FPGAs. Depending on the implementation all of the aforementioned embedded components and microprocessors may be considered the \u201cCPU\u201d and\/or \u201cprocessor\u201d for the MBIN.","The power source  may be of any standard form for powering small electronic circuit board devices such as the following power cells: alkaline, lithium hydride, lithium ion, lithium polymer, nickel cadmium, solar cells, and\/or the like. Other types of AC or DC power sources may be used as well. In the case of solar cells, in one embodiment, the case provides an aperture through which the solar cell may capture photonic energy. The power cell  is connected to at least one of the interconnected subsequent components of the MBIN thereby providing an electric current to all subsequent components. In one example, the power source  is connected to the system bus component . In an alternative embodiment, an outside power source  is provided through a connection across the I\/O  interface. For example, a USB and\/or IEEE 1394 connection carries both data and power across the connection and is therefore a suitable source of power.","Interface bus(ses)  may accept, connect, and\/or communicate to a number of interface adapters, conventionally although not necessarily in the form of adapter cards, such as but not limited to: input output interfaces (I\/O) , storage interfaces , network interfaces , and\/or the like. Optionally, cryptographic processor interfaces  similarly may be connected to the interface bus. The interface bus provides for the communications of interface adapters with one another as well as with other components of the computer systemization. Interface adapters are adapted for a compatible interface bus. Interface adapters conventionally connect to the interface bus via a slot architecture. Conventional slot architectures may be employed, such as, but not limited to: Accelerated Graphics Port (AGP), Card Bus, (Extended) Industry Standard Architecture ((E)ISA), Micro Channel Architecture (MCA), NuBus, Peripheral Component Interconnect (Extended) (PCI(X)), PCI Express, Personal Computer Memory Card International Association (PCMCIA), and\/or the like.","Storage interfaces  may accept, communicate, and\/or connect to a number of storage devices such as, but not limited to: storage devices , removable disc devices, and\/or the like. Storage interfaces may employ connection protocols such as, but not limited to: (Ultra) (Serial) Advanced Technology Attachment (Packet Interface) ((Ultra) (Serial) ATA(PI)), (Enhanced) Integrated Drive Electronics ((E)IDE), Institute of Electrical and Electronics Engineers (IEEE) 1394, fiber channel, Small Computer Systems Interface (SCSI), Universal Serial Bus (USB), and\/or the like.","Network interfaces  may accept, communicate, and\/or connect to a communications network . Through a communications network , the MBIN controller is accessible through remote clients (e.g., computers with web browsers) by users . Network interfaces may employ connection protocols such as, but not limited to: direct connect, Ethernet (thick, thin, twisted pair 10\/100\/1000 Base T, and\/or the like), Token Ring, wireless connection such as IEEE 802.11a-x, and\/or the like. Should processing requirements dictate a greater amount speed and\/or capacity, distributed network controllers (e.g., Distributed MBIN), architectures may similarly be employed to pool, load balance, and\/or otherwise increase the communicative bandwidth required by the MBIN controller. A communications network may be any one and\/or the combination of the following: a direct interconnection; the Internet; a Local Area Network (LAN); a Metropolitan Area Network (MAN); an Operating Missions as Nodes on the Internet (OMNI); a secured custom connection; a Wide Area Network (WAN); a wireless network (e.g., employing protocols such as, but not limited to a Wireless Application Protocol (WAP), I-mode, and\/or the like); and\/or the like. A network interface may be regarded as a specialized form of an input output interface. Further, multiple network interfaces  may be used to engage with various communications network types . For example, multiple network interfaces may be employed to allow for the communication over broadcast, multicast, and\/or unicast networks.","Input Output interfaces (I\/O)  may accept, communicate, and\/or connect to user input devices , peripheral devices , cryptographic processor devices , and\/or the like. I\/O may employ connection protocols such as, but not limited to: audio: analog, digital, monaural, RCA, stereo, and\/or the like; data: Apple Desktop Bus (ADB), IEEE 1394a-b, serial, universal serial bus (USB); infrared; joystick; keyboard; midi; optical; PC AT; PS\/2; parallel; radio; video interface: Apple Desktop Connector (ADC), BNC, coaxial, component, composite, digital, Digital Visual Interface (DVI), high-definition multimedia interface (HDMI), RCA, RF antennae, S-Video, VGA, and\/or the like; wireless transceivers: 802.11a\/b\/g\/n\/x; Bluetooth; cellular (e.g., code division multiple access (CDMA), high speed packet access (HSPA(+)), high-speed downlink packet access (HSDPA), global system for mobile communications (GSM), long term evolution (LTE), WiMax, etc.); and\/or the like. One typical output device may include a video display, which typically comprises a Cathode Ray Tube (CRT) or Liquid Crystal Display (LCD) based monitor with an interface (e.g., DVI circuitry and cable) that accepts signals from a video interface, may be used. The video interface composites information generated by a computer systemization and generates video signals based on the composited information in a video memory frame. Another output device is a television set, which accepts signals from a video interface. Typically, the video interface provides the composited video information through a video connection interface that accepts a video display interface (e.g., an RCA composite video connector accepting an RCA composite video cable; a DVI connector accepting a DVI display cable, etc.).","User input devices  often are a type of peripheral device  (see below) and may include: card readers, dongles, finger print readers, gloves, graphics tablets, joysticks, keyboards, microphones, mouse (mice), remote controls, retina readers, touch screens (e.g., capacitive, resistive, etc.), trackballs, trackpads, sensors (e.g., accelerometers, ambient light, GPS, gyroscopes, proximity, etc.), styluses, and\/or the like.","Peripheral devices  may be connected and\/or communicate to I\/O and\/or other facilities of the like such as network interfaces, storage interfaces, directly to the interface bus, system bus, the CPU, and\/or the like. Peripheral devices may be external, internal and\/or part of the MBIN controller. Peripheral devices may include: antenna, audio devices (e.g., line-in, line-out, microphone input, speakers, etc.), cameras (e.g., still, video, webcam, etc.), dongles (e.g., for copy protection, ensuring secure transactions with a digital signature, and\/or the like), external processors (for added capabilities; e.g., crypto devices ), force-feedback devices (e.g., vibrating motors), network interfaces, printers, scanners, storage devices, transceivers (e.g., cellular, GPS, etc.), video devices (e.g., goggles, monitors, etc.), video sources, visors, and\/or the like. Peripheral devices often include types of input devices (e.g., cameras).","It should be noted that although user input devices and peripheral devices may be employed, the MBIN controller may be embodied as an embedded, dedicated, and\/or monitor-less (i.e., headless) device, wherein access would be provided over a network interface connection.","Cryptographic units such as, but not limited to, microcontrollers, processors , interfaces , and\/or devices  may be attached, and\/or communicate with the MBIN controller. A MC68HC16 microcontroller, manufactured by Motorola Inc., may be used for and\/or within cryptographic units. The MC68HC16 microcontroller utilizes a 16-bit multiply-and-accumulate instruction in the 16 MHz configuration and requires less than one second to perform a 512-bit RSA private key operation. Cryptographic units support the authentication of communications from interacting agents, as well as allowing for anonymous transactions. Cryptographic units may also be configured as part of the CPU. Equivalent microcontrollers and\/or processors may also be used. Other commercially available specialized cryptographic processors include: Broadcom's CryptoNetX and other Security Processors; nCipher's nShield; SafeNet's Luna PCI (e.g., 7100) series; Semaphore Communications' 40 MHz Roadrunner 184; Sun's Cryptographic Accelerators (e.g., Accelerator 6000 PCIe Board, Accelerator 500 Daughtercard); Via Nano Processor (e.g., L2100, L2200, U2400) line, which is capable of performing 500+ MB\/s of cryptographic instructions; VLSI Technology's 33 MHz 6868; and\/or the like.","Generally, any mechanization and\/or embodiment allowing a processor to affect the storage and\/or retrieval of information is regarded as memory . However, memory is a fungible technology and resource, thus, any number of memory embodiments may be employed in lieu of or in concert with one another. It is to be understood that the MBIN controller and\/or a computer systemization may employ various forms of memory . For example, a computer systemization may be configured wherein the operation of on-chip CPU memory (e.g., registers), RAM, ROM, and any other storage devices are provided by a paper punch tape or paper punch card mechanism; however, such an embodiment would result in an extremely slow rate of operation. In a typical configuration, memory  will include ROM , RAM , and a storage device . A storage device  may be any conventional computer system storage. Storage devices may include a drum; a (fixed and\/or removable) magnetic disk drive; a magneto-optical drive; an optical drive (i.e., Blueray, CD ROM\/RAM\/Recordable (R)\/ReWritable (RW), DVD R\/RW, HD DVD R\/RW etc.); an array of devices (e.g., Redundant Array of Independent Disks (RAID)); solid state memory devices (USB memory, solid state drives (SSD), etc.); other processor-readable storage mediums; and\/or other devices of the like. Thus, a computer systemization generally requires and makes use of memory.","The memory  may contain a collection of program and\/or database components and\/or data such as, but not limited to: operating system component ; information server component ; user interface component ; MBIN database component ; cryptographic server component ; BDSES Component ; BSR Component ; and\/or the like (i.e., collectively a component collection). The aforementioned components may be incorporated into (e.g., be sub-components of), loaded from, loaded by, or otherwise operatively available to and from the MBIN component(s) .","Any component may be stored and accessed from the storage devices and\/or from storage devices accessible through an interface bus. Although program components such as those in the component collection, typically, are stored in a local storage device , they may also be loaded and\/or stored in other memory such as: remote \u201ccloud\u201d storage facilities accessible through a communications network; integrated ROM memory; via an FPGA or ASIC implementing component logic; and\/or the like.","The operating system component  is an executable program component facilitating the operation of the MBIN controller. Typically, the operating system facilitates access of I\/O, network interfaces, peripheral devices, storage devices, and\/or the like. The operating system may be a highly fault tolerant, scalable, and secure system such as: Unix and Unix-like system distributions (such as AT&T's UNIX; Berkley Software Distribution (BSD) variations such as FreeBSD, NetBSD, OpenBSD, and\/or the like; Linux distributions such as Red Hat, Debian, Ubuntu, and\/or the like); and\/or the like operating systems. However, more limited and\/or less secure operating systems also may be employed such as Apple OS-X, Microsoft Windows 2000\/2003\/3.1\/95\/98\/CE\/Millenium\/NT\/Vista\/XP\/Win7 (Server), and\/or the like. An operating system may communicate to and\/or with other components in a component collection, including itself, and\/or the like. Most frequently, the operating system communicates with other program components, user interfaces, and\/or the like. The operating system, once executed by the CPU, may enable the interaction with communications networks, data, I\/O, peripheral devices, program components, memory, user input devices, and\/or the like. The operating system may provide communications protocols that allow the MBIN controller to communicate with other entities through a communications network . Various communication protocols may be used by the MBIN controller as a subcarrier transport mechanism for interaction, such as, but not limited to: multicast, TCP\/IP, UDP, unicast, and\/or the like.","An information server component  is a stored program component that is executed by a CPU. The information server may be a conventional Internet information server such as, but not limited to Apache Software Foundation's Apache, Microsoft's Internet Information Server, and\/or the like. The information server may allow for the execution of program components through facilities such as Active Server Page (ASP), ActiveX, (ANSI) (Objective-) C (++), C# and\/or .NET, Common Gateway Interface (CGI) scripts, dynamic (D) hypertext markup language (HTML), FLASH, Java, JavaScript, Practical Extraction Report Language (PERL), Hypertext Pre-Processor (PHP), pipes, Python, wireless application protocol (WAP), WebObjects, and\/or the like. The information server may support secure communications protocols such as, but not limited to, File Transfer Protocol (FTP); HyperText Transfer Protocol (HTTP); Secure Hypertext Transfer Protocol (HTTPS), Secure Socket Layer (SSL), messaging protocols (e.g., ICQ, Internet Relay Chat (IRC), Presence and Instant Messaging Protocol (PRIM), Internet Engineering Task Force's (IETF's) Session Initiation Protocol (SIP), SIP for Instant Messaging and Presence Leveraging Extensions (SIMPLE), open XML-based Extensible Messaging and Presence Protocol (XMPP) (i.e., Jabber or Open Mobile Alliance's (OMA's) Instant Messaging and Presence Service (IMPS)), Representational State Transfer (REST) and\/or the like. The information server provides results in the form of Web pages to Web browsers, and allows for the manipulated generation of the Web pages through interaction with other program components. After a Domain Name System (DNS) resolution portion of an HTTP request is resolved to a particular information server, the information server resolves requests for information at specified locations on the MBIN controller based on the remainder of the HTTP request. For example, a request such as http:\/\/123.124.125.126\/myInformation.html might have the IP portion of the request \u201c123.124.125.126\u201d resolved by a DNS server to an information server at that IP address; that information server might in turn further parse the http request for the \u201c\/myInformation.html\u201d portion of the request and resolve it to a location in memory containing the information \u201cmyInformation.html.\u201d Additionally, other information serving protocols may be employed across various ports, e.g., FTP communications across port 21, and\/or the like. An information server may communicate to and\/or with other components in a component collection, including itself, and\/or facilities of the like. Most frequently, the information server communicates with the MBIN database component , operating system component , other program components, user interfaces, and\/or the like.","Access from the Information Server Component  to the MBIN database component  may be achieved through a number of database bridge mechanisms such as through scripting languages as enumerated below (e.g., CGI) and through inter-application communication channels as enumerated below (e.g., CORBA, WebObjects, etc.). Any data requests through a Web browser are parsed through the bridge mechanism into appropriate grammars as required by the MBIN. In one embodiment, the information server would provide a Web form accessible by a Web browser. Entries made into supplied fields in the Web form are tagged as having been entered into the particular fields, and parsed as such. The entered terms are then passed along with the field tags, which act to instruct the parser to generate queries directed to appropriate tables and\/or fields. In one embodiment, the parser may generate queries in standard SQL by instantiating a search string with the proper join\/select commands based on the tagged text entries, wherein the resulting command is provided over the bridge mechanism to the MBIN as a query. Upon generating query results from the query, the results are passed over the bridge mechanism, and may be parsed for formatting and generation of a new results Web page by the bridge mechanism. Such a new results Web page is then provided to the information server, which may supply it to the requesting Web browser. Also, an information server may contain, communicate, generate, obtain, and\/or provide program component, system, user, and\/or data communications, requests, and\/or responses.","Computer interfaces in some respects are similar to automobile operation interfaces. Automobile operation interface elements such as steering wheels, gearshifts, and speedometers facilitate the access, operation, and display of automobile resources, and status. Computer interaction interface elements such as check boxes, cursors, menus, scrollers, and windows (collectively and commonly referred to as widgets) similarly facilitate the access, capabilities, operation, and display of data and computer hardware and operating system resources, and status. Operation interfaces are commonly called user interfaces. Graphical user interfaces (GUIs) such as the Apple Macintosh Operating System's Aqua, IBM's OS\/2, Microsoft's Windows 2000\/2003\/3.1\/95\/98\/CE\/Millenium\/NT\/XP\/Vista\/7 (i.e., Aero), Unix's X-Windows, web interface libraries such as, but not limited to, Dojo, jQuery UI, MooTools, Prototype, script.aculo.us, SWFObject, Yahoo! User Interface, any of which may be used and provide a baseline and means of accessing and displaying information graphically to users.","A user interface component  is a stored program component that is executed by a CPU. The user interface may be a conventional graphic user interface as provided by, with, and\/or atop operating systems and\/or operating environments such as already discussed. The user interface may allow for the display, execution, interaction, manipulation, and\/or operation of program components and\/or system facilities through textual and\/or graphical facilities. The user interface provides a facility through which users may affect, interact, and\/or operate a computer system. A user interface may communicate to and\/or with other components in a component collection, including itself, and\/or facilities of the like. Most frequently, the user interface communicates with operating system component , other program components, and\/or the like. The user interface may contain, communicate, generate, obtain, and\/or provide program component, system, user, and\/or data communications, requests, and\/or responses.","A cryptographic server component  is a stored program component that is executed by a CPU , cryptographic processor , cryptographic processor interface , cryptographic processor device , and\/or the like. Cryptographic processor interfaces will allow for expedition of encryption and\/or decryption requests by the cryptographic component; however, the cryptographic component, alternatively, may run on a conventional CPU. The cryptographic component allows for the encryption and\/or decryption of provided data. The cryptographic component allows for both symmetric and asymmetric (e.g., Pretty Good Protection (PGP)) encryption and\/or decryption. The cryptographic component may employ cryptographic techniques such as, but not limited to: digital certificates (e.g., X.509 authentication framework), digital signatures, dual signatures, enveloping, password access protection, public key management, and\/or the like. The cryptographic component will facilitate numerous (encryption and\/or decryption) security protocols such as, but not limited to: checksum, Data Encryption Standard (DES), Elliptical Curve Encryption (ECC), International Data Encryption Algorithm (IDEA), Message Digest 5 (MD5, which is a one way hash operation), passwords, Rivest Cipher (RC5), Rijndael (AES), RSA, Secure Hash Algorithm (SHA), Secure Socket Layer (SSL), Secure Hypertext Transfer Protocol (HTTPS), and\/or the like. Employing such encryption security protocols, the MBIN may encrypt all incoming and\/or outgoing communications and may serve as node within a virtual private network (VPN) with a wider communications network. The cryptographic component facilitates the process of \u201csecurity authorization\u201d whereby access to a resource is inhibited by a security protocol wherein the cryptographic component effects authorized access to the secured resource. In addition, the cryptographic component may provide unique identifiers of content, e.g., employing and MD5 hash to obtain a unique signature for an digital audio file. A cryptographic component may communicate to and\/or with other components in a component collection, including itself, and\/or facilities of the like. The cryptographic component supports encryption schemes allowing for the secure transmission of information across a communications network to enable the MBIN component to engage in secure transactions if so desired. The cryptographic component facilitates the secure accessing of resources on the MBIN and facilitates the access of secured resources on remote systems; i.e., it may act as a client and\/or server of secured resources. Most frequently, the cryptographic component communicates with information server component , operating system component , other program components, and\/or the like. The cryptographic component may contain, communicate, generate, obtain, and\/or provide program component, system, user, and\/or data communications, requests, and\/or responses.","The MBIN database component  may be embodied in a database and its stored data. The database is a stored program component, which is executed by the CPU; the stored program component portion configuring the CPU to process the stored data. The database may be a conventional, fault tolerant, relational, scalable, secure database such as Oracle or Sybase. Relational databases are an extension of a flat file. Relational databases consist of a series of related tables. The tables are interconnected via a key field. Use of the key field allows the combination of the tables by indexing against the key field; i.e., the key fields act as dimensional pivot points for combining information from various tables. Relationships generally identify links maintained between tables by matching primary keys. Primary keys represent fields that uniquely identify the rows of a table in a relational database. More precisely, they uniquely identify rows of a table on the \u201cone\u201d side of a one-to-many relationship.","Alternatively, the MBIN database may be implemented using various standard data-structures, such as an array, hash, (linked) list, struct, structured text file (e.g., XML), table, and\/or the like. Such data-structures may be stored in memory and\/or in (structured) files. In another alternative, an object-oriented database may be used, such as Frontier, ObjectStore, Poet, Zope, and\/or the like. Object databases can include a number of object collections that are grouped and\/or linked together by common attributes; they may be related to other object collections by some common attributes. Object-oriented databases perform similarly to relational databases with the exception that objects are not just pieces of data but may have other types of capabilities encapsulated within a given object. Also, the database may be implemented as a mix of data structures, objects, and relational structures. Databases may be consolidated and\/or distributed in countless variations through standard data processing techniques. Portions of databases, e.g., tables, may be exported and\/or imported and thus decentralized and\/or integrated.","In one embodiment, the database component  includes several tables -. A Users table may include fields such as, but not limited to: user_id, ssn, dob, first_name, last_name, age, state, address_firstline, address_secondline, zipcode, devices_list, contact_info, contact_type, alt_contact_info, alt_contact_type, and\/or the like. A Clients table may include fields such as, but not limited to: client_id, client_name, client_ip, client_type, client_model, operating_system, os_version, app_installed_flag, and\/or the like. A Bins table may include fields such as, but not limited to: bin_id, bin_name, bin_owner_user_id, bin_shared_user_id_array, bin_storage_limits, bin_template, bin_created_date, bin_expiration_date, bin_max_objects, bin_applications_installed and\/or the like. A Bin Permissions table may include fields such as, but not limited to: bin_permission_id, bin_id, user_id, permission_type, permission_description, permission_command, permission_value and\/or the like. A Bin Objects table may include fields such as, but not limited to: bin_object_id, bin_id, unique_bin_object_identifier, bin_object_size, is_shared_bin_object, bin_object_permissions and\/or the like. A Bin Object Data table may include fields such as, but not limited to: bin_object_data_id, bin_object_id, description, object_data_key, object_data_value and\/or the like. A Bin Applications table may include fields such as, but not limited to: bin_application_id, bin_id, outgoing_app_objects_bin, incoming_app_objects_bin, bin_application_name, authorized_bin_user_ids, authorized_bin_ids, per_hour_bin_application_cost and\/or the like. A Key Escrow table may include fields such as, but not limited to: key_escrow_id, user_id, key_type, key_encryption_settings, key and\/or the like. A Bin Transactions table may include fields such as, but not limited to: bin_transaction_id, bin_id, user_id, bin_application_id, trans_datetime, trans_amount, is_recurring and\/or the like. Any of the aforementioned tables may support and\/or track multiple entities, accounts, users and\/or the like.","In one embodiment, the MBIN database component may interact with other database systems. For example, when employing a distributed database system. In such an embodiment, queries and data access by any MBIN component may treat the combination of the MBIN database component results and results from a second segment in a distributed database system as an integrated database layer. Such a database layer may be accessed as a single database entity, for example through MBIN database component , by any MBIN component.","In one embodiment, user programs may contain various user interface primitives, which may serve to update the MBIN. Also, various accounts may require custom database tables depending upon the environments and the types of clients the MBIN may need to serve. It should be noted that any unique fields may be designated as a key field throughout. In an alternative embodiment, these tables have been decentralized into their own databases and their respective database controllers (i.e., individual database controllers for each of the above tables). Employing standard data processing techniques, one may further distribute the databases over several computer systemizations and\/or storage devices. Similarly, configurations of the decentralized database controllers may be varied by consolidating and\/or distributing the various database components -. The MBIN may be configured to keep track of various settings, inputs, and parameters via database controllers.","The MBIN database may communicate to and\/or with other components in a component collection, including itself, and\/or facilities of the like. Most frequently, the MBIN database communicates with the MBIN component, other program components, and\/or the like. The database may contain, retain, and provide information regarding other nodes and data.","The MBIN component  is a stored program component that is executed by a CPU. In one embodiment, the MBIN component incorporates any and\/or all combinations of the aspects of the MBIN that was discussed in the previous figures. As such, the MBIN affects accessing, obtaining and the provision of information, services, transactions, and\/or the like across various communications networks. The features and embodiments of the MBIN discussed herein increase network efficiency by reducing data transfer requirements the use of more efficient data structures and mechanisms for their transfer and storage. As a consequence, more data may be transferred in less time, and latencies with regard to data processing operations and transactions, are also reduced. In many cases, such reduction in storage, transfer time, bandwidth requirements, latencies, etc., will reduce the capacity and structural infrastructure requirements to support the MBIN's features and facilities, and in many cases reduce the costs, energy consumption\/requirements, and extend the life of MBIN's underlying infrastructure; this has the added benefit of making the MBIN more reliable. Similarly, many of the features and mechanisms are designed to be easier for users to use and access, thereby broadening the audience that may enjoy\/employ and exploit the feature sets of the MBIN; such ease of use also helps to increase the reliability of the MBIN. In addition, the feature sets include heightened security as noted via the Cryptographic components , ,  and throughout, making access to the features and data more reliable and secure.","The MBIN component may transform unencrypted objects, and\/or the like, into secure bin enabled objects, and\/or the like and use the MBIN. In one embodiment, the MBIN component  takes inputs (e.g., create secure storage input , secure storage setup request , user secure object store login request , secure object store login request , bin creation input , bin creation request , bin object storage request , bin storage request , bin object retrieval request , bin object retrieval request , encrypted bin application setup definition , bin application input , and\/or the like) etc., and transforms the inputs via various components (e.g., BDSES Component , BSR Component , and\/or the like), into outputs (e.g., device linked API certificate , public key , API certificate and encrypted private key , encrypted binkey storage request , encrypted binkey and bin metadata , encrypted object storage response , encrypted object retrieval response , application bin object storage request , bin application output , and\/or the like).","The MBIN component enabling access of information between nodes may be developed by employing standard development tools and languages such as, but not limited to: Apache components, Assembly, ActiveX, binary executables, (ANSI) (Objective-) C (++), C# and\/or .NET, database adapters, CGI scripts, Java, JavaScript, mapping tools, procedural and object oriented development tools, PERL, PHP, Python, shell scripts, SQL commands, web application server extensions, web development environments and libraries (e.g., Microsoft's ActiveX; Adobe AIR, FLEX & FLASH; AJAX; (D)HTML; Dojo, Java; JavaScript; jQuery; jQuery UI; MooTools; Prototype; script.aculo.us; Simple Object Access Protocol (SOAP); SWFObject; Yahoo! User Interface; and\/or the like), WebObjects, and\/or the like. In one embodiment, the MBIN server employs a cryptographic server to encrypt and decrypt communications. The MBIN component may communicate to and\/or with other components in a component collection, including itself, and\/or facilities of the like. Most frequently, the MBIN component communicates with the MBIN database component , operating system component , other program components, and\/or the like. The MBIN may contain, communicate, generate, obtain, and\/or provide program component, system, user, and\/or data communications, requests, and\/or responses.","The structure and\/or operation of any of the MBIN node controller components may be combined, consolidated, and\/or distributed in any number of ways to facilitate development and\/or deployment. Similarly, the component collection may be combined in any number of ways to facilitate deployment and\/or development. To accomplish this, one may integrate the components into a common code base or in a facility that can dynamically load the components on demand in an integrated fashion.","The component collection may be consolidated and\/or distributed in countless variations through standard data processing and\/or development techniques. Multiple instances of any one of the program components in the program component collection may be instantiated on a single node, and\/or across numerous nodes to improve performance through load-balancing and\/or data-processing techniques. Furthermore, single instances may also be distributed across multiple controllers and\/or storage devices; e.g., databases. All program component instances and controllers working in concert may do so through standard data processing communication techniques.","The configuration of the MBIN controller will depend on the context of system deployment. Factors such as, but not limited to, the budget, capacity, location, and\/or use of the underlying hardware resources may affect deployment requirements and configuration. Regardless of if the configuration results in more consolidated and\/or integrated program components, results in a more distributed series of program components, and\/or results in some combination between a consolidated and distributed configuration, data may be communicated, obtained, and\/or provided. Instances of components consolidated into a common code base from the program component collection may communicate, obtain, and\/or provide data. This may be accomplished through intra-application data processing communication techniques such as, but not limited to: data referencing (e.g., pointers), internal messaging, object instance variable communication, shared memory space, variable passing, and\/or the like.","If component collection components are discrete, separate, and\/or external to one another, then communicating, obtaining, and\/or providing data with and\/or to other component components may be accomplished through inter-application data processing communication techniques such as, but not limited to: Application Program Interfaces (API) information passage; (distributed) Component Object Model ((D)COM), (Distributed) Object Linking and Embedding ((D)OLE), and\/or the like), Common Object Request Broker Architecture (CORBA), Jini local and remote application program interfaces, JavaScript Object Notation (JSON), Remote Method Invocation (RMI), SOAP, Representational State Transfer (REST), process pipes, shared files, and\/or the like. Messages sent between discrete component components for inter-application communication or within memory spaces of a singular component for intra-application communication may be facilitated through the creation and parsing of a grammar. A grammar may be developed by using development tools such as lex, yacc, XML, and\/or the like, which allow for grammar generation and parsing capabilities, which in turn may form the basis of communication messages within and between components.","For example, a grammar may be arranged to recognize the tokens of an HTTP post command, e.g.:\n\n","where Value1 is discerned as being a parameter because \u201chttp:\/\/\u201d is part of the grammar syntax, and what follows is considered part of the post value. Similarly, with such a grammar, a variable \u201cValue1\u201d may be inserted into an \u201chttp:\/\/\u201d post command and then sent. The grammar syntax itself may be presented as structured data that is interpreted and\/or otherwise used to generate the parsing mechanism (e.g., a syntax description text file as processed by lex, yacc, etc.). Also, once the parsing mechanism is generated and\/or instantiated, it itself may process and\/or parse structured data such as, but not limited to: character (e.g., tab) delineated text, HTML, structured text streams, XML, and\/or the like structured data. Further, the parsing grammar may be used beyond message parsing, but may also be used to parse: databases, data collections, data stores, structured data, and\/or the like. Again, the desired configuration will depend upon the context, environment, and requirements of system deployment.","Additional embodiments of the MBIN may include:","1. A bin object datastore instantiation and encrypted bin object creation and synchronization apparatus, comprising:","a memory; and","a processor disposed in communication with said memory, and configured to issue a plurality of processing instructions stored in the memory, wherein the processor issues instructions to:\n\n","instantiate the first bin object datastore on the local user device, wherein the first bin object datastore is configured to bi-directionally synchronize with the second bin object datastore.","2. The apparatus of embodiment 1 wherein the first of the plurality of encrypted bin object encryption keys is created using a public key associated with the local user device and is associated with the first bin object datastore.","3. The apparatus of embodiment 1, wherein the second of the plurality of encrypted bin object encryption keys is created using a public key associated with a second user device and is associated with the second bin object datastore.","4. The apparatus of embodiment 1, additionally comprising instructions to:","receive an unencrypted bin object for storage in the first bin object datastore and the second bin object datastore;","retrieve the first of the plurality of encrypted bin object encryption keys from the persistent storage area of the local user device;","decrypt the first of the plurality of encrypted bin object encryption keys to obtain the bin object encryption key;","encrypt the unencrypted bin object using the bin object encryption key to create an encrypted bin object;","store the encrypted bin object in the persistent storage area of the local user device; and","transmit the encrypted bin object to the bin object datastore synchronization server, wherein the bin object datastore synchronization server is configured to further transmit the encrypted bin object to the second bin object datastore for storage.","5. The apparatus of embodiment 1 wherein the bin object encryption key is a key for a reversible block encryption.","6. The apparatus of embodiment 5 wherein the reversible block encryption is the Advanced Encryption Standard.","7. The apparatus of embodiment 1 wherein the reversible public-private key-pair encryption uses the RSA public-key cryptosystem.","8. The apparatus of embodiment 4 wherein the unencrypted bin object for storage is received from a bin application instantiated in connection with the first bin object datastore and running on the local user device.","9. The apparatus of embodiment 8 wherein the bin application is a secure encrypted messaging system.","10. The apparatus of embodiment 9 wherein the bin application is also instantiated in connection with the second bin object datastore and the secure encrypted messaging system provides message transport services via encrypted bin objects stored in either the first bin object datastore or the second bin object datastore and synchronized to the other bin object datastore.","11. The apparatus of embodiment 10 wherein the first bin object datastore and the second bin object datastore are comprised of a plurality of matched sub-bin object datastores, wherein each of the plurality of matched sub-bin object datastores uses a unique bin object encryption key.","12. The apparatus of embodiment 11 wherein a new sub-bin object datastore is added to the plurality of matched sub-bin object datastores at the direction of the bin application.","13. The apparatus of embodiment 12 wherein the bin application directs the addition of the new sub-bin object datastore when a message session for the secure encrypted messaging system has expired.","14. The apparatus of embodiment 13 wherein the message session expires upon one or more of the following:","the elapsing of a time quantum;","the transmission of a predetermined quantity of secure messages; and","the transmission of each secure message.","15. The apparatus of embodiment 8, wherein the first bin object datastore has a bin user interface visibility attribute settable by the bin application.","16. The apparatus of embodiment 15, wherein the bin user interface visibility attribute is equal to hidden.","17. The apparatus of embodiment 16, wherein the bin application defines an alternate user interface for interacting with the first bin object datastore.","18. The apparatus of embodiment 17, wherein the alternate user interface is in the form of a message send and receive user interface.","19. The apparatus of embodiment 17, wherein the alternate user interface is defined by a parseable definition file associated with the bin application and renderable in connection with the first bin object datastore.","20. The apparatus of embodiment 1, additionally comprising instructions to:","receive, at the local user device, from a user, a request to establish a bin object datastore zone including a user password and a plurality of user security question answers, wherein the bin object datastore zone can comprise one or more bin object datastores;","transmit from the local user device to the bin object datastore synchronization server a request to establish the bin object datastore zone;","receive, via a processor, a device-linked bin object datastore synchronization server API certificate configured to enable secure object transfers between the local user device and the bin object datastore synchronization server;","generate an encryption key pair comprising a public key and a private key;","encrypt the private key using information from the request to establish the bin object datastore persistence zone; and","transmit the public key and the encrypted private key to the bin object datastore synchronization server.","21. The apparatus of embodiment 20, wherein the information from the request to establish the bin object datastore zone is a password.","22. The apparatus of embodiment 20, wherein the information from the request to establish the bin object datastore zone is a plurality of security question answers.","23. The apparatus of embodiment 1 additionally comprising instructions to:","receive a bin template defining aspects of the first bin object datastore; and","use the bin template during instantiation of the first bin object datastore on the local user device.","24. The apparatus of embodiment 23, wherein the bin template includes a list of suggested unencrypted bin objects to store as encrypted bin objects in the first bin object datastore.","25. The apparatus of embodiment 23, wherein the bin template includes a guide for assisting the user in generating unencrypted bin objects.","26. The apparatus of embodiment 25, wherein the guide is configured to prompt a user to use a camera integrated into the local user device to capture the front and back of documents in a wallet.","27. The apparatus of embodiment 26, wherein the documents in the wallet comprise one or more of the following:","a driver's license;","a social security card;","a debit card;","a credit card; and","a student identification card.","28. The apparatus of embodiment 27, additionally comprising instructions to:","perform optical character recognition on the captured images of documents in the wallet; and","store a segment of the textual output of the optical character recognition in the first bin object datastore as a metadata encrypted bin object describing an encrypted bin object.","Additional embodiments of the MBIN may include:","1. A non-transitory medium storing bin object datastore instantiation and encrypted bin object creation and synchronization instructions to:","receive, at a local user device, a request to establish a first bin object datastore;","generate a bin object encryption key;","encrypting the bin object encryption key a plurality of times using reversible public-private key-pair encryption to create a plurality of encrypted bin object encryption keys, wherein each encrypting of the bin object encryption key uses a different public key associated with at least one user device;","store a first of the plurality of encrypted bin object encryption keys in a persistent storage area of the local user device;","transmit the first of the plurality of encrypted bin object encryption keys to a bin object datastore synchronization server;","transmit a second of the plurality of encrypted bin object encryption keys to the bin object datastore synchronization server for transmission to a second bin object datastore; and","instantiate the first bin object datastore on the local user device, wherein the first bin object datastore is configured to bi-directionally synchronize with the second bin object datastore.","2. The medium of embodiment 1 wherein the first of the plurality of encrypted bin object encryption keys is created using a public key associated with the local user device and is associated with the first bin object datastore.","3. The medium of embodiment 1, wherein the second of the plurality of encrypted bin object encryption keys is created using a public key associated with a second user device and is associated with the second bin object datastore.","4. The medium of embodiment 1, additionally comprising instructions to:","receive an unencrypted bin object for storage in the first bin object datastore and the second bin object datastore;","retrieve the first of the plurality of encrypted bin object encryption keys from the persistent storage area of the local user device;","decrypt the first of the plurality of encrypted bin object encryption keys to obtain the bin object encryption key;","encrypt the unencrypted bin object using the bin object encryption key to create an encrypted bin object;","store the encrypted bin object in the persistent storage area of the local user device; and","transmit the encrypted bin object to the bin object datastore synchronization server, wherein the bin object datastore synchronization server is configured to further transmit the encrypted bin object to the second bin object datastore for storage.","5. The medium of embodiment 1 wherein the bin object encryption key is a key for a reversible block encryption.","6. The medium of embodiment 5 wherein the reversible block encryption is the Advanced Encryption Standard.","7. The medium of embodiment 1 wherein the reversible public-private key-pair encryption uses the RSA public-key cryptosystem.","8. The medium of embodiment 4 wherein the unencrypted bin object for storage is received from a bin application instantiated in connection with the first bin object datastore and running on the local user device.","9. The medium of embodiment 8 wherein the bin application is a secure encrypted messaging system.","10. The medium of embodiment 9 wherein the bin application is also instantiated in connection with the second bin object datastore and the secure encrypted messaging system provides message transport services via encrypted bin objects stored in either the first bin object datastore or the second bin object datastore and synchronized to the other bin object datastore.","11. The medium of embodiment 10 wherein the first bin object datastore and the second bin object datastore are comprised of a plurality of matched sub-bin object datastores, wherein each of the plurality of matched sub-bin object datastores uses a unique bin object encryption key.","12. The medium of embodiment 11 wherein a new sub-bin object datastore is added to the plurality of matched sub-bin object datastores at the direction of the bin application.","13. The medium of embodiment 12 wherein the bin application directs the addition of the new sub-bin object datastore when a message session for the secure encrypted messaging system has expired.","14. The medium of embodiment 13 wherein the message session expires upon one or more of the following:","the elapsing of a time quantum;","the transmission of a predetermined quantity of secure messages; and","the transmission of each secure message.","15. The medium of embodiment 8, wherein the first bin object datastore has a bin user interface visibility attribute settable by the bin application.","16. The medium of embodiment 15, wherein the bin user interface visibility attribute is equal to hidden.","17. The medium of embodiment 16, wherein the bin application defines an alternate user interface for interacting with the first bin object datastore.","18. The medium of embodiment 17, wherein the alternate user interface is in the form of a message send and receive user interface.","19. The medium of embodiment 17, wherein the alternate user interface is defined by a parseable definition file associated with the bin application and renderable in connection with the first bin object datastore.","20. The medium of embodiment 1, additionally comprising instructions to:","receive, at the local user device, from a user, a request to establish a bin object datastore zone including a user password and a plurality of user security question answers, wherein the bin object datastore zone can comprise one or more bin object datastores;","transmit from the local user device to the bin object datastore synchronization server a request to establish the bin object datastore zone;","receive, via a processor, a device-linked bin object datastore synchronization server API certificate configured to enable secure object transfers between the local user device and the bin object datastore synchronization server;","generate an encryption key pair comprising a public key and a private key;","encrypt the private key using information from the request to establish the bin object datastore persistence zone; and","transmit the public key and the encrypted private key to the bin object datastore synchronization server.","21. The medium of embodiment 20, wherein the information from the request to establish the bin object datastore zone is a password.","22. The medium of embodiment 20, wherein the information from the request to establish the bin object datastore zone is a plurality of security question answers.","23. The medium of embodiment 1 additionally comprising instructions to:","receive a bin template defining aspects of the first bin object datastore; and","use the bin template during instantiation of the first bin object datastore on the local user device.","24. The medium of embodiment 23, wherein the bin template includes a list of suggested unencrypted bin objects to store as encrypted bin objects in the first bin object datastore.","25. The medium of embodiment 23, wherein the bin template includes a guide for assisting the user in generating unencrypted bin objects.","26. The medium of embodiment 25, wherein the guide is configured to prompt a user to use a camera integrated into the local user device to capture the front and back of documents in a wallet.","27. The medium of embodiment 26, wherein the documents in the wallet comprise one or more of the following:","a driver's license;","a social security card;","a debit card;","a credit card; and","a student identification card.","28. The medium of embodiment 27, additionally comprising instructions to:","perform optical character recognition on the captured images of documents in the wallet; and","store a segment of the textual output of the optical character recognition in the first bin object datastore as a metadata encrypted bin object describing an encrypted bin object.","In order to address various issues and advance the art, the entirety of this application for MBIN (including the Cover Page, Title, Headings, Field, Background, Summary, Brief Description of the Drawings, Detailed Description, Claims, Abstract, Figures, Appendices, and otherwise) shows, by way of illustration, various embodiments in which the claimed innovations may be practiced. The advantages and features of the application are of a representative sample of embodiments only, and are not exhaustive and\/or exclusive. They are presented only to assist in understanding and teach the claimed principles. It should be understood that they are not representative of all claimed innovations. As such, certain aspects of the disclosure have not been discussed herein. That alternate embodiments may not have been presented for a specific portion of the innovations or that further undescribed alternate embodiments may be available for a portion is not to be considered a disclaimer of those alternate embodiments. It will be appreciated that many of those undescribed embodiments incorporate the same principles of the innovations and others are equivalent. Thus, it is to be understood that other embodiments may be utilized and functional, logical, operational, organizational, structural and\/or topological modifications may be made without departing from the scope and\/or spirit of the disclosure. As such, all examples and\/or embodiments are deemed to be non-limiting throughout this disclosure. Also, no inference should be drawn regarding those embodiments discussed herein relative to those not discussed herein other than it is as such for purposes of reducing space and repetition. For instance, it is to be understood that the logical and\/or topological structure of any combination of any program components (a component collection), other components and\/or any present feature sets as described in the figures and\/or throughout are not limited to a fixed operating order and\/or arrangement, but rather, any disclosed order is exemplary and all equivalents, regardless of order, are contemplated by the disclosure. Furthermore, it is to be understood that such features are not limited to serial execution, but rather, any number of threads, processes, services, servers, and\/or the like that may execute asynchronously, concurrently, in parallel, simultaneously, synchronously, and\/or the like are contemplated by the disclosure. As such, some of these features may be mutually contradictory, in that they cannot be simultaneously present in a single embodiment. Similarly, some features are applicable to one aspect of the innovations, and inapplicable to others. In addition, the disclosure includes other innovations not presently claimed. Applicant reserves all rights in those presently unclaimed innovations including the right to claim such innovations, file additional applications, continuations, continuations-in-part, divisionals, and\/or the like thereof. As such, it should be understood that advantages, embodiments, examples, functional, features, logical, operational, organizational, structural, topological, and\/or other aspects of the disclosure are not to be considered limitations on the disclosure as defined by the claims or limitations on equivalents to the claims. It is to be understood that, depending on the particular needs and\/or characteristics of a MBIN individual and\/or enterprise user, database configuration and\/or relational model, data type, data transmission and\/or network framework, syntax structure, and\/or the like, various embodiments of the MBIN, may be implemented that enable a great deal of flexibility and customization as described herein."],"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","DETAILED DESCRIPTION","MBIN Controller","Computer Systemization","Power Source","Interface Adapters","Memory","Component Collection","Operating System Component","Information Server Component","User Interface Component","Cryptographic Server Component","MBIN Database Component","MBIN Component","Distributed MBIN Components","Additional MBIN Configurations"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5","b":"500"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 8A-B","b":"800"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 17"}]},"DETDESC":[{},{}]}
