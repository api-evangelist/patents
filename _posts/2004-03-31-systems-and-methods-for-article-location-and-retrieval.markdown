---
title: Systems and methods for article location and retrieval
abstract: Systems and methods for article location and retrieval are described. In one described method, the normal processing of an operating system call associated with a dialog control is interrupted, and a search dialog control is displayed. The search dialog control is associated with an index comprising a plurality of events. Each of the plurality of events may be associated with at least one of a plurality of client applications and at least some of the plurality of events can be captured in real time. Each event may be associated with one or more articles.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08595214&OS=08595214&RS=08595214
owner: Google Inc.
number: 08595214
owner_city: Mountain View
owner_country: US
publication_date: 20040331
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","System Architecture","Process","Example","General"],"p":["The present invention relates generally to methods and systems for information retrieval. The present invention relates particularly to systems and methods for article location and retrieval.","When a computer user attempts to locate or access a document in a conventional application, the user may issue a file-open command. The file-open command causes a dialog to be displayed in which the user can enter a file name or a path into a text box, which the application uses to locate the document. The text-box entry is typically limited to a short text string, which must match a file name or path exactly, either in whole or in part. For example, if the user enters \u201c*budget*\u201d (in this example, the asterisk represents a wildcard) in the text-entry box, the file name or path must include the term \u201cbudget\u201d somewhere in the file name or path. A file or path including the term \u201cfinancial\u201d or the term \u201caccounting\u201d would not be found although a file that contained those terms may be relevant to what the user is seeking. The user may also have access to a find dialog, allowing the user to search on additional attributes of a file, such as the text in the file.","Some conventional document management systems provide additional flexibility. For example, Hummingbird's DOCS Open\u00ae (Hummingbird Ltd.; Toronto, Ontario, Canada; www.hummingbird.com) can be integrated into a user's desktop applications. When the user attempts to open or save a file, a DOCS Open\u00ae interface is displayed. The user is able to enter text into any one of a number of attributes for a document in order to search for the document.","Embodiments of the present invention provide systems and methods for article location and retrieval. In one embodiment of the present invention, a computer program, such as a program for processing display output, interrupts the normal processing of an operating system call associated with a dialog control and causes a search dialog control to be displayed. The search dialog control may be associated with an index comprising a plurality of events that are associated with at least one client application. At least some of the events are captured in real time. Each event may be associated with one or more articles. In another embodiment, a computer-readable storage medium (such as, for example random access memory or a computer disk) comprises code for carrying out such a method.","These exemplary embodiments are mentioned not to limit or define the invention, but to provide examples of embodiments of the invention to aid understanding thereof. Exemplary embodiments are discussed in the Detailed Description, and further description of the invention is provided there. Advantages offered by the various embodiments of the present invention may be further understood by examining this specification.","Embodiments of the present invention provide systems and methods for article location and retrieval. Exemplary embodiments are described below.","Referring now to the drawings in which like numerals indicate like elements throughout the several figures,  is a block diagram illustrating an exemplary environment for implementation of an embodiment of the present invention. While the environment shown reflects a client-side search engine architecture embodiment, other embodiments are possible.","The system  shown in  includes multiple client devices -in communication with a server device  over a wired or wireless network . The network  shown comprises the Internet. In other embodiments, other networks, such as an intranet, may be used instead. Moreover, methods according to the present invention may operate within a single client device.","The client devices -shown each includes a computer-readable medium . The embodiment shown includes a random access memory (RAM)  coupled to a processor . The processor  executes computer-executable program instructions stored in memory . Such processors may include a microprocessor, an ASIC, a state machine, or other processor, and can be any of a number of computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill. Such processors include, or may be in communication with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the steps described herein.","Embodiments of computer-readable storage media include, but are not limited to, an electronic, optical, magnetic, or other storage devices capable of providing a processor, such as the processor  of client , with computer-readable instructions. Other examples of suitable storage media include, but are not limited to, a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ROM, RAM, an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other storage medium from which a computer processor can read instructions. The instructions may comprise code from any suitable computer-programming language, including, for example, C, C++, C#, Visual Basic, Java, Python, Perl, and JavaScript.","Client devices -can be connected to a network  as shown, or can be stand-alone machines. Client devices -may also include a number of external or internal devices such as a mouse, a CD-ROM, DVD, a keyboard, a display, or other input or output devices. Examples of client devices -are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, Internet appliances, and other processor-based devices. In general, the client devices -may be any type of processor-based platform that operates on any operating system, such as Microsoft\u00ae Windows\u00ae or Linux, capable of supporting one or more client application programs. For example, the client device shown comprises a personal computer executing client application programs, also known as client applications . The client applications  can be contained in memory  and can include, for example, a word processing application, a spreadsheet application, an e-mail application, an instant messenger application, a presentation application, an Internet browser application, a calendar\/organizer application, and any other application or computer program capable of being executed by a client device. Client applications may also include client-side applications that interacts with or accesses other applications (such as, for example, a web-browser executing on the client device that interacts with a remote e-mail server to access e-mail).","The user can interact with the various client applications  and articles associated with the client applications  via various input and output devices of the client device . Articles include, for example, word processor, spreadsheet, presentation, e-mail, instant messenger, database, and other client application program content files or groups of files, web pages of various formats, such as HTML, XML, XHTML, Portable Document Format (PDF) files, and audio files, video files, or any other documents or groups of documents or information of any type whatsoever.","The memory  of the client device shown also contains a capture processor , a queue , and a search engine . The client device shown also contains or is in communication with a data store . The search engine  can receive an explicit query from the user or generate an implicit query and retrieve information from the data store  in response to the query.","The data store  in the embodiment shown in  comprises a local index. The local index may comprise information, such as articles, which are associated with the client device , a user of the client device , or a group of users of the client device . For example, the local index in the data store  shown in  may comprise an index of articles created, edited, received, or stored by the client user using the client machine , or articles otherwise associated with the client user or the client machine . The local index may be stored in a client machine, such as in data store , in a data store on a local network in a manner accessible by the client machine, on a server accessible to the client machine through the Internet, or in another accessible location.","In contrast, a global index may comprise information relevant to many users or many servers, such as, for example, an index of web pages located on multiple servers in communication with the World Wide Web. One example of a global index is an index used by the Google\u2122 search engine to provide search results in response to a search query.","A single index may comprise both a local and a global index. For example, in one embodiment, an index may comprise both local and global information, and include a user or client identifier with the local information so that it may be identified with the user(s) or client(s) to which it pertains. Moreover, an index, local or global, may be present in one or multiple logical or physical locations.","The search engine  shown contains an indexer , a query system , and a formatter . Events, real-time and historical, contextual and indexable, and performance data can be sent by the queue  to the query system  to provide the query system  with information concerning current user context. The query system  can use this information to generate an implicit query. The query system  can also receive and process explicit queries from the user ","The data store  can be any type of computer-readable media and can be integrated with the client device , such as a hard drive, or external to the client device , such as an external hard drive or on another data storage device accessed through the network . The data store  may include any one or combination of methods for storing data, including without limitation, arrays, hash tables, lists, and pairs.","In the embodiment shown in , a user can input an explicit query into a search engine interface displayed on the client device , which is received by the search engine . The search engine  can also generate an implicit query based on a current user context or state, which can be determined by the query system  from contextual real time events or other means. Based on the query, the query system  can locate relevant information in the data store  or other index and provide a result set. In one embodiment, the result set comprises article identifiers identifying articles associated with the client applications  or client articles. Client articles stored in the data store  include articles associated with the user or client device , such as the word processing documents, previously viewed web pages and any other article associated with the client device or user . In another embodiment, the result set also comprises identifiers identifying articles located on the network  or network articles located by a search engine on a server device. Network articles include articles located on the network  not previously viewed or otherwise referenced by the user , such as web pages not previously viewed by the user ","The result sets comprise one or more article identifiers. An article identifier may be, for example, a Uniform Resource Locator (URL), a file name, a link, an icon, a path for a local file, or anything else that identifies an article. In the embodiment shown, an article identifier comprises a URL associated with an article.","Messaging articles stored in the data store  include user's emails, chat messages, and instant messaging messages. Each time a message is received, sent, modified, printed, or otherwise accessed, a record is stored in the data store . This information can later be searched to identify messages that should be displayed in the user interface.","An embodiment of the present invention may also store message threads in the data store . In such an embodiment, messages are related together by various attributes, including, for example, the sender, recipient, date\/time sent and received, the subject, the content, or any other attribute of the message. The related messages can then be retrieved as a thread, which may be treated as a document by the display processor .","The formatter  can receive the search result set from the query system  of the search engine  and can format the results for output to a display processor . In one embodiment, the formatter  formats the results in XML or HTML. The display processor  can be contained in memory  and can control the display of the result set on a display device associated with the client device . The display processor  may comprise various components. For example, in one embodiment, the display processor  comprises a Hypertext Transfer Protocol (HTTP) server that receives requests for information and responds by constructing and transmitting Hypertext Markup Language (HTML) pages. In one such embodiment, the HTTP server comprises a scaled-down version of the Apache Web server. In various embodiments, the functions described herein may be performed by various other components and devices.","Through the client devices -, users -can communicate over the network , with each other and with other systems and devices coupled to the network . As shown in , a server device  is also coupled to the network . In the embodiment shown, the search engine  can transmit a search query comprised of an explicit or implicit query or both to the server device . The user can also enter a search query in a search engine interface, which can be transmitted to the server device . In another embodiment, the query signal may instead be sent to a proxy server (not shown), which then transmits the query signal to server device . Other configurations are also possible.","The server device  shown includes a server executing a search engine application program, such as the Google\u2122 search engine. Similar to the client devices -, the server device  shown includes a processor  coupled to a computer-readable memory . Server device , depicted as a single computer system, may be implemented as a network of computer processors. Examples of a server device  are servers, mainframe computers, networked computers, a processor-based device, and similar types of systems and devices. The server processor  can be any of a number of or combination of computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill.","Memory  contains the search engine application program, also known as a search engine . The search engine  locates relevant information in response to a search query from a client device . The search engine  then provides the result set to the client device via the network . The result set  comprises one or more article identifiers. An article identifier may be, for example, a URL, a file name, a link, an icon, a path for a local file, or anything else that identifies an article. In the embodiment shown, an article identifier comprises a URL associated with an article. The result set may include text, audio, video or any other type of content.","In the embodiment shown, the server device , or related device, has previously performed a crawl of the network  to locate articles, such as web pages, stored at other devices or systems connected to the network , and indexed the articles in memory  or on another data storage device. In other embodiments, a crawl is not performed. For example, in one embodiment, an index of articles is created manually.","It should be noted that embodiments of the present invention may comprise systems having different architecture than that which is shown in . For example, in some systems according to the present invention, server device  may comprise a single physical or logical server. The system  shown in  is merely exemplary, and is used to explain the exemplary method shown in .","Various methods may be implemented in the environment shown in  and other environments, according to the present invention. Methods according to the present invention may be implemented by, for example, a processor-executable program code stored on a computer-readable medium.","In one embodiment of the present invention, a computer program, such as a display processor , causes a search dialog control to be displayed. For example, in one embodiment, the computer program may cause an interruption of the normal processing of an operating system call associated with a dialog control and cause the search dialog control to be displayed. The search dialog control may be associated with an index comprising a plurality of events. Each of the plurality of events is associated with at least one of a plurality of client applications, and at least some of the plurality of events are captured in real time. Each event may be associated with an article.","For example, in one embodiment, a word-processing program or other application program transmits an operating system call to open a common \u201cFile\/Open\u201d dialog control. The display processor  interrupts the normal processing of the call, i.e., prevents the common dialog from being displayed, and instead, displays a custom dialog control. In another embodiment, the display processor  displays a modified version of the common dialog, preserving existing functionality while adding additional features. The operating system call may identify the type of application program so that application-specific functionality can be invoked. In an alternative embodiment, the original dialog control is displayed as normal, and an additional dialog control is displayed. This additional control may appear next to the original dialog control, or may appear within appear within an existing content display, for example.","Interrupting the system call may be performed in various ways in embodiments of the present invention. For example, in a Microsoft\u00ae Windows\u00ae operating system, interrupting the system call may be accomplished via hooking or via standard API calls.","The dialog control that the display processor  displays may comprise a common dialog control or a custom dialog control. The dialog control may comprise a modified version of a common dialog control. For example, the dialog control may appear substantially the same as the \u201cFile\/Open\u201d dialog but function differently or include only somewhat different controls, such as an additional button.","In other embodiments, the dialog may be substantially similar to other common dialog controls, such as the find dialog control. Alternatively, the dialog control may comprise an additional button that is specific to the functionality described herein, such as a custom \u201cBrowse\u201d button.","In one embodiment, the dialog control comprises a text box. The user enters a search term in the text box and indicates that the search should begin by, for example, clicking an \u201cOpen\u201d or \u201cSearch\u201d button or by way of some other mechanism for issuing a search request. The display processor receives the input and causes a search to be performed on the index.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 2","FIG. 2"],"b":["128","102","102","128","202"],"i":["a ","a"]},"The display processor  then interrupts the normal processing of the operating system call . Intercepting an operating system call and providing an application-specific function is known in the art of applications development. Such functionality is sometimes referred to as spying or hooking. For example, an application executing in a Microsoft\u00ae Windows\u00ae environment can utilize the SetWindowsHookEx function to install a hook procedure at the beginning of a hook chain. Microsoft\u00ae Windows\u00ae supports a number of chains, including, for example, the WH_CALLWNDPROC and WH_CALLWNDPROCRET hook chains. The operating system calls the WH_CALLWNDPROC before passing a message to a receiving window procedure and calls the WH_CALLWNDPROCRET after the window procedure has processed the message. An application can utilize these hooks to intercept any calls between windows executing within the operating system. Once the calls are intercepted, application specific functions can be inserted in the processing chain in addition to or instead of the standard or default functions. From the foregoing description, it will be appreciated by those skilled in the art that embodiments of the present invention may, with some modification, similarly be implemented in conjunction with other (e.g., non-Windows) operating systems.","In the embodiment of the present invention shown in , the display processor  then causes a custom search dialog to be displayed . One such dialog is shown in, and described below in relation to, . The search dialog may comprise a textbox in which a computer user enters a search query. Other types of dialogs may also be used. For example, in one embodiment, a list of articles is displayed to the user. In another embodiment, the dialog may take the form of, for example, another button or an extra field.","The articles displayed in a content display of such an embodiment are articles that the user has recently viewed, edited, printed, or otherwise interacted with. In another embodiment, the custom dialog control allows configuration of indexing options. For example, upon interception of a \u201cFile Save\u201d dialog box, or a file write operating system event, the custom dialog control can display indexing options, allowing the user to select whether or not they would like the saved file to be indexed. Additional options may include an indexing level, such as whether the full content with images should be indexed, or whether only the text should be indexed. In one embodiment, this dialog is displayed each time and defaults to the user's last selection for the file type. In another embodiment, the custom dialog control is only displayed the first time a particular file type is encountered, and the user's option is automatically used in the future. In one embodiment, the user is not required to select an indexing option at that time. For example, the system may display the custom dialog within a section of a content display, which maintains a list of pending indexing options. The user may respond to these options when he or she prefers. In one embodiment, the options are only displayed on the screen for a short period, but an option in the user interface allows the user to display and respond to these options.","In one embodiment, an indexing preferences control is displayed to the user. In such an embodiment, the indexer utilizes these preferences when indexing files and\/or events. The indexing preferences control allows the user to specify preferences, such as, for example, whether the system stores and\/or indexes files and\/or events of a particular type. For example, in one embodiment, the user specifies that the indexer index files which are of the same type as the file the user is editing.","Other preferences may also be specified. In one embodiment, the user specifies whether or not to store native and\/or processed content in the data store . In another embodiment, the user specifies how much storage space each file or event may occupy (e.g., only store the first 50 KB of a file or index).","The user may not wish to alter preferences each time an event occurs that might trigger display of the dialog control. In one embodiment, the user is presented with the dialog control only on the first occurrence of a file and\/or event type (e.g., only the first time a Word document is opened or saved). In another embodiment, the control is presented to the user each time, but the setting in the dialog are set to the last known settings for the particular user\/file\/event combination.","Referring still to , the user enters a search query in the custom dialog and presses a button. The display processor  receives the search query  and causes the search to be executed on an index associated with the custom dialog . In other words, code associated with the press of the button causes a search to be executed on a particular index or on particular indices. The index may be stored locally, e.g., in the data store , or may be a global index. The index comprises one or more events. An event may include, for example, information indicating that the user printed a particular word-processing document within the previous hour. The event is associated with a client application, e.g., the word-processing application. At least some of the events are captured in real time. For example, in the case of the user printing a document, a program, such as the capture processor  in the embodiment shown in , captures the event and stores it in the index. The event can be subsequently accessed.","A query system or search engine, such as query system , executes the query on the index and returns a result. The display processor receives the result . The result may comprise zero, one, or many articles or article identifiers. The result may comprise a formatted page, e.g., an HTML page, or may comprise a data set. The display processor  causes the result to be output . The output may comprise a list, an HTML page, audio output, or any other type of suitable output of the results.","In one embodiment of the present invention, a user wishes to access a document that the user printed within the last two months. The document included information about the Segway\u2122 Human Transporter (HT). The user is not sure whether the document was an attachment to an email, an article the user found on the Internet, or an article the user accessed in some other way.","To find the document, the user accesses a word-processing application. The user clicks the \u201cFile\/Open\u201d button to open the document. The dialog shown in  is displayed.  is a screen shot illustrating a user interface including a search dialog in one embodiment of the present invention. The dialog  shown in  comprises a text box for entering a search term . The user enters the search term, in this case \u201cSegway,\u201d in the text box  and clicks the \u201cOK\u201d button .","When the user clicks the \u201cOK\u201d button , the display processor  causes the search to be executed on a local or global index as defined herein. The index provides the display processor  with results; the display processor  generates a content display, such as content display . The display processor  causes the content display  to be output to the user. The content display comprises a list of articles  related to the user's search term, \u201cSegway.\u201d The list of articles in the embodiment shown in  includes one or a combination of articles with which a user may interact, including, for example, without limitation email, web, files, chat messages, and other types of articles. In other embodiments, the content display  may be structured in other ways, such as a drop-down combo or list box or other type of control or display.","In one embodiment, the results searched and\/or returned to the user are restricted based on the context of what is being modified. For instance, in one such embodiment, when the user is editing a documents in Microsoft\u00ae Word, only Word documents may be searched.","In the embodiment shown, if the user is not sure of what term to use to find content, the user can simply click the Browse button  of the dialog . Upon pressing the \u201cBrowse\u201d button, the user is presented with a version of the content display  that includes articles which were recently accessed, created, or fit some other criteria that identifies them as potentially of interest to the user.","The foregoing description of embodiments of the invention has been presented only for the purpose of illustration and description and is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Numerous modifications and adaptations thereof will be apparent to those skilled in the art without departing from the spirit and scope of the present invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["These and other features, aspects, and advantages of the present invention are better understood when the following Detailed Description is read with reference to the accompanying drawings, wherein:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
