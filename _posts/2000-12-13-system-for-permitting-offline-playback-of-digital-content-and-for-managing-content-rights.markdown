---
title: System for permitting off-line playback of digital content, and for managing content rights
abstract: A system for permitting offline content playback and for managing the rights to one or more digital content files within a computer network. The system manages these rights by encrypting the content files to prevent unauthorized access to the files. Encryption is accomplished by using one or more keys which are associated with one or more segments of the content file. These keys enable an authorized user to decrypt and playback the content files at a subsequent time. When the keys are received, a license which specifies the rights of the user regarding the content files, is obtained by the end user system, and verified locally to permit the content playback.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06915425&OS=06915425&RS=06915425
owner: Aladdin Knowledge Systems, Ltd.
number: 06915425
owner_city: Tel Aviv
owner_country: IL
publication_date: 20001213
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE DIAGRAMS"],"p":["This application is related to co-pending U.S. patent application Ser. No. 09\/659,902, filed Sep. 12, 2000, entitled \u201cSystem for Managing Rights and Permitting On-Line Playback of Digital Content\u201d which is hereby incorporated by reference as if set forth in full in this application.","This invention relates to the field of information processing and more particularly to systems for implementing off-line digital management rights.","Increased use of electronic computer networks, such as the Internet has resulted in a fundamental problem now facing content providers, namely, the problem of how to prevent the unauthorized use and distribution of digital content. These content providers include publishers of video games, music, books, medical information, information database providers, and providers of interactive web players. Examples of interactive web players currently available on the market are Quicktime 4\u2122 available from Apple Computer, Inc.\u00ae, RealPlayer\u2122 available from RealNetworks, Inc.\u00ae and Shockwave 7\u2122 available from MacroMedia, Inc.\u00ae.","These content providers are concerned with getting compensated for their work. Unauthorized copying and use of content providers works deprives rightful owners of billions of dollars according to a well-known source. Unauthorized copying is exercebated because consumers can easily retrieve content, and technology is available for perfectly reproducing content.","A number of mechanisms have been developed to protect against unauthorized access and duplication and to provide digital rights management. One method is a digital rights management system that allows a set of rules to determine how the content is used. Another method (for software) for curbing unauthorized duplication is the use of a scheme which provides software tryouts or demos that typically work and expire after a specific duration. Other methods use a copy protection scheme that limits the number of copies that a user can make, after which additional copying results in corrupt copies. Further, an alternate scheme requires the presence of a license on a client workstation for the software to operate.","Many of the aforementioned schemes are typically implemented using \u201cencryption\/decryption\u201d of the digital content. Encryption is the conversion of data into an unintelligible form, e.g., ciphertext, that cannot be easily understood by unauthorized users. Decryption is the process of converting encrypted content back into its original form such that the it becomes intelligible. Simple ciphers include the rotation of letters in the alphabet, the substitution of letters for numbers, and the \u201cscrambling\u201d of voice signals by inverting the sideband frequencies. More complex ciphers work according to sophisticated computer algorithms that rearrange the data bits in digital information content.","In order to easily recover the encrypted information content, the correct decryption key is required. The key is an algorithm that decodes the work of the encryption algorithm. The more complex the encryption algorithm, the more difficult it becomes to decode the communications without access to the key. Generally, there are two types of key schemes for encryption\/decryption systems, namely (1) Public Key Systems (PKS) or asymmetric systems which utilize two different keys, one for encryption, or signing, and one for decryption, or verifying; and (2) nonpublic key systems that are known as symmetric, or secret key, systems.","Although the use of public or private key can be an effective way to prevent access to digital content, the transfer of keys often requires extensive coordination with the end user. Also, the use of keys in the related art does not always provide flexible licensing arrangements, or an efficient way to handle many instances of different deliverable digital content products.","Therefore, there is a need to resolve the aforementioned problem relating to conventional approaches for protecting digital information particularly with regard to managing the digital rights for off-line distribution of interactive web content and music.","A system for permitting off-line playback of digital content files, and for managing related content rights. The system comprises a content builder for encrypting the content files to prevent unauthorized access to the files, and a license module for generating a license which authorizes the user to playback the file. Advantageously, the system permits verification of the license while the user is offline, and permits decryption of the content file to permit offline playback of the content files.","In a first embodiment, the system comprises a method for permitting offline playback of a content file on a user computing device upon offline verification of the terms of a license for authorizing the playback of the content file. The method comprises the steps of identifying the license by using one or more information fields within the header, verifying the terms of the license locally on the user computing device while the user is offline, retrieving from the license, a session key for decrypting the content file, retrieving from the license, a segment which is part of the content file, decrypting the content file using the session key to permit playback of the content file for a single session, and combining the segment with the content file to permit playback of the content file.","Overview","A system for enabling the off-line playback of content files by an authorized user system, and for managing the rights to digital content files within a computer network. The system includes a content builder for encrypting the content files to prevent unauthorized access to the files. The system encrypts the files by using one or more keys which are associated with one or more segments of the content file. These keys enable an authorized user to decrypt and playback the content files at a subsequent time. When the keys are received by an end user's system, it retrieves a license from a license server which specifies the rights of the user as it relates to the content files. Therefore, at the very least, one or more keys and a license are required in order for a user to play back a content file. In this manner, the present system manages digital rights pertaining to such content files in accordance with one embodiment of the present invention. As used herein, the term \u201ccontent\u201d refers to digital information. The present invention will be further understood with reference to the diagrams and descriptions which follow.","Embodiments of the Present Invention",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":"100"},"In , system  comprises DRM key module  for associating the information contained within a content file with a license, database  for storing key sheaves received from content builder , content builder module  for encrypting one or more digital files, and DRM encoder  for coordinating encryption as well as providing a header, without limitation. In a typical content encryption procedure, content builder  receives a single unencrypted content file  (or multiple unencrypted content files ) for encryption. Example of content files  are musical recordings and audio or video images. Further, content files  may be may be from third party sources or directly from the content providers.","When content file  is received, content builder  utilizes an encryption algorithm to implement the encryption process. In one embodiment, this process is accomplished by segmenting content file  into variable segments, each segment being encrypted with a separate key. A \u201ckey\u201d may be a variable value that is applied to content file  using an algorithm to produce encryption text. A single key or multiple keys having constant or variable lengths may be employed depending on which embodiment is implemented. After the encryption process, the keys are saved in database  for later retrieval during the playback process. In an exemplary embodiment, database  is an industry standard database system such as Oracle 8\u2122 available from Oracle, Inc.\u00ae Content builder  also functions to interact with database  to create the necessary information to enable the sale, distribution and tracking of the content within system .","Advantageously, during the encryption process, content builder  removes a portion of content file  and in its place inserts a header (not shown), supplied by DRM encoder . The removed portion is thereafter added to a license file for authorizing playback of the content file . Therefore, the removed portion is considered part of the keys. Depending on the embodiment being implemented, the removed portion may be added to a pre-configured license, the terms of which are predefined. During the playback process, the pre-configured license is then retrieved when its terms are the same as the user's transaction. Alternatively, the removed portion may be saved and later added to a license which is generated on the fly during the playback process. In any event, once the license is obtained, the removed portion is thereafter recombined with the original content portion during the playback process.","Advantageously, removing a portion of content file  also provides a measure of extra security as the removed portion of content file  remains unavailable until decryption time. Therefore, copying encrypted content to another machine is completely useless without the back binding license. In this manner, the process of seeking a specific location in content file  during the decryption process is simplified. The header within content file  contains information fields such as the license name, the content file identification, and the license server URL (uniform resource locator).","The license name field enables content file  to be associated with the license file (containing the removed content portion). The content identification field identifies the content file  while the license server URL points to the address of the license server where the license is generated (or located). Although a multiple-field header is not shown, one of ordinary skill in the art will realize that the header may contain multiple fields for identifying various types of information other than those referenced above.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 2","FIG. 2"],"b":["200","204","210","204","200","202","204","212","208","208","204","202","206","208","212","208"]},"Alternatively, a module which implements the functionality of DRM proxy  may be combined with content player , in which case, content player  functions as single unit that retrieves and plays the encrypted content file. Examples of content players which are currently available on the market are Quicktime 4\u2122 available from Apple Computer, Inc.\u00ae, RealPlayer\u2122 available from RealNetworks, Inc.\u00ae and Shockwave 7\u2122 available from MacroMedia, Inc.\u00ae. Although not shown, one of ordinary skill in the art will realize that various permutations of modules and modes for retrieving encrypted content  are possible.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 3","FIG. 3"],"b":["300","304","300","302","304","308","310"]},"In operation, after a user consummates a purchase transaction, content files  are delivered to and stored on the user's local disk. Of course, along with content files , a license (not shown) that grants the rights to play the content is also downloaded and stored within license store . At this point, the user may defer playback of the content, until a subsequent time that is convenient. It should be observed that content files  as well as the license remain encrypted, and are dynamically decrypted on the fly whenever the user initiates playback.","Upon initiation of the off-line playback process (via a user interface, not shown, for example), content player  begins by retrieving a first portion of encrypted content files  from the user's local disk. The first portion of the retrieved content file, contains a content header (described in ) for identifying a license name, a content identification, or a license server URL among other information. Thereafter, the first portion is handed over to player module , which begins to coordinate the decryption of content files . Player module  contacts DRM core  to request a session key for decrypting the content files.","Because the requested key is contained within the license, DRM core  must identify the appropriate license. This is accomplished by reading the content header to identify the license name, and the content identification. In an alternate embodiment, when the license is not stored locally, the header may contain the URL of a license server (not shown) wherein the license is located. In addition, license data generator  provides DRM core  with a machine identification which is unique to the end user's machine for comparison with the header information.","Using all of the obtained information, DRM core  retrieves the license from license store . DRM core  verifies the terms of the license, and retrieves the session key which is contained within the license. Advantageously, the session key is a single session key, meaning that it enables playback of the encrypted files only for a single session. After retrieving the session keys, DRM core  passes the key securely back to player module . In turn, player module  forwards the key and encrypted content files  to DRM decoder  which executes the decryption process and returns the decrypted files to player module . Finally, content player  passes the decrypted content files content player  for playback. In this manner, the present invention permits license verification while the user is offline.","It should be noted that the preceding steps are only performed for the first portion of encrypted content after which subsequent portions are automatically played back. Further, it should be observed that there are implications for the player module  when it hands encrypted content to the decoder module , because content is encrypted on a frame-by-frame basis. This makes seeking a specific location and the content a little more difficult and, as such, the decoder module may be provided with API (application programming interface) to aid the caller in dealing with these frames. In this manner, the present invention enables system  to upload encrypted content files  and play back those content files using a content player module . Advantageously, system  allows only authorized users to playback content files in accordance with one embodiment.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 4","b":"400"},"In , as shown in an exemplary embodiment, system  includes client and server sides  and . Among other components, client side  includes DRM proxy  for preparing data for a license request, module  for building a license request message, DRM core  for obtaining machine specific information from license data generator , and license database  for storing license files.","In a typical operation, the user purchases content such as music recordings (for example) from the store front at a website (not shown). Numerous websites are available for purchasing various types of digital content including Disney.com\u00ae, Sony.com\u00ae, and Shockwave.com\u00ae, for example. Using a web browser or a program that is capable of posting a web form to server , the user initiates the transaction with the appropriate website. The transaction typically involves several round trips to the web site with the transaction concluding with a request for a box file . Box file  is a file that describes the content requested by the user, and in one embodiment has a .cBox extension.","DRM proxy  contains a box file handler and is registered with system  as the handler for files with the .cBox extension. When box file  is received, DRM proxy  directs module  to build a license request message for forwarding to license server . In one embodiment, this request is in XML (extensible markup language) format. Module  queries the machine identification to be included in the license request. Thereafter, DRM proxy  starts a network job which sends the license request message to license server . License server , in one embodiment is a CGI (common gateway interface) program available through license server .","Upon receipt of the license request, license server  verifies that the content file has been purchased prior to continuing with the processing of the license request. data base  contains the terms of the license along with the keys for decrypting the content file. These terms are retrieved and forwarded to license generator . It should be observed that a different license generator is implemented for each digital rights management solution being employed on client side . License generator  generates the license which includes the terms of the license. Also included within the license, are the keys for decrypting the content file.","It should be observed that the content decryption keys are bound to the particular machine located on the client side . By way of example, particular information that is unique to the machine such as the machine identification number is bound to the license. In this way, the present invention implements a machine-binding solution which allows digital content playback only on a particular machine. Upon receiving the license from license generator , license server  forwards the license over the network to DRM proxy . In turn, DRM proxy forwards the license to module  for DRM-specific processing. DRM core  retrieves the license and stores the license within database .","Although not shown, the process for retrieving a license may occur subsequent to a purchase transaction such as when the user wishes to play back content offline. Further, license acquisition can also occur when there is no financial transaction involved; for example, when the user requests a trial license. A trial license permits a user to utilize the content files for a specific period after which the trial license expires. Table 1 below illustrates exemplary steps taken by system  to acquire a license when there is no financial transaction involved.",{"@attributes":{"id":"p-0042","num":"0041"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"char"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1.","A content player (not shown) asks DRM core 408 to play a content."]},{"entry":["2.","DRM core 408 checks its local store, e.g., license store 412, and finds"]},{"entry":[{},"there is no valid license available (it finds no license or license"]},{"entry":[{},"is expired)."]},{"entry":["3.","DRM core 408 fields a license request message with the machine "]},{"entry":[{},"identification."]},{"entry":["4.","DRM core 408 invokes DRM proxy 404 to send a license request"]},{"entry":[{},"message."]},{"entry":["5.","DRM proxy starts a network job to send a license request message"]},{"entry":[{},"to license server 416."]},{"entry":["6.","License server 416 presents a page to collect license terms desired"]},{"entry":[{},"by the user and supported by system 400 before continuing with the"]},{"entry":[{},"processing of license request."]},{"entry":["7.","The terms of the license are collected and sent to data base 414."]},{"entry":["8.","The license request, along with the terms of the license and keys"]},{"entry":[{},"for decryption, are retrieved from data base 414 and are dispatched"]},{"entry":[{},"to license generator 418."]},{"entry":["9.","The license is generated from the obtained information."]},{"entry":["10.","The license data is returned to server 416."]},{"entry":["11.","License data is returned over the network to the DRM proxy 404."]},{"entry":["12.","DRM proxy 404 passes the license response message to DRM 406"]},{"entry":[{},"for DRM-specific processing."]},{"entry":["13.","DRM module 406 via DRM core 408 saves the license data in its"]},{"entry":[{},"license store 412."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The present invention advantageously separates a portion of the content from the original content file until decryption time to prevent unauthorized content usage. Moreover, licenses are bound to particular machines so that copying the content to a machine other than the authorized machine is futile. The present invention also utilizes a secure data channel in which the content keys are passed in secured format. Code obfuscation is used to hide code that handles decrypted data.","Other advantages include the implementation of the DRM core and the DRM decoder within separate modules to increase the complexity for hackers, and the employment of session key-based on-line license verification to maximize security. In this manner, the system of the present invention manages rights to one or more digital content files within a computer network and limits the playback of such content files to an authorized user. Furthermore, the present invention facilitates distribution and content production, which ultimately results in a shorter product development cycle.","Description of Hardware",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 5A","b":["1","3","5","7","11","13","9"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 5B","b":"1"},"In , subsystems within box  are directly interfaced to internal bus . Such subsystems typically are contained within the computer system such as within cabinet  of FIG. A. Subsystems include input\/output (I\/O) controller , System Random Access Memory (RAM) , Central Processing Unit (CPU) , Display Adapter , Serial Port , Fixed Disk  and Network Interface Adapter . The use of bus  allows each of the subsystems to transfer data among the subsystems and, most importantly, with the CPU. External devices can communicate with the CPU or other subsystems via bus  by interfacing with a subsystem on the bus. Monitor  connects to the bus through Display Adapter . A relative pointing device (RPD)  such as a mouse connects through Serial Port . Some devices such as Keyboard  can communicate with the CPU by direct means without using the main data bus as, for example, via an interrupt controller and associated registers (not shown).","As with the external physical configuration shown in , many subsystem configurations are possible.  is illustrative of but one suitable configuration. Subsystems, components or devices other than those shown in  can be added. A suitable computer system can be achieved without using all of the subsystems shown in FIG. B. For example, a standalone computer need not be coupled to a network so Network Interface  would not be required. Other subsystems such as a CDROM drive, graphics accelerator, etc. can be included in the configuration without affecting the performance of the system of the present invention.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 5C"},"In , the network system  includes several local networks coupled to the Internet. Although specific network protocols, physical layers, topologies, and other network properties are presented herein, the present invention is suitable for use with any network.","In , computer USER1 is connected to Server1. This connection can be by a network such as Ethernet, Asynchronous Transfer Mode, IEEE standard 1553 bus, modem connection, Universal Serial Bus, etc. The communication link need not be a wire but can be infrared, radio wave transmission, etc. Server1 is coupled to the Internet. The Internet is shown symbolically as a collection of server routers . Note that the use of the Internet for distribution or communication of information is not strictly necessary to practice the present invention but is merely used to illustrate a preferred embodiment, below. Further, the use of server computers and the designation of server and client machines is not crucial to an implementation of the present invention. USER1 Computer can be connected directly to the Internet. Server1's connection to the Internet is typically by a relatively high bandwidth transmission medium such as a T1 or T3 line. Similarly, other computers at  are shown utilizing a local network at a different location from USER1computer. The computers at  are coupled to the Internet via Server2. USER3 and Server3 represent yet a third installation.","Note that the concepts of \u201cclient\u201d and \u201cserver,\u201d as used in this application and the industry, are very loosely defined and, in fact, are not fixed with respect to machines or software processes executing on the machines. Typically, a server is a machine or process that is providing information to another machine or process, i.e., the \u201cclient,\u201d that requests the information. In this respect, a computer or process can be acting as a client at one point in time (because it is requesting information) and can be acting as a server at another point in time (because it is providing information). Some computers are consistently referred to as \u201cservers\u201d because they usually act as a repository for a large amount of information that is often requested. For example, a World Wide Web (WWW, or simply, \u201cWeb\u201d) site is often hosted by a server computer with a large storage capacity, high-speed processor and Internet link having the ability to handle many high-bandwidth communication lines.","A server machine will most likely not be manually operated by a human user on a continual basis, but, instead, has software for constantly, and automatically, responding to information requests. On the other hand, some machines, such as desktop computers, are typically thought of as client machines because they are primarily used to obtain information from the Internet for a user operating the machine.","Depending on the specific software executing at any point in time on these machines, the machine may actually be performing the role of a client or server, as the need may be. For example, a user's desktop computer can provide information to another desktop computer. Or a server may directly communicate with another server computer. Sometimes this is characterized as \u201cpeer-to-peer,\u201d communication. Although processes of the present invention, and the hardware executing the processes, may be characterized by language common to a discussion of the Internet (e.g., \u201cclient,\u201d \u201cserver,\u201d \u201cpeer\u201d) it should be apparent that software of the present invention can execute on any type of suitable hardware including networks other than the Internet.","Although software of the present invention, may be presented as a single entity, such software is readily able to be executed on multiple machines. That is, there may be multiple instances of a given software program, a single program may be executing on two or more processors in a distributed processing environment, parts of a single program may be executing on different physical machines, etc. Further, two different programs, such as a client and server program, can be executing in a single machine, or in different machines. A single program can be operating as a client for one information transaction and as a server for a different information transaction.","While the above is a complete description of exemplary specific embodiments of the invention, additional embodiments are also possible. Thus, the above description should not be taken as limiting the scope of the invention, which is defined by the appended claims along with their full scope of equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5B","b":"1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5C"}]},"DETDESC":[{},{}]}
