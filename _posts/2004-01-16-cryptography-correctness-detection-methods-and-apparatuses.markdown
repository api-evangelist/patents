---
title: Cryptography correctness detection methods and apparatuses
abstract: Methods and apparatuses are provided that can inform certain processes and/or even the user about the relative strength/weakness of cryptography services being used. In certain methods, for example, at least one cryptography service parameter threshold is established. The method further includes, selectively detecting a request for at least one cryptography service, and selectively performing at least one correctness detection action based on the requested cryptography service and the cryptography service parameter threshold. The cryptography service parameter threshold identifies acceptable/unacceptable cryptography algorithms, acceptable/unacceptable cryptography key size parameters, acceptable/unacceptable cryptography seed size parameters, and other like parameters that the requested cryptography service information can be compared with.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07602903&OS=07602903&RS=07602903
owner: Microsoft Corporation
number: 07602903
owner_city: Redmond
owner_country: US
publication_date: 20040116
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention relates generally to computers and like devices, and more particularly to methods and apparatuses that for detecting if cryptography information\/services meet certain acceptable conditions from the security point of view for use by computing processes.","Cryptography services are typically provided in computing systems to support various security needs. These cryptography services employ different cryptography techniques and algorithms as needed to perform certain actions.","Cryptography techniques may be categorized as either symmetric cryptography or asymmetric cryptography. With symmetric cryptography, the same secret key is used for both encryption and decryption. This means that the symmetric key needs to be shared between the encrypting party and the decrypting party. Any party having a copy of the symmetric key may therefore decrypt and read a message. Hence, there is a need to protect and maintain control over the symmetric key. Security is provided through the protection of the key being used by the sender and the receiver. As long as only the sender and receiver know the secret symmetric key value, the message is protected (assuming a robust encryption algorithm and a cryptographically safe key size\/seed are used).","Asymmetric cryptography (public key cryptography) is typically based on a \u201ckey pair\u201d. Here, one key in the pair is referred to as the \u201cpublic\u201d key. As the public directory, for example. The other key is referred to as the \u201cprivate\u201d key. Also consistent with its name, the private key is meant to be kept secret and secure by the party. Although the two keys are mathematically related, the private key cannot be determined from the public key, or at least doing so would likely be computationally infeasible.","Encryption and signing are two typical operations associated with public key cryptography. Data that is encrypted using a public key can only be decrypted using the associated private key and vice versa. Signing allows one to verify the source of a piece of data. Signing does not, however, protect the data from being viewed by anyone who has access to the sender's public key. In asymmetric cryptography, security is provided through the protection of the private keys.","Asymmetric cryptography is also often employed to provide authentication, non-repudiation and data integrity security mechanisms. Authentication provides assurance that a message was actually sent by the party indicated. Non-repudiation provides assurance that a sender cannot later deny having sent certain data. Data Integrity provides assurance that a message was not modified prior to reaching its destination.","These security mechanisms are typically provided by using a hash function in conjunction with public key cryptography. A hash function is basically an encoding scheme that is quick to compute and results in a relatively short numeric representation of the message that was hashed. Hash functions can be used to provide data integrity. First, a hash function is a one-way function, which means that one cannot retrieve the message from the resulting hash value. Second, the slightest change to the original message will result in a clearly detectable change of the hash value.","Some processes use a hash function in conjunction with public key cryptography to provide a security service often referred to as \u201csigning\u201d that ensures authentication and non-repudiation. For example, in certain systems, when a user signs a message, a hash of the message is calculated and then encrypted using the sender's private key. The resulting encrypted hash is referred to as the \u201cdigital signature\u201d. The original plaintext message, the digital signature, and the sender's certificate which contains the sender's public signing key are then sent to the recipient. Once received, the digital signature is decrypted using the sender's public key that was sent along with the message in the form of a certificate. The receiving client also generates a hash value for the plaintext message using the same hash function as did the sender. After the signature of the sender is decrypted with the sender's public key and the hash value recovered, the recovered hash value can then be compared with the generated hash value to detect differences. If the two hash values match, then the message must have originated from the sender who posses the private key. Hence, this provides authentication and non-repudiation. Furthermore, since this technique reliably detects if the message was changed\/tampered during transit, data integrity is provided.","Cryptography services such as these and others are often handled \u201cautomatically\u201d by the processes running on computing devices. This means, however, that such processes and\/or users are sometimes not aware of the type of algorithm\/key being used, nor if such algorithms\/keys may be less secure than others that are available for use.","Consequently, for such reasons and others, there is a need for methods and apparatuses that can inform certain processes and\/or even the user about the relative strength\/weakness of cryptography services being used.","Methods and apparatuses are provided that can inform certain processes and\/or even the user about the relative strength\/weakness of cryptography services being used.","The above stated needs and\/or others are met, for example, by a method that includes establishing at least one cryptography service parameter threshold, selectively detecting a request for at least one cryptography service, and selectively performing at least one correctness detection action based on the requested cryptography service and the cryptography service parameter threshold.","The cryptography service parameter threshold may identify acceptable\/unacceptable cryptography algorithms, acceptable\/unacceptable cryptography key size parameters, acceptable\/unacceptable cryptography seed size parameters, and other like parameters with which requested cryptography service information can be compared.","Algorithms, for example, may be categorized as being certified, old\/out-of-date, weak, strong, etc. Key\/seed lengths may also be compared to threshold lengths that are considered either weak or strong.","In certain implementations the method may also include performing actions, such as, for example, interrupting the application process, stopping the application process, starting at least one process to do further actions, displaying alert information, logging alert information, suggesting at least one alternative cryptography service, outputting alert messages, causing alteration of a graphical user interface, forcing use of at least one other cryptography service, etc., if the requested cryptography service is deemed to be \u201ctoo weak\u201d.","Turning to the drawings, wherein like reference numerals refer to like elements, the invention is illustrated as being implemented in a suitable computing environment. Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by a personal computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multi-processor systems, microprocessor based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1","b":"120"},"Exemplary computing environment  is only one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the improved methods and apparatuses described herein. Neither should computing environment  be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in computing environment .","The improved methods and apparatuses herein are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable include, but are not limited to, personal computers, server computers, thin clients, thick clients, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.","As shown in , computing environment  includes a general-purpose computing device in the form of a computer . The components of computer  may include one or more processors or processing units , a system memory , and a bus  that couples various system components including system memory  to processor .","Bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnects (PCI) bus also known as Mezzanine bus.","Computer  typically includes a variety of computer readable media. Such media may be any available media that is accessible by computer , and it includes both volatile and non-volatile media, removable and non-removable media.","In , system memory  includes computer readable media in the form of volatile memory, such as random access memory (RAM) , and\/or non-volatile memory, such as read only memory (ROM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processor .","Computer  may further include other removable\/non-removable, volatile\/non-volatile computer storage media. For example,  illustrates a hard disk drive  for reading from and writing to a non-removable, non-volatile magnetic media (not shown and typically called a \u201chard drive\u201d), a magnetic disk drive  for reading from and writing to a removable, non-volatile magnetic disk  (e.g., a \u201cfloppy disk\u201d), and an optical disk drive  for reading from or writing to a removable, non-volatile optical disk  such as a CD-ROM, CD-R, CD-RW, DVD-ROM, DVD-RAM or other optical media. Hard disk drive , magnetic disk drive  and optical disk drive  are each connected to bus  by one or more interfaces .","The drives and associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules, and other data for computer . Although the exemplary environment described herein employs a hard disk, a removable magnetic disk  and a removable optical disk , it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, random access memories (RAMs), read only memories (ROM), and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk, magnetic disk , optical disk , ROM , or RAM , including, e.g., an operating system , one or more application programs , other program modules , and program data .","The improved methods and apparatuses described herein may be implemented within operating system , one or more application programs , other program modules , and\/or program data .","A user may provide commands and information into computer  through input devices such as keyboard  and pointing device  (such as a \u201cmouse\u201d). Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, serial port, scanner, camera, etc. These and other input devices are connected to the processing unit  through a user input interface  that is coupled to bus , but may be connected by other interface and bus structures, such as a parallel port, game port, or a universal serial bus (USB).","A monitor  or other type of display device is also connected to bus  via an interface, such as a video adapter . In addition to monitor , personal computers typically include other peripheral output devices (not shown), such as speakers and printers, which may be connected through output peripheral interface .","Computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . Remote computer  may include many or all of the elements and features described herein relative to computer .","Logical connections shown in  are a local area network (LAN)  and a general wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When used in a LAN networking environment, computer  is connected to LAN  via network interface or adapter . When used in a WAN networking environment, the computer typically includes a modem  or other means for establishing communications over WAN . Modem , which may be internal or external, may be connected to system bus  via the user input interface  or other appropriate mechanism.","Depicted in , is a specific implementation of a WAN via the Internet. Here, computer  employs modem  to establish communications with at least one remote computer  via the Internet .","In a networked environment, program modules depicted relative to computer , or portions thereof, may be stored in a remote memory storage device. Thus, e.g., as depicted in , remote application programs  may reside on a memory device of remote computer . It will be appreciated that the network connections shown and described are exemplary and other means of establishing a communications link between the computers may be used.","Attention is now drawn to , which is a block diagram illustratively depicting certain computer-implementable processes  that are configured to operate together in a manner such that cryptographic services can be requested by certain processes and provided by other processes to the requesting process accordingly. The cryptographic services may include, for example, encryption services, decryption services, key generation services, key exchange services, digital signature services, etc. Typically, cryptographic services are requested or otherwise initiated by processes, such as applications, and the actual cryptography services performed by one or more other cryptography algorithm processes. The applications usually interact with the operating system through the application programming interfaces (API) to initiate the cryptography services.","Thus, for example, as depicted in  an operating system  contains interfaces (APIs) between an application  and cryptography algorithm logic . Included in operating system  is cryptography correctness detection logic . While illustrated in this example as being part of the operating system, in other implementations cryptography correctness detection logic  may be a process that is separate from operating system  but operatively coupled to operating system  to perform functions\/acts accordingly.","Attention is now drawn to , which is a flow diagram showing a method  that cryptography correctness detection logic  in the example in  can be configured to perform.","In act , which is optional, cryptography correctness parameter(s) and\/or other like information are updated and maintained. This may include an initial establishment of the cryptography correctness parameter(s) and\/or other like information, or the periodic or otherwise selective updating of cryptography correctness parameter(s) and\/or other like information. As a result of act , cryptography correctness parameter(s) and\/or other like information is configured and stored, for example, in a computer's memory. These cryptography correctness parameters may be configured according to the security requirements for the application and ma change in time according to the computational power available and advances made in cryptanalysis.","In act , the current relative \u201cstrength\u201d for each available cryptography algorithm logic  is established. Here, for example, the cryptography correctness parameter(s) and\/or other like information as provided in act  may include one or more cryptography service parameter thresholds. Such parameter thresholds can identify acceptable (\u201cstrong\u201d enough) and\/or unacceptable (too \u201cweak\u201d) cryptography algorithms, or acceptable\/unacceptable cryptography key size parameters. Cryptography algorithms can be specified using algorithm identifiers, version numbers, etc., and cryptography key size parameters can be identified by specifying acceptable\/unacceptable bit lengths, for example.","In certain implementations, as part of acts \/, the cryptography service parameter threshold(s) are further associated with correctness categories. These correctness categories can, for example be employed to define the different algorithm identifiers, key lengths, etc., as being \u201cold\u201d\/outdated algorithms, new\/strong algorithms, weak keys, and strong keys.","The cryptography service parameter threshold may also identify acceptable\/unacceptable seed type\/size parameters associated with cryptography services, such as key generation.","In act , cryptography correctness detection logic  is configured to monitor on-going applicable processes to detect or otherwise be made aware of a request for or use of cryptography services from cryptography algorithm logic . For example, in certain implementations application  alerts operating system  as to a need for cryptography services. Cryptography correctness detection logic  is made aware of this request in act .","In act , various processes may be monitored; for example, application processes, operating system services, managed code application processes, or other processes calling into the cryptographic application programming interfaces (API) processes, and\/or the like can be monitored.","In act , cryptography correctness detection logic  determines if the requested cryptography service\/algorithm meets the conditions established in acts \/ via the cryptography correctness parameters\/information. For example, in act  it can be determined if the identified cryptography algorithm is considered to be \u201cstrong\u201d enough or too \u201cweak\u201d for a given process, time, user, data, etc. This may include, for example, determining a category for the algorithm\/key. This may also include determining the type\/length of a key to be used and comparing the type\/length to applicable cryptography correctness parameters\/information.","If, in act , it is determined that the requested cryptography service\/algorithm satisfies the applicable cryptography correctness parameters\/information, then the cryptography service\/algorithm continues to execute accordingly. Information may be logged by cryptography correctness detection logic regarding the monitoring activities in act  and\/or the determination made in act .","To the contrary, if, in act , it is determined that the requested cryptography service\/algorithm fails to satisfy the applicable cryptography correctness parameters\/information, then the cryptography service\/algorithm continues with act .","In act , one or more actions may be initiated or otherwise performed by cryptography correctness detection logic . By way of example, actions may include interrupting the application process, stopping the application process, starting at least one process to perform further correction\/notification actions, displaying alert information, logging alert information, suggesting at least one alternative cryptography service, outputting alert messages, causing alteration of a graphical user interface, and\/or forcing use of at least one other cryptography algorithm\/service instead of the requested algorithm\/service.","In this manner, cryptography correctness detection logic  can be configured to support or enforce specific security\/policy requirements depending on the device\/user\/situation. Thus, in certain implementations, when a \u201cweak\u201d algorithm\/key is detected by cryptography correctness detection logic , then the algorithm\/key may be flagged accordingly to alert the program, user, administrator, etc., about the use of a weak algorithm\/key\/seed, while also allowing the requested cryptography service to continue. In other stricter implementations, a requested cryptography service that is deemed to be too weak may not be continued or otherwise refused to occur. In still other examples, an implementation may actively suggest one or more different, i.e., \u201cstronger\u201d, algorithms\/keys\/seeds. Here, a user can be presented with and selectively authorize such substitution. In still other implementations, such a substitution may be made automatically or at least initiated automatically by cryptography correctness detection logic . Information may also be logged by cryptography correctness detection logic  regarding the actions initiated in act .",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIGS. 4-9","b":["204","300"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 4","b":["400","204","402","208","404","404","406","408","410"]},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 5","b":["500","204","502","208","504","506","516","508","516"]},"Retuning to act , if the algorithm is determined to be RC2, then in method  continues with act , in which action is initiated in the form of a flag old algorithm action. This action may include recommending a substitute algorithm. In act , it is determined if the effective key size is sufficiently secure, e.g., based on its size (length in bits) (e.g., less than M bits, with M currently equal to 128). If the symmetric key is deemed sufficiently secure, then control is returned to the application or other applicable process in act . If the symmetric key is deemed to not be sufficiently secure, then in act  action is initiated in the form of a flag weak key action and the method continues with act .",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 6","b":["600","204","602","208","604","604","606","608","610"]},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 7","b":["700","204","702","208","704","700","712","700","706"]},"In act  action is initiated in the form of a flag old algorithm action. This action may include recommending a substitute algorithm. In act , it is determined if the effective key size is sufficiently secure, e.g., based on its size (length in bits) (e.g., less than M bits, with M currently equal to 128). If the symmetric key is deemed sufficiently secure, then control is returned to the application or other applicable process in act . If the symmetric key is deemed to not be sufficiently secure, then in act  action is initiated in the form of a flag weak ciphertext may have been compromised action and the method continues with act .",{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 8","b":["800","204","802","208","804","804","806","808","810"]},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 9","b":["900","204","902","904"]},"In act , it is determined if a public key that is used for key encryption\/decryption of the imported\/exported key is sufficiently secure enough for the present operation. For example, in act  the size of the public key may be compared to a minimum acceptable public key size. If, in act , the public key is deemed to be sufficiently secure, then method  continues with act . If, in act , the public key is deemed to not be sufficiently secure, then method  continues with act  and action is initiated in the form of a flag weak key action because the imported\/exported key may have been (or may become) exposed or otherwise more easily compromised.","In act , it is determined if an imported key is sufficiently secure enough for the present operation. For example, in act  the size of the imported key may be compared to a minimum acceptable importable key size. If, in act , the imported key is deemed to be sufficiently secure, then method  continues with act . If, in act , the imported key is deemed to not be sufficiently secure, then method  continues with act  and action is initiated in the form of a flag weak key action because the imported key may have been exposed or otherwise more compromised.","In act , it is determined if an imported\/exported key is an RC2 key. If, in act  the imported\/exported key is not an RC2 key, then method  continues with act . If the imported\/exported key is an RC2 key, then method  continues with act  and action is initiated in the form of a flag key action. This action may include recommending a substitute key\/algorithm. In act , processes continue to execute accordingly.","In this section some current cryptography algorithms are identified by common their request calls and\/or name. Some of these algorithms, for example, are already deemed to be less secure (weak) when compared to others that are currently considered \u201cstrong\u201d. Those skilled in the art will clearly recognize that this exemplary list may be increased or decreased in size and the suggested relative strengths of the algorithms will likely need to change over time as new developments in the field of cryptography are developed.",{"@attributes":{"id":"p-0073","num":"0072"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Algorithm internal identifier","Message displayed and recommendation"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CALG_MD2","MD2 hashing (weak algorithm)"]},{"entry":["CALG_MD4","MD4 Hashing (weak algorithm)"]},{"entry":["CALG_MD5","MD5 Hashing (strong algorithm)"]},{"entry":["CALG_SHA1","SHA1 Hashing (strong algorithm)"]},{"entry":["CALG_MAC","MAC Hashing"]},{"entry":["CALG_RSA_SIGN","RSA signing"]},{"entry":["CALG_DSS_SIGN","DSS signing"]},{"entry":["CALG_NO_SIGN","CALG_NO_SIGN: No signature"]},{"entry":["CALG_RSA_KEYX","RSA key exchange"]},{"entry":["CALG_DES","DES (weak encryption)"]},{"entry":["CALG_3DES_112","3DES-2 key encryption"]},{"entry":[{},"(strong algorithm)"]},{"entry":["CALG_3DES","3DES-3 key (strong algorithm)"]},{"entry":["CALG_DESX","DESX encryption"]},{"entry":["CALG_RC2","RC2 (old encryption, use newer if"]},{"entry":[{},"possible)"]},{"entry":["CALG_RC4","RC4 (strong algorithm)"]},{"entry":["CALG_RC5","RC5 (weak algorithm)"]},{"entry":["CALG_AES_128","AES_128 (strong algorithm)"]},{"entry":["CALG_AES_192","AES_192 (strong algorithm)"]},{"entry":["CALG_AES_256","AES_256 (strong algorithm)"]},{"entry":["CALG_AES","Generic AES encryption"]},{"entry":[{},"(strong algorithm)"]},{"entry":["CALG_SEAL","CALG_SEAL encryption"]},{"entry":["CALG_DH_SF","CALG_DH_SF: Diffie-Hellman"]},{"entry":[{},"(store and forward) key agreement"]},{"entry":["CALG_DH_EPHEM","CALG_DH_EPHEM: Diffie-Hellman"]},{"entry":[{},"(ephemeral) key agreement\u2033},"]},{"entry":["CALG_AGREEDKEY_ANY","CALG_AGREEDKEY_ANY:"]},{"entry":[{},"(any other key agreement)"]},{"entry":["CALG_KEA_KEYX","CALG_KEA_KEYX:"]},{"entry":[{},"KEA key exchange\u2033},"]},{"entry":["CALG_HUGHES_MD5","CALG_HUGHES_MD5:"]},{"entry":[{},"(Hughes MD5 hashing)"]},{"entry":["CALG_SKIPJACK","CALG_SKIPJACK: Skipjack"]},{"entry":[{},"encryption"]},{"entry":["CALG_TEK","CALG_TEK: TEK encryption"]},{"entry":["CALG_CYLINK_MEK","CALG_CYLINK_MEK:"]},{"entry":[{},"(Cylink MEK encryption)"]},{"entry":["CALG_SSL3_SHAMD5","CALG_SSL3_SHAMD5: (for SSL3)"]},{"entry":["CALG_SSL3_MASTER","CALG_SSL3_MASTER:"]},{"entry":[{},"(Master key encryption for SSL3)"]},{"entry":["CALG_SCHAN-","CALG_SCHANNEL_MAS-"]},{"entry":["NEL_MAS-","TER_HASH"]},{"entry":["TER_HASH","(Master key hashing for Schannel)"]},{"entry":["CALG_SCHAN-","CALG_SCHANNEL_MAC_KEY"]},{"entry":["NEL_MAC_KEY","(MAC for Schannel)"]},{"entry":["CALG_SCHAN-","CALG_SCHANNEL_ENC_KEY"]},{"entry":"NEL_ENC_KEY"},{"entry":["CALG_PCT1_MASTER","CALG_PCT1_MASTER"]},{"entry":[{},"(old algorithm, suggest upgrade"]},{"entry":[{},"to newer)"]},{"entry":["CALG_SSL2_MASTER","CALG_SSL2_MASTER"]},{"entry":[{},"(weak algorithm)"]},{"entry":["CALG_TLS1_MASTER","CALG_TLS1_MASTER"]},{"entry":[{},"(strong algorithm)"]},{"entry":["CALG_HMAC","CALG_HMAC: MAC with key"]},{"entry":["CALG_TLS1PRF","CALG_TLS1PRF"]},{"entry":["CALG_HASH_RE-","CALG_HASH_REPLACE_OWF"]},{"entry":"PLACE_OWF"},{"entry":["CALG_SHA_256","CALG_SHA_256"]},{"entry":[{},"hashing for AES (strong algorithm)"]},{"entry":["CALG_SHA_384","CALG_SHA_384"]},{"entry":[{},"hashing for AES (strong algorithm)"]},{"entry":["CALG_SHA_512","CALG_SHA_512"]},{"entry":[{},"hashing for AES (strong algorithm)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Although some preferred implementations of the various methods and apparatuses have been illustrated in the accompanying Drawings and described in the foregoing Detailed Description, it will be understood that the invention is not limited to the exemplary implementations disclosed, but is capable of numerous rearrangements, modifications and substitutions without departing from the spirit of the invention as set forth and defined by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more complete understanding of the various methods and apparatuses of the present invention may be had by reference to the following detailed description when taken in conjunction with the accompanying drawings wherein:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
