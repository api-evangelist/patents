---
title: Using a snapshot as a data source
abstract: A system and method for using a snapshot as a data source is described. In some cases, the system stores a snapshot and an associated data structure or index to storage media to create a secondary copy of a volume of data. In some cases, the associated index includes application specific data about a file system or other application that created the data to identify the location of the data. The associated index may include three entries, and may be used to facilitate the recovery of data via the snapshot.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08959299&OS=08959299&RS=08959299
owner: CommVault Systems, Inc.
number: 08959299
owner_city: Tinton Falls
owner_country: US
publication_date: 20090914
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","DETAILED DESCRIPTION","Overview","CONCLUSION"],"p":["This application claims priority to U.S. Patent Application No. 61\/097,407, filed on Sep. 16, 2008, entitled USING A SNAPSHOT AS A DATA SOURCE, and is related to U.S. patent application Ser. No. 10\/990,353, filed on Nov. 15, 2004, entitled SYSTEM AND METHOD FOR PERFORMING AN IMAGE LEVEL SNAPSHOT AND FOR RESTORING PARTIAL VOLUME DATA, and U.S. patent application Ser. No. 12\/058,487, filed on Mar. 28, 2008, entitled METHOD AND SYSTEM FOR OFFLINE INDEXING OF CONTENT AND CLASSIFYING STORED DATA, each of which is incorporated by reference in its entirety.","Current storage management systems employ a number of different methods to perform storage operations on electronic data. For example, data can be stored in primary storage as a primary copy or in secondary storage as various types of secondary copies including, as a backup copy, a snapshot copy, a hierarchical storage management copy (\u201cHSM\u201d), as an archive copy, and as other types of copies.","A primary copy of data is generally a production copy or other \u201clive\u201d version of the data which is used by a software application and is generally in the native format of that application. Primary copy data may be maintained in a local memory or other high-speed storage device that allows for relatively fast data access if necessary. Such primary copy data is typically intended for short term retention (e.g., several hours or days) before some or all of the data is stored as one or more secondary copies, for example to prevent loss of data in the event a problem occurred with the data stored in primary storage.","Secondary copies include point-in-time data and are typically for intended for long-term retention (e.g., weeks, months or years depending on retention criteria, for example as specified in a storage policy as further described herein) before some or all of the data is moved to other storage or discarded. Secondary copies may be indexed so users can browse and restore the data at another point in time. After certain primary copy data is backed up, a pointer or other location indicia such as a stub may be placed in the primary copy to indicate the current location of that data.","One form of secondary copy is a snapshot copy. From an end-user viewpoint, a snapshot may be seen as an instant image of the primary copy data at a given point in time. A snapshot generally captures the directory structure of a primary copy volume at a particular moment in time, and also preserves file attributes and contents. In some embodiments, a snapshot may exist as a virtual file system, parallel to the actual file system. Users typically gain a read-only access to the record of files and directories of the snapshot. By electing to restore primary copy data from a snapshot taken at a given point in time, users may also return the current file system to the prior state of the file system that existed when the snapshot was taken.","A snapshot may be created instantly, using a minimum of file space, but may still function as a conventional file system backup when stored at or near the file system. A snapshot may not actually create another physical copy of all the data, but may simply create pointers that are able to map files and directories to specific disk blocks. The snapshot may be a copy of a set of files and\/or directories as they were at a particular point in the past. That is, the snapshot is an image, or representation, of a volume of data at a point in time. A snapshot may be as a secondary copy of a primary volume of data, such as data in a file system, an Exchange server, a SQL database, an Oracle database, and so on. The snapshot may be an image of files, folders, directories, and other data objects within a volume, or an image of the blocks of the volume.","Data storage systems utilize snapshots for a variety of reasons. One typical use of snapshots is to copy a volume of data without disabling access to the volume for a long period. After performing the snapshot, the data storage system can then copy the data set by leveraging the snapshot of the data set. Thus, the data storage system performs a full backup of a primary volume when a primary volume is active and generating real-time data. Although performing a snapshot (i.e., taking an image of the data set) is a fast process, the snapshot is typically not an effective or reliable backup copy of a data set, because it does not actually contain the content of the data set. Restoring data from snapshots can be especially cumbersome, because a restoration process cannot restore the data set using snapshots alone. Recovery of individual files or folders can be especially cumbersome, because typical systems often recover an entire snapshot in order to restore an individual file or folder imaged by the snapshot.","However, the speed of performing, or taking, a snapshot can often be a great benefit to data storage systems that are required to store large amounts of data. Thus, utilizing snapshots in ways other than those described above may provide significant utility to data storage systems, because snapshots are fast, are space efficient, and facilitate performing off host data storage operations, among other advantages.","The need exists for a system that overcomes the above problems, as well as one that provides additional benefits. Overall, the examples herein of some prior or related systems and their associated limitations are intended to be illustrative and not exclusive. Other limitations of existing or prior systems will become apparent to those of skill in the art upon reading the following Detailed Description.","Described in detail herein is a system and method that employs snapshots as data sources, such as backup copies of data. Instead of treating a snapshot only as a picture of a disk, the system employs snapshots as a data source that can be backed up or otherwise copied to tape or magnetic disk. The system can then seamlessly restore individual files from tape or disk using snapshots. The system creates a data structure, such as an index, that describes what is on a disk (as often defined by a file system for that disk). The index may provide a list of files on the disk, and location information indicating where each file is located, with respect to the snapshot.","In some examples, the system creates a secondary copy of data by storing a snapshot with an index associated with and\/or related to the snapshot. The snapshot identifies the data stored in the secondary copy, and the index provides application specific context information that facilitates retrieving data identified by the snapshot. In these examples, the system may store a combination of a snapshot and associated index to storage media, such as to tape or disk, and use the stored combination as a data source, such as a backup copy of a primary volume of data.","The system may create the index in a number of ways, as long as the index can be used in combination with a snapshot to facilitate data storage and\/or recovery via the snapshot. For example, an index agent may receive a snapshot of a data set, receive application context information associated with the snapshot, store the snapshot, and store the application context information in an index that identifies individual files from the data set imaged by the snapshot.","In some examples, the system provides for the recovery, or restoration, of data from a snapshot based data source. The recovery may be transparent to a user (that is, the user does not know what mechanism is used during a restore process) and\/or seamless with respect to other types of data sources. For example, the system may restore a data set by restoring a full backup of the data set using a snapshot based secondary copy of the data set and incremental backups using other secondary copies.","In some cases, the system restores individual files using snapshots and associated indices. For example, the system may receive a request to restore a specific file or portion of a file, identify a snapshot containing an image of a volume containing the file, look to an index associated with the snapshot to identify the file, and retrieve the file (or a copy of the file) from information in the associated index. Thus, the system facilitates granular recovery of data objects within a data set without requiting a data recovery system to restore entire snapshots or secondary copies.","The system will now be described with respect to various examples. The following description provides specific details for a thorough understanding of, and enabling description for, these examples of the system. However, one skilled in the art will understand that the system may be practiced without these details. In other instances, well-known structures and functions have not been shown or described in detail to avoid unnecessarily obscuring the description of the examples of the system.","The terminology used in the description presented below is intended to be interpreted in its broadest reasonable manner, even though it is being used in conjunction with a detailed description of certain specific examples of the system. Certain terms may even be emphasized below; however, any terminology intended to be interpreted in any restricted manner will be overtly and specifically defined as such in this Detailed Description section.","Suitable System","Referring to , a block diagram illustrating components of a data stream utilized by a suitable data storage system is shown. The stream  may include a client , a media agent , and a secondary storage device . For example, in storage operations, the system may store, receive and\/or prepare data to be stored, copied or backed up at a server or client . The system may then transfer the data to be stored to media agent , which may then refer to storage policies, schedule policies, and\/retention policies (and other policies) to choose a secondary storage device . The media agent  may include a snapshot agent and an index agent (although these agents may also be separate components), to be described herein. The secondary storage device  receives the data from the media agent  and stores the data as a secondary copy, such as a backup copy. Secondary storage devices may be magnetic tapes, optical disks, USB and other similar media, disk and tape drives, and so on. Of course, the system may employ other configurations of stream components not shown in the Figure.","Referring to , a block diagram illustrating an example of a data storage system, or data storage enterprise,  is shown. Data storage systems may contain some or all of the following components, depending on the needs of the system.  and the following discussion provide a brief, general description of a suitable computing environment in which the system can be implemented. Although not required, aspects of the system are described in the general context of computer-executable instructions, such as routines executed by a general-purpose computer, e.g., a server computer, wireless device or personal computer. Those skilled in the relevant art will appreciate that the system can be practiced with other communications, data processing, or computer system configurations, including: Internet appliances, network PCs, mini-computers, mainframe computers, and the like. Indeed, the terms \u201ccomputer,\u201d \u201chost,\u201d and \u201chost computer\u201d are generally used interchangeably herein, and refer to any of the above devices and systems, as well as any data processor.","Aspects of the system can be embodied in a special purpose computer or data processor that is specifically programmed, configured, or constructed to perform one or more of the computer-executable instructions explained in detail herein. Aspects of the system can also be practiced in distributed computing environments where tasks or modules are performed by remote processing devices, which are linked through a communications network, such as a Local Area Network (LAN), Wide Area Network (WAN), Storage Area Network (SAN), Fibre Channel, or the Internet. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","Aspects of the system may be stored or distributed on computer-readable media, including magnetically or optically readable computer discs, hard-wired or preprogrammed chips (e.g., EEPROM semiconductor chips), nanotechnology memory, biological memory, or other data storage media. Indeed, computer implemented instructions, data structures, screen displays, and other data under aspects of the system may be distributed over the Internet or over other networks (including wireless networks), on a propagated signal on a propagation medium (e.g., an electromagnetic wave(s), a sound wave, etc.) over a period of time, or they may be provided on any analog or digital network (packet switched, circuit switched, or other scheme). Those skilled in the relevant art will recognize that portions of the system reside on a server computer, while corresponding portions reside on a client computer, and thus, while certain hardware platforms are described herein, aspects of the system are equally applicable to nodes on a network.","For example, the data storage system  contains a storage manager , one or more clients , one or more media agents , and one or more storage devices . Storage manager  controls media agents , which may be responsible for transferring data to storage devices . Storage manager  includes a jobs agent , a management agent , a database , and\/or an interface module . Storage manager  communicates with client(s) . One or more clients  may access data to be stored by the system from database  via a data agent . The system uses media agents , which contain databases , to transfer and store data into storage devices . Client databases  may contain data files and other information, while media agent databases may contain indices and other data structures that assist and implement the storage of data into secondary storage devices, for example.","The data storage system may include software and\/or hardware components and modules used in data storage operations. The components may be storage resources that function to copy data during storage operations. The components may perform other storage operations (or storage management operations) other that operations used in data stores. For example, some resources may create, store, retrieve, and\/or migrate primary or secondary data copies. Additionally, some resources may create indices and other tables relied upon by the data storage system and other data recovery systems. The secondary copies may include snapshot copies and associated indices, but may also include other backup copies such as HSM (hierarchical storage management) copies, archive copies, and so on. The resources may also perform storage management functions that may communicate information to higher level components, such as global management resources.","In some examples, the system performs storage operations based on storage policies, as mentioned above. For example, a storage policy includes a set of preferences or other criteria to be considered during storage operations. The storage policy may determine or define a storage location and\/or set of preferences about how the system transfers data to the location and what processes the system performs on the data before, during, or after the data transfer. In some cases, a storage policy may define a logical bucket in which to transfer, store or copy data from a source to a data store, such as storage media. Storage policies may be stored in storage manager , or may be stored in other resources, such as a global manager, a media agent, and so on. Further details regarding storage management and resources for storage management will now be discussed.","Referring to , a block diagram illustrating an example of components of a server used in data storage operations is shown. A server, such as storage manager , may communicate with clients  to determine data to be copied to storage media. As described above, the storage manager  may contain a jobs agent , a management agent , a database , and\/or an interface module. Jobs agent  may manage and control the scheduling of jobs (such as copying data files) from clients  to media agents . Management agent  may control the overall functionality and processes of the data storage system, or may communicate with global managers. Database  or another data structure may store storage policies, schedule policies, retention policies, or other information, such as historical storage statistics, storage trend statistics, and so on. Interface module  may interact with a user interface, enabling the system to present information to administrators and receive feedback or other input from the administrators or with other components of the system (such as via APIs).","Snapshots as Data Sources, Such as Backup Copies of a Data Set","The system may store one or more snapshots with an associated index in order to create a snapshot-based data source, such as a secondary copy of a primary volume of data. Data may be stored in various types of volumes, including primary copies or production copies, as well as various secondary copies, such as snapshots, backup copies, archival copies, and so on.","The system creates snapshots of blocks or chunks of data in a data store and an associated index that keeps track of the files imaged by the snapshot (e.g., which blocks are associated with which files and what applications are associated with the files). Thus, a snapshot becomes a way of storing data that includes application specific data. The snapshots and associated index can then be used as auxiliary copies, synthetic full copies, partial or full restores, and other secondary copies. Using snapshots as a data source allow a data storage system to be very flexible. Also, the system can manage the snapshots, such as by backing them up and deleting any original versions from the system.","The system creates snapshots using a variety of mechanisms. In some examples, the system employs hardware-based snapshot mechanisms when creating snapshots. Examples of suitable hardware-based snapshot mechanisms include EMC's Symmetrix and Clarion, Hitachi Data Storage (HDS), Network Appliance's Snapshot, and so on.","In some examples, the system employs software-based snapshot mechanisms. For example, the system may leverage continuous data replication (CDR) or discrete data replication (DDR) when creating snapshots of a volume of data. CDR generates recovery points for a volume, which can be used as a point in time snapshot of a volume. Thus, leveraging the recovery points as snapshots enables the system to generate point-in-time copies (snapshots) of a volume of data while maintaining a live copy of the volume. Of course, other mechanisms are possible.","Further, if the data storage system employs hardware having particular capabilities, such as the ability to take mirror copies or multiple snapshots, that functionality may be utilized by the snapshot and associated index. Further, snapshots may be manipulated with application programming interfaces (APIs) provided by hardware and software providers.","Referring to , a block diagram illustrating a system for creating a snapshot-based secondary copy of data is shown. A media agent  includes a snapshot agent  and an index agent . The snapshot agent  creates a snapshot  of a primary data store or volume, and the index agent  creates an index  associated with the snapshot . The media agent  stores the snapshot  and index  as a secondary copy , which may be a backup copy, archive copy, and so on. The secondary copy , or snapshot based secondary copy, is stored on storage media , such as magnetic tape, optical disk, magnetic disk, and so on. In some cases, the snapshot and index are logically linked within the secondary copy or across resources in a data storage enterprise. The storage media  may be located remotely from the media agent, or may be relocated to a geographically remote location after creation and storage of the secondary copy  is complete.","The system may employ a number of different mechanisms when moving snapshots to secondary storage, such as magnetic tape. In some examples, the system performs block-level or chunk-based migration or transfer of snapshots from primary storage to secondary storage.","Briefly, block-level migration, or block-based data migration, involves transferring or migrating disk blocks from a primary data store (e.g., a disk partition or volume) to secondary media. Using block-level migration, a data storage system transfers blocks on a disk that have not been recently accessed to secondary storage, freeing up space on the disk. Chunked file migration, or chunk-based data migration, involves splitting a data object into two or more portions of the data object, creating an index that tracks the portions, and storing the data object to secondary storage via the two or more portions. Among other things, the chunk-based migration provides for fast and efficient storage of a data object. Additionally, chunk-based migration facilitates fast and efficient recall of a data object, such as a snapshot of a large database or virtual machine file. For example, if a user modifies a migrated file, chunk-based migration enables a data restore component to only retrieve from, and migrate back to, secondary storage the chunk containing the modified portion of the file, and not the entire file. Further details regarding block-level and\/or chunk-based data migration may be found in U.S. Provisional Patent Application No. 61\/096,587 filed on Sep. 12, 2008, entitled TRANSFERRING OR MIGRATING PORTIONS OF DATA OBJECTS, SUCH AS BLOCK-LEVEL DATA MIGRATION OR CHUNK-BASED DATA MIGRATION, which is hereby incorporated by reference in its entirety.","The snapshot agent  creates, takes, produces, and\/or generates a snapshot or multiple snapshots of a data source, such as a primary volume of data or a secondary copy of a primary volume. As discussed herein, the snapshot is a representation of a set of data objects at a given point in time. The snapshot may be a complete image of a data set, or may be an incremental image of a data set. Further details with respect to the snapshot process and the types of snapshots may be found in U.S. patent application Ser. No. 10\/990,353, filed on Nov. 15, 2004, entitled SYSTEM AND METHOD FOR PERFORMING AN IMAGE LEVEL SNAPSHOT AND FOR RESTORING PARTIAL VOLUME DATA.","Information regarding a snapshot is stored in a data structure. For example, a data structure may be generally organized like the following data structure:",{"@attributes":{"id":"p-0044","num":"0043"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Snapshot Identifiers"]},{"entry":[{},"Snapshot Engine Identifiers"]},{"entry":[{},"Source Identifiers"]},{"entry":[{},"Destination Identifiers"]},{"entry":[{},"Creation Time"]},{"entry":[{},"Snapshot Group Identifiers"]},{"entry":[{},"Snapshot Type"]},{"entry":[{},"Storage Operation Identifiers"]},{"entry":[{},"Flags"]},{"entry":[{},"Snapshot Pruning Information"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In the above data structure, the Snapshot Identifiers may include information used to uniquely identify the snapshot. The Snapshot Engine Identifiers may include information used to identify the engine that performed the snapshot. Source Identifiers and Destination Identifiers may include information about the source of the data of which a snapshot was made and where the snapshot is stored, respectively. Creation Time may be a timestamp indicating when the snapshot was made. The Snapshot Group Identifiers may identify a group to which the snapshot belongs. The Snapshot Type may include information identifying a type of the snapshot. The Storage Operation Identifiers may include information identifying a storage operation and\/or storage operation elements associated with the snapshot. Flags may include one or more flags or bits set to indicate various types of information regarding the snapshot, and Snapshot Pruning Information may include information about whether or not the snapshot can be pruned.","The index agent  creates, generates, and\/or builds a data structure, such as an index, to be associated with one or more snapshots. As described more fully below, the index may be a two tier index, may be a three tier index, or may have other index configurations, depending on the needs of the system. The two tier index may include a first entry that contains information identifying a data object, such as a file or folder, and a second entry that identifies where the file or folder is located. As an alternative, the second entry may indicate where an archive file (the file stripped of its native format) is located.","The three tier index includes the first and second entries as well as a third entry that contains the application specific data discussed herein. For example, the third entry, or tier, may contain information identifying an original mount point for an associated snapshot.","The three tier index may track specific files on a snapshot that are of interest. The three tier index describes what is on the disk (or tape), and not just the second tier index description of a file. The third tier may include an entry including information that identifies where to find data when needed within the snapshot based on an indication of what files were on the disk when the snapshot was taken, and where they were located.","For example, the index agent  creates the index  relative to a file system associated with the disk, so as to explain all the files on that disk and their locations. The index tracks an original mount point, so recovery systems can find network accessible data as and when the data moves among network resources. For example, an original file named \u201csystem.txt\u201d may have an original mount point at \u201cE:\/mount\/snap1\/user1\/system.txt,\u201d but the snapshot imaging the file may subsequently be remounted at a mount point at \u201cF:\/user1\/system.txt.\u201d The index, via the third tier, may track such information, such as information associated with movement of the files.","Thus, the file system identifies or presents the files of interest to the index agent to create the new index. The index maps contextual information associated with a snapshot of a volume. The index data identifies an application with files of interest. Alternatively or additionally, the system may employ content indexing functions to discover content and provide that as a separate content index. Further details may be found in U.S. patent application Ser. No. 12\/058,457, filed on Mar. 28, 2008, entitled METHOD AND SYSTEM FOR OFFLINE INDEXING OF CONTENT AND CLASSIFYING STORED DATA.","In some examples, the system creates an archive file when creating an archive copy or other secondary copies of a data set, such as a data set originating in a file system. The creation of an archive file enables the system, when storing or restoring data, to have both a logical view and a physical view of stored data. The logical view, represented by the archive file, enables the system to store data having a format that is neutral (or, independent) with respect to data type. The physical view, represented by an index of locations on stored physical media, enables the system to locate the data stored on the physical media as chunks, tape extents, or blocks of the archive file.","The three tier index may include two entries associated with a location of the file, such as information identifying a snapshot that imaged the file as well as information identifying a location on secondary storage that contains the file. An additional entry provides application specific data for the file, such as metadata. Thus, in some cases, the system creates a backup copy of a primary volume that includes a snapshot of the primary volume and a three tier index that contains information associated with an identification of the file, information identifying a location of an archive file associated with the file, and information providing application context information about the file (such as an original mount point for the snapshot).","Referring to , a table illustrating a three tier index  associated with a snapshot is shown. The index  includes a file identification entry  that contains a name of a file, a location entry  that contains location information associated with a primary copy of the file, a secondary copy of the file, an archive format copy of the file, and so on, and a context or application specific entry  that provides information about a file system that created the file, such as an original mount point for the snapshot when the file was imaged by the snapshot. (Of course, the index  may include other or different information than what is shown in the Figure). For example, the location entry  may identify or provide identification information for the storage media, mount point, tape drive, and so on, associated with creating, updating, and\/or storing a copy of the data, such as a secondary copy. In some cases, it may also provide media specific information, such as offsets on a magnetic tape. The location entry  may refer to a storage manager or other data storage resource when identifying a location of a copy, such as a location on a tape.","As one example, the index  includes information associated with a data object named \u201cInvention.txt.\u201d This information includes a location of the archive file for the data object at \u201carchive1\u201d and information identifying a mount point for the snapshot that imaged the data object, at \u201cC:\/\/snap1\/user1.\u201d The index  may contain information about some files imaged by a snapshot (such as certain files of interest), or may contain information about all the files imaged by the snapshot. The system may build the index as follows.","Referring to , a flow diagram illustrating a routine  for building an index is shown. In step , an index agent receives a snapshot of a data set. For example, the snapshot agent within (or outside of) the media agent  creates the snapshot  of a primary volume of data, and sends the snapshot to the index agent.","In step , the index agent  receives or obtains context information associated with the snapshot. The index agent may query some or all of the data storage resources, such as a storage manager or jobs agent, to retrieve data associated with systems and applications that created the snapshot. For example, the index agent may query the Volume Snapshot Service (VSS) used to create the snapshot. The index agent may retrieve information for each of the individual files imaged by the snapshot, for the entire snapshot, or both. The application context information may include information about resources utilized by the snapshot agent (such as mount points), information from or about the file system and\/or applications that created the snapshot, and so on.","In addition, the index agent calls the snapshot APIs to identify information associated with the snapshot. Examples of information received from the snapshot APis include unique snapshot identifiers (which may be received from the snapshot hardware or generated by the index agent), source host information identifying the computing resource that originated the underlying data from which the snapshot was created, volume information, client identifiers, path identifiers, creation time, control host identifiers, source information, server identifiers, job identifiers, and so on. For example, the system, via an agent stored on a Microsoft Exchange server, may interact with an external RAID array on the Exchange server via APIs in order to retrieve information associated with snapshots performed on the Exchange server.","In step , the media agent stores the snapshot to storage media. For example, the media agent  transfers the snapshot  to storage media  using one or more of the data paths described with respect to . The media agent may store the snapshot to storage media based on a storage policy, and may select storage media based on the needs of the system and on the (future) use of the stored snapshot. For example, the system may store the snapshot to magnetic tape for archival purposes.","In step , the system stores the received application context information in an index that identifies individual files from the data set imaged by the snapshot, and in step , stores the index to the storage media. That is, the system builds an index, such as the three tier index described herein, to track information within the snapshot such that an original location of the data imaged by the snapshot can be determined from the index.","As an example, the system, via an index agent, receives a snapshot taken of a primary volume, such as \u201csnap1.\u201d The system queries a VSS, and determines the snapshot occurred at the mount point \u201cD:\/users,\u201d and was performed by a mechanism known to the system as \u201chardsnapB.\u201d The system then stores the snapshot and the associated information to a magnetic tape, named \u201ctape4,\u201d at location \u201coffset100-230\u201d The system then updates an index, such as an index at a media agent that stored the snapshot, to include information associated the name of the tape with the name of the snapshot stored on the tape. Thus, an example index entry may be as follows:",{"@attributes":{"id":"p-0061","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Snap1","D:\/users, hardsnapB","Tape4, offset100-230"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"The system may store the entry at the media agent or at other storage resources, such as a global manager. In addition, the system stores the entry along with the snapshot on the tape, to facilitate restoration of the data via the snapshot, effectively creating a copy of data (i.e., a data source), using a snapshot of the data.","In addition to creating the index, the system may add data to an existing archive table file, or other tables, to recognize that a particular data copy is a snapshot. For example, a flag may be set in the archive table file to indicate to the system that a copy is a snapshot-based copy. This may facilitate discovery of the copy, for example.","In some examples, the three-tier or multiple entry index may be stored in different locations across a data storage system. For example, information associated with the location of a snapshot on secondary storage (such as tape offset information) and the application specific information may be stored in a cache of a media agent that transfers the snapshot to the secondary storage, while the snapshot metadata may be stored by a data management component. Of course, the various indices may be stored in other locations in order to meet the needs of the system.","Data Recovery Using Snapshot Based Data Sources","As described herein, the recovery of data, such as individual files, may be performed by restoring data from snapshot based secondary copies, such as backup copies. Referring to , a flow diagram illustrating a routine  for restoring a data object using a snapshot based secondary copy is shown. In step , a data recovery system receives an indication, selection, or request for a data object to be restored. For example, the system may present to a user a user interface showing files available for restoration, and receive the request via display elements within the user interface. For example, the system may present the files shown in table  of .","In step , the system identifies the snapshot that imaged the selected file. For example, the system may include a table, map or other data structure of file names and associated snapshots, and use the map to identify a snapshot that imaged the file (e.g., table  of ). In step , the system retrieves or accesses the storage media that contains the identified snapshot and an index associated with the snapshot. For example, if the user wishes to retrieve the file \u201cinvention.txt,\u201d the system may retrieve the snapshot that images the file \u201cinvention.txt\u201d in order to identify a location for the file.","In step , the system retrieves information from the associated index. For example, the system retrieves the information associated with the selected file, such as information for an archive file associated with the selected file, information associated with the file system that created the selected file, and so on.","In step , the system locates and restores the selected file. For example, using the retrieved information from the associated index, the system locates the archive file and application specific information for the selected file, and restores the file.","As an example, a user wishes to restore \u201cemail.txt\u201d from a data archive. A data recovery system receives input from the user to restore the file (step ). The system, via table  of , identifies that the snapshot mechanism snap1 at mount point \u201cD:\/\/snap1\/user2\u201d performed a snapshot of the file (step ). The system identifies the location of the snapshot on storage media, at \u201carchive 3\u201d (step ). In this example, the information \u201carchive 3\u201d identifies the specific storage medium as well as the location on the medium. The system then retrieves the snapshot and uses the retrieved snapshot and known information about the snapshot to locate the file for the user.","Thus, by utilizing a snapshot based data source as the vehicle for data recovery, the system is able to take advantage of the speed of restoration associated with snapshots with the granularity associated with other backup methods, such as restoring individual files. The descriptive information in the index enables the system to quickly and efficiently identify the specific location of files imaged by the snapshot. That is, the combination of an image of a volume of a data (via a snapshot) and knowledge of the mechanisms and resources used to create the file system (via an associated index) enables the system to restore data quickly and efficiently.","Seamless Restoration of Data","As described herein, in some cases it may be advantageous to mix or use multiple, different data storage operations when creating a secondary copy of a primary volume of data. For example, a data storage system will create a full backup of a volume of data at a first point in time, and then incrementally backup the volume in subsequent points in time, only copying changes or modifications made to the volume of data after the full backup was created. Often, the full backup is more time-intensive and system-sensitive than incremental backups, because more data is being stored and system resources used during the full backup. Thus, a snapshot may be used to create the full backup, and other operations, such as continuous data replication of changes, copy-on-write snapshots, and so on, may be used for the subsequent incremental backups.","Referring to , a flow diagram illustrating a routine  for generating a secondary copy of a volume of data is shown. In step , the system creates a full backup of a primary volume using a snapshot based copy mechanism. For example, the system performs a snapshot of the primary volume at a first time, stores the snapshot to storage media, builds an index associated with the snapshot as described herein, and stores the index to the storage media with the snapshot or otherwise logically links it with that snapshot.","In step , the system creates an incremental copy at a second, subsequent time. The system may employ continuous data protection (CDP) or other copy mechanisms, and may transfer data directly to tape or other storage media. CDP is advantageous because it virtually ensures an error free transfer of data to the tape or to another, often remote, data store. In step , the system reviews the volume for any changes to the volume. The system may also review a change journal or other similar data structure. When changes are identified, routine  proceeds back to step , and performs an additional backup. Thus, a secondary copy of a volume of data is created and constantly updated using backup processes well suited for the various tasks involved.","In order to restore data from such a secondary copy, the system may treat the different data sources in a similar fashion, thereby providing seamless and efficient data recovery to a user. For example, should the user wish to restore the entire volume, the system employs the fast snapshot based recovery of the original data along with the safe, protected recovery of any subsequent changes to the data set. In addition, the system may provide for the restoration of individual files in a fast and effective manner, because the snapshot based full backup is able to restore individual files without performing a full restore. Of course, in some cases it may be advantageous to create incremental copies as a snapshot based data source. Additionally, the system may create a partial secondary copy as a snapshot based data source and the rest of the secondary copy using other data storage operations.","In some examples, the system restores data from different types of secondary copies having different formats, such as snapshots and archive copies of data. The system may create and leverage an index that normalizes, or translates the different data formats during data recovery. The index may include information that identifies the original location of data, information that identifies the current location of the data, and\/or information that identifies the type of media containing the data. Thus, during a restore process, the system may review this index in order to determine a relative path to requested data. In some cases, the system may provide a user with some or all versions under management by the system. The system may facilitate searches across the index, such as those described in U.S. patent application Ser. No. 11\/931,034, filed on Oct. 31, 2007, entitled METHOD AND SYSTEM FOR SEARCHING STORED DATA, which is incorporated by reference in its entirety.","For example, a request for \u201cfile1.doc\u201d causes the system to review an index associating \u201cfile1.doc\u201d with an original mount point (D:\/snapshot1\/) for a snapshot that imaged a volume containing \u201cfile1.doc,\u201d and a current location of the snapshot (X:\/tape1\/snapshot1\/file1.doc) now stored in a non-native format. The system can then convert the retrieved copy of the requested file to a native format, identify a path to the original mount point, and provide the requested file.","The system may be employed by current data storage systems that have snapshot capabilities. For example, the index agent and\/or the snapshot agent may be introduced into a data storage system that performs snapshots, but does not utilize them as data sources, enabling the data storage system to perform the data storage operations described herein.","From the foregoing, it will be appreciated that specific examples of the data storage system have been described herein for purposes of illustration, but that various modifications may be made without deviating from the spirit and scope of the system. For example, although files have been described, other types of content such as user settings, application data, emails, and other data objects can be imaged by snapshots. Accordingly, the system is not limited except as by the appended claims.","Unless the context clearly requires otherwise, throughout the description and the claims, the words \u201ccomprise,\u201d \u201ccomprising,\u201d and the like are to be construed in an inclusive sense, as opposed to an exclusive or exhaustive sense; that is to say, in the sense of \u201cincluding, but not limited to.\u201d The word \u201ccoupled\u201d, as generally used herein, refers to two or more elements that may be either directly connected, or connected by way of one or more intermediate elements. Additionally, the words \u201cherein,\u201d \u201cabove,\u201d \u201cbelow,\u201d and words of similar import, when used in this application, shall refer to this application as a whole and not to any particular portions of this application. Where the context permits, words in the above Detailed Description using the singular or plural number may also include the plural or singular number respectively. The word \u201cor\u201d in reference to a list of two or more items, that word covers all of the following interpretations of the word: any of the items in the list, all of the items in the list, and any combination of the items in the list.","The above detailed description of embodiments of the system is not intended to be exhaustive or to limit the system to the precise form disclosed above. While specific embodiments of, and examples for, the system are described above for illustrative purposes, various equivalent modifications are possible within the scope of the system, as those skilled in the relevant art will recognize. For example, while processes or blocks are presented in a given order, alternative embodiments may perform routines having steps, or employ systems having blocks, in a different order, and some processes or blocks may be deleted, moved, added, subdivided, combined, and\/or modified. Each of these processes or blocks may be implemented in a variety of different ways. Also, while processes or blocks are at times shown as being performed in series, these processes or blocks may instead be performed in parallel, or may be performed at different times.","The teachings of the system provided herein can be applied to other systems, not necessarily the system described above. The elements and acts of the various embodiments described above can be combined to provide further embodiments.","These and other changes can be made to the system in light of the above Detailed Description. While the above description details certain embodiments of the system and describes the best mode contemplated, no matter how detailed the above appears in text, the system can be practiced in many ways. Details of the system may vary considerably in implementation details, while still being encompassed by the system disclosed herein. As noted above, particular terminology used when describing certain features or aspects of the system should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics, features, or aspects of the system with which that terminology is associated. In general, the terms used in the following claims should not be construed to limit the system to the specific embodiments disclosed in the specification, unless the above Detailed Description section explicitly defines such terms. Accordingly, the actual scope of the system encompasses not only the disclosed embodiments, but also all equivalent ways of practicing or implementing the system under the claims.","While certain aspects of the system are presented below in certain claim forms, the applicant contemplates the various aspects of the system in any number of claim forms. For example, while only one aspect of the system is recited as a means-plus-function claim under 35 U.S.C sec. 112, sixth paragraph, other aspects may likewise be embodied as a means-plus-function claim, or in other forms, such as being embodied in a computer-readable medium. (Any claims intended to be treated under 35 U.S.C. \u00a7112, \u00b66 will begin with the words \u201cmeans for\u201d.) Accordingly, the applicant reserves the right to add additional claims after filing the application to pursue such additional claim forms for other aspects of the system."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
