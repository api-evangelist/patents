---
title: System and method for semantic exposure of data stored in a dynamic schema
abstract: A system and method for providing semantic access of data in a master data management system. Data stored in a dynamic repository schema is exposed in a semantically accurate format. The schema is determined from information received from the master data management system describing the schema. A set of database views is generated based on said schema. A query from an external application in a standard query language is received and the query is performed using at least one database view. The database views are updated when a schema change is detected.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08239423&OS=08239423&RS=08239423
owner: SAP AG
number: 08239423
owner_city: Walldorf
owner_country: DE
publication_date: 20090630
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","Embodiments of the solution described herein pertain to the field of computer systems. More particularly, but not by way of limitation, one or more embodiments relate to the semantic exposure of data stored in a dynamic schema.","2. Description of the Related Art","Master data management systems simplify maintenance and promote data integrity by simplifying the user's view of the data stored in its repository. For example, SAP's Master Data Management Environment (MDME) system is an integrated system for master data management that uses a Structured Query Language (SQL) database management system (DBMS), but does not require designers to use SQL for searching, sorting, and retrieving of information. Standard SQL DBMS do not support the types of advanced structures necessary for managing master databases. Generally speaking, master data management systems consist of a thick shell of functionality on top of a SQL-based DBMS to provide a scalable database where data is fully accessible to other applications and tools.","The schema of a database system describes the organizational structure of data stored in the database. In a relational database, the schema defines tables, fields, and relationships between fields and tables. Large commercial data repositories are often changed and revised over their lifetimes. These changes include changes to the schema, such as adding tables and fields, changing relationships, and editing data dictionaries. The MDME system has a dynamic schema, or a schema which is fully extensible and customizable. To access data stored in a dynamic schema using a standard query language, such as SQL, an application must be aware of any schema changes. Therefore, hard-coded queries relying on a schema are inadequate.","Accuracy of data in a large commercial data repository is of critical importance. Some master data management systems restrict direct access to the underlying data, such as requiring access through an application programming interface (API). In this case, the master data management system has complete control over the data and allows it to handle and store data in a proprietary schema. This allows a master data management system to store data efficiently and control the consistency of data records. When a master data management system may be designed to optimize factors, such as time efficiency, space efficiency, hierarchy, or other factors, data is not always presented in a meaningful way when only a single table is accessed. While the API helps provide meaningful access of data, the API does not offer the semantic exposure of data in a standard protocol understood by external applications.","External applications using a standard query language, such as structured query language (SQL), are used to manage data stored in databases. External applications include data profiling tools useful for analyzing the data, including data quality. External applications also include third party matching tools, business warehouse applications, and reporting tools for creating formatted reports against data stored in the master data management repository. However, external applications programmed to communicate with a database using a standard query language cannot communicate with a master data management system which limits third party access to requests made through an API. It is essential to expose the master data in a way that would be accessible and understandable for external applications to communicate with a master data management system in a protocol they are familiar with.","There are currently no known systems that provide the semantic exposure of data stored in a dynamic schema.","For at least the limitations described above there is a need for a system and method for exposing data stored in a dynamic schema in a semantically accurate format accessible to external applications in a standard query language.","One or more embodiments enable a system and method for providing semantic access of data stored in a master data management system. Data stored in a dynamic repository schema is exposed in a semantically accurate format accessible by external applications using a standard query language, such as SQL.","In one or more embodiments of the solution described is this disclosure, a schema is determined from information received from the master data management system describing the schema, such as metadata tables or table and field name and properties. A set of database views is generated based on the schema. In one or more embodiments, a database view comprises a stored query. A query from an external application in a standard query language, such as SQL, is received and the query is performed using at least one database view.","In one or more embodiments of the disclosure, external applications have read-only access to data stored in the master data management system, and queries are limited to read-only operations. In one or more embodiments, database views are specific to each client accessing the data. Access to different sets of data is granted based on login information or other authentication methods.","In one or more embodiments of the disclosure, database views are updated when a schema change is detected. The changed schema is determined from new information received from the master data management system describing the changed schema. An updated set of database views is generated based on said schema. At least a subset of database views is replaced with the updated set of database views. In one or more embodiments of the disclosure, the entire set of database views is unloaded, an updated set of database views is generated, and the entire updated set of database views is reloaded.","Furthermore, one or more embodiments of the solution set forth here enable a computer system configured to provide semantic access of data in a master data management system. The computer system includes a specially programmed computer comprising computer-readable instructions which configure the computer system to receive information describing a dynamic schema, determine the schema from the information, generate a set of database views based on the schema, receive a query from an external application in a standard query language, and perform the query using at least one database view.","A method and system for providing semantic exposure of data stored in a dynamic schema will now be described. In the following exemplary description numerous specific details are set forth in order to provide a more thorough understanding of embodiments of the solution described herein. It will be apparent, however, to an artisan of ordinary skill that the solution may be practiced without incorporating all aspects of the specific details described herein. In other instances, specific features or functions well known to those of ordinary skill in the art have not been described in detail so as not to obscure the solution. Readers should note that although examples of the embodiments are set forth herein, the claims, and the full scope of any equivalents, are what define the invention.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1","b":["100","107","102","102","107","106","108","112","124"]},"Main memory  may provide a computer readable medium for accessing and executed stored data and applications. Display Interface  may communicate with Display Unit  that may be utilized to display outputs to the user of the specially-programmed computer system. Display Unit  may comprise one or more monitors that may visually depict aspects of the computer program to the user. Main Memory  and Display Interface  may be coupled to Communication Infrastructure , which may serve as the interface point to Secondary Memory  and Communication Interface . Secondary Memory  may provide additional memory resources beyond main Memory , and may generally function as a storage location for computer programs to be executed by Processor . Either fixed or removable computer-readable media may serve as Secondary Memory . Secondary Memory  may comprise, for example, Hard Disk  and Removable Storage Drive  that may have an associated Removable Storage Unit . There may be multiple sources of Secondary Memory  and systems of the disclosed solution may be configured as needed to support the data storage requirements of the user and the methods described herein. Secondary Memory  may also comprise Interface  that serves as an interface point to additional storage such as Removable Storage Unit . Numerous types of data storage devices may serve as repositories for data utilized by the specially programmed computer system. For example, magnetic, optical or magnetic-optical storage systems, or any other available mass storage technology that provides a repository for digital information may be used.","Communication Interface  may be coupled to Communication Infrastructure  and may serve as a conduit for data destined for or received from Communication Path . A Network Interface Card (NIC) is an example of the type of device that once coupled to Communication Infrastructure  may provide a mechanism for transporting data to Communication Path . Computer networks such Local Area Networks (LAN), Wide Area Networks (WAN), Wireless networks, optical networks, distributed networks, the Internet or any combination thereof are some examples of the type of communication paths that may be utilized by the specially program computer system. Communication Path  may comprise any type of telecommunication network or interconnection fabric that can transport data to and from Communication Interface .","To facilitate user interaction with the specially programmed computer system, one or more Human Interface Devices (HID)  may be provided. Some examples of HIDs that enable users to input commands or data to the specially programmed computer may comprise a keyboard, mouse, touch screen devices, microphones or other audio interface devices, motion sensors or the like, as well as any other device able to accept any kind of human input and in turn communicate that input to Processor  to trigger one or more responses from the specially programmed computer are within the scope of the system disclosed herein.","While  depicts a physical device, the scope of the system disclosed may also encompass a virtual device, virtual machine or simulator embodied in one or more computer programs executing on a computer or computer system and acting or providing a computer system environment compatible with the methods and processes disclosed herein. Where a virtual machine, process, device or otherwise performs substantially similarly to that of a physical computer system, such a virtual platform will also fall within the scope of a system, notwithstanding the description herein of a physical system such as that in .","One or more embodiments are configured to enable the specially programmed computer to take the input data given and transform it into a source-independent server interface by applying one or more of the methods and\/or processes of the solution as described herein.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 2","b":["200","202","204","206","202","204","206","101","202","206","202","204","206"]},"Data store  resides on a memory device, such as magnetic, optical or magnetic-optical storage systems, or any other available mass storage technology that provides a repository for digital information. In one or more embodiments, data store  resides in secondary memory . Data store  serves as a repository of data records managed by data manager .","Master data manager  manages data in data store , including generation, deletion, update, and any other modification of any record in data store . Master data manager  also provides requested data in response to a query. Master data manager  substantially performs the functions provided by a standard database management system (DBMS). In one or more embodiments, master data manager  handles any access to records in data store . In one or more embodiments, master data manager  stores data in data store  according to a dynamic schema and master data manager  is configured to handle schema changes.","Master data clients - communicate with master data manager  to access data stored in data store . Master data clients - include any program configured to communicate with master data manager . In one or more embodiments, master data clients - communicate with master data manager  using an application programming interface (API) for master data manager . The API for master data manager  includes functionality provided by a standard database management system to create, delete, update or otherwise modify data in data store . In one or more embodiments of the solution disclosed herein, the API for master data manager  includes functionality to manage and modify the schema. Communications between master data clients - and master data manager  take place over a network, such as a local area network, wide area network, wireless network, or any other network. Alternatively, a master data client resides on the same computer system  as master data manager  and communication occurs over a communication infrastructure .","External request manager  provides an interface for applications to access data managed by master data manager . The interface allows data managed by master data manager  to be accessed using a standard query language, such as SQL. In one or more embodiments, external request manager  communicates with master data manager  using an API for master data manager . Alternatively, external request manager  and master data manager  are components of a single server program. In one or more embodiments, external request manager  has direct access to data structures managed by data manager  and stored in data store .","External request manager  includes DB view manager . DB view manager generates and stores database views (DB views). DB views are generated based on schema information provided by master data manager . The schema information provided by master data manager  is any set of information from which the schema may be determined, such as table and field names and properties. In one or more embodiments, the schema information comprises metadata from metadata tables managed by master data manager . A DB view comprises a stored query, such as a SQL query. Alternatively, a DB view comprises information describing commands to retrieve data from data store  through master data manager  in accordance with an API of master data server . Although the stored query can generate a table of information organized a meaningful way to an external application, a stored query does not replicate data in data store  in a separate table or any other data structure. Rather, records in data store  are accessed when the stored query is executed. Because master data manager  retains control over the data and because no data is replicated, no synchronization issue arises between a DB view and records in data store .","DB view manager  updates DB views when a change is detected in the schema. In one or more embodiments, master data manager  or another component of system  notifies DB view manager  of schema changes. Schema changes include new or deleted tables and fields, changed relationships, edits to data dictionaries or any other schema change. Alternatively, DB view manager  actively detects schema changes. It will be apparent to an artisan of ordinary skill that many methods exist in the art to implement event notification or detection. DB view manager  unloads all stored DB views, generates new DB views based on the changed schema, and reloads the newly generated DB views. The generation of DB views is computationally fast. Alternatively, only a selection of affected DB views is generated and replaced.","Clients - include any program configured to access data using a standard query language, such as SQL. Clients - include external applications such as data profiling tools, matching tools, business warehouse applications, reporting tools. Clients - communicate with external request manager  by sending a query to access data presented by DB views. In one or more of the solutions disclosed herein, access to data in store  through external request manager  is limited to read-only access. Read-only access allows an external application to access and analyze data in data store  while leaving control and maintenance of data to master data manager . Alternatively, external request manager  is configured to provide greater access to data in data store . In one or more embodiments of the disclosure, external request manager  is configured to generate and provide a client-specific DB view to each client. Access to different sets of data is granted based on login information or other authentication methods. A client-specific DB view is a database query restricted to a subset of data stored in data store . Communications between clients - and external request manager  take place over a network, such as a local area network, wide area network, wireless network, or any other network. Alternatively, a client resides on the same computer system  as external request manager  and communication occurs over a communication infrastructure .",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 4","FIGS. 5A and 5B"],"b":["400","500","520","520","540","204","500","202","400","204","400","204","452","450","402","418","502","518","522","538","402","418","202"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 3","b":["300","302","304","302"]},"Processing continues to step , where DB views are generated. In one or more embodiments, DB views are recursively generated. An artisan of ordinary skill in the art would appreciate that embodiments may combine step  of determining the schema and step  of generating DB views. Recursive generation of DB views is described below in further detail with reference to .","Processing continues to step , where it is determined whether a schema change has occurred. In one or more embodiments, a component of the master data management system notifies the process of a change, such as new or deleted tables and fields, changed relationships, edits to data dictionaries or any other schema change. Alternatively, the process actively checks for schema changes. It will be apparent to an artisan of ordinary skill that many methods exist in the art to implement event notification or detection. If no schema change is detected, the process continues to step  and waits for a schema change notification.","If a schema change is detected, the process returns to step . In one or more embodiments, when a schema change is detected, the current DB views are unloaded, updated DB views are generated using new information on the changed schema, and the updated DB views are reloaded. Alternatively, only a subset of the DB views affected by the schema change are replaced.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 6","FIG. 4"]},"In one or more embodiments, a presentation rule for each data field type of the master data management system is used to determine a format for the field in the DB view. A presentation rule can handle differences between the way the master data management system presents and stores the data. Exemplary simple lookup fields and their presentation rules as used in one or more embodiments are shown in Table 1.","The usage of tuples in a master data management system designed to store data in a proprietary schema is described in U.S. Patent Application Publication Number 2009\/0144320, which is incorporated herein by reference in its entirety. The function addSqlParts generates portions of the SQL query for the DB view as fields are processed.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 7A","b":["710","724","710","724","702","704"]},"In one or more embodiments, DB views - are used in the generation of another DB view.  provides a partial DB view  as a partial SQL query which references DB views - at positions B-B of a SQL query. In one or more embodiments, partial DB view  is generated as part of a recursive process, such as the recursive process outlined by .",{"@attributes":{"id":"p-0051","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Simple Lookup Fields"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Field Type","Presentation Rule"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Text","According to DB variable length, Unicode data field format, and the selected"]},{"entry":[{},"language"]},{"entry":["Text Normalized","According to DB variable length, Unicode data field format, and the selected"]},{"entry":[{},"language"]},{"entry":["Text Large","According to DB variable length, Unicode data field format, and the selected"]},{"entry":[{},"language"]},{"entry":[{},{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00001","he":"3.89mm","wi":"3.13mm","file":"US08239423-20120807-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}}]},{"entry":[{},"Contains square characters as a delimiter between log entries"]},{"entry":["Integer","According to DB field format"]},{"entry":["Real","Decimal places according to field parameter"]},{"entry":["Boolean","TRUE\/FALSE values according to field parameter"]},{"entry":["Literal Date","Date field data type with time portion truncated (12:00:00)"]},{"entry":["Literal Time","Date field data type with date portion truncated (01-01-1970)"]},{"entry":["Lookup [Flat]","According to the display field definition, a text field should be presented according to"]},{"entry":[{},"the selected language"]},{"entry":["Lookup","According to the hierarchy table primary display field definition. The hierarchy node"]},{"entry":["[Hierarchy\/","name should be fully visible with a user defined separator between each node name"]},{"entry":["Taxonomy]","of the full hierarchy path"]},{"entry":[{},"For example, Tools \u2192 Hand Tools \u2192 Hammer"]},{"entry":["Lookup","According to the TextStart field concatenated with the TextRest field of"]},{"entry":["[Text Block]","A2i_Data_Ex_# table, within a text field size limitation of the DB vendor"]},{"entry":["Lookup","According to the TextStart field concatenated with the TextRest field of"]},{"entry":["[Text HTML]","A2i_Data_Ex_# table, within a text field size limitation of the DB vendor"]},{"entry":["Auto ID","According to DB field format"]},{"entry":["Time Stamp","Date field data type"]},{"entry":["Create Stamp","mm-dd-yy hh-mm-ss AM (or PM) in datetime data type"]},{"entry":["User Stamp","According to DB field format"]},{"entry":["Currency","Symbol and Decimal places according to field parameter"]},{"entry":["GM Time","Date field data type"]},{"entry":["Log","Converted to text, within the text field size limitation of the DB in use"]},{"entry":[{},{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00002","he":"3.89mm","wi":"3.13mm","file":"US08239423-20120807-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}}]},{"entry":["Measurement","Decimal places according to field parameter, postfix value with UOM name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The above and other aspects, features and advantages of the disclosure will be more apparent from the following more particular description thereof, presented in conjunction with the following drawings wherein:",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7B"}]},"DETDESC":[{},{}]}
