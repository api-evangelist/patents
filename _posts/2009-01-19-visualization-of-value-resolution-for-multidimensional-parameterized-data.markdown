---
title: Visualization of value resolution for multidimensional parameterized data
abstract: A user interface presents views of entities and their attributes relative to any subset of associated parameters. A view may present views of entities as a function of one or more parameters. A selection of a subset of entities in one view with respect to parameters may be presented in another view with respect to different parameters. Entities may be manipulated in any supplemental view to change their values or their parameter associations. A view may present components and parameters associated with layers or any subset of layers and/or after layer compositing. A view can include resolved values of components and their attributes. A supplemental view may include visual indicators to indicate the layer or other parameter defining its resolved value. Hierarchical relationships may be presented in views, with ancestor entities expanded within a view to show its descendent entities or collapsed to hide its descendent entities.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08566736&OS=08566736&RS=08566736
owner: Pixar
number: 08566736
owner_city: Emeryville
owner_country: US
publication_date: 20090119
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention relates to the field of computer graphics, and in particular to methods and apparatus for creating, modifying, and using components to create computer graphics productions. Many computer graphic images are created by mathematically modeling the interaction of light with a three dimensional scene from a given viewpoint. This process, called rendering, generates a two-dimensional image of the scene from the given viewpoint, and is analogous to taking a photograph of a real-world scene. Animated sequences can be created by rendering a sequence of images of a scene as the scene is gradually changed over time. A great deal of effort has been devoted to making realistic looking and artistically compelling rendered images and animations.","Computer graphics images, animations, and other productions involving computer graphics, such as interactive entertainment software, are created from a number of different components. Generally, components include any data and instructions used to create products and applications that include computer graphics. Components can include three-dimensional models of geometry; texture maps and other arrays of data; lighting and shading programs used to determine the visual appearance of models; and animation data and deformer functions used to specify changes and motion over time.","Components typically include one or more attributes containing data associated with the component. Attributes can specify any static or varying property of a component. For example, a component may be a model of a sphere. Attributes of this example component could describe properties such as the radius of the sphere and the location of the center of the sphere. Different types of components may include different numbers and types of attributes. Components are often related to each other with complex cross-reference, inheritance, and dependency relationships.","Previously, digital productions created animations by specifying changes in attributes as a function of time. For example, a model of a sphere may be animated by specifying the change in its location attribute as a function of time. Software can then use this data to specify computer graphics data for multiple frames at different time and then render images for each frame.","As digital productions become more complicated, attribute values of components may be associated with parameters other than time. Multiple users may collaboratively author attribute values and components. Components and attributes may be grouped in different ways to improve usability and to reuse components. Portions of scenes may be created and rendered separately and then combined into a final image for a frame. Users may experiment with variations and alternate versions of scenes to determine the best result.","There is an unmet need for a user interface that enables users to view and manipulate data in association with parameters other than or in addition to time. There is also an unmet need for a user interface that clearly presents complex attribute and component relationships to users.","An embodiment of the invention includes a user interface that presents views of components and their attributes relative to any subset of the parameters associated with these components and attributes. In an embodiment, the user interface may present views of components and their attributes as a function of one or more parameters, such as time, layer, rendering pass, wedge, and\/or pose.","In a further embodiment, users can select a subset of component attributes viewed with respect to one or more parameters, and then view, manipulate, and\/or modify the selected component attributes with respect to one or more different parameters. Furthermore, any selection of entities in one view may be viewed with respect to other components, component attributes, component attribute values, and\/or parameters in additional supplemental views. In an embodiment, users and applications can view components, component attributes, and component attribute values in any supplemental view, for example on a display axis or via a text, numerical, or graphical indicator within a supplemental view.","In still further embodiments, users and applications can manipulate components, component attributes, and component attribute values in any supplemental view, for example by changing a component attribute value or an opinion of value of a component attribute in a layer. In another example, a user or application can change or add a parameter association with a component, component attribute, or component attribute value.","In an embodiment, a supplemental view may present components and parameters associated with layers or any subset of layers and\/or after layer compositing. A view can include resolved values of components and their attributes. In an embodiment, a supplemental view includes visual indicators to indicate the layer or other parameter defining its resolved value.","In an embodiment, hierarchical relationships, such as layers containing or encapsulating one or more sublayers or components encapsulating component attributes and subcomponents, may be presented in multidimensional and supplemental views. In this embodiment, ancestor entities may be expanded within a view to show its descendent entities or collapsed to hide its descendent entities.","An embodiment of the invention includes a user interface that presents views of components and their attributes relative to any subset of the parameters associated with these components and attributes. For example, an attribute value may be specified as a function of time. In addition, an attribute value may be associated with parameters such as a layer parameter, a rendering pass parameter, one or more independent wedge parameters, a component relationship; and\/or a pose parameter. In an embodiment, the user interface may present views of components and their attributes as a function of one or more parameters, such as time, layer, rendering pass, wedge, component relationship, and\/or pose.","Additionally, an embodiment of the invention allows users to manipulate components and their attributes in any of these views. For example, users can view a set of component attributes as a function of layer, and then select, manipulate, and\/or modify only the attribute values associated with a specific layer.","In a further embodiment, users can select a subset of component attributes viewed with respect to one or more parameters, and then view, manipulate, and\/or modify the selected component attributes with respect to one or more different parameters. For example, users can view component attributes as a function of layer, select a subset of component attributes in this view, and then view the selected subset of component attributes as a function of pose, rendering pass, wedge, or any other associated parameter.","Components and their attributes may be associated with many different types of parameters. For example, a component attribute may be described with reference to a time parameter, which defines the time or times at which a component attribute has a specific value. Time may be defined using any system of measuring time in animation, including hours\/minute\/seconds or portions thereof, and frames, feet of film. Time may also be specified as a continuous-valued or discrete-valued parameter. Time parameterizations may also include discontinuities, such as those associated with different clips or camera views.","As another example, components, component attributes, and component attribute values may be defined with reference to a pose parameter. A pose is an specific arrangement or positioning of model, a portion of a model, or group of models. A pose may also include shading, lighting, effects, behavior, or any other attribute values by associated with a given arrangement or positioning. In an embodiment, a component, component attribute, or component attribute value is associated with a pose parameter. The pose parameter specifies a pose associated with the component, component attribute, or component attribute value.","For example, a character model in a standing pose may be associated with a pose-specific hair model component, a standing posture component attribute controlling whether the character model stands upright or slouches, and an arm rotation attribute value of 90 degrees. In this example, a pose parameter associates the hair model component, the standing posture component attribute, and the arm rotation attribute value of 90 degrees with the standing pose.","In another example, components and their attributes may be defined with reference to a layering parameter. In this example, a layering parameter is a reference to one or more layers data structures suitable for use with digital production pipelines and other collaborative data creation applications. Layers data structures are described in detail in U.S. patent application Ser. No. 11\/738,953, filed Apr. 23, 2007, and entitled \u201cLayering and Referencing of Scene Description,\u201d which is incorporated by reference herein for all purposes.","Layers data structures enable the progressive refinement and incremental modification of components as needed. Cross-reference relationships to components enables the encapsulation and reuse of components. Together, this combination of layering and cross-referencing enables: data modification at any point of a collaborative workflow, in any order, without any loss of data in upstream or downstream activities of the workflow; unrestricted and progressive modification and refinement of components; unlimited branching and versioning of data at any point of the workflow; and a unified system of data specification and modification that enables any aspects of the data to be added, removed, reused, modified, or extended at any point of the workflow.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1A","b":["100","100"]},"Each layer may be sparsely populated\u2014that is, a layer does not have to include opinions for the value of every attribute of a component. Each layer can specify an opinion of value for a new attribute without having that attribute explicitly declared by a prior layer. A layer can include opinions of value for attributes of multiple components. Additionally, empty layers can be created in early stages of the digital production pipeline as placeholders for opinions of attribute values to be provided at later stages of the digital production pipeline.","In example layer data structure , layer  includes an opinion  that the position attribute  of component  should be set to a value of 0.5 and an opinion  that the direction attribute  of component  should be set to a value of 17. As can be seen in this example, the opinions of value of other attributes, such as the density attribute  of component , are undefined in layer .","In the above example, attribute values are numerical parameters. However, embodiments of layer data structure  allow the specification of any data type for an attribute value, including integers; floating point numbers; characters; strings; Boolean values; geometry data; compound data types such as vectors with two or more dimensions, matrices, structures, arrays, dictionaries, hash tables, elements of edit decision lists; references to one or more components; references to one or more layers; references to elements, tables, or other structures of a database; and references to internal or external functions, scripts, or executable programs.","Layers provide opinions of value for attributes of components in terms of the semantic structure associated with the components. Any arbitrary abstract attribute of a component can be expressed in a layer. Furthermore, one or more layers can provide opinions of value for the attribute of a component in the unique terms or semantic structure defined for that attribute. There is no need to reduce opinions of value of abstract attributes to a common or low-level form, such as pixels or points, to resolve or composite the values.","For example, a first layer can specify a model of a character wearing a hat. One attribute of the hat could be its type, such as \u201csombrero.\u201d Another attribute of the hat could be its color, such as \u201cred.\u201d A third attribute of a hat could be its material, such as \u201cstraw.\u201d Thus, from the view of the first layer, the character model should have a red straw sombrero. A second layer that is higher or stronger than the first layer could change the type attribute of the hat from \u201csombrero\u201d to \u201ctop hat.\u201d Thus, from the view of the second layer, the character model should have red straw top hat. A third layer that is higher or stronger than the second layer could specify that the color attribute of the hat should be \u201cpurple\u201d and the material attribute should be \u201cfelt.\u201d Thus, from the view of the third layer, the character should have a purple felt top hat. In this example, each layer expresses an opinion of one or more attribute values in terms of the semantics associated with each attribute.","Furthermore, a component may include a cross-reference to another component defined by one or more layers. For example, a Hat component of a character model can be a cross-reference to a specific model of a hat. Thus, when cross-reference is set to a \u201csombrero\u201d component, the character model includes a model of a sombrero. When the cross-reference is overridden by a layer to a \u201ctop hat\u201d component, the character model is changed to include a model of a top hat. Each of these models can be defined by one or more layers, the attributes of which can be wholly or partially or overridden by other layers as described above.","In an embodiment, every activity in the digital production pipeline is associated with one or more layers. Users can create and manipulate layers manually to provide additional control and ease of use for a component. For example, the attributes of different models can be specified in separate layers. In another example, related attribute values for different models in a scene can be specified in the same layer to facilitate easy manipulation. In an embodiment, applications associated with activities can automatically create, access, and modify layers based on context, such as the activity, the type of component, and the action being performed by the user.","The complete authored state of one or more components in one or more scenes at a given point of the digital production pipeline is determined by compositing all of the layers associated with a given point to produce a composite layer . The composite layer  includes opinions of attribute values for the attributes specified by one or more of the associated layers. The composite layer  can also be referred to as a composite scene description.","In an embodiment, a layer stacking order  determines the order in which layers are composited. This in turn specifies how attribute values in one layer override corresponding attribute values in other layers. In an embodiment, layers are assigned a strength in absolute or relative terms. For example, a first layer can include a relative strength value indicating that it is stronger than or weaker than one or more other layers. In this embodiment, opinions of attribute values in stronger layers will be at the \u201ctop\u201d of the stacking order and will override opinions of attribute values in weaker layers, i.e. layers that are \u201clower\u201d in the stacking order. The example layer stacking order  is a linear order; however, more complicated layer stacking orders with multiple branches can be utilized. In an embodiment, layer stacking orders can be set or modified by digital production pipeline applications, either manually by a user or automatically by applications. In a further embodiment, the strength of layers is defined at least in part with respect to a root layer, such as root layer , which is by default the strongest or highest level layer.","In example layer data structure , layer  includes opinions  and  of the value of attributes  and . However, stacking order  places layer  as stronger than, or ahead of, layer . Thus, in the composite layer , the opinions of value  and  of layer  for attributes  and  will override corresponding opinions  and  in layer . However, as layer  does not define an opinion of value for attribute  of component , the opinion  in layer  will define the value of attribute  in the composite layer .","In an embodiment, a layering parameter specifies a component or component attribute's membership in one or more layers.","In addition to time, pose, and layering parameters, components and their attributes may be defined with reference to a wedge parameter. A wedge may be created to incrementally vary one or more attribute values within a scene. Rendered images or other output may be generated for each permutation of attribute values specified by a wedge. Wedges allow users to create and evaluate the effects of a range of attribute values in a scene.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 1B","b":["155","115","157","157","159","157","161"]},"In this example, a wedge  is created for the light attribute . Wedge  specifies that the value of light attribute  should range from 0.0 to 1.0 in steps of 0.2. Thus, wedge  defines six alternate versions of the scene data: wedge version  specifies a scene including a value of light attribute  of 0.0; wedge version  specifies a scene including a value of light attribute  of 0.2; wedge version  specifies a scene including a value of light attribute  of 0.4; wedge version  specifies a scene including a value of light attribute  of 0.6; wedge version  specifies a scene including a value of light attribute  of 0.8; and wedge version  specifies a scene including a value of light attribute  of 1.0.","In this example, each wedge version of the scene varies the value of the light attribute  while keeping the other attribute values of the scene the same. In further examples, a wedge can vary multiple attribute values at the same time, creating versions of a scene for each permutation of attribute values. In still other examples, a wedge may specify attribute values that vary over time or other parameters.","In an embodiment, a wedge parameter specifies a component or component attribute's association with a wedge. For example, a wedge parameter may specify that light attribute  is associated with wedge . In an additional embodiment, a wedge parameter associates a specific attribute value with a wedge version. For example, a wedge parameter may specify that the value of 0.6 of light attribute  is associated with wedge version .","In addition to time, pose, layering, and wedge parameters, components, component attributes, and component attribute values may be defined with reference to rendering pass parameters. A rendering pass renders all or a portion of the scene data and produces one or more rendered images as a result. Images from two or more rendering passes may be combined to produce one or more composite images. Images from rendering passes may be combined using compositing attributes of the image, such as depth values or alpha blending values associated with pixels in images, or using compositing attributes specified outside of the image, such as compositing operations specified in dataflow networks. Rendering passes allow different portions of the scene to be rendered separately, to be rendered using different rendering techniques or rendering parameters, to reuse rendered scene data without re-rendering when other portions of the scene are changed, and\/or to reuse rendered scene data in multiple scenes.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 1C","b":["170","170","172","173","174","175","176","177","170"]},"In further examples, a component, its component attributes, and its component attribute values may be associated with different rendering passes. For example, a car model may include a first set of component attributes associated with a first rendering pass  and a second set of component attributes associated with the third rendering pass . In this example, the first set of component attributes will be used to render the car model in the first rendering pass  and the second set of component attributes will be used to render the car model in the third rendering pass .","Because components, component attributes, and component attribute values may be associated with one or more parameters in addition to time, an embodiment of the invention includes a user interface that presents views of components and their attributes relative to any subset of the parameters associated with these components and attributes.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 2","b":["200","200","200","205","210","215"]},"Embodiments of multidimensional view  may display components, component attributes, and\/or component attributes relative to any permutation of its associated parameters, including time, layer, rendering pass, wedge, and\/or pose. In further embodiment, multidimensional view  may present more than three dimensions of components and their associated parameters by combining two or more dimensions of parameters along a single axis; presenting associated parameters using color, text, icons, or other visual indicators; or using any other visual technique known in the art to present multidimensional data with more than three dimensions.","Example multidimensional view  presents a view of component attributes with respect to both time and layer parameters. For example, multidimensional view  includes component attributes A and B . The specification of component attributes A and B can be viewed as slices and . Slice represents the specification of component attribute A over all time parameter values and all layer parameter values. Similarly, slice represents the specification of component attribute B over all time values and all layers.","Multidimensional view  also presents a view of component attributes specified within one or more layers. Multidimensional view  represents layers as vertical sections, such as layer A and B . The intersection of layer A with slice represents the layer A specification of the component attribute A . Similarly, the intersection of layer B with slice represents the layer B B specification of the component attribute A . Intersections and of layers A and B with slice represent layers A and B specifications of component attribute B , respectively.","As described above, layers may be composited to specify a complete set of component attributes and component attribute values. In an embodiment, multidimensional view  includes a composite layer view  presenting the composited set of component attributes and component attribute values. In example multidimensional view , composite layer view  is shown in front of the set of layers of the multidimensional view . In this example , composite layer view  includes the resolved values of one or more component attributes, as determined by a composition of some or all of the set of layers specified by according to a layer relationship. Composite layer view  includes resolved component attribute values A \u2032 and B \u2032. In this example, composite layer view  shows the resolved component attribute values \u2032 parameterized by time; however, further embodiments of the composite layer view  may show resolved component attribute values with respect to any other associated parameterizations, including pose, rendering pass, one or more wedges, and component relationships.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIGS. 3A-3C","FIG. 3A"],"b":["300","305","200","310","305","300","305","315","315","315","315","320"],"i":["a","b","c"]},"After receiving a selection of all or a portion  of the component attributes and optionally an evaluation time, an embodiment of the invention receives a command from a user or application to create a supplemental view  of the component attributes and associated layer parameters.","Supplemental view  presents a view of the selected component attributes  with respect to their associated layers. In an embodiment, supplemental view  is further limited by the evaluation time .","Supplemental view  presents component attributes on a first axis  and layers on a second axis . In example , a visual indicator at the intersection of a row associated with a component attribute and a column associated with a layer indicates that this layer specifies an opinion of value for this component attribute. However, the final composited value of the component attribute may not include this opinion of value because of the influence of stronger layers.","For example, component attribute  is associated with opinions of value in layers  ,  , and  . Because layer  is the strongest of these three layers, the value of component attribute  will be defined by layer  , with the opinions of value provided by layers  and  overridden for this component attribute.","In a further embodiment, supplemental view  includes visual indicators for component attributes to indicate the layer or other parameter defining its composited value. For example, lines to indicate the layers defining the attribute values of component attributes  to , respectively, after layer compositing. In other embodiments, other visual indicators such as colors, icons, text, and animation may be used to indicate the layers defining the attribute values of component attributes.","In an embodiment, a user or application may select some or all of the component attributes or parameters in supplemental view  and create one or more additional supplemental views presenting the selection with respect to other associated parameters.  illustrate examples of additional supplement views derived from supplement view .",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 3B","FIG. 3A"],"b":["310","340","310","340","310","1","2","3","1","345","4","2","345","5","6","7","8","3","345"],"i":["a","b","c. "]},"Similarly,  illustrates supplemental view  shown in  and an additional supplemental view  derived from supplemental view . Additional supplemental view  presents a selection of all or a portion of the layers presented in supplemental view  with respect to a wedge parameter. In this example, a visual indicator at the intersection of a row associated with a wedge and a column associated with a layer indicates an association between the layer and the wedge. For example, layers  and  are associated with wedge  , and layers  and  are associated with wedge  . In this example, no visual indicator is present in the column associated with layer ; thus, layer  is not associated with any wedge.","Further embodiments of the invention may present supplemental views of any permutation of components, component attributes, and component attribute values with respect to any associated parameter. Furthermore, any selection of entities in one supplemental view may be viewed with respect to other components, component attributes, component attribute values, and\/or parameters in additional supplemental views. In an embodiment, a supplemental view may present components and parameters associated with layers or any subset of layers and\/or after layer compositing.","In an embodiment, users and applications can view components, component attributes, and component attribute values in any supplemental view, for example on a display axis or via a text, numerical, or graphical indicator within a supplemental view. In still further embodiments, users and applications can manipulate components, component attributes, and component attribute values in any supplemental view, for example by changing a component attribute value or an opinion of value of a component attribute in a layer. In another example, a user or application can change a parameter associated with a component, component attribute, or component attribute value, such as changing a layer association of a component or adding an association between a component attribute and a wedge.","In an embodiment, hierarchical relationships, such as layers containing or encapsulating one or more sublayers or components encapsulating component attributes and subcomponents, may be presented in multidimensional and supplemental views. In this embodiment, ancestor entities may be expanded within a view to show its descendent entities or collapsed to hide its descendent entities.","In an embodiment, components can be associated with each other via relationships. Relationships may be used to specify or modify an effect from one component on another component.  illustrates an example  of components and relationships suitable for use with embodiments of the invention.","Example  includes a light component  and two object components, object A  and object B . Relationships  and  associate object components  and , respectively, with light component . Relationships  and  provide one or more attribute values of light component  to object components  and . For example, light component  includes an illumination attribute set to 0.9, specifying an intensity of a light source. This attribute value is provided via relationships  and  to components  and , for example, to determine the shading of these objects by a light source defined by light component .","In an embodiment, relationships may be associated with relational attributes. Relational attributes may modify, override, or supplement the attribute values provided by one component to another via a relationship. In example , relationship  includes relational attribute , which overrides an illumination attribute value provided by light component  with a new illumination attribute value 0.5. Because relational attribute  is associated with relationship , it does not alter the effect of light component  on components other than component . Similarly, relationship  includes relational attribute , which scales the illumination attribute value of component  provided to component  by a factor of 0.5.","Relationships and relational attributes may be used for a variety of applications with computer graphics components. For example, an application of relationships and relational attributes includes animation, articulation, and deformer functions, in which relational attributes modify, override, or supplement the output of deformer functions applied to geometry, such as points on objects.","In an embodiment, relationships and relational attributes may be defined by layers. Similar to other types of attributes, layers may define relationships and\/or relational attributes between components, and modify, override, or remove relationships and\/or relational attributes defined by other layers. In an embodiment, relationships are parameters that may be used to view components and attributes.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 4B","b":["450","460"]},"In an embodiment, the supplemental view  can be changed to a second supplemental view  showing the association between layers and relationships and\/or relational attributes. In second supplemental view , layers are shown on the horizontal axis and light components are shown on the vertical axis. Visual indicators at the intersections of rows and columns indicate the layers assigning relationships between specific lights and object components. In a further embodiment, the visual indicator may include an indication of attribute values of the light component and\/or of associated relational attributes.","As an alternative to second supplemental view , further supplemental views may show other parameters with respect to relationships. For example, a supplemental view may show the objects associated with relationship, rather than the light sources, assigned by layers. Other example supplemental views may show all of the relationships associated with a given light source or with a given object. Still further supplemental views may show relationships parameterized according to time, poses, passes, one or more wedges. Any of these supplemental views may include or exclude components based on component attributes, relationship attributes, or values of parameters such as time, layer, rendering pass, wedge, component relationship, and\/or pose.","Embodiments of the invention allow users and\/or applications to use supplemental views to inspect components, component attributes, relationships, and relational attributes with respect to any of the independent dimensions of parameterizations, including time, layer, rendering pass, wedge, component relationships, and\/or pose. Further embodiments of the invention allow users and\/or applications to create, modify, or otherwise interact with components, component attributes, relationships, and relational attributes using supplemental views. In still further embodiments, users and\/or applications may select or identify components, component attributes, relationships, and relational attributes in one supplemental view and then inspect, create, modify, or otherwise interact with the selected or identified entities in another supplemental view. Supplemental views may be created and interacted with via a single application, via two or more applications working together, for example using an application programming interface, and\/or via a scripting application programming interface.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 5","FIG. 5"],"b":["2000","2000","2000","2005","2005","2010","2005","2015"]},"User input devices  communicate user inputs from one or more users to the computer system , examples of which may include keyboards, mice, joysticks, digitizer lets, touch pads, touch screens, still or video cameras, motion sensors, and\/or microphones. Network interface  allows computer system  to communicate with other computer systems via an electronic communications network, and may include wired or wireless communication over local area networks and wide area networks such as the Internet. An audio processor  is adapted to generate analog or digital audio output from instructions and\/or data provided by the CPU , memory , and\/or storage . The components of computer system , including CPU , memory , data storage , user input devices , network interface , and audio processor  are connected via one or more data buses .","A graphics subsystem  is further connected with data bus  and the components of the computer system . The graphics subsystem  includes at least one graphics processing unit (GPU)  and graphics memory . Graphics memory  includes a display memory (e.g., a frame buffer) used for storing pixel data for each pixel of an output image. Graphics memory  can be integrated in the same device as GPU , connected as a separate device with GPU , and\/or implemented within memory .","Pixel data can be provided to graphics memory  directly from the CPU . In some implementations, instructions and\/or data representing a scene are provided to a renderfarm or a set of server computers, each similar to computer system , via the network interface  or storage . The renderfarm generates one or more rendered images of the scene using the provided instructions and\/or data. These rendered images may be stored on computer-readable media in a digital format and optionally returned to the computer system  for display.","Alternatively, CPU  provides the GPU  with data and\/or instructions defining the desired output images, from which the GPU  generates the pixel data of one or more output images. The data and\/or instructions defining the desired output images can be stored in memory  and\/or graphics memory . In an embodiment, the GPU  includes 3D rendering capabilities for generating pixel data for output images from instructions and data defining the geometry, lighting, shading, texturing, motion, and\/or camera parameters for a scene. The GPU  can further include one or more programmable execution units capable of executing shader programs. GPU  can be comprised of one or more graphics processing unit cores.","The CPU , renderfarm, and\/or GPU  can employ any surface or volume rendering technique known in the art to create one or more rendered images from the provided data and instructions, including rasterization, scanline rendering, REYES or micropolygon rendering, ray casting, ray tracing, image-based rendering techniques, and\/or combinations of these and any other rendering or image processing techniques known in the art.","The graphics subsystem  periodically outputs pixel data for an image from graphics memory  to be displayed on display device . Display device  is any device capable of displaying visual information in response to a signal from the computer system , including CRT, LCD, plasma, OLED, and SED displays, as well as film recorders adapted to reproduce computer generated images on photographic film. Computer system  can provide the display device  with an analog or digital signal.","In embodiments of the invention, CPU  is one or more general-purpose microprocessors having one or more homogenous or heterogeneous processing cores. In further embodiments, all or a portion of the graphics subsystem  or GPU  is integrated into CPU . In still further embodiments, all or a portion of the graphics subsystem  may be omitted and software executed by CPU  may perform the functions of the graphics subsystem .","Further embodiments can be envisioned to one of ordinary skill in the art after reading the attached documents. In other embodiments, combinations or sub-combinations of the above disclosed invention can be advantageously made. The block diagrams of the architecture and flow charts are grouped for ease of understanding. However it should be understood that combinations of blocks, additions of new blocks, re-arrangement of blocks, and the like are contemplated in alternative embodiments of the present invention.","The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. It will, however, be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention is described with reference to the drawings, in which:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 1A-1C"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 3A-3C"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 4A and 4B"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
