---
title: Relational schema format
abstract: A Relational Schema Definition (RSD) language that uses metadata of the relational database to generate an implementation-neutral or implementation-specific format that represents the precise database structure and data. The RSD language is a declarative description language such that an RSD file can then be used offline in a disconnected environment to reconstruct and use the database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07403956&OS=07403956&RS=07403956
owner: Microsoft Corporation
number: 07403956
owner_city: Redmond
owner_country: US
publication_date: 20030829
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","EXAMPLE","EXAMPLE","EXAMPLE","EXAMPLE","EXAMPLE","EXAMPLE","EXAMPLE","EXAMPLE","EXAMPLE","EXAMPLE","EXAMPLE","EXAMPLE","Scenario Examples"],"p":["This invention is related to data schemas, and more specifically, a way to represent a relational data schema in an XML format.","Relational schemas are always implicitly stored in the database itself and can be retrieved by querying the database metadata. In addition, relational schemas can be represented by the DDL (Data Definition Language) statements that were used to create the schemas in the first place. However, neither of these formats can be used as a declarative, implementation-neutral format that can be easily stored in a file and used by applications to discover the relational schema.","What is needed is an improved architecture that represents relational schema in a declarative implementation-neutral and\/or implementation-specific format.","The following presents a simplified summary of the invention in order to provide a basic understanding of some aspects of the invention. This summary is not an extensive overview of the invention. It is not intended to identify key\/critical elements of the invention or to delineate the scope of the invention. Its sole purpose is to present some concepts of the invention in a simplified form as a prelude to the more detailed description that is presented later.","The present invention disclosed and claimed herein, in one aspect thereof, comprises a Relational Schema Definition (RSD) language that allows representing any relational schemas in an alternative declarative format, for example, XML format. In one embodiment, the RSD format is expressed as an XML-based language used to represent relational schemas. The RSD language component uses a tool to extract metadata of the relational database, and to format the metadata in to an RSD file. The RSD file represents the precise structure of the database, and in more robust implementations, the data, such that the corresponding database can be reconstructed when remote and disconnected therefrom. The file also contains information on the database type system, as well as the routines (functions and procedures) that are exposed by the database. This is particularly suited by a traveling user, who may use the RSD file to interact with the database while disconnected.","In another aspect thereof, the user can update the disconnected database via the RSD file, such that the updated RSD file can now be remerged with the original database to reflect changes made thereto by the user while disconnected.","In yet another aspect thereof, the RSD language component can be used to facilitate mapping between at least two different data models. The RSD file is generated into an XML format, which XML format is easily processed by software that interacts with other types of data models to which data mapping is desired.","To the accomplishment of the foregoing and related ends, certain illustrative aspects of the invention are described herein in connection with the following description and the annexed drawings. These aspects are indicative, however, of but a few of the various ways in which the principles of the invention may be employed and the present invention is intended to include all such aspects and their equivalents. Other advantages and novel features of the invention may become apparent from the following detailed description of the invention when considered in conjunction with the drawings.","The present invention is now described with reference to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It may be evident, however, that the present invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to facilitate describing the present invention.","As used in this application, the terms \u201ccomponent\u201d and \u201csystem\u201d are intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a server and the server can be a component. One or more components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","As used herein, the term \u201cinference\u201d refers generally to the process of reasoning about or inferring states of the system, environment, and\/or user from a set of observations as captured via events and\/or data. Inference can be employed to identify a specific context or action, or can generate a probability distribution over states, for example. The inference can be probabilistic-that is, the computation of a probability distribution over states of interest based on a consideration of data and events. Inference can also refer to techniques employed for composing higher-level events from a set of events and\/or data. Such inference results in the construction of new events or actions from a set of observed events and\/or stored event data, whether or not the events are correlated in close temporal proximity, and whether the events and data come from one or several event and data sources.","Referring now to , there is illustrated a general block diagram of a system of the present invention. The present invention provides the capability of allowing a user to work with a representative structure of a relational database  even though remote therefrom and disconnected. Such a scenario is common in that the user may be denied access rights and\/or privileges to the relational database  or even to a network on which the database is disposed.","The disclosed architecture addresses the development of a Relational Schema Definition (RSD) language component  that generates an RSD file  that represents the complete structure and data of the relational database from which it is derived.","The RSD file  can then be made accessible to a user instead of the database  itself. This facilitates the user working with the database  indirectly via the RSD file  while traveling or in any scenario where the user is disconnected from the database  (e.g., the database is offline). The location of the RSD file  may be anywhere, e.g., in this embodiment, local to the relational database , such that the user can be given access to it. Of course, the user may be required to login to the network and\/or the database  to gain access to the file , or may be given free access to the file . This implementation is at the discretion of the user.","The disclosed RSD language format is based upon an XML (eXtensible Markup Language) that is used to represent the relational schema. However, as indicated hereinabove, in lieu of XML, the relational schema can be represented with an alternative declarative language. The RSD component  includes a declarative, implementation-neutral format such that after relational database metadata is obtained, the RSD file  can easily be generated, stored, and used by applications to regenerate the relational schema of the database . Thus, the disclosed architecture facilitates use of the RSD file  in a remote and disconnected environment such that a user can take the RSD file  offline, and use the file  to regenerate the relational database  in its entirety for processing, instead of having to maintain a connection to the relational database  in order to access its contents.","Databases and XML offer complementary functionality for storing data. Databases store data for efficient retrieval, whereas XML offers an easy information exchange that enables interoperability between applications. To take advantage of XML features, database tables can be converted into XML documents. XML tools can be employed with such documents for further processing. XML documents can be presented as, for example, HTML (HyperText Markup Language) pages with XSLT (Extensible Stylesheet Language Transformation) stylesheets, can be searched with XML-based query languages such as XQuery (XML Query Language), can be used as a data-exchange format, and so on. For processing XML documents, XML tools can work with any suitable API, e.g., a DOM API ((Document Object Module Application Programming Interface). Thus, XML tools can be used to treat databases as if they were XML documents. This way, the need to convert a database is obviated.","It is preferable to have a file in a non-procedural declarative format that describes the schema of the relational database that is understandable by applications. It is written in the XML format and XML syntax, and consequently, is easy to parse, easy to load into an XML parsing API (e.g., DOM), and easy to understand.","The RSD language component  also facilitates moving (or mapping) data between the relational database  and an Object component  and\/or an XML component  using a mapping component . This is accommodated by using a declarative means rather than a conventional procedural mechanism (e.g., executing C++ code against a result set abstraction to generate an object or an XML structure\/component). The capability to map data from one data model to a different data model is a desirable operation in great demand with data environments of today. That is, data environments that are diverse, and employ a wide range of mechanisms and mediums for persisting and accessing data. With respect to Object data, XML data, and Relational databases, the means to map data between each of these different data structures is important, since users are continually modifying their data storage schemas, mediums, and processes.","Thus, there is provided the relational database  having a relational schema therein represented in the form of metadata, and from which the metadata can be retrieved by the RSD component  for generating the RSD file . The RSD language component  prepares the database data for mapping to another data model via the mapping component . The mapping component  can then map the data to at least the Object component  and\/or the XML component . Note, however, that the RSD component  can be used in conjunction with the mapping component  to map relational data to an arbitrary domain.","The use of an Object Schema Definition (OSD) language component  to process Object data  for use by the XML component  and a Relational component , and an XSD language component  to process XML data  for use by the Object component  and the Relational component , are not part of this description, as indicated by dotted lines. Note that the particular source data (, , and ) and the associated language (, , and ) are not restricted to data transformation to a different target component (, , and ). That is, a scenario can exist where the source relational database  can be mapped to a target relational database (the relational component ) having a different relational structure. Thus, the RSD language component  and mapping component  facilitate this process. Similarly, a scenario can exist where the source object data  can be mapped to a target object data model (the object component ) having a different object structure. The OSD language component  and mapping component  facilitate this process. Still further, a scenario can exist where the source XML data  can be mapped to a target XML data model (the XML component ) having a different XML structure. The XSD language component  and mapping component  facilitate this process.","Referring now to , there is illustrated a flow chart of a process for generating RSD from the relational database. While, for purposes of simplicity of explanation, the one or more methodologies shown herein, e.g., in the form of flow chart, are shown and described as a series of acts, it is to be understood and appreciated that the present invention is not limited by the order of acts, as some acts may, in accordance with the present invention, occur in different orders and\/or concurrently with other acts from that shown and described herein. For example, those skilled in the art will understand and appreciate that a methodology could alternatively be represented as a series of interrelated states or events, such as in a state diagram. Moreover, not all illustrated acts may be required to implement a methodology in accordance with the present invention.","Flow begins at  where a tool of the disclosed architecture is activated according to trigger data. Some types of triggering events are described hereinbelow. At , the tool, as part of the RSD component, executes to walk through the relational database metadata to find the tables and columns and relationships therebetween. At , the tool provides the capability to allow the user to select all or a subset of the relationships for use in the RSD file. At , the tool allows the user to make a selection. At , the tool creates the RSD file of the selected relationships that precisely describe the database structure and data. At this point, optional extensions are included to support implementation-specific extensions and derivations from an ANSI (American National Standards Institute) standard schema (e.g., SQL Server, Oracle. At , the RSD file is stored for later access. The process then reaches a Stop block.","Referring now to , there is illustrated a general block diagram of the RSD language component  of . The RSD component  includes a tool  for extracting the metadata from the relational database  and using the metadata to generate the RSD file . The overall schema of the RSD file  is a combination of physical information  (or elements) and logical information  (or elements) used to describe the relational database . The physical information  can be harvested directly from the database  automatically using the tool , while user annotations to that information are added incrementally to provide the logical element thereof. Annotations are made based upon user knowledge of the relationship between the database tables. This can be performed manually or automatically. Where automatically, a smart algorithm can be employed to derive the annotation information from, e.g., foreign key constraints. Thus the smart algorithm can walk through the database extracting this information for annotating the table relationships. This can be further automated by requiring a degree of certainty that the annotations are correct. Thus, if the user requires that the automated annotation process achieve a minimum 95% accuracy, performance less than this may require manual correction and review to ensure the database is precisely captured in the RSD file . This process can also be performed via a classification process that is described in greater detail hereinbelow.","A database is typically defined at least according to tables and columns. The relationships between tables are not well-defined, which are the logical components of the relational database. The logical elements are useful for representing the semantics of the database, for mapping the database to another data model, for modeling, etc. A way to obtain a \u201chint\u201d at the table relationships is via a foreign key. In order to describe a relationship between tables, the logical element is used. Thus, given an RSD file, the relational database is recreated by using both the physical and logical elements. The tool  is sufficiently sophisticated to handle merge scenarios where the RSD file  has been updated by the user with logical information and is then refreshed from the database .","The following convention is adopted such that element names that are written in Times  plain text font are denoted as physical elements that are derived directly from the database . These elements are appropriately regenerated from the database  each time the generation tool is run. Element names that are written in Times  italics text font are denoted as logical elements that can be annotated with an IsLogical attribute. If the IsLogical attribute is TRUE, RSD generation tools respect the user-supplied extensions and do not overwrite that information when updating the RSD file  from the database .","The RSD file generation process can be initiated manually or automatically. Manual operation simply requires that the user initiate the process by way of a user interface or other communication means. When performed automatically, the tool  can be triggered to operate according to any number of trigger mechanisms. The RSD file generation process can be initiated according to predetermined time criteria (e.g., hourly, daily, weekly) to process the current state of the database. Thus, the RSD file  could be updated every ten minutes by running the tool to extract the latest state of the database. However, this fixed time increment may not provide that latest state of the database if the database is updated after the most recent RSD file generation.","Alternatively, the tool can be automatically activated to generate an updated RSD file  after a database change has been detected. For example, if it is determined that five percent of the database  has experienced changes, the tool  could be automatically triggered to update the RSD file .","Still alternatively, the tool can be activated to generate the RSD file  only when the database is accessed by a non-relational database query, either before the query is made, or after the query is completed. However, this too may involve more time then is desirable, since the requestor may then need to wait until the process complete, if performed before the query.","In another scenario, if certain portions of the database  are determined to be a higher priority data than other portions, then after changes have been made in the higher priority data, the tool could be automatically activated to update the RSD file .","Where the database is distributed on several servers across a network, the RSD file generation process may need to operate differently, as is described hereinbelow with respect to segmentation.","In , the RSD file  is illustrated local to the RSD component . This represents that the RSD file  can be generated and stored local to the RSD component , where the RSD component  is local to the database . Alternatively, the RSD file  can later be moved to the database  where the RSD component  is remote from the database . All that is important is that the file  is located where it can be readily accessed or provided to a user who needs access thereto.","Referring now to , there is illustrated a general block diagram of an RSD component  that further employs a classifier  to perform one or more automated functions. The subject invention (e.g., in connection with the RSD file generation process) can employ various artificial intelligence based schemes for carrying out various aspects of the subject invention. For example, a process for determining when the file  will be updated by the generation process can be facilitated via an automatic classification system and process. Moreover, where the database  is distributed over several locations, and each location has an associated RSD file  that represents the distributed database portion at that location, the classifier  can be employed to determine which location will be selected for regeneration, in what order the locations will be processed, and when the RSD file  will be regenerated.","A classifier is a function that maps an input attribute vector, x=(x1, x2, x3, x4, \u03c7n), to a confidence that the input belongs to a class, that is, f(x)=confidence(class). Such classification can employ a probabilistic and\/or statistical-based analysis (e.g., factoring into the analysis utilities and costs) to prognose or infer an action that a user desires to be automatically performed. In the case of database systems, for example, attributes are words or phrases or other data-specific attributes derived from the words (e.g., database tables, the presence of key terms), and the classes are categories or areas of interest (e.g., levels of priorities).","For example, a support vector machine (SVM) classifier can be employed. An SVM operates by finding a hypersurface in the space of possible inputs. This hypersurface will attempt to split the triggering criteria from the non-triggering events. Intuitively, this makes the classification correct for testing data that is near, but not identical to the training data. Other directed and undirected model classification approaches, including, e.g., na\u00efve Bayes, Bayesian networks, decision trees, and probabilistic classification models providing different patterns of independence, can be employed. Classification as used herein also is inclusive of statistical regression that is utilized to develop models of priority.","As will be readily appreciated from the subject specification, the subject invention can employ classifiers that are explicitly trained (e.g., via a generic training data) as well as implicitly trained (e.g., via observing user behavior, receiving extrinsic information). For example, SVM's are configured via a learning or training phase within a classifier constructor and feature selection module. Thus, the classifier(s) can be used to automatically determine according to a predetermined criteria when the database RSD file is generated, when it is regenerated (i.e., updated), which RSD file of a distributed database is to be regenerated, etc. The criteria can include, but is not limited to, the amount of data to represented in the RSD file , the amount of data to be mapped (in a mapping operation), the type of data, the importance of the data, and the level of confidence requested for generating the RSD file .","Referring now to , there is illustrated a block diagram of a system where the RSD component  (or  as referenced in ) is located remote to the relational database from at least one relational database . The database  and the RSD component  are disposed in communication on a network , e.g., the Internet. Thus, the RSD component  can be employed to remotely connect to the database  and perform generation of the RSD file that represents the structure and data thereof. The RSD file can then be stored local to the database  for access and use for various purposes, as described hereinabove.","There is provided a second relational database  disposed on the network  such that the second database  can be a standalone database, or distributed in combination with the database . The disclosed RSD schema supports distributed database environments. That is, an associated RSD sub-file can be generated for each distributed portion of the overall database. The user can then retrieve one or more sub-files depending upon the data that he or she wishes to access. It is to be appreciated that the RSD file, whether the file is one that represents the total database, or a sub-file that represents only a portion thereof in a distributed environment, may be generated depending upon the access rights of the user. For example, if the user has low-level access rights, and requests access to the database, the tool can automatically generate an RSD file that only represents that portion of the database that would be accessible to the user had the user been connected to the database under normal conditions. Similarly, if the user has high-level rights (i.e., global or administrative-type access), the tool can automatically access the user profile to determine that the RSD file to be generated will represent all aspects of the database that the user could access under normal conditions.","In the context of a classifier operating in conjunction with the disclosed architecture, the classifier can be employed to automatically learn and anticipate which users should have an RSD file generated for ready access, and how much of the database to use for generating the file. For example, as the database  is repeatedly accessed over time, the classifier can track the access behavior of the particular users. Thus, when the database activities, or other triggering criteria trigger auto-regeneration of the RSD file, the classifier can auto-regenerate an RSD file for each of the anticipated users. If a high-level employee routinely accesses the database for financial information on Friday evening at 9 PM, the classifier can learn this and have the most recent RSD schema representation ready in file format at that time for access by the employee.","In another scenario, if the classifier detects that Monday morning is a very active time for database accessing by employees, the classifier can learn this and prepare more recent RSD file regenerations at the early times of the morning. In this same context, if the classifier is programmed to include a fixed number of people in a process, for example, all managers attending an upcoming meeting at 10 AM, the classifier can anticipate and have prepared for delivery, or even deliver to the each manager via e-mail, an RSD file that reflects the existing state of the database such that all managers are working from the same \u201ccopy\u201d of the database. These are but a few of the variations that can be employed in accordance with the disclosed architecture.","As indicated herein, the disclosed RSD schema also supports segmentation, where multiple physical units (files\/resources) can be segmented and then combined into a single logical unit. Segmentation is designed to satisfy particular extension scenarios and to enable re-use of modular RSD components in multiple applications, as well as improving readability and manageability of the file. In some cases, the capability to segment files may impact the validation of the RSD file, particularly in the case of name references to structures which can be stored in another file segment.","Referring now to , there is illustrated a block diagram of a distributed system  where multiple relational databases that comprise an overall database each have respective RSD files that when retrieved can be combined to provide a more comprehensive view of the overall database. There is provided a first database  and associated first RSD file , a second database  and associated second RSD file  and, a third database  and associated third RSD file . The databases (, , and ), disposed on a wired or wireless network , can be accessed by a client , such that the client  retrieves the one or more of the respective RSD files (, , and ) for processing either online or offline. Here, the client  has retrieved the first RSD file  and the second RSD file  for use in further processing. The client  can process these files ( and ) separately, or combine the files ( and ) into a single RSD file  for overall processing.","If the user has made any changes to the single file , this can be propagated back to the respective relational databases whereby the single file  is segmented back into its constituent files (RSD file  and RSD file ) and transmitted separately back to respective databases ( and ) for merging thereinto. It is further to be appreciated that only the RSD file that incorporates the changes may need to be transmitted back for merger with the existing database.","The client  may also be running separate applications such that each application runs only one of the data files. For example, if the client were running two different applications, a first application could retrieve and process the first RSD file , and the second application could retrieve and run the second RSD file . Thus, the two RSD files ( and ) need not be combined for processing at the client. Of course, in a disconnected environment, the RSD files ( and ) could be stored on the client  for later processing, and then uploaded to the respective databases ( and ) when reconnected to the network .","Note that RSD can store much more than a single database, where database is defined as a \u201ccatalog\u201d in the ANSI SQL standard. The RSD by itself can store one to many catalogs (essentially separate schemas that are accessible via the same application connection) that make up a single database instance. However, when combined with a DataLocationPolicy concept, the RSD can expose a \u201clogical instance\u201d which transcends the boundaries of a single physical server and allows the RSD to represent an entire network of database instances, where logical database structures (tables\/rows) are bound to physical locations (the server\/catalog\/schema\/table) at runtime based on application logic and\/or a policy file.","RSD Language","Where mapping is concerned, the RSD schema is a logical view of the metadata required to perform efficient mappings and provides the following: sufficient metadata about the relational domain to allow the CQR (common query runtime) engines to efficiently generate and\/or execute CRUD (Create, Read, Update, and Delete) operations against the database based on actions performed in the target domain; easily readable; easily editable; capability to segment the RSD file to improve manageability and allow logical extensions to the relational schema; and capability to describe any ANSI relational database. When a query is presented through, e.g., XML, the CQR engine compiles the query into QIL (Query Intermediate Language), optimizes it, and generates SQL statements that can be run against the database.","Since the database name, schema name, and structure names are already separated in the RSD format by XML tags, RSD does not require (or allow) SQL escaping of names in the file format. This means that if names are specified with bracket-escaping, the brackets will be treated as literals in the structure name. In order to prevent potential security holes, RSD users should escape the names of all identifiers in the RSD file. However, this is an implementation detail, in that a generic name validation engine can be built that could accept platform-specific rule sets to describe the name escaping rules of a particular platform. If multiple backends are used, the capability to plug in an escaping\/validation module to the compilation process is provided.","Since RSD is intended to be database independent, the RSD architecture only imposes naming constraints to ensure that name references within the CQR framework are unambiguous. RSD identifier names are escaped in name references (but not in declarations) in the following cases: where a \u201c.\u201d is present anywhere in the identifier; where it starts with a \u201c$\u201d character; and a \u201c \u201d (white space) is present (in relationships only).","With respect to name uniqueness in RSD, structure identifier names (e.g., Tables, Custom Tables, Views, StoredProcedures, and UserDefinedFunctions) belong to the same namespace and must be globally unique within the logical RSD (the union of all the physical segments). The Custom Tables mapping feature is described in greater detail hereinbelow. Note, however, that these are implementation details specific to SQL Server. These name validations could follow different rules in a different database management system.","For validation specific to SQL Server, the following rules apply. Structures (e.g., Tables, Views, UserDefinedFunctions, StoredProcedures, and CustomTables) have a unique 3-part name within the scope of the logical RSD. For stored procedure naming in SQL Server, on file generation, the number for the stored procedure is concatenated to the name of the procedure using the canonical SQL format spName;number. On file generation, if the number is \u201c1\u201d, the generating code can omit the semi-colon and the number. However, if the user later adds an SP by hand using the name;1, this results in a duplicate name exception being thrown while the file is loaded (i.e., spName=spName;number).","Relationships are a superset of the foreign key constraints that are stored in the database and can also represent relationships that are enforced by triggers, the business logic, or any other means. Relationships can be specified across databases within the RSD and have a unique name within the scope of the database that contains them.","Two more validation rules specific to SQL Server are AliasTypes and PrimaryKeys. AliasTypes has a unique 1-part name within the scope of the database in which they are defined, and are not referenced across databases. PrimaryKeys has a unique 1-part name within the scope of the database in which they are defined.","Columns has a unique name within the scope of the Table to which they belong.","Parameters has a unique name within the scope of the Routine (Stored Procedure or UDF) to which they belong.","If any of the syntactic or semantic constraints are violated, the system throws an exception that at a minimum, lists the filename\/url, structure type (Table, Relationship, etc.) and the nature and\/or root cause of the error. In more robust implementations, a listing of the line numbers in the persistent RSD format that contain RSD language constructs that are causing the errors can be provided. Furthermore, a listing of all the syntactic and semantic errors in one exception (or allowing the user to iterate through a list of exceptions) can also be provided to help speed the debugging process.","In some cases, multi-part names are used to reference structures, relationships, and types either within the RSD or from the MSD (Mapping Schema Definition) architecture, in which case escaping may be required if the name does not conform to the RSD naming guidelines.","Within the RSD architecture, file names can be referenced by other structures. The references that are possible are the following. Relationships can reference Tables or CustomTables using 1-, 2-, or 3-part names. For a 1-part name, the table name is resolved using the database that contains the Relationship and the Default Schema. Since relationships are not stored in the context of a schema, they do not have a \u201ccurrent\u201d schema. For a 2-part name, the table name is resolved using the database that contains the Relationship. For a 3-part name, the table name is specified explicitly.","Alias types can be referenced from Columns or Parameters using a 0-part name. Names are resolved using the current (parent) database for the structure that contains the Column or Parameter to resolve the name. AliasTypes cannot be referenced across databases.","CustomTables has command instances that can reference other RSD structures using 1-, 2- or 3-part names. For a 1-part name, the structure name is resolved using the current database and the current schema. For a 2-part name, the structure name is resolved using the current database. For a 3-part name, the structure name is specified explicitly.","With respect to RSD reference validation, name references resolve to valid structures in the logical RSD, although they may be stored in separate physical segments. The one exception is Relationships that does not attempt to validate the remote end of the Relationship, if the structure is not available.","When referencing elements in the RSD domain from a mapping file of the mapping component, default attributes are used on the database and schema to resolve 1-part and 2-part names to fully-qualified names. References from the mapping file to the RSD file take place within the scope of a DataSource.","All references from the MSD to the RSD structures\/relationships need to be valid in the logical RSD that is in scope for a particular logical mapping.","Case-sensitivity of name references depends on the \u201cCaseSensitive\u201d property in the RSD. Name references within the RSD and, from the MSD to the RSD are treated as case-sensitive. The implication is that authors should avoid name mismatches, but it allows the representation of all structures from all case-sensitive as well as case-insensitive database instances.","Using namespaces avoids name clashes (i.e., situations where the same tag name is used in different contexts). For instance, a namespace can identify whether an address is a postal address, an e-mail address, or an IP address. Tag names within a namespace must be unique.","There are some SQL Server specific elements in this namespace, so that SQL is treated as a first class citizen in the mapping framework, but none of the SQL specific elements are required so as not to preclude the RSD from describing other DBMS (Database Management System) platforms, as well by including other namespaces.","In the event that a loading component encounters validation errors it caches the information and continues processing in order to return a comprehensive list to the user of the problems with the file, rather than performing 1-off debugging. XML syntax and schema exceptions halt processing.","RSD Format","The XSD for RSD is the implementation of the following description of the RSD format.","1. Databases","This is the root tag of the RSD file, and represents zero or more of the databases that can be accessed with a single connection. The DatabaseCollection element is referenced by the DataSource in the mapping file by pointing to the file or files that define the Databases element.",{"@attributes":{"id":"p-0079","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["DefaultDatabase","Opt","Must be the name of a Database element"]},{"entry":[{},{},"within the Databases. If no default is"]},{"entry":[{},{},"specified by the user, it will be the"]},{"entry":[{},{},"first database in the Databases. Used"]},{"entry":[{},{},"to enable 2-part naming."]},{"entry":["Product","Opt"]},{"entry":["Version","Opt"]},{"entry":["CaseSensitive","Opt","Can be \u201ctrue\u201d or \u201dfalse\u201d. Default is \u201cfalse\u201d."]},{"entry":"Sub-Elements"},{"entry":["Database","0+","Container for the databases that belong to"]},{"entry":[{},{},"the collection"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Validation","If either @Product or @Version is not set to one of the allowable values, the loading code throws an exception notifying the user of the allowable values.",{"@attributes":{"id":"p-0082","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<rsd:Databases Product=\u2033SQL Server\u2033 Version=\u2033Yukon\u2033"]},{"entry":[{},"CaseSensitive=\u2033false\u2033 DefaultDatabase=\u2033Northwind\u2033>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<rsd:Database Name=\u201dNorthwind\u201d>"]},{"entry":[{},"..."]},{"entry":[{},"<\/rsd:Database>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:Databases>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"2. Database","This element represents a logical database within the context of a single instance.",{"@attributes":{"id":"p-0085","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["Name","Req","Database name"]},{"entry":["DefaultSchema","Opt","Must be the name of a Schema element"]},{"entry":[{},{},"within the database. If no default is"]},{"entry":[{},{},"specified by the user, it will be the"]},{"entry":[{},{},"first Schema in the Database. Used to"]},{"entry":[{},{},"enable 1-part naming"]},{"entry":"Sub-Elements"},{"entry":["AliasTypes","0-1","Container for the AliasTypes in this Database"]},{"entry":["Relationships","0-1","Container for the relationships in the RSD."]},{"entry":[{},{},"All relationships are at the Database level"]},{"entry":[{},{},"in the file in order to provide quick editing"]},{"entry":[{},{},"in the logical extensions case and to provide"]},{"entry":[{},{},"a single location for the user to view all"]},{"entry":[{},{},"relationships"]},{"entry":["Schemas","0-1","Container for the Schema elements in"]},{"entry":[{},{},"the Database"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0086","num":"0085"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:Database Name=\u201cNorthwind\u201d DefaultSchema=\u201cdbo\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<rsd:AliasTypes>"]},{"entry":[{},"..."]},{"entry":[{},"<\/rsd:AliasTypes>"]},{"entry":[{},"<rsd:Schemas>"]},{"entry":[{},"..."]},{"entry":[{},"<\/rsd:Schemas>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:Database>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"3. AliasTypes","This element serves as a container for one or more AliasType elements.","4. AliasType","This represents a user-defined data type in the database. With regard to RSD generation, AliasTypes are bound to named defaults in the database using an sp_binddefault procedure, rather than specifying the default value in the argument list of an sp_addtype procedure. However, the tool that generates RSD files resolves the value of the global default and includes it inline in the AliasType definition.",{"@attributes":{"id":"p-0091","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["Name","Req","The name of the data type user created"]},{"entry":["NullType","Opt","Can be \u2032NULL\u2032 or \u2032NOT NULL\u2032."]},{"entry":[{},{},"Default is \u2018NULL\u2019"]},{"entry":"Sub-Elements"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"AliasTypes use the same representation"},{"entry":"for types that are used for columns."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DbStringType","1","Represents string types in the database"]},{"entry":["DbNumericType","1","Represents numeric types in the database"]},{"entry":["DbDateType","1","Represents date types in the database"]},{"entry":["DbGuidType","1","Represents GUIDs in the database"]},{"entry":["Default","0-1","Contains the default value to be used for"]},{"entry":[{},{},"this AliasType. If a column references an"]},{"entry":[{},{},"AliasType, the Default for the AliasType"]},{"entry":[{},{},"is applied to the column unless the column"]},{"entry":[{},{},"overrides the default value with its own"]},{"entry":[{},{},"Default."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Validation","If the NullType is not one of the allowable values, an exception is thrown which alerts the user of the allowable values. For type validation, see Column.",{"@attributes":{"id":"p-0094","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:AliasType Name=\u201cphonefld\u201d NullType=\u201cNot Null\u201d >"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<DbStringType Name=\u201cvarchar\u201d Length=\u201c15\u201d\/>"]},{"entry":[{},"<Default>(555) 555-5555<\/Default>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:AliasType>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"5. Relationships","This element serves as a container for zero or more Relationship elements.","6. Relationship","Relationships in the RSD file can represent relationships that are implemented via foreign keys, triggers or logical relationships (by value).",{"@attributes":{"id":"p-0099","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["Name","Req","Relationship names must be unique"]},{"entry":[{},{},"within the context of Database. When"]},{"entry":[{},{},"relationships are referred to from the"]},{"entry":[{},{},"RelationshipMap they are qualified"]},{"entry":[{},{},"by the Database\/@Name so"]},{"entry":[{},{},"that they can be uniquely identified"]},{"entry":[{},{},"within an entire RSD."]},{"entry":["From","Req","The name of the parent table for"]},{"entry":[{},{},"this Relationship."]},{"entry":["To","Req","The name of the child table for this"]},{"entry":[{},{},"Relationship."]},{"entry":["CascadeDelete","Opt","Can be \u201cServer\u201d, \u201cExplicit\u201d,"]},{"entry":[{},{},"or \u201cNone\u201d. Default is \u201cNone\u201d."]},{"entry":["CascadeUpdate","Opt","Can be \u201cServer\u201d, \u201cExplicit\u201d,"]},{"entry":[{},{},"or \u201cNone\u201d. Default is \u201cNone\u201d."]},{"entry":[{},{},"Analogous to CascadeDelete."]},{"entry":["Cardinality","Opt","Can be \u201cOneToOne\u201d or \u201cOneToMany\u201d."]},{"entry":[{},{},"\u201cOneToMany\u201d is the default."]},{"entry":["IsLogical","Opt","Can be \u201ctrue\u201d or \u201cfalse\u201d."]},{"entry":[{},{},"Default is \u201ctrue\u201d."]},{"entry":"Sub-Elements"},{"entry":["ColumnJoin","1+","Each ColumnJoin refers to a pair"]},{"entry":[{},{},"of columns. One column on"]},{"entry":[{},{},"the local table and one on the"]},{"entry":[{},{},"child table (related table)."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"CascadeDelete and CascadeUpdate","CascadeDelete and CascadeUpdate introduce a new enumeration for how the central processor (CP) and the Domain adapters (XmlAdapter and ObjectSpace) interpret relationships. \u201cNone\u201d means there is no Cascade and the parent is deleted. If any children are present, this results in a runtime error, if constraints are enforced in the database. An \u201cExplicit\u201d option is selected when the user does not have triggers on the back-end database, and wants the CP to remove all the children by executing a set-based DML statement explicitly before deleting the parent. A \u201cServer\u201d option is identical to \u201cNone\u201d for the CP, but alerts the Domain adapters to update their cache based on the fact that the cascade has taken place on the server, using triggers or a foreign key on the backend.","IsLogical","This annotation is used by the user when creating a relationship that is not enforced via primary keys. \u201cServer\u201d is still valid when IsLogical is TRUE, and the assumption is that the cascade is implemented via triggers. IsLogical is also a signal to the RSD Generator.","RSD Generation Notes","Applications that generate RSD must set IsLogical to FALSE even though the default is true. When foreign keys in the database are surfaced as Relationships, the corresponding Cascade rules must be either Server or None. When the RSD file is generated, only the relationships that are implemented via foreign keys are listed in the file. The user must add in relationships that are specified via triggers or in the business logic. Applications that generate the RSD do not return \u201cdisabled\u201d Foreign Key constraints. RSD generators preserve Relationships marked IsLogical when refreshing from the database.",{"@attributes":{"id":"p-0106","num":"0105"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:Relationships>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:Relationship Name=\u201cNorthwind.FK_Customer_Order\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"From=\u201cNorthwind.dbo.Customers\u201d"]},{"entry":[{},"To=\u201cNorthwind.dbo.Orders\u201d"]},{"entry":[{},"CascadeDelete=\u201cfalse\u201d CascadeUpdate=\u201ctrue\u201d"]},{"entry":[{},"ForeignKey=\u201ctrue\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<ColumnJoin Column=\u201cCustomerID\u201d"]},{"entry":[{},"RelatedColumn=\u201cCustomerID\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:Relationship>"]},{"entry":[{},"<!-- An FK relationship -->"]},{"entry":[{},"<rsd:Relationship Name=\u201cmyProduct_OD\u201d"]},{"entry":[{},"From=\u201cNorthwind.dbo.Products\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"To=\u201cNorthwind.dbo.[Order Details]\u201d"]},{"entry":[{},"CascadeUpdate=\u201ctrue\u201d >"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<ColumnJoin Column=\u201cProductID\u201d"]},{"entry":[{},"RelatedColumn=\u201cProductID\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:Relationship>"]},{"entry":[{},"<!-- A logical relationship -->"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:Relationships>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"7. ColumnJoin","This element is used to refer to a two-column relationship previously defined. These are two columns on two different tables that are matched to represent a foreign key constraint.",{"@attributes":{"id":"p-0109","num":"0108"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Column","Req","The name of column on our table."]},{"entry":["RelatedColumn","Req","The name of column on the parent table."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"8. Schemas","This element serves as a container for zero or more Schema elements.","9. Schema","The Schema element serves as a grouping mechanism for the relational structures stored in the RSD.",{"@attributes":{"id":"p-0114","num":"0113"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Tag","Card","Comment"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Req","Schema name."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"Sub-Elements","The Schema element can also contain any of the following elements that represent relational structures. Each of the elements below is optional.",{"@attributes":{"id":"p-0117","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tables","0-1","Contains definitions of one or more"]},{"entry":[{},{},"Tables in the database."]},{"entry":["CustomTables","0-1","Contains definitions of one or more"]},{"entry":[{},{},"CustomTables"]},{"entry":["Views","0-1","Contains definitions of one or more"]},{"entry":[{},{},"Views in the database."]},{"entry":["StoredProcedures","0-1","Contains definitions of one or more"]},{"entry":[{},{},"Stored Procedures in the database."]},{"entry":["UserDefinedFunctions","0-1","Contains definitions of one or more"]},{"entry":[{},{},"UserDefinedFunctions in the database."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0118","num":"0117"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:Database Name=\u201cNorthwind\u201d DefaultSchema=\u201cdbo\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:Schemas>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:Schema Name=\u201cdbo\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<rsd:Tables>"]},{"entry":[{},"..."]},{"entry":[{},"<\/rsd:Tables>"]},{"entry":[{},"<rsd:CustomTables>"]},{"entry":[{},"..."]},{"entry":[{},"<\/rsd:CustomTables>"]},{"entry":[{},"<rsd:Views>"]},{"entry":[{},"..."]},{"entry":[{},"<\/rsd:Views>"]},{"entry":[{},"<rsd:StoredProcedures>"]},{"entry":[{},"..."]},{"entry":[{},"<\/rsd:StoredProcedures>"]},{"entry":[{},"<rsd:UserDefinedFunctions>"]},{"entry":[{},"..."]},{"entry":[{},"<\/rsd:UserDefinedFunctions>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/rsd:Schema>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/rsd:Schemas>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:Database>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"10. Tables","This element serves as a container for zero or more Table elements.","11. Table","This element represents a table in the underlying database.",{"@attributes":{"id":"p-0123","num":"0122"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Tag","Card","Comment"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Attributes",{},{}]},{"entry":[{},"Name","Req","The name of the table."]},{"entry":[{},"Sub-Elements"]},{"entry":[{},"Columns","1","Container for columns on this table"]},{"entry":[{},"Constraints","0-1","Container for constraints on this table"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"RSD Generation Notes","By default, RSD Generators does not return System Tables. The RSD Generator can provide a switch to allow the user to explicitly request system tables.",{"@attributes":{"id":"p-0126","num":"0125"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd: Table Name=\u201cCustomers\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:Columns>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"..."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:Columns>"]},{"entry":[{},"<rsd:Constraints>"]},{"entry":[{},".."]},{"entry":[{},"<\/rsd:Constraints>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:Table>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"12. CustomTables","CustomTables is a container element for zero or more CustomTable elements. CustomTables is treated just as like any other structure in the database. See the Custom Tables specification hereinbelow.","RSD Generation Notes","Custom Tables are logical by definition and are preserved when the RSD file is re-generated from the database.","13. Views","This element serves as a container for zero or more View elements.","14. View","This element represents a relational view in the database. It is similar to the Table element.",{"@attributes":{"id":"p-0135","num":"0134"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["Name","Req","The name of the view."]},{"entry":"Sub-Elements"},{"entry":["Columns","1","The columns that defined the view are a restricted"]},{"entry":[{},{},"column type that only allow name and type to be"]},{"entry":[{},{},"specified."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0136","num":"0135"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:View Name=\u201cmyCustomerView\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:Columns>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"..."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/rsd:Columns >"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:View>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Adding Primary Key Information to a View","The view, by definition, does not have a primary key. However, in order to update a view (user must implement INSTEAD OF triggers server side) or query the view in a relationship, a primary key is required. The user creates a CustomTable that is based on the view, optionally sets AutoCommands to TRUE if the engines are chosen to generate commands automatically, and specifies the key columns in the CustomKey element on the CustomTable.","15. StoredProcedures","This element serves as a container for zero or more StoredProcedure elements.","16. StoredProcedure","This element represents a Stored Procedure in the database.",{"@attributes":{"id":"p-0143","num":"0142"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["Name","Req","The name of the Stored Procedure. See the"]},{"entry":[{},{},"naming rules hereinabove for details."]},{"entry":"Sub-Elements"},{"entry":["Parameters","0-1","Container for parameters of this stored procedure."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0144","num":"0143"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:StoredProcedure Name=\u201csp_Insert_Order\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<rsd:Parameters>"]},{"entry":[{},"..."]},{"entry":[{},"<\/rsd:Parameters>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:StoredProcedure>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"17. UserDefinedFunctions","This element serves as a container for one or more UserDefinedFunction elements.","18. UserDefinedFunction","This element represents a User Defined Function (UDF) defined in the database.",{"@attributes":{"id":"p-0149","num":"0148"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["Name","Req","The UDF name."]},{"entry":"Sub-Elements"},{"entry":["Columns","1","This is a restricted Column type that only"]},{"entry":[{},{},"allows the name and the type of the column to"]},{"entry":[{},{},"be specified. It does not allow additional"]},{"entry":[{},{},"annotations such as AutoIncrement, Default,"]},{"entry":[{},{},"etc. The columns describe the result set that is"]},{"entry":[{},{},"returned from the UDF."]},{"entry":["Parameters","0-1","Container for parameters of this stored UDF."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0150","num":"0149"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:UserDefinedFunction Name=\u201cudf_get_Customers\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<rsd:Columns>"]},{"entry":[{},"..."]},{"entry":[{},"<\/rsd:Columns>"]},{"entry":[{},"<rsd:Parameters>"]},{"entry":[{},"..."]},{"entry":[{},"<\/rsd:Parameters>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:UserDefinedFunction>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"19. Columns","This element serves as a container for one or more Column elements.","20. Column","This element represents a Column in a table. A slightly more restrictive version of the xsd:type defined below that allows only @Name and type information can be used to describe the columns of a view, custom table, and result set from a UDF.",{"@attributes":{"id":"p-0155","num":"0154"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Name","Req","Column name"]},{"entry":["AutoIncrement","Opt","Can be \u201ctrue\u201d or \u201cfalse\u201d. \u201cfalse\u201d is the default."]},{"entry":["AllowDbNull","Opt","Can be \u201ctrue\u201d or \u201cfalse\u201d. \u201cfalse\u201d is the default."]},{"entry":["ReadOnly","Opt","Can be \u201ctrue\u201d or \u201cfalse\u201d. \u201cfalse\u201d is the default."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Sub-Elements","Types are now represented as sub-elements rather than attributes. This allows more flexibility in customizing the types that can be expressed using the RSD and does not require continued adding of more and more attributes at the column level that are only used in particular contexts.",{"@attributes":{"id":"p-0158","num":"0157"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DbStringType","1","Represents string types in the database"]},{"entry":["DbNumericType","1","Represents numeric types in the database"]},{"entry":["DbDateType","1","Represents date types in the database"]},{"entry":["DbGuidType","1","Represents GUIDs in the database"]},{"entry":["DbXmlType","1","Represents the XML datatype in the database"]},{"entry":["DbUDTType","1","Represents the UDT type in the database"]},{"entry":["DbAliasType","1","Represents AliasTypes in the database"]},{"entry":["Default","0-1","Contains the default value to be used for this"]},{"entry":[{},{},"column. Default will be used by CP to insert"]},{"entry":[{},{},"the Default value on an Insert operation."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Validation","AutoIncrement can only be set to TRUE if the type is one of the integer types (see below) or one of the exact decimal types and the scale is set to zero. AutoIncrement and AllowDbNull cannot both be TRUE. AutoIncrement and Computed cannot both be TRUE.","If any of the constraints above are violated, the user will receive an error message giving the three-part name of the structure, as well as the type (table, view, custom table, etc.) and the offending column name. A description of which constraint was violated is also included.",{"@attributes":{"id":"p-0162","num":"0161"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<rsd:Table Name=\u201cCustomer\u201d>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:Columns>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:Column Name=\u201cCustomerID\u201d AutoIncrement=\u201ctrue\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:DbNumericType Name=\u201cInt\u201d\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:Column>"]},{"entry":[{},"<rsd:Column Name=\u201cCompanyName\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:StringType Name=\u201cVarchar\u201d Length=\u201c40\u201d\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/rsd:Column>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/rsd:Columns>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/rsd:Table>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"21. Parameters","This element serves as a container for zero or more Parameter elements.","22. Parameter","This element is used to represent a parameter to a Stored Procedure or UDF. Cursor output parameters are not supported.",{"@attributes":{"id":"p-0167","num":"0166"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Name","Req","Parameter name."]},{"entry":["Direction","Opt","Can be \u201cIn\u201d, \u201cInOut\u201d, or \u201cOut\u201d. \u201cIn\u201d is the default."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Sub-Elements","Parameters use the same representation for types that are used for columns (See above).",{"@attributes":{"id":"p-0170","num":"0169"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DbStringType","1","Represents string types in the database"]},{"entry":["DbNumericType","1","Represents numeric types in the database"]},{"entry":["DbDateType","1","Represents date types in the database"]},{"entry":["DbGuidType","1","Represents GUIDs in the database"]},{"entry":["DbXmlType","1","Represents the XML datatype in the database"]},{"entry":["DbUDTType","1","Represents the UDT type in the database"]},{"entry":["DbAliasType","1","Represents AliasTypes in the database"]},{"entry":["Default","0-1","Contains the default value to be used for this"]},{"entry":[{},{},"parameter. This is the value that will be"]},{"entry":[{},{},"passed to the parameter when the containing"]},{"entry":[{},{},"procedure is executed with the default"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"RSD Generation Notes","RSD Generators should not return Procedures with VARYING parameters, since cursor output parameters are not supported.",{"@attributes":{"id":"p-0173","num":"0172"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<rsd:StoredProcedure Name=\u2033sp_UpdateCustomer\u2033>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:Parameters>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:Parameter Name=\u2033PrevCustomerID\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:DbNumericType Name=\u2033Int\u2033 \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:Parameter>"]},{"entry":[{},"<rsd:Parameter Name=\u2033CustomerID\u2033>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:DbNumericType Name=\u2033Int\u2033 \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/rsd:Parameter>"]},{"entry":[{},"<rsd:Parameter Name=\u2033CompanyName\u2033>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rsd:DbNumericType Name=\u2033varchar\u2033 Length=\u203340\u2033 \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/rsd:Parameter>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/rsd:Parameters>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/rsd:StoredProcedure>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"23. DbStringType",{"@attributes":{"id":"p-0175","num":"0174"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Name","Req","Type name (see above)"]},{"entry":["Length","Req","Can be an integer or \u201cmax\u201d (case-insensitive)."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Validation","For SQL Server, the types represented by DbStringType are: char, nchar, varchar, nvarchar, text, ntext, binary, image and varbinary. The types text, ntext, and image do not support the length attribute\u2014the other types require it. \u201cmax\u201d can only be specified when the product=\u201cSQL Server\u201d and the version=\u201cYukon\u201d. Unicode columns (except ntext) cannot have a length value greater than 4000. Non-unicode columns (except text) cannot have a length value greater than 8000.","If any of the above constraints are violated, the user receives an error message that specifies the 3-part name of the structure, as well as the type and the offending column name. In addition, a description of the constraint is presented.","24. DbNumericType","For SQL Server, the types represented by DbIntegerType are: bit, tinyint, smallint, int, bigint, smallmoney, money, smallmoney, numeric, decimal, float, and real.",{"@attributes":{"id":"p-0181","num":"0180"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Name","Req","Type name"]},{"entry":["Precision","Opt","The total number of digits in a numeric type."]},{"entry":[{},{},"Default is 0."]},{"entry":["Scale","Opt","The number of digits to the right of the decimal."]},{"entry":[{},{},"Default is 0."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Validation","Precision is only defined for the decimal types: numeric, decimal, float, real. Scale is only defined for the exact decimal types: numeric, decimal.","If any of the above constraints are violated, the user receives an error message that specifies the 3-part name of the structure, as well as the type and the offending column name. In addition, a description of the constraint is presented.","25. DbDateType","For SQL Server, the types represented by DbNumericType are: Date, Time, UtcDateTime, SmallDateTime, and DateTime. Date, Time and UtcDateTime are new types in Yukon and are specified more thoroughly in the Yukon Primitive Types specification.",{"@attributes":{"id":"p-0187","num":"0186"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Name","Req","Type name (see above)"]},{"entry":["ParseFormat","Opt","This is for string types that are mapped to"]},{"entry":[{},{},"the new Date types. If they are stored"]},{"entry":[{},{},"in the target in non-canonical format the"]},{"entry":[{},{},"user can specify a parse format to allow"]},{"entry":[{},{},"the CQR to instantiate a SQL Date type from"]},{"entry":[{},{},"the string. Default is the canonical format"]},{"entry":[{},{},"for date serialization."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Additional Validation","The ParseFormat is one of the values recognized by the System.Globalization.DateTimeFormatInfo type, that controls formatting for the System.DateTime type in the BCL.","If any of the above constraints are violated, the user receives an error message that specifies the 3-part name of the structure, as well as the type and the offending column name. In addition, a description of the constraint is presented.","26. DbGuidType",{"@attributes":{"id":"p-0192","num":"0191"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Tag","Card","Comment"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Req","Type name"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"Validation","For SQL Server, the types represented by DbGuidType are uniqueidentifier and timestamp\/rowversion.","If any of the above constraints are violated, the user receives an error message that specifies the 3-part name of the structure, as well as the type and the offending column name. In addition, a description of the constraint is presented.","27. DbXmlType","For SQL Server the types represented by DbXmlType are xml.",{"@attributes":{"id":"p-0198","num":"0197"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Tag","Card","Comment"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Req","Type name"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"28. DbUDTType","For SQL Server, the types represented by DbXmlType are User-defined UDTs (Date, Time, and UtcDateTime are represented by the DbDateType above).",{"@attributes":{"id":"p-0201","num":"0200"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Tag","Card","Comment"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Req","Type name"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"29. DbAliasType","For SQL Server, the types represented by DbAliasType are user-defined UDDTs (SQL2000 UDTs) such as phonefield.",{"@attributes":{"id":"p-0204","num":"0203"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["AliasName","Req","The name of the user-defined alias type."]},{"entry":[{},{},"Must be defined in the RSD in the scope"]},{"entry":[{},{},"of the same database as the column."]},{"entry":[{},{},"Only a one-part name is required."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Validation","If the AliasType is not in the scope of the file, the validation is specified by the segmentation specification.","Default","This element contains the text that represents a value to be used as default for Columns, Parameters, UDTs, etc. It can contain a scalar value or an expression using built-in or user defined scalar valued functions.","<Default>Seattle<\/Default>","30. Constraints","This element serves as a container for the primary key, and the alternate keys, as well as that which can be represented by UniqueConstraints in the database or constraints on a particular table.",{"@attributes":{"id":"p-0211","num":"0210"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Sub-Elements"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["PrimaryKey","0-1","A table may have a primary key. At most"]},{"entry":[{},{},"one is allowed. Primary key can be defined"]},{"entry":[{},{},"on a set of columns. The PrimaryKey"]},{"entry":[{},{},"element will refer to these columns."]},{"entry":["AlternateIdstructure","0-1","This is a logical (user-supplied) element"]},{"entry":[{},{},"which defines a set of columns which"]},{"entry":[{},{},"uniquely identify a row in the table"]},{"entry":[{},{},"without using that table's primary key"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"31. PrimaryKey","This element represents a Primary Key for a table. It is always defined in the context of a Table. It references the column(s) that define a primary key for this table.",{"@attributes":{"id":"p-0214","num":"0213"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["Name","Req","Constraint name."]},{"entry":"Sub-Elements"},{"entry":["ColumnRef","1+","Each ColumnRef refers to a column that"]},{"entry":[{},{},"is a part of this primary key."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"32. AlternateIdentity,","AlternateIdentity is used by the BulkLoad upsert feature. The columns defined by the AlternateIdentity constraint can be used to uniquely identify a row in a table without making use of the PrimaryKey.",{"@attributes":{"id":"p-0217","num":"0216"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Sub-Elements"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["ColumnRef","1+","Each ColumnRef identifies a single column"]},{"entry":[{},{},"on the current table that is part of the"]},{"entry":[{},{},"AlternateIdstructure for that table"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"RSD Generation Notes","AlternateIdentity is logical by default and must be preserved by RSD Generators when they refresh from the database.","33. ColumnRef","This element is used to refer to a column previously defined, and is used to refer to columns from constraints, etc.",{"@attributes":{"id":"p-0222","num":"0221"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Name","Req","The name of a column that belongs to the parent"]},{"entry":[{},{},"Table that contains the PrimaryKey element."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The Custom Tables feature is a mechanism whereby the user can support database operations as a means to make up a logical table. The user can perform transformations on the physical data when reading or writing from the database. Custom Tables enables the capability to map fields from the target domain to Commands (stored procedures, user-defined functions or inline SQL statements) on the relational DataSource. This keeps mapping itself simple and unaffected by relational-specific things. Custom Tables provides an abstraction to mapping that allows commands in the database to be mapped to just as if they were physical tables, in most cases. Specifying this abstraction at the RSD level allows the user to deal with relational-specific concepts using relational terminology, rather than attempting to use domain-independent terminology at the mapping level.","For example, columns already exist in the relational domain. Custom Tables provides a CustomTable element where columns can be added just as in normal RSD Tables. This also helps keep mapping from becoming cluttered, and optimizes the solution by not introducing more places where the user must go to wire up the pieces.","Scenarios for Custom Tables include the following.","Adding a Condition to a Table\/View. In this scenario, the user wants to add a filter to the base table. The canonical example is for the single table object-inheritance scenario where Person, Employee, Manager, etc., are all mapped to the same table and the user wants to filter the table based on the \u2018type\u2019 column. The user can specify a condition so that each type is mapped to its own table.","Add\/Override Primary Key. Views by default do not have primary keys, but in order to use them effectively within the framework, a primary key field(s) must be defined on all structures. In order to achieve this, the user can create a simple Custom Table to specify the key field(s) on a view. The user can employ this same functionality to override the primary key on the underlying table or apply a virtual key to a procedure.","SingleComplexMapping. The user uses normal table mapping, but is faced with a limitation in mapping. To get around this, the user creates a one-off custom table. This scenario is distinct as the user only uses custom tables in limited areas and they should be able to use these in combination with normal physical table mapping.","Examples of this type of scenario include additional read-only columns on a UDF for Query, and additional write-only columns on an Update or Insert (userid, time updated, client-side calculated values, etc.).","ReadOnlyTables. The user has access to tables for read-only, but must use stored procedures for CUD. In this scenario, the user wants to base the Custom Table on an existing physical table, but override the Insert, Update and Delete operations to use stored procedures.","All Stored Procedures. The user cannot access tables at all and must use stored procedures and\/or UDFs for all database access. In this scenario, there is no physical table on which to base the custom table.","Existing stored procedures. The scenarios above need to account for the situation where the user does not have the ability to create custom User-Defined Functions or StoredProcedures in the database to be used by the CQR engines and are forced to use existing stored procedures. For existing stored procedures, these may not be normally used as a unified CRUD set and shaping\/naming may be different between each stored procedure. In general, existing stored procedures cannot be altered because other legacy applications will be using them. This may result in the user needing to write SQL to manipulate the results. The user may also want to use SQL to massage data when mapping significantly de-normalized tables.","Custom SQL. In this scenario, the user does not have a procedure on the server to implement CRUD operations, but desires to perform some type of advanced behavior, so the user is allowed to craft arbitrary SQL with some restrictions. Examples of this scenario include: custom shaping; calling scalar UDFs\/UDT methods; and Inserting\/Updating\/Deleting data in multiple tables or tables other than the table that serves as the BasedOn for the CustomTable.","Custom Table Format","1. CustomTables Element For consistency with other RSD structures, the CustomTables element represents a container element for zero or more CustomTable types. CustomTables is a child of the Schema element. The implication of this is that custom tables are referenced in the Mapping file exactly like physical tables.","2. CustomTable Element","The CustomTable element is exposed to mapping as if it is a table, but under the covers it allows customization so that Insert, Delete, Update and Query commands can be overridden to come from various DB structures such as stored procedures, UDFs, or inline SQL statements as outlined below.","CustomTables fall into two main categories: BasedOn and Procedure Abstraction. BasedOn CustomTables are based on a physical table or view and generate one or more of their Commands automatically according to the definition of the BasedOn structure. Automatically-generated commands behave as if they were executed directly against the BasedOn structure. BasedOn CustomTables can still override individual commands. Procedural Abstraction CustomTables do not have any automatically generated commands and must have their Columns defined explicitly. The Columns serve as an abstraction for binding FieldMaps to parameters and\/or Result columns.",{"@attributes":{"id":"p-0238","num":"0237"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["Name","Req","String representing the name of the"]},{"entry":[{},{},"CustomTable. Must conform to the"]},{"entry":[{},{},"structure naming and uniqueness rules"]},{"entry":[{},{},"(i.e., cannot share a 3-part name with"]},{"entry":[{},{},"any other structure in the RSD file)."]},{"entry":[{},{},"This name is referenced in a case"]},{"entry":[{},{},"sensitive manner to be consistent with"]},{"entry":[{},{},"other relational structures."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Sub-Elements"},{"entry":"The sub-elements are constrained"},{"entry":"by the following content model:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["BasedOn","0-1","BasedOn references an existing Table"]},{"entry":[{},{},"or View. The BasedOn serves as the"]},{"entry":[{},{},"basis for the CustomTable's columns,"]},{"entry":[{},{},"relationships, and is used to"]},{"entry":[{},{},"auto-generate commands where"]},{"entry":[{},{},"appropriate. The relational structure"]},{"entry":[{},{},"that the CustomTable is BasedOn is"]},{"entry":[{},{},"resolved using one, two, or three"]},{"entry":[{},{},"part names."]},{"entry":["Columns","0-1","Container elements for explicitly"]},{"entry":[{},{},"defined Columns in the Custom Table."]},{"entry":[{},{},"By definition these columns are"]},{"entry":[{},{},"simply abstractions for procedure"]},{"entry":[{},{},"parameters or result columns so"]},{"entry":[{},{},"they only allow a name and a type"]},{"entry":[{},{},"to be specified."]},{"entry":["Condition","0+","This is meant to be a filter over"]},{"entry":[{},{},"the set that is exposed by the"]},{"entry":[{},{},"CustomTable. Condition can be used"]},{"entry":[{},{},"independently of the QueryCommand or"]},{"entry":[{},{},"in conjunction with the QueryCommand."]},{"entry":[{},{},"If the predicate specified in"]},{"entry":[{},{},"the Condition can be composed with"]},{"entry":[{},{},"the QueryCommand, the CustomTable can"]},{"entry":[{},{},"be generated on the server, however in"]},{"entry":[{},{},"particular cases (Inline Commands,"]},{"entry":[{},{},"Stored Procedures) the predicate may"]},{"entry":[{},{},"be applied on the client."]},{"entry":["QueryCommand","0-N","Command instance for querying the"]},{"entry":[{},{},"source. Multiple QueryCommand scenario"]},{"entry":[{},{},"is multiple StoredProcedures or UDFs"]},{"entry":[{},{},"taking different parameter types but"]},{"entry":[{},{},"returning the same result set (e.g.,"]},{"entry":[{},{},"sp_GetCustById, sp_GetCustByName,"]},{"entry":[{},{},"etc.)."]},{"entry":["InsertCommand","0-1","Command instance for inserting data"]},{"entry":[{},{},"into the source."]},{"entry":["UpdateCommand","0-1","Command instance for updating data"]},{"entry":[{},{},"of the source."]},{"entry":["DeleteCommand","0-1","Command instance for deleting data"]},{"entry":[{},{},"from the source."]},{"entry":["CustomKey","0-1","This is the key that is used to"]},{"entry":[{},{},"uniquely identify relational instances."]},{"entry":[{},{},"This is a logical key, and overrides"]},{"entry":[{},{},"any CustomKey defined by the structure"]},{"entry":[{},{},"that the Custom Table is BasedOn. If"]},{"entry":[{},{},"a CustomKey is not defined and"]},{"entry":[{},{},"the Custom Table is BasedOn a table"]},{"entry":[{},{},"with a PrimaryKey the CustomKey will"]},{"entry":[{},{},"automatically inherit the PrimaryKey."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"3. BasedOn Structure",{"@attributes":{"id":"p-0240","num":"0239"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Name","Req","String representing the name of the"]},{"entry":[{},{},"relational structure that the"]},{"entry":[{},{},"CustomTable is BasedOn. BasedOn can"]},{"entry":[{},{},"only reference a Table or View"]},{"entry":[{},{},"using a 1, 2, or 3-part name. Since"]},{"entry":[{},{},"Tables and Views share a common"]},{"entry":[{},{},"namespace within a schema it is not"]},{"entry":[{},{},"necessary to have an additional type"]},{"entry":[{},{},"attribute."]},{"entry":["AutoCommands","Opt","When set to true, allows the mapping"]},{"entry":[{},{},"framework to autogenerate SQL for"]},{"entry":[{},{},"Command instances that are absent. In"]},{"entry":[{},{},"the case of Views, it is assumed that"]},{"entry":[{},{},"the user has implemented the view with"]},{"entry":[{},{},"triggers if necessary appropriately on"]},{"entry":[{},{},"the server. When set to false, absent"]},{"entry":[{},{},"commands are treated as \u201cdisabled\u201d."]},{"entry":[{},{},"Default is \u201cfalse.\u201d"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Sub-Elements","There are no sub-elements for this type.","BasedOn Semantics","The BasedOn structure provides a shortcut so that the CustomTable can inherit its Column definitions from an existing structure rather than listing them explicitly. The BasedOn structure is used to automatically generate any Command instances that are not explicitly overridden by the user. A CustomTable that is BasedOn inherits the Relationships that are defined in the structure on which it is based. These Relationships can be referred to by name in a RelationshipMap as if the CustomTable were the base relational structure.","BasedOn also gives the user control over the semantics of missing Command instances. When AutoCommands is \u201cfalse\u201d specific Command instances that are not explicitly overridden are \u201cdisabled\u201d.","4. Columns","There are two types of Columns: Columns that are inherited via BasedOn and Columns that are explicitly declared. BasedOn Columns are identical to the columns that are specified for a physical table or view, however the user will never actually see the syntax for these columns in the context of the Custom Table. The relevant point is that when AutoCommands is equal to true, the SQL that is generated is identical to the SQL that would be generated against the Base Table so the semantics of the additional annotations (such as default values, AutoIncrement, ReadOnly, and AllowDBNull must be preserved).","Explicit Columns are explicitly declared columns in the CustomTable, and are abstractions for a Command procedure parameters and\/or result columns. Because these are not physical columns on a table, they do not allow additional annotations such as AutoIncrement, Read-Only, etc. They only allow a name and type. In cases where parameters to a routine are declared explicitly (Stored Procedures, UDFs) the type of the column is convertible to the type of the parameter. In the Inline case (no declarative parameters) the type of the column is assumed to be the type of the parameter.","If a BasedOn is also specified these Columns are appended to the BasedOn columns as \u201cExtended Columns\u201d. Extended columns can simplify scenarios that fall into the \u201cSingle Complex Mapping\u201d scenario where one (or more) commands may have more columns than the BasedOn structure. Any auto-generated commands use only the BasedOn columns, while Referenced or Inline commands use BasedOn columns plus the ExtendedColumns. It is up to the Command author to perform the appropriate bindings (if default binding is not sufficient).","5. Condition Element","The Condition element is a shorthand notation for a simple Inline QueryCommand with the additional property that the value used in the predicate is expressed declaratively in the syntax and can be exposed to the Target domain via the mapping interface. The scenario in particular that requires this functionality (aside from being a nice shorthand for the user) is an inheritance scenario where multiple types in an inheritance hierarchy map to the same physical table, and on read they want to map to a particular view of that table.",{"@attributes":{"id":"p-0252","num":"0251"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Column","Req","This must be a column in the scope of the"]},{"entry":[{},{},"CustomTable on which this condition is applied"]},{"entry":["Value","Req","The literal value to add to the predicate"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Additional operators can be supported by adding an \u201cOperator\u201d attribute to the Condition with the \u201c=\u201d operator as the default for backwards compatibility. In addition, if multiple Conditions are specified they are combined using the AND operator.","6. Commands (Query, Insert, Update, Delete)","Commands are where the user can customize which relational structure or inline SQL is used to perform each of the CRUD operations. The structure of Commands assumes that the most common CustomTable scenarios will override CUD Command instance by referencing database procedures and\/or functions (rather than inline SQL), \u201cinlining\u201d is a specialized behavior. InlineCommands are an optional child element of the other Command types to reduce confusion in the common case by separating metadata that only applies to the Inline scenario.","Query, Insert, and Update Commands can return Result Sets and Output Parameters. In order for OutputParameters to be surfaced in the target domain they must be bound to a custom table column that participates in a FieldMap. In the QueryCase, the value of the output parameter is copied to every row in the result set. Since Insert and Update only return at most one row in the Result Set the value of the output parameter is treated just like a column value.","Because Output Parameters are treated as though they are part of the row(s) being returned from the Command, a result column cannot bind to the same Custom Table Column as an Out or In\/Out Parameter.","7. QueryCommand",{"@attributes":{"id":"p-0259","num":"0258"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["DisableDefaultBinding","Opt","Can be \u201ctrue\u201d or \u201cfalse\u201d."]},{"entry":[{},{},"Default is \u201cfalse\u201d. Users"]},{"entry":[{},{},"may want to disable default"]},{"entry":[{},{},"binding when they are using"]},{"entry":[{},{},"InlineCommands when the parameter or"]},{"entry":[{},{},"result sets are of a different"]},{"entry":[{},{},"width than the custom"]},{"entry":[{},{},"table or to make the file"]},{"entry":[{},{},"more explicit."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Sub-Elements"},{"entry":"The sub-elements are constrained by the following content model:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CommandReference","1","String that represents the UDF"]},{"entry":[{},{},"referenced by this particular Command."]},{"entry":["InlineCommand","1","Contains all the metadata"]},{"entry":[{},{},"required for defining"]},{"entry":[{},{},"custom SQL inline in the RSD file"]},{"entry":["ParameterBinding","0-N","Represents the binding of a"]},{"entry":[{},{},"parameter to the parameter on the"]},{"entry":[{},{},"DB structure or inline SQL."]},{"entry":[{},{},"Supports Default Binding"]},{"entry":["ColumnBinding","1-N","Represent the binding of a"]},{"entry":[{},{},"CustomTable Column to the column"]},{"entry":[{},{},"returned from a DB structure or"]},{"entry":[{},{},"inline SQL command. Supports"]},{"entry":[{},{},"Default Binding."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"UDFs are supported, however they are treated as though they return the full set of children for all parents. It is simpler to allow UDFs with single-valued parameters but to allow a UDF that picks up a parameter from its parent (e.g., udf_getOrders(@cid)) is similar to full SP support for query.","8. Insert Command",{"@attributes":{"id":"p-0262","num":"0261"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["ValidateHasResults","Opt","Boolean that defaults to"]},{"entry":[{},{},"\u201cfalse\u201d. If \u201ctrue\u201d indicates"]},{"entry":[{},{},"that Insert and Update commands"]},{"entry":[{},{},"should error at runtime if"]},{"entry":[{},{},"anything other than exactly"]},{"entry":[{},{},"one row is returned in the result"]},{"entry":[{},{},"set of the command. If this is"]},{"entry":[{},{},"\u201cfalse\u201d, then if the"]},{"entry":[{},{},"result set is present there"]},{"entry":[{},{},"can be zero or one rows in the"]},{"entry":[{},{},"result set."]},{"entry":["DisableDefaultBinding","Opt","Can be \u201ctrue\u201d or \u201cfalse\u201d."]},{"entry":[{},{},"Default is \u201cfalse\u201d."]},{"entry":[{},{},"Users may want to disable default"]},{"entry":[{},{},"binding when they are using"]},{"entry":[{},{},"InlineCommands when the"]},{"entry":[{},{},"parameter or result sets are"]},{"entry":[{},{},"of a different width than the"]},{"entry":[{},{},"custom table or to make the"]},{"entry":[{},{},"file more explicit."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Sub-Elements"},{"entry":"The sub-elements are constrained by the following content model:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CommandReference","1","String that represents the"]},{"entry":[{},{},"SP referenced by this"]},{"entry":[{},{},"particular Command."]},{"entry":["InlineCommand","1","Contains all the metadata"]},{"entry":[{},{},"required for defining custom"]},{"entry":[{},{},"SQL inline in the RSD file"]},{"entry":["ParameterBinding","0-N","Represents the binding of"]},{"entry":[{},{},"a parameter to the parameter"]},{"entry":[{},{},"on the DB structure or inline"]},{"entry":[{},{},"SQL. Supports Default Binding"]},{"entry":["ColumnBinding","0-N","Represents the binding of a"]},{"entry":[{},{},"CustomTable Column to the"]},{"entry":[{},{},"column returned from a DB"]},{"entry":[{},{},"structure or inline SQL."]},{"entry":[{},{},"Supports Default Binding"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"9. UpdateCommand","UpdateCommand is specialized in that it allows for an UpdateableParameter binding, which further allows the user to determine whether they want the current or original version of the a custom table column value to be bound to a particular parameter (different versions of the same column can be bound to two separate input parameters).",{"@attributes":{"id":"p-0265","num":"0264"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["ValidateHasResults","Opt","Boolean that defaults to \u201cfalse\u201d."]},{"entry":[{},{},"If \u201ctrue\u201d indicates that"]},{"entry":[{},{},"Insert and Update commands should"]},{"entry":[{},{},"error at runtime if anything other"]},{"entry":[{},{},"than exactly one row is returned in"]},{"entry":[{},{},"the result set of the command. If this"]},{"entry":[{},{},"is \u201cfalse\u201d, then a result set"]},{"entry":[{},{},"is allowed but if it is present"]},{"entry":[{},{},"there can be zero or one rows in the"]},{"entry":[{},{},"result set."]},{"entry":["DisableDefaultBinding","Opt","Can be \u201ctrue\u201d or \u201cfalse\u201d."]},{"entry":[{},{},"Default is \u201cfalse\u201d. Users may"]},{"entry":[{},{},"want to disable default binding when"]},{"entry":[{},{},"they are using InlineCommands"]},{"entry":[{},{},"when the parameter or result sets"]},{"entry":[{},{},"are of a different width than the"]},{"entry":[{},{},"custom table or to make the file"]},{"entry":[{},{},"more explicit."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Sub-Elements"},{"entry":"The sub-elements are constrained by the following content model:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CommandReference","1","String that represents the SP"]},{"entry":[{},{},"referenced by this particular"]},{"entry":[{},{},"Command."]},{"entry":["InlineCommand","1","Contains all the metadata"]},{"entry":[{},{},"required for defining custom"]},{"entry":[{},{},"SQL inline in the RSD file"]},{"entry":["ParameterBinding","0-N","Represents the binding of a"]},{"entry":[{},{},"parameter to the parameter on"]},{"entry":[{},{},"the DB structure or inline SQL."]},{"entry":[{},{},"Supports Default Binding"]},{"entry":["ColumnBinding","0-N","Represents the binding of a"]},{"entry":[{},{},"CustomTable Column to the"]},{"entry":[{},{},"column returned from a DB"]},{"entry":[{},{},"structure or inline SQL."]},{"entry":[{},{},"Supports Default Binding"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"10. DeleteCommand","DeleteCommand does not return a Result set or output parameters, since there is nothing in the target domain to which to bind these values.",{"@attributes":{"id":"p-0268","num":"0267"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["DisableDefaultBinding","Opt","Can be \u201ctrue\u201d or \u201cfalse\u201d."]},{"entry":[{},{},"Default is \u201cfalse\u201d. Users"]},{"entry":[{},{},"may want to disable default"]},{"entry":[{},{},"binding when they are"]},{"entry":[{},{},"using InlineCommands"]},{"entry":[{},{},"when the parameter or"]},{"entry":[{},{},"result sets are of a different"]},{"entry":[{},{},"width than the custom"]},{"entry":[{},{},"table or to make the"]},{"entry":[{},{},"file more explicit."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Sub-Elements"},{"entry":"The sub-elements are constrained by the following content model:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CommandReference","1","String that represents the"]},{"entry":[{},{},"SP referenced by this"]},{"entry":[{},{},"particular Command."]},{"entry":["InlineCommand","1","Contains all the metadata"]},{"entry":[{},{},"required for defining custom"]},{"entry":[{},{},"SQL inline in the RSD file"]},{"entry":["ParameterBinding","0-N","Represents the binding of"]},{"entry":[{},{},"a parameter to the parameter"]},{"entry":[{},{},"on the DB structure or inline"]},{"entry":[{},{},"SQL. Supports Default"]},{"entry":[{},{},"Binding"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"11. CustomKey Element","The CustomKey element defines a logical key over the columns on the CustomTable. The CustomKey is exactly the XSD type of the PrimaryKey from the RSD specification.","12. InlineCommand Element","The InlineCommand element allows the user to specify the SQL implementation for all four CRUD operations inline in the Body sub-element. The order of these elements is insignificant and should be ordered as they appear below.",{"@attributes":{"id":"p-0273","num":"0272"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attributes",{},{}]},{"entry":["Type","Opt","InlineCommands allow both Sql Statements"]},{"entry":[{},{},"and Sql Batch. Since we do not parse the"]},{"entry":[{},{},"SQL we rely on the user to notify the"]},{"entry":[{},{},"engines which type the statement is. If the"]},{"entry":[{},{},"user incorrectly identifies the type of the"]},{"entry":[{},{},"statement it results in a runtime error."]},{"entry":[{},{},"This attribute can be \u201cSqlStmt\u201d"]},{"entry":[{},{},"or \u201cSqlBatch\u201d. The default is \u201cSqlStmt\u201d."]},{"entry":"Sub-Elements"},{"entry":["Body","0-1","The SQL for the command. This is not"]},{"entry":[{},{},"parsed and will be passed through to"]},{"entry":[{},{},"the server as is."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"13. ParameterBinding","ParameterBinding represents the binding of a CustomTable column to a parameter on an StoredProcedure, UDF, or inline SQL. ParameterBindings are used for Query, Insert and Delete Commands",{"@attributes":{"id":"p-0276","num":"0275"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Tag","Card","Comment"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"@Parameter","Req","Required string that represents"]},{"entry":[{},{},{},"the name of the parameter on"]},{"entry":[{},{},{},"the routine that is bound to"]},{"entry":[{},{},{},"the Custom Table column."]},{"entry":[{},"@Column","Req","Required string that represents"]},{"entry":[{},{},{},"the column on the CustomTable that is"]},{"entry":[{},{},{},"bound to the @Parameter parameter."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"Sub-Elements","There are no sub-elements.","14. UpdateableParameterBinding","Update Commands have parameters that can take an additional attribute called Version. Otherwise, the ParameterBinding and UpdateableParameterBinding are the same. Version is only applicable in the input direction, on output the value is bound to the column (as \u201coriginal\u201d).",{"@attributes":{"id":"p-0281","num":"0280"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["@Parameter","Req","Required string that represents the name"]},{"entry":[{},{},"of the parameter that is bound."]},{"entry":["@Column","Req","Required string that represents the column"]},{"entry":[{},{},"on the CustomTable that is bound to the"]},{"entry":[{},{},"@Parameter parameter."]},{"entry":["@Version","Opt","Optional enum that allows for \u201cOriginal\u201d,"]},{"entry":[{},{},"\u201cCurrent\u201d. Default is \u201cCurrent\u201d."]},{"entry":[{},{},"Represents if the value of the data as"]},{"entry":[{},{},"retrieved from the DB should be used or"]},{"entry":[{},{},"the newly updated data."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Sub-Elements","There are no sub-elements.","15. ColumnBinding Element","ColumnBinding represents the binding of a CustomTable column to the column returned from a StoredProcedure\/UDF\/inline SQL Command, and is applicable to all command types.",{"@attributes":{"id":"p-0286","num":"0285"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Card","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["@Result","Req","Required string that represents the column on"]},{"entry":[{},{},"the result set that is bound."]},{"entry":["@Column","Req","Required string that represents the column on"]},{"entry":[{},{},"the CustomTable that is bound to the"]},{"entry":[{},{},"@Result column."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Sub-Elements","There are no sub-elements.","Parameter & Column Binding Semantics","The Default Binding feature is intended to provide a syntactical shortcut to users so that when the names of the Custom Table column match with the underlying parameter and\/or result column name then the system behaves as if the binding is present as a Parameter name=CustomColumn name binding or ResultColumn name=CustomColumn name binding. The Default Binding feature does not in any way alter the semantics of what it means for a parameter or column binding to be present (or absent) in any given scenario, but is simply a mechanism for attempting to infer the appropriate bindings. Default binding is on by default and can be disabled per command.","Default Binding with Explicit Metadata. When there is explicit metadata (compile-time information) for how many parameters or result columns should be expecting for a given command, the exact number of default bindings can be created up to the number of parameters or columns defined on the procedure or routine. The following table summarizes which command types for which explicit compile-time parameter\/column information exists.",{"@attributes":{"id":"p-0292","num":"0291"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Parameters","Column"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"User-Defined Functions","Yes","Yes"]},{"entry":[{},"Stored Procedures","Yes","No"]},{"entry":[{},"Inline SQL","No","No"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"When Default Binding is turned on, the mapping framework creates a binding for each column in the custom table to the appropriately named parameter and\/or column in the command. When metadata is available, an explicit binding is assumed to be a partial binding, and the system will attempt to apply default binding to any remaining columns on the Custom table. For example, consider the CustomTable for Orders which is defined as (oid nchar(10), odate date, comments nvarchar(max)). The InsertCommand for the Orders table has been overridden to reference sp_OrderInsert(@orderid nchar(10), odate date, comments nvarchar(max)). With Default Binding turned on and no ParameterBindings explicitly specified, the mapping framework would generate two bindings: one for odate and one for comments. The user could then specify an explicit binding from oid to orderid so that all three parameters are bound.","Default Binding without Explicit Metadata. In cases where no declarative information about parameters and\/or columns is available, the system will generate a parameter and a column binding for each column in the custom table. This may result in over-binding where there are more custom table columns than parameters in a procedure or columns in a result set.","Partial Binding is still supported in this scenario, so in every case where Default Binding has not been disabled there will be one parameter binding and one column binding for each column in the custom table.","The user can turn-off Default Binding explicitly and specify all of the bindings explicitly.","Binding Semantics","The expected behavior is capable of being defined when the custom table has more or less bindings than the input parameters to a procedure or the result columns to output parameters for a particular command. Where the CustomTable is wider than the Query Result Set, this scenario is designed to accommodate write-only fields (e.g., time of update, or userid doing the update). The mapped columns on the CustomTable that are referenced by a FieldMap, but not contained in the ResultSet, are treated as if the return is null. The target domain defines what the appropriate behavior is (null behavior for XML and default value form constructor in Objects).","UDF Scenario","In a UDF scenario, the appropriate number of columns is always selected from the UDF result set because compile time metadata allows formulation of queries properly. If the custom table is still wider than the UDF result set, the null behavior specified above will be executed.","Inline SQL Scenario","In this scenario if the user has disabled default binding and properly listed the columns to be returned from the SQL statement, the behavior is identical to the UDF scenario. If the user is relying on default bindings and the custom table is wider than the result set, columns are selected that do not exist resulting in a runtime error.","CustomTable Narrower than Query Result Set","In this scenario, the user is accessing a UDF or StoredProcedure that cannot be altered, but which returns values which are not being used in the customer's mapping application. This is not an error case, and the unbound\/unmapped values are ignored.","This scenario is unlikely in the Inline case because only the result columns that are bound to custom table columns will be selected.","CustomTable Wider than Input Parameter Set for CUD","In the update case, Custom columns that are not bound to columns or parameters, are ignored. It is assumed that these are read-only fields and\/or not required for execution of the command (particularly true for Delete commands which may only take the key).","In the Stored Procedure case, the number of parameters is always known and declared so over-binding never occurs. A compile time error can be provided if the user attempts to explicitly bind to a parameter that does not exist.","In the Inline SQL scenario, over-binding of the number of parameters that is used in the command may occur. This is not an error and may simply result in extra parameter values being sent across the wire.","CustomTable Narrower than Parameter Set","In this case the Command requires more parameters than are currently mapped from the user's application. If the Command has parameters that are not bound to any column on the Custom Table, or the Column on the Custom Table is not referenced by a FieldMap we will always pass the \u201cdefault\u201d to the Parameter. These parameters are outside the scope of the custom table.","In the StoredProcedure Scenario, it is known if the default keyword will be applied to a parameter that does not have a default declared, and thus, a compile time error can be issued notifying the user that there is an unbound parameter that has no default.","In the Inline SQL scenario, there is no capability to validate the fact that more parameters are declared in the command text so the user will receive a runtime error that there are unbound parameters in the command.","Additional Parameter Guidelines for CUD","Insert Commands\u2014when binding values to input parameters on InsertCommands, the CP must respect the setting of ForceNullOnInsert for the Map to the current CustomTable.","Update Commands\u2014when binding values to the parameters in the command we will always bind all values even if they are unchanged rather than attempting to execute the procedure with the \u201cdefault\u201d keyword or null specified for that parameter.","Parameter Scoping in Inline Scenarios\u2014if multiple instances are batched for execution on a particular Command, and the Command is Inline SQL, CP must account for the fact that there will be overlapping parameter names in the Command text.","CustomTable Narrower than CUD Result Set","In this scenario, the additional columns are simply ignored as they are in the Query case.","CustomTable Wider than CUD Result Set","In this case, only those values to the target domain for which has been returned in the CUD Command's result set, are bound back.","Simple Condition","RSD file:",{"@attributes":{"id":"p-0323","num":"0322"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Database Name=\u201cNorthwind\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Schema Name=\u201cdbo\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomTables>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomTable Name=\u201cCustomerYTD\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<BasedOn Name=\u201cCustomers\u201d"]},{"entry":[{},"AutoCommands=\u201ctrue\u201d\/>"]},{"entry":[{},"<Condition Column=\u201cContactTitle\u201d"]},{"entry":[{},"Value=\u201cOwner\u201d\/>"]},{"entry":[{},"<Condition Column=\u201cCity\u201d"]},{"entry":[{},"Value=\u201cMexico D.F.\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomTable>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomTables>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/Schema>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Database>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"SingleComplexMapping","Suppose the user has an attribute on the Customer class that is Year-to-Date (YTD) sales for that customer. This must be calculated, as it is not stored on the Customer table. The user writes a parameterless UDF that returns all the customers with their YTD sales totals.","Using an ExtendedColumns feature, the Customers table is used as the BasedOn structure and then the salesYTD column is appended to the columns inherited from the Customers table. The QueryCommand then simply references the UDF (udf_CustomerWithYTD) which has been custom-built for mapping such that the columns returned in the UDFs resultset are named identically to the columns on the Customer table and the salesYTD column specified in the ExtendedColumns. This naming takes advantage of default column binding and precludes the need for explicit bindings. Since a UDF can be used as a subselect, predicates from OPath are supported as if this was an Auto Command type.","RSD file:",{"@attributes":{"id":"p-0327","num":"0326"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Database Name=\u201cNorthwind\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Schema Name=\u201cdbo\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomTables>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomTable Name=\u201cCustomerYTD\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<BasedOn Name=\u201cCustomers\u201d"]},{"entry":[{},"AutoCommands=\u201ctrue\u201d\/>"]},{"entry":[{},"<ExtendedColumns>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Column Name=\u201csalesYTD\u201d"]},{"entry":[{},"SqlType=\u201cInteger\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/ExtendedColumns>"]},{"entry":[{},"<QueryCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<CommandReference"]},{"entry":[{},"Name=\u201cudf_CustomerWithYTD\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/QueryCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<CustomKey"]},{"entry":[{},"Name=\u201cpk_Customers_logical\u201d >"]},{"entry":[{},"<ColumnRef"]},{"entry":[{},"Name=\u201ccustomerid\u201d \/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomKey>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomTable>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomTables>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/Schema>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Database>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Mapping File","The mapping for this scenario looks like the following:",{"@attributes":{"id":"p-0330","num":"0329"},"tables":{"@attributes":{"id":"TABLE-US-00052","num":"00052"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<m:MappingSchema"},{"entry":"xmlns:m=\u2033http:\/\/schemas.microsoft.com\/data\/2002\/09\/28\/mapping\u2033>"},{"entry":"<m:DataSources>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<m:DataSource Type=\u2033SQL Server\u2033 Direction=\u2033Source\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<m:Schema Location=\u2033Northwind.rsd\u2033\/>"]},{"entry":[{},"<m:Variable Name=\u2033CustomerYTD\u2033 Select=\u2033CustomerYTD\u2033\/>"]},{"entry":[{},"<m:Variable Name=\u2033Orders\u2033 Select=\u2033Orders\u2033\/>"]},{"entry":[{},"<m:Relationship Name=\u2033R_CO1\u2033 FromVariable=\u2033CustomerYTD\u2033"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ToVariable=\u2033Orders\u2033>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<m:FieldJoin From=\u2033CustomerID\u2033 To=\u2033CustomerID\u2033\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/m:Relationship>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<\/m:DataSource>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<m:DataSource Type=\u2033Object\u2033 Direction=\u2033Target\u2033 >"]},{"entry":[{},"<m:InlineSchema"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"xmlns:o=\u2033http:\/\/schemas.microsoft.com\/data\/2002\/09\/20\/extendedobjectsch"},{"entry":"ema\u2033>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<o:ExtendedObjectSchema Name=\u2033northwindOBJ\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<o:Classes>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<o:Class Name=\u2033Customer\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<o:Member Name=\u2033companyName\u2033 \/>"]},{"entry":[{},"<o:Member Name=\u2033customerName\u2033\/>"]},{"entry":[{},"<o:Member Name=\u2033customerID\u2033 IsKey=\u2033true\u2033\/>"]},{"entry":[{},"<o:Member Name=\u2033myOrders\u2033\/>"]},{"entry":[{},"<o:Member Name=\u2033YTDSales\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/o:Class>"]},{"entry":[{},"<o:Class Name=\u2033Order\u2033>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<o:Member Name=\u2033orderDate\u2033\/>"]},{"entry":[{},"<o:Member Name=\u2033freight\u2033\/>"]},{"entry":[{},"<o:Member Name=\u2033orderID\u2033 IsKey=\u2033true\u2033\/>"]},{"entry":[{},"<o:Member Name=\u2033myCustomer\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/o:Class>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/o:Classes>"]},{"entry":[{},"<o:ObjectRelationships>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<o:Object Relationship Name=\u2033CustomerOrders\u2033 Type=\u2033OneToMany\u2033"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"ParentClass=\u2033Customer\u2033 ChildClass=\u2033Order\u2033 ParentMember=\u2033myOrders\u2033"},{"entry":"ChildMember=\u2033myCustomer\u2033 \/>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/o:ObjectRelationships>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/o:ExtendedObjectSchema>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/m:InlineSchema>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/m:DataSource>"},{"entry":"<\/m:DataSources>"},{"entry":"<m:Mappings>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<m:Map SourceVariable=\u2033CustomerYTD\u2033 TargetSelect=\u2033Customer\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<m:FieldMap SourceField=\u2033CustomerID\u2033 TargetField=\u2033customerID\u2033\/>"]},{"entry":[{},"<m:FieldMap SourceField=\u2033CustomerName\u2033 TargetField=\u2033customerName\u2033\/>"]},{"entry":[{},"<m:FieldMap SourceField=\u2033CompanyName\u2033 TarqetField=\u2033companyName\u2033\/>"]},{"entry":[{},"<m:FieldMap SourceField=\u2033SalesYTD\u2033 TargetField=\u2033YTDSales\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/m:Map>"]},{"entry":[{},"<m:Map SourceVariable=\u2033Orders\u2033 TargetSelect=\u2033Order\u2033>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<m:FieldMap SourceField=\u2033OrderID\u2033 TargetField=\u2033orderID\u2033\/>"]},{"entry":[{},"<m:FieldMap SourceField=\u2033OrderDate\u2033 TargetField=\u2033orderDate\u2033\/>"]},{"entry":[{},"<m:FieldMap SourceField=\u2033Freight\u2033 TargetField=\u2033freight\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/m:Map>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/m:Mappings>"},{"entry":"<\/m:MappingSchema>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Insert, Update and Delete are Auto, and since their command instances @Select all point to the Customer table which does not include YTD, this field is not updated and no error is raised.","ReadOnlyTables\u2014Custom-Built StoredProcedures (SPs)","In this example the user develops SPs as part of their application that are used for Insert, Update and Delete. Because the SPs are built specifically for mapping, they again take advantage of the default binding functionality by naming their parameters appropriately. In this scenario, the Stored Procedures do not return result sets. In addition, the CustomKey is inherited from the primary key definition that was placed on the Customers and Orders tables that serve as the BasedOn tables. The only difference between this example and the previous example is in the RSD CustomTables. Part of the power of the Custom Tables functionality is that the same Mapping is valid despite changes in the underlying DB structures that are used. For brevity only the RSD is shown here.","RSD File:",{"@attributes":{"id":"p-0334","num":"0333"},"tables":{"@attributes":{"id":"TABLE-US-00053","num":"00053"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Database Name=\u2033Northwind\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Schema Name=\u2033dbo\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomTables>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomTable Name=\u2033myCustomers\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<BasedOn Name=\u2033Customers\u2033"]},{"entry":[{},"AutoCommands=\u2033true\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<InsertCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<CommandReference"]},{"entry":[{},"Name=\u2033sp_CustomerInsert\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/InsertCommand>"]},{"entry":[{},"<UpdateCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<CommandReference"]},{"entry":[{},"Name=\u2033sp_CustomerUpdate\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/UpdateCommand>"]},{"entry":[{},"<DeleteCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<CommandReference"]},{"entry":[{},"Name=\u2033sp_CustomerDelete\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/DeleteCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomTable>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomTable Name=\u2033myOrders\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<BasedOn Name=\u2033Orders\u2033"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"AutoCommands=\u2033true\u2033\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<InsertCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<CommandReference"]},{"entry":[{},"Name=\u2033sp_OrderInsert\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/InsertCommand>"]},{"entry":[{},"<UpdateCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<CommandReference"]},{"entry":[{},"Name=\u2033sp_OrderUpdate\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/UpdateCommand>"]},{"entry":[{},"<DeleteCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<CommandReference"]},{"entry":[{},"Name=\u2033sp_OrderDelete\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/DeleteCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomTable>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomTables>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/Schema>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Database>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"For an ALLSP scenario, this is the same as the above except that because there is no access to tables the Columns must be explicitly listed.",{"@attributes":{"id":"p-0336","num":"0335"},"tables":{"@attributes":{"id":"TABLE-US-00054","num":"00054"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<Database Name=\u2033Northwind\u2033>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Schema Name=\u2033dbo\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomTable Name=\u2033myCustomers\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Columns>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Column Name=\u2033CompanyName\u2033"]},{"entry":[{},"SqlType=\u2033nvarchar\u2033 Length=\u203320\u2033\/>"]},{"entry":[{},"<Column Name=\u2033CustomerName\u2033"]},{"entry":[{},"SqlType=\u2033nvarchar\u2033 Length=\u203320\u2033\/>"]},{"entry":[{},"<Column Name=\u2033CustomerID\u2033"]},{"entry":[{},"SqlType=\u2033nvarchar\u2033 Length=\u203310\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Columns>"]},{"entry":[{},"<QueryCommand CommandType=\u2033Existing\u2033"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Select=\u2033sp_CustomerQuery\u2033\/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Insert Command CommandType=\u2033Existing\u2033"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Select=\u2033sp_Customer Insert\u2033\/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<UpdateCommand CommandType=\u2033Existing\u2033"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Select=\u2033sp_CustomerUpdate\u2033\/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<DeleteCommand CommandType=\u2033Existing\u2033"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Select=\u2033sp_CustomerDelete\u2033\/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomKey Name=\u2033mycust_pk\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<ColumnRef Name=\u2033CustomerID\u2033\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomKey>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/CustomTable>"]},{"entry":[{},"<CustomTable Name=\u2033myOrders\u2033>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Columns>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Column Name=\u2033OrderDate\u2033 SqlType=\u2033datetime\u2033\/>"]},{"entry":[{},"<Column Name=\u2033Freight\u2033 SqlType=\u2033decimal\u2033\/>"]},{"entry":[{},"<Column Name=\u2033OrderID\u2033 SqlType=\u2033nvarchar\u2033"]},{"entry":[{},"Length=\u203310\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Columns>"]},{"entry":[{},"<QueryCommand CommandType=\u2033Existing\u2033"]},{"entry":[{},"Select=\u2033sp_OrderQuery\u2033\/>"]},{"entry":[{},"<InsertCommand CommandType=\u2033Existing\u2033"]},{"entry":[{},"Select=\u2033sp_OrderInsert\u2033\/>"]},{"entry":[{},"<UpdateCommand CommandType=\u2033Existing\u2033"]},{"entry":[{},"Select=\u2033sp_OrderUpdate\u2033\/>"]},{"entry":[{},"<DeleteCommand CommandType=\u2033Existing\u2033"]},{"entry":[{},"Select=\u2033sp_OrderDelete\u2033\/>"]},{"entry":[{},"<CustomKey Name=\u2033myord_pk\u2033>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<ColumnRef Name=\u2033OrderID\u2033\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomKey>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomTable>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomTables>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/Database>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Inline Query Command","In this scenario the user has a specialized SQL block that they want to execute for Query, and they use the same Stored Procedures as above for CUD. This example requires the user to list the columns explicitly, as well as the primary key for each table, and also makes use of the InlineCommand functionality.","Aside from the InlineCommand for Query (so the CustomTable does not take advantage of BasedOn), this example is identical to the one above so only the changes are shown.","InlineCommands are still eligible to take advantage of Default Binding. By default in the query case there will be a binding created for each Column in the Custom Table to a column in the Result Set with the same name. InlineCommands can take advantage of the SQL \u201cAs\u201d keyword to facilitate Default Binding.","RSD File:",{"@attributes":{"id":"p-0341","num":"0340"},"tables":{"@attributes":{"id":"TABLE-US-00055","num":"00055"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<Database Name=\u2033Northwind\u2033>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Schema Name=\u2033dbo\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomTable Name=\u2033myCustomers\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Columns>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Column Name=\u2033CustomerID\u2033 SqlType=\u2033nvarchar\u2033"]},{"entry":[{},"Length=\u203310\u2033\/>"]},{"entry":[{},"<Column Name=\u2033CustomerName\u2033"]},{"entry":[{},"SqlType=\u2033nvarchar\u2033 Length=\u203320\u2033\/>"]},{"entry":[{},"<Column Name=\u2033Address\u2033 SqlType=\u2033nvarchar\u2033"]},{"entry":[{},"Length=\u203320\u2033 \/>"]},{"entry":[{},"<Column Name=\u2033City\u2033 SqlType=\u2033nvarchar\u2033"]},{"entry":[{},"Length=\u203320\u2033 \/>"]},{"entry":[{},"<Column Name=\u2033State\u2033 SqlType=\u2033nvarchar\u2033"]},{"entry":[{},"Length=\u203320\u2033 \/>"]},{"entry":[{},"<Column Name=\u2033Comments\u2033 SqlType=\u2033nvarchar\u2033"]},{"entry":[{},"Length=\u2033max\u2033 \/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Columns>"]},{"entry":[{},"<QueryCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<InlineCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Body>Select * From Customers Where"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"state=\u2019WA\u2019<\/Body>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/InlineCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/QueryCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomTable>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomTables>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/Database>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Inline Update Command","In this scenario the user has a specialized SQL block that they want to execute for Query, and they use the same Stored Procedures as above for CUD. This example requires the user to list the columns explicitly, as well as the primary key for each table, and also makes use of the InlineCommand functionality.","RSD File:",{"@attributes":{"id":"p-0344","num":"0343"},"tables":{"@attributes":{"id":"TABLE-US-00056","num":"00056"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<Database Name=\u2033Northwind\u2033>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Schema Name=\u2033dbo\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomTable Name=\u2033myCustomers\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Columns>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Column Name=\u2033CustomerID\u2033"]},{"entry":[{},"SqlType=\u2033nvarchar\u2033 Length=\u203310\u2033\/> "]},{"entry":[{},"<Column Name=\u2033CustomerName\u2033"]},{"entry":[{},"SqlType=\u2033nvarchar\u2033 Length=\u203320\u2033\/> "]},{"entry":[{},"<Column Name=\u2033Address\u2033"]},{"entry":[{},"SqlType=\u2033nvarchar\u2033 Length=\u203320\u2033 \/>"]},{"entry":[{},"<Column Name=\u2033City\u2033"]},{"entry":[{},"SqlType=\u2033nvarchar\u2033 Length=\u203320\u2033 \/> "]},{"entry":[{},"<Column Name=\u2033State\u2033"]},{"entry":[{},"SqlType=\u2033nvarchar\u2033 Length=\u203320\u2033 \/> "]},{"entry":[{},"<Column Name=\u2033Comments\u2033"]},{"entry":[{},"SqlType=\u2033nvarchar\u2033 Length=\u2033max\u2033 \/> "]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Columns>"]},{"entry":[{},"<QueryCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<InlineCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Body>Select * From Customers Where"]},{"entry":[{},"state=\u2019WA\u2019<\/Body>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/InlineCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/QueryCommand>"]},{"entry":[{},"<InsertCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<CommandReference"]},{"entry":[{},"Name=\u2033sp_CustomerInsert\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/InsertCommand>"]},{"entry":[{},"<UpdateCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<InlineCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Body>UPDATE Customers SET"]},{"entry":[{},"CustomerName=@CustomerName,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Address=@Address, City=@City, State=@State,"},{"entry":"Comments=@Comments WHERE"},{"entry":"CustomerID=@CustomerID<\/Body>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/InlineCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/UpdateCommand>"]},{"entry":[{},"<DeleteCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CommandReference Name=\u2033sp_CustomerDelete\u2033\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/DeleteCommand>"]},{"entry":[{},"<CustomKey Name=\u2033mycust_pk\u2033>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<ColumnRef Name=\u2033CustomerID\u2033\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomKey>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomTable>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomTables>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/Database>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"ExistingSP","This example is the same as the InlineCommand example, but with YTDSales on the Customer. The difference here is that the Stored Procedures are not written as part of the application mapping is developed for. The following features are therefore introduced: explicit binding of parameters; partial binding of parameters; SPs return resultsets\u2014Insert returns the CustomerID that can be propagated back to the target. This result set also makes use of partial binding.","RSD File:",{"@attributes":{"id":"p-0347","num":"0346"},"tables":{"@attributes":{"id":"TABLE-US-00057","num":"00057"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Database Name=\u2033Northwind\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Schema Name=\u2033dbo\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CustomTable Name=\u2033myCustomers\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Columns>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Column Name=\u2033CompanyName\u2033"]},{"entry":[{},"SqlType=\u2033nvarchar\u2033 Length=\u203320\u2033\/> "]},{"entry":[{},"<Column Name=\u2033CustomerName\u2033"]},{"entry":[{},"SqlType=\u2033nvarchar\u2033 Length=\u203320\u2033\/> "]},{"entry":[{},"<Column Name=\u2033CustomerID\u2033"]},{"entry":[{},"SqlType=\u2033nvarchar\u2033 Length=\u203310\u2033\/> "]},{"entry":[{},"<Column Name=\u2033CustomerYTD\u2033"]},{"entry":[{},"SqlType=\u2033decimal\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Columns>"]},{"entry":[{},"<QueryCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<InlineCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Body>"]},{"entry":[{},"Select CustomerId, CompanyName,"]},{"entry":[{},"CustomerName, YTDSales AS"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"CustomerYTD from udf_AllCustomers( )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/Body>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/InlineCommand>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/QueryCommand>"]},{"entry":[{},"<InsertCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<CommandReference"]},{"entry":[{},"Name=\u2033sp_CustomerInsert\u2033\/>"]},{"entry":[{},"<ParameterBinding Parameter=\u2033cid\u2033"]},{"entry":[{},"Column=\u2033CustomerID\u2033 \/>"]},{"entry":[{},"<ParameterBinding Parameter=\u2033cname\u2033"]},{"entry":[{},"Column=\u2033CustomerName\u2033 \/>"]},{"entry":[{},"<ColumnBinding Column=\u2033NewCustomerID\u2033"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"CustomColumn=\u2033CustomerID\u2033\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/InsertCommand>"]},{"entry":[{},"<UpdateCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<ComandReference"]},{"entry":[{},"Name=\u2033sp_CustomerUpdate\u2033\/>"]},{"entry":[{},"<ParameterBinding"]},{"entry":[{},"Parameter=\u2033OriginalCustomerIDToUpdate\u2033"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"CustomColumn=\u2033CustomerID\u2033 Version=\u2033Original\u2033\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/UpdateCommand>"]},{"entry":[{},"<DeleteCommand>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<CommandReference"]},{"entry":[{},"Name=\u2033sp_CustomerDelete\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/DeleteCommand>"]},{"entry":[{},"<CustomKey Name=\u2033mycust_pk\u2033>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<ColumnRef Name=\u2033CustomerID\u2033\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomKey>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CustomTable>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/Schema>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Database>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In this example, the QueryCommand takes advantage of default Column Binding by aliasing the column returned from the udf_AllCustomers () procedure to match the definition in the Columns section of the CustomTable","The InsertCommand uses an explicit binding (assuming that the CustomerYTD is not bound, since the InsertCommand's parameters have been declared in the SP definition).","The UpdateCommand uses a partial binding, to bind the parameter for the original key value in the update, but allows the current value to default to the appropriately-named parameter (CustomerId) that is assumed to be declared in the SP definition. The rest of the fields to be updated are also default bound.","Serialization","Custom Tables will be serialized inline with the RSD file under the <CustomTables> element which resides underneath the <Schema> element. As noted above, Custom Tables belong to the RSD-extensions namespace, providing a means for tools which generate\/refresh RSD documents from the database to know explicitly which elements they should ignore (as long as those elements are preserved \u201cas-is\u201d by the tool). When generating\/refreshing the RSD from a database, Custom Table elements may be invalidated based on metadata changes within the server.","Referring now to , there is illustrated a block diagram of a computer operable to execute the disclosed architecture. In order to provide additional context for various aspects of the present invention,  and the following discussion are intended to provide a brief, general description of a suitable computing environment  in which the various aspects of the present invention may be implemented. While the invention has been described above in the general context of computer-executable instructions that may run on one or more computers, those skilled in the art will recognize that the invention also may be implemented in combination with other program modules and\/or as a combination of hardware and software. Generally, program modules include routines, programs, components, data structures, etc., that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the inventive methods may be practiced with other computer system configurations, including single-processor or multiprocessor computer systems, minicomputers, mainframe computers, as well as personal computers, hand-held computing devices, microprocessor-based or programmable consumer electronics, and the like, each of which may be operatively coupled to one or more associated devices. The illustrated aspects of the invention may also be practiced in distributed computing environments where certain tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","With reference again to , there is illustrated an exemplary environment  for implementing various aspects of the invention includes a computer , the computer  including a processing unit , a system memory  and a system bus . The system bus  couples system components including, but not limited to the system memory  to the processing unit . The processing unit  may be any of various commercially available processors. Dual microprocessors and other multi-processor architectures also can be employed as the processing unit .","The system bus  can be any of several types of bus structure including a memory bus or memory controller, a peripheral bus and a local bus using any of a variety of commercially available bus architectures. The system memory  includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system (BIOS), containing the basic routines that help to transfer information between elements within the computer ; such as during start-up, is stored in the ROM .","The computer  further includes a hard disk drive , a magnetic disk drive , (e.g., to read from or write to a removable disk ) and an optical disk drive , (e.g., reading a CD-ROM disk  or to read from or write to other optical media). The hard disk drive , magnetic disk drive  and optical disk drive  can be connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface  and an optical drive interface , respectively. The drives and their associated computer-readable media provide nonvolatile storage of data, data structures, computer-executable instructions, and so forth. For the computer , the drives and media accommodate the storage of broadcast programming in a suitable digital format. Although the description of computer-readable media above refers to a hard disk, a removable magnetic disk and a CD, it should be appreciated by those skilled in the art that other types of media which are readable by a computer, such as zip drives, magnetic cassettes, flash memory cards, digital video disks, cartridges, and the like, may also be used in the exemplary operating environment, and further that any such media may contain computer-executable instructions for performing the methods of the present invention.","A number of program modules can be stored in the drives and RAM , including an operating system , one or more application programs , other program modules  and program data . It is appreciated that the present invention can be implemented with various commercially available operating systems or combinations of operating systems.","A user can enter commands and information into the computer  through a keyboard  and a pointing device, such as a mouse . Other input devices (not shown) may include a microphone, an IR remote control, a joystick, a game pad, a satellite dish, a scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus , but may be connected by other interfaces, such as a parallel port, a game port, a universal serial bus (\u201cUSB\u201d), an IR interface, etc. A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor , a computer typically includes other peripheral output devices (not shown), such as speakers, printers etc.","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer(s) . The remote computer(s)  may be a workstation, a server computer, a router, a personal computer, portable computer, microprocessor-based entertainment appliance, a peer device or other common network node, and typically includes many or all of the elements described relative to the computer , although, for purposes of brevity, only a memory storage device  is illustrated. The logical connections depicted include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the local network  through a network interface or adapter . The adaptor  may facilitate wired or wireless communication to the LAN , which may also include a wireless access point disposed thereon for communicating with the wireless adaptor . When used in a WAN networking environment, the computer  typically includes a modem , or is connected to a communications server on the LAN, or has other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Referring now to , there is illustrated a schematic block diagram of an exemplary computing environment  in accordance with the present invention. The system  includes one or more client(s) . The client(s)  can be hardware and\/or software (e.g., threads, processes, computing devices). The client(s)  can house cookie(s) and\/or associated contextual information by employing the present invention, for example. The system  also includes one or more server(s) . The server(s)  can also be hardware and\/or software (e.g., threads, processes, computing devices). The servers  can house threads to perform transformations by employing the present invention, for example. One possible communication between a client  and a server  may be in the form of a data packet adapted to be transmitted between two or more computer processes. The data packet may include a cookie and\/or associated contextual information, for example. The system  includes a communication framework  (e.g., a global communication network such as the Internet) that can be employed to facilitate communications between the client(s)  and the server(s) . Communications may be facilitated via a wired (including optical fiber) and\/or wireless technology. The client(s)  are operably connected to one or more client data store(s)  that can be employed to store information local to the client(s)  (e.g., cookie(s) and\/or associated contextual information). Similarly, the server(s)  are operably connected to one or more server data store(s)  that can be employed to store information local to the servers .","What has been described above includes examples of the present invention. It is, of course, not possible to describe every conceivable combination of components or methodologies for purposes of describing the present invention, but one of ordinary skill in the art may recognize that many further combinations and permutations of the present invention are possible. Accordingly, the present invention is intended to embrace all such alterations, modifications and variations that fall within the spirit and scope of the appended claims. Furthermore, to the extent that the term \u201cincludes\u201d is used in either the detailed description or the claims, such term is intended to be inclusive in a manner similar to the term \u201ccomprising\u201d as \u201ccomprising\u201d is interpreted when employed as a transitional word in a claim."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
