---
title: Methods and devices for archiving recorded interactions and retrieving stored recorded interactions
abstract: At least one contact between at least one server and at least one user is archived. The contact includes a recorded interaction between the user and the server, e.g., a recorded interaction between a customer and a customer service agent via the server. The contact is associated with a contact folder in a local storage. A portion of the contact is selected to be archived, and the time to archive the selected portion is determined. The selected portion of the contact is archived in an extended storage at the determined time. Archiving includes copying at least the content from the associated contact folder in the local storage and forwarding at least the copied content to an extended storage. A portion of the archived contact or the entire archived contact may be restored by determining that the contact is archived and retrieving the contact or the portion of the contact from the extended storage.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07882212&OS=07882212&RS=07882212
owner: Verint Systems Inc.
number: 07882212
owner_city: Melville
owner_country: US
publication_date: 20021031
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is a continuation-in-part of a commonly assigned U.S. patent application Ser. No. 10\/136,735, filed Apr. 30, 2002 as a Continuation-in-Part of U.S. patent applications No. 10\/061,469, 10\/061,489, and 10\/061,491, filed Jan. 31, 2002, and U.S. patent application Ser. No. 10\/058,911, filed Jan. 28, 2002 now abandoned. These applications are hereby incorporated by reference.","The present invention is directed to methods and devices for processing recorded interactions. More particularly, the present invention is directed to methods and systems for archiving recorded interactions between a server and a user and for retrieving stored recorded interactions.","For systems employing interactions between a user and server, it is often desirable to be able to view the interactions, ideally in a manner that is transparent to the user. This is particularly desirable in a context such as sales, customer service, and e-commerce, where interactions between customers and customer service agents via a web connection or a phone connection are important indicators of customer satisfaction.","Attempts have been made to recreate interactions between a user and a server. For example, click stream analysis procedures have been used to recreate interactions between a web user and a web service provider. This type of procedure is analogous to reviewing and analyzing the script to a movie. While this procedure reveals some information about the interaction between the server and the user, it does not provide a clear tangible picture of special effects, the environment, chemistry between the user and the server, etc.","Other attempts have been made to replay recorded interactions between a server and a user. However, these attempts are typically implemented at the server, consuming a lot of server resources, and are suitable only for a particular type of server. In addition, these approaches typically do not distinguish between interactions that are considered important and interactions that are not important. Thus, a lot of time and resources are wasted on storing and replaying unimportant recorded interactions.","There is thus a need for a technique for selectively recording data captured during an exchange between a server and a user. There is further a need for storing recorded interactions in an efficient manner.","It is an object of the present invention to provide a method and system for archiving data exchanged between a user and a server in an efficient and reliable manner. It is a further object of the present invention to provide a method and system for retrieving stored data exchanged between the user and the server in an efficient and reliable manner.","According to one embodiment, these and other objects are met by a method and apparatus for archiving at least one contact between at least one server in an enterprise and at least one user. A contact that includes a recorded interaction between the server and the user and is associated with a contact folder in a local storage is selected to be archived. The recorded interaction satisfies at least one predetermined business rule, and all contacts that satisfy the same business rule are associated with the same contact folder. A portion of the contact is selected to be archived, and a time to archived the selected content is determined. The selected portion of the contact is then archived in an extended storage at the determined time.","According to an exemplary embodiment, archiving is performed by extracting the contact from the associated contact folder in the local storage and forwarding the extracted contact to an extended storage.","According to another embodiment, a method and apparatus are provided for retrieving at least one contact between at least one server in an enterprise and at least one user. At least one stored contact including a recorded interaction between the server and the user and associated with a contact folder in a local storage is selected. The entire contact may be selected, or a portion of the contact may be selected to be retrieved. A determination is made whether the selected contact is archived or stored locally. The selected contact or portion of the contact is then retrieved from an appropriate storage location, depending on whether the selected contact is archived or stored locally.","Further objects, advantages and features of the present invention will become more apparent when reference is made to the following description taken in conjunction with the accompanying drawings.","According to exemplary embodiments, contacts between a server and a user are archived, and archived contacts are restored. The contacts may be archived in an extended storage. Eventually, the archived contacts may be dismissed and purged, thus making efficient use of storage capacity.","In the following description, the server is referred to as a web server, and the user is referred to as a web browser. It will be appreciated, however, that the invention may be applicable to other types of servers and users.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 1A","FIG. 1A"],"b":["100","110","120","100","110","120"]},"The web browser  may be implemented in a personal computer, a telephone, etc. The web server  may be implemented as a server supporting any operating system, e.g., Unix, Linux, NT or Windows 2000. Although described as a server handling web connections, the server  may also handle phone connections.","The page capture module  is arranged between the web server  and the web browser . For security purposes, a firewall  may separate the web browser  and the page capture module .","The page capture module  operates independently from the web server  and the web browser . Thus, the page capture module  does not need to be customized for each type of web server but may be used with any web server, supporting any operating system.","Although the page capture module  operates independently from the web server  and the web browser, it may be implemented in the same device as the web server  or the web browser .","The page capture module  captures pages and other data exchanged between the web server  and the browser . Pages and other data may be captured continually or at designated intervals or time windows. The page capture module  may also record these pages and other data, or recording may be performed in a separate recorder server connected to the page capture module.","Each web browser  is assigned a unique machine identity (ID) by the web server . A persistent machine ID cookie may be created by the web server  and stored at the web browser  for this purpose. All pages served to a particular web browser  are identified and grouped by the machine ID. Although the module  is described as a page capture module, according to exemplary embodiments, other types of data may also be captured. For example, events and attributes may be captured. An \u201cattribute\u201d may be defined as a single bit of data about an event. Attributes may be captured in a manner similar to that in which pages are captured, as described above.","For event capturing, according to an exemplary embodiment an event capture module captures user side events and delivers these to the page capture module . The event capture module may be implemented as an applet  that is downloaded to the web browser . For the purposes of this application, an \u201capplet\u201d may be defined as a Java application which is configured to run within a Java-enabled browser. Applets are a way to develop user interfaces that mimic traditional desktop user interfaces in a browser environment. Java is a platform independent application development language that is used to develop stand-alone applications as well as browser-based applications.","Although shown as a separate component, the event capture applet  is stored at the browser, with parameters such as the web browser machine ID, the host Internet Protocol (IP) address, and the current page name. The event capture applet  may be notified, for example, by JavaScript embedded in the current page, whenever an event needs to be recorded. The event capture applet  records events such as: page load, page unload, page scroll, page resize, and browser exit. The event capture applet  sends captured events to the page capturing module  via, for example, a Transmission Control Protocol\/Internet Protocol (TCP\/IP) socket connection on port  (or port  for secure exchanges).","Pages and other data captured during exchanges between the web server  and the web browser  at the page capture module  are sent from the page capturing module  to a page preprocessor  via, e.g., a TCP\/IP socket.","According to an exemplary embodiment, each captured page is assigned a unique page ID and is associated with a specific browser user machine ID. Each page may also contain the date and time that the page was captured and the page status (recording, processing, playback, etc.) After'pages are captured, this information is extracted from the captured page, and a new record is inserted into a database .","The page preprocessor  acts as a recorder server and stores the captured data in a device such as a database . The pages  are then passed on to the page post-processor . Alternatively, the page capturing module  may perform this recording. To reduce the amount of storage necessary, only predetermined portions of data may be stored, e.g., the request portion or the response portion. Also, only data satisfying predetermined rules, e.g., rules indicating timing, may be stored. When the captured pages are recorded, identifying information may also be recorded, e.g., a session record ID, a date\/time of recording, a machine ID, etc. Also, for interactions such as phone calls between a customer service agent and a customer, portions of the phone call may be captured.","An exemplary page capturing module and page preprocessor are described in more detail in the afore-mentioned application Ser. No. 10\/061,469.","A post-processing module  determines which captured data satisfies predefined rules, e.g., business rules, and records this data in a file , such as a Java Archive (JAR) file. The database  is updated to indicate what captured data has been selected and recorded for playback. This is described in more detail below with reference to .","A playback tool  selects recorded data from the database , using the information in the database . An exemplary playback tool is described in more detail in the afore-mentioned application Ser. No. 10\/061,491.","Although not shown in the interest of simplifying the illustrations, it will be appreciated that the system in  may also include other components, e.g., configuration files used for processing.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 1B","b":["140","150","140"]},"According to exemplary embodiments, business rules are applied to the recorded data in the business rule engine  to determine whether a page should be saved for playback. A business rule may be defined as a statement that defines or constrains some aspect of a business. A business rule may apply to data attributes of the contact, irrespective of the source, and\/or a portion of the spoken conversation as evaluated by speech recognition technology. The business rule asserts business structure or controls or influences the behavior of the business.","Data from a page table database  and a page rule table database  may be used in the evaluation by the business rule engine . Pages that satisfy the business rules are recorded for future playback. The page table and page rule database are updated after post-processing.","When a set of captured pages is identified as a session, then a session record is created of the identified session during post-processing. The session identification information may be stored in a session table, such as that shown in .","An example of a comparison of business rule with captured data may be determining whether the captured data is an interaction resulting in a sale greater than a predetermined number of dollars, determining whether an interaction was longer than a predetermined number of minutes, etc. As another example, a business rule may state that the current page is to be recorded and all previous pages for that machine ID in that session. Also, a business rule comparison may be in the form of voice recognition. For example, a business rule employing speech recognition technology may state that an interaction is to be stored if the caller says \u201ccancel my account\u201d.","According to exemplary embodiments, pages that do not satisfy the business rules are deleted.","According to an exemplary embodiment, the post-processing program appends the recorded JAR file to the playback JAR file in the playback directory for the current machine ID. If a playback file does not exist for the specified machine ID, the post-processing program may create one.","Images are retrieved for saved pages.","According to exemplary embodiments, events may be recorded as a text file using XML. The file has the same name as the page that generated the event.","A time period may be set for retaining recorded data, e.g., 30 minutes. This time period may be used in determining whether a page is part of a session, and pages that are part of the same session may be grouped for future playback.","Selection and storage of data for future playback are described in more detail in the above-referenced U.S. patent application Ser. No. 10\/061,489, filed Jan. 31, 2002.","While the examples above discuss how captured pages are selectively recorded, the invention is not limited to selectively recording captured pages. According to exemplary embodiments, any type of data captured during an interaction between a user and a server may be selectively recorded. For example, events and attributes may be selectively recorded. Also, portions of a phone call between, e.g., a customer service agent and a customer, may be captured.","According to an exemplary embodiment, business rules are applied to captured pages using an applications server such as the server  shown in . The server  may be implemented as a Component Object Model (COM) based server. According to an exemplary embodiment, the server  includes a business rules engine such as the engine  shown in , a scheduled rules processor, a business object layer (BOL) , a data abstraction layer (DAL)  and  and a repository or database . Alternatively, the database  may be included as a separate entity, e.g., if a large load is expected.","Attributes of contacts and metadata may be stored in the database , as well as business rule data populated and manipulated by a business rules editor. The server  communicates with the database  to obtain the business rules. The engine  in the server  applies the business rules to the captured data and communicates with a recorder server  for recording the captured data that satisfies predetermined business rules. The servers  and  may be implemented separately as shown in  or in the same device.","The BOL  interfaces with both the business rule editor applet and the DAL  and  to manage traffic to and from the database .","The recorder server  communicates with an end user via, e.g., a phone switch  and a PSTN . The phone switch may include, e.g., a private branch exchange (PBX) and an automatic call device (ACD).","According to an exemplary embodiment, exchanged data may be recorded from one or more points between the user  and the phone switch , a point between the phone switch and the server , or from a point between the client (agent)  and the server . This is described in more detail in the afore-mentioned U.S. patent application entitled \u201cMethod and System for Selectively Dedicating Resources for Recording Data Exchanged Between Entities Attached to a Network\u201d, filed on Apr. 30, 2002, and incorporated herein by reference.","According to an exemplary embodiment, business rules may be added, deleted, copied, pasted, and or modified by a user, such as a supervisor, using a business rules editor implemented, e.g., on a client computer  as shown in . The client computer  communicates with the server , in which the business rules engine may be implemented. The client computer may be implemented as a browser-based application, utilizing Java applets and HTML, and interfacing with some COM-Java bridging tool (Jintegra or R-JAX) to allow the Java-based client to communicate with the COM-based server. The business rules editor may be a Java applet running in a browser (MSIE or NN) on the client machine such as the computer  shown in .","The applet may communicate to COM objects on the server  using a COM-Java bridging tool. This provides the capability for the applet to access the COM objects as though they were Java objects. The editor applet may be integrated with a category manager and user security administrator applets into what appears to the user to be one application. The major tasks involved in the applet, with regard to manipulating the rules and the tree control, are detailed below. For the user-initiated tasks, it is assumed that the user has the rights to perform the task.","According to an exemplary embodiment, the business rules repository may be accessed by multiple users simultaneously. Multi-user access is handled smoothly and without conflict or collision.","Much of the information used by the business rules editor to create the rule definition may be acquired from other sources including but not limited to Computer Telephony Integration (CTI) data, external data, third party software applications, a speech recognition system, etc. Event attributes, user names and categories may exist somewhere in the system for easy acquisition by the editor. For example, a category manager generates category information for use by the business rules editor to designate where a contact should be catalogued, and an attribute type manager, which is used for defining the attributes of the events generated during a contact. It is these attributes whose value comparisons make up the condition part of the business rule. The system components also include a user security administrator which defines the users of the system. This user information may be used by the business rules editor for building the condition, setting notifications and checking editing rights.","The business rules editor application may be modeled on the \u201cexplorer\u201d format, displayed via a user interface as a split window containing a tree control on the left, and on the right, an area containing an interface for defining the properties of the item selected in the tree. Management of business rules is described in more detail in the afore-mentioned U.S. patent application entitled \u201cMethods and Systems for Categorizing and Cataloguing Recorded Interactions\u201d, filed Apr. 30, 2002.","According to an exemplary embodiment, there may be two application-defined folders: business rules and archived rules. These folders cannot be deleted or renamed by the user. The business rules folder is a stationary part of the folder tree and acts simply as a default. An archived rules folder may also appear, marked for example with a star, in each rule folder. The archived rules folder contains the older versions of rules which have been modified.","As indicated above, interactions may be recorded based on whether or not they satisfy predetermined business rules. Alternatively, interactions may be captured randomly using, e.g., a randomizer included in the business rules engine. This is described in more detail in the afore-mentioned application entitled \u201cMethods and Systems for Categorizing and Cataloguing Recorded Interactions\u201d, filed Apr. 30, 2002.","According to exemplary embodiment, contacts are categorized and stored based upon business rules.","Categorization is a method for users to group contacts in a way that is meaningful. Each category contains information, called properties, that describes itself, as well as a means for accessing the contacts that are \u201cgrouped\u201d in the category. Categorization is described in more detail in the aforementioned U.S. patent application entitled \u201cMethods and Systems for Categorizing and Cataloguing Recorded Interactions\u201d, filed Apr. 30, 2002.","According to an exemplary embodiment, contact folders are storage units for contacts. Considering a contact as a single customer interaction that may be comprised of one or more events and some content representing contacts in a machine readable form, a contact folder is a way of organizing and grouping contacts in the user's view and controlling security access to the contacts. The contact folder may be defined conceptually as a repository for a contact. Contact folder creation and management are described in more detail in the U.S. patent application entitled \u201cMethods and Systems for Categorizing and Cataloguing Recorded Interactions\u201d, filed Apr. 30, 2002.","According to an exemplary embodiment, contacts may be listed by contact folder on a user interface.  illustrates an exemplary contact list screen shot displayed upon selection of a \u201ccontacts\u201d tab. On the left of the screen are the contact folders and sub-folders. A user is presented with all folders that meet these criteria: folders for which the user has been given any folder-level permissions, folders for which the user is a member of a group, and that group has been given folder-level permissions, and additionally, if this user has a QA Reviewer role, folders where the user's specific QA Reviewer role was assigned to the folder. The list view also includes folders which were created by this, or other, users, as well as auto-created folders for AIM, live monitor, and search. If the user has administrative permissions, the list view may also include the unassigned folder and the recycle folder. Also, according to an exemplary embodiment.","On the right of the screen are the contacts. For each contact, the following information is listed: contact date and time, contact name, received by, contact media type icon with agent name, supervisor name at time of recording, and contact duration (HH:MM:SS). Recording type (AIM, business rule, live monitor) may also be listed. The contact date time may be expressed as MM\/DD\/YYYY HH:MM:SS AM. The date may be formatted according to client's regional locale Euro and US). The contact name may be formatted according to YYYYMMDD9999999 (date of the contact followed by a sequential number).","According to an exemplary embodiment, the contact media type may begin with an icon indicating the primary media type of the call (interactive voice recognition (IVR), web, inbound call, outbound call, inbound email, outbound email). This may be followed by the name of the first agent on the contact, if there was an agent.","The agent's supervisor at the time of the recording may be displayed. If there was no agent, this may be blank. If the agent had no supervisor, this may read \u201cunassigned\u201d or may be left blank.","The contact duration may be displayed for voice contacts or any other kind of contact.","The recording type may also be shown, indicating one or more reasons why this contact was stored, e.g., business rule trigger, AIM, or a Live Monitor, or some combination.","There may be a review status icon that is present if the contact has been reviewed. Also, there may be a review history displayed on the screen, indicating who revised the contact and when. Contacts may be reviewed by more than one person, any number of times.","The user may type text into the contact description area for the contact which is selected in the area above.","The user may select a contact for replay from the contact list. Upon selection, the events and attributes of the contact may be displayed.","When a contact is replayed, the contact list view is updated to indicate that the contact has been reviewed. For example, an icon is generated. Also, information is added indicating who reviewed the contact. The date and time that the contact was selected for replay and the date and time that the replay ended may be also be provided. This data may be used for reporting purposes.","Contact folder management is described in more detail in the afore-mentioned application entitles \u201cMethods and Systems for Categorizing and Cataloguing Recorded Interactions\u201d, filed Apr. 30, 2002.","Referring to , a user may choose to manage contact folders by selecting the target contact folder in the left panel of a screen. Assume the user is known to the system and has been granted the ability to manage contact folders. The user selects the target folder to cause the contents of the folder to be displayed as shown in  or the root word \u201ccontacts\u201d, bringing up the popup menu shown in . Alternatively, the user may right click anywhere in the contact folder tree to bring up the popup menu shown in . Using the popup menu, the user may select \u201cNEW\u201d to create a new folder.","Assuming that the folder is new, using the add properties tab as shown, e.g., in , the user enters a new name, description, and maximum number of unreviewed contacts, and number of day's contacts are available. Then, using the screen shown in , the user selects the security tab. Next, the user selects the user and the level of access. Then, the supervisor selects the ADD button. A new contact folder is thus created, and the screen returns to the contact tab.","For updating a contact folder, the user selects the contact folder to be updated using a screen such as that shown in . The user selects the properties tab and modifies the properties, using the screen shown in . The user selects the security tab and modifies the security using the screen shown in . The user selects the update button to update or the reset button to undo changes.","The contact folders may be deleted, copied, cut, pasted, renamed in a similar manner.","Over time, as contacts and folders are deleted (from the user's perspective), the contacts may be associated with the recycle folder. There may also be an aging process for contacts in a folder so that they automatically move to the recycle folder after some specified number of days, which is system configurable, and can be overridden at the folder level.","When a contact folder is moved to the recycle folder, all contact associations remain in the folder. Any active business rule that is associated with the contact folder and that has no other contact folder associations, may be made inactive. Contacts associated with the recycle folder will have no associations with other contact folders at the same time.","When a user is inactivated, the inactive user's name may be removed from the folder permission for each folder.","In addition to the recycle folder, according to an exemplary embodiment, an archive storage is provided for storing contacts. According to this embodiment, the content and\/or associated metadata in a contact may be moved from a local drive on the server  to an extended storage system, e.g., a tape archive system, a network line file store, etc. Then, the archived data may be restored onto the local driver for playback.","According to an exemplary embodiment, archiving may be performed under the control of a user, a server, a database, and a recorder server such as those shown in . The system of  is similar to that shown in , except for the addition of an extended storage . The extended storage  may be implemented with any suitable storage device, e.g., a tape archive system, a network line file store, etc., connected to the server .","According to an exemplary embodiment, a user having \u201cmodify\u201d or \u201cfull control\u201d rights, such as a system administrator or supervisor, may configure when archiving should occur and what part of a contact to archive. For example, the user may determine the number of days after the association between a contact and a contact folder that archiving should occur. Also, the user may determine what content in the contact to archive, e.g., whether to archive audio data, video data, or audio and video data. Metadata included in the contact may also be archived. For simplicity of explanation, the text below refers mostly to archiving of selected content.","\u201cIn addition to or instead of the user, the server  may be responsible for determining when to archive contacts. For example, the server  may perform regular archiving of content. The server searches the database for contacts ready to be archived. The contact is ready to be archived when a contact folder's association to a particular contact has expired. This means, for example, that the difference between the association's last modified data and the current date exceeds the configured number of days to wait until archiving. If a particular contact has multiple folders associations, the first association to expire may trigger the archive. The step of archiving may be performed at the earliest of the expiration times and dates.\u201d","Once a list of contacts needing to be archive is obtained, the server  instructs the recorder server  to begin archiving. The recorder server , in turn, interfaces with the extended storage  to copy content from the local drive, which may be a hard disk drive in the server  or any other shared hard disk drive, onto the extended storage's medium. The process of archiving may be performed in the background, in a manner that is transparent to the user.","When archiving is complete, the database is updated by the server  to reflect the archived status. According to one embodiment, a contact's content properties may be modified, and the association may be hidden.","If all associations for a contact have expired, the content and\/or metadata associated with the contact may be dismissed by the server instructing the recorder server to dismiss the contact.","According to an exemplary embodiment, content that is not archived may be purged during the archive process. For example, when the archive process begins for a contact with both audio and video content, but the configuration is to only archive audio content, the video content is purged when the archive process is completed.","A contact may have an association with multiple folders, and each association may have different archive, dismiss and purge dates. Therefore, according to an exemplary embodiment, archiving, dismissing, and purging may be performed according to a timeline including a union of all association's archive and purge dates. An exemplary timeline is shown in .","According to one embodiment, the time to archive is determined by the first archive date in the union of contact folder associations. For archiving, the first date is used as a reliability measure such that once an archive date and time have passed in any folder, at least the selected content is archived. If the archive was postponed until the last date in the union, one folder could prevent the archive from occurring for a considerably long time after some of the other folders required to be archived.","The time to dismiss the content may be determined by the last archive date in the union. This keeps the content \u201conline\u201d or stored in the local storage until all associations have expired. This allows playback within any folder whose association has not expired.","The time to purge may be determined by the last purge date in the union. This keeps the archived content available until the last purge date for all of contact folder associations.","Referring to the exemplary timeline shown in , for each association, the content is configured to be online when the upper line is present, archived when the middle line is present, and purged when the lower line is present. In , three contact folder associations are represented. Each association has different archive and purge dates. As indicated in , archiving occurs at the first archive date, which is associated with folder . Dismissing occurs at the last archived date, e.g., the date associated with folder . Purging occurs at the last purge date, which is associated with folder .",{"@attributes":{"id":"p-0098","num":"0097"},"figref":"FIG. 6","b":["600","610","620","610","620","630"]},"For restoring archived content and\/or metadata, a user may perform a contact search, specifying the search criteria and the archive content to be included. The user's criteria is gathered and submitted to the database.","According to an exemplary embodiment, the first request to the database requests only the number of contacts to be returned. If the number of contacts is large, e.g., over 100 contacts, a dialog box may be presented to the user with the option of aborting the search or returning all the contacts. If the user requests all contacts, a second request may be made that returns the set of contacts. If the number of contacts is small, e.g., less than 100 contacts, a second request may be immediately made that returns the set of contacts.","Once a list of contacts has been returned from a search, if one or more of the contacts are selected, the user may \u201ccopy\u201d the selected requests into a specific folder. This \u201ccopy\u201d really amounts to the creation of a folder association for each contact selected. If an association for the selected contact already exists in the folder, its \u201clast modified\u201d time may be updated to the when the \u201ccopy\u201d occurred. If the association is hidden, it may be made visible.","According to an exemplary embodiment, if, during a \u201ccopy\u201d, one or more of the contacts has content that is not online but is archived, the user may choose to return no content, only part of the content (audio or video), or all of the content. If the user chooses to restore no content, then no additional work is done, and the contacts appears in the folder's contact list with the indication that there is archived content. If the user chooses to restore the content, a request is made to the server  to restore a given set of contacts. The server may perform some check to assure that the content is available.","For example, if a user selects some contact with archived audio content but not video content, and the user then requests that only video content be restored, the user is informed that the selection has filtered out all contacts, and a restore request is no submitted. If at least one of the contacts has archived video content, however, a request for the contact that actually has archived video is submitted. The other contacts without archived video may still be \u201ccopied\u201d in to the destination folder.","According to another embodiment, when the user chooses to restore content, the content that was archived is automatically restored, regardless of the type of content. According to this embodiment, the user does not choose which archived content to restore.","The restore request may be queued and subsequently executed by processing thread in the server. The server  takes the request, queries the database for any necessary information, and passes the request to the recorder server  in a function call that runs immediately. According to an exemplary embodiment, the recorder server  asynchronously performs the restore, notifying the server  with two categories of messages: time-level and batch-level. A time-level message provides updates for each time in the batch (successful restore, failed restore, e.g.). Batch-level messages provide updates to the database as a whole (complete, suspended, etc.).","For a successful restore notification, the server  updates the database  to reflect the new availability of content. For a failure restore notification, the server updates the database to reflect the inability to restore the content. For a suspended restore notification, e.g. when the recorder server  doesn't have immediate access to the data, which may happen if the tape holding the data is not currently loaded on the tape drive, the server  updates the database  to reflect the suspension in restoring the content. Since the situation causing the problem can be easily fixed, e.g. loading the tape, a suspension is not considered a failure.","According to an exemplary embodiment, once a request has been suspended, the only way to resume the request is through manually requesting the server attempt the restore again (presumably after correcting the situation that caused the suspension in the first place).","When a particular item in a batch is suspended, the recorder server  may continue processing the rest of the batch. The recorder server then continues processing other batches in its queue.","On a batch-level notification, the server emails the user (and possibly an IT administrator) a summary of the restore process. This summary includes how many items were restored successfully, how many failed, how many were suspended, and an itemized status report for each item in the batch. An email may be sent to an IT administrator if any of the items were suspended.","When the recorder server  receives a request to perform a restore, it interacts directly with the extended storage system . The request to the recorder server may contain a batch of one or more content items to restore. This batch is passed directly to the extended storage , with slight modifications to the batch's data to match the needs of the extended storage system.","According to an exemplary embodiment, the extended storage  may include and\/or support functionality that may be used to increase the efficiency of the restore (such as a tape system organizing the items in the batch based on location on the tape). In the end, the content is copied from the extended storage system onto a local storage, such as a hard disk drive in the recorder server .","According to one embodiment, a user may cancel a restore request in, e.g., the client or in a separate restore manager utility. The server may completely cancel any request for which processing has not started. For a process currently being processed, an individual restore may be cancelled.","According to this embodiment, when the server receives a cancel restore command, it does one of two things depending on if the given restore is currently being processed. If the restore is not currently being processed, the restore is removed from the queue and an email is sent to the requesting user with a summary of the restore process, and this summary will state all the items in the restore were cancelled. If the restore is currently being processed, the server sends a cancel current restore command to the recorder server, which stops processing the current restore after completing the current item. Asynchronous notifications are still given for each item in the restore, with \u201ccancelled\u201d notifications going out for all post-cancel-request items in the restore. A final \u201cbatch complete\u201d notification is sent out, at which point the server may email the requesting user with the summary of the restore process.","If a playback is attempted of a contact with archived content, the archived content appears to not exist. In this scenario, queries to the database may not return information other than that content exists (implying it is online) or content doesn't exist (implying it is archived or truly doesn't exist). Requests to the server to playback content that is not on its local storage will fail. The archived contact may be restored, however, and then the restored content may be played back from the local storage.",{"@attributes":{"id":"p-0115","num":"0114"},"figref":["FIGS. 7A-7F","FIG. 7A","FIGS. 7B-7F"]},"Referring to , an Archive contact is included on the left of the screen. Upon selecting any contact folder, the properties tab shown in the right portion of the screen is displayed. This screen allows the user to indicate when a contact should be archived and\/or purged and what part of the content should be archived. In the example shown, contacts in the \u201cArchive Tests\u201d folder are configured to have the \u201caudio\u201d and \u201cvideo\u201d content archived after 5 days.","According to an exemplary embodiment, right clicking on a contact folder brings up a menu such as that shown in  that contains options to \u201cRestore\u201d and \u201cSearch\u201d. When the \u201cRestore\u201d option is selected, the screen shown in  is displayed. Using this screen, search criteria may be entered. Then, by clicking on \u201csearch\u201d, the results screen shown in  is displayed. The results displayed include on-line contacts and archived contacts. These contacts may be listed with different folder icons for on-line contacts and archived contacts, thus allowing a user to easily determine what contacts are archived.","By selecting one or more contacts shown in  and then clicking the \u201cRestore\u201d button, the \u201cCopy and Restore Contacts Wizard\u201d is launched, as illustrated in . These screens relate to a three step copy\/restore process. The first step is to select or create a contact folder for which the new contact folder association for the restored contact will be created, using the screen shown in . Then, the content that was archived is restored.","According to one embodiment, options for restoring may be configured using a screen such as that shown in . For example, a user may select what content within a contact to restore. Alternatively, all the content that was archived may be restored.","Next, using the screen shown in , feedback regarding whether or not the request was successfully submitted is provided. The user may subsequently be notified via, for example, e-mail, of the status of the requested submission.","Referring again to the screen shown in , if a user selects the \u201cSearch\u201d option, a similar process is launched as described above with regard to the \u201cRestore\u201d Option. The Search process differs in that it does not include archived contacts. Also, while the \u201cRestore\u201d process only allows the selected contacts to be restored, the \u201cSearch\u201d process allows a user to go to a contact, review the contact, and export the contact.",{"@attributes":{"id":"p-0122","num":"0121"},"figref":["FIG. 8","FIG. 7A"],"b":["800","810","820","830"]},"According to exemplary embodiments, methods and systems are provided for archiving recorded interactions and for retrieving stored interactions in an efficient manner.","It should be understood that the foregoing description and accompanying drawings are provided as examples only. A variety of modifications are envisioned that do not depart from the scope and spirit of the invention. The above description is intended by way of example only and is not intended to limit the present invention in any way."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 3A-3F"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIGS. 7A-7G"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
