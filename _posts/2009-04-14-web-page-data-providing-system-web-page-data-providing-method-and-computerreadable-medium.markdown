---
title: Web page data providing system, web page data providing method, and computer-readable medium
abstract: A Web server machine , when receiving a request for a content containing a description of a campaign advertisement from any one of user machines  (step S), reads a parts name defined as a structure (element) of Web page data for displaying the content from a content management table  (steps S through S, step S), acquires parts  specified by the parts name from a file server machine , generates the Web page data by combining the acquired parts  (step S, steps S through S), and sends the generated Web page data as a response to the user machine  (steps S, S, S). It is therefore feasible to dynamically change details of the Web page, and the Web page is listed up in a high order of a search result of a search engine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08001180&OS=08001180&RS=08001180
owner: Fujitsu Limited
number: 08001180
owner_city: Kawasaki
owner_country: JP
publication_date: 20090414
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","FIELD","BACKGROUND","SUMMARY","DESCRIPTION OF EMBODIMENTS"],"p":["This application is based upon the benefit of priority of the prior Japanese Patent Application No. 2008-142460, filed on May 30, 2008, the entire contents of which are incorporated herein by reference.","The disclosures made herein relates to a system, a method, and computer-readable medium for providing Web page data.","As mentioned in documents such as Patent document 1, it is known that a scheme that a Web page creation support server searches a template of the Web page data in a way that uses a keyword designated by a user terminal as a search condition, and the user terminal creates the Web page data by use of the searched template and uploads the Web page data to a Web server.","According to this scheme, in the case of trying to change at least some elements of details of the Web page corresponding to a time of year, an editor must edit the Web page data and must upload the Web page data to the Web server each time.","As mentioned in documents such as Patent document 2, it is known that a scheme that the Web server, upon receiving a request, starts up a CGI [Common Gateway Interface] program, a CGI function utilized by the CGI program executes a process of replacing each of the keywords listed up in the template with data associated with the keyword, and the Web server sends, as a response, the Web page data for displaying the template after the replacement process.","According to this scheme, if the data associated with the keyword changes moment by moment, it follows that values in the template displayed based on the Web page data given as the response from the Web server change moment by moment. Herein, URL [Uniform Resource Locator] must contain parameters in order to start up the CGI program, however, a general type of search engine determines the Web page having the URL containing the parameters to be a dynamic Web page and therefore does not list up the Web page in a high order of a search result.\n\n","According to an aspect of the invention, a Web page data providing system includes: a first reading unit configured to read, when receiving a request including a piece of location information from any one of Web clients via a network, out of a content management table stored with some pieces parts identifying information selected from within plural pieces of parts identifying information for specifying parts described in a markup language as some elements of Web page data and the location information allocated to the single Web page data organized by the parts specified by some pieces of selected parts identifying information in a way that associates the parts identifying information and the location information with each other, the parts identifying information associated with the location information included in the received request; a second reading unit configured to read, from a parts management table stored with associated information organized by associating the parts identifying information of the parts with storage location information for specifying a storage location of the parts with respect to every parts, the storage location information associated with the parts identifying information read out by the first reading unit; a generating unit configured to acquire the parts from the storage location specified by the storage location information read out by the second reading unit, and to generate the single Web page data based on the acquired parts; and a transmitting unit configured to transmit the Web page data generated by the generating unit to the Web client that sends the request.","The purpose and advantages of the embodiments will be realized and attained by means of the elements and combinations particularly pointed out in the claims.","It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and are not restrictive of the embodiments, as claimed.","A direct selling system will hereinafter be described by way of an embodiment with reference to the drawings.","Note that the direct selling system according to the preset embodiment is a system for directly selling company's products of a maker administering a Web site to system users via a network.","<<Configuration>>",{"@attributes":{"id":"p-0033","num":"0035"},"figref":"FIG. 1"},"As illustrated in , the direct selling system according to the embodiment includes a user machine , a Web server machine , a file server machine , and an administrator machine .","One or more user machines  are connected to a first network N and are enabled to perform communications with unillustrated computers connecting with the first network N. The Web server machine  is connected to a second network N and is enabled to perform the communications with the unillustrated computers connecting with the second network N. The file server machine  and the administrator machine  are connected to a third network N and are enabled to perform the communications with the unillustrated computers connecting with the third network N.","The first network N is connected via a first firewall FW to the second network N, and the second network N is connected to a second firewall FW to the third network N.","Herein, the first firewall FW is a computer which permits a communication packet from the second network N to transmit but cuts off the communication packet from the third network N. Further, the second firewall FW is a computer which permits the communication packet from the second network N to transmit but cuts off the communication packet from the first network N.","This scheme enables the user machine  to access the Web server machine  but disables the user machine  from accessing the file server machine  and the administrator machine . On the other hand, this scheme enables the administrator machine  to access the Web server machine  but disables the administrator machine  from accessing the user machine . Accordingly, the second network N functions as a DMZ [DeMilitarized Zone].",{"@attributes":{"id":"p-0039","num":"0041"},"figref":"FIG. 2","b":"10"},"The user machine  is a personal computer to which a Web browser function that will be mentioned later on is added. Accordingly, the user machine  is constructed of a display unit including a liquid crystal display etc, an input unit including a keyboard, a mouse, etc, and a main body connected to these units , . Further, the main body has a communication unit , a storage unit , a CPU [Central Processing Unit] , and a main memory unit , which are built in the main body.","The communication unit is a unit for transferring and receiving data to and from other computers on a first network N. The communication unit is exemplified by a LAN adaptor. The storage unit is a unit for recording a variety of programs and various items of data. The CPU is a unit which executes the processes according to the program in the storage unit . The main memory unit is a unit for cashing the program and the data and for developing an operation area.","The storage unit of the user machine  is stored with operating system (OS) software . The OS software  is software for providing an API [Application Programming Interface] and an ABI [Application Binary Interface] to a variety of applications, managing storage areas of the storage unit and the main memory unit , managing a process and a task, conducting file management, providing a variety of setting tools and editors to utility applications, and allocating windows to a plurality of tasks for multiplexing a screen output. Further, the OS software  includes a communication interface program . The communication interface program is a program for transferring and receiving the data to and from the communication interface programs of other computers connected via the communication unit . The communication interface program is based on, e.g., a TCP\/IP [Transmission Control Protocol\/Internet Protocol] stack.","Further, the storage unit of the user machine  is stored with Web browser software . The Web browser software  is software for adding, to the computer, a Web browser function for acquiring the Web page data from the Web server according to an instruction from an operator and displaying the Web page. To be specific, (the CPU based on) the Web browser software , when given an instruction from the operator to click a link button within the Web page or to input the URL [Uniform Resource Locator] into a Web browser screen or an instruction to acquire the Web page data through image tags or frame tags described within the Web page data, transmits a request message for requesting the transmission of the Web page data designated by the URL in this instruction to the Web server, then receives a response message from the Web server, and displays the Web page on a display unit on the basis of the Web page data in a body of the response message.",{"@attributes":{"id":"p-0044","num":"0046"},"figref":"FIG. 3","b":"20"},"The Web server machine  is a general-purpose computer to which a Web server function, which will be described alter on, is added. Accordingly, the Web server machine  includes a communication unit , a storage unit , a CPU , and a main memory unit . The respective units -are units exhibiting the same functions as those of the user machine .","The storage unit of the Web server machine  is stored with operating system (OS) software . The OS software  is software exhibiting the same function of the user machine  and includes a communication interface program ","Further, the storage unit of the Web server machine  is stored with Web page data  and a Web server program . The Web page data  is data for displaying the Web page and is specifically exemplified such as HTML [HyperText Markup Language] image and image data. The Web pages displayed based on the Web page data  configure a Web site. Namely, the Web site is configured by the Web server machine . Further, the Web page data  in the embodiment contains Web page data for displaying a top page of the Web site.","The Web server program  is a program for transmitting the Web page data  in response to a request given from a Web client (a Web page data acquiring function contained in the Web browser software ). Moreover, the Web server program  in the embodiment is also a program for acquiring, when receiving a request designating a predetermined URL from the Web client, the Web page data for displaying a content that will be mentioned later on from an assembly program that will hereinafter be described and transmitting the Web page data to the Web client. Details of processes executed by the CPU according to the Web server program  will be explained later on with reference to .","Further, the storage unit of the Web server machine  is stored with a content management table .",{"@attributes":{"id":"p-0050","num":"0052"},"figref":"FIG. 4","b":"24"},"The content management table  is a table for managing, as a content, the Web page on which to describe a campaign advertisement about commercial products that are sold directly to users by an administrator (maker) of the Web site configured by the Web server machine . As illustrated in , each of records of the content management table  includes fields such as a [content code], a [content name], a [content], a [model number], a [URL], a [start date\/time], an [end date\/time], a [sold-out flag], and a [substitute page]. The [content code] field is a field recorded with a content code defined as identifying information for specifying the content. The [content name] field is a field recorded with a name of the content. The [content] field is a field recorded with a structure of the Web page data for displaying the content. Note that the structure of the Web page data is specified by a name of parts that will be mentioned later on. The [model number] field is a field recorded with a model number for specifying the commercial product described in the campaign advertisement in the content. The [URL] field is a field recorded with the URL defined as location information allocated to the content. The [start date\/time] field and the [end date\/time] field are fields respectively recorded with a start date\/time and an end date\/time of a public viewing period of the content. The [sold-out flag] field is a field recorded with a sold-out flag for defining which Web page data of the substitute page and the top page that will be described later on is given as a response if an in-stock count of the commercial products related to the content is \u201c0\u201d. Incidentally, there are made a definition that the Web page data  of the substitute page which will be mentioned later on should be given as the response if the sold-out flag is set in a [1] status, and a definition that the Web page data of the top page should be given as the response if the sold-out flag is set in a [0] status. The [substitute page] field is a field recorded with the URL of the substitute page given as the response to the Web client if the sold-out flag is set in the [1] status in a case where the in-stock count of the commercial products related to the content is \u201c0\u201d. Note that the [substitute page] field is blank when if the sold-out flag is set in the [0] status.","Further, the Web server machine  has a storage unit in , which is stored with an assembly program . The assembly program  is a program for generating Web page data for displaying contents from parts that will be described later on. Details of processes executed by a CPU based on the assembly program  will be explained later on with reference to .",{"@attributes":{"id":"p-0053","num":"0055"},"figref":"FIG. 5","b":"30"},"The file server machine  is a general-purpose computer to which a file server function that will be mentioned later on is added. Hence, the file server machine  includes a communication unit , a storage unit , a CPU , and a main memory unit . The respective units -are units exhibiting functions equal to those of the user machine .","The storage unit of the file server machine  is stored with operating system (OS) software . The OS software  is software exhibiting the same function as that of the user machine  and includes a communication interface program ","Further, the storage unit of the file server machine  is stored with a file transmission program . The file transmission program  is a program for transmitting, when requests for files are given based on a predetermined communication protocol from other computers connecting with the second network N and the third network N, the designated files to those computers. Note that the predetermined communication protocol is exemplified such as FTP [File Transfer Protocol].","Moreover, the storage unit of the file server machine  is stored with parts . The parts  are defined as texts described in a markup language by way of part of Web page data for displaying the contents.",{"@attributes":{"id":"p-0058","num":"0060"},"figref":"FIGS. 6 through 8","b":"33"},"The parts  are the texts of which document-oriented definitions and header fields of the Web page data are described in the markup language, and [$HEADER.TXT] is given as a file name. Note that the parts  exemplified in  are created so that the document-oriented definitions and the header fields are common to whichever Web page data provided to the user machine  by the Web server machine  in the embodiment.","The parts  illustrated in  are the texts in which a substance of the body of the Web page data is described in the markup language, and [$CAMPAIGN01.TXT] is given as a file name. Note that the parts  exemplified in  are created as part of data for displaying contents corresponding to one of a plurality of campaign advertisements.","The parts  illustrated in  are the texts in which a second half of the body of the Web page data is described in the markup language, and [$FOOTER.TXT] is given as a file name. It is to be noted that the parts  exemplified in  are created so that a footer field is common to whichever Web page data provided to the user machine  by the Web server machine  in the embodiment.","Further, the storage unit of the file server machine  is stored with a parts management table .",{"@attributes":{"id":"p-0063","num":"0065"},"figref":"FIG. 9","b":"34"},"The parts management table  is a table for recording items of information on the parts . As illustrated in , each record in the parts management table  has fields such as a [parts code], a [parts name], a [storage location], and an [output character]. The [parts code] field is a field recorded with a parts code defined as identifying information for specifying the parts . The [parts name] field is a field recorded with a name of the parts . The [storage location] field is a field recorded with a piece of storage location information for specifying a location where the parts  are stored. Incidentally, the storage location information is exemplified by, e.g., a combination of a path name and the file name. The [output character] field is a field recorded, if parts are not the texts described in the markup language as in the case of the parts  but a simple string of characters, with this string of characters. When the [output character] field is recorded with the string of characters, the [storage location] field is blanked.","Further, the storage unit of the file server machine  is stored with a stock management table .",{"@attributes":{"id":"p-0066","num":"0068"},"figref":"FIG. 10","b":"35"},"The stock management table  is a table for recording an in-stock count of commercial products about which a campaign advertisement is described in the contents. As illustrated in , each record of the stock management table  has fields such as a [model number] and an [in-stock count]. The [model number] field is a field recorded with a model number of the commercial product. The [in-stock count] field is a field recorded with an in-stock count of the commercial products. Note that the in-stock count recorded in the [in-stock count] field is designed so that when a transaction of the commercial products is completely settled with the user through an unillustrated settlement function, the number of the sold products is subtracted from the in-stock count.",{"@attributes":{"id":"p-0068","num":"0070"},"figref":"FIG. 11","b":"40"},"The administrator machine  is a personal computer to which a function of editing the contents and the parts  described above is added for the administrator who maintains a Web site configured by the Web server machine . Accordingly, the administrator machine  includes a display unit , an input unit , a communication unit , a storage unit , a CPU , and a main memory unit . The respective units -are the units exhibiting the same functions as those of the user machine .","The storage unit of the administrator machine  is stored with operating system (OS) software . The OS software  is the software exhibiting the same function as that of the user machine  and contains a communication interface program ","Further, the storage unit of the administrator machine  is stored with an editing program . The editing program  is a software component for adding the function of editing the contents and the parts  described above to the computer. Details of processes executed by the CPU according to the editing program  will be described later on with reference to .","<Process>>","<Edit>","When the administrator operates the input unit of the administrator machine  and thus gives an instruction of executing the editing program , the CPU reads the editing program  from the storage unit and starts an edit process.",{"@attributes":{"id":"p-0075","num":"0077"},"figref":"FIG. 12"},"In first step S after starting the edit process, the CPU displays a main screen on the display unit ",{"@attributes":{"id":"p-0077","num":"0079"},"figref":"FIG. 13","b":"51"},"The main screen  exemplified in  contains five buttons -. The first button is a content modification button which is clicked by the administrator who tries to modify the information on the contents registered in the content management table  (see ) in the Web server machine . The second button is a content new-creation button which is clicked by the administrator who tries to newly register the information on the contents in the content management table . The third button is a parts modification button which is clicked by the administrator who tries to modify the information on the parts  registered in the parts management table  within the file server machine . The fourth button is a parts new-creation button which is clicked by the administrator who tries to newly generate the parts . The fifth button is an end button which is clicked by the administrator who tries to finish the edit process in .","The CPU , after displaying the main screen  exemplified in  on the display unit , advances the processing to step S.","In step S, the CPU stands by till any one of the five buttons on the main screen  is clicked. Then, when any one of the buttons is clicked, the CPU advances the processing to step S.","In step S, the CPU determines whether or not the button with its click being detected in step S is the end button . Then, if the button with its click being detected in step S is the end button , the CPU terminates the edit process in . Whereas if the button with its click being detected in step S is the button other than the end button , the CPU diverts the processing to step S from step S.","In step S, the CPU executes an edit acceptance subroutine.",{"@attributes":{"id":"p-0083","num":"0085"},"figref":"FIGS. 14A and 14B"},"After starting the edit acceptance subroutine, in first step S, the CPU determines whether or not the button with its click being detected in step S is the content modification button . Then, if the button with its click being detected in step S is the content modification button , the CPU advances the processing to step S.","In step S, the CPU displays a content designation screen on the display unit . The content designation screen contains, though not illustrated, a drop-down list box having a function of displaying a list box in which the content names registered in the content management table  (see ) within the Web server machine  are listed up, and a determination button for determining the content name inputted to the drop-down list box as a designation target content name. The content designation screen may also be, however, a screen listing up the content names detected from the content management table  with all of the content names or the model numbers or some thereof serving as search conditions and containing a selection means such as a button for designating any one of the listed-up content names. In the latter case, however, it follows that before the content designation screen is displayed on the display unit , a search condition input screen is displayed on the display unit . The search condition input screen contains an input box such as a text box to which all of the content names or the model numbers or some thereof are inputted and an execution button used for the Web server machine  to search the content management table  with the string of characters inputted to the input box serving as the search conditions.","In next step S, the CPU stands by till the unillustrated determination button on the content designation screen is clicked. Then, when the determination button is clicked, the CPU advances the processing to step S.","In step S, the CPU reads, from the content management table , a record associated with the content name inputted to the drop-down list box when the determination button is clicked. Thereafter, the CPU advances the processing to step S.","On the other hand, if the button with its click being detected in step S in  is not the content modification button , the CPU diverts the processing to step S from step S.","In step S, the CPU determines whether or not the button with its click being detected in step S is the content new-creation button . Then, if the button with its click being detected in step S is the content new-creation button , the CPU diverts the processing to step S from step S.","In step S, the CPU displays the content edit screen on the display unit ",{"@attributes":{"id":"p-0091","num":"0093"},"figref":"FIG. 15","b":"52"},"The content edit screen  exemplified in  contains eight pieces of text boxes -, a pair of radio buttons , , and two pieces of buttons , . The eight text boxes -are input boxes to which a content code, a content name, a parts name, a model number, a URL (Uniform Resource Locator) of the content, a start date\/time and an end date\/time of a public viewing period of the content, and a URL of a substitute page are respectively inputted. The two radio buttons , are the selection means for selecting a status of a sold-out flag about the content. The first button of the two buttons , is a registration (overwriting) button which is clicked by the administrator who tries to register (overwrite) the information inputted to the eight text boxes -and any one of the pair of radio buttons , into the content management table . The second button is a stop button which is clicked by the administrator who tries to stop editing the content.","Note that when executing step S via step S, the CPU displays the content edit screen  on the display unit in a state of blanking the eight text boxes -","Conversely, when executing step S via step S, the CPU displays the content edit screen  on the display unit in a state of inputting the information contained in the record read out in step S to the eight text boxes -and a corresponding piece of radio button of the pair of radio buttons , ","In next step S, the CPU stands by till any one of the two buttons , on the content edit screen  is clicked. Then, when any one of these buttons is clicked, the CPU advances the processing to step S.","In step S, the CPU determines whether or not the button with its click being detected in step S is the registration (overwriting) button . Then, if the button with its click being detected in step S is not the registration (overwriting) button (i.e., when the clicked button is the stop button ), the CPU diverts the processing from step S, terminates the edit acceptance subroutine in , then loops the processing back to step S in , and displays the main screen  on the display unit . While on the other hand, if the button with its click being detected in step S is the registration (overwriting) button , the CPU advances the processing to step S.","In step S, the CPU registers, into the content management table  within the Web server machine , the information inputted to the eight text boxes -and any one of the pair of radio buttons , when clicking the registration (overwriting) button . Herein, if the record containing the same content name exists in the content management table , the CPU overwrites the information concerned to this record. Conversely, if none of the record containing the same content name exists in the content management table , the CPU adds the information as a new record to the content management table . After executing this sort of registration process, the CPU terminates the edit acceptance subroutine in , then loops the processing back to step S in , and displays the main screen  on the display unit ","On the other hand, in step S in , if the button with its click being detected in step S in  is not the content new-creation button , the CPU advances the processing to step S in .","In step S, the CPU determines whether or not the button with its click being detected in step S in  is the parts modification button (see ). Then, if the button with its click being detected in step S in  is the parts modification button , the CPU advances the processing to step S.","In step S, the CPU displays a parts designation screen on the display unit . The parts designation screen contains, though not illustrated, a drop-down list box having a function of displaying a list box in which the parts names registered in the parts management table  (see ) within the file server machine  are listed up, and a determination button for determining the parts name inputted to the drop-down list box as a designation target parts name. The parts designation screen may also be, however, a screen listing up the parts names detected from the parts management table  with all of the parts names or some thereof serving as search conditions and containing a selection means such as a button for designating any one of the listed-up parts names. In the latter case, however, it follows that before the parts designation screen is displayed on the display unit , a search condition input screen is displayed on the display unit . The search condition input screen contains an input box such as a text box to which all of the parts names or some thereof are inputted and an execution button used for the file server machine  to search the parts management table  with the string of characters inputted to the input box serving as the search conditions.","In next step S, the CPU stands by till the unillustrated determination button on the parts designation screen is clicked. Then, when the determination button is clicked, the CPU advances the processing to step S.","In step S, the CPU reads, from the parts management table , a record associated with the parts name inputted to the drop-down list box when the determination button is clicked, and further, if the storage location information is contained in the readout record, reads the parts  from the storage location specified by the storage location information. Thereafter, the CPU advances the processing to step S.","On the other hand, if the button with its click being detected in step S in  is not the parts modification button (i.e., the clicked button is the parts new-creation button ), the CPU diverts the processing to step S from step S.","In step S, the CPU displays a parts edit screen on the display unit ",{"@attributes":{"id":"p-0105","num":"0107"},"figref":"FIG. 16","b":"53"},"The parts edit screen  exemplified in  contains four pieces of text boxes -and two pieces of buttons , . The four text boxes -are input boxes to which a parts code, a parts name, a text, and a file name are respectively inputted. The first button of the two buttons , is a registration (overwriting) button which is clicked by the administrator who tries to store the text inputted to the third text box as the parts  and to register (overwrite) the information inputted to the three remaining text boxes , , into the parts management table . The second button is a stop button which is clicked by the administrator who tries to stop editing the parts.","Note that when executing step S without via step S, the CPU displays the parts edit screen  on the display unit in a state of blanking the four text boxes -","Conversely when executing step S via step S, the CPU displays the parts edit screen  on the display unit in a state of inputting the information contained in the record read out in step S and the parts  to the four text boxes -. If the record read out in step S contains none of the storage location information, the CPU displays the parts edit screen  on the display unit in a state of blanking the fourth text box and inputting the string of characters in the [output character] field of the record to the third text box ","In next step S, the CPU stands by till any one of the two buttons , on the parts edit screen  is clicked. Then, when any one of the buttons is clicked, the CPU advances the processing to step S.","In step S, the CPU determines whether or not the button with its click being detected in step S is the registration (overwriting) button . Then, if the button with its click being detected in step S is not the registration (overwriting) button (i.e., the clicked button is the stop button ), the CPU diverts the processing from step S, terminates the edit acceptance subroutine in , then loops the processing back to step S in , and displays the main screen  on the display unit . Whereas if the button with its click being detected in step S is the registration (overwriting) button , the CPU advances the processing to step S.","In step S, the CPU registers, into the parts management table  within the file server machine , the information inputted to the three text boxes , , when the registration (overwriting) button is clicked. Herein, if the record containing the same parts name exists in the parts management table , the CPU overwrites the information concerned to this record. Conversely, if none of the record containing the same parts name exists in the parts management table , the CPU adds the information as anew record to the parts management table . Further, if tags pursuant to the markup language are contained in the third text box when the registration (overwriting) button is clicked, the CPU stores the text contained in the third text box as the parts  in the file server machine . Reversely, if the tags pursuant to the markup language are not contained in the third text box when the registration (overwriting) button is clicked, the CPU stores the text contained in the third text box in the [output character] field of the record registered in the parts management table , and blanks the [storage location] field of the same record. After executing this sort of registration process, the CPU finishes the edit acceptance subroutine in , loops the processing back to step S in , and displays the main screen  on the display unit ","<Display>","A scheme in the Web server machine  is that upon switching ON a main power source, the CPU reads a Web server program  from the storage unit and starts a Web server process.",{"@attributes":{"id":"p-0114","num":"0116"},"figref":"FIG. 17"},"After starting the Web server process, in first step S, the CPU stands by till a request message is received from any one of the user machines . Then, when receiving the request message from any one of the user machines , the CPU advances the processing to step S.","In step S, the CPU searches the content management table  by use of the URL as a search condition, which is designated in the request message of which the reception is detected in step S.","In next step S, the CPU determines whether or not any record is detected as a result of the search in step S. Then, if the record is detected, the CPU advances the processing to step S.","In step S, the CPU gives an instruction of executing the assembly program  in a way that uses the content code, as an argument, contained in the record detected through the search in step S. Note that details of a process related to the assembly program  will be described later on.","In step S, the CPU stands by till the Web page data is received as a return value from the assembly program  of which the execution has been instructed in step S. Then, when receiving the Web page data from the assembly program , the CPU advances the processing to step S.","While on the other hand, as a result of the search in step S, if any record is not detected, the CPU diverts the processing to step S from step S.","In step S, the CPU reads the Web page data  to which the URL designated in the request message with its reception being detected in step S is allocated. Thereafter, the CPU advances the processing to step S.","In step S, the CPU generates a response message of which a body contains the Web page data received from the assembly program  in step S or the Web page data  read out in step S, and transmits the thus-generated response message to the user machine  that sends the request message. Thereafter, the CPU loops the processing back to step S and returns to the standby status till the request message is received from the any one of the user machines .","<Assembly>","The CPU is configured to read, as triggered by executing step S of the Web server process in , the assembly program  from the storage unit and to start an assembly process.",{"@attributes":{"id":"p-0125","num":"0127"},"figref":"FIG. 18"},"After starting the assembly process, in first step S, the CPU reads a record containing the content code given as the argument from the content management table  (see ).","Note that the CPU executing steps S through S and step S corresponds to the first reading unit described above.","In next step S, the CPU acquires a date\/time (year\/month\/date\/hour\/minute) at that point of time.","In next step S, the CPU determines whether or not the present date\/time acquired in step S is posterior to a value (start date\/time) registered in the [start date\/time] field of the record read out in step S. Then, if the present date\/time is anterior to the start date\/time, the CPU diverts the processing to step S from step S. Whereas if the present date\/time is posterior to the start date\/time, the CPU advances the processing to step S from step S. Note that the CPU advances the processing to step S also when the [start date\/time] field of the record read out in step S is blank.","In step S, the CPU determines whether or not the present date\/time acquired in step S is anterior to a value (end date\/time) registered in the [end date\/time] field of the record read out in step S. Then, if the present date\/time is posterior to the end date\/time, the CPU diverts the processing to step S from step S. Whereas if the present date\/time is anterior to the end date\/time, the CPU advances the processing to step S from step S. Note that the CPU advances the processing to step S also when the [end data] field of the record read out in step S is blank.","In step S, the CPU reads an in-stock count associated with the value (model number) registered in the [model number] field of the record read out in step S from the in-stock management table  (see ) within the file server machine .","In step S, the CPU determines whether the in-stock count read out in step S is equal to or larger than \u201c1\u201d or not. Then, if the in-stock count is equal to or larger than \u201c1\u201d, the CPU advances the processing to step S.","In step S, the CPU executes a Web page data generation subroutine.",{"@attributes":{"id":"p-0134","num":"0136"},"figref":"FIG. 19"},"After starting the Web page data generation subroutine, the CPU executes a first processing loop L.","In the first processing loop L, the CPU sequentially executes steps S through S with respect to values (parts names) given in the [content] field of the record read out in step S.","In step S, the CPU searches the parts management table  (see ) within the file server machine  in a way that uses the processing target parts name as a search condition.","In next step S, the CPU determines whether any record is detected or not as a result of the search in step S. Then, if the record can not be detected, the CPU exits the first processing loop L and the Web page data generation subroutine in  by diverting the processing from step S, and advances the processing to step S in . While on the other hand, if the record can be detected, the CPU advances the processing to step S.","In step S, the CPU reads the parts  from the storage unit on the basis of the value (storage location information) in the [storage location] field of the record searched in step S, and temporarily stores the parts  as the Web page data in the main memory unit . At this time, the CPU , if there exist the parts  already stored as the Web page data in the main memory unit , stores the readout parts  as an addition posterior to the already-existing parts . Thereafter, the CPU finishes this turn for the processing target parts in the first processing loop L.","It is to be noted that the CPU executing steps S through S and steps S through S corresponds to the second reading unit described above.","The CPU , after finishing executing steps S through S with respect to all of the values (parts names) registered in the [content] field of the record read out in step S, exits the first processing loop L and executes a second processing loop L.","In the second processing loop L, the CPU sequentially executes steps S through S with respect to each of the values (parts names) in the [content] field of the record read out in step S.","In step S, the CPU searches for the parts name of the processing target parts from within the parts  temporarily stored as the Web page data in the main memory unit in step S.","In next step S, the CPU determines whether or not the parts name of the processing target parts can be detected from within the parts  temporarily stored as the Web page data in the main memory unit in step S. Then, if the parts name of the processing target parts can not be detected from within the parts  temporarily stored as the Web page data in the main memory unit in step S, the CPU diverts the processing from step S, and terminates the turn for the processing target parts in the second processing loop L. Whereas if the parts name of the processing target parts can be detected from within the parts  temporarily stored as the Web page data in the main memory unit in step S, the CPU advances the processing to step S.","In step S, the CPU integrates the parts . To be specific, the CPU deletes the parts  associated with the processing target parts name from the main memory unit , and replaces the processing target parts name in the parts  temporarily stored as the Web page data in the main memory unit in step S with the parts  associated with this processing target parts name. Herein, if the parts  associated with the processing target parts name does not exist in the main memory unit , the CPU replaces the processing target parts name in the parts  read out to the main memory unit in step S with the value (string of characters) in the [output character] field of the record that is detected through the search in step S. In the way described above, after integrating the parts , the CPU finishes this turn for the processing target parts in the second processing loop L.","It is to be noted that the CPU executing steps S through S corresponds to the generating unit described above.","The CPU , after finishing executing steps S through S with respect to all of the values (parts names) registered in the [content] field of the record read out in step S, terminates the Web page data generation subroutine in  by exiting the second processing loop L, and advances the processing to step S in .","On the other hand, if the in-stock count read out in step S is \u201c0\u201d, the CPU diverts the processing to step S from step S.","In step S, the CPU determines whether the value in the [sold-out flag] field of the record read out in step S is [1] or [0]. Then, if the value in the [sold-out flag] field of the record read out in step S is [1], the CPU advances the processing to step S.","In step S, the CPU reads, from the storage unit , the Web page data  to which the value (URL) in the [sold-out flag] field of the record read out in step S is allocated, and temporarily stores the Web page data  in the main memory unit . Thereafter, the CPU advances the processing to step S.","On the other hand, if the value in the [sold-out flag] field of the record read out in step S is [0], the CPU diverts the processing to step S from step S.","In step S, the CPU reads the Web page data  of the top page from the storage unit , and temporarily stores the Web page data  in the main memory unit . Thereafter, the CPU advances the processing to step S.","In step S, the CPU returns the Web page data temporarily stored in the main memory unit at this point of time as a return value to the Web server process. Thereafter, the CPU finishes the assembly process in .","It is to be noted that the CPU executing step S and step S corresponds to the transmitting unit described above.","<<Operation and Effect>>","According to the embodiment, the Web server machine , when the content including the description of the campaign advertisement is requested by any one of the user machines  (step S), reads the parts names as the structure (element) of the Web page data for displaying the content from the content management table  (steps S through S, step S), acquires the parts  specified by the parts name from the file server machine , generates the Web page data by combining the acquired parts  (step S, steps S through S), and sends the generated Web page data as a response to the user machine  (steps S, S, S).","The Web server machine  operates in the way described above, and hence, if the parts name associated with the URL of the content changes in the content management table , it follows that the content displayed on the user machine  changes. For example, in the record specified by the content code [00010] in the content management table  in , if a combination of the parts names changes from [$HEADER, $CAMPAIGN01, $FOOTER, $FMVCE100_IMG, $FMVCE100_KAKAKU] to [$HEADER, $CAMPAIGN02, $FOOTER, $FMVCE100_IMG, $FMVCE100_KAKAKU], it follows that the content displayed on the user machine  changes.","Further, in the embodiment, the content can be generated by combining the parts names (steps S, S, S; N, S, S; N, S; YES, S through S). Accordingly, the administrator, even if not versed in the markup language, can simply generate the Web page data.","Further, in the embodiment, the parts  (having the parts name [$HEADER]) in  that is given a file name [$HEADER.TXT] and the parts  (having the parts name [$FOOTER]) in  that is given a file name [$FOOTER.TXT] are generated as common elements to every piece of Web page data provided to the user machines  by the Web server machine  according to the embodiment. On the Web site such as the direct selling site, the common elements are created in every page in many cases, however, according to the embodiment, the common elements to all of the Web pages configuring the Web site can be created uniformly such as [$HEADER] and [$FOOTER]. Moreover, even when the common elements need modifying, the common elements to all of the Web pages configuring the Web site can be modified uniformly by editing the parts  of [$HEADER] and [$FOOTER] (step S, S, S; N, S, S; N, S; N, S; YES, S through S). With this scheme, an operation of modifying the Web page data and uploading the data to the Web server is not required for all of the Web page data.","Further, in the embodiment, the parts name [$FMVCE100_IMG] and the parts name [$FMVCE100_KAKAKU] are described in the parts  (having a parts name [$CAMPAIGN01]) in  that is given a file name [$CAMPAIGN01.TXT], in which the parts  (having a file name [FMVCE100.img] associated with [$FMVCE100_IMG] is incorporated (registered) in the area (record) containing the description of [$FMVCE100_IMG] in the parts  of [$CAMPAIGN01] and the character string (see ) of [\u00a510,000] is incorporated (registered) in the area (record) containing the description of [$FMVCE100_KAKU] in the second processing loop L in . Therefore, the administrator changes the parts  associated with [$FMVCE100_IMG] into different image data and changes the string of characters associated with [$FMVCE100_KAKAKU] to [\u00a59,800] from [\u00a510,000] by use of the editing program  of the administrator machine , whereby some elements of the data associated with the parts of [$CAMPAIGN01] in the content specified by the content code [00010] can be properly changed.","Moreover, in the embodiment, if the public viewing period of the content is defined, as to the user machines , the content is displayed on the user machine  having an access within the public viewing period (steps S through S, S; YES, S; YES, S, S, S, S), and the top page is displayed on the user machine  having the access beyond this period (steps S through S, S; YES, S; N, S, S, S, S). Therefore, the campaign can be conducted corresponding to a time of year and a time zone.","Further, in the embodiment, even when within the public viewing period of the content and if there is no stock of the commercial products related to the campaign, the display of the content is stopped (steps S through S, S, S; NO, steps S through S, S, S). It does not therefore happen that the user might fall into a situation where the user was prompted by the campaign in the public viewing and was nevertheless unable to obtain the commercial product due to no stock. As a result, the administrator of the Web site can avoid giving an uncomfortable feeling to the user.","<<Explanation about Unit>>","In the embodiment discussed above, the respective units -in the user machine , the units -in the Web server machine , the units -in the file server machine , and the units -in the administrator machine  may each be constructed of a software component and a hardware component and may also be constructed of only the hardware component.","The software component can be exemplified by an interface program, a driver program, a table, and data and by a combination of some of these components. These components may be stored on a computer-readable medium that will be explained later on and may also be firmware that is fixedly incorporated into a storage device such as a ROM [Read Only Memory] and an LSI [Large Scale Integration].","Moreover, the hardware component can be exemplified by an FPGA [Field Programmable Gate Array], an ASIC [Application Specific Integrated Circuit], a gate array, a combination of logic gates, a signal processing circuit, an analog circuit, and other types of circuits. Among these components, the logic gate may include an AND, an OR, a NOT, a NAND, a flip-flop, a counter circuit, and so on. Moreover, the signal processing circuit may include circuit elements which execute addition, multiplication, subtraction, inversion, a sum-of-products operation, differentiation, and integration of signal values. Further, the analog circuit may include circuit elements which execute amplification, addition, multiplication, differentiation, integration, etc.","Note that the components building up the units -in the user machine , the units -in the Web server machine , the units -in the file server machine , and the units -in the administrator machine , are not limited to those exemplified above but may be other components equivalent thereto.","<<Explanation about Software and Program>>","In the embodiment discussed above, the pieces of software ,  in the user machine , the OS software , the programs , , the Web page data  and the content management table  in the Web server machine , the OS software , the file transmission program , the parts , and the tables ,  in the file server machine , the OS software  and the editing program  of the administrator machine , and the software components described above, may each include elements such as a software component, a procedure-oriented language based component, an object-oriented software component, class software, a component managed as a task, a component managed as a process, as a function, an attribute, a procedure, a subroutine (software routine), a fragment or segment of a program code, a driver, firmware, a microcode, a code, a code segment, an extra segment, a stack segment, a program area, a data area, data, a database, a data structure, a field, a record, a table, a matrix table, an array, a variable, and a parameter.","Further, the pieces of software ,  in the user machine , the OS software , the programs , , the Web page data  and the content management table  in the Web server machine , the OS software , the file transmission program , the parts , and the tables ,  in the file server machine , the OS software  and the editing program  of the administrator machine , and the software components described above, may each be described in a C-language, C++, Java (trademark of Sun Microsystems in U.S.A.), Visualbasic (trademark of Microsoft Corp. in U.S.A.), Perl, Ruby, and other programming languages.","Moreover, the instruction, the code, and the data contained in the pieces of software ,  in the user machine , the OS software , the programs , , the Web page data  and the content management table  in the Web server machine , the OS software , the file transmission program , the parts , and the tables ,  in the file server machine , the OS software  and the editing program  of the administrator machine , and the software components described above, may be transmitted to or loaded into a computer or a computer embedded into a machine or a system via a wired network card and a wired network or via a wireless card and a wireless network.","In the transmission or loading described above, the data signals flow via the wired network or the wireless network in the way of their being carried on, e.g., carrier waves (subcarriers). The data signals may also be, however, transferred intact as so-called baseband signals without depending on the carrier waves described above. These carrier waves are transmitted in an electric, magnetic, or electromagnetic mode, an optical mode, an acoustic mode, or other modes.","Herein, the wired network or the wireless network is a network built up by, e.g., a telephone line, a network line, a cable (including an optical cable and a metallic cable), a wireless link, a mobile phone access line, a PHS [Personal Handyphone System] network, a wireless LAN [Local Area Network], Bluetooth (trademark of the Bluetooth Special Interest Group), on-vehicle wireless type communications (including DSRC [Dedicated Short Range Communication]), and a network constructed of any one of those given above. Then, the data signals are used for transmitting the information including the instruction, the code, and the data to a node or the component on the network.","Note that the components configuring the pieces of software ,  in the user machine , the OS software , the programs , , the Web page data  and the content management table  in the Web server machine , the OS software , the file transmission program , the parts , and the tables ,  in the file server machine , the OS software  and the editing program  of the administrator machine , and the software components described above, are not limited those exemplified above and may also be other components equivalent thereto.","<<Explanation about Computer-Readable Medium>>","Any one of the functions in the embodiment discussed above may be coded and thus stored in a storage area on the computer-readable medium. In this case, the program for utilizing the function can be provided to the computer or the computer embedded into the machine or the system via the computer-readable medium. The computer or the computer embedded into the machine or the system reads the program from the storage area on the computer-readable medium and executes the program, thereby enabling the function thereof to be utilized.","Herein, the computer-readable medium connotes a recording medium capable of accumulating information such as the program and the data by electrical, magnetic, optical, chemical, physical, or mechanical action, and retaining the information in a readable-by-computer status.","The electrical or magnetic action can be exemplified by writing the data to the element on the ROM [Read Only Memory] constructed by use of a fuse. The magnetic or physical action can be exemplified by a phenomenon of toners to form a latent image on a paper medium. Note that the information recorded on the paper medium can be read, e.g., optically. The optical and chemical action can be exemplified by forming a thin film or a rugged portion on a substrate. Incidentally, the information recorded in the ruggedness-utilized mode can be read, e.g., optically. The chemical action can be exemplified by oxidation-reduction reaction on the substrate, forming an oxide film or a nitride film on a semiconductor substrate, or a photo-resist phenomenon. The physical or mechanical action can be exemplified by forming a rugged portion on an emboss card or forming a punch-hole in the paper medium.","Moreover, in the computer-readable mediums, some mediums can be detachably attached to the computer or the computer embedded into the machine or the system. The attachable\/detachable computer-readable medium can be exemplified by a DVD (including DVD-R, DVD-RW, DVD-ROM, DVD-RAM), a +R\/+RW, a BD (including BD-R, BD-RE, BD-ROM), a CD [Compact Disk] (including CD-R, CD-RW, CD-ROM), an MO [Magneto Optical] disk, other optical disk mediums, a flexible disk (including a floppy disk (Floppy is a trademark of Hitachi Ltd.)), other magnetic disk mediums, a memory card (CompactFlash (trademark of SanDisk Corp. in U.S.A.), SmartMedia (trademark of Toshiba Co., Ltd.), SD card (trademark of SanDisk Corp. in U.S.A., Matsushita Electric Industrial Co., Ltd., and Toshiba Co., Ltd.), Memory Stick (trademark of Sony Corp.), MMC (trademark of Siemens in U.S.A. and SanDisk Corp. in U.S.A.) etc), a magnetic tape, and other tape mediums, and a storage device including, as a built-in component, any one of those mediums. Some of the storage devices have a built-in DRAM [Dynamic Random Access Memory] or SRAM [Dynamic Random Access Memory].","Furthermore, some of the computer-readable mediums are fixedly installed in the computer or the computer embedded into the machine or the system. This type of computer-readable medium can be exemplified by a hard disk, a DRAM, an SRAM, a ROM, an EEPROM [Electronically Erasable and Programmable Read Only Memory], and a flash memory.","All examples and conditional languages recited herein are intended for pedagogical purposes to aid the reader in understanding the invention and the concepts contributed by the inventor to furthering the art, and are to be construed as being without limitation to such specifically recited examples and conditions, nor does the organization of such examples in the specification relates to a showing of the superiority and inferiority of the invention. Although the embodiments of the present inventions have been described in detail, it should be understood that the various changes, substitutions, and alterations could be made here to without departing from the spirit and scope of the invention.","With this configuration, the computer, when receiving the request designating the location information from any one the Web clients, operates so as to generate the Web page data on the basis of the parts specified by the parts identifying information associated with the location information at that point of time and to send the Web page data as a response. Therefore, if the parts identifying information associated with the location information changes, it follows that the details of the Web page data displayed on the Web client also change.","Besides, the location information contains none of parameters for starting up the CGI program for realizing a function of dynamically changing the details of the Web page, and hence it does not happen that the general type of search engine determines, as a dynamic Web page, the Web page based on the Web page data generated by the Web server program according to the present invention. As a result, it follows that this Web page can be listed up in the high order of the search result.","Note that an operation according to the Web page data providing program described above can be realized by a Web page data providing system or a Web page data providing method. Namely, the present invention may be the Web page data providing system including a plurality of means performing the same functions as those of respective means realized by the computer based on the Web page data providing program described above, and may also be a Web page data providing method by which the computer executes the same functions as those of the respective means by way of a plurality of steps. Further, the present invention may also be a readable-by-computer medium stored with the Web page data providing program described above.","Hence, according to the present invention, the details of the Web page can be dynamically changed, and the Web page can be listed up in the high order of the search result of the search engine."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0019"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0020"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0021"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0022"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0023"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0022","num":"0024"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0023","num":"0025"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0024","num":"0026"},"figref":"FIGS. 14A and 14B"},{"@attributes":{"id":"p-0025","num":"0027"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0026","num":"0028"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0027","num":"0029"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0028","num":"0030"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0029","num":"0031"},"figref":"FIG. 19"}]},"DETDESC":[{},{}]}
