---
title: Systems and methods for automatically converting web pages to structured shared web-writable pages
abstract: A system and method for an automatic conversion of web pages to shared structured web pages. An input web page is augmented with syntactic elements of a server-based software tool to create and customize group-writeable web pages. Sub-regions of the web page that are to be individually-editable items are identified, and syntactic elements are added to show where these editable regions begin and end, and where clickable buttons will appear that trigger the editing of an individual item, the addition of a new item, or other editing features. Also, syntactic elements are added that act as templates for the layout of any item to be added or modified. The conversion process includes parsing the Web page into an intermediate structure, adding information to individual tokens about the structures in which the tokens play a part, and them generating the new page while making one or more final passes through the intermediate structure from beginning to end.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07703004&OS=07703004&RS=07703004
owner: Palo Alto Research Center Incorporated
number: 07703004
owner_city: Palo Alto
owner_country: US
publication_date: 20040107
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This non-provisional application claims the benefit of U.S. Provisional Application No. 60\/479,904, filed Jun. 20, 2003.","1. Field of Invention","This invention generally relates to systems and methods for managing web pages.","2. Description of Related Art","Creating and updating web pages, managed and created by page authors, may rely on systems that support group work by allowing group members to view and modify shared information from their individual workstations. Group members may be required to install several types of software tools, where each tool manages a different type of information, in order to share group context that is needed to perform group activities. Therefore, group members require training to understand each tool. Since each tool often runs a separate window, group members must also manage limited screen space while copying content between applications.","There has been other work on recognizing structures in HTML. For example, a number of authors have described work on extracting information from tables and lists in HTML documents. However, these systems focus on extracting information from web pages for use in databases and data mining, while this invention uses the extracted information instead for the automatic construction of Web-writeable pages.","There are many existing approaches to keeping web pages up to date. A user, page author or group member can use a direct manipulation web page editor, such as, for example, Microsoft's FrontPage\u00ae or Macromedia's Dreamweaver\u00ae, a collaboration server, such as, for example, Wiki\u00ae, or a database-driven web application builder, such as, for example, Zope\u00ae. However, all of these approaches either require leaving the web browser used to access or view the web page, require learning a mark-up language and\/or the like, cause access and version control problems and\/or require writing custom software. Sparrow Web, which is a web page managing tool available from Xerox, provides an attractive alternative, particularly for authors who need to make frequent small changes to pages, or for group members who share responsibility for updating and\/or managing a web page.","Sparrow Web is a server-based software tool that allows group-writeable web pages to be created and customized. Before this invention, converting standard web pages in HTML format to group-writeable Sparrow Web type pages was largely a manual process. The page author would need to read the reference manual describing the syntactic elements that need to be added to a standard web page to convert the standard web page to a Sparrow Web type page, and then add those syntactic elements using a text editor or HTML editor. Alternatively, if a Sparrow Web type page with the appropriate layout and structure was available, the page author could use Sparrow Web's copy page feature to make a new Sparrow Web type page with that layout and structure. The page author could then copy the content, one item at a time, into that new Sparrow Web type page from the source web page that was being converted.","Although Sparrow Web supports structured editing of web pages from a web browser by multiple users simultaneously, updating and converting standard web pages to Sparrow Web type pages or equivalent web pages was difficult.","This invention provides systems and methods that permit a web page to be automatically converted into a Sparrow Web type page.","This invention separately provides systems and methods that reduce the cost of keeping web pages up to date.","This invention separately provides systems and methods that allow a web page to be automatically augmented with additional syntactic elements to conform to a format standard.","This invention separately provides systems and methods that allow a web page to be automatically augmented with additional syntactic elements to conform to a format required by a Sparrow Web type page.","This invention separately provides systems and methods that allow a web page to be automatically separated into editable items.","This invention separately provides systems and methods that determine the beginning and end of an editable item.","This invention separately provides systems and methods that determine which parts of the editable item are editable and which parts are fixed.","This invention separately provides systems and methods that emit the content of the resulting Sparrow Web type page.","This invention separately provides systems and methods that determine the beginning and ending of a sequence (region) of editable items.","In various exemplary embodiments of the systems and methods according to this invention, web pages are augmented with additional syntactic elements that identify editable regions, specify layout templates, and\/or provide clickable buttons that invoke the updating functions.","In various exemplary embodiments of the systems and methods according to this invention, an input Web page in an HTML format is augmented with Sparrow Web syntactic elements and a new output HTML page is produced. In particular, sub-regions of the input Web page that are to be individually-editable items are identified. Syntactic elements are added that show where these editable regions begin and end, and that show where clickable buttons will appear that trigger the editing of an individual item, the addition of a new item, or other editing features.","In various exemplary embodiments of the systems and methods according to this invention, the added syntactic elements act as templates for the layout of any item that will be added or modified. In various exemplary embodiments of the systems and methods according to this invention, a web-based user interface allows the user to specify what kinds of page elements to make editable and how items should be formatted by the system. The kinds of page elements that can become editable items include list items, table rows, text paragraphs, etc.","In various exemplary embodiments of the systems and methods according to this invention, converting the input web page to the new output HTML page includes parsing the web page into an intermediate structure, adding information to individual tokens about the structures in which such tokens play a part, and then generating the new web page during one or more final passes through the intermediate structure from beginning to end.","These and other features and advantages of this invention are described in or are apparent from the following detailed description of the systems and methods according to this invention.","In various exemplary embodiments of the systems and methods according to this invention, a labor-intensive process of converting web pages into Sparrow Web pages is at least partly automated so that this conversion can be done, for example, simply by filling in a web form displayed by the browser. A more attractive way to open up web pages and web sites for rapid structured editing by both individuals and groups is provided by allowing users editing the web page to view the editable elements of the page in a window of the browser without seeing the underlying page-defining code, such as the HTML code, that defines the page, and without the need to specify the format of the element so that the user can focus on updating the content of the element. The various exemplary systems and methods according to this invention also allow one or more members of a group to annotate a web page or collection of web pages on an accessible site on a network simply by making a converted copy of the web page for the private use of the user or group.","In various exemplary embodiments according to this invention, a web-based user interface allows the user to specify what kinds of page elements, including, for example, list items, table rows, and\/or text paragraphs, to make editable and how such page elements or items should be formatted. As discussed below in greater detail, an input web page defined using HTML code produces a new output HTML page, augmented with Sparrow Web syntactic elements. This new output HTML page is created by identifying sub-regions of the page that are to be made into individually-editable items, and by adding syntactic elements that show where these editable regions begin and end, and that define where selectable buttons will appear that trigger the editing of an individual item, the addition of a new item, and\/or any other desired editing feature. Syntactic elements that act as templates for the layout of items, that will be added or modified, can also be added. Further, as discussed in greater detail below in various exemplary embodiments, the conversion process includes parsing the web page into an intermediate structure, adding information to individual tokens about the structures in which such individual tokens play a part, and then generating the new page while making one final pass through the intermediate structure from beginning to end.","The following detailed discussion is directed to specific types of applications, namely tables, lists and paragraph editing, with which the conversion systems and methods according to this invention are usable. However, it should be appreciated that this is for ease of understanding and familiarity only, and should not be interpreted as limiting the types of applications with which the systems and methods according to this invention are usable.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 1","b":["100","100","110","120","130","140"]},"The conversion element type identifying portion  includes a selectable icon  that opens up a pull-down menu that lists the types of structures that can be converted into editable items by the exemplary system of this invention. The types of structures include, but are not limited to lists, tables and paragraphs. If the user selects one of the listed structures, the selected structure is displayed in the second user input portion  to identify the types of structures to be converted into editable items.","The editing icon placement identifying portion  includes a selectable icon  that opens up a pull-down menu that lists the various locations to place the editing icons in the output web page. The various locations include, but are not limited to, placement before and placement after the item contents. If the user selects one of the listed locations, the selected location is displayed in the third user input portion  to identify the location for placing editing icons in the output web page.","The output web page identifying portion  includes a fourth user input portion  where the user can type or cut and paste the address of an output web page created by the exemplary system of this invention. The text entered by the user will be used as an address for the output web page.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 2","b":["200","200","200","200","200"]},{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 3","FIG. 2"],"b":["300","200","300"]},{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 4","FIG. 2"],"b":["400","200","400","200","400"]},{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 5","FIG. 3","FIG. 5"],"b":["500","300","300","300","200","500","300","300","500","500"]},{"@attributes":{"id":"p-0070","num":"0069"},"figref":["FIG. 6","FIG. 6"],"b":["1000","2000","3000","4000","5000"]},{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 7","FIG. 6","FIG. 7"],"b":["3000","3100","3200","3300","3400","4000"]},{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 8","FIG. 7","FIG. 8"],"b":["3100","3105","3110","3115"]},"In step S, a convert lists flag is set, and operation continues to step S. In contrast, in step S, a determination is made whether only tables are to be converted. If so, operation continues to step S. Otherwise, operation jumps to step S.","In step S, a convert tables flag is set, and operation continues to step S. In contrast, in step S, a determination is made whether only paragraphs are to be converted. If so, operation continues to step S. Otherwise, operation jumps to step S.","In step S, a convert paragraphs flag is set, and operation continues to step S. In contrast, in step S, a determination is made whether both lists and tables are to be converted, with a preference for lists. If so, operation continues to step S. Otherwise, operation jumps to step S.","In step S, a convert lists and tables, preferring lists flag is set, and operation continues to step S. In contrast, in step S, a tables and lists, preferring tables flag is set to indicate that both tables and lists are to be converted, with a preference for tables. Operation then continues to step S, where operation returns to step S.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 9","FIG. 7","FIG. 9"],"b":["3200","3205","3210","3215"]},"In step S, a place editing icon after the item content flag is set, and operation continues to step S. In contrast, in step S, a place editing icon before the item content flag is set. Operation then continues to step S, where operation returns to step S.","As discussed above with respect to , web pages that conform to the HTML standard will have <HTML> and <\/HTML> tags surrounding most or all of the content of the page. Inside of the \u201cHTML\u201d tags, the <HEAD> and <\/HEAD> tags are included. Furthermore, the <BODY> and <\/BODY> tags are included after the \u201cHEAD\u201d tags and inside of the \u201cHTML\u201d tags. The HEAD tags contain overall meta information about the page, such as, for example, the page title, key words, JavaScript\u00ae function definitions, and the like. The BODY tags contain the actual visible content of the page, FORM tags, buttons, and other elements. However, not all displayable web pages conform to the HTML standard.","Some displayable web pages leave off or are missing the HTML, HEAD, and BODY tags altogether. Some web pages have some of these tags, but are missing other tags. For example, some web pages have a <HEAD> tag with no matching <\/HEAD> tag, a <\/HEAD> tag with no matching <HEAD> tag, and the like.","In order to place some additional information in the HEAD section of the page and some in the BODY section, in various exemplary embodiments, the systems and methods of this invention finds these sections or regions and adds one or more missing tags, as needed, to bring these important parts of the web page into conformance with the HTML standard.",{"@attributes":{"id":"p-0082","num":"0081"},"figref":["FIG. 10","FIG. 10"],"b":["4000","4100","4200","4300","4400"]},"In step S, marks on some tokens are revised based on the structure of the Web page, i.e. to indicate non-editable items in cases where these tokens should not be included in editable regions. Then in step S, the templates for editable items are determined based on the marked tokens. Finally, in step S, the new page is generated. Operation then continues to step S, where operation returns to step S.",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 11","FIG. 10","FIG. 11","FIG. 11"]},"As shown in , operation of the method begins in step S, and continues to step S, where all HTML, HEAD and BODY open and close tags are determined. Then, in step S, a determination is made whether all HTML, HEAD and BODY open and close tags are present. If all six tags are present, then operation jumps to step S because these tags are well-formed and there is no further work that must be done. Otherwise, operation continues to step S, where a determination is made whether both HEAD tags are present. If so, operation jumps to step S. Otherwise, our operation continues to step S.","In step S, a determination is made whether a \/HEAD tag is present. If so, operation continues to step , where the end of this tag is used to identify the beginning of the division between the HEAD and BODY sections. This identified division is used later, in the case that the start BODY tag is missing, as the location for the insertion of a new start BODY tag. Operation then jumps to step S. In contrast, in step S, a determination is made whether both BODY tags are present. If so, operation jumps to step S. Otherwise, operation continues to step S.","In step S, a determination is made whether a BODY tag is present. If so, operation continues to step S, where the beginning of this tag is used as the beginning of the BODY section. Operation then again jumps to step S. In contrast, in step S, one or more page tags that will produce visible output are determined by scanning through the tags of the page. Then, in step S, the missing BODY tag is added right before the first visible output tag. Next, in step S, any other missing tags are added as required. Operation then continues to step S, where operation returns to step S.","It should be appreciated that, for HTML, tokens that produce visible output include, but are not limited to, tokens including non-empty text strings and tags that are not on a list of predetermined invisible tags. It should be appreciated that, for HTML, the list of invisible tags includes, but is not limited to: HEAD, SCRIPT, TITLE, META, HTML, STYLE, and XML beginning and end tags.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIG. 12","FIG. 10","FIG. 12"],"b":["4200","4210","4220","4230","4240"]},"In step S, each token is labeled with the names of all of the tags that surround the given token. For example, in the HTML fragment \u201c<b><i>Hello<\/i><\/b>\u201d, the text token \u201cHello\u201d is labeled with the context \u201cb\/i\u201d, meaning that it is inside of an \u201ci\u201d tag, which in turn is inside of a \u201cb\u201d tag. Next, in step S, missing end tags are added to match any start tags for which the closing tag is optional in the HTML standard. For example, in various exemplary embodiments of the systems and methods of this invention, any open <P> tags are closed when another <P> tag is encountered or when a <TABLE> tag is encountered. Similarly, any <LI> tags are closed when another <LI> tag is encountered, or when a list begins or ends. Additionally, any <TD> tags are closed when another <TD> tag is encountered, or when a table row begins or ends. Operation then continues to step S, where operation of the method returns to step S.",{"@attributes":{"id":"p-0091","num":"0090"},"figref":["FIG. 13","FIG. 10","FIG. 13"],"b":["4300","4310","4320","4330"]},"In step S, any tokens that are contained between the start tag and end tag of an HTML list (including the start and end tags themselves) are marked as editable. These marks are not final, and may be removed by later processing stages. Operation then jumps to step S. In contrast, in step S, a determination is made whether the convert tables only flag is set. If so, operation continues to step S. Otherwise, operation jumps to step S. In step S, any tokens that are contained between the start tag and end tag of an HTML table (including the start and end tags themselves) are marked as editable. These marks are not final, and may be removed by later processing stages. Operation then again jumps to step S.","In step S, a determination is made whether the convert paragraphs only flag is set. If so, operation continues to step S. Otherwise, operation jumps to step S. In step S, any tokens contained between the start tag and end tag of an HTML paragraph (including the start and end tags themselves) are marked as editable. These marks are not final, and may be removed by later processing stages. Operation then again jumps to step S. In contrast, in S, any tokens that are contained between the start and end tag of either an HTML list or an HTML table (including the start and end tags themselves) are marked as editable. Again, these marks are not final. This step is performed both in the case where the convert lists and tables, preferring lists flag is set and in the case where the convert tables and lists, preferring tables flag is set. Operation then again jumps to S, where operation of the method returns to step S.","It should be appreciated that, although step S marks any tokens that are contained between the start and end tag of either an HTML list or an HTML table as editable, any tokens between the start and end tag of an HTML paragraphs can also be marked as editable. Further, it should be appreciated that, in step S, any token between any combination of an HTML list, HTML table and\/or HTML paragraph can be marked editable if desired.",{"@attributes":{"id":"p-0095","num":"0094"},"figref":["FIG. 14","FIG. 13","FIG. 14"],"b":["4320","4321"]},"In step S, all tokens within the current list are marked as editable. Operation then continues to step S, where a determination is made whether there are any unanalyzed lists remaining in the web page that is being converted. If so, operation returns to step S. Otherwise, operation continues to step S, where operation of the method returns to step S.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIG. 15","FIG. 13","FIG. 15"],"b":["4340","4341","4342","4343"]},"In step S, a determination is made whether there are any unanalyzed tables remaining in the web page that is being converted. If not, operation returns to step S. Otherwise, operation continues to step S, where operation of the method returns to step S.",{"@attributes":{"id":"p-0099","num":"0098"},"figref":["FIG. 16","FIG. 13","FIG. 16"],"b":["4360","4361","4362","4363","4361","4364","4380"]},{"@attributes":{"id":"p-0100","num":"0099"},"figref":["FIG. 17","FIG. 13","FIG. 17"],"b":["4370","4371","4372","4373","4374"]},"In step S, all tokens of the current list are marked as editable. Operation then jumps to step S. In contrast, in step S, all tokens of the current table are marked as editable. Operation then continues to step S, where a determination is made whether there are any unanalyzed lists or tables remaining in the web page that is being converted. If so, operation returns to step S. Otherwise, operation jumps to step S, where operation of the method returns to step S.","Determining the role of each token requires noting where in the character sequence each editable item of the output page will begin and end, and which elements will or will not be part of the editable items. This decision is based on several factors, which can include one or more of:\n\n",{"@attributes":{"id":"p-0103","num":"0109"},"figref":["FIG. 18","FIG. 10","FIG. 18"],"b":["4400","4410","4420"]},"In step S, child tokens are counted for each table, list, and paragraph in the web page that is being converted. Next, in step S, the maximum child count is propagated for all of the tables, lists, and paragraphs in the web page that is being converted. Then, in step S, tables with editable children or with only one row are marked as non-editable (removing any previous editable mark). Operation then continues to step S.","In step S, lists with editable parents are marked as non-editable (removing any previous editable mark) in the case that the convert tables and lists, preferring tables flag is set. Then, in step S, paragraphs that have no text or only have white space are marked as non-editable. Next, in step S, existing forms are marked. Operation then continues to step S, where operation of the method returns to step S.","Although tokens have been shown as being marked editable in  and then revised based on page structure in , it should be appreciated that tokens can be marked in various ways. For example, instead of marking tokens editable and then revising token marks as non-editable, only tokens that are to be editable can be marked editable. Thus, tokens that are to be non-editable are never marked.",{"@attributes":{"id":"p-0107","num":"0113"},"figref":["FIG. 19","FIG. 18"]},"As shown in , operation of the method begins in step S and continues to step S, where the number of rows in each table and the number of items in each list are counted. Then, in step S, for each table, the number of counted rows is stored in that table's start tag token as the table \u201cchildCount\u201d. Likewise, for each list the number of counted items is stored in that list's start tag token as the list's \u201cchildCount\u201d. Then, in step S, for each table row of each table, the table row or TR start tags are marked with the number of columns or TD tags that each table row contains. Next, in step S, in addition to counting children, for each column of each row of each table, the string representation of each column tag TD is taken in order, and the resulting list of strings, called the \u201cchildTags\u201d, are attached to the TR token of that row. Operation then continues to step S.","In step S, all tokens on the page are considered in order. For each token, all tables on the page that contain that token within the start and end tags of the table are considered, a parentTableCount of the current token is set to be the maximum value of childCount over all tables considered. In this operation, it can be determined whether any given table or list is nested inside of a multi-row table. Operation then continues to step S.","In step S, each list is considered in turn. As the list is considered, that list is called the current list. Then, for each table containing the current list, that table's childListCount value is set as the childCount value of the current list if doing so will make childListCount value larger. Once all lists have been considered, for each table, whether that table contains any multi-item lists will be known. Operation then continues to step S.","In step S, each table is considered in turn. As a table is considered, that table is called the current table. Then, for each table containing the current table, that table's childTableCount value is set as the childCount value of the current table if doing so will make childTableCount value larger. Once all tables have been considered, for each table, whether that table contains any multi-row tables will be known. Operation then continues to step S.","In step S, for each paragraph, the number of non-empty text tokens in that paragraph is counted. Then, in step S, for each paragraph, the childCount value of the start tag token of that paragraph is set to be the number of non-empty text tokens that is contained in that paragraph. Operation then continues to step S, where operation of the method returns to the step S.",{"@attributes":{"id":"p-0113","num":"0119"},"figref":["FIG. 20","FIG. 18","FIG. 20"],"b":["4440","4441","4442","4443","4444"]},"In step S, the childCount of the current token is set to the value of childCount that is presently available on the start tag token of the list that most tightly contains the current token. This operation ensures that all tokens of a list are aware of the number of items in the list in which those tokens play a part. This information is used later to decide if these tokens should be included in an editable item. Operation then jumps to step S.","In step S, a determination is made whether the current token is both directly part of a table and not the start tag of a table. If so, operation proceeds to S. Otherwise, operation proceeds to S. In step S, the childTableCount, childListCount, and childCount of the current token are set to the childTableCount, childListCount, and childCount, respectively, of the start tag token that begins the table that directly contains this token. This operation ensures that all tokens of a table are aware of the number of rows in the table of which those tokens play a part, whether or not that table contains any multi-row tables, and whether or not that table contains any multi-item lists. As a result, this information will be easy to find for use in subsequent steps. Operation then jumps to step S.","In step S, a determination is made whether the current token is directly a part of a paragraph but not the start tag token. If so, operation continues to step S. Otherwise, operation jumps to step S. In step S, the childCount of the current token is set to the childCount of the start tag token of the paragraph that directly contains the current token. Operation then continues to step S, where a determination is made whether all tokens on the page have now been selected. If so, operation continues to step S, where operation of the method returns to step S. Otherwise, operation returns to step S, where the next token is selected.",{"@attributes":{"id":"p-0117","num":"0123"},"figref":["FIG. 21","FIG. 18","FIG. 21"],"b":["4450","4451","4452","4453","4456","4454"]},"In step S, a determination is made, for each table, whether the childTableCount is greater than 1, i.e., whether some editable table is nested inside the current table. If so, operation again jumps to step S. Otherwise, operation continues to step S.","In step S, a determination is made, for the current token, whether its childListCount is greater than 1 and whether the convert lists and tables, preferring lists flag is set, i.e., whether both lists are preferred over tables to be made editable and also an editable list is nested inside the table that includes the current token. If so, operation continues to step S. Otherwise, operation jumps to step S.","In step S, the current token is marked as non-editable, because it is part of a table that should not be made editable. Next, in step S, a determination is made whether the token is the last token. If not, operation returns to step S. Otherwise, operation continues to step S, where operation of the method return to step S.","In various exemplary embodiments, as described above with respect to ,  and , when tables are nested, only the most deeply-nested table that has more than one row is converted. It should be appreciated that it is not impossible to convert all nested tables. Rather, in these exemplary embodiments, this limitation is made to alleviate the complexities involved for the user in editing a page that has nested editable items. Accordingly, various other exemplary embodiments of these disclosed methods can be used to convert any two or more of these nested tables.",{"@attributes":{"id":"p-0122","num":"0128"},"figref":["FIG. 22","FIG. 18","FIG. 22"],"b":["4460","4461","4462","4466"]},"In step S, a first or next list token is selected as a current list token. Then, in step S, for each list token, a determination is made whether the parentTableCount for the current list token is greater than 1, i.e., whether the current list token is nested inside a table. If so, operation continues to step S. Otherwise, operationjumps to step S.","In step S, the current list token is marked as non-editable, because it is part of a list that is nested in an editable table and tables are preferred over lists for becoming editable. Operation then continues to step S, where a determination is made whether all list tokens have been selected. If not, operation returns to step S. Otherwise, operation continues to step S, where operation of the method returns to step S.","It should be appreciated that it is not impossible to convert both lists and tables. Rather, in various exemplary embodiments, this limitation is used to alleviate the complexities involved for the user in the editing process if editable items are allowed to contain yet other editable items. Furthermore, although only tables with more than one row (childCount>1) are made editable, it should be appreciated that it is not impossible to convert tables with only one row. Similarly, in various exemplary embodiments, this limitation is used to alleviate the complexities involved for the user in the editing process (e.g., if the original page contains many single-row tables used for formatting effects, the user may be presented with an excessive number of editable table rows). Accordingly, various other exemplary embodiments of these disclosed methods can be used to convert all lists and tables, whether nested or not, and tables with any number of rows.","It should be appreciated that Sparrow Web items generally include buttons that cause Sparrow Web to be called when activated. The buttons call Sparrow Web because a URL of the Sparrow Web server is mentioned in a FORM tag that surrounds all of the Sparrow Web buttons on a page. However, a problem can occur if the Web page to be converted already includes one or more regions in FORM Tags.","In various exemplary embodiments of the systems and methods of this invention, the creation of editable items inside of any existing FORM tags is explicitly suppressed. This is accomplished by finding any existing FORM or \/FORM tags using the tag path in each intermediate structure to identify tokens that fall within such FORM tags. All such tokens are marked as non-editable so that they will not be placed into editable items.",{"@attributes":{"id":"p-0128","num":"0134"},"figref":["FIG. 23","FIG. 18","FIG. 23"],"b":["4470","4471","4472","4473","4474"]},"In step S, that token is marked as non-editable. Operation then continues to step S, where a determination is made whether all paragraphs have been selected. If not, operation jumps back to step S. Otherwise, operation continues to step S, where operation of the method returns to step S.",{"@attributes":{"id":"p-0130","num":"0136"},"figref":["FIG. 24","FIG. 18","FIG. 24"],"b":["4470","4471","4472","4473","4474","4480"]},"It should be appreciated that it is not impossible to convert elements within existing FORM tags to be editable. Rather, in various exemplary embodiments, this procedure is used in order to preserve the operation of any buttons, menus, or other interactors that are present within the existing FORM tags.","In various exemplary embodiments of Sparrow Web, every editable item must be associated with a single named template that describes how many editable fields the item will have, what interactors will be available to edit each field, how each field will be formatted for display, and what additional web page code elements should be added between all of the fields to produce the layout of a complete item. In various exemplary embodiments, all of the templates in use in a page are included in the HEAD section at the top of the page.","In determining the role for the tokens, the beginning and the ending of each editable item in the output page was determined. However, which parts of the item will be editable, which will be fixed parts of the item template, and how many editable parts an item will have, has not been determined. For those parts that will be editable by users, which type of Sparrow Web field will hold them, and hence which interactors will appear when those parts are opened for editing, has not been determined.",{"@attributes":{"id":"p-0134","num":"0140"},"figref":["FIG. 25","FIG. 10","FIG. 25"],"b":["4500","4505","4510","4515","4520"]},"In step S, the hash key from all of the variable contents and fixed HTML of the template are completed. Next, in step S, for each template, a determination is made whether that template is stored in a hash table (or any other unique mapping from data values to templates). If so, operation jumps to step S. Otherwise, operation continues to step S.","In step S, the existing template from the hash table is used. Operation then continues to step S. In contrast, in step S, a new template is created based on the determined fixed HTML parts, variable contents, and the value of the place editing icon flags. Operation then continues to step S.","In step S, the new template is associated with a chosen template name. Then, in step S, the template is stored in a hash table using a hash key that is determined from all of the variable contents and fixed html of the template. For example, the hash key or unique identifier for a template to be used to format a table row is a text string derived from the text of the start row tag, the number of columns of the table, the editing icon position (before or after), and the child tags computed in . It should be appreciated that each template is given a unique name that is also stored in the hash table. Operation then continues to step S.","In step S the current item is marked with the unique name of the template (whether that template was newly created or existed previously). Then, in step S, a determination is made whether the current identified editable item is the last identified editable item. If not, operation returns to step S. Otherwise, operation continues to step S, where operation of the method return to step S.",{"@attributes":{"id":"p-0139","num":"0145"},"figref":["FIG. 26","FIG. 24","FIG. 26"],"b":["4530","4531","4533","4532"]},"In step S, an item template is created that places editing icons after the item contents of each editable item, or in the case of tables, in a new right-most column. Operation then continues to step S. In contrast, in step S, an item template is created that places editing icons before the item contents of each editable item, or in the case of tables, in a new left-most column. Operation then jumps to step S, where operation of the method returns to step S.",{"@attributes":{"id":"p-0141","num":"0147"},"figref":["FIG. 27","FIG. 26","FIG. 27"],"b":["4532","4532","4532","4532","4532"],"i":["a","b","c","d. "]},"In step S, a template is created to place an editing icon in the left-most column of the table. Operation then jumps to step S. In contrast, in step S, a determination is made whether that item is a list. If so, operation continues to step S. Otherwise, operation jumps to step S","In step S, a determination is made whether the current list's items are bulleted. If so, operation continues to step S. Otherwise, operation jumps to step S. In step S, a list item template is created to replace the bullets at the beginning of each list item with editing icons. Operation then jumps to step S. In contrast, in step S, a list item template is created to place editing icons before each list item, or in the case of tables, in a new left-most column. Operation then jumps to step S","In step S, a paragraph template is created to place editing icons before each paragraph. Operation then continues to step S, where a determination is made whether all items have been selected. If not, operation returns to step S. Otherwise, operation continues to step S, where operation of the method returns to step S.","More than one sensible template can be produced for any given item. For example, one template may give more power to contributors and less power to the page author and another template may do the reverse. Some templates may result in pages that require some knowledge about the web page code language on the part of the user, while others do not. It should be appreciated that, in various exemplary embodiments of the systems and methods of this invention, a user interface may be provided so the user can make some of these choices regarding the templates.","For example, consider the exemplary embodiment of a standard web page , shown in , used as an input or source document that includes a HTML table. The first HTML source code segment  in  shows one exemplary embodiment of an HTML source code segment usable to form the web page . The HTML table is created by the first part of the following exemplary source code segment  shown in :",{"@attributes":{"id":"p-0147","num":"0153"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<table width=\u201c95%\u201d>"]},{"entry":[{},"<tr><td>My Table Title<\/td><\/tr>"]},{"entry":[{},"<tr><td>The quick brown fox<\/td><\/tr>"]},{"entry":[{},"<\/table>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"If, for example, the user then selects \u201cTables Only\u201d from the \u201cWhat to convert\u201d menu, the conversion steps outlined above will mark the two TR spans to be made into editable items. A single template will work for both table rows. The template might be given the chosen template name tableRow1 and might read:",{"@attributes":{"id":"p-0149","num":"0155"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<tr><td><input type=\u201cimage\u201d src=\u201ctriangle.gif\u201d name=\u201cEdit-0\u201d><\/td>"},{"entry":"<td><FIELD TYPE=\u201cTEXTAREA\u201d NAME=\u201ccell\u201d><\/td><\/tr>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0150","num":"0156"},"figref":["FIG. 30","FIG. 28"],"b":["720","700","720","700"]},"The table in the standard web page  shown in  can be modified by using the second source code segment  shown in :",{"@attributes":{"id":"p-0152","num":"0158"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<table width=\u201c95%\u201d>"]},{"entry":[{},"<tr><td bgcolor=\u201cyellow\u201d>My Table Title<\/td><\/tr>"]},{"entry":[{},"<tr><td>The quick brown fox<\/td><\/tr>"]},{"entry":[{},"<\/table>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In this exemplary embodiment, similar in appearance to window  with the exception of a highlighted cell, one of the TD tags has an attribute that sets the background color within its table cell. The tableRow1 template above will no longer suffice to format both rows of the table, if it is desired to preserve all layout information. To handle this situation, a second template, tableRow2, can be created to represent a yellow-highlighted cell. The need for a second template is determined by looking at the \u201cchildTags\u201d data structure, which includes information about the attributes of all of the relevant TD tags.","Thus, the tableRow2 template might look like:",{"@attributes":{"id":"p-0155","num":"0161"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<tr><td><input type=\u201cimage\u201d src=\u201ctriangle.gif\u201d name=\u201cEdit-0\u201d><\/td>"},{"entry":"<td bgcolor=\u201cyellow\u201d><FIELD TYPE=\u201cTEXTAREA\u201d"},{"entry":"NAME=\u201ccell\u201d><\/td><\/tr>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Since there are now two templates to modify in order to modify the layout of all items in this table, creating and editing a web page is more complicated. However, the amount and location of yellow table cells can be varied.","The table in the standard web page  shown in  can also be modified by using the third source code segment  shown in :",{"@attributes":{"id":"p-0158","num":"0164"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<table width=\u201c95%\u201d>"]},{"entry":[{},"<tr><td>My Table Title<\/td><\/tr>"]},{"entry":[{},"<tr><td>The quick <a href=\u201cbrown.html\u201d>brown<\/a> <img"]},{"entry":[{},"src=\u201cfox.gif\u201d>fox<\/td><\/tr>"]},{"entry":[{},"<\/table>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In this exemplary embodiment, the second table row includes both an anchor and an image. If the template tableRow1 were used, the resulting item will look just fine to someone reading the resulting Sparrow Web page. However, a user who tries to edit the second row of the table will see an editing region containing the HTML code (The quick <a href=\u201cbrown.html\u201d>brown<\/a><img src=\u201cfox.gif\u201d>fox).","If the users to this page are familiar with HTML, this may be fine, because the user will have full control over the content of this table cell and can modify the HTML tags as such users desire. However, in the common case that some or all users do not want to see and edit HTML tags, this result is unsatisfactory. For this reason, in various exemplary embodiments, a custom template can be generated for table rows that takes into account the following:\n\n","Thus, a third template, tableRow3, might look like this:",{"@attributes":{"id":"p-0162","num":"0173"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<tr><td><input type=\u201cimage\u201d src=\u201ctriangle.gif\u201d name=\u201cEdit-0\u201d><\/td>"},{"entry":"<td><FIELD TYPE=\u201cTEXTAREA\u201d NAME=\u201ctext1\u201d><FIELD TYPE="},{"entry":"\u201cANCHOR\u201d"},{"entry":"NAME=\u201canchor2\u201d><FIELD TYPE=\u201cTEXTAREA\u201d NAME="},{"entry":"\u201ctext3\u201d><FIELD"},{"entry":"TYPE=\u201cIMAGE\u201d NAME=\u201cimage4\u201d><FIELD TYPE=\u201cTEXTAREA\u201d"},{"entry":"NAME=\u201ctext5\u201d><\/td><tr>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"This template specifies that a user editing this kind of item will be presented with a dialog box that contains three multi-line text editing areas, one interactor for specifying an anchor (HTML link) and one interactor for specifying the URL of image. Thus, the user will be able to edit all of the elements of the second row of the table in this exemplary embodiment, without needing to see or edit any HTML tags.",{"@attributes":{"id":"p-0164","num":"0175"},"figref":["FIGS. 31 and 32","FIG. 10","FIG. 31"],"b":["4600","4605","4610","4630","4605","4640"]},"In step S, a determination is made whether the current token begins an editable region such as, for example, the start tag of a table or the start tag of a list. If so, operation continues to step S. Otherwise, operation jumps to step S.","In step S, an HTML string is emitted that will properly begin the new editable region. This may be as simple as emitting the current token itself, which will be, for example, a <TABLE>tag, an<OL>, <UL>, or <DL> tag, or a <P> tag, with appropriate attributes, but may be different from the current token, for example, when emitting a <DIV> tag with a style attribute to achieve a desired indentation on an editable list. Operation then returns to S.","In contrast, in step S, a determination is made whether the current token is the end tag of an editable region, such as, for example, end of table, or end of list. If so, operation continues to step S. Otherwise, operation jumps to step S. In step S, HTML code is emitted that is appropriate to end an editable region. This HTML code generally defines a user-clickable button that will allow the user to add more items to those currently in this editable region. This HTML code also generally includes the current token itself, such as, for example, a <\/TABLE>, <\/UL>, <\/OL>, or <\/DL> tag, to appropriately bring the current table or list to an end. However, sequences of paragraphs may not require any final tags. Operation then jumps back to step S. In contrast, in step S, a determination is made whether the current token is the start tag of an editable item, such as, for example, a start of table row, a start of list item, or a start of paragraph. If so, operation continues to step S. Otherwise operation jumps to step S.","In step S, a standard server-based software tool start-of-item comment is emitted, including the chosen template name that was attached to the start tag token in . Operation then jumps back to step S. In contrast, in step S, fields of the template are filled in with subsequent tokens until the end of the item token, ignoring tokens matching the constant HTML part of the template. Operation then continues to step S.","In step S, each item is formatted using the template. Next, in step S, an HTML coding of the item is emitted. Then, in step S, a standard server-based end of the item comment is emitted. Operation then continues to step S.","In step S, a determination is made is any tokens from the input Web page remain to be processed. If so, operation jumps back to step S. Otherwise, operation continues to step S, where operation of the method returns to step S.","In many cases, these special handler routines only need to copy the corresponding HTML tag to the output stream and to initialize any data structures that will keep track of the processing of items in the sequence. However, in some cases, special HTML code elements will be emitted at these times as well. For example, in various exemplary embodiments, when converting lists where an editing button is to be placed \u201cbefore\u201d each item, the UL and \/UL tags are replaced with <DIV STYLE=\u201cmargin-left:40px\u201d> and <\/DIV> tags, respectively, as a way to replace the normal bullets of the list with clickable \u201cEdit\u201d buttons. Also, at the end of a list, an additional button, in the shape of a plus sign (+), or any other form, can be placed that allows contributors to add new items to the list.",{"@attributes":{"id":"p-0172","num":"0183"},"figref":["FIG. 33","FIG. 33"],"b":["4610","4611","4612","4613"]},"In step S, all computed item templates, a META tag instructing the browser not to cache this page, a BASE tag to aid the use of relative URLs throughout the page, and the \/HEAD tag that brings the HEAD section of the output page to a close are emitted. Operation then jumps to step S. In contrast, in step S, for the current token, a determination is made whether a BODY tag is encountered. If so, operation continues to step . Otherwise, operation jumps to step S.","In step S, the current token, which is typically a BODY tag that starts the body, that is the visible content, section of the output HTML page is emitted followed by a FORM tag whose ACTION attribute is the URL of the Sparrow Web server. Operation then again jumps to step S. In contrast, in step S, for the current token, a determination is made whether a \/BODY tag is encountered. If so, operation continues to step S. Otherwise operation jumps to step S.","In step S a \/FORM tag is emitted followed by the current token itself, which typically is a \/BODY tag. Together, these two emitted tags bring to a close the FORM that directs actions to the Sparrow Web server and the content body of the output Web page. Operation then jumps to step S. In contrast, in step S, for the current token, a determination is made whether the current token is a preexisting FORM tag. If so, operation continues to step S. Otherwise operation jumps to step S.","In step S, a \/FORM tag to bring to temporarily disable the effects of the FORM that sends actions to the Sparrow Web server, so that the pre-existing form may continue to function, is emitted followed by the current token, i.e., the pre-existing FORM tag. Operation then again jumps to step S. In contrast, in step S, for the current token, a determination is made whether the current token is a pre-existing \/FORM tag. If so, operation continues to step S. Otherwise, operation jumps to step S.","In step S, the current token, which is typically a pre-existing \/FORM tag, is emitted followed by an additional FORM tag is that directs actions to the Sparrow Web server, so content outside of the pre-existing forms will all be set up to interact with Sparrow Web. Operation then again jumps to step S. In contrast, in step S, the current token is emitted unchanged, as the current token is not one of the kinds of token for which special processing is needed. Operation then continues to S.","In step S, special handler routines update system data structures as needed based on the content of the current token. Operation then continues to step S, where operation of the method returns to step S.","In a parse tree data structure, the methods described above operate on an array of tokens. The tree structure of the tokens is represented implicitly by the nesting structure of beginning and ending tags, and in this case, by keeping a stack of tag contexts during each pass. An alternative exemplary embodiment would be to construct the tree explicitly. In that case, the methods would walk the tree.",{"@attributes":{"id":"p-0180","num":"0191"},"figref":["FIG. 34","FIG. 34"],"b":["600","600","610","620","630","640","650","660","670","610","1000","1010","610","800","810","900","910"]},"Each of the links ,  and  can be any known or later-developed connection system or structure usable to connect their respective devices to the web page conversion system . It should also be understood that links ,  and  do not need to be of the same type.","The memory  can be implemented using any appropriate combination of alterable, volatile or non-volatile memory or non-alterable, or fixed, memory. The alterable memory, whether volatile or non-volatile, can be implemented by using any one or more of static or dynamic RAM, a floppy disk and disk drive, a writeable or rewriteable optical disk and disk drive, a hard drive, flash memory or the like. Similarly, the non-alterable or fixed memory can be implemented using any one or more of ROM, PROM, EPROM, EEPROM, and gaps in optical ROM disk, such as a CD ROM or DVD ROM disk and disk drive, or the like.","The input\/output interface  is connected to the user input devices  over the link . The user input devices  can be one or more of a touch pad, a touch screen, a track ball, a mouse, a keyboard or any known or later-developed user input devices  for inputting data and\/or control signals to the web page conversion system  to convert an input web page to a converted Sparrowized Web page.","Furthermore, the input\/output interface  is connected to the display device  over the link . In general, the display device  can be any device that is capable of outputting the input web page, the converted Sparrowized web page, the \u201cWhat to convert?\u201d menu and any error message according to the method and the web page conversion system  of the exemplary embodiments.","The input\/output interface  is also connected to a web page data source  over link . In general, the web page data source  can be any device that is capable of inputting web page data that is to be converted according to the method and the web page conversion system  of the exemplary embodiments.","The editable item\/field determining circuit, routine or application  inputs a user input, inputs the identified web page and determines which types of items are to be made editable. The sequence determining circuit, routine or application  determines a sequence of list items, table rows or paragraphs. The template constructing circuit, routine or application  determines how the edible item in the document will be formatted and displayed, which user interface interactors will be provided to edit the fields of the edible item, and how new items to the same type will be formatted and displayed when the new items are created.","In operation, user input is input from the user input device(s)  over the link  by the input\/output interface  of the web page conversion control system . The user input includes information regarding one or more of the source of the web page to be edited, the type of web page elements to be edited, the location of where editing icons are to be placed and\/or the location for the converted output web page. The user input information is then stored in the memory  under control of the controller . A web page data is input from the web page data source  over the link  to the input\/output interface  in accordance with the user input. The web page data including the web page source code is also stored into the memory  under control of the controller .","The edible item\/field determining circuit, routine or application , under control of the controller , inputs the web page data. The edible item\/field determining circuit, routine or application  augments the web page source code to form an augmented web page source code that is in conformance to a coding standard. The edible item\/field determining circuit, routine or application , under control of the controller , then stores the augmented web page source code in the memory . The edible item\/field determining circuit, routine or application  determines the type of web page elements to be converted and sets a value of a conversion flag associated with each of one or more types of web page elements to be edited that have previously been selected by the user input. The edible item\/field determining circuit, routine or application  also stores the value of the set conversion flag in the memory  under control of the controller .","The edible item\/field determining circuit, routine or application  also determines the locations where the editing icons are to be placed and sets a value of a placement flag associated with the location previously selected by the user input. The edible item\/field determining circuit, routine or application  then stores the value of the set placement flag in the memory  under control of the controller . The edible item\/field determining circuit, routine or application  parses the augmented web page source code and converts the parsed augmented web page source code to an editable web page code based on the value of the set conversion flags. The edible item\/field determining circuit, routine or application  also stores the parsed web page code and converted editable web page code in the memory  under control of the controller  and\/or outputs the parsed web page code and converted editable web page code directly to the sequence determining circuit, routine or application  and the template constructing circuit, routine or application .","The sequence determining circuit, routine or application , under control of the controller , inputs the parsed web page code and converted web page code from the memory  or directly from the edible item\/field determining circuit, routine or application . The sequence determining circuit, routine or application  determines a sequence of list items, table rows or paragraphs. Then, the sequence determining circuit, routine or application  marks and\/or indicates where each sequence of items, of a sequence of list items, a sequence of table rows and\/or a sequence of paragraphs begins and\/or ends. The determination of the beginning and\/or ending of each sequence of items is used to indicate where editing buttons should be located in constructing a template. The sequence determining circuit, routine or application  also stores, under control of the controller , the beginning and ending of these sequences in the memory  under control of the controller  and\/or outputs the beginning and ending of these sequences directly to the template constructing circuit, routine or application .","The template constructing circuit, routine or application  under control of the controller , inputs the parsed web page code and converted editable web page code from the memory  or directly from the edible item\/field determining circuit, routine or application , and inputs code indicating the beginning and ending of these sequences from the memory  or directly from the sequence determining circuit, routine or application . The template constructing circuit, routine or application  determines the variable contents to be edited and the fixed parts for each identified editable item. Then, the template constructing circuit, routine or application  creates a template for the editable item(s). The template constructing circuit, routine or application  also generates a hash key or unique identifier for all of the variable contents and the fixed parts. The template constructing circuit, routine or application  determines, for each template, whether the template is stored in a hash table in the memory .","If the template constructing circuit, routine or application  determines that the template is not stored in the hash table, the template constructing circuit, routine or application  associates, under control of the controller , the new template with a chosen template name and stores the template in the memory  under control of the controller . If the template has previously been stored in the memory , the template will not be stored again. Then, the template constructing circuit, routine or application  outputs, under control of the controller , the converted editable web page, based on the converted editable web page code and the templates web page, via the input\/output interface  to the display device  to display the output document.","In formats other than Sparrow Web, exemplary embodiments similar to those exemplary embodiments of the systems and methods according to this invention described herein could be targeted at other systems that allow structured contributions to Web pages. For example, items found in the Web page could be turned into XML structures to be formatted using the Zope\u00ae Page Template language.","It should be appreciated that, in various exemplary embodiments, in recognizing other HTML structures, the systems and methods of this invention can be applied to other technologies for recognizing repetitive structures in HTML pages that are not explicitly encoded in HTML list, table, or paragraph tags. For example, items in list-like structures in HTML pages, however they may be represented in HTML tags, can be made editable.","It should be appreciated that, in various exemplary embodiments, in further interactions with the users, many other decisions can be made by the user as part of a new Web page created using the systems and methods of this invention. For example, if a piece of text in an item is bold in the original page, there is a question whether a <b> tag should be built into the template for that item (under control of the page author), whether a FIELD type should be used that allows the contributor to turn boldness on and off, or whether the tag should be ignored. Various exemplary embodiments of the systems and methods of this invention can allow the user to make these decisions, can provide the user with a preview of the new Sparrow Web page that highlights the effects of these decisions, and\/or can allow the user to cycle through the choices.","While this invention has been described in conjunction with the exemplary embodiments outlined above, it is evidenced that many alternative, modifications and variations will be apparent to those skilled in the art. Accordingly, the exemplary embodiments of the invention, as set forth above, are intended to be illustrative, not limiting. Various changes may be made without departing form the spirit and scope of the invention."],"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE DISCLOSURE","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various exemplary embodiments of this invention will be described in detail, with reference to the following figures, wherein:",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 5","FIG. 3","FIG. 4"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 7","FIG. 6"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 9","FIG. 7"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 10","FIG. 6"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 11","FIG. 10"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 12","FIG. 10"]},{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 13","FIG. 10"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 14","FIG. 13"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 15","FIG. 13"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 16","FIG. 13"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 17","FIG. 13"]},{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 18","FIG. 10"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 19","FIG. 18"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 20","FIG. 18"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 21","FIG. 18"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 22","FIG. 18"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 23","FIG. 18"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 24","FIG. 18"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 25","FIG. 10"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 26","FIG. 25"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 27","FIG. 26"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 29","FIG. 28"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 30","FIG. 28"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIGS. 31 and 32","FIG. 10"]},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 33","FIGS. 31 and 32"]},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 34"}]},"DETDESC":[{},{}]}
