---
title: Metadata collecting device, method and computer readable medium
abstract: A device of the invention includes a search inputting unit inputting a search object service and a search condition of content; a first search processing unit, when an accumulation method corresponding to an inputted search object service is a preliminary accumulation method, searching the metadata coincident with an inputted search condition in a first metadata storage; a second search processing unit, in case that the accumulation method corresponding to the inputted search object service is a search-based accumulation method, when the inputted search condition is registered in a second metadata storage in association with the inputted search object service, obtaining corresponding metadata from the second metadata storage, whereas when not registered, obtain and accumulate the metadata coincident with the inputted search condition in the second metadata storage in association with the inputted search condition; and a search-result displaying unit displaying the metadata acquired.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08219556&OS=08219556&RS=08219556
owner: Kabushiki Kaisha Toshiba
number: 08219556
owner_city: Tokyo
owner_country: JP
publication_date: 20090917
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application is based upon and claims the benefit of priority from the prior Japanese Patent Application No. 2008-247924, filed on Sep. 26, 2008, the entire contents of which are incorporated herein by reference.","1. Field of the Invention","The present invention relates to a metadata collecting device, a method therefore and a computer readable medium storing a program for performing the method, for efficiently collecting and accumulating, for example, metadata of content, and for effectively updating the accumulated (cached) metadata.","2. Related Art","In recent years, in the context of the spread of broadband, multimedia-content distribution services using IP (Internet Protocol) communication are operated by various communication service providers. Provided are a wide variety of services ranging from a low-resolution video distribution service for a mobile phone to a high-resolution video distribution service having HD (High Definition) quality for a digital television.","The multimedia-content distribution services include a VoD (Video on Demand) video distribution service in which videos are distributed in unicast. This service is roughly classified into two types of that using a portable service and that using ECG (Electronic Content Guide), as a navigation of search\/selection of content.","The portal service is a service for performing the navigation on a WEB browser provided by a service provider. A user accesses to the WEB page called \u201cPortal\u201d provided by the respective service providers to search\/select desired content, and then, receive video streams. In the portal service, a content search or the like are all performed on a server, and its result is presented to the user on the WEB page.","On the other hand, ECG is an application on a receiving device, and obtains program information called as metadata and selects desired one among a certain number of metadata, and then, provides to the user an interface for search, display, selection, view, and purchase. A service using ECG takes a configuration in which the metadata becoming a key part needed for the navigation has been previously accumulated on the receiving device, and is used. The service using ECG, thus, has an advantage to operate at a high speed, compared with the portal service required to obtain also screen structure information on a site including image information. Moreover, the service using ECG has also an advantage or the like that a receiver side can determine a screen design; operation or a screen transition using a receiver remote control, which cannot be realized by a browser, is enabled etc. Further, in the service using ECG, it is possible to realize a multiservice navigation by collecting metadata from a plurality of services, merging those metadata, and then, presenting the metadata to the user. Examples for realizing this multiservice navigation include a technology disclosed in JP-A 2004-102767 (Kokai).","In JP-A 2004-102767 (Kokai), a metadata collecting device has previously collected and cached metadata from a plurality of metadata providing devices, and when a receiving device requests for metadata obtainment to the metadata collecting device, the metadata held by these metadata providing devices is returned to the receiving device in a unified format.","In JP-A 2004-102767 (Kokai), in a case where it is necessary to update the metadata requested by the receiving device, in other words, a case where there is a discrepancy between the cached metadata and the metadata retained by the metadata providing device, it is required to obtain the metadata from the metadata providing device again. Therefore, a service in which the metadata are frequently updated has a problem that a hit rate by cache becomes low, and accordingly, this gives rise to a need for collecting the metadata from the metadata providing device again, thereby requiring time until content are displayed on the receiving device.","Additionally, in JP-A 2004-102767 (Kokai), supposed is a configuration in which the metadata collecting device is arranged on a server side, so that it is not possible to make content accumulated in a home HDD recorder be a search object. Further, all of the metadata are obtained from the metadata collecting device, so that it is not possible to adapt the technology to a consumer device such as a digital television having a large restriction in capacity or the like of a hard disk, a memory.","As stated above, in a case where the number of content provided by the service is extremely large, it is difficult to apply caching of all the content to the consumer device such as the digital television having a large restriction in capacity or the like of the hard disk, the memory. Additionally, the service in which content are frequently updated faces also a problem that a cache hit rate becomes low, thereby giving rise to the need for obtaining the metadata from the metadata providing device again, and accordingly, spoiling light operational feeling.","According to an aspect of the present invention, there is provided with a metadata collecting device which collects and accumulates metadata from one or more metadata providing devices holding metadata of contents distributed by one or more content distribution services, comprising an accumulation-method determiner, an accumulation-method storage, a metadata-obtainment processing unit, a first metadata storage, a search inputting unit, a second metadata storage, a first search processing unit, a second search processing unit and a search-result displaying unit. The accumulation-method determiner determines accumulation methods of the metadata for the content distribution service to either a preliminary accumulation method or a search-based accumulation method, respectively. The accumulation-method storage stores therein information on the accumulation methods determined for the content distribution services. The metadata-obtainment processing unit transmits, to the metadata providing device relevant to a first content distribution service for which the preliminary accumulation method has been determined, an obtainment request of the metadata held by the metadata providing device and to obtain the metadata returned from the metadata providing device. The first metadata storage stores therein the metadata obtained by the metadata-obtainment processing unit in association with the first content distribution service. The search inputting unit inputs a search object service which is the content distribution service to be searched and a search condition of the contents, respectively. The second metadata storage stores, with respect to a second content distribution service for which the search-based accumulation method has been determined, the search condition having been ever searched and metadata obtained corresponding to the search condition, in association with the second content distribution. The first search processing unit, when the accumulation method corresponding to an inputted search object service is the preliminary accumulation method, searches the metadata coincident with an inputted search condition based on the inputted search object service in the first metadata storage. The second search processing unit determines whether or not the inputted search object service and the inputted search condition is registered in the second metadata storage when the accumulation method corresponding to the inputted search object service is the search-based accumulation method. The second search object service, when registered, obtains the metadata coincident with the inputted search condition based on the inputted search object service from the second metadata storage, and whereas when not registered, transmits, to the metadata providing device relevant to the inputted search object service, an obtainment request of the metadata coincident with the inputted search condition and accumulates the metadata returned from the metadata providing device in the second metadata storage in association with the inputted search condition. The search-result displaying unit displays the metadata acquired by the first or the second search processing unit.","An embodiment according to the present invention will now be explained with reference to the accompanying drawings.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1"},"A metadata collecting device  serving as one embodiment of the present invention is connected to a plurality of networks  to . One or more metadata providing devices to are connected to each of the networks  to .","Hereinafter, firstly explained are summaries on the metadata providing devices to , the metadata collecting device , and the networks  to , and, thereafter, the metadata collecting device  will be explained in detail.","Each of the metadata providing devices to provides metadata on content relevant to a corresponding content distribution service. Metadata is not content itself, and shows attribute information on the content. When the content is image data, audio data, a WEB page or the like, its metadata is, for example, a title (identifier), details information, a creation time and date, a content location or the like. Note that it makes no difference whether a metadata description format is a standard specification or a format unique to each service.","Each of the metadata providing devices to is a metaserver operated by a content distribution service provider, a content holding device such as a HDD (Hard Disk Drive) recorder, or a local storage connected to the metadata collecting device .",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 12","b":["102","102"],"i":["a ","b "],"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":["The number of holding content is larger\/smaller.","Charged\/Free","Home content\/Content on an outside network","Update frequency is lower\/higher."]}}}},"The metadata collecting device  is a device for collecting and controlling the metadata from the metadata providing devices to . The metadata collecting device  is, for example, a device such as a television or a personal computer (PC) equipped with a video display function, or a device for collecting and controlling the metadata instead of the device (e.g., the television or the PC). In the metadata collecting device , a metadata collection application such as an ECG application has been started, and this application manages metadata collection. The present embodiment has one feature that in view of resources of the metadata collecting device , the metadata is accumulated on the metadata collecting device  as much as possible, thereby reducing time required for the metadata collection from the metadata providing device. This leads to realization of a high-speed navigation function for searching and viewing video content from the plurality of content distribution services in a consumer device such as a digital television.","The plurality of networks  to  are networks different from each other. The different networks mean those as follows.\n\n","The different networks operated by the different providers mean that, for example, a case of the network  operated by a network provider A and the network  operated by a network provider B. As stated above, such physically different networks are handled as the separate networks.","The different networks operated by the same network provider mean a case like the different networks depending on service quality or the like operated by the same network provider. It is a case, for example, where the network  is a network of which quality is managed, whereas the network  is a best-effort network of which quality is not managed, alternatively, a case where the network  is an IPv6 network, whereas the network  is an IPv4 network. As stated above, the physically or logically different networks are handled as the separate networks.","The local area network is, for example, a home network closed within home. As stated above, the home network and an outside network are handled as the separate networks.","Hereinafter, the metadata collecting device  will be explained in detail.",{"@attributes":{"id":"p-0040","num":"0046"},"figref":"FIG. 2"},"[User Interface Unit ]","A user interface unit  provides an input interface in order for a user to input a search condition and a search object service for desired content, as well as an output interface for displaying a content list (a list of titles etc.) serving as a search result.  shows an example of a content search screen for inputting a search condition and a search object service of content.  shows an example of a screen for displaying a search result including a list of the searched content. The user interface unit  includes a search inputting unit for inputting a search condition and a search object service, as well as a search result display for displaying a search result representing the metadata obtained depending on the search condition and the search object service, of the present invention.","[Network Interface Unit ]","A network interface unit  is an interface unit for transmitting\/receiving information to\/from the metadata providing devices to through the networks  to . Concretely, it is the interface unit for transmitting packets of a metadata obtainment request to the metadata providing devices to and for receiving packets of the metadata from the metadata providing devices to ","[Metadata Format Unifier ]","A metadata format unifier  unifies formats collected from the plurality of metadata providing devices to , and then, accumulates in a service\/metadata information accumulator the metadata of which formats have been unified. That is, the metadata format unifier  accumulates in the service\/metadata information accumulator  the metadata collected per service by the absorption of a difference in the formats of the metadata.","[Terminal\/Server\/Network Load Monitor ]","A terminal\/server\/network load monitor  monitors a CPU (Central Processing Unit) load on the metadata collecting device , a situation of other applications which are in operation in the metadata collecting device , or an influence due to a disturbance such as a network load or a server load. The monitoring of the situation of other applications includes, for example, monitoring of an operational situation of a video receiving application or a video displaying application or the like of which operation will be extremely influenced by the metadata collection.","[Metadata Collection Speed Determiner ]","A metadata collection speed determiner  determines a metadata collection speed depending on the various load situations monitored by the above load monitor . Here, the metadata collection speed means the number of metadata (i.e. metadata quantity) per one request, or the metadata collection speed per unit time (for example, the number of metadata obtained per one minute). Hereinafter, the metadata collection speed shall mean the number of metadata collection per one request.","The metadata collection speed determiner  determines the metadata collection speed based on the following indexes.","(1) The CPU load on its own device, a starting situation of other applications","(2) The network load","(3) The server load","Explained below is how the metadata collection speed is determined depending on these various loads.","(1) The CPU Load on its Own Device, the Starting Situation of Other Applications","When the CPU load on its own device is heavy, or other applications (for example, the video receiving application, the video displaying application) are started, the application being started may be influenced due to the metadata collection, so that the number of metadata obtained per one request is decreased, or the metadata is obtained again after elapse of a little more time etc., thereby collecting the metadata slowly. On the contrary, when the CPU load is light, or other applications are not started, the influence due to the metadata collection is small, so that the number of metadata collection per one request is increased, thereby collecting the metadata in a short time.","For example, during a time when the video display application is started, the metadata collection speed is five per one request, whereas during a time when the video display application is not started, the metadata collection speed is one hundred per one request etc. This enables to collect the metadata while minimizing the influence on the video display application on which the metadata collection will largely affect.","(2) The Network Load","In a case where available network bands are few; packet losses frequently occur; or jitter of packets is large, it is highly likely that the network load is becoming heavy. If a large amount of metadata is obtained under such situation, the situation is likely to become further worsened due to an occurrence of congestion or the like. In order to avoid this, in a case where the network load is assumed to be heavy because the available network bands are few; the packet losses frequently occur; or the jitter in packets is large etc., the number of metadata collection per one request is decreased, or the metadata is obtained again after elapse of a little more time, thereby collecting the metadata slowly. On the contrary, when the CPU load is assumed to be light, the number of metadata collection per one request is increased, thereby collecting the metadata in a short time.","(3) The Server Load","When metadata is collected from the metadata providing device, the load on the metadata providing device largely influences the metadata collection. For example, in a case where the load on the metadata providing device is extremely heavy, there may an occurrence of a problem that a request timeout occurs and a display of the metadata is delayed due to the effect of the request timeout or the like. In order to avoid the problem, in a case where the load on the metadata providing device is estimated to be heavy judging from a response speed or a time required until the metadata is obtained, the number of metadata collection per one request is decreased, or the metadata is obtained again after elapse of a little more time, thereby collecting the metadata slowly. On the contrary, when the CPU load on the metadata providing device is assumed to be light, the number of metadata collection per one request is increased, thereby collecting the metadata in a short time.","As explained above, the metadata collection speed determiner  determines the metadata collection speed in consideration of the loads on the terminal\/server\/network described in (1) to (3), thereby enabling to efficiently collect the metadata without influencing other applications.","[Service\/Metadata Information Accumulator ]","A service\/metadata information accumulator  accumulates therein metadata obtained from the metadata providing devices to ","Additionally, the service\/metadata information accumulator  accumulates therein service information per service as shown in . The service\/metadata information accumulator  is configured by, for example, a hard disk or a nonvolatile memory.","The service information shown in  include the following items.\n\n","\u201cCorresponding service number\u201d represents the number of registered services. In each example of  and , five services are registered. The video posting service, which is one of these five services, is shown in , whereas the high-quality VoD service, which is another one, is shown in .","\u201cCorresponding service name\u201d represents a name of the registered service. That is, it represents the name of the service intended by the metadata collection application like ECG.","\u201cCaching method\u201d represents a caching method (accumulation method) in a caching method determiner (accumulation-method determiner)  which will be explained later on. The caching methods include Query-based Caching Method and All Caching Method. Simply put, All Caching Method (all caching method) is a method which has previously cached all of the metadata held (provided) by the service, whereas Query-based Caching Method is a method which caches solely several ones of the maximum number or all with respect to a searched search condition (a search formula) every time a search is performed. Query-based Caching Method corresponds to \u201ca search-based accumulation method\u201d of the present invention, whereas All Caching Method corresponds to \u201ca preliminary accumulation method\u201d of the present invention. The details on these caching methods will be explained later on. A portion which stores therein the caching method in the service\/metadata information accumulator  corresponds to \u201caccumulation method storage\u201d of the present invention.","\u201cThe maximum number of caches\u201d represents the upper-limit number of cache(s) per search in a case of Query-based Caching Method. Metadata is obtained until this upper-limit number, and is cached.","\u201cInformation for metadata obtainment\u201d is information needed for obtaining the metadata from the metadata providing device. For example, a URL (Uniform Resource Locator) for metadata obtainment provided by the metadata providing device, or an API (Application Programming Interface) for metadata collection prepared by the metadata collection application such as the ECG application in order to obtain the metadata of each service or the like corresponds to the information for metadata obtainment.","\u201cRegistration query\u201d is the search condition which has been ever searched. Note that, as will be explained later on, only when the caching method is Query-based Caching Method, the searched search condition is registered as the registration query. Here, the search condition is a combination of \u201cGenre\u201d and \u201cKeyword\u201d, and is the combination of, for example, \u201cGenre: sport, Keyword: tennis\u201d etc. Note that, not limited thereto, it may be the combination of promotional information such as \u201cRecommendation\u201d and \u201cNewly arrived\u201d (see ).","\u201cRegistration query number\u201d represents the number of the registration queries in a case of Query-based Caching Method. In the example of , ten registration queries are registered. A set of Items (from \u201cRegistration query\u201d to \u201cCache erasure time and date\u201d) is prepared per registration query, and ten registration queries exist in the example of , so that prepared are the ten sets (from \u201cRegistration query\u201d to \u201cCache erasure time and date\u201d). Note that in a case of All Caching Method, \u201c1\u201d is fixedly set in the number of registration queries.","\u201cSearch frequency\u201d represents a search frequency per registration query or per service. When the caching method is Query-based Caching Method, \u201cSearch frequency\u201d represents the search frequency per registration query, whereas when the caching method is All Caching Method, \u201cSearch frequency\u201d represents the search frequency per service.","\u201cView frequency\u201d represents a view frequency of corresponding content per registration query or per service. For example, when a frequency of viewing content by tracing a link from metadata obtained by a search based on a certain registration query totally amounts to X times, the view frequency is X.","\u201cRecommended update frequency\u201d and \u201cRecommended update time\u201d represent an update frequency and an update time of a cache, respectively. In more details, the recommended update frequency is an interval from a last update time and date to a next update time and date, whereas the recommended update time is a period of time for updating a cache. Examples thereof include \u201cRecommended update frequency: Per 1 hour\u201d, \u201cRecommended update time: AM10:00\u201d etc. Each of the recommended update time and the recommended update frequency may be a value determined in a cache update frequency\/time determiner  which will be explained later on, or may have been previously registered in the service\/metadata information accumulator .","\u201cNext update time and date of cache\u201d is a time and date when a cache should be updated next, and is determined in a cache manager , which will be explained later on, by using the last update time, the recommended update frequency and the recommended update time.","Here, each of \u201cRecommended update frequency\u201d and \u201cRecommended update time\u201d corresponds to, for example, \u201can update requirement\u201d of the present invention. In particular, the recommended update frequency corresponds to \u201can update frequency of a metadata storage\u201d of the present invention, whereas the recommended update time corresponds to \u201can update period of time of the metadata storage\u201d of the present invention. Alternatively, \u201cNext update time and date of cache\u201d may correspond to the update requirement of the present invention. In an explanation which will be described later on, employed is the next update time and date of cache which is an index having reflected the recommended update frequency and the recommended update time as the update requirement. Note that any update requirement of the present invention would be acceptable, if only the update requirement were the one which had determined a momentum for updating a cache, and is not limited to the \u201cRecommended update frequency\u201d, the \u201cRecommended update time\u201d, and the \u201cNext update time and date of cache\u201d. In the service\/metadata accumulator , a portion which stores therein the update requirement corresponding to the service in All Caching Method corresponds to \u201ca first update-requirement storage\u201d, whereas a portion which stores therein the update requirement per registration query in response to the service in Query-based Caching Method corresponds to \u201ca second update-requirement storage\u201d.","\u201cCache effective period\u201d is an effective period of a cache, and is determined in a cache update frequency\/time determiner  which will be explained later on. The cache effective period is set only when the caching method is Query-based Caching Method. The cache effective period is set as, for example, 10 days.","The cache manager , which will be explained later on, determines \u201cCache erasure time and date\u201d by using the last update time and date and the above cache effective period. For example, given that the last update time is 2008\/04\/03 AM10:00 and the cache effective period is 10 days, the cache erasure time and date is 2008\/04\/13 AM10:00.","As stated above, the service\/metadata information accumulator  accumulates metadata therein. The metadata is accumulated in units of a service in regard to the service in which the caching method is All Caching Method, whereas in regard to the service in which the caching method is Query-based Caching Method, the metadata is accumulated in units of a registration query. A portion which stores therein the metadata in units of a service corresponds to \u201ca first metadata storage\u201d of the present invention, whereas a portion which stores therein the metadata in units of a registration query corresponds to \u201ca second metadata storage\u201d of the present invention.","[Caching Method Determiner ]","A caching method determiner  determines the caching method with respect to the respective services registered in the service\/metadata information accumulator . The caching method determined here is registered in the service\/metadata information accumulator  through the cache manager . The caching method selects either method of, for example, (1) or (2) described below.","(1) All Caching Method","This method is a method which has previously cached all metadata held (provided) by a service. When the caching of all the metadata is completed, only a difference therebetween is periodically updated afterward. A metadata update is performed based on the next update time and date of cache managed by the service\/metadata information accumulator . All Caching Method corresponds to \u201ca preliminary accumulation method\u201d of the present invention.","(2) Query-Based Caching Method","This method does not previously cached the metadata held (provided) by the service, but caches only those of the high-order number per searched search condition (a search formula). The high-order number has been determined as, for example, 500, per service, and the metadata providing device is requested to transmit the metadata up to the high-order number (500). Note that the metadata providing device may be requested to transmit all of the metadata coincident with the search condition, and when the number of transmitted metadata exceeds the high-order number, only the metadata of the high-order number may be selected. In this case, a selection reference may be arbitrary, and may be, for example, the metadata of the high-order number early obtained. In a case where a priority is attached to the metadata, the metadata of the high-order number may be selected from those having the higher priority.","This method collects the metadata coincident with the search condition from the metadata providing device only at the time of a first search, and afterward, performs updates in units of the search (that is, in units of a query) periodically at an update timing. In the update, a cache is erased to obtain the metadata again per registration query (search condition) up to the maximum number. Alternatively, if it is possible to obtain only a difference without clearing the cache once, only the difference is obtained again. However, the number of caches of each registration query shall be up to a certain maximum number.","The metadata update (a cache update) is performed based on the next update time and date of cache registered in the service\/metadata information accumulator . In addition, erasure of a cache is performed based on the cache erasure time and date registered in the service\/metadata information accumulator . Note that in this method, the cache effective period is arranged, and after elapse of the time, the cache is cleared. In the above explanation, only the metadata of the high-order number is cached, however, all of the metadata coincident with the search condition may be cached. Query-based Caching Method corresponds to \u201ca search-based accumulation method\u201d of the present invention.","Here, the caching method determiner  determines the caching method in accordance with any one of indexes (A) to (C) described below. When using any one of the indexes, the determination shall be performed while putting priority on capacity of the metadata information accumulator , in other words, a hard disk or a memory.","(A) Manual","A user determines the caching method per service. For example, a pop-up is displayed, and a user determines the caching method.","(B) Pre-Configure","The caching method per service has been previously registered in the service\/metadata information accumulator . For example, in a high-quality VoD video service, the number of content is limited, so that All Caching Method has been registered, whereas in the video posting service, the number of content is extremely large, so that Query-based Caching Method has been registered.","(C) Auto","This index automatically determines the caching method per service. The determination is based on any one of determination references described below. However, it is not limited thereto, and any determination reference may be used as far as the caching method can be determined.\n\n","The cache update frequency\/time determiner  determines the recommended update frequency and the recommended update time of a cache as well as the cache effective period by an instruction from the cache manager  in units of an update (in units of a service or in units of a registration query) depending on the caching method, and registers the recommended update frequency and the recommended update time of a cache as well as the cache effective period in the service\/metadata information accumulator . The recommended update frequency, the recommended update time, and the cache effective period may be determined in the cache update frequency\/time determiner , however, may have been previously registered in the service\/metadata information accumulator  per service. The recommended update frequency corresponds to \u201cthe update frequency of the metadata storage\u201d of the present invention, whereas the recommended update time corresponds to \u201cthe update period of time of the metadata storage\u201d of the present invention.","A cache update unit differs depending on the caching method. All Caching Method employs an update in units of a service, whereas Query-based Caching Method employs an update in units of a registration query. Additionally, only when the caching method is Query-based Caching Method, a cache is erased and the cache effective period is registered.","The cache update frequency\/time determiner  determines the recommended update frequency, the recommended update time, and the cache effective period by means of methods as follows.","(A) Recommended Update Frequency","The recommended update frequency is determined based on the view frequency or the search frequency registered in the service\/metadata information accumulator . With respect to the content having the high view frequency or search frequency, the recommended update frequency is set with a high value, and in the contrary, with respect to the content having the low view frequency and search frequency, the recommended update frequency is set with a low value. The recommended update frequency is determined depending on the view frequency, as the following, for example, \u201cGiven that the view frequency is equal to or less than five times, the recommended update frequency is performed every other day; given that the view frequency is six to ten times, the recommended update frequency is performed every twelve hours; and given that the view frequency is equal to or more than eleven times, the recommended update frequency is performed every six hours\u201d. The recommended update frequency may have been previously registered in the service\/metadata information accumulator  without using the cache update frequency\/time determiner . In this case, for example, with respect to the content which will be displayed on a top screen at the time of starting the ECG application, it is desirable to keep the content always in a latest state, so that with respect to the service having such content or the registration query associated with the metadata of such content, the recommended update frequency is set with a high value.","(B) Recommended Update Time","The recommended update time is determined based on an increasing number of metadata provided by the metadata providing device every a unit time. For example, given that the total number of metadata is obtained from the metadata providing device every a unit time and a variation of an increase in the number of metadata is \u201cAM10:00: 10, PM2:00: 10, PM6:00: 20, PM10:00: 100\u201d, the recommended update time is determined as PM10:00 or the like.","The recommended update time may have been previously registered in the service\/metadata information accumulator  without using the cache update frequency\/time determiner . In this case, with respect to the service that it is known that a cache will be frequently updated at a specific time, the time is registered as the recommended update time. For example, when it is previously known that metadata is updated at a turn of a day like a broadcast service, the turn of a day is registered as the recommended update time.","(C) Cache Effective Period","Depending on the search frequency or the view frequency, the cache effective period is set. For example, like the following as \u201cGiven that the view frequency is equal to or less than five times, the cache effective period is three days; given that the view frequency is six to ten times, the cache effective period is ten days; and given that the view frequency is equal to or more than eleven times, the cache effective period is twenty days\u201d, the cache effective period is determined depending on the view frequency or the search frequency.","[Metadata Obtainment\/Update Requesting Unit ]","A metadata obtainment\/update requesting unit  requests for the metadata obtainment to the metadata providing device in response to the metadata obtainment request from the cache manager . From the cache manager , the metadata collection speed, the number of obtained metadata, and the service information (for example, the information for metadata obtainment) are passed, and based thereon, the metadata obtainment\/update requesting unit  obtains the metadata. The metadata collection speed shall be obtained every time the metadata obtainment\/update requesting unit  requests for the metadata obtainment to the metadata providing device.","For example, explained below is an example in a case where \u201cthe metadata collection speed: 100 per one request, the number of metadata obtainment: 500, the service information: a metadata obtainment URL of the metadata providing device\u201d are passed to the metadata obtainment\/update requesting unit .","When 100 are obtained at an initial request and the next request is made to the metadata providing device, the metadata collection speed is obtained again. At that time, if the metadata collection speed is changed to 10 because of a surge in the CPU load or the like due to the start of other applications etc., the metadata is obtained depending on its obtainment speed. By repeatedly performing the above operations, the metadata is obtained until the total number of metadata obtainment.","[Cache Manager ]","The cache manager  confirms, with respect to each of the services registered in the service\/metadata information accumulator , whether or not the caching method in regard to each of the services has been registered, and with respect to the service having not been registered, the cache manager  requests the caching method determiner  to determine the caching method, and then, registers in the service\/metadata information accumulator  the caching method determined by the caching method determiner .","The cache manager  executes the following processing only at an initial time with respect to the service in which All Caching Method has been registered. That is, the cache manager , from the metadata providing device relevant to the service, obtains all the metadata held by the metadata providing device, and in association with the aforementioned service, stores the metadata in the service\/metadata information accumulator . This processing corresponds to processing of \u201ca metadata-obtainment processing unit\u201d of the present invention, and the cache manager  includes the metadata-obtainment processing unit.","In the obtainment request for metadata, the metadata collection speed is passed from the metadata collection speed determiner , and is specified to the metadata obtainment\/update requesting unit  together with the search object service.","Additionally, when a search query (it has the search condition and the search object service) is provided from the user interface unit , the cache manager  judges the caching method of the search object service.","In a case of All Caching Method, in the metadata having been previously obtained with respect to the search object service, the cache manager  searches the metadata coincident with the search condition, and displays the found metadata through the user interface unit . This corresponds to processing of \u201ca first search processing unit\u201d of the present invention.","In a case of Query-based Caching Method, the cache manager  judges whether or not the registration query coincident with the search condition in the search query exists, and when the registration query exists, the cache manager  obtains the metadata corresponding to the registration query from the metadata\/information accumulator , and displays the registration query through the user interface unit . When the registration query coincident with the search condition does not exist, the cache manager  performs the obtainment request for metadata to the metadata obtainment\/update requesting unit , and displays the obtained metadata through the user interface , and stores the metadata in the service\/metadata information accumulator  in association with the search condition (registration query) in the search object service. This corresponds to processing of \u201ca second search processing unit\u201d of the present invention. At the time of the obtainment request for metadata, the caching manager  obtains the metadata collection speed from the metadata collection speed determiner , and passes the metadata collection speed to the metadata obtainment\/update requesting unit  as well as the search object service, the search condition, and the number of metadata collection.","Note that in the metadata (for example, the content list) displayed through the user interface unit , upon being specified certain metadata (specification of certain content), the cache manager  may download the content corresponding to the specified metadata from a content server which manages the content (the metadata providing device may have a function of the content server), and may pass the content to a content processing unit (not shown in the drawings) which processes the content. In this time, an address of the content server is included, for example, in the metadata.","Additionally, when the search query exists; when the metadata is newly obtained; or when the metadata of a cache is updated etc., the cache manager  instructs the cache update frequency\/time determiner  to determine the recommended update frequency and the recommended update time of cache as well as the cache effective period. Then, the cache manager  registers in the service\/metadata information accumulator  the determined recommended update frequency, recommended update time, and cache effective period. Note that the determination and the registration of the cache effective period are performed only with respect to the service in Query-based Caching Method.","In addition, the cache manager  determines the next update time and date of cache by using the recommended update time, the recommended update frequency, and the last update time and date, and registers the next update time and date of cache in the service\/metadata information accumulator .","Moreover, the cache manager  determines the cache erasure time and date by using the cache effective period and the last update time and date, and registers the cache erasure time and date in the service\/metadata information accumulator . In determining the next update time and date of cache, it does not matter on which of the recommended update frequency or the recommended update time priority is put. For example, given that the last update time: 2008\/04\/03 PM4:00; the recommended update frequency: 2 days; and the recommended update time: AM3:00, it makes no difference whether the next update time and date of cache is 2008\/04\/05 PM4:00 or 2008\/04\/05 AM3:00. The determination of the cache erasure time and date is performed only in a case of Query-based Caching Method.","Further, the cache manager  periodically monitors the service information registered in the service\/metadata information accumulator , and updates\/erases a cache. In other words, the cache manager  confirms the next update time and date of cache (update requirement) and the cache erasure time and date, and when the cache erasure time and date elapses, the cache manager  erases the cache, and when a cache update time and date elapses (when the update requirement is established), the cache manager  executes update processing of the metadata. Note that the erasure of the cache is performed only in a case of Query-based Caching Method. The cache manager  has \u201ca first judging unit\u201d for judging whether or not the update requirement with respect to the service in All Caching Method has been established and \u201ca first update processing unit\u201d for updating the metadata with respect to the service of which update requirement has been established. Additionally, the cache manager  has \u201ca second judging unit\u201d for judging whether or not the update requirement has been established per registration query with respect to the service in Query-based Caching Method and \u201ca second update processing unit\u201d for updating the metadata with respect to a combination of the service and the registration query, of which update requirement has been established.","[Operation Sequence]","Hereinafter, an operation sequence of the metadata collecting device  in  will be explained by separating the operation sequence into three parts of (1) at the time of starting the metadata collecting device , (2) the update timing of the cached metadata, and (3) an occurrence of the search query from a user (interface).","(1) At the Time of Starting the Metadata Collecting Device ","Each of  is a flow chart explaining the operation sequence executed at the time of starting the metadata collecting device . Here, the starting of the metadata collecting device  means starting of the metadata collection application like ECG.","(At the Time of an Initial Start)","Explained below is a sequence when the metadata of the content is not at all cached to the service\/metadata information accumulator  at the time of starting the ECG application, with reference to . Note that explained afterward is the sequence focused on one service, however if a plurality of services exist, it is only necessary that these sequences be processed in parallel, alternatively, that after a certain service finishes, the next service be processed.","In Step , the metadata collecting device  is started. In other words, the ECG application is started. (S).","In Step , confirmed is whether or not the caching method is registered per service stored in the service\/metadata information accumulator  (S). When the caching method has been determined with respect to each of the services (YES), the step moves to Step . When the service of which caching method has not been determined (NO) exists, the step moves to Step .","In Step , in the caching method determiner , the caching method is determined per service, and is registered in the service\/metadata information accumulator  (S). The determination of the caching method is performed based on the above-mentioned judgment reference. The caching method is either one of All Caching Method or Query-based Caching Method.","In Step , judged is whether or not the caching method of the service on which attention is focused is All Caching Method (S). When the caching method is All Caching Method, the step moves to Step . When the caching method is Query-based Caching Method, the processing ends.","In Step , the metadata collection speed determiner  determines the metadata collection speed (S).","In Step , the cache manager  transmits to the metadata obtainment\/update requesting unit  the metadata collection speed determined in Step , and further, the number of metadata to be collected and the service information (for example, the information for metadata obtainment), and the metadata obtainment\/update requesting unit  collects the metadata from the metadata providing device based on those pieces of information (S). Because of All Caching Method, the number of metadata to be collected is all of the metadata held by the metadata providing device. Note that even in a case of All Caching Method, depending on the capacity of the hard disk or the like, the number of metadata to be collected may be concretely calculated and only the metadata of the calculated number of metadata may be collected.","In Step , in the cache update frequency\/time determiner , the recommended update frequency and the recommended update time are determined, and are registered in the service\/metadata information accumulator  (S).","In Step , in the cache manager , the next update time and date of cache is determined based on the recommended update frequency and the recommended update time, and is registered in the service\/metadata information accumulator  (S). And then, this sequence finishes.","(At the Time of the Second and Succeeding Start)","Hereinafter, explained is an operation sequence at the time of the second and succeeding start of the metadata collecting device  with reference to . Note that the service\/metadata information accumulator  has registered therein the caching method per service, and with respect to the service in at least All Caching Method, a cache thereof has been already stored. This sequence is directed to a case where the start of the metadata collecting device interlocks with the start of the ECG application. Therefore, a case where the ECG application is always started (even when a power source is turned off, the ECG application is started in the background) does not apply to this sequence. Note that explained afterward is the sequence focused on one service, however if a plurality of services exist, it is only necessary that these sequences be processed in parallel, alternatively, that after a certain service finishes, the next service be processed.","As shown in , in Step , the metadata collecting device  is started (S). In other words, the ECG application is started.","In Step , confirmed is whether the cache erasure time and date registered in the service\/metadata information accumulator  elapses per service in Query-based Caching Method (S). When the cache erasure time and date has elapsed (YES), a cache is erased (S), and this sequence ends. When the cache erasure time and date has not elapsed (NO), the step moves to Step .","In Step , confirmed is whether or not the cache update time and date registered in the service\/metadata information accumulator  has elapsed (S). When the cache update time and date has elapsed (YES), the step moves to Step . When the cache update time and date has not elapsed (NO), this sequence ends.","In Step , the metadata collection speed determiner  determines the metadata collection speed (S).","In Step , the cache manager  transmits to the metadata obtainment\/update requesting unit  the metadata collection speed determined in Step , and further, the number of metadata to be collected and the service information (for example, the information for metadata obtainment), and based on those pieces of information, the metadata obtainment\/update requesting unit  collects the metadata from the metadata providing device (S). Note that the transmission of the number of metadata to be collected is performed only in a case of Query-based Caching Method. In collecting the metadata, in a case of All Caching Method, only a difference is collected from the metadata providing device, whereas in a case of Query-based Caching Method, the metadata of the number of metadata to be collected (of the high-order number) requested from the cache manager  is collected from the metadata providing device.","In Step , in the cache update frequency\/time determiner , the recommended update frequency, the recommended update time, and the cache effective period are determined, and are registered in the service\/metadata information accumulator  (S). Note that, the effective period is determined and registered only in a case of Query-based Caching Method.","In Step , in the cache manager  the next update time and date of cache and the cache erasure time and date are determined based on the recommended update frequency, the recommended update time, and the cache effective period, and are registered in the service\/metadata information accumulator  (S). And then, this sequence ends. Note that the cache erasure time and date is determined and registered only in a case of Query-based Caching Method.","(2) Update\/Erasure Timing of Cache","Next, explained is an operation sequence in a cache-update\/erasure timing with reference to . Explained afterward is the sequence focused on one service, however if a plurality of services exist, it is only necessary that these sequences be processed in parallel, alternatively, that after a certain service finishes, the next service be processed.","(Cache-Update Timing)",{"@attributes":{"id":"p-0140","num":"0164"},"figref":"FIG. 5"},"In Step , confirmed is the cache update time and date registered in the service\/metadata information accumulator  in the service on which attention is focused (S). When the caching method of the service is Query-based Caching Method, the update time and date is confirmed per registration query, whereas in a case of All Caching Method, confirmed is the only-one-registered update time and date.","In Step , confirmed is whether or not the cache update time and date obtained in Step  has passed the present time (S). When the cache update time and date has not passed it (NO), this sequence ends. Meanwhile, when the cache update time and date has passed it (YES), the step moves to Step .","In Step , the metadata obtainment\/update requesting unit  confirms to the metadata providing device whether or not the update of the metadata exists per update unit (in a case of Query-based Caching Method, the registration query, or in a case of All Caching Method, the service) (S). When the update of the metadata exists, the step moves to Step . Meanwhile, when the update thereof does not exist, the step moves to Step .","In Step , the metadata collection speed determiner  determines the metadata collection speed (S).","In Step , in accordance with the metadata collection speed and the number of metadata to be collected determined in Step , the metadata is collected from the metadata collecting device, and formats of the collected metadata are unified in the metadata format unifier , and then, the unified metadata is accumulated in the service\/metadata information accumulator  (S). In a case of All Caching Method, only a difference is obtained, and the obtained difference is added to the service\/metadata information accumulator . This difference includes not only the metadata on new content, but also the metadata updated by the metadata providing device side with respect to the existed content. In the latter case, overwritten is the metadata before being updated which originally exists in the service\/metadata information accumulator . In a case of Query-based Caching Method, the metadata of the maximum number of caches per query is obtained, and is accumulated in the service\/metadata information accumulator . When the metadata of the content same as the obtained metadata already exists in the service\/metadata information accumulator , the existed metadata is overwritten.","In Step , in the cache update frequency\/time determiner , the recommended update frequency, the recommended update time, and the cache effective period are determined, and are registered in the service\/metadata information accumulator  (S). Note that the effective period is determined and registered only in a case of Query-based Caching Method.","In Step , in the cache manager , based on the recommended update frequency, the recommended update time, and the cache effective period, the next update time and date of cache and the cache erasure time and date are determined, and are registered in the service\/metadata information accumulator  (S). Then, this sequence ends. Note that the cache erasure time and date is determined and registered only in a case of Query-based Caching Method.","(Cache Erasure Timing)",{"@attributes":{"id":"p-0149","num":"0173"},"figref":"FIG. 6"},"In Step , confirmed is the cache erasure time and date registered in the service\/metadata information accumulator  per registration query (S).","In Step , confirmed is whether or not the cache erasure time and date obtained in Step  has passed the present time (S). When has not passed (NO), this sequence ends. On the other hand, when has passed (YES), the step moves to Step .","In Step , erased is a cache (metadata) corresponding to the registration query having passed the cache erasure time and date (S), and this sequence ends.","(3) An Occurrence of the Search Query From a User","Next explained is an operation sequence when the search query occurs from a user, with reference to .",{"@attributes":{"id":"p-0155","num":"0179"},"figref":"FIG. 7"},"In Step , specified are the search condition and the search object service of the content on the search screen as shown in  (S). In the example of , \u201csport\u201d is specified in \u201cGenre\u201d, whereas \u201ctennis\u201d is specified in \u201cKeyword\u201d as the search conditions, and \u201cHigh-quality VoD service\u201d and \u201cvideo posting service\u201d are specified as the search object services. The search conditions may include promotional information etc. such as recommended content or newly arrived content, in addition to \u201cGenre\u201d and \u201cKeyword\u201d. The search query in which the search condition and the search object service have been specified is transmitted from the user interface unit  to the cache manager .","In Step , the cache manager  judges a caching memory method based on the search query received in Step  per the specified service in the service\/metadata information accumulate . In a case of All Cashing Method, the step unconditionally moves to Step , whereas in a case of Query-based Caching Method, the step follows a procedure described below. That is, it is determined whether or not the registration query coincident with the search condition included in the search query is registered in the service\/metadata information accumulator , and when registered (YES in S), the step moves to Step , whereas when not registered (NO in S), the step moves to Step .","For example, given that the service information shown in  is registered in the service\/metadata information accumulator , in a case of the high-quality VoD service, because of All Cashing Method, the step moves to Step . On the other hand, in the video posting service, registered is only the registration query like \u201cGenre: sport, Keyword: tennis\u201d as a cache, and therefore, when the search condition same as this registration query is specified, the step moves to Step , whereas when the search condition different from this registration query is specified, the step moves to Step .","In Step , the metadata collection speed determiner  determines the metadata collection speed (S).","In Step , the cache manager  transmits to the metadata obtainment\/update requesting unit  the metadata collection speed determined in Step , and further, the number of metadata to be collected (the high-order number) and the service information (for example, the information for metadata obtainment), and based on those pieces of information, the metadata obtainment\/update requesting unit  collects the metadata from the metadata providing device (S).","Here, from the viewpoint of presenting a search result as soon as possible in obtaining the metadata, the step may move to Step  not after obtaining all the metadata of the above-mentioned number of metadata to be collected, but at the time of obtaining the metadata of the minimum-required number. For example, given that the number of metadata possible to be displayed on one screen is five and the number of metadata to be collected requested from the cache manager  is 500, after obtaining 20 also in consideration of transition of the screen, the step proceeds to Step , and the remaining 480 (=500\u221220) may be sequentially obtained after displaying the search result.","In Step , in the cache update frequency\/time determiner , the recommended update frequency, the recommended update time, and the cache effective period are determined, and are registered in the service\/metadata information accumulator  (S). Then, the step moves to Step . Note that the cache effective period is determined only with respect to the service in Query-based Caching Method.","In Step , in the cache manager , based on the recommended update frequency, the recommended update time, and the cache effective period, the next update time and date of cache and the cache erasure time and date are determined, and are registered in the service\/metadata information accumulator  (S). Note that the cache erasure time and date is determined and registered only with respect to the service in Query-based Caching Method.","In Step , all of the metadata are obtained from the service\/metadata information accumulator  with respect to all of the services to be searched (S). That is, with respect to the service in Query-based Caching Method, obtained is the metadata associated with the registration query coincident with the search condition from the service\/metadata information accumulator , whereas with respect to the service in All Cashing Method, the metadata coincident with the search condition is detected and obtained from the service\/metadata information accumulator . Then, the user interface unit  merges and displays the metadata obtained from the service\/metadata information accumulator  (S).  shows the example of the displayed metadata. Here, a merge method may employ any kind of method, and it is possible to employ the merge method in which a display is performed in the order of date or name.","As stated above, according to the embodiment of the present invention, the following effects can be obtained.","(1) It is possible to efficiently cache the metadata by selecting the cashing method of the metadata, per service, suitable therefor.","(2) It is possible to efficiently update the cached metadata. It is possible, for example, to keep the metadata of high-demand content in the latest state, whereas it is possible to prevent the metadata of low-demand content from being meaninglessly updated.","(3) It is possible to minimize an influence on other applications of a receiving terminal due to the metadata collection. Additionally, it is possible to minimize an influence due to a disturbance by setting the metadata collection speed in consideration of the network load or a metaserver load.","The metadata collecting device of this embodiment may also be realized using a general-purpose computer device as basic hardware. That is, the user interface unit , the metadata format unifier , the terminal\/server\/network load monitor , the metadata collection speed determiner , the caching method determiner , the cache update frequency\/time determiner , the metadata obtainment\/update requesting unit , the cache manager , and the network interface unit  can be realized by causing a processor mounted in the above described computer device to execute a program. In this case, the metadata collecting device may be realized by installing the above described program in the computer device beforehand or may be realized by storing the program in a storage medium such as a CD-ROM or distributing the above described program over a network and installing this program in the computer device as appropriate. Furthermore, the service\/metadata information accumulator  may also be realized using a memory device or hard disk incorporated in or externally added to the above described computer device or a storage medium such as CD-R, CD-RW, DVD-RAM, DVD-R as appropriate.","The present invention is not limited to the exact embodiments described above and can be embodied with its components modified in an implementation phase without departing from the scope of the invention. Also, arbitrary combinations of the components disclosed in the above-described embodiments can form various inventions. For example, some of the all components shown in the embodiments may be omitted. Furthermore, components from different embodiments may be combined as appropriate."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
