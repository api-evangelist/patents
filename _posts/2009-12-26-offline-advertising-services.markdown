---
title: Offline advertising services
abstract: Methods and apparatus for provision of offline advertising services are described. In one embodiment, content data is stored in a local memory of a computing device prior to going offline. Once offline, the stored content is provided from the local memory, while the metrics regarding the provided content is collected and later transmitted to a remote server. Other embodiments are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08621046&OS=08621046&RS=08621046
owner: Intel Corporation
number: 08621046
owner_city: Santa Clara
owner_country: US
publication_date: 20091226
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["The present disclosure generally relates to the field of computing. More particularly, an embodiment of the invention generally relates to techniques for provision of offline advertising services.","As the Internet is quickly becoming an integral part of everyday living, advertisements provided via the Internet has become a significant source of income for vendors that provide Internet-based services.","For example, Internet served advertisements that accompany applications (such as Gmail\u2122) may not be served, viewed or measured when such applications are used in their offline mode. More specifically, Internet applications like Gmail\u2122 may be accessed when the user is not connected to the Internet; however, Internet served advertisements that accompany such applications may not be served, viewed, or measured when such applications are used in their offline mode. This prevents Independent Software Vendors (ISVs) from being able to earn advertising revenue with their applications when such applications are accessed offline.","Accordingly, when a computing device is offline, advertising revenues may not be securely accounted for or realized.","In the following description, numerous specific details are set forth in order to provide a thorough understanding of various embodiments. However, various embodiments of the invention may be practiced without the specific details. In other instances, well-known methods, procedures, components, and circuits have not been described in detail so as not to obscure the particular embodiments of the invention. Further, various aspects of embodiments of the invention may be performed using various means, such as integrated semiconductor circuits (\u201chardware\u201d), computer-readable instructions organized into one or more programs (\u201csoftware\u201d), or some combination of hardware and software. For the purposes of this disclosure reference to \u201clogic\u201d shall mean either hardware, software (including for example micro-code that controls the operations of a processor), or some combination thereof.","Some of the embodiments discussed herein may allow for provision, realization, and\/or secure accounting of offline user views, for example, where a computing device displaying advertising is not connected to any online services such as the Internet, Wide Area Network (WAN), etc. As discussed herein, reference to examples regarding advertisement or content deliver services is intended to also equally apply to any type of user views (e.g., associated with advertising, multimedia (e.g., audio, image, and\/or video), parental control, etc. data). As discussed herein, \u201cuser views\u201d may be interchangeable with user consumption of content and\/or interaction with content.","In some current implementations, a user has to be connected to a server on-line to allow for one or more of: Delivery of ads, collection of interaction data, cycle\/refresh ads, enforce advertiser targeting criteria, implement user privacy controls, and\/or proper advertisement metric accounting. When a user goes off-line, however, the advertisement server has no way of tracking user views and metrics securely or other actions mentioned before. To this end, apparatus, method(s), and system(s) are provided to allow applications that work, at least partially, on a local computing device (e.g., without an Internet\/intranet or other private\/public WAN connection) to be able to securely display, authenticate, and\/or verify that user views are not tampered, e.g., to avoid possible erroneous user view metrics reporting, malicious\u2014either faked views by the user (vested interest), or by malicious software\/malware\/virus, etc. As will be further discussed herein, the local computing device may include a local memory (which may be any type of memory device such as those discussed herein with reference to ).","In one embodiment, images, video, audio, etc. are provided to the client  while offline (e.g., when dialup, Wireless Fidelity (WiFi), third generation partnership project (3G), etc. may be intermittent or temporarily unavailable). When the client goes back online, collected view analytic data or interaction data (e.g., user plays a game which is embedded into an Ad) are provided to an ad server and\/or CDN for secure accounting. In an embodiment, a Trusted Platform Module (TPM) may be used to protect data and\/or application execution related to user views on a local device while the device is offline. An embodiment provides a secure hardware environment for user view data and metric software to exist and to verify such data\/application has not been compromised while the device is not connected to a network.","Various computing environments may be used to implement the embodiments discussed herein. For example,  illustrates various components of an embodiment of a networking environment , which may be utilized to implement various embodiments discussed herein. The environment  may include a network  to enable communication between various devices such as a server computer , a desktop computer  (e.g., a workstation or a desktop computer), a laptop (or notebook) computer , a reproduction device  (e.g., a network printer, copier, facsimile, scanner, all-in-one device, etc.), a wireless access point , a personal digital assistant or smart phone , a rack-mounted computing system (not shown), a set top box, a digital picture frame, an Ultra Mobile Device (UMD), etc. The network  may be any type of a computer network including an intranet, the Internet, and\/or combinations thereof.","The devices - may be coupled to the network  through wired and\/or wireless connections. Hence, the network  may be a wired and\/or wireless network. For example, as illustrated in , the wireless access point  may be coupled to the network  to enable other wireless-capable devices (such as the device ) to communicate with the network . In one embodiment, the wireless access point  may include traffic management capabilities. Also, data communicated between the devices - may be encrypted (or cryptographically secured), e.g., to limit unauthorized access. In addition the network coupling the devices may be composed of a combination of a data network, used to transmit information, and a control network, used to control simple attributes of devices, like power state.","The network  may utilize any type of communication protocol such as Ethernet, Fast Ethernet, Gigabit Ethernet, wide-area network (WAN), fiber distributed data interface (FDDI), Token Ring, leased line, analog modem, digital subscriber line (DSL and its varieties such as high bit-rate DSL (HDSL), integrated services digital network DSL (IDSL), etc.), asynchronous transfer mode (ATM), cable modem, and\/or FireWire.","Wireless communication through the network  may be in accordance with one or more of the following: wireless local area network (WLAN), wireless wide area network (WWAN), code division multiple access (CDMA) cellular radiotelephone communication systems, global system for mobile communications (GSM) cellular radiotelephone systems, North American Digital Cellular (NADC) cellular radiotelephone systems, time division multiple access (TDMA) systems, extended TDMA (E-TDMA) cellular radiotelephone systems, third generation partnership project (3G) systems such as wide-band CDMA (WCDMA), etc. Moreover, network communication may be established by internal network interface devices (e.g., present within the same physical enclosure as a computing system) or external network interface devices (e.g., having a separate physical enclosure and\/or power supply than the computing system to which it is coupled) such as a network interface card or controller (NIC).","In an embodiment, devices - may provide, realize, and\/or securely account for offline user views, e.g., in accordance with local processing and\/or at the direction of server , as is discussed herein, e.g., with reference to remaining figures.","In some embodiments, performing at least some user view related operations on a local device may allow for more precise targeting since user profile data may be securely present on the local device. On the contrary, other options such as using browser cache or perfecting before a user goes offline, may not dynamically target users, cycle advertisement inventory, or provide trusted and detailed ad performance data.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2","b":["200","200","202","204","202","206","208","210","206","206"]},"The service  may include a policy manager, OS process, device context module , a local HTTP server  (e.g., at address 127.0.0.1, to provide ads\/content to the browser ), an HTTP client  (to couple with ad server(s) and\/or Content Delivery\/Distribution Networks (CDNs)), and a secure Local Ad\/content Server (LAS) database .","As shown in , client  may store the ads\/content pulled from ad servers and\/or CDNs in the secure database  which is then retrieved by the server . The WAN  may include ad server(s), CDN(s), cloud service(s), etc. in various embodiments. The device context module  may provide for awareness of power, bandwidth, connectivity state, display capabilities, security options, etc. parameters associated with the client . Also, device context module  may be used to determine when to request ads from WAN  services\/servers.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 3","FIG. 3","FIG. 2","FIG. 2"],"b":["202","204"]},"As shown, a client may first boot  (e.g., by setting up an account, enroll publishers or ad networks, and\/or provide profile information which may be used to initialize the device context ), and then send a page request  to a service (e.g., http:\/\/www.xyz.com) via LAS (which in an embodiment may be the OS HTTP client  of ). The service may respond  and the responses may be either directly delivered to the browser or stored in the database  of , for example. Operations - may be performed while the client  is online. Once the network connection becomes unavailable or unstable (e.g., with periodic disconnections) page elements may be fetched - by the user\/browser from a local ad server (e.g., such as the database  of ). As also shown, the LAS  may be refreshed - (e.g., by prefetching or updating previously fetched) data from the cloud once the client network connection is reestablished.","In one embodiment, ads may be periodically fetched from an ad server. For example (e.g., as a default option in an embodiment), pre-fetch may be performed asynchronously based on user profile (and subsequently served when offline). Also (e.g., as an opt-out option in an embodiment), ad\/content may be fetched when a user visits an online property (e.g., fetch when online and serve when offline). As previously discussed, the ads may be stored in a local database (e.g., database ). Also, while offline, ad servicing\/metrics from the local database may be securely tracked and stored and subsequently uploaded to ad\/content servers once online, e.g., based on network connection status.","In an embodiment, a secured database may be used for storing Ad metrics, user profile, and advertiser criteria at the client. This security can be provided through several options, such as encryption, authentication, and combinations thereof. Furthermore, the ads displayed while offline may be cycled by implementing advertiser frequency capping, TTL (Time To Live), etc. policies.","In some embodiments, processor utilization at the client device may be monitored (e.g., over some recent history), along with memory page faults, or other memory load\/access (e.g., over some recent history) and used as parameters when determining network availability, device availability, and\/or user preferences over a period of time to determine the best time window to interact with the service in the cloud. Each of the three criteria may be clusters of variables like bandwidth, latency for network, processor, memory, etc. for device and time of day and other self expressed data for user preferences.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4","b":["400","211","406","408"]},"In an embodiment, the network service(s)  are implemented by the OS and\/or drivers provided by the hardware on the client system. Network services may provide access to granular information on the state of the network connection including connection state, bandwidth consumed and available, and\/or other network parameters. For example, a polling and\/or a notification method to determine the status of the network connection may be implemented. This interface may be implemented with available APIs (Application Programming Interfaces) with the networking hardware driver or proprietary programming interfaces. The bandwidth consumption on the available network connection(s) may be monitored (e.g., based on historic data in an embodiment) as one of the inputs to determine the best time window to request advertising elements from the Ad server or upload locally collected metrics to the Ad server (e.g., when bandwidth consumption is reduced).","Referring to , an ad download manager  may utilize the following context information to determine the best time window to download advertising elements from the Ad server:\n\n","Regardless of whether the user opts out of offline ad provision, advertisements may still be stored in a local database on the client in an embodiment. This may be implemented as hardware secured or unsecured database on available forms of storage (e.g., Solid State Drive (SSD) or Hard Disk Drive (HDD)). The database may be segmented by partner publisher, web property and advertising elements.","The ad database may store the following in an embodiment:\n\n","Personal Profile Manager  may be implemented as an opt out mechanism (e.g., user is opted in by default) and mechanisms may be provided to the user to opt-out. In an embodiment, opt-out may be provided at the following two levels:","a. Service Opt-Out\u2014User has the option to completely opt out of the advertising service. This may be implemented through BIOS (Basic Input\/Output System), OS or application level controls that are accessible to and may be manipulated by the user.","b. Publisher Opt-Out\u2014The user has the option of opting out of the service for a particular publisher.","The user profile information may be collected and managed in a secured database. In some embodiments, some additional components of the personal profile may include:","(1) Application Usage History\n\n","(2) Personal Profile Information\n\n","(3) System Usage History\n\n","An ad criteria manager  may perform one or more of the following:\n\n","In an embodiment, an ad fetching mechanism may be implemented as an opt-out model where advertisements are pre-fetched from the ad server. If the user opts-out of offline ad provision, then the advertisements are cached only when the user visits the web property.","An ad metrics manager  may perform one or more of the following:","a. keep track of advertisements served on the client when user is offline (e.g., per partner, per property, etc.)","b. create secured data packet for transmission to ad server once online","c. interacts with the network services layer (e.g., services ) to determine the best time window to upload locally collected metrics to the ad server.","In some embodiments, choosing the advertisement to be displayed may be done by intersecting three criteria:","1. The advertisers targeting criteria","2. The user's profile information","3. The browsing context at the time a request to the ad network is made","When the user is offline, criteria 3 above may not be met since the client is not reachable by the ad server and the Ad server may not determine when the user may go offline. When the client is offline, the client and the ad sever may split the targeting work load in order to ensure user profile privacy\/protection. In an embodiment, this may be implemented as follows:","a. Create basic, non-PII profile: The actual, full user profile remains protected on the client and an abbreviated profile without any Personally Identifiable Information (PII) is created and sent to the ad server (e.g., gender, age, location).","b. Advertiser criteria: The ad server may use this information to intersect with the advertiser criteria and determine one or several advertiser matches. This information may be sent back to the client.","c. Ad serving priority: In case of more than one ad creative, rules that allow for determining which ad creative to pick for serving to the client","d. Run targeting algorithm. The client may use this information in conjunction with the full profile to refine the advertiser-user matches.","e. Request ad element(s): Using the refined targeting information, the client requests for one or more ad elements from the ad server (e.g., may be redirected to the ad content server at this point of time)","In some embodiments, when the user opts out of offline ad provision, the client may not create or store any profile information. No behavioral ad targeting may be carried out on the client. This, however, may not preclude behavioral targeting by the ad server. Separate mechanisms for opting out of behavioral targeting by the ad server may or may not exist.",{"@attributes":{"id":"p-0058","num":"0074"},"figref":"FIG. 5"},"In some embodiments, auctions may be run at two levels: (a) Pre-roll auction with bare-bones, non-PII user profile; and (b) Full-roll auction with full user profile, advertiser criteria and offline context.","In an embodiment, a time window is defined as a discrete, continuous period of time measured at equal intervals of real time. The duration of a time window is defined by a policy and could thus be one second long or one minute long or any other policy defined real time length.","In some embodiments, three clusters of elements may be defined for the three types of input elements\u2014User cluster, Publisher\/Property cluster and Algorithm cluster. Each cluster is assigned a unique weighting factor that is defined by a policy and contains its own, unique set of elements. Each element within a cluster is assigned a score between 0-10 based on some computation. The final publisher score evaluates to a value between 0-1 and is determined by:\n\nPublisher\/property score=(User cluster weight\u00d7\u03a3Element scores)+(Publisher cluster weight\u00d7\u03a3Element scores)+(Algorithm cluster weight\u00d7\u03a3Element scores)\n","A higher score indicates higher preference for requesting that publishers ad elements from the ad server. At the end of the prioritizing exercise, the publisher\/property that has the highest score is chosen as the winner and provides the ads to the client.","The user cluster groups all elements that are dependent on user behavior, including but not limited to, probability of user visiting a publishers web property (P(visit)), ad interaction time and time spent. More particularly, each element may have its own bounds of operation and its own units, e.g., time spent element is a discrete integer and denominated in \u2018time windows\u2019. Probability of visiting the property is a real number between 0 & 1. In one embodiment, in order to be able to sum up elements within their cluster, each element may be normalized on a unit-less scale of 0-1. Moreover, a user cluster may group all elements that are dependent on user behavior, including for example, interaction time, time spend, P(Visit), etc. P(Visit) defines the probability that the user will visit the web property in the current time window and is a real number between 0 & 1. This can be determined by using a Bayesian Inference model where historical evidence of visits to the web property is maintained (see, e.g., , where \u201cx\u201d indicates no visit and \u201c\u221a\u201d indicates a visit). This evidence is used to recalculate P(Visit) at the current time window.","Time Spent on property defines the amount of time a user spends on the partner web property and is expressed in real time per time window, e.g., user spent 20% of the time window on the partner property. Thus it is a real number between 0 and 1. Expected time spent in the current time window could simply be the running average of previous \u2018n\u2019 window times or could be expressed as a probability of the user spending more than a baseline fraction of time. This probability can be determined by using a Bayesian Inference model where historical evidence of times spent above or below baseline is maintained. This evidence is used to recalculate P(Time spent>Baseline) at the current time window. Referring to , which graphically illustrates tracking parameter value(s) over one or more time windows and using the historical values to predict value of a parameter in the current time window. In an embodiment, a baseline parameter value may be maintained to determine if the parameter value in each time windows is above or below this baseline value.","Ad element exposure time defines the amount of time all ad elements from a partner publisher were exposed to the user and is expressed in real time per time window, e.g., user spent 20% of the time window on the partner property. Thus it is a real number between 0 and 1. The expected exposure time at the current time window is calculated using the running average or Bayesian approach similar to the \u2018time spent on property\u2019 approach above.","A publisher\/property cluster may group all elements that are dependent on the publisher\/web property, including element size, priority, expired elements, server response time, etc. Element size may the average size of all advertising elements fetched from the ad server in a single transaction. This could be maintained as a running average of the past \u2018n\u2019 transactions with the ad server and is a real number between 0 and the maximum allowed payload by the underlying transport mechanism. Server response time may define the expected response time of the ad sever to a request for ad elements and is expressed in real time units. The expected server response time at the current time window is calculated using the running average or Bayesian approach similar to the \u2018time spent on property\u2019 approach above. A policy decision needs to be made to prioritize ad servers with larger response times or to prioritize ad servers with lower response times. Accordingly, the expected server response time may be normalized as follows:","a. Policy: Prioritize larger response times\n\n","b. Policy: Prioritize smaller response times\n\n","Publisher priority may define the importance of the Intel-publisher relationship and is policy driven. This is expressed as an integer between 0-10 with 10 indicating highest priority and 0 indicating lowest priority. Expired elements may define the proportion of ad elements that have expired before being refreshed and is expressed as a proportion of expired to total ad elements for the publisher and is thus a real number between 0 and 1, with 0 indicating no expired ad elements and 1 indicating all ad elements have expired. Ad element expiry policy is defined by the advertiser.","An algorithm cluster may group all elements that influence the outcome of the results due to the nature of the ranking algorithm, e.g., including number of times selected. Number of times selected may define the number of times ad elements have been requested in the past \u2018n\u2019 time windows. It is conceivable that factors like excessive user activity on a particular site or very fast ad server repeatedly prioritizes one (or a small set of) ad server(s) and ad elements from other partner publishers never get downloaded. To avoid this situation, publishers\/properties that have not been selected for download are prioritized over those that have already been selected for download. This is expressed as an integer between 0 (never selected) and \u2018n\u2019 (always selected) with \u2018n\u2019 indicating the number of time windows for which the history is being tracked. Num. times selected is normalized as: (a) 0 maps to 10 on the normalized scale; and (b) \u2018n\u2019 maps to 0 on the normalized scale.","In an embodiment, \u201cstale\u201d Ads may be deleted from the database, e.g., on a timed (periodic) removal or based on response received from ad server (indicating to remove certain or all or old ad elements\u2014\u2018Old\u2019 as defined by policy). Also, in one embodiment, a partial auction may be performed, e.g., to determine one or more advertisers who will later participate in a full auction. In an embodiment, winners of partial auction may have equal probability of being selected before going into full auction. A full auction may select an ad element to be displayed on publisher site when accessed by the user.","Moreover, network status may be taken into account to determine whether to request ad elements from an ad server. For example three clusters may be composed of input elements\u2014user preferences, device capabilities and partner (over network) characteristics. Each cluster may be assigned a unique weighting factor that is defined by a policy and contains its own, unique set of elements. Each element within a cluster may be assigned a score between 0-10 based on some computation. Moreover, in order to be able to sum up elements within their cluster, each element may be normalized on a unit-less scale of 0-10. Network availability may be defined as a Boolean variable, e.g., 1: Network services available; 0: Network services not available. This could be implemented as a ping to the ad server, where ping response failure evaluates to 0 and ping success evaluates to 1. Network availability is not normalized. The user preferences cluster may define users' self-expressed preferences (e.g., don't connect between 6 pm-10 pm\u2014Time of Day control, don't connect over a tethered connection like when using a cell phone connected to the PC to access the network on the PC, etc.). The device capabilities cluster may define capabilities\/limitations of the device, for example, (a) static properties such as type of network, type of physical link, etc. (although they may change from time to time, e.g., when a user switches from a LAN connection to a WiFi network); and (b) dynamic properties such as (average) bandwidth used\/available over time windows, device load that could in turn be measured as: processor utilization, memory load (number of page faults), disk load (number of reads or writes), etc.","The partner (over network) characteristics cluster may define partner characteristics such as publisher priority (a function of relationship between a managing entity and the partner), response time (which could be determined from ping response latency or dynamically tracked as ad elements are requested). A go\/no go score may evaluate based on a value between 0-1. Compute score as:\n\nGo No-Go Score=Network Availability*(User preferences. cluster weight\u00d7\u03a3Element scores)+(Device capabilities cluster weight\u00d7\u03a3Element scores)+(Partner characteristics cluster weight\u00d7\u03a3Element Scores)\n","A threshold could be a 2-level threshold that when reached indicates a \u2018Go\u2019 decision and a minimum level is passed on the way down indicates a \u2018No go\u2019 decision. For example, let upper and lower thresholds be T(max) and T(min) respectively, where 0<T(min)<T(max)<1. If T(min)<=\u2018Go No-Go Score\u2019<=T(max) then the decision is a \u2018Go\u2019. If the \u2018Go No-Go Score\u2019 is rising (Value in previous time window<value in current time window) AND the score is greater than T(min), then the decision is a \u2018Go\u2019. If the \u2018Go No-Go Score\u2019 is falling (Value in previous time window>value in current time window) AND the score is lesser than T(min), then the decision is a \u2018No Go\u2019.",{"@attributes":{"id":"p-0075","num":"0093"},"figref":["FIG. 7","FIGS. 1-6","FIGS. 1-6","FIG. 7"],"b":["700","700","700"]},"Moreover, the computing system  may include one or more central processing unit(s) (CPUs)  or processors that communicate via an interconnection network (or bus) . The processors  may include a general purpose processor, a network processor (that processes data communicated over a computer network  which may be the same or similar to network  of ), or other types of a processor (including a reduced instruction set computer (RISC) processor or a complex instruction set computer (CISC)). Moreover, the processors  may have a single or multiple core design. The processors  with a multiple core design may integrate different types of processor cores on the same integrated circuit (IC) die. Also, the processors  with a multiple core design may be implemented as symmetrical or asymmetrical multiprocessors. Additionally, the processors  may utilize an SIMD architecture.","A chipset  may also communicate with the interconnection network . The chipset  may include a memory control hub (MCH) . The MCH  may include a memory controller  that communicates with a memory . The memory  may store data, including sequences of instructions that are executed by the CPU , or any other device included in the computing system . In one embodiment of the invention, the memory  may include one or more volatile storage (or memory) devices such as random access memory (RAM), dynamic RAM (DRAM), synchronous DRAM (SDRAM), static RAM (SRAM), or other types of storage devices. Nonvolatile memory may also be utilized such as a hard disk. Additional devices may communicate via the interconnection network , such as multiple CPUs and\/or multiple system memories.","The MCH  may also include a graphics interface  that communicates with a display . The display  may be used to show a user results of operations associated with the Brownian Bridge algorithm discussed herein. In one embodiment of the invention, the graphics interface  may communicate with the display  via an accelerated graphics port (AGP). In an embodiment of the invention, the display  may be a flat panel display that communicates with the graphics interface  through, for example, a signal converter that translates a digital representation of an image stored in a storage device such as video memory or system memory into display signals that are interpreted and displayed by the display . The display signals produced by the interface  may pass through various control devices before being interpreted by and subsequently displayed on the display .","A hub interface  may allow the MCH  and an input\/output control hub (ICH)  to communicate. The ICH  may provide an interface to I\/O devices that communicate with the computing system . The ICH  may communicate with a bus  through a peripheral bridge (or controller) , such as a peripheral component interconnect (PCI) bridge, a universal serial bus (USB) controller, or other types of peripheral bridges or controllers. The bridge  may provide a data path between the CPU  and peripheral devices. Other types of topologies may be utilized. Also, multiple buses may communicate with the ICH , e.g., through multiple bridges or controllers. Moreover, other peripherals in communication with the ICH  may include, in various embodiments of the invention, integrated drive electronics (IDE) or small computer system interface (SCSI) hard drive(s), USB port(s), a keyboard, a mouse, parallel port(s), serial port(s), floppy disk drive(s), digital output support (e.g., digital video interface (DVI)), or other devices.","The bus  may communicate with an audio device , one or more disk drive(s) , and a network interface device , which may be in communication with the computer network . In an embodiment, the device  may be a NIC capable of wireless communication. Other devices may communicate via the bus . Also, various components (such as the network interface device ) may communicate with the MCH  in some embodiments of the invention. In addition, the processor  and the MCH  (or one or more of MCH's components) may be combined to form a single chip. Furthermore, the graphics interface  may be included within the MCH  in other embodiments of the invention.","Furthermore, the computing system  may include volatile and\/or nonvolatile memory (or storage). For example, nonvolatile memory may include one or more of the following: read-only memory (ROM), programmable ROM (PROM), erasable PROM (EPROM), electrically EPROM (EEPROM), a disk drive (e.g., ), a floppy disk, a compact disk ROM (CD-ROM), a digital versatile disk (DVD), flash memory, a magneto-optical disk, or other types of nonvolatile machine-readable media that are capable of storing electronic data (e.g., including instructions). In an embodiment, components of the system  may be arranged in a point-to-point (PtP) configuration such as discussed with reference to . For example, processors, memory, and\/or input\/output devices may be interconnected by a number of point-to-point interfaces.","More specifically,  illustrates a computing system  that is arranged in a point-to-point (PtP) configuration, according to an embodiment of the invention. In particular,  shows a system where processors, memory, and input\/output devices are interconnected by a number of point-to-point interfaces. The operations discussed with reference to  may be performed by one or more components of the system .","As illustrated in , the system  may include several processors, of which only two, processors  and  are shown for clarity. The processors  and  may each include a local memory controller hub (MCH)  and  to couple with memories  and . The memories  and\/or  may store various data such as those discussed with reference to the memory  of .","The processors  and  may be any suitable processor such as those discussed with reference to the processors  of . The processors  and  may exchange data via a point-to-point (PtP) interface  using PtP interface circuits  and , respectively. The processors  and  may each exchange data with a chipset  via individual PtP interfaces  and  using point to point interface circuits , , , and . The chipset  may also exchange data with a high-performance graphics circuit  via a high-performance graphics interface , using a PtP interface circuit .","At least one embodiment of the invention may be provided by utilizing the processors  and . For example, the processors  and\/or  may perform one or more of the operations of . Other embodiments of the invention, however, may exist in other circuits, logic units, or devices within the system  of . Furthermore, other embodiments of the invention may be distributed throughout several circuits, logic units, or devices illustrated in .","The chipset  may be coupled to a bus  using a PtP interface circuit . The bus  may have one or more devices coupled to it, such as a bus bridge  and I\/O devices . Via a bus , the bus bridge  may be coupled to other devices such as a keyboard\/mouse , the network interface device  discussed with reference to  (such as modems, network interface cards (NICs), or the like that may be coupled to the computer network ), audio I\/O device, and\/or a data storage device . The data storage device  may store code  that may be executed by the processors  and\/or .","In various embodiments of the invention, the operations discussed herein, e.g., with reference to , may be implemented as hardware (e.g., logic circuitry), software (including, for example, micro-code that controls the operations of a processor such as the processors discussed herein), firmware, or combinations thereof, which may be provided as a computer program product, e.g., including a tangible machine-readable or computer-readable medium having stored thereon instructions (or software procedures) used to program a computer (e.g., a processor or other logic of a computing device) to perform an operation discussed herein. The machine-readable medium may include any storage device such as those discussed herein.","Additionally, such tangible computer-readable media may be downloaded as a computer program product, wherein the program may be transferred from a remote computer (e.g., a server) to a requesting computer (e.g., a client) by way of data signals transferred via a communication link (e.g., a bus, a modem, or a network connection).","Reference in the specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least an implementation. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification may or may not be all referring to the same embodiment.","Also, in the description and claims, the terms \u201ccoupled\u201d and \u201cconnected,\u201d along with their derivatives, may be used. In some embodiments of the invention, \u201cconnected\u201d may be used to indicate that two or more elements are in direct physical or electrical contact with each other. \u201cCoupled\u201d may mean that two or more elements are in direct physical or electrical contact. However, \u201ccoupled\u201d may also mean that two or more elements may not be in direct contact with each other, but may still cooperate or interact with each other.","Thus, although embodiments of the invention have been described in language specific to structural features and\/or methodological acts, it is to be understood that claimed subject matter may not be limited to the specific features or acts described. Rather, the specific features and acts are disclosed as sample forms of implementing the claimed subject matter."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The detailed description is provided with reference to the accompanying figures. In the figures, the left-most digit(s) of a reference number identifies the figure in which the reference number first appears. The use of the same reference numbers in different figures indicates similar or identical items.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIGS. 1-2","b":["4","7","8"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 6 and 6A"}]},"DETDESC":[{},{}]}
