---
title: Apparatus, system, and method for link maintenance
abstract: An apparatus, system, and method are disclosed for link maintenance. A plurality of state machines operate a plurality of first links between data management nodes with each first link in an online state. A transition module transitions the plurality of first links from the online state to a degraded state and from the online state to an offline pending state in response to an offline request. The transition module further transitions the plurality of first links from the degraded state to an online pending state when a degraded link time interval expires and from the offline pending state to an offline state if all pending tasks on the plurality of first links are completed. The transition module further transitions the plurality of first links from the online pending state to the online state if each first link is validated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08565067&OS=08565067&RS=08565067
owner: International Business Machines Corporation
number: 08565067
owner_city: Armonk
owner_country: US
publication_date: 20090109
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","This invention relates to links and more particularly relates to link maintenance.","2. Description of the Related Art","Data processing systems (DPSs) often use links to communicate commands and data between data management nodes. Redundant links may be used to assure that if first links fail, second links can continue to communicate commands and data between data management nodes.","Unfortunately, in order to change the configuration of the links, all data management nodes must be taken offline to prevent failures to the DPS. Forcing the data management nodes offline may impair the DPS for a significant period of time.","From the foregoing discussion, there is a need for an apparatus, system, and method that automate link maintenance. Beneficially, such an apparatus, system, and method would not require forcing one or more data management nodes offline by allowing concurrent maintenance of one or more links.","The present invention has been developed in response to the present state of the art, and in particular, in response to the problems and needs in the art that have not yet been fully solved by currently available apparatus, systems, and methods for link maintenance. Accordingly, the present invention has been developed to provide an apparatus, system, and method for link maintenance that overcome many or all of the above discussed shortcomings in the art.","The apparatus for link maintenance is provided with a plurality of modules configured to functionally execute the steps of operating a plurality of first links, detecting a connection failure, transitioning the plurality of first links from the online state to a degraded state, transitioning the plurality of first links from the online state to an offline pending state, completing pending tasks, transitioning the plurality of first links from the degraded state to an online pending state, validating each first link, transitioning the plurality of first links from the offline pending state to an offline state, and transitioning the plurality of first links from the online pending state to the online state. These modules in the described embodiments include a plurality of state machines, a detection module, a transition module, a completion module, and a validation module.","The plurality of state machines operate a plurality of first links between data management nodes with each first link in an online state, wherein tasks are communicated over the plurality of first links in the online state. The detection module detects a connection failure of at least one first link. The transition module transitions the plurality of first links from the online state to a degraded state in response to detecting the connection failure.","The transition module further transitions the plurality of first links from the online state to an offline pending state in response to an offline request. The completion module completes pending tasks on each first link during the offline pending state. The transition module further transitions the plurality of first links from the degraded state to an online pending state when a degraded link time interval expires. The validation module validates each first link during the online pending state. The transition module further transitions the plurality of first links from the offline pending state to an offline state if all pending tasks on the plurality of first links are completed or in response to a force offline command. The transition module further transitions the plurality of first links from the online pending state to the online state if each first link is validated.","A system of the present invention is also presented for link maintenance. The system may be embodied in a data processing system (DPS). In particular, the system, in one embodiment, includes a plurality of data management nodes, a plurality of first links, a plurality of state machines, a detection module, a transition module, a completion module, and a validation module.","The plurality of first links connect the data management nodes. The plurality of state machines operate the plurality of first links with each first link in an online state, wherein tasks are communicated over the plurality of first links in the online state.","The detection module detects a connection failure of at least one first link. The transition module transitions the plurality of first links from the online state to a degraded state in response to detecting the connection failure. The transition module further transitions the plurality of first links from the online state to an offline pending state in response to an offline request. The completion module completes pending tasks on each first link during the offline pending state.","The transition module further transitions the plurality of first links from the degraded state to an online pending state when a degraded link time interval expires. The validation module validates each first link during the online pending state. The transition module further transitions the plurality of first links from the offline pending state to an offline state if all pending tasks on the plurality of first links are completed else in response to a force offline command. The transition module further transitions the plurality of first links from the online pending state to the online state if each first link is validated.","A method of the present invention is also presented for link maintenance. The method in the disclosed embodiments substantially includes the steps to carry out the functions presented above with respect to the operation of the described apparatus and system. In one embodiment, the method includes operating a plurality of first links, detecting a connection failure, transitioning the plurality of first links from the online state to a degraded state, transitioning the plurality of first links from the online state to an offline pending state, transitioning the plurality of first links from the degraded state to an online pending state, transitioning the plurality of first links from the offline pending state to an offline state, and transitioning the plurality of first links from the online pending state to the online state.","A plurality of state machines operate a plurality of first links between data management nodes with each first link in an online state, wherein tasks are communicated over the plurality of first links in the online state. A transition module transitions the plurality of first links from the online state to a degraded state in response to detecting the connection failure of at least one first link. The transition module further transitions the plurality of first links from the online state to an offline pending state in response to an offline request, wherein the offline pending state completes pending tasks on each first link.","The transition module further transitions the plurality of first links from the degraded state to an online pending state when a degraded link time interval expires, wherein the online pending state validates each first link during. The transition module further transitions the plurality of first links from the offline pending state to an offline state if all pending tasks on the plurality of first links are completed else in response to a force offline command. The transition module further transitions the plurality of first links from the online pending state to the online state if each first link is validated.","References throughout this specification to features, advantages, or similar language do not imply that all of the features and advantages that may be realized with the present invention should be or are in any single embodiment of the invention. Rather, language referring to the features and advantages is understood to mean that a specific feature, advantage, or characteristic described in connection with an embodiment is included in at least one embodiment of the present invention. Thus, discussion of the features and advantages, and similar language, throughout this specification may, but do not necessarily, refer to the same embodiment.","Furthermore, the described features, advantages, and characteristics of the invention may be combined in any suitable manner in one or more embodiments. One skilled in the relevant art will recognize that the invention may be practiced without one or more of the specific features or advantages of a particular embodiment. In other instances, additional features and advantages may be recognized in certain embodiments that may not be present in all embodiments of the invention.","The present invention automates link maintenance. Beneficially, such an apparatus, system, and method would not require forcing one or more data management nodes offline by allowing concurrent maintenance of one or more links. These features and advantages of the present invention will become more fully apparent from the following description and appended claims, or may be learned by the practice of the invention as set forth hereinafter.","Many of the functional units described in this specification have been labeled as modules, in order to more particularly emphasize their implementation independence. Modules may include hardware circuits such as one or more processors with memory, Very Large Scale Integration (VLSI) circuits, gate arrays, programmable logic, and\/or discrete components. The hardware circuits may perform logic functions, execute computer readable programs stored on tangible storage devices, and\/or execute programmed functions. Modules may also include a computer readable storage medium comprising computer readable code stored on a tangible storage device that performs a function when executed by a hardware circuits such as a processor, microcontroller, or the like.","Reference throughout this specification to \u201cone embodiment,\u201d \u201can embodiment,\u201d or similar language means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, appearances of the phrases \u201cin one embodiment,\u201d \u201cin an embodiment,\u201d and similar language throughout this specification may, but do not necessarily, all refer to the same embodiment.","Furthermore, the described features, structures, or characteristics of the invention may be combined in any suitable manner in one or more embodiments. In the following description, numerous specific details are provided, such as examples of programming, software modules, user selections, network transactions, database queries, database structures, hardware modules, hardware circuits, hardware chips, etc., to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention may be practiced without one or more of the specific details, or with other methods, components, materials, and so forth. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 1","b":["100","100","105","115","100","105","115","105","115"],"i":["a","c ","a","c "]},"The network  may be selected from a dedicated fiber network, a local area network (LAN), a wide area network (WAN), the Internet, an Ethernet network, a token ring network, an enterprise intranet, and\/or the like. The network  may comprise one or more data management nodes that may provide one or more physical and\/or logical paths for transferring the data as is well known to those of skill in the art. For example, the network data management nodes may comprise one or more switches, routers, bridges, wireless LAN access points, or the like. The network  may establish communication between the plurality of clusters -. The communication over the network  may be through fiber optic cables, wires, wireless, and\/or the like as is well known to those of skill in the art.","Each cluster  may include one or more network switches, power distribution units (PDUs), uninterruptible power supplies (UPSs), and the like. In addition, each cluster  may include an external switch that may allow extra-cluster access to one or more data management nodes.","In one embodiment, the DPS  provides data storage, data replication, data manipulation, or the like services by using one or more links between a plurality of data management nodes for one or more clients or hosts. For example, the client may transfer data stored on a storage device of the first cluster to a storage device of the second cluster to replicate the data by using a link between the first cluster and the second cluster as will be described hereafter. The DPS  may be a TS7700 storage cluster produced by International Business Machines Corporation (IBM) of Armonk, N.Y.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 2","FIG. 2","FIG. 1","FIG. 1"],"b":["105","105","105","105","105","205","210","215","220","205","215","105","205","215"]},"The server  may be configured as a computer running an operating system (OS) such as an AIX\u00ae OS produced by International Business Machines Corporation (IBM) of Armonk, N.Y., a LINUX\u00ae OS, or the like. The server  may be connected to the network . In addition, virtualization nodes  and the data management nodes  may execute on the server . The server  may also act as the data management node  and may be identified by an Internet protocol (IP) address while interacting over the Internet.","In an embodiment, each data management node  provides magnetic tape drive services. The tape library  of each cluster  may include a plurality of magnetic tape drives and magnetic tapes that store the data. The data may be accessed, manipulated, replicated, and transferred from or stored to a particular magnetic tape of the tape library  as is well known to those of skill in the art.","In an embodiment, each data management node  acts as a connection point, a redistribution point, an end point, or the like for data transmission. In addition, each data management node  may be programmed to recognize other data management nodes , process data, and forward the data or commands to other data management nodes . Each data management node  may have a media access address or MAC address when the network  is configured as the LAN or the WAN. In an embodiment, each data management node  is selected from a server, a storage controller, a router, and a bridge.","Each data management node  may comprise a central processing unit (CPU), such as for example, a PowerPC\u00ae processor produced by IBM, a random access memory (RAM), one or more hard disk drives, two or more network interface (NIC) cards, and the like. In a particular example, the data management node  may be a 2U rack mounted unit with a two point four gigahertz (2.4 GHz) integrated circuit (IC) chip, a one gigabyte (1 GB) RAM, and sixteen (16) hard drives of two hundred (200) GB capacity. The hardware components of the plurality of data management nodes  may be heterogeneous while software components of each data management node  may or may not be the same.","The plurality of data management nodes  may communicate peer-to-peer over a plurality internal switches as is well known to those of skill in the art. Each switch may include a plurality of ports to handle all potential data management nodes  in the cluster . In a particular example, the switches may include one or more Ethernet switches, Gigabit Ethernet GigE switches, or the like.","In an example, the cluster  may be implemented within an enterprise environment. The cluster  may be accessible by navigating through a site's corporate domain name system (DNS) name server. A host may access the cluster  using a conventional interface or an access tool. The host may be a computer running zOS from IBM. An access to the cluster  may be carried out over any Internet protocol such as Hypertext Transfer Protocol (HTTP), File Transfer Protocol (FTP), Network File System (NFS), Andrew File System (AFS), Server Message Block (SMB), a Web service, or the like via an application programming interface (API).","In an embodiment, a cluster application may run on a redundant array of independent data management nodes  that are networked together for example, via the Ethernet. The server  may also host virtualization software such as a hypervisor to create the plurality of virtualization nodes  as is well known to those of skill in the art.","The software components for each data management node  may comprise one or more transport layers, an application layer, one or more host layers, a gateway protocol layer, an access layer, a file transaction and administration layer, a core components layer, and\/or the like as is well known to those of skill in the art. The gateway protocol layer may define one or more links that may be used to transfer data\/command among the plurality of clusters . In an embodiment, the computer readable program manages each first link at the application layer. In addition, the link management may be transparent to the transport layers and the host layers.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 3","b":["300","220","300","220","315","300","220","315","220","315"],"i":["a","c ","a","b","a","c ","a","b"]},"In the shown embodiment, the plurality of data management nodes -include a first link and a second link . Each first link and the second link may be configured as an actual physical link or a logical link as is well known to those of skill in the art. In one embodiment, the links ,  are a heterogeneous set of link connections. For example, the links ,  may comprise one or more Ethernet connections, one or more token ring networks, an Internet Protocol (IP) over one or more Fibre Channel connections, one or more Asynchronous Traffic Mode (ATM) networks, or the like. In addition, connections and networks may operate at a plurality of speeds and in a plurality of configurations.","The plurality of first links connect the data management nodes -. In an embodiment, a remote mount task operates over the links . For example, the remote mount task may operate over the first link between the first data management node and the second data management node using a network file system (NFS) protocol on the server . In another embodiment, a replication task operates over the links . The replication task may be to backup\/transfer the data between the plurality of data management nodes  using an Internet small computer small interface (iSCSI) protocol on the server .","Each first link and each second link is further shown in peer-to-peer communication over first communication connections and second communication connections respectively. The communication connections -may include the network , the Ethernet communication channels, the Gigabit Ethernet (GigE) communication channels, and\/or the like.","In an embodiment, the communication between the plurality of data management nodes -is intra-cluster, inter-cluster, or a combination thereof. In addition, each communication connection  may provide peer-to-peer communication among the plurality of data management nodes -. For example, a first data management node , a second data management node , and a third data management node may be the plurality of data management nodes  of the first cluster that mutually communicate over the communication connections -using the links . In another example, the first data management node , the second data management node , and the third data management node may be the data management nodes  of the first cluster , the second cluster , and the third cluster respectively that mutually communicate over the communication connections -using the links .","In an embodiment, one or more clusters  may comprise a domain. The domain of each cluster  may comprise a domain name system (DNS). The DNS may be a hierarchical naming system for each cluster  over the network  for example, configured as the Internet. The DNS may translate a hostname for example, www.cluster1.ibm.com to the IP address for example, 105.66.155.268.","In addition, the first link or the second link may include a plurality of link configurations that describe how a data set may be transferred\/replicated from a source data management node  to a target data management node . In one embodiment, the smallest data set is a namespace. In a particular example, the link configuration may include a source cluster DNS name, a target cluster DNS name, an IP address of the source server , an IP address of the target server , a replication\/transfer of data schedule, a transfer protocol or a transport configuration, the namespace of the data to be replicated\/transferred, a validation information, and\/or the like.","In the past, the data management nodes  were taken offline prior to making changes to links , . The present invention supports changing link configuration without taking data management nodes  offline as will be described hereafter.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 4","FIGS. 1 and 2","FIGS. 1-3"],"b":["400","400","105","400","305","310","400","400","405","410","415","420","425","430"]},"The plurality of state machines  operate a plurality of first links between the plurality of data management nodes -with each first link in an online state. The tasks are communicated over the plurality of first links in an online state. For example, the remote mount task may be communicated over the plurality of first links in the online state. In another example, the replication task may be communicated over the plurality of first links in the online state.","Each state machine  may be a model of behavior composed of a finite number of states for a link  with transitions between the states of the link . The state machines  may include a solid-state electronic circuit as is well known to those of skill in the art. Alternatively, the state machines  may be implemented in a computer readable program.","In an embodiment, the state machine  communicates state transition information and link activity information between the plurality of first links . In another embodiment, the state machine  communicates the state transition information and the link activity information between the plurality of second links ","The detection module  detects a connection failure of at least one first link . For example, when the data or the command is not transferred over the first link between the three (3) data management nodes -, the detection module  may detect the connection failure.","The connection failure may be due to a mechanical fault, an electrical fault, compatible issues of the hardware or software components, noise during wireless communication, and\/or the like. For example, the detection module  may detect the connection failure of the first link due to an electrical fault.","The detection module  may include a computer readable program stored on a tangible storage device. The computer readable program may be executed on the server  or the data management node . In one embodiment, the computer readable program is stored on a memory and executed by a processor of the server  and\/or the data management node .","The transition module  transitions a first link from the online state to a degraded state in response to detecting the connection failure. If a data management node attempts to communicate over the first link in the degraded state, the transition module  may also transition a first link to the degraded state. The transition module  further transitions a first link from the online state to an offline pending state in response to an offline request. The transition module  further transitions a first link from the degraded state to an online pending state when a degraded link time interval expires.","The transition module  may further transition the plurality of first links from the offline pending state to an offline state if all pending tasks on the plurality of first links are completed else in response to a force offline command. The transition module  further transitions the plurality of first links from the online pending state to the online state if each first link is validated.","The transition module  may include a computer readable program stored on a tangible storage device. The computer readable program may be executed on the server  or the data management node . In one embodiment, the computer readable program is stored on a memory and executed by a processor of the server  and\/or the data management node .","The completion module  completes pending tasks on each first link during the offline pending state. For example, the completion module  may complete pending tasks such as replication of data, remote mount, and\/or the like on each first link during the offline pending state. The completion module  may include a computer readable program stored on a tangible storage device. The computer readable program may be executed on the server  or the data management node . In one embodiment, the computer readable program is stored on a memory and executed by a processor of the server  and\/or the data management node .","In one embodiment, the configuration module  dynamically changes the configuration of one or more links ,  during an offline state. For example, the configuration module  may change link addresses, direct an administrator to replace adapters and\/or cables, or the like. The configuration module  may include a computer readable program stored on a tangible storage device. The computer readable program may be executed on the server  or the data management node . In one embodiment, the computer readable program is stored on a memory and executed by a processor of the server  and\/or the data management node .","The validation module  validates each first link during the online pending state. In an embodiment, a digital signature is used to validate each first link during the online pending state. In addition, a compression option may be selected to enable data compression across the first link to minimize network bandwidth requirements and an encryption option may be selected to enable encryption for example, a secure socket layer (SSL) for securing the first link ","The validation module  may include a computer readable program stored on a tangible storage device. The computer readable program is executed on the server  or the data management node . In one embodiment, the computer readable program is stored on a memory and executed by a processor of the server  and\/or the data management node .",{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 5","b":["500","500","505","515","525","550","560","500","510","520","530","535","540","545","555","565","500"]},"In an embodiment, the plurality of first links each have a state machine  comprising the online state , the degraded state , the offline pending state , the offline state , and the online pending state . For example, each first link may have a dedicated state machine  comprising the link states . The second links may also each have a state machine  comprising the online state , the degraded state , the offline pending state , the offline state , and the online pending state .","The plurality of state machines  operate the plurality of first links between data management nodes  with each first link in the online state . In the online state  each first link may be operational. The tasks are communicated over the plurality of first links in the online state . For example, the remote mount task and\/or the replication task between data management nodes  may be communicated over the plurality of first links in the online state .","The transition module  transitions  a first link from the online state  to the degraded state  in response to detecting the connection failure. For example, if the detection module  detects the communication error on the first link used for the remote mount task, the remote mount task may fail and the error may then be returned to the server  to indicate the connection failure. The transition module  may then transition  the first link from the online state  to the degraded state .","A degraded timer may determine a finite period of time for which the first link may remain in the degraded state . For example, the degraded timer may determine a finite period of two (2) minutes for which the first link may remain in the degraded state .","The transition module  further transitions  the plurality of first links from the online state  to the offline pending state  in response to an offline request. The user may issue the offline request. For example, the user may issue the offline request and in response to the offline request the transition module  may transition  the plurality of first links from the online state  to the offline pending state  as and when required for link maintenance.","In addition, the transition module  transitions  the plurality of first links from the degraded state  to the online pending state  when a degraded link time interval expires. For example, the transition module  may transition  the first link from the degraded state  to the online pending state  when the degraded link time interval of two (2) minutes determined by the degraded timer expires.","During the online pending state , the computer readable program may send logical configuration information to each first link . The logical configuration information may include a plurality of IP addresses for each physical link that configure the logical link . In addition, the computer readable program may update each first link with the logical configuration information.","The transition module  further transitions  the plurality of first links from the offline pending state  to the offline state  if all pending tasks on the plurality of first links are completed. For example, in response to a signal indicating completion of all tasks on the plurality of first links , the transition module  may transition  the plurality of first links from the offline pending state  to the offline state . In the offline state  no data management node -may be using the plurality of first links . The first link may then be safe to perform any maintenance task in the offline state .","Alternatively, the transition module  transitions  the plurality of first links from the offline pending state  to an offline state  in response to a force offline command. The user may issue the force offline command. If the user employs the force offline command, errors may occur as the first links go to the offline pending state  without completing pending tasks.","During the offline state , the data management nodes  remain online. In one embodiment, the configuration module  dynamically changes the configuration of one or more links ,  during the offline state .","The transition module  further transitions  the plurality of first links from the online pending state  to the online state  if each first link is validated. For example, if the validation module  validates each first link using the digital signature, the transition module  may transition  the plurality of first links from the online pending state  to the online state . The plurality of first links may then be online or operational.","The transition module  may transition  the plurality of first links from the degraded state  to the offline pending state  in response to the offline request. The user may issue the offline request. For example, in response to the offline request, the transition module  may transition  the first link from the degraded state  to the offline pending state .","In an embodiment, the transition module  transitions  the plurality of first links from the offline pending state  to the online pending state  in response to an online request. The user may issue the online request. For example, in response to the online request the transition module  may transition  the first link from the offline pending state  to the online pending state .","In another embodiment, the transition module  transitions  the plurality of first links from the offline state  to the online pending state  in response to the online request. The user may issue the online request. For example, in response to the online request the transition module  may transition  the first link from the offline state  to the online pending state .","In one more embodiment, the transition module  transitions  a state machine  of a second link to a same state as a first link if the second link shares hardware with the first link . The hardware may include the communication connections . For example, if the second link and the first link share the communication connections , the transition module  may transition  the state machine  of the second link to the offline pending state .","The offline pending state  completes pending tasks on each first link . For example, in the offline pending state  the first link may not be available for any future replication task and\/or remote mounting task. The user may issue a force offline command to force the transition to the offline state . Thus, in the offline state  the user may carry out concurrent maintenance on the first link ","The schematic flow chart diagram that follows is generally set forth as a logical flow chart diagram. As such, the depicted order and labeled steps are indicative of one embodiment of the presented method. Other steps and methods may be conceived that are equivalent in function, logic, or effect to one or more steps, or portions thereof, of the illustrated method. Additionally, the format and symbols employed are provided to explain the logical steps of the method and are understood not to limit the scope of the method. Although various arrow types and line types may be employed in the flow chart diagrams, they are understood not to limit the scope of the corresponding method. Indeed, some arrows or other connectors may be used to indicate only the logical flow of the method. For instance, an arrow may indicate a waiting or monitoring period of unspecified duration between enumerated steps of the depicted method. Additionally, the order in which a particular method occurs may or may not strictly adhere to the order of the corresponding steps shown.",{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 6","FIG. 5","FIGS. 1-5"],"b":["600","600","500","400","100","600","525","600","600","205","220"]},"The method  starts, and in an embodiment, during the offline pending state  the state machine  forbids  new tasks on each first link . For example, the user may issue the user offline request to transition  the state machine  operating the first link on the first data management node of the plurality of three (3) data management nodes -to the offline pending state . Continuing with the example, during the offline pending state  the state machine  may forbid  any new remote mount task and\/or data replication task on each first link that use the communication connections ","The offline pending state  completes  pending tasks on each first link . For example, the offline pending state  may allow and complete  any pending task such as the replication of data, the remote mount, and\/or the like on each first link . In an alternate embodiment, the offline pending state  may allow and complete  any pending task until a completion time interval is expired. The completion module  may then terminate any remaining tasks.","Meanwhile, the state machine  may further communicate  state transition information and link activity information between the plurality of first links . In an embodiment, the state machine  polls the plurality of data management nodes  for link activity information from an initiating node. For example, the first data management node may act as the initiating node. Continuing with the example, the state machine  may poll the second data management node and\/or the third data management node for the link activity information of the first links respectively from first data management node by sending a message to the second data management node and the third data management node to generate and gather link activity information.","The state machine  may further report the link activity information from at least one data management node  to the initiating data management node . For example, the second data management node and the third data management node may report the link activity information of the first link to the initiating data management node using the communication connections associated with the first links ","During the offline pending state  the state machine  further may collect  statistics on the pending tasks on each first link . The state machine  may estimate  a completion time for completing the pending tasks on each first link during the offline pending state . For example, the state machine  may estimate  the completion time of five (5) minutes for completing the pending replication tasks on the first link during the offline pending state .","The completion module  may determine  if pending tasks are complete on all links . For example, the completion module  may determine  pending tasks are complete on the first link on expiration of the completion time of five (5) minutes.","If the completion module  determines  that all the pending tasks are completed on all first links , the transition module  transitions  the plurality of first links from the offline pending state  to an offline state  and the method  ends. For example, if the completion module  determines  that all the pending tasks are completed on the first link , the transition module  may transition  the first link from the offline pending state  to the offline state .","If the completion module  determines  that all the pending tasks are not completed on all first links , the state machine  may further determine  if there is a force offline command. For example, if the user issues the force offline command, the state machine  may determine  that there is a force offline command.","If the state machine  determines  that there is a force offline command, the transition module  transitions  the first link from the offline pending state  to the offline state . For example, if the state machine  determines  that there is a force offline command issued by the user on the first link , the transition module  may transition  the first link from the offline pending state  to the offline state . In the offline state  the user may carry necessary link maintenance on the communication connection associated with the first link ","If the state machine  determines  that there is not a force offline command, the state machine  may further determine  if there is a transition online command. The transition online command may be the online request. For example, if the user issues the online request, the state machine  may determine  that there is an online request issued by the user.","If the state machine  determines  that there is not a transition online command, the method  loops to the step . If the state machine  determines  that there is a transition online command, the transition module  transitions  the plurality of first links from the offline pending state  to the online pending state  and the method  terminates. For example, if the state machine  determines  that there is a transition online command issued by the user, the transition module  may transition ,  the first links from the offline pending state  to the online pending state . Thus, the method  for completing pending tasks allows the user to carry on link maintenance on the communication connection  without forcing one or more data management nodes  offline.","The present invention automates link maintenance. Beneficially, such an apparatus, system, and method would not require forcing one or more data management nodes  offline by allowing concurrent maintenance of one or more links , . The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is, therefore, indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In order that the advantages of the invention will be readily understood, a more particular description of the invention briefly described above will be rendered by reference to specific embodiments that are illustrated in the appended drawings. Understanding that these drawings depict only typical embodiments of the invention and are not therefore to be considered to be limiting of its scope, the invention will be described and explained with additional specificity and detail through the use of the accompanying drawings, in which:",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
