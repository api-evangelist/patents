---
title: Unified, configurable, adaptive, network architecture
abstract: A network switch having a unified, adaptive management paradigm for wireless network devices is disclosed. The switch includes configurable ports for connecting devices. A software application running on the switch allows a network administrator to selectively configure each port to support either a wired device or wireless device. Configuration information and software images that are needed for operation of the wireless device are associated with the port. When a wireless device is first plugged into the switch port, it downloads its configuration directly from the switch port. By storing the configuration information and images at the switch and automatically downloading them to the wireless devices, the task of configuring the devices is greatly simplified for the network administrator. This is particularly advantageous in heterogeneous network environments that support both wired and wireless devices, and where wireless device are readily moved to different ports.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07310664&OS=07310664&RS=07310664
owner: Extreme Networks
number: 07310664
owner_city: Santa Clara
owner_country: US
publication_date: 20040206
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This application is related to U.S. patent application Ser. No. 10\/774,079, entitled \u201cMethod and System For Location-Based Access Control In A Computer Network\u201d; U.S. patent application Ser. No. 10\/773,394, entitled \u201cApparatus, Method and System for Improving Network Security.\u201d Each of the foregoing applications is filed concurrently herewith, and owned in common by the assignee hereof. Moreover, each of these applications is fully incorporated by reference as though set forth in full. This application is also a parent of U.S. patent application Ser. No. 10\/794,203, entitled \u201cMethod and System for Detecting and Preventing Access Intrusion in a Network filed Mar. 5, 2004.","The present invention relates generally to computer networks, and more specifically, to wireless local area networks (LANs).","The emergence of wireless devices in computer networking environments has imposed a new set of problems for network and information technology (IT) administrators. First, in many instances, wireless devices are not easily integrated with existing networks that support wired devices. As a result, some wireless networks are installed and managed as separate network elements, i.e., administrators configure and manage wireless devices, such as wireless Access Points (APs), separately from their wired LAN counterparts, e.g., wired access switches.","In these heterogeneous networks, the wireless APs are configured independently of the wired network elements. Also, software upgrades for the wireless LAN APs are done independently of the wired LAN access switches, i.e., software images for the wireless LAN APs and for the wired LAN access switches are distinct and need to be managed and upgraded independently. Additionally, network troubleshooting involves troubleshooting the wired and wireless networks independently. Thus, in many ways, the wireless LAN APs are treated as separate network elements that require special and distinct configuration and management, separate from the wired LAN network elements. This makes the administration of the network cumbersome for the network administrator and prone to error.","Second, in known wireless LANs, each AP must be individually configured. This is time consuming in larger networks, such as enterprise networks where there may be a multitude of APs. A network administrator must configure each AP individually and then connect it to the network.","Another aspect of enterprise networks is that they often change. Networks expand and contract with the number users, i.e., network elements are frequently added and removed. Networks are also frequently relocated physically. This requires disconnecting network elements, moving them, and then reattaching them. Each time a wireless AP is moved in a conventional wireless network, it must be re-configured for its new location. This adds considerable expense and inconvenience when changing the physical layout of a network.","Accordingly, there is a need for a network architecture that reduces the administrative burden of managing and configuring wireless network devices.","It is an advantage of the present invention to provide a unified management paradigm for wired and wireless network devices. This is achieved by abstracting the configuration and management aspects of the wireless devices into the configuration and management functions of the wired network switch that the wireless devices are plugged into. Network software (an image) is automatically downloaded to wireless devices when they are plugged into the switch. By doing this, wireless devices do not need to be individually configured or updated by an administrator when they are installed on the network. They simply adapt to the configuration of the switch port to which they are connected. This also reduces the burden of moving APs to different ports within a network. Each time an AP is moved, it automatically reconfigures to the settings of the new port to which it is connected.","By unifying the treatment of wireless devices, such as LAN APs, with the configuration of network switch ports, the burden of administering wireless devices in a heterogeneous environment can be dramatically reduced. For example, under the unified management scheme disclosed herein, edge devices do not have to be individually managed and\/or configured. Edge devices instead appear to administrators as switch ports or port extensions, and administrators can conveniently configure and\/or upgrade software on one or more edge devices by simply configuring a switch port.","Moreover, integrated management of the wired and wireless infrastructure in an enterprise network can facilitate widespread deployment of wireless devices. The present invention provides capabilities for seamless management of such heterogeneous networks. The seamless management scheme disclosed herein can reduce operating costs, simplify upgrade procedures, ease fault detection and resolution, and thus potentially reduce the total cost of ownership of a network.","In accordance with an embodiment of the invention, a network switch includes a configurable port and a software application. The port is a network attachment point for an edge device. The software running on the switch allows a network administrator to selectively configure the port to support either a wired edge device or a wireless edge device. According to one aspect of the invention, the software application permits the administrator to enter configuration information for the wireless edge device and store it on the switch. The configuration information includes data that allows the wireless edge device to access the network, and it is associated with one or more switch ports. When the wireless edge device is connected to the port, the configuration information is automatically downloaded. Using this approach, the network administrator is relieved of having to independently manage and configure wireless network elements in a manner that is separate and distinct from how the wired switch ports and edge devices are managed.","According to another aspect of the invention, the switch includes a memory for storing a software image corresponding to the wireless edge device. The software image is code that is executable on the wireless edge device. When the edge device is connected to the port, the switch automatically downloads the image to the edge device, along with the configuration information. This aspect of the invention provides significant advantage in that it relieves a network administrator from having to individually upgrade wireless edge devices with software. Upgrading wireless edge device software requires only upgrading the switch or a backend server. This aspect of the invention also reduces the burden of moving APs to different ports within a network because each time an AP is moved, it automatically reconfigures to the settings of the new port to which it is connected.","Method counterparts to the above embodiment and various aspects of the invention are also provided. Other systems, methods, features, embodiments and advantages of the invention will be or will become apparent to one with skill in the art upon examination of the following figures and detailed description. It is intended that all such additional systems, methods, features, embodiments and advantages be included within this description, be within the scope of the invention, and be protected by the accompanying claims.","The description below, while illustrated and explained within the context of local area networks (LANs), can be applicable more generally to other types of networks and protocols.","Turning now to the drawing, and in particular to , there is illustrated a network system  in accordance with an exemplary embodiment of the invention. The network architecture shown in  provides a unified, adaptive access paradigm for wired and wireless LAN access, management, and configuration. This is achieved by treating wireless edge devices , such as wireless access points (APs), as extensions of the wired LAN switch port . The configuration and management of each AP is abstracted to the configuration and management of the wired LAN access switch  that the AP is plugged into.","Access points (APs) are network edge devices that allow end users to wirelessly connect their computers or other personal devices to LANs. These wireless edge devices have become increasingly popular with the establishment of industry standards, such as the IEEE 802.11 (Wi-Fi) standards, that specify their operational characteristics.","With a large number edge devices and wired user stations -spread in an enterprise network , managing the devices -becomes a burden. The unified network architecture disclosed herein simplifies network management by moving management functions into the switches , and\/or into one or more backend network manager servers (NMSs) . From the administrator's perspective, the edge devices and wired stations -are logically similar to an Ethernet port on the switches . Configuration, monitoring, software upgrades, and the like for wireless edge devices appear to the administrator as configuration, monitoring, and upgrades of logical entities called the edge devices on the respective switch . These logical devices are in turn loosely bound to respective physical ports , based on the ports  that the wireless edge devices get plugged into.","There are two primary aspects to the unified, adaptive architecture  of . The first is that the APs take on the configuration of the switch port  that they are plugged into, i.e., a network administrator simply configures the switch port  directly instead of configuring the individual APs . In other words, configuration changes to the wireless LAN edge devices are effected by directly configuring the switch ports  to which the wireless LAN APs are connected. This is done, in essence, by programming the switch , rather than individual edge devices . When an AP is first plugged into a switch port , it picks up its configuration from data associated with the switch port . If the AP is unplugged from the switch port , it loses its configuration. When plugged into another switch port , the AP picks up its configuration from the new port  that it is plugged into. In effect, the AP adapts to the configuration of the port  that it is plugged into. This eases the burden of moving an AP to different switch ports in the network.","The second aspect of the system  is that there is no separate software image management for the APs . From an external perspective, the network administrator deals with a single image for the LAN access switch  rather than separate images for the switch  and APs. If the APs that are connected to the switch  require a software image, the switch  through its own software image and mechanisms, directly downloads the necessary software into the AP . Using this scheme, different APs could acquire different software depending on what they are expected to do in a given environment. Moreover, software upgrades are effected at the switch level, and it is no longer necessary to individually upgrade software on individual edge devices.","The net result of these two aspects is that a network administrator simply manages the wired LAN access switches  and does not have to deal with the configuration and management of the wireless network APs independently. Indeed, plural wireless APs can be configured and managed through the single LAN access switch  into which they are plugged.","Although the embodiment of  illustrates treating wireless APs as configurable extensions of switch ports, the invention is not limited to solely the configuration and management of wireless devices. The scope of the invention includes the configuration and management of other network devices, such as voice over IP phones, or the like, that plug into switch ports  or wirelessly connect to the network  through the APs ","The system  includes one or more network switches  that communicate with an NMS  by way of the network . A plurality of network edge devices and wired user stations -are connected to the ports  of the switches . Wireless edge devices , such as wireless access points (APs), permit mobile user stations  to access the network over one or more wireless channels. The wired devices can be end user devices, such as personal computers, that directly connect to the switch ports using a wired connection, such as a standard Ethernet cable. Additionally or alternatively, the wired devices can also be other devices, such as gateways or routers, that communicate with end user devices  over other wired networks (not shown) instead of wireless channels.","The NMS  allows network administrators to configure the switches , and the edge devices . The network manager  can alternatively be connected directly with the switches  to bypass the network . The network manager  can be a commercially-available networked server running custom application software that permits a network administrator to set the configuration information and software images stored in the switches  in accordance with the principles disclosed herein.","The switches  and network manager  can communicate with one another using any suitable access mechanism, such as simple network message protocol (SNMP), Telenet, TCP\/IP, HTTP, or the like. Any suitable data network can be used to connect these components. Preferably, the data network  is an Ethernet network. In addition, the network  can also include other networking components (not shown), such as gateways, routers, additional servers hosting a variety of different applications, as well as links to other networks, such as an enterprise intranet or the public Internet.","The edge devices and wired user stations -can be any electronic network devices capable of communicating with the network switches . Although the exemplary system  illustrates the devices -as being wireless APs and networked computers , the edge devices and wired user stations can also be other networked devices, such as personal digital assistants (PDAs), IP phone, digital cameras, or the like. Additionally\/alternatively, the system  can comprise only wireless APs as edge devices for communicating with end-user devices .","Where the wireless edge device is a wireless AP, it can provide network access to one or more wireless user devices , such as personal computers, lap tops, PDAs, phones, cameras, or the like. The wireless user devices  and the APs can communicate using a conventional wireless protocol, such as a Wi-Fi protocol based on one of the IEEE 802.11 standards.","Voice over IP phones can be connected to the network  as wireless user devices  or as wired network devices . With either type of connection, the voice over IP phones can be configured to download images and configuration data from the switch  in a manner similar to that used by the wireless edge devices . The voice over IP phones can store the configuration data and images in volatile memory so that when they are powered down, disconnected from the port , or lose the signal from the edge devices , the configuration data and images are erased.","Each network switch  includes one or more ports  corresponding to each of the networked devices -. The ports  permit network communications between the devices -and the network . The network switch  can be a commercially-available LAN switch i.e., it can be the network connection point for multiple edge devices and user stations -, such as an Ethernet switch, programmed with software to conform with the principles the unified, adaptive management and configuration scheme disclosed herein. The software can be coded using any suitable programming language, such C, Java or C++ that is executable on the switch.","Communications between the network  and the devices -pass through the switches . The switches  can be deployed in secure wiring closets in a campus environment. Any suitable network protocol, such as a data packet scheme, can be used for communications between the network switches  and respective devices -. Preferably, Ethernet is used to communicate messages and information between the switches  and their connected devices -","Each switch  includes an application  for entering, storing and applying configuration information, settings and profiles corresponding to the ports . The information, settings and profiles are used to configure the devices . Each switch  also includes a configuration database (CFG DB)  for storing configuration information, settings and profiles. When the configuration information is associated with a particular port, it can then be downloaded to the device when it is connected to the port, as discussed in connection with .","The application  has interface software for allowing an administrator to create and\/or update the stored configuration information using the network manager . In this respect, the application  provides seamless management of the wireless network elements. The application  includes component software supporting a graphical user interface (GUI) run on either the Windows or Solaris operating systems at the NMS . The application  also includes component software for allowing an administrator to use SNMP and a command line interface (CLI) to communicate with the switch  using a Telenet session in order to set configurations and manage the devices . In addition, the application  can also\/alternatively allow an administrator to directly access the switch  using a telenet or serial session to manage the switch  and all the devices connected to the switch .","The NMS  allows administrators to seamlessly manage the wired and wireless infrastructure. The NMS  provides functionality to manage a set of logical elements (vlans, policies, ESS, and the like) and a set of physical elements (Ethernet switches, LACs, APs, RF tunnels and the like). The NMS provides the ability to view the associations between the logical elements and the physical elements, and also configure such associations. The NMS  includes a management application (not shown) that allows the administrators to set configuration data and switch ports using the GUI discussed above.","Configuration of the wireless edge devices is done by configuring the wireless properties on the Ethernet port . When a device is connected to a specified Ethernet port , the device adopts the personality of the port . If the device is then moved to a different port , it acquires a new personality.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 2","FIG. 1"],"b":["12","12"]},"The switch  includes a central processing unit (CPU) subsystem  having a CPU  and memories , , ,  for storing software and data. The CPU  is a commercially available microprocessor, such as an Au 1500 processor from Advanced Micro Device, Inc., while the memories devices , , ,  are commercially-available flash and RAM devices. The switch  also includes an Ethernet switch subsystem  comprised of standard memory chips, logic and high-speed Ethernet chips available from commercial suppliers such as Broadcom, Inc. The CPU subsystem  controls and configures the Ethernet switch subsystem .","The application software  is stored in the compact flash (CF) memory  and executable by the processor . The configuration database  is also stored in the CF memory .","The CF memory  also stores at least one access point (AP) software image , at least one AP bootrom image  and configuration data. The CF memory  can also store software and bootrom images and configuration data for voice over IP phones that are managed like the APs. The memory  is preferably a conventional compact flash card, such as part no. W7B6064MIXG-T, available from Wintec.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 3","FIG. 1"],"b":["12","12","52","31","52","52"]},"Each device connected to the switch  has an SNMP agent that functions as a subagent to the master SNMP agent  on the switch . A trivial file transfer protocol (TFTP) server  is provided for downloading software images and configuration data to the networked devices ","The unified management scheme of the switch in achieved by implementing SNMP MIBs, a command line interface (CLI)  and edge device management web pages on the switch , and interfacing with the local data store CFG DB  and with the devices using AgentX so that the configuration, monitoring, and software image downloads and upgrades appear to a user as configuration, monitoring, and software downloads, upgrades of the Ethernet port , i.e., the devices appear to the administrator as logical extensions of the ports . With this architecture, the software application  running on the switch  includes the CLI , the world wide web (www) server and management web pages , a common application programming interface (API) , a database (DB) API  for accessing data from the configuration database (CFG DB) , a functional translator , a local agent , the SNMP agent , a TFTP server  and a timer thread .","The SNMP Agent  is an implementation of Envoy from WindRiver Systems, Inc.","The embedded web server  is a version of RomPager Web server from Allegro Software.","The common API  presents an object-based, transport independent abstraction for configuration information as well as statistics The layers above this API  do not know if data is fetched from the local configuration DB , or from a remote subagent, using AgentX. The common API  provides some generic access mechanisms, such as: Create(obj), Delete(obj), Update (obj), Get(objID), GetN(objIDlist), GetListofObjects(type), and the like.","The functional translator  translates the common API\/DB API requests into a set of SNMP requests that are used by the AgentX process. The translator  contains the selection logic to pass requests to the correct target, as well as the translation from a particular request into the correct object ID (OID) or DB request. The translation occurs from DB API to SNMP OIDs for set requests, and from the Common API to SNMP OIDs for get requests.","The DB API  presents an object-based abstraction over locally stored configuration information as well as cached statistics. The Common API  accesses the DB API  to update configuration for APs . The DB API  also communicates with and establishes the timer thread , which dispatches requests to the APs ","The DB API  dispatches requests to the edge devices ","The CFG DB  is a local store of configuration information. The configuration information is associated on a per-port basis as well as per switch basis. As the configuration of each AP or port is updated, changes are reflected here. Data stored in the CFG DB  is defined using SNMP MIBs.","Another aspect of the present invention is that templates or profiles can be used to further ease the configuration and management of the wireless LAN APs  and other devices connected to switch ports . These templates or profiles are stored locally in the CFG DB .","1.0 Configuration Profiles","Profiles (templates) are used to remove repetitive configuration tasks. A profile is a grouping of characteristics and configuration parameters that are common across multiple APs and\/or other edge devices. The administrator can configure a single profile for all the edge devices that share a common set of parameters. The profile can then be applied to multiple ports on the switch  using a single command. When a networked-edge device or a set of devices are plugged into those ports , they pick up the configuration specified in the profile. When a profile is changed, the configuration of the data and software on the respective networked device(s) can be done immediately.","Effectively, an administrator no longer has to configure each port  individually for all the characteristics required for the wireless LAN access. Any change that needs to be effected across the set of edge devices connected to the switch  can be achieved by merely changing the configuration on the single profile that is applied to the ports .","Profiles are used for RF parameters, security parameters, media access control (MAC) filters and the like. SNMP tables are implemented to read\/set the profile data in the switch . When an association is made between a port  and a profile, either through SNMP, CLI or Web interface of the application , that information is saved on switch , and sent through SNMP set commands (over AgentX) to the respective edge device to configure device. There is a set of SNMP tables that are implemented purely as a proxy on the switch . These tables fetch the run time data from the edge devices , and represent how the data in the profiles are applied to the edge devices ","The switch  includes three different administrator interfaces: a web interface , a CLI , and SNMP . The interfaces , ,  allow an administrator to set profiles and configure the ports .","2.0 Command Line Interface (CLI)","The CLI  includes software for interpreting text command entered by the administrator during a Telenet session. The CLI commands set configurations for ports that are in turn applied to wireless edge devices connected to the ports. They are used to set parameters for RF and security configurations of devices , as well as MAC filtering parameters and image versions to be downloaded to the connected devices . The CLI commands are structured to indicate that the wireless edge devices are extensions of ports . A \u201cconfig wireless port\u201d line command allows profiles and filters to be attached to and removed from the port. Attaching a profile to a port configures the port to, among other things, support a wireless edge device. A port can be moved from one profile to another without being shutdown using the config wireless port command. When a port is first discovered by the switch application , it is associated with a default template stored in the CFG DB . Once a port has been configured with a profile, if the port is disassociated from it's profile, it will be disabled.","The syntax of various exemplary CLI commands is given below. The example commands below are not an exhaustive list of possible CLI commands and others are contemplated as being within the scope of the invention.\n\n","With respect to RF profiles, the RF profile groups the configuration of RF parameters into a single interface command. The profile can be applied to one or more ports to configure their parameters. Subsequent configuration of an RF profile results in application of the change to all ports associated with that RF profile. All functional ports  can be associated with an RF profile.","With a system using 802.11, an RF profile is created for a specific channel (a|g). Applying an RF profile to a port applies changes to that channel's configuration only.","In networks where the switch supports different types and\/or brands of edge devices , the switch includes default profiles for the various wireless edge devices it supports.","If no RF profile is applied to the port channel, the default RF template is applied.","The following commands are used to manage rf-profiles located on the switch .","Command: create rf-profile <name> mode <A|B>","Description: Creates new profile identified by the string name. Optionally, a second argument can specify the name of an existing profile which is used to copy initial values from.","Command: delete rf-profile <name>","Description: Deletes the named RF profile. The named profile should not be currently attached to any active ports.","Command: config rf-profile <name> <property> <value>","Description: This command sets the value of the property in the named profile to the value specified. Changes take effect immediately, and are propagated to all ports that share this profile.","The ranges and values for the RF properties are listed in Table 1:",{"@attributes":{"id":"p-0078","num":"0089"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Parameter","Comments"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"mode","This tells the software which"]},{"entry":[{},{},"ranges are appropriate for"]},{"entry":[{},{},"speed, channel, etc. A profile"]},{"entry":[{},{},"with its mode set to g can only"]},{"entry":[{},{},"be assigned to a g-mode port."]},{"entry":[{},"Ess-name","This is a human-readable string."]},{"entry":[{},{},"Note that the default values are"]},{"entry":[{},{},"per-channel (a|b|g); their string"]},{"entry":[{},{},"names reflect this."]},{"entry":[{},"channel","Here default selection is"]},{"entry":[{},{},"arbitrary."]},{"entry":[{},{},"802.11A has a different range"]},{"entry":[{},{},"available than G."]},{"entry":[{},{},"If auto is specified the AP will"]},{"entry":[{},{},"search for a less congested channel."]},{"entry":[{},"beacon-interval","This is a timeout expressed in Msec."]},{"entry":[{},"dtim","This is an integer."]},{"entry":[{},"Fragmentation-","Integer number of bytes"]},{"entry":[{},"length"]},{"entry":[{},"Rts-threshold","This is an integer number of bytes."]},{"entry":[{},"preamble","Enumerated value, selected"]},{"entry":[{},{},"from radio button."]},{"entry":[{},"power","This is an integer value of mW."]},{"entry":[{},{},"(defaults are from 802.11 MIB)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0079","num":"0090"},"figref":"FIG. 4","b":["62","60","12","60","20","42","12"]},"In general, the web interface allows a user to: manage configuration profiles for a wireless port, manage MAC-based filters, view per-port formatted statistics, view current clients of the system, and view current security of the system.","The following links are included in the top-level web page menu :","A Configuration Menu, including links for:\n\n","A Statistics Menu, including links for:\n\n","A Support link.","A Logout Link","The web pages are stored locally on the switch  and accessed by administrators using a standard web browser via the embedded web server . The wired port configuration page (not shown) allows the administrator to set and configure a switch port to support a wired edge device , rather than a wireless edge device ",{"@attributes":{"id":"p-0087","num":"0110"},"figref":"FIG. 5","b":["64","62","64"]},"Near the bottom of the page  is a form  that allows an administrator to configure the ports. To configure a wireless port, the administrator selects the port number. The administrator then enters an IP address, device location, and time out period. Pull-down menus allow the administrator to select health check and bridging. A second form  allows the administrator to manage the wireless ports. In this form , a pull-down menu allows the administrator to select the port number and then select a management action: reset, port enable, port disable, clear port counter, clear port log. A reset will reboot the wireless port. Disabling is similar to an administrative shutdown; the wireless port will no longer send or receive packets. When the administrator has selected the correct values, he\/she presses the submit button, which will validate the new port information. If successful, the port information table at the top of the page will be updated, and\/or the selected management function will be taken.",{"@attributes":{"id":"p-0089","num":"0112"},"figref":"FIG. 6","b":["66","62"]},"Profiles are identified by a string name. To create a new profile the administrator enters a new name and presses the create button. Additionally, when creating a profile the administrator can supply the name of an existing profile to copy the values from. This can save typing if the administrator is just trying to change a few values.","To delete a profile the administrator selects the name of an existing profile from the drop-down and presses the delete button.","To configure an RF profile, the administrator enters the name in the Profile Name text field and presses the get button. The page  is redrawn with the current values for the profile.","The current interfaces section is a list of all the ports which are currently linked to this profile. The list is a non-modifiable text string that displays a list. As shown, fillable boxers and check dots are provided to select profile settings and values.","After the administrator has retrieved and modified the values and settings of a particular RF profile, he\/she can press the submit button to validate\/apply the changes.",{"@attributes":{"id":"p-0095","num":"0118"},"figref":"FIG. 7","b":["68","68"]},"Profiles are identified by a string name. To create a new profile the administrator enters a new name and presses the create button. Additionally, when creating a profile the administrator can supply the name of an existing profile to copy the values from. This can save typing if the administrator is just trying to change a few values.","To delete a profile the administrator selects the name of an existing profile from the drop-down and presses the delete button.","To configure a security profile the administrator selects an existing profile from the \u201cProfile Name\u201d drop-down. This redraws the page with the currently configured values for the selected profile.","The displayed security profile includes a list of all the ports (current interfaces) which are currently linked to this profile. As shown, fillable boxes and check dots are provided to select security settings and values.",{"@attributes":{"id":"p-0100","num":"0123"},"figref":"FIG. 8","b":["70","70"]},"MAC filters are identified by a string name. The administrator can create a new MAC filter by entering a name and pressing the create button. To delete a MAC filter the administrator selects the name from the pull-down list and presses the delete button. The MAC filter default action is configured to be permit or deny via a set of radio buttons.","The association between MAC filters and ports is many to one. As a result, the administrator should first use the wireless port configuration page to unlink the MAC filter before deleting it.","To configure a MAC filter the administrator selects the name of an already existing filter from the pull-down menu and presses the get button. This retrieves the current status of this MAC filter and redraws the screen.","The configuration section is divided into a list of MACs the switch has learned which are candidates for action (the learned list), and a list of MACs and associated actions that the filter already handles. To add a new filter rule the administrator selects one or more MACs from the learned list and presses the permit or deny button. The administrator can also enter a MAC address by hand in the text entry and then press permit or deny.","To remove a filter rule the administrator selects one or more rules from the filter list and presses the remove button.",{"@attributes":{"id":"p-0106","num":"0129"},"figref":["FIG. 18","FIG. 4"],"b":["75","62","75"]},"Near the bottom of page  is a form  that allows an administrator to configure the wireless interfaces. To configure a wireless interface, an administrator selects port number and interface number. The administrator then selects the channel, speed, power, and RF and security profiles for the interface. A second form  is provided for permitting the administrator to selectively enable, disable or reset a wireless interface.","When an administrator has selected the correct values, he\/she presses the submit button, which validates the new interface information. If successful, the interface information is the interface configuration list is updated.",{"@attributes":{"id":"p-0109","num":"0132"},"figref":"FIG. 19","b":"80"},"4.0 Downloading Images and Configuration Data To Edge Devices",{"@attributes":{"id":"p-0110","num":"0133"},"figref":"FIGS. 9-17","b":["12","18","24","18","24","18"],"i":["a ","a ","a "]},{"@attributes":{"id":"p-0111","num":"0134"},"figref":["FIG. 9","FIG. 1"],"b":["10","12","18","12","18","24","18","18","10"],"i":["a","a ","a ","a "]},"Each AP includes a network interface (NI) , a boot ROM (read only memory) , and a volatile memory . The network interface  can be any suitable component for permitting network communication between the switch  and the device , and is preferably a commercially-available Ethernet card. The boot ROM  can be any programmable ROM device, such as a flash or EEPROM (electrically erasable programmable read only memory), for storing a bootstrap program at the device . The volatile memory can be any suitable type of memory device that is erased when the device is disconnected from the switch . For example, the volatile memory  can be a dynamic random access memory (DRAM), which is erased when it loses power.","The AP can also include a central processing unit (CPU) (not shown), such as a commercially-available microprocessor, for executing the bootstrap program as well as any software images and applications downloaded from the network . The CPU can be connected to boot ROM , memory , and NI . It can also control the NI .","Before being connected to the switch , the APs are not fully functional. They lack runtime device image (software) and configuration information that is required for them to be fully operational. This software and information is stored on the switch  in the network  and downloaded to the devices when they are connected to the switch . This bootup procedure is described more fully below, in connection with .","The AP software images ,  and AP configuration data can be bundled with self-extracting switch software. During initialization of the switch , the bundled software can be loaded onto the switch . The bundled software can be compressed and wrapped so that it is self-extracting using a commercially-available software utility. When the bundled software is loaded onto the switch, the images ,  and configuration data are self-extracted and stored in the flash memory.","The compact flash memory  has FAT16 file system structure on it. Thus, the AP image , AP bootrom , as well as other images and data can be stored as separate files on the compact flash file system. Using standard programming techniques, the flash file system can be registered with the VxWorks OS so that the files can be accessed by the OS and applications, such as the TFTP server , using standard OS calls.","The TFTP server  permits APs to access images , . The images and data are downloaded to the APs during the power on bootup sequence, as described in further detail below with reference to . The TFTP server  can also store other information. The TFTP server  is based on RFC 1350 and includes all features suggested in RFC2347.","On the switch , the TFTP server  operates as follows. The TFTP daemon task is started when switch  powers up. A TFTP task is created to process requests from the APs and elsewhere. The server  supports multiple instances, i.e., one daemon listens on port , and new tasks are created to handle each incoming request. The tftpd PUT is achieved by reading bytes from the file descriptor and writing bytes to the INET UDP socket. The tftpd GET will read data from the socket and write to a file descriptor.","For TFTP opcodes field, the server  supports five opcodes:",{"@attributes":{"id":"p-0120","num":"0143"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RRQ","read request"]},{"entry":[{},"WRQ","write request"]},{"entry":[{},"DATA","data packet"]},{"entry":[{},"ACK","acknowledgement"]},{"entry":[{},"ERROR","error code"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"For the options field, the server  uses the default value as specified in RFC 2347.","The format field of the TFTP request is translated. Specifically, the TFTP client on the APs sends netascii and octet. The available formats for TFTP are netascii, ascii, octet, binary, image. The server  and clients translate the formats as follows:",{"@attributes":{"id":"p-0123","num":"0146"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201cnetascii\u201d =","\u201cnetascii\u201d"]},{"entry":[{},"\u201cascii\u201d =","\u201cnetascii\u201d"]},{"entry":[{},"\u201coctet\u201d =","\u201coctet\u201d"]},{"entry":[{},"\u201cbinary\u201d =","\u201coctet\u201d"]},{"entry":[{},"\u201cimage\u201d =","\u201coctet\u201d"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"In an alternative architecture, the TFTP server  can be located elsewhere, outside the switch . Also, alternative protocols, other than TFTP can be used to access and transfer the stored images. For example, FTP or BOOTP can be used as alternative transfer mechanisms for downloading the device images from the switch  to the APs ","The authentication server  can be a conventional RADIUS server that is configured to provide authentication services to the switch . The server  can be used to authenticate an AP when it is first connected to the network , based on a device identifier stored in the device . The switch  can include an authenticator operating in conformance with the IEEE 802.1x standard and can use the standard RADIUS protocol to transfer authentication requests and responses to and from the authentication server  via the switch . In addition, the server  can also authenticate end user devices  as they log onto the network . In an alternative architecture, the authentication server  can be included in the switch  or located elsewhere in the network .",{"@attributes":{"id":"p-0126","num":"0149"},"figref":["FIG. 10","FIG. 9"],"b":["50","18","10","18","10"],"i":["a ","a "]},"In this bootup process, the AP is first connected to a switch  (e.g., a LAC) port using a network cable, such as a CAT-5 cable (step ). Preferably, the AP does not have an independent power source and takes power from the network cable using a convention scheme such as power over Ethernet (PoE). Using POE, the volatile memory , particularly any sensitive information contained therein, is erased when the AP is disconnected from the switch . Upon receiving power, the AP resets and starts its own bootup program that is stored in the boot ROM  (steps -). When the AP resets, its CPU points to a reset vector at the start of the bootup program. If the AP ever loses power from network cable or connectivity from switch , it will restart the whole booting sequence again at the reset vector location.","While executing, the AP bootstrap program sends the AP Announce Message () to the switch  (step ) and waits for a response (step ). If the response is not forthcoming, a retry will be used by the AP , if necessary, to avoid the loss of the Announce Message (step ).","If authentication is successful, the switch  will decide the corresponding image(s) for the AP to receive and send out an Announce Reply Message ().","Until it receives the Announce Message, the switch  waits (step ). Upon receiving the Announce Message, the switch  determines whether a bootrom upgrade is necessary. (Step ) If switch  determines that a bootrom upgrade is required from the contents of the Announce Message, the TFTP path and filename in the Reply Message is for the bootrom image (step ), instead of the executable image (step ). The switch  determines whether an upgrade is needed by comparing the bootrom version in the AP Announce Message with the version of the current bootrom program stored on the switch .","In the Announce Reply, the switch  delivers the switch IP address trivial file transfer protocol (TFTP) server identity, TFTP path\/filename and other information that are needed for the AP to download either the bootrom or AP image from the switch (step ). The contents of this Reply message are discussed in more detail in connection with . The AP then sends out the TFTP request (with retries, if necessary) to download the image and write it directly into AP's volatile memory  (e.g., DRAM) (steps -). The TFTP request is encapsulated in the packet format shown in .","In response to the TFTP request, the switch  sends one or more TFTP data packets to the AP containing the requested image (step ) and the goes into a \u201cWait TFTP_ACK\u201d state (step ). The TFTP data packets are encapsulated in the packet format shown in .","The new bootrom image is initially downloaded into the AP DRAM  and its checksum is computed (step ) by the AP . If the checksum fails, the AP resets and the bootup sequence restarts.","The AP can verify the checksum of the image received from the TFTP server and send out a TFTP_ACK () back to switch . When the switch  receives the ACK, the switch  transits to the \u201cWait for Image_ACK\u201d state (step ).","Next, the signature in the header is tested to see if it is the signature of a bootrom image or AP image (step ). If it is the bootrom image, the AP writes the bootrom image from the DRAM into the flash ROM, sends an acknowledge (ACK) to the switch  and then resets itself to start the process over, using the newly installed bootrom image to download the executable image (step ). The ACK to the switch  can be sent using a keepalive message that identifies the AP ().","If the image is the AP image, the AP executes the newly downloaded image from the DRAM and ACKs the switch  (step ). The ACK to the switch  can be sent using a keepalive message that identifies the AP ","Among other things, the image installs an operating system (OS) including a TCP\/IP stack and AgentX client on the AP . The image uses the IP address, gateway and virtual LAN (VLAN) information in the Announce Reply Message to ready the TCP\/IP stack. After this step, TCP\/IP stack is ready and the AgentX protocol (based on RFC 2741) is used to deliver the configuration information from the AgentX server  located on the switch  to the AP DRAM .","In response to receiving the bootrom or AP image ACK, the switch  transits to the \u201cWait for AgentX\u201d state (step ).","After the TCP\/IP stack is stabilized, AgentX is used to download the configuration information. The AP initiates the process by sending an AgentX.Open request to the AgentX server running on the switch  (step ). The switch  follows up by sending an AgentX.open_reply (step ). This initial message sequence is then follow by one or more transactions of AgentX.Allocate\/AgentX.Allocate_Reply and AgentX.Register\/AgentX.Register Reply between the AP and switch  to agree on supported configuration parameters. (steps , ) Once the parameter set has been agreed on a series of AgentX.Set messages are used to download the configuration information to the AP ","To close the session between the AP and the switch the AgentX.Close message is used. It can be initialized by either the switch  or AP . The switch  includes a state machine that is intended to remain synchronized with the AP and uses timeout mechanism for corner cases. As shown in , steps - rely on the timeout mechanism to return the switch  to step  in the event of an unresponsive AP ","In addition, the switch  uses a counter called \u201cRecv AP Announce\u201d to decide if the switch  has received too many Announce Messages, for example, over thirty, at certain points in the bootup sequence (steps -). If the switch  receives too many AP Announce Messages before it completes the startup process, it disables the port (step ). The counter will only incremented when switch  has time to process a request. When the switch  is highly loaded and does not have time to process Announce messages, incoming requests are collapsed and the counter is incremented once.","In a similar fashion, the switch  includes a counter called \u201cRecv TFTP\u201d to determine if the switch  has received too many TFTP requests from the AP during the process (step ).","In addition, the switch  can have timer between PoE up and the first AP Announce Message. If the switch  powers up the AP and does not see the first Announce Message within a predetermined time period, it is assumed that there is something wrong with the AP or the connection, and the switch  can power cycle the AP again in an attempt to correct the situation.","The switch  configures the radio frequency (RF) profile of the AP according to the IP address and gateway information specified in the Reply Message. (When the switch  receives the Announce Message, it replies with the Reply Message, which includes the IP settings). After the Renew_Config message is sent and the IP stack is reset the AP re-opens the AgentX session with the switch . This includes sending the AgentX.Open, Alloc and Registration messages. In this case no AgentX.Set messages are sent, as configuration data has remained the same.",{"@attributes":{"id":"p-0145","num":"0168"},"figref":["FIGS. 11-17","FIG. 10"],"b":["18","12"],"i":"a "},{"@attributes":{"id":"p-0146","num":"0169"},"figref":"FIG. 11","b":["18","12"],"i":"a "},{"@attributes":{"id":"p-0147","num":"0170"},"figref":["FIGS. 12-17","FIG. 11","FIG. 10"],"b":["12","18"],"i":"a "},{"@attributes":{"id":"p-0148","num":"0171"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0149","num":"0172"},"figref":"FIG. 13","b":"18","i":"a ","ul":{"@attributes":{"id":"ul0007","list-style":"none"},"li":{"@attributes":{"id":"ul0007-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0008","list-style":"none"},"li":["AP IP Address: IP address for the access point.","AP IP mask: mask for AP. For example, 24 means 255.255.255.0","AP default gateway Address: default gateway for the access point.","switch IP Address: The switch IP to which the AP is connected.","AgentX port: After booting up, AP can start AgentX's TCP connection to this port.","Physical SW Port if index: The physical port number on LAN switch that AP is connected to. AgentX can report SNMP trap using this information.","USE_VLAN_TAG: 0: do not use VLAN tag, 1: use VLAN tag.","VLAN Tag: Insert the tag into packets if Use_VLAN_TAG is set to 1.","Keep-alive timer: Timer for AP_KEEP_ALIVE in seconds.","Image type: 0: Boot code, 1:AP runtime image.","Boot URL can be, e.g., tftp:\/\/10.0.0.1\/Altitude-1.z. It can be a null terminated string."]}}}},{"@attributes":{"id":"p-0150","num":"0184"},"figref":"FIG. 14","b":"18","i":"a "},{"@attributes":{"id":"p-0151","num":"0185"},"figref":"FIG. 15"},"Image type: 0\u2014Boot ROM. 1\u2014AP","Status: 0: OK, 1: Fail","Retry #: 1-3 number of the TFTP retries.",{"@attributes":{"id":"p-0155","num":"0189"},"figref":"FIG. 16","b":["18","12","18","12","18","18","12","21","12","18"],"i":["a ","a","a ","a ","a. "]},{"@attributes":{"id":"p-0156","num":"0190"},"figref":"FIG. 17","b":["12","18","18","18","12","12","18","12","18"],"i":["a","a ","a ","a ","a "]},"While various embodiments of the invention have been described, it will be apparent to those of ordinary skill in the art that many more embodiments and implementations are possible that are within the scope of this invention. For example, any combination of any of the systems or methods described in this disclosure are possible."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The components in the figures are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the invention. In the figures, like reference numerals designate corresponding parts throughout the different views.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIGS. 5-8","FIG. 3"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 9","FIG. 1"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 10","FIG. 9"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIGS. 11-17","FIG. 9"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIGS. 18-19","FIG. 4"]}]},"DETDESC":[{},{}]}
