---
title: Configurable dynamic matching system
abstract: A system is provided that that dynamically matches data originating from one or more data sources. The system analyzes a matching configuration file, where the matching configuration file includes one or more matching configurations. The system modifies a probabilistic matching algorithm of a matching engine at runtime based on the one or more matching configurations and based on two or more data records of the plurality of data records that require matching. The system compares two data records of a plurality of data records using the modified probabilistic matching algorithm. The system generates a match score for the two data records based on the match weight for each data record field.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08849837&OS=08849837&RS=08849837
owner: Oracle International Corporation
number: 08849837
owner_city: Redwood Shores
owner_country: US
publication_date: 20121005
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["One embodiment is directed to a computer system, and more particularly, to a computer system that manages data.","Data matching compares data stored in disparate data sources in and across organizations, such as health care organizations. Matching can involve comparing a specific set of static fields in two standardized data records, where a data record represents an entity, such as an individual (e.g., health care patient) or a product (e.g., health care product), and returning a match weight for each static field that indicates a likelihood of a match between the two static fields of the two standardized data records. A match score is generated based on the individual match weights. A higher match score between two data records can indicate a greater likelihood of a match. Data matching can involve comparing different types of data, such as strings, dates, integers, etc. Some examples of data matching can involve comparisons of specialized types of data including first and last names, social security numbers, and dates of various formats. Matching can be used to manage data quality by reducing data duplication and improving data accuracy.","Data matching can be either deterministic or probabilistic. In deterministic matching, either unique identifiers for each data record can be compared to determine a match, or an exact comparison can be used between fields. Deterministic matching is generally not completely reliable since, in some cases, no single field can provide a reliable match between two data records. In probabilistic matching, several field values can be compared between two data records, and a match weight can be generated for each field, where the match weight indicates how closely the two field values match. A match score can be generated as a function of the individual match weights (such as a sum of the individual match weights), where the match score can indicate the likelihood of a match between the two data records.","One embodiment is directed to a system that dynamically matches data originating from one or more data sources. The system receives data from one or more data sources, where the data includes a plurality of data records. The system further analyzes a matching configuration file, wherein the matching configuration file comprises one or more matching configurations. The system further modifies a probabilistic matching algorithm of a matching engine at runtime based on the one or more one or more matching configurations and based on two or more data records of the plurality of data records that require matching. The system further compares two data records of the plurality of data records using the modified probabilistic matching algorithm, where the comparing includes comparing values of one or more data record fields of the two data records and generating a match weight for each data record field based on the comparison of values, and the one or more matching configurations. The system further generates a match score for the two data records based on the match weight for each data record field.","According to an embodiment, a system can provide configurable dynamic matching of data records based on data contained within the data records. The system can include a matching engine, where the matching engine includes a probabilistic matching algorithm, and where the matching logic of the probabilistic matching algorithm can be configured (i.e., modified) at runtime based on the data contained with the data records. Thus, the matching logic of the probabilistic matching algorithm can be dynamic. Further, the matching logic of the probabilistic matching algorithm can also be modified at runtime based on a configuration file, where the configuration file can be created or modified at design time. Thus, the matching logic of the probabilistic matching algorithm can also be configurable. Such modifications of the probabilistic matching algorithm can include system-based modifications, condition-based modifications, frequency-based modifications, field-substitution modifications, agreement-weight-maximum-cap modifications, match-caching modifications, or waterfall-matching modifications.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1","b":["10","10","12","10","10","22","12","22","10","14","22","14","10","20","10"]},"A computer-readable medium may be any available medium that can be accessed by processor . A computer-readable medium may include both a volatile and nonvolatile medium, a removable and non-removable medium, a communication medium, and a storage medium. A communication medium may include computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism, and may include any other form of information delivery medium known in the art. A storage medium may include RAM, flash memory, ROM, erasable programmable read-only memory (\u201cEPROM\u201d), electrically erasable programmable read-only memory (\u201cEEPROM\u201d), registers, hard disk, a removable disk, a compact disk read-only memory (\u201cCD-ROM\u201d), or any other form of storage medium known in the art.","Processor  can also be operatively coupled via bus  to a display , such as a Liquid Crystal Display (\u201cLCD\u201d). Display  can display information to the user. A keyboard  and a cursor control device , such as a computer mouse, can also be operatively coupled to bus  to enable the user to interface with system .","According to one embodiment, memory  can store software modules that may provide functionality when executed by processor . The modules can include an operating system , a configurable dynamic matching module , as well as other functional modules . Operating system  can provide an operating system functionality for system . Configurable dynamic matching module  can provide functionality for dynamically matching data originating from one or more data sources, as will be described in more detail below. In certain embodiments, configurable dynamic matching module  can comprise a plurality of modules, where each module provides specific individual functionality for dynamically matching data originating from one or more data sources. System  can also be part of a larger system. Thus, system  can include one or more additional functional modules  to include the additional functionality. For example, functional modules  may include modules that provide additional functionality, such as the \u201cOracle\u00a9 Healthcare Master Person Index\u201d product from Oracle Corporation.","Processor  can also be operatively coupled via bus  to a database . Database  can store data in an integrated collection of logically-related records or files. Database  can be an operational database, an analytical database, a data warehouse, a distributed database, an end-user database, an external database, a navigational database, an in-memory database, a document-oriented database, a real-time database, a relational database, an object-oriented database, or any other database known in the art.","According to an embodiment, a \u201cmatching configuration\u201d is a configuration parameter that modifies a probabilistic matching algorithm. According to an embodiment, a \u201cmatch set\u201d is an example of a matching configuration, where a match set is a set of data record fields that also includes an agreement weight and a disagreement weight for each data record field of the match set. An agreement weight and a disagreement weight can each be a numerical value (either positive in the case of an agreement weight or negative in the case of a disagreement weight) that can represent a degree of similarity between two values associated with each data record field of the match set. According to the embodiment, a match set can be used to dynamically compare and match two data records, and generate a match score corresponding to the two data records. More specifically, a match set can be used to dynamically compare and match one or more data record fields of the two data records, and generate a match weight corresponding to each data record field of the two data records. The match weight can be based on the agreement weight or the disagreement weight associated with the data record field. In other words, the more closely the values of the one or more data record fields \u201cmatch,\u201d the more the match weight corresponds to the agreement weight. Likewise, the less closely the values of the one or more data record fields \u201cmatch,\u201d the more the match weight corresponds to the disagreement weight. A match score can be generated as a function of the individual match weights (such as a sum of the individual match weights). The match score can represent a degree of similarity of the two data records. As an example, the match score can be a numeric value (either positive or negative) that can represent the degree of similarity of the two data records. In an embodiment, the highest match score generated from one or more match sets can be used to determine whether the two data records \u201cmatch\u201d (i.e., are similar). For example, a duplicate threshold and a match threshold can be defined, where a match threshold has a higher value than a duplicate threshold. If the highest match score generated is equal to or greater than a duplicate threshold, it can be determined that the two data records potentially \u201cmatch.\u201d If the highest match score generated is equal to or greater than a match threshold, it can be determined that the two data records definitely \u201cmatch.\u201d If the highest match score generated is less than a duplicate threshold, it can be determined that the two data records definitely do not \u201cmatch.\u201d","According to an embodiment, a match set can be associated with a set of one or more systems, where a system represents a data source that data originates from. According to the embodiment, a match set can also be associated with a set of one or more conditions, where a condition can include a comparison of a value of a data record field and a predefined value (e.g., [field=value]). Further, a match set can be associated with a score multiplier, where a score multiplier includes a numeric value, and where the score multiplier can be multiplied with a match score generated by a probabilistic matching algorithm of a match engine that utilizes the match set, in order to normalize the match score. Such normalization can be based on an assumed reliability of the match set utilized by the match engine to generate the match score. For example, if a match score generated for a match set is 50, and a score multiplier associated with the match set has a value of 0.8, then the match score can be normalized to 40. In addition, a match set can include one more child match sets. A child match set is a subset of a match set. In order words, a child match set is a subset of data record fields that also includes an agreement weight and a disagreement weight for each data record field of the child match set, where the subset of data record fields of a child match set includes a fewer number of data record fields than the set of data record fields of a match set. One or more child match sets can be used to produce agreement-weight-maximum-cap modifications, as is described below in greater detail.","According to an embodiment, one or more matching configurations (such as one or more match sets, one or more frequency-based fields, or one or more substitution fields) can be created and stored within a matching configuration file. The matching configuration file can be subsequently analyzed (by a match enhancer, for example), and the one or more match configurations can be applied to a probabilistic matching algorithm of a matching engine, in order to modify the probabilistic matching algorithm. This modification can be accomplished at two levels: a dynamic level and a configurable level. At a dynamic level, as is discussed below in greater detail, the one or more match configurations can cause the probabilistic matching algorithm to behave differently, based on the data that the probabilistic matching algorithm is applied to. Thus, the probabilistic matching algorithm can produce different match scores based on the data the probabilistic matching algorithm is applied to, and thus, the matching engine can be a dynamic matching engine. Further, at a configurable level, as is also discussed below in greater detail, the matching configuration file (and thus, the one or more matching configurations), can be configured at design time, which can cause the probabilistic matching algorithm to be modified, and thus, behave differently at runtime. Thus, the matching engine can also be a configurable matching engine.","One example modification of a probabilistic matching algorithm is a system-based modification. A system-based modification is a modification where a set of data record fields for a match set can be modified based on a system that received data originates from. A probabilistic matching algorithm can be implemented based on the match set, and thus, a modification to the match set can result in a modification of the probabilistic matching algorithm. For example, system A may have reliable social security number (\u201cSSN\u201d) data, but system B may not have reliable SSN data. Thus, if data is received from system A, a probabilistic matching algorithm can be implemented based on a match set that includes an SSN data record field. However, if data is received from system B, a probabilistic matching algorithm can be implemented based on a match set that does not include an SSN data record field.","Another example modification of a probabilistic matching algorithm is a condition-based modification. A condition-based modification is a modification where a set of data record fields for a match set can be modified based on a conditional criteria. For example, a set of data record fields for a match set can include a \u201cdriver's license identity\u201d data record field and a \u201cmedical record identity\u201d data record field. If received data includes a \u201cpersonal identity\u201d data record field with a value of \u201cdriver license,\u201d a probabilistic matching algorithm can be implemented based on a match set that includes the \u201cdriver's license identity\u201d data record field and that does not include the \u201cmedical record identity\u201d data record field. However, if received data includes a \u201cpersonal identity\u201d data record field with a value of \u201cmedical record,\u201d a probabilistic matching algorithm can be implemented based on a match set that includes the \u201cmedical record identity\u201d data record field and that does not include the \u201cdriver's license identity\u201d data record field.","Another example modification of a probabilistic matching algorithm is a frequency-based modification. A frequency-based modification is a modification where a match score generated for at least two data records can be modified based on a frequency of a value of at least one data record field of a match set. For example, a match set can include a \u201cfirst name\u201d field as a data record field. Two or more data records that include a \u201cfirst name\u201d field can be compared by a probabilistic matching algorithm, and the probabilistic matching algorithm can generate a match weight for the data record field based on the comparison. However, the frequency of a value contained within the \u201cfirst name\u201d field of each data record can be evaluated, and the match weight for the data record field can be modified based on the evaluation. For example, the first name \u201cJohn\u201d can be very common, and an identified match of two or more data records that include a value of \u201cJohn\u201d in the \u201cfirst name\u201d field is less likely to be an actual match. In contrast, the first name \u201cEls\u201d may not be very common, and an identified match of two or more data records that include a value of \u201cEls\u201d in the \u201cfirst name\u201d field is more likely to be an actual match. Thus, a generated match weight for the data record field that includes a value of \u201cJohn\u201d can be reduced, whereas a generated match weight for the data record field that includes a value of \u201cEls\u201d can remain unchanged (or be reduced by a smaller amount, or even increased).","In certain embodiments, the frequency of a data record field value can only affect a match weight when the match weight is based on an agreement weight of the data record field, and cannot affect the match weight when the match weight is based on a disagreement weight of the data record. For example, a \u201cfirst name\u201d field of a data record can have an agreement weight of +10 and a disagreement weight of \u221210. When high frequency first names such as \u201cJohn\u201d and \u201cJohn\u201d are matched, the match weight can be reduced by a value, such as 5, because the match weight is based on an agreement weight of +10. But if the names \u201cGeorge\u201d and \u201cJohn\u201d are compared, and it is determined that the names do not match, the match weight would still be \u221210 (i.e., the match weight would not be affected), because the match weight is based on the disagreement weight.","In one embodiment, an absolute frequency value associated with each data record field value is stored within a frequency table. An example frequency table is provided below:",{"@attributes":{"id":"p-0026","num":"0025"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Frequency"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"John","10000"]},{"entry":[{},"Evans","3000"]},{"entry":[{},"Chu","200"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Thus, according to the example embodiment, for every data record field value, an absolute frequency value can be stored within the frequency table. The frequency table could be populated by one of many different techniques known to one of ordinary skill in the art, such as a custom process that includes functionality for populating a table. In one embodiment, during startup, a frequency table can be loaded into memory, and a frequency percentage for each data record field value can be computed. A frequency cache could contain all such data record field values, whose percentage frequency is higher than a cache frequency percentage, which is further described in greater detail below. If a data record field value is not stored in the frequency cache, it can be assumed that the data record field value has a low frequency, and thus, can be given its agreement weight.","In one embodiment, a set of data record fields can be defined for a frequency-based modification. The set of data record fields includes one or more data record fields whose agreement weight can be normalized to a lower weight depending upon a known frequency of data for those one or more data record fields. In addition, a maximum weight per variation can be defined for the frequency-based modification. The maximum weight per variation can be a maximum percentage variation from an agreement weight. In other words, the maximum weight per variation can indicate a maximum variation from the agreement weight that is allowed, regardless of the frequency of the data for the data record field. For example, if a maximum weight per variation is 50%, and an agreement weight for a data record field is 20, then regardless of how much a match weight based on the agreement weight is reduced via a frequency-based modification, the lowest value the match weight could be reduced to would be 10.","Additionally, a cache frequency percentage can be defined for a frequency-based modification. A cache frequency percentage can be a minimum percentage value that a frequency of a value for a data record field must meet before the value is stored in cache. For example, if a cache frequency percentage is 10%, a value must occur with sufficient frequency so that a frequency percentage associated with the value is 10% or greater before the value is stored in cache. Also, one or more alternate match fields can be defined for a frequency-based modification. When a match weight of a data record field is lowered due to a high frequency of the value of the data record field, one or more alternate match fields can be specified, and the match weight for the alternate match field can be set to a weight which is the same as the reduction in the match weight that occurred due to the high frequency of the value of the data record field. Further, a weight reduction computation can be defined for a frequency-based modification. A weight reduction computation can be a computation that overrides default rules on how much a match weight should be reduced when a value of a data record field has a high frequency occurrence. In certain embodiments, the computation can be a plug-in interface, which allows a user to define an algorithm, software module, or software application that can implement the computation.","Another example modification of a probabilistic matching algorithm is a field-substitution modification. A field-substitution modification is a modification where a first value for a first substitution field of a match set is substituted for a second value for a second substitution field of the match set, and vice-versa, before two or more data records are matched. This can be used in a scenario where a data entry error may cause two or more data records to produce a \u201cfalse negative\u201d because a value has been entered in the wrong data record field in one of the data records. In certain embodiments, an agreement weight and a disagreement weight associated with the data record field as a result of field-substitution modification can each be a lower value than an agreement weight and a disagreement weight associated with the data record field when no field-substitution modification takes place.","Another example modification of a probabilistic matching algorithm is an agreement-weight-maximum-cap modification. An agreement-weight-maximum-cap modification is a modification where one or more data record fields of a match set are grouped together, and an agreement weight is \u201ccapped\u201d at a specific value for the group of data record fields of the match set. For example, a match set can have the following data record fields: date of birth, SSN, first name, address, and phone number. The \u201caddress\u201d data record field and the \u201cphone number\u201d data record field can have individual agreement weights of 10, but the data record fields can be grouped together, and the agreement weight for the group can be \u201ccapped\u201d at 10. The \u201ccapping\u201d of the agreement weight for the group also \u201ccaps\u201d a match weight for the group.","Another example modification of a probabilistic matching algorithm is a match caching modification. A match caching modification is a modification where a match weight and a pair of data record field values that the match score corresponds to is stored within a cache. Thus, the probabilistic matching algorithm is only required to be implemented when the match weight and the pair of data record field values is not present in the cache.","Another example modification of a probabilistic matching algorithm is a waterfall matching modification. A waterfall matching modification is a modification where two or more match sets are \u201cchained\u201d together so that they are each applied to a plurality of data records, and the match set that produces the highest match score is retained, while the other match scores produced by the other match sets are disregarded.","In an example embodiment involving a waterfall matching modification, there can be two types of match sets: conditional match sets and unconditional match sets. A conditional match set is a match set associated with one or more conditions. An unconditional match set is a match set that is not associated with any conditions. There can be a default match set which is an unconditional match set. In this example embodiment, an overall match score can be a maximum of the scores evaluated from all qualified match sets, where each qualified match set can be used for comparing and matching a pair of data records. According to the example embodiments, conditional match sets can be processed first. The processing of unconditional match sets can be controlled by a matching configuration flag (optionally entitled \u201cProcessAlwaysUnconditionalMatchSets\u201d). If the matching configuration flag is set to a false value, then after processing the one or more conditional match sets, a match enhancer system can process one or more unconditional match sets only if none of the one or more conditional match sets satisfy the input data. If the matching configuration flag is set to a true value, then the match enhancer system can process both the one or more conditional match sets, and the one or more unconditional match sets, and select the highest score among all the match sets (including both the one or more conditional match sets and the one or more unconditional match sets).",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 2","b":["200","200","210","220","230","240","210","230","240","250","210","250","220","210","230","230","240","240","230","240","230","240","240","230","220","230"]},"At , framework  sends match enhancer  a request to find a match for one or more data records. In one embodiment, along with the request, framework  sends a plurality of data records to match enhancer . In this embodiment, framework  requests match enhancer  to find a match between two or more data records of the plurality of data records. In another embodiment, framework  sends a single data record to match enhancer . In this embodiment, framework  requests match enhancer  to retrieve one or more data records from a data source (such as a database) and to find a match between the single data record and at least one data record of the one or more data records. In the illustrated embodiment of , framework  sends a single data record including the data \u201cSmith John M Monrovia 91006,\u201d at input data . Further, in the illustrated embodiment, match enhancer retrieves two data records: a first data record including the data \u201cJohn Smith Monrovia 91017\u201d and a second data record including the data \u201cJohn Lyod Los Angeles,\u201d at matching block pool .","At , match enhancer  analyzes matching configuration file , where matching configuration file  includes one or more matching configurations. In certain embodiments, one or more matching configurations include one or more match sets, one or more frequency-based fields, or one or more substitution fields. In the illustrated embodiment of , matching configuration file  includes a match set, identified as \u201cMatch Set\u201d. A match set includes one or more data record fields, where each data record field includes an agreement weight and a disagreement weight. In the illustrated embodiment of , Match Set includes data record fields \u201cfirstName\u201d and \u201clastName,\u201d where each data record field includes a agreement weight of 10, and a disagreement weight of \u221210 (i.e., \u201cMatch columns\u2212firstName, lastName, agreementWt=10, disagreementWt=\u221210). Matching configuration file  also includes other match sets, such as \u201cMatch Set.\u201d","In an embodiment, matching configuration file  can include one or more matching configurations that match enhancer  can use to modify a probabilistic determination algorithm of match engine . As an example of matching configurations, at least one match set of matching configuration file  can be associated with one or more systems, where a system represents a data source that data originates from. Thus, according to the embodiment, the at least one match set is only applied to data records received by match enhancer  when the data records originate from a system that is associated with the match set. In the illustrated embodiment of , Match Set is associated with system \u201cHospA\u201d (i.e., \u201cSystem=HospA\u201d). Thus, according to the illustrated embodiment, Match Set is only applied to data records that are received by match enhancer  when the data records originate from system \u201cHospA.\u201d","As another example of matching configurations, at least one match set of matching configuration file  can be associated with one or more conditions, where a condition can include a comparison of a value of a data record field and a predefined value (e.g., [field=value]). Thus, according to the embodiment, the at least one match set is only applied to data records received by match enhancer  when the data records satisfy at least one condition associated with the match set. In the illustrated embodiment of , Match Set is associated with a condition \u201cGender=M\u201d (i.e., \u201cCondition Gender=M\u201d). Thus, according to the illustrated embodiment, Match Set is only applied to data records that are received by match enhancer  when a value of a \u201cGender\u201d data record field is \u201cM.\u201d","As another example of matching configurations, at least one match set of matching configuration file  can be associated with a score multiplier (not illustrated in ), where a score multiplier includes a numeric value, and where the score multiplier can be multiplied with a match score generated by a probabilistic matching algorithm of a match engine that utilizes the match set, in order to normalize the match score. As another example of matching configurations, at least one match set of matching configuration file  can include a child match set (also not illustrated in ), where a child match set is a subset of a match set.","As yet another example of matching configurations, matching configuration file  can include one or more frequency-based fields. A frequency-based field identifies a data record field of a match set, where a match weight of the data record field can be modified based on a frequency of a value of the data record field. In one embodiment, matching configuration file  can also include a frequency table, where the frequency table includes one or more data record field values, and an absolute frequency value associated with each data record field value. In the illustrated embodiment of , matching configuration file  includes frequency-based fields \u201cfirstName\u201d and \u201clastName\u201d (i.e., \u201cFrequency based weight Reduction firstName, last Name\u201d). Furthermore, matching configuration file  includes a frequency table that includes a data record field value \u201cJohn\u201d and an associated absolute frequency value \u201c10000\u201d (i.e., \u201cFrequency Table Value Frequency John 10000\u201d).","As an additional example of matching configurations, matching configuration file  can include one or more substitution fields. Substitution fields identify data record fields of a match set, where values corresponding to the data record fields can be substituted for each other, before the data record fields of a plurality of data records are compared to determine if the data record fields \u201cmatch.\u201d In the illustrated embodiment of , matching configuration file  includes substitution fields \u201cfirstName\u201d and \u201clastName\u201d (i.e., Field Substitution firstName to lastName\u201d). This indicates that values corresponding to the data record field \u201cfirstName\u201d can be substituted for values corresponding to the data record field \u201clastName,\u201d and vice-versa.","As yet another example of matching configurations, matching configuration file  can include a grouping of one or more data record fields of a match set, and a maximum agreement weight associated with the grouping of the one or more data records. In the illustrated embodiment of , matching configuration file  includes a grouping of the \u201ccity\u201d and \u201czip\u201d data record fields, and a maximum agreement weight of 5 associated with the grouping (i.e., \u201cCap agWt (city=5, zip=5)=5\u201d).","As an additional example of matching configurations, matching configuration file  can include an indication to store a match weight and a pair of data record field values that the match weight corresponds to within a cache (not illustrated in ). As yet another example of matching configurations, matching configuration file  can include an indication to perform waterfall matching (also not illustrated in ).","At , match enhancer  modifies a probabilistic matching algorithm of matching engine  at runtime based on the one or more matching configurations within matching configuration file . In certain embodiments, the one or more matching configurations can include one or more match sets, one or more frequency-based fields, or one or more substitution fields. The modifying of the probabilistic matching algorithm of matching engine  can include one or more of the following example modifications. In one example, the probabilistic matching algorithm can be modified by modifying a match weight that is generated for one or more data record fields of the one or more data records based on a frequency of a value of the one or more frequency-based fields included within matching configuration file . In the illustrated embodiment of , a match weight that is generated for a \u201cfirstName\u201d data record field of the data record \u201cSmith John M Monrovia 91006\u201d and the data record \u201cJohn Smith Monrovia 91017\u201d (or a match weight that is generated for a \u201cfirstName\u201d data record field of the data record \u201cSmith John M Monrovia 91006\u201d and the data record \u201cJohn Lyod Los Angeles\u201d) can be modified based on a frequency of the value \u201cJohn\u201d for the frequency-based field \u201cfirstName,\u201d at frequency-based reduction .","In another example, the probabilistic matching algorithm can be modified by modifying at least one data record field of at least one match set based on a system that the received data originates from. In the illustrated embodiment of , the data record fields of Match Set can be used to compare the data record \u201cSmith John M Monrovia 91006\u201d with one or more data records because the data record originates from system \u201cHospA,\u201d at MatchSet  qualified . In yet another example, the probabilistic matching algorithm can be modified by modifying at least one data record field of at least one match set based on a conditional criteria. In the illustrated embodiment of , the data record fields of Match Set can be used to compare the data record \u201cSmith John M Monrovia 91006\u201d with one or more data records because the data record includes a value \u201cM\u201d for the \u201cGender\u201d data record field, at MatchSet  qualified .","In another example, the probabilistic matching algorithm can be modified by substituting a first value of a first substitution field of a match set for a second value of a second substitution field of the match set, and substituting the second value of the second substitution field of the match set for the first value of the first substitution field of the match set. In the illustrated embodiment of , the value \u201cSmith\u201d of the data record \u201cSmith John M Monrovia 91006\u201d can be substituted for the value \u201cJohn\u201d of the data record, and vice-versa, at firstName, lastName swapped . In yet another example, the probabilistic matching algorithm can be modified by grouping together one or more data record fields of a match set, and setting an agreement weight for the group of data record fields of the match set to a specific value. In the illustrated embodiment of , the \u201ccity\u201d data record field and the \u201czip\u201d data record field are both grouped together, and an agreement weight for the group of data records fields is set to 5, at MatchSet  qualified .","In another example, the probabilistic matching algorithm can be modified by storing a match weight and a pair of data record field values that the match weight corresponds to within a cache. In yet another example, the probabilistic matching algorithm can be modified by applying two or more match sets to the one or more data records to produce a plurality of match scores, retaining the highest match score, and disregarding the other match scores.","At , match engine  compares the one or more data records using the modified probabilistic matching algorithm. Match engine  can compare the one or more data records by comparing values of one or more data record fields of the one or more data records, and can generate a match weight for each data record field based on the comparison of values, and one of the agreement weight or the disagreement weight. Match engine  can further generate a match score for the at least two data records of the plurality of data records based on the match weight for each data record field. At , match enhancer  returns the match score generated by match engine  to framework .","As previously described, in certain embodiments, matching configuration file  is an XML file. In these embodiments, a matching configuration file file can have three main sections: (a) <matchSet>\u2014can have multiple match sets and properties of each match set; (b) <frequencyBasedFields>\u2014defines data record fields whose weights are modified based on frequency of certain values; and (c) <fieldsSubstitution>\u2014contains multiple sets of fields whose values can be substituted for each other for matching and blocking purposes.","According to an embodiment, an example matching configuration file in XML format is provided:",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<MatchExtConfiguration>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<matchWeightMUProbability>false<\/matchWeightMUProbability>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<matchSet ID=\u201d1\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<scoreMultiplier>.9<\/scoreMultiplier>"]},{"entry":[{},"<matchColumns>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<matchColumn>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<columnName>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Enterprise.SystemSBR.Person.FirstName_Std<\/columnName>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<matchType>FirstName<\/matchType>"]},{"entry":[{},"<agreementWeight>10<\/agreementWeight>"]},{"entry":[{},"<disagreementWeight>\u221210<\/disagreementWeight>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/matchColumn>"]},{"entry":[{},"<matchColumn>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<columnName>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Enterprise.SystemSBR.Person.LastName_Std<\/columnName>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<matchType>LastName<\/matchType>"]},{"entry":[{},"<agreementWeight>10<\/agreementWeight>"]},{"entry":[{},"<disagreementWeight>\u221210<\/disagreementWeight>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<\/matchColumn>"]},{"entry":[{},"<\/matchColumns>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<Conditions>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<fieldCondition>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<field> Enterprise.SystemSBR.Person.Gender<\/field>"]},{"entry":[{},"<value>M<\/value>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/fieldCondition>"]},{"entry":[{},"<Systems>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<System>HospitalA<\/System>"]},{"entry":[{},"<System>HospitalB<\/System>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/Systems>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Conditions>"]},{"entry":[{},"\u2002<childMatchSet capAgreement=10 capDisagreementWt=\u221210>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<matchColumns>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<matchColumn>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002<columnName>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Enterprise.SystemSBR.Person.Phone.PhoneNum<\/columnName>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002<matchType>Phone<\/matchType>"]},{"entry":[{},"<agreementWeight>10<\/agreementWeight>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<disagreementWeight>\u221210<\/disagreementWeight>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<\/matchColumn>"]},{"entry":[{},"\u2003<matchColumn>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<columnName>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Enterprise.SystemSBR.Person.Address.Staddress<\/columnName>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002<matchType>StAddress<\/matchType>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<\/matchColumn>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<\/matchColumns>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/childMatchSet>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<\/matchSet>"]},{"entry":[{},"\u2003<fieldSubstitutions>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<Matching>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<substituteField>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<targetField> Enterprise.SystemSBR.Person.firstName<\/targetField>"]},{"entry":[{},"\u2003<sourceField"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"weightMultiplier=.9>Enterprise.SystemSBR.Person.lastName<\/sourceField>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<sourceField>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Enterprise.SystemSBR.Person.Alias[*].firstName<\/sourceField>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<\/substituteField>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002<\/Matching>"]},{"entry":[{},"\u2003<Blocking>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002<substituteField>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<targetField>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Enterprise.SystemSBR.Person.firstName_ph<\/targetField>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<sourceField>Enterprise.SystemSBR.Person.lastName<\/sourceField>"]},{"entry":[{},"<PhoneticEncoder-type>Soundex<\/PhoneticEncoder-type>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<\/substituteField>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<\/Blocking>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/fieldSubstitutions>"]},{"entry":[{},"<frequencyBasedFields>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<FrequencyWeightReducerPlugin>customPackage.CustomFreuqencyReducer"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/ FrequencyWeightReducerPlugin>"]},{"entry":[{},"<field>"]},{"entry":[{},"\u2003<fieldName> Enterprise.SystemSBR.Person.firstname<\/fieldName>"]},{"entry":[{},"\u2003<\/field>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/frequencyBasedFields>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<Waterfall>false<\/Waterfall>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<\/MatchExtConfiguration>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The example matching configuration file includes a <matchWeightMUProbability> element. According to the embodiment, a set of all agreement weight elements and all disagreement weight elements can contain either an absolute value or an \u201cm-u probability\u201d (where an m-probability is a probability that two or more data record fields match when two or more data records are identified as a matched pair, and where a u-probability is a probability that two or more data record fields match when two or more data records are identified as a unmatched pair). A true value for the <matchWeightMUProbability> element means that an agreement weight element has a m-probability value, and that a disagreement weight element has a u-probability value. A false value for the <matchWeightMUProbability> element means that an agreement weight element has an absolute value and that a disagreement weight element also has an absolute value.","The example matching configuration file includes a <matchSet> element. A matching configuration file can include a plurality of match sets. A <matchSet> element has a unique identity. Each match set can be evaluated independently. A match score evaluated from all the match sets for a given data record can be the one having the highest match score. Further, a match set can contain child match sets. The example matching configuration file also includes a <scoreMultipler> element. A <scoreMultiplier> element can include a value that is multipled with the match score computed for the match set to determine a total score. The example matching configuration file also includes an <agreementWeight> element and a <disagreementWeight> element. An <agreementWeight> element and a <disagreementWeight> element are optional elements that can specify values for an agreement weight and a disagreement weight, respectively. If the <agreementWeight> and <disagreementWeight> elements are not specified, default values can be used.","The example matching configuration file also includes a <Conditions> element, where the <Conditions> element includes a <fieldCondition> element and a <Systems> element, where the <Systems> element includes a <system> element. A <Conditions> element can include one or more conditions associated with a match set. A plurality of data records can be compared using a particular match set only if the one or more conditions for the match set are evaluated to true. Conditions can comprise of one or more individual <fieldCondition> elements. Each <fieldCondition> element can have an implicit \u201cAND\u201d operator with other <fieldCondition> elements. A <fieldCondition> element is true only if the data record field at runtime has a value that is specified in a value element of the <fieldCondition> element.","The set of <fieldCondition> elements can also have an implicit \u201cAND\u201d operator with a <Systems> element, where the <Systems> element indicates one or more <System> elements, where a <System> element is true only id the data record originates from the system specified in a value element of the <System> element. Each System> elements can also have an implicit \u201cOR\u201d operator with other <System> elements. Conditional elements can also be empty, which indicates an unconditional match set. Further, the <Systems> element can be empty, which means that the conditions are true for all systems.","The example matching configuration file also includes a <childMatchSet>element. A <childMatchSet> element contains a subset of data record fields, where a total cap for an aggregate of an agreement weight and a disagreement weight can be specified. The example matching configuration file also includes a <fieldSubstitutions> element, where the <fieldSubstitutions> element includes a <Matching> element and a <Blocking> element, where each of the <Matching> and <Blocking> elements includes a <sourceField> element and a <targetField> element. A <fieldSubstitutions> element indicates one or more substitution fields for both matching (i.e., <Matching>) and blocking (i.e., <Blocking>.). A <sourceField> element indicates a source field for a substitution, and a <targetField> element indicates a target field for the substitution. Thus, a value for a field specified in the <sourceField> element can be used in addition to a value for a field specified in the <targetField> element for runtime matching. As an example, if a firstName field is equal to \u201cJohn,\u201d a lastName field is equal to \u201cSmith,\u201d and an alias.firstName field is equal to \u201cJack\u201d then first name comparisons can include values [\u201cJohn,\u201d \u201cSmith,\u201d \u201cJack\u201d].","The example matching configuration file also includes a <frequencyBasedFields> element, where the <frequencyBasedFields> element includes a <field> element. A <frequencyBasedFields> element indicates one or more frequency-based fields. A frequency-based field is indicated by a <field> element, where a frequency-based field is a data record field whose weight can be reduced based upon a frequency of a value that requires matching. The <field> element optionally includes an <alternateMatch> element that specifies an alternate data record field that can be evaluated if a weight of the frequency-based field is reduced, and the agreement weight of the alternate data record field is the same as the reduced weight of the frequency-based field. The <frequencyBasedFields> element can include a <maxWeightPerVariation> element, which specified a maximum percentage in the weight that can be reduced, regardless of any frequency-based agreement weight reduction rules. The <frequencyBasedFields> element can also include a <FrequencyWeightReducerPlugin> element, which specifies a frequency reducer that can evaluate how much agreement weight of a given data record field should be reduced based upon the frequency percentage of the given data record field value. The frequency reducer can be a custom plug-in that computes a new agreement weight based upon a percentage frequency of a certain string. It can be invoked by a framework for a particular data record field that can be defined in a secondary XML file. For example, the interface for invoking the frequency reducer is shown as follows:",{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Public interface FrequencyWeightReducer {"},{"entry":"\/**"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Returns new agreement weight for a String that participates in"]},{"entry":[{},"matching process."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"Double computeAgreementWt(String fieldname, String value, double"},{"entry":"percentageFrequency, double agreementWt);"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The example configuration file also includes a <waterfall> element. A <waterfall> element indicates if waterfall matching is implemented. A true value for a <waterfall> element indicates that waterfall matching is implemented. A false value for a <waterfall> element indicates that waterfall matching is not implemented.","In one embodiment, there can be a default behavior of frequency-based reduction in agreement weights. In this embodiment, the reduction in agreement weight due to a high frequency of a value is not one linear function across an entire frequency spectrum. Instead, there can be ranges of frequencies, for which there are corresponding ranges of new agreement weights. Below is an example range of frequencies and corresponding range of new agreement weights:",{"@attributes":{"id":"p-0062","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"if ( percenFrequency > 10%) new agreementWt = 20% of original"},{"entry":"agreementWt"},{"entry":"else if (percenFrequency is 5% - 10%) new agreementWt = 20% - 30% of"},{"entry":"original agreeementWt"},{"entry":"else if (percenFrequency is 1% - 5%) new agreementWt = 30% - 50% of"},{"entry":"original agreeementWt"},{"entry":"else if (percenFrequency is .1% - 1%) new agreementWt = 50% - 70% of"},{"entry":"original agreeementWt"},{"entry":"else if (percenFrequency is .01% - .1%) new agreementWt = 70% - 90%"},{"entry":"of original agreeementWt"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Below is another example of a matching configuration file in XML format:",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<match-system-object>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<object-name>MPI1<\/object-name>"]},{"entry":[{},"<match-columns>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<match-column>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<column-name>Enterprise.SystemSBR.MPI1.FirstName_Std<\/column-"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"name>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<match-type>FirstName<\/match-type>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/match-column>"]},{"entry":[{},"<match-column>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<column-name>Enterprise.SystemSBR.MPI1.LastName_Std<\/column-"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"name>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<match-type>LastName<\/match-type>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/match-column>"]},{"entry":[{},"<\/match-columns>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<match-system-object>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The match columns (i.e., data record fields) defined in the above example matching configuration file can form a default match set. If agreement weights and disagreement weights for any match columns are not defined (such as in the above example matching configuration file), a default set of agreement weights and disagreement weights can be defined in a separate configuration file. Below is an example configuration file that can contain a default set of agreement weights and disagreement weights.",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"8"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"char"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"char"}},{"@attributes":{"colname":"8","colwidth":"28pt","align":"char"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"8","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PrimaryName","30","0","us","0.9","0.001","13","\u22122"]},{"entry":["StreetName","25","0","us","0.9","0.001","11","0"]},{"entry":["HouseNumber","8","0","un","0.9","0.001","11","0"]},{"entry":["StreetDir","15","0","u","0.9","0.001","7","\u22122"]},{"entry":["StreetType","10","0","u","0.9","0.001","7","\u22122"]},{"entry":["FirstName","15","0","uf","0.9","0.001","10","\u22124"]},{"entry":["LastName","15","0","ul","0.9","0.001","10","\u22124"]},{"entry":["String","25","0","us","0.9","0.001","10","\u221210"]},{"entry":{"@attributes":{"namest":"1","nameend":"8","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 3","FIG. 2","FIG. 2","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3"],"b":["220","300","310","310","310","310","320","310","320","330","330","220","330","340","350","340","330","350","350","350"]},{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 4","FIG. 2","FIG. 3","FIG. 4","FIG. 4","FIG. 4"],"b":["220","330","400","401","420","430","440","450"]},"At , a matchTuple( ) method of MatchEnhancer  is invoked. The matchTuple( ) method performs the functionality of modifying a probabilistic matching algorithm of a match engine based on two data records. Tuple t (which is a representation of a first data record) and tuple t (which is a representation of a second data record) are passed into the matchTuple( ) method of MatchEnhancer  as parameters.","At , a selectMatchSet( ) method of MatchSetSelector  is invoked. The selectMatchSet( ) method performs the functionality of selecting one or more match sets from a matching configuration file (not illustrated in ). MatchTuple t (which is a representation of the first data record) and MatchTuple t (which is a representation of the second data record) are passed into the selectMatchSet( ) method as parameters.","At , a substituteValues( ) method of FieldValueSubstitutor  is invoked. The substituteValues( ) method performs the functionality of substituting a first value of a first data record field for a second value of a second data record field, and vice-versa, based on a pair of substitution fields stored within the matching configuration file. Tuple t (which is a representation of the first data record) is passed into the substituteValues( ) method as a parameter.","At , a normalizeWeights( ) method of FrequencyNormalizer  is invoked. The normalizeWeights( ) method performs the functionality of modifying an agreement weight for a data record field due to a frequency of a value associated with the data record field, based on a frequency-based field stored within the matching configuration file. Tuple t (which is a representation of the first data record) is passed into the normalizeWeights( ) method as a parameter.","At , a checkCache( ) method of MatchCache  is invoked. The checkCache( ) method performs the functionality of checking whether a match weight associated with a pair of data record field values, and the pair of data record field values, are stored in the cache. If they are stored in the cache, the match weight is retrieved from the cache. Otherwise, the match weight is computed at , described below. This is performed for each data record field of the first data record. MatchField f (which is a representation of a data record field of the first data record) is passed into the checkCache( ) method as a parameter.","At , a compare( ) method of MatchEngine  is invoked. The compare( ) method performs the functionality of comparing a value of a data record field of the first data record with a value of the data record field of the second data record. A match weight is generated based on the comparison. This is performed for each data record field of the first data record where the match weight was not retrieved from the cache. A match score is generated, where the match score is based on the individual match weights for the data record fields of the first and second data records. Field ID f, which represents the data record field of the first data record and the second data record is passed into the compare( ) method as a parameter.","At , a maximum match score is returned. For each match set, MatchEngine  can return a match score, as previously described. The maximum match score can be the highest match score returned by MatchEngine . In certain embodiments, before the maximum match score is returned, the maximum match score is adjusted using a score multiplier (not shown in ).",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 5","FIG. 1","FIG. 5","FIG. 5","FIG. 1"],"b":["16","16"]},"The flow begins and proceeds to . At , data is received from one or more data sources. The data includes a plurality of data records. Each data record can include one or more data record fields, where each data record field includes a value. The flow then proceeds to .","At , a matching configuration file is analyzed. The matching configuration file can include one or more matching configurations. In certain embodiments, the one or more matching configurations include one or more match sets, one or more frequency-based fields, or one or more substitution fields. In these embodiments, each match set can include one or more data record fields, and each data record field can include an agreement weight and a disagreement weight. The flow then proceeds to .","At , a probabilistic matching algorithm of a matching engine is modified at runtime based on the one or more matching configurations and based on two or more data records of the plurality of data records that require matching. In certain embodiments where the one or more matching configurations include one or more match sets, one or more frequency-based fields, or one or more substitution fields, the modifying can include modifying the match score for the two data records based on a frequency of a value of the one or more frequency-based fields. Alternately, in these embodiments, the modifying can include modifying at least one data record field of at least one match set based on a system that the received data originates from. As an alternative, in these embodiments, the modifying can include modifying at least one data record field of at least one match set based on a conditional criteria. Alternatively, in these embodiments, the modifying can include substituting a first value of a first substitution field of a match set for a second value of a second substitution field of the match set, and substituting the second value of the second substitution field of the match set for the first value of the first substitution field of the match set. Also as an alternative, in these embodiments, the modifying can include grouping together one or more data record fields of a match set, and setting an agreement weight for the group of data record fields of the match to a specific value. Alternatively, in these embodiments, the modifying can include storing each match weight and a pair of data record field values that each match weight corresponds to within a cache. Also as an alternative, in these embodiments, the modifying can include applying two or more match sets to the at least two data records to produce a plurality of match scores, retaining the highest match score, and disregarding the other match scores. In some of these embodiments, the two or more match sets can include one or more conditional match sets and one or more unconditional match sets, where a conditional match set is a match set associated with one or more conditions, and where an unconditional match set is a match set that is not associated with any conditions. In these embodiments, when a matching configuration flag is set to a false value, the applying the two or more match sets can include applying the one or more conditional match sets to the at least two data records, and only applying the one or more unconditional match sets to the at least two data records when none of the one or more conditional match sets satisfy the data. However, when a matching configuration flag is set to a true value, the applying the two or more match sets can include applying both the one or more conditional match sets to the at least two data records and the one or more unconditional match sets to the at least two data records. In certain embodiments, an extent and a type of modification of the probabilistic matching algorithm of the matching engine can be based on the one or more matching configurations, where at least one of the one or more matching configurations can be varied by an administrator. In other embodiments, the one or more matching configurations can be set on an entity represented by at least one data record of the plurality of data records. The flow then proceeds to .","At , two data records of the plurality of data records are compared using the modified probabilistic matching algorithm. The comparing includes comparing values of one or more data record fields of the two data records and generating a match weight for each data record field based on the comparison of values, and the one or more matching configurations. In certain embodiments where the one or more matching configurations include one or more match sets, one or more frequency-based fields, or one or more substitution fields, the comparing can include comparing values of the one or more data record fields of the two data records and generating a match weight for each data record field based on the comparison of values, and one of the agreement weight or the disagreement weight. The flow then proceeds to .","At , a match score is generated for the two data records based on the match weight for each data record field. The flow then ends.","Thus, according to an embodiment, a system is provided that can dynamically compare and match data records that are received from one or more sources using a probabilistic matching algorithm. The probabilistic matching algorithm can be modified based on a matching configuration file that can be configured by a user, to transform the probabilistic matching algorithm into a configurable dynamic probabilistic matching algorithm capable of performing dynamic matching. Such dynamic matching can produce more accurate matches. The modifications to the probabilistic matching algorithm that involve caching can help improve overall performance of the system.","The features, structures, or characteristics of the invention described throughout this specification may be combined in any suitable manner in one or more embodiments. For example, the usage of \u201cone embodiment,\u201d \u201csome embodiments,\u201d \u201ccertain embodiment,\u201d \u201ccertain embodiments,\u201d or other similar language, throughout this specification refers to the fact that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment of the present invention. Thus, appearances of the phrases \u201cone embodiment,\u201d \u201csome embodiments,\u201d \u201ca certain embodiment,\u201d \u201ccertain embodiments,\u201d or other similar language, throughout this specification do not necessarily all refer to the same group of embodiments, and the described features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.","One having ordinary skill in the art will readily understand that the invention as discussed above may be practiced with steps in a different order, and\/or with elements in configurations which are different than those which are disclosed. Therefore, although the invention has been described based upon these preferred embodiments, it would be apparent to those of skill in the art that certain modifications, variations, and alternative constructions would be apparent, while remaining within the spirit and scope of the invention. In order to determine the metes and bounds of the invention, therefore, reference should be made to the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Further embodiments, details, advantages, and modifications will become apparent from the following detailed description of the preferred embodiments, which is to be taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
