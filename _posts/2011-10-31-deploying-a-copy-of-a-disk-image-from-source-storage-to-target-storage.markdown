---
title: Deploying a copy of a disk image from source storage to target storage
abstract: A technique deploys a copy of a disk image from source storage to target storage. The technique involves identifying a particular disk image to be copied from the source storage to the target storage. The technique further involves performing a comparison operation between a first disk image list which lists disk images on the source storage and a second disk image list which lists disk images on the target storage to generate a common disk image list which lists a set of common disk images on both the source and target storage. The technique further involves transferring, from the source storage to the target storage, a set of data portions representing differences between the particular disk image and a common disk image listed on the common disk image list. The set of data portions in combination with the common disk image form a deployed copy on the target storage.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08856486&OS=08856486&RS=08856486
owner: Citrix Systems, Inc.
number: 08856486
owner_city: Fort Lauderdale
owner_country: US
publication_date: 20111031
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit under 35 U.S.C. \u00a7119(e) of U.S. Provisional Application Ser. No. 61\/445,865 entitled \u201cMETHODS AND SYSTEMS FOR EFFICIENT COPYING OF DISK IMAGES BETWEEN VIRTUALIZATION DEPLOYMENTS,\u201d filed on Feb. 23, 2011, the contents and teachings of which are hereby incorporated by reference in their entirety.","A virtual disk image is an electronic file which a virtual machine monitor (VMM) interprets as a physical disk. Common formats for virtual disk images include .VMDK, .VHD, and .VDI.","An administrator of virtual machine (VM) platforms may wish to copy a virtual disk image from one place (or physical location) to another. For example, the administrator may wish to maintain copies of the same virtual disk image at different sites for disaster recovery purposes. As another example, the administrator may wish to backup a virtual disk image, i.e., take a VM snapshot of a virtual disk image. As yet another example, the administrator may wish to duplicate VMs on multiple VM farms from a non-writeable virtual disk image called a \u201cgolden image\u201d.","To copy a virtual disk image from a first device to a second device, the administrator initially makes sure that the second device has enough physical storage space to hold the virtual disk image, and that a reliable network path exists between the first device and the second device. Next, the administrator moves a complete copy of the virtual disk image from the first device to the second device through the network path until the complete copy of the virtual disk image has been written safely to the physical storage space of the second device.","Unfortunately, there are deficiencies to the above-described conventional approach to moving a complete copy of a virtual disk image from a first device to a second device through a network path. For example, in the above-described conventional approach, it may take several hours to move a complete copy of a large virtual disk image between two devices. Additionally, moving a complete copy of a virtual disk image over a network may consume considerable network bandwidth.","In contrast to the above-described conventional approach to moving a complete copy of a virtual disk image between two devices, an improved technique involves deploying a copy of a particular disk image from one computing device to another by identifying disk images which are common among the two devices, and then transferring only differences (or deltas) between the particular disk image and a common disk image (rather than a complete copy of the particular disk image) to the other computing device. The common disk image and the differences form an entire copy of the particular disk image. To identify disk images which are common among the two devices, the disk images are tracked using disk image identifiers which uniquely identify disk images. This technique of identifying disk images which are in common, and moving only the differences saves time and resources.","One embodiment is directed to a method of deploying a copy of a disk image from source storage to target storage. The method includes identifying a particular disk image to be copied from the source storage to the target storage. The method further includes performing a comparison operation between a first disk image list which lists disk images currently residing on the source storage and a second disk image list which lists disk images currently residing on the target storage to generate a common disk image list which lists a set of common disk images currently residing on both the source storage and the target storage. The method further includes transferring, from the source storage to the target storage, a set of data portions representing differences between the particular disk image and a common disk image listed on the common disk image list. The set of data portions transferred from the source storage to the target storage in combination with the common disk image listed on the common disk image list form a deployed copy of the particular disk image on the target storage.","In some arrangements, identifying the particular disk image to be copied from the source storage to the target storage includes specifying a particular disk image identifier which uniquely identifies the particular disk image among the disk images currently residing on the source storage (e.g., a globally unique identifier or GUID). Such an identifier may be generated electronically in response to initial formation of the particular disk image. Moreover, such an identifier may include a hash of at least a portion of the particular disk image to provide global uniqueness to the identifier within the operating environment.","In some arrangements, the first disk image list includes a first set of disk image identifiers identifying the disk images currently residing on the source storage. Additionally, the second disk image list includes a second set of disk image identifiers identifying the disk images currently residing on the target storage. In these arrangements, performing the comparison operation includes (i) comparing the first set of disk image identifiers to the second set of disk image identifiers to generate a common set of disk image identifiers, each disk image identifier of the common set belonging to both the first set of disk image identifiers and the second set of disk image identifiers, and (ii) outputting the common set of disk image identifiers as at least part of the common disk image list.","In some arrangements, each disk image identifier of the common set of disk image identifiers identifies a virtual disk image having a respective amount of commonality with the particular disk image. In these arrangements, the method further includes (i) evaluating, for each virtual disk image identified by the common set of disk image identifiers, the respective amount of commonality of that virtual disk image with the particular disk image, and (ii) selecting, from virtual disk images identified by the common set of disk image identifiers, the virtual disk image with the highest amount of commonality with the particular disk image as the common disk image.","In some arrangements, the method further includes comparing the highest amount of commonality to a predefined threshold to determine whether the amount of commonality is insignificant to warrant entirely copying the particular disk image from the source storage to the target storage. In these arrangements, transferring the set of data portions representing the differences occurs only when the highest amount of commonality is greater than or equal to the predefined threshold (e.g., 5%, 10%, and so on). Otherwise, the entire particular disk image is transferred from the source storage to the target storage in these arrangements.","Other embodiments are directed to computing devices, computing platforms, systems, computer program products, and so on. Some embodiments are directed to various processes, electronic components and circuits which are involved in deploying a copy of a disk image from source storage to target storage.","Improved techniques for deploying a copy of a particular disk image between two devices involve identifying disk images which are in common, and transferring the differences (or deltas) between the particular disk image and a common disk image from one device to the other rather than the complete disk image. To identify disk images which are common between the two devices, the disk images are tracked using disk image identifiers which uniquely identify disk images. As a result, the devices are able to identify disk images which are in common and, therefore, can move only the differences to save time and resources.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1","b":["20","20","22","22","22","24","20","22","26"]},"The communications medium  connects to the computing devices  and to the other electronic devices  to enable these components of the environment  to exchange electronic communications  with each other (e.g., illustrated by the two-sided arrow  in ). Along these lines, the communications medium  is illustrated as a cloud because it is capable of having a variety of topologies including hub-and-spoke, backbone, loop, irregular, a combination of the Internet and LAN(s), combinations thereof, and so on.","Each computing device  includes a disk image manager  and a storage repository . For example, the computing device (A) includes a disk image manager (A) and a storage repository (A). Similarly, the computing device (B) includes a disk image manager (B) and a storage repository (B).","The disk image manager  of each computing device  is constructed and arranged to coordinate operation with the disk image managers  of other computing devices  within the electronic environment  to deploy copies of virtual disk images  by identifying disk images in common and transferring disk image differences  between the computing devices . Such a transfer of disk image differences , rather than complete copies of the virtual disk images , makes more efficient use of network resources (e.g., bandwidth) and takes less time.","The storage repository  of each computing device  is constructed and arranged to reliably store the virtual disk images  as well as metadata  associated with the virtual disk images  on behalf of that computing device . For example, the storage repository (A) of the computing device (A) is constructed and arranged to store the virtual disk images (A) as well as metadata (A) associated with the virtual disk images (A). Likewise, the storage repository (B) of the computing device (B) is constructed and arranged to store the virtual disk images (B) as well as metadata (B) associated with the virtual disk images (B).","As will be explained in further detail shortly, the metadata  associated with each disk image  is (i) managed by the disk image manager , and (ii) includes particular information about that disk image . For example, the metadata  includes a globally unique identifier (or GUID) which uniquely identifies the associated disk image  among other disk images  of the electronic environment . The metadata  may include other information such as whether the associated disk image  is consider to be a golden image, whether the associated disk image  is related to a parent disk image  (i.e., whether the associated disk image  is a modified version of an earlier disk image ), whether the associated disk image  is related to a child disk image  (i.e., whether the associated disk image  has been modified to form a new disk image ), and so on. Further details will now be provided with reference to .",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 2","FIG. 1"],"b":["22","20","22","60","62","64","60","62","24","22","30","22","26","24","64","40","42","50","52","54","68"]},"In the context of a set of processors and memory running a set of applications, it should be understood that the control circuitry  is capable of performing a variety of other useful computerized operations or tasks as well as form a variety of specialized circuits. Along these lines, in some arrangements, the disk image manager  and the storage repository  are formed by actual hardware. In these arrangements, the disk image manager  is created by running a specialized program on a physical processor. Additionally, the storage repository  is formed by a database residing directly within a physical storage subsystem.","In other virtualized arrangements, the control circuitry  includes a hypervisor and a set of virtual machines running on the hardware to form a virtualization platform (e.g., see other circuitry  in ). In these virtualized arrangements, the disk image manager  is capable of running within a virtual machine of the virtualization platform, and the storage repository  is capable of residing in a virtual disk of the virtual machine.","It should be understood that a computer program product  is capable of delivering a set of instructions to the computing device  that, when run on a processor, causes the processor to operate as the disk image manager . In these arrangements, the computer program product  includes a non-transitory computer readable medium which stores code that controls operation of the processor. Examples of suitable non-transitory computer readable storage media include tangible articles of manufacture and apparatus which store instructions in a non-volatile manner such as CD-ROM, flash memory, disk memory, tape memory, and the like. Further details will now be provided with reference to .",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 3","FIGS. 1 and 2"],"b":["42","22","50","42","40","52","54","50","50","52","90","90"]},"Over time, additional disk images  may be added to the storage repository (A). For example, disk image IMAGE_A may be modified to form disk image IMAGE_B which is then saved within the storage repository (A). In this situation, the disk image manager (A) creates another globally unique disk image identifier ID_B to identify disk image IMAGE_B, e.g., see entry (B). Here, disk image IMAGE_B is considered a child of disk image IMAGE_A, and disk image IMAGE_A is considered a parent of disk image IMAGE_B. This relationship is illustrated by an arrow . This process may continue to form a hierarchical arrangement () of disk image entries  having the shape of an inverted tree.","It should be understood that it is not necessary for the storage repository (A) to save each disk image  as a full disk image. Rather, for an arrangement of related disk images, a standard process of de-duplication can be applied so that the storage repository (A) stores a baseline disk image (e.g., disk image IMAGE_A), and then stores disk image differences to form other disk images  of the same arrangement ().","It should be further understood that the storage repository (A) is capable of storing disk images  which are unrelated to each other. For example,  further shows another arrangement () formed by entries (G) and (H). In this arrangement (), disk image IMAGE_H is a child of disk IMAGE_G, and disk image IMAGE_G is a parent of disk image IMAGE_H. However, no relationship exists between disk images IMAGE_G, IMAGE_H and any of the disk images  of arrangement () since there is no arrow extending between the arrangements (), ().","One will appreciate that  provides a logical view of the contents of the storage repository (A), and that the actual information may be stored within the storage repository (A) in a variety of ways. For example, the disk images  may reside in disk image database, while the metadata  (including the disk image identifiers ) resides in a separate metadata database. As another example, disk images  may reside in a single database, and so on. As yet another example, the various data constructs may be distributed as files across a file system or as blocks over disks, and reference each other via pathnames or pointers, etc. Such structured storage of disk image information enables various tools to conveniently navigate among related disk images (e.g., tree-walk across an arrangement  of disk image entries  based on their parent\/child relationships). Further details will now be provided with reference to .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 4","FIGS. 1 and 2"],"b":["42","22","90","92","3","92","4"]},"As shown in , the storage repository (B) has some disk images  which are in common with the storage repository (A) (). Namely, disk images IMAGE_A, IMAGE_D and IMAGE_E reside on both the storage repository (A) and the storage repository (B).","However, there are also disk images  which are not in common between the storage repositories (A), (B). For example, disk image IMAGE_N and disk image IMAGE_X reside the storage repository (B) (see entries (N) and (X) in ). However, disk image IMAGE_N and disk image IMAGE_X do not reside on the storage repository (A) which is shown in .","At this point, it should be understood that the disk image managers  of the computing devices  are able to exchange information with each other to identify disk images  which are common to both computing devices . Once the common disk images  have been identified, the differences (changed portions) between a common disk image  and a particular disk image  to be deployed are transferred in order to provision a target computing device  with a full copy of the particular disk image . Further details will now be provided with reference to .",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 5","FIGS. 3 and 4","FIG. 5"],"b":["50","22","22","22","22"]},"Initially, the computing device (A) receives a command to deploy a copy of the particular disk image  from the computing device (A) to the computing device (B). In connection with the example contents of , suppose that the command directs the computing device (A) to deploy a copy of the disk image IMAGE_F to the computing device (B) (also see ). Such a command may be provided by a user of either computing device (A), (B) or a user operating one of the other electronic devices  (also see ).","In response to the command, the disk image manager (A) of the computing device (A) sends a deployment notification  and a list (A) of disk images  currently residing on the storage repository (A) to the computing device (B). The deployment notification  activates the disk image manager (B) of the computing device (B). In connection with the example contents of , the disk image manager (A) includes the disk image identifiers ID_A, ID_B, ID_C, ID_D, ID_E and ID_F in the list (A) since the disk images  associated with these disk image identifiers  reside in the repository (A).","Next, the disk image manager (B) of the computing device (B) responds to receipt of the deployment notification  and the list (A) from the computing device (A) by performing a comparison operation between the list (A) and another list (B) of disk images  currently residing on the storage repository (B) of the computing device (B). In connection with the example contents of , the list (B) includes the disk image identifiers ID_A, ID_D, ID_E, ID_N and ID_X. In some arrangements, the disk image manager (B) generates the list (B) in response to the deployment notification . In other arrangements, the disk image manager (B) maintains the list (B) in updated form even prior to receipt of the deployment notification .","The disk image manager (B) generates, as a result of the comparison operation, a common disk image list (C) of disk images  which currently reside on both the computing device (A) and the computing device (B), and sends that list (C) to the computing device (A). In connection with the example contents of , the list (C) includes disk image identifiers ID_A, ID_D and ID_E.","Next, the disk image manager (A) determines amounts (or levels) of commonality between the particular disk image  and each disk image  identified by the common disk image list (C). It should be understood that the disk image manager (A) is able to call into the local storage subsystem (e.g., see the storage repository (A) in ) to determine the amounts of commonality. In some arrangements, the amounts of commonality are measured by the number of differing portions (e.g., blocks) between the particular disk image  and the disk images  identified by the common disk image list (C). Other measurement techniques are suitable for use as well. In connection with the example contents of , the disk image manager (A) evaluates the amount of commonality between disk image IMAGE_F (the disk image to be deployed) and disk images IMAGE_A, IMAGE_D and IMAGE_E which are identified by the common disk image list (C).","With reference to , it should be understood that disk image IMAGE_D which is a parent of disk image IMAGE_F may have a high level of commonality with disk image IMAGE_F. Also, disk image IMAGE_E which is a sibling of disk image IMAGE_F (i.e., another child of disk image IMAGE_D) may have a high level of commonality with disk image IMAGE_F.","Ultimately, the disk image manager (A) selects the disk image  with the highest level of commonality to the particular disk image . In connection with the example contents of , suppose that disk image IMAGE_D has the highest level of commonality to the disk image IMAGE_F so that disk image IMAGE_D is selected.","At this point, the disk image manager (A) compares the amount of commonality for the selected disk image  (i.e., disk image IMAGE_D) to a predefined threshold  to determine whether the amount of commonality is insignificant thus warranting copying the particular disk image in its entirety from the computing device (A) to the computing device (B). Along these lines, one will appreciate that there is a certain amount of overhead required to extract and send only the differences from a disk image  to the other computing device (B) and there may exist a situation in which it is beneficial to completely copy a disk image . In some arrangements, the predefined threshold  is a static preset parameter such as 5%, 10%, and so on. In other arrangements, the predefined threshold  is tunable and can be changed by the user at any time.","When the amount of commonality is exceeds (or is greater than or equal to) the predefined threshold , the disk image manager (A) sends (i) the differences between the particular disk image  and the selected common disk image , (ii) the disk image identifier  which identifies the selected common disk image  (i.e., the disk image with the highest level of commonality), and (iii) the disk image identifier  which uniquely identifies the particular disk image . Otherwise, the disk manager (A) sends the particular disk image  in its entirety to the disk manager (B). In connection with the example contents of  and supposing that the amount of commonality exceeds the predefined threshold , the disk image manager (A) sends (i) the differences between disk image IMAGE_F and the disk image IMAGE_D, (ii) the disk image identifier ID_D which identifies the disk image IMAGE_D, and (iii) the disk image identifier ID_F which uniquely identifies disk IMAGE_F.","Upon receipt, the disk image manager (B) locally creates a clone  (e.g., a copy of a disk image) of the selected common disk image  in the storage repository (B), and applies the differences to the clone  to form the deployed copy of the particular disk image . The disk image manager (B) then associates the disk image identifier  which identifies the particular disk image  with the deployed copy of the particular disk image . In connection with the example contents of , the disk image manager (B) locally creates a clone  of disk image IMAGE_D based on the disk image identifier ID_D provided by the computing device (A), and applies the differences to the clone  to form disk image IMAGE_F. Additionally, the disk image manager (B) associates the disk image identifier ID_F with disk image IMAGE_F. Accordingly, the disk image managers (A), (B) have cooperatively operated to deploy a copy of a disk image  from the computing devices (A), (B) by conveying differences rather than a complete copy of the disk image .","It should be understood that there are a variety of techniques for determining a degree of commonality between disk images  and for identifying the disk image  with the highest degree of commonality. In some arrangements, when the source computing device  receives the list (C) of common disk images  from the target computing device , the disk image manager  of the source computing device  (e.g., see the disk image manager (A) of computing device (A) in ) exhaustively compares each disk image  on the list (C) to the disk image  to be copied. In one embodiment, the disk image manager  tree-walks over the disk image arrangement  which includes the listed disk images  and counts the number of paths between each listed disk image  and the disk image  to be copied (also see ); the listed disk image  with the least number of paths (or hops) to the disk image  to be copied being considered the disk image  with the highest degree of commonality. In another embodiment, the disk image manager  counts the number of different blocks between each listed disk image  and the disk image to be copied (e.g., computes a union of block allocation tables along the path in the tree () between the two disk images, with the size of the union reflecting the amount of difference between the disk images ); the listed disk image  with the lowest number of different blocks being the disk image  with the highest degree of commonality. In yet another embodiment, for each listed disk image , the disk image manager  computes the ratio of the number of blocks in common to the number of blocks in the disk image  to be copied (i.e., a commonality ratio); the listed disk image  with the highest commonality ratio being considered the disk image  with the highest degree of commonality.","In other arrangements, the disk image manager  attempts to consider only a subset of the disk images  on the list (C) of common disk images  when the number disk images on the list (C) exceeds a predefined threshold (e.g., 25 disk images, 50 disk images, etc.). Such arrangements are capable of imposing limitations on the amount of processing performed by the source computing device  (e.g., see the disk image manager (A) of computing device (A) in ). In one embodiment, based on parent\/child relationships (see the tree arrangement () in ), the disk image manager  of the source computing device  evaluates only the listed disk images  which are within a first predefined tree-walking distance from the disk image  to be copied (e.g., within 5 hops\/paths). If the disk image manager  identifies at least one listed disk image  having a degree of commonality which exceeds the predefined threshold, the disk image manager  selects the listed disk image  having the highest degree of commonality (e.g., compares the number of different blocks between each listed disk image  and the disk image to be copied, compares commonality ratios, etc.). However, if there are no listed disk images  having a degree of commonality which exceeds the predefined threshold, the disk image manager  expands the evaluation to a second predefined tree-walking distance from the disk image  to be copied (e.g., between 5 and 10 hops\/paths, etc.), and so on. Such operation may alleviate the need for the disk image manager  to compute block comparisons for each disk image  on the list (C). Moreover, during such tree-walking, certain customizations can be implemented such as selecting, as the disk image  with the highest degree of commonality, a child disk image  over a sibling disk image  thus providing a means of imposing particular optimizations or preferences in the selection process. Further details will now be provided with reference to .",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 6","FIGS. 1 and 2","FIG. 1"],"b":["200","64","20","64","22","64","22","64","22","30"]},"Step  involves deploying a copy of a particular disk image  from source storage (e.g., the storage repository (A) to target storage (e.g., the storage repository (B)). In particular, the computing devices  of the electronic environment  are constructed and arranged to uniquely identify disk images  using disk image identifiers .","Step  involves performing a comparison operation between a first disk image list (e.g., see list (A) in ) which lists disk images  currently residing on the source storage and a second disk image list (e.g., see list (B) in ) which lists disk images  currently residing on the target storage to generate a common disk image list (e.g., see list (C) in ) which lists a set of common disk images  currently residing on both the source storage and the target storage.","Step  involves transferring, from the source storage to the target storage, a set of data portions  representing differences between the particular disk image  and a common disk image  listed on the common disk image list. The common disk image  is the disk image  on the source storage with the highest level of commonality with the particular disk image to be deployed to the target storage, and that common disk image  is identified to the target storage by providing the disk image identifier of the common disk image .","When this transfer takes place, the set of data portions , the disk image identifier  which identifies the common disk image , and the disk image identifier  which identifies the particular disk image  are conveyed to the target storage. The set of data portions  transferred from the source storage to the target storage in combination with the common disk image  (identified to the target storage by disk image identifier ) form a deployed copy of the particular disk image  on the target storage.","In some arrangements, step  is contingent on a successful evaluation of the level of commonality against a predefined threshold . Only when the level of commonality is greater than (or equal to) the predefined threshold  does the control circuitry  fully perform step . Otherwise, the complete disk image is copied between the computing devices .","Once the copy of the particular disk image  is formed on the target storage, the target storage associates the disk image identifier for the particular disk image  with the particular disk image . At this point, the copy of the particular disk image  is properly deployed on the target storage and is identifiable on the target storage via disk image identifier .","As explained above, an improved technique involves deploying a copy of a particular disk image  from one computing device  to another by identifying disk images  which are common among the two devices , and then transferring only differences  between the particular disk image  and a common disk image  to the other computing device . The common disk image  and the differences  form an entire copy of the particular disk image . To identify disk images  which are common among the two devices , the disk images  are tracked using disk image identifiers  which uniquely identify disk images . This technique of identifying disk images  which are in common, and moving only the differences  saves time and resources.","While various embodiments of the invention have been particularly shown and described, it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the invention as defined by the appended claims.","For example, the computing devices  where described above in general terms. In some arrangements, the computing devices  are virtualization platforms that are able to use the virtual disk images  to instantiate one or more virtual machines. However, in other arrangements, the computing devices are not virtualization platforms but are augmented storage servers which robustly and reliably store the disk images  (e.g., snapshots disks, golden images, etc.) for use by virtualization platforms.","Additionally, it should be understood that distribution of the disk image identifiers  was described above as being carried out in an automated manner by the disk image managers  by way of example only. In some arrangements, this distribution technique is very appropriate. For example, a user may wish to deploy copies of a golden image to several virtualization platforms or VM farms.","However, in some situations, the user may know that a particular disk image  on multiple computing devices  is the same disk image , but this fact may not be evident to the computing devices . Accordingly, in some arrangements, the user is able to manually set (or overwrite) the disk image identifiers  in order to enable multiple computing devices  to reference the same disk image  using one disk image identifier .","Furthermore, it should be understood that the command to deploy a copy of a particular disk image  from one computing device  to another computing device  may be implemented as a standard procedure call through an application programming interface (API). In such arrangements, a user or application (e.g., a control program) is capable of issuing a call for a single copy deployment, or multiple calls (or a single call to a multiple-copy routine) for wider deployment.","Moreover, it should be understood that a user or application can carry out batch copy deployment in which multiple related disk images are copied from one computing device  to another. In some arrangements, in response to a single call (e.g., \u201ccopy_multiple_images\u201d), the control circuitry  orders the copy operations so that the first disk image  copied has the highest level of commonality with other images that are part of the batch copy. Then, other disk images  are copied as differences against the first disk image  thus optimizing the total transfer of differences between the computing devices ."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing and other objects, features and advantages will be apparent from the following description of particular embodiments of the invention, as illustrated in the accompanying drawings in which like reference characters refer to the same parts throughout the different views. The drawings are not necessarily to scale, emphasis instead being placed upon illustrating the principles of various embodiments of the invention.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 6","FIG. 1"]}]},"DETDESC":[{},{}]}
