---
title: Application quality of service envelope
abstract: A managed node executes one or more applications. The applications utilize the resources of the node. A quality-of-service (QoS) agent on the managed node enforces a QoS policy for the node. The QoS agent characterizes an application's usage of the node's resources and predicts its future usage. The QoS agent analyzes the predicted resource usage in view of the QoS policy and generates a QoS envelope for the application. The QoS envelope specifies a ceiling on the level of resources that can be used by the application. The QoS agent queues and meters usage above the ceiling specified by the QoS envelope. A security module determines variations between predicted and actual resource usage and generates security events if warranted.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08417814&OS=08417814&RS=08417814
owner: Symantec Corporation
number: 08417814
owner_city: Mountain View
owner_country: US
publication_date: 20040922
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Field of the Invention","This invention pertains in general to managing resources in a computer system and in particular to managing resources to conform with a Quality-of-Service (QoS) policy and provide computer security.","2. Description of the Related Art","A large data center can have hundreds or thousands of separate computers operating together to fulfill the processing needs of the data center. For example, the data center of an enterprise such as a large e-commerce site on the Internet typically has thousands of servers divided into different tiers. Servers in a web services tier operate the web servers that provide the user interface to customers of the site. Servers in an application tier operate the business logic that allows customers to shop on the site. Servers in a data tier provide database processing.","Managing and monitoring the operations of the computers in the data center is a significant problem. In typical configurations, each computer operates an operating system, each operating system executes one or more applications, and each application executes one or more threads. The resources of the computer must be allocated to the applications and threads in an efficient manner. Even small inefficiencies in resource allocation can have significant effects when multiplied by the large number of computers in the data center.","Moreover, computers and networks like those in a data center are susceptible to a variety of malicious software including worms and viruses. For example, a malicious end-user or automated software can exploit a flaw in an application run by a computer and introduce malicious software into the data center, where it can spread rapidly. The malicious software can destroy data, change configuration settings, spy on activities and capture data, and\/or perform other malicious actions. There are security tools that seek to prevent malicious software from compromising computers. However, such tools can generate false positive results and block applications from performing legitimate functions, thereby resulting in a greater administrative overhead for the data center.","Therefore, there is a need for a way to effectively and efficiently allocate the resources of a computer system. There is also a need for a way to protect computers and networks from malicious software without increasing the administrative overhead resulting from false positives and the like.","The above needs are met by using a quality-of-service (QoS) envelope. A managed node executes one or more applications. The applications utilize the resources of the node. A QoS agent on the managed node enforces a QoS policy for the node. The QoS agent characterizes an application's usage of the node's resources and predicts its future usage. The QoS agent analyzes the predicted resource usage in view of the QoS policy and generates a QoS envelope for the application. The QoS envelope specifies a ceiling on the level of resources that can be used by the application. The QoS agent queues and meters usage above the ceiling specified by the QoS envelope. A security module determines variations between predicted and actual resource usage and generates security events if warranted.","The figures depict an embodiment of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["100","110","112","114","100","100"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["112","112"]},"In one embodiment, the management node  is a computer for managing the operation of the managed nodes . To this end, the management node  executes one or more special purpose applications for controlling the behaviors of the managed nodes . In one embodiment, an administrator uses the management node  to allocate resources of the managed nodes  in accordance with a business policy of the enterprise. For example, the administrator can use the management node  to allocate the resources of the managed nodes  to implement a web store for an e-commerce retailer. The administrator also uses the management node  to view statistics and any security alerts or other messages pertaining to the managed nodes .","In one embodiment, the managed nodes  are computers for performing data processing under the management of the management node . In one embodiment, the managed nodes  are modular computers called \u201cblade servers\u201d that are designed to allow multiple computers to fit in a rack or other confined space.  illustrates six managed nodes, labeled A-F, but embodiments of the environment  can have hundreds or thousands of managed nodes. In another embodiment, some or all of the managed nodes are standard personal computers. In one embodiment, the management node  is a managed node  executing special purpose program modules for controlling the other managed nodes. In another embodiment, the management node  is distinct from the managed nodes .","The network  enables communications between the management node  and the managed nodes . In one embodiment, the network  uses standard communications technologies and\/or protocols. Thus, the network  can include links using technologies such as Ethernet, 802.11, integrated services digital network (ISDN), digital subscriber line (DSL), asynchronous transfer mode (ATM), InfiniBand, PCI Express Advanced Switching, etc. Similarly, the networking protocols used on the network  can include multiprotocol label switching (MPLS), the transmission control protocol\/Internet protocol (TCP\/IP), the User Datagram Protocol (UDP), the hypertext transport protocol (HTTP), the simple mail transfer protocol (SMTP), the file transfer protocol (FTP), etc. The data exchanged over the network  can be represented using technologies and\/or formats including the hypertext markup language (HTML), the extensible markup language (XML), etc. In addition, all or some of links can be encrypted using conventional encryption technologies such as the secure sockets layer (SSL), Secure HTTP and\/or virtual private networks (VPNs) or Internet Protocol security (IPsec). In another embodiment, the entities can use custom and\/or dedicated data communications technologies instead of, or in addition to, the ones described above. Depending upon the embodiment, the network  can also include links to other networks such as the Internet.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2","b":["200","110","112","202","204","204","206","208","210","212","214","216","204","218","212"]},"The storage device  is any device capable of holding data, like a hard drive, compact disk read-only memory (CD-ROM), DVD, or a solid-state memory device. The storage device  may comprise a computer-readable storage medium. The memory  holds instructions and data used by the processor . The pointing device  may be a mouse, track ball, or other type of pointing device, and is used in combination with the keyboard  to input data into the computer system . The graphics adapter  displays images and other information on the display . The network adapter  couples the computer system  to a local or wide area network.","As is known in the art, a computer  can have different and\/or other components than those shown in . In addition, the computer  can lack certain illustrated components. In one embodiment, a computer  acting as a managed node  lacks a keyboard , pointing device , graphics adapter , and\/or display . Moreover, the storage device  can be local and\/or remote from the computer  (such as embodied within a storage area network (SAN)).","As is known in the art, the computer  is adapted to execute computer program modules for providing functionality described herein. As used herein, the term \u201cmodule\u201d refers to computer program logic utilized to provide the specified functionality. Thus, a module can be implemented in hardware, firmware, and\/or software. In one embodiment, program modules are stored on the storage device , loaded into the memory , and executed by the processor .","Embodiments of the entities described herein can include other and\/or different modules than the ones described here. In addition, the functionality attributed to the modules can be performed by other or different modules in other embodiments. Moreover, this description occasionally omits the term \u201cmodule\u201d for purposes of clarity and convenience.","The computer  has various resources that are utilized by the modules. In one embodiment, the available resources are divided into three major classes: network resources, platform resources, and storage resources. The network resources generally correspond to the capabilities and\/or usages of the network adapter  and associated control modules. The network resources include connections to other computers on the network , network bandwidth, etc. In one embodiment, the platform resources generally correspond to the capabilities and\/or usages of the processor  and\/or memory . The platform resources include the processing capabilities of the processor, the available memory, etc. In one embodiment, the storage resources generally correspond to the capabilities and\/or usages of the storage device . The storage resources include the connections to the storage device , the bandwidth to the storage device, etc.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 3","FIG. 2"],"b":["110","112","114","310","310","200","110","310"]},"The management node  includes an operating system (OS) module . The OS  controls the operation of the applications  and other modules that execute on the management node . Thus, the OS  serves as an abstraction layer between the applications  and the system layer . In one embodiment, the OS module  executes an industry standard OS, such as WINDOWS SERVER or WINDOWS XP from Microsoft Corp. of Redmond, Wash., SOLARIS from SUN MICROSYSTEMS of Santa Clara, Calif., and\/or LINUX.","In one embodiment, the management node  includes one or more management application modules . In one embodiment, the management applications  are applications for managing a data center comprised of multiple managed nodes . An administrator or other end-user can use the management applications  to view information about, and control the operation of, the managed nodes . In one embodiment, the management applications  can include OPENVIEW from Hewlett-Packard of Palo Alto, Calif., and\/or TIVOLI from IBM Corp. of Armonk, N.Y.","In one embodiment, a QoS policy repository module  stores one or more QoS policies. In general, a QoS policy furthers a business goal by providing rules expressing relative priorities of applications executed by the managed nodes . A QoS policy can also specify specific resource constraints for applications and\/or managed nodes . The terms specified by a QoS policy can vary based upon the current business environment, time of day or date, amount of resources available, etc.","In one embodiment, a QoS manager module  accesses the QoS policies in the QoS policy repository  and applies certain policies to certain ones of the managed nodes . In one embodiment, the QoS manager module  provides a user interface (UI) with which an administrator or other end-user can interact in order to create, view, and modify the QoS policies in the repository . In addition, the administrator can select a QoS policy and apply it to one or more of the managed nodes . In one embodiment, the QoS manager  provides an application programming interface (API) through which the management applications  can access the functionality of the QoS manager.","Turning now to the managed node , the managed node also has a system layer  that generally corresponds to the computer  illustrated in . In addition, the managed node  also has an operating system (OS) module  that controls the operation of the applications  and other modules that execute on the managed node.","In one embodiment, the managed node  has one or more application modules  for performing work. The particular the applications  on the managed node  depend upon the task for which the node is being used. For example, if the managed node  is part of a web facing tier of a data center, the applications  can include a web server. An application  that is executing on the managed node can have one or more processes. Similarly, a process can include one or more threads of execution.","In one embodiment, the managed node  includes a QoS agent module  that is in communication with the QoS manager  in the management node . The QoS agent  enforces QoS policies received from the QoS manager . The QoS agent  also gathers information about the implementation of the QoS policy on the managed node  and provides the information to the QoS manager .","In one embodiment, a QoS driver module  in the managed node  serves as an abstraction layer between the QoS agent  and the specific OS , system layer , and\/or applications  presents in the specific managed node . In one embodiment, the QoS driver  presents a platform-independent API to the QoS agent , and converts API calls by the QoS agent into calls specific to the particular embodiment of the managed node . The QoS driver  thus allows the QoS agent  to interact with the managed node  in a platform-independent manner, and allows similar versions of the QoS agent  to be utilized across heterogeneous managed nodes .",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4","b":["326","112","410","324","410","410","410","410"]},"In one embodiment, there is instrumentation for the network, platform and storage resources. The network instrumentation  observes and\/or controls the network resources. In one embodiment, the network instrumentation  includes connectivity instrumentation for observing and\/or controlling aspects of the network resource related to network connectivity. In one embodiment, the connectivity instrumentation can observe the number of connections established by a process executing on the managed node  and\/or can observe and control the rate at which connections are established by a process.","In one embodiment, the network instrumentation  includes communications instrumentation for observing and\/or controlling aspects of the network resource related to network communications. In one embodiment, the communications instrumentation can observe and control the number of bytes sent by a process over a network connection during a given time interval (e.g., bytes\/second). Similarly, in one embodiment the communications instrumentation can observe and control the number of packets sent by a process over a network connection during a given time period (e.g., packets\/second). In one embodiment, the communications instrumentation can observe and control the number of network connections made by a process during a given time period.","The platform instrumentation  observes and\/or controls the platform (i.e., system) resources. In one embodiment, the platform instrumentation  includes processing instrumentation for observing and\/or controlling aspects of the platform related to the processor . In one embodiment, the processing instrumentation can observe the associations between applications and processes (e.g., determine which processes are associated with which applications), observe the number of threads associated with each process, observe and control process and\/or thread scheduling parameters, and\/or observe processor utilization by processes and\/or thread.","In one embodiment, the platform instrumentation  includes memory instrumentation for observing and\/or controlling aspects of platform resources related to memory  usage. In one embodiment, the memory instrumentation can observe the working set size (i.e., memory utilized) for each process and\/or observe paging activity by each process and\/or thread.","In one embodiment, the storage instrumentation  observes and\/or controls the storage resources. In one embodiment, the storage instrumentation  can observe storage connections by process, can observe and control the amount of data accessed to\/from storage by a process in a given time interval (e.g. bytes\/second), and\/or can observe and control the number of input\/output (I\/O) operations performed by a process in a given time interval (e.g., I\/O operations\/second). In other embodiments, the network , platform , and\/or storage  instrumentation can measure and\/or control different and\/or other aspects of the resources than the ones described herein.","In one embodiment, a policy module  stores QoS policies and\/or QoS directives. In one embodiment, the QoS policies are obtained from the QoS policy repository  in the management node . The QoS manager  in the management node  may reference the QoS policy repository  and pass selected QoS policies (or the QoS manager's interpretation of QoS policies, i.e., QoS directives) to the policy module . In another embodiment, the QoS policies are generated on an ad hoc basis by the policy module  or another module within the management node  and\/or the managed node . As described above, in one embodiment a QoS policy provides rules expressing relative priorities of applications executed on the managed node .","In one embodiment, a characterization module  observes and characterizes application resource usage. The characterization module  utilizes the instrumentation available in the instrumentation module  to observe the managed node  resources that are utilized by the applications  and\/or the threads within the applications. In one embodiment, the characterization module  characterizes application resource usage for specified time intervals. For example, the characterization module  can determine that a particular application  established 50 network connections over a 30 second time period.","In one embodiment, a prediction module  generates predictions of application resource usage for future time intervals. In one embodiment, the prediction module  generates predictions for the immediate future, although other embodiments make predictions for different times. In one embodiment, the prediction module  receives the application resource usage characterizations from the characterization module  and utilizes the characterizations to predict resource usage for one or more future time intervals. In one embodiment, the prediction module  utilizes time series prediction methods and\/or machine learning techniques to predict resource usage for one or more subsequent time periods. Techniques that are used by the prediction module  can include neural networks, probabilistic networks, auto regression techniques, stochastic methods, fuzzy logic and neurofuzzy techniques, exponential averaging, and\/or other machine learning and\/or time series prediction methods.","A control module  controls the operation of the managed node . In one embodiment, the control module  receives the QoS policy from the policy module  and the predictions from the prediction module  and utilizes these data to adaptively generate QoS envelopes for the one or more applications  executing on the managed node . In one embodiment, the control module  considers the set of resource usage predictions and the QoS policy-determined relative application priorities and generates a QoS envelope for each application for a given time period. The control module  can utilize techniques including resource allocation heuristics, fuzzy logic control methods, optimal resource allocation algorithms, and\/or any other suitable technique to generate the QoS envelopes. The QoS envelope for an application  is thus adaptively generated for each time interval in one embodiment. In one embodiment, the characterization , prediction , and\/or control  modules observe and control applications  at the level of individual processes and\/or threads. In this latter embodiment, the control module  can likewise generate adaptive QoS envelopes for applications, processes, and\/or threads.","A QoS envelope regulates the managed node resources that an application  utilizes. In one embodiment, a QoS envelope specifies the maximum amounts of one or more specific types of resources that an application  can utilize within a given time interval. The maximum amount is specified as a soft ceiling, meaning that the application  is allowed some leeway in surpassing the maximum. If an application's usage of the resource exceeds the maximum specified by the envelope, in one embodiment the control module  utilizes the active instrumentation to meter the application's usage of the resource and thereby gracefully degrade the service level provided to the application . In one embodiment, the control module  queues the application's excessive resource utilization requests and meters the resource according to the QoS policy.","In one embodiment, the control module  works in tandem with the other modules of the QoS agent  to function as a closed loop control for the managed node . The control module  examines the resources consumed by the applications  during prior and\/or current time intervals and adjusts the QoS envelope for a subsequent interval in order to best allocate the resources of the managed node  given the applicable QoS policy. Thus, application resource requests that exceed the QoS envelope can result in increasing future resource usage predictions for that application . The increased predictions may lead to an expansion of the QoS envelope for the application and the given resource. Similarly, application resource requests that are below the predicted value for the application  can lead to a decrease in future resource usage predictions and a gradual decrease of the application's QoS envelope for the given resource.","In one embodiment, a security module  observes resource usage by the applications  in order to monitor the managed node  for security-related events and\/or other malfunctions. In general, a major change in resource usage patterns is a sign that something is wrong with the managed node . For example, a typical software worm executing on the managed node  will attempt to spread to other computers by opening many network connections. Likewise, an abnormal increase in usage of network and\/or other resources can indicate that the managed node  is encountering a denial of service attack. Similarly, if a parasitic virus infects an application module , the infection might cause an abnormal increase in the consumption of processor usage. Even in the absence of malicious software, abnormally high or low consumption of resources can indicate that there is a problem with the managed node , such as a software defect.","In one embodiment, the security module  utilizes the instruments in the instrumentation module  to directly observe resource consumption. In another embodiment, the security module  receives the characterizations from the characterization module  and\/or the predictions from the prediction module . In this latter embodiment, the security module  detects deviations between predicted and actual resource consumption. If the deviations exceed a specified threshold, the security module  generates a security event.","In one embodiment, the security module  sends a message to the QoS manager module  to indicate the number and\/or type of security events detected at the managed node . Depending upon the embodiment, the QoS manager module  can log the security alerts, raise an alert to an administrator, and\/or perform some other action. In addition, the QoS manager module  can correlate security messages from multiple managed nodes  in order to determine the magnitude of any security events and appropriate responses.","In one embodiment, the security module , the QoS manager module , and\/or another module takes corrective action in response to the security event. Corrective actions can include terminating the associated application , placing a QoS envelope tailored for security around the application, shutting down the managed node , etc.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 5","b":["326","110","112"]},"An administrator, other end-user, and\/or automated process establishes  a QoS policy for the managed node . In one embodiment, the administrator uses the management node  to create a QoS policy and store it in the QoS policy repository . The management node  transfers the QoS policy from the repository  to the QoS agent  in the managed node . In one embodiment, the QoS policy expresses relative priorities of applications executed by the managed node .","At some point not necessarily contemporaneous with the establishment  of the security policy, the managed node  executes one or more applications . The QoS agent  characterizes resource usage by the applications . In one embodiment, the QoS agent  characterizes the usage with respect to network, platform, and storage resources.","The QoS agent  uses the characterizations to predict  future resource usage by the applications . The QoS agent  analyzes the predictions in view of the established QoS policy and generates  QoS envelopes. In one embodiment, the QoS agent  generates  an envelope for each application . A QoS envelope specifies a ceiling on the managed node resources that the associated application  can utilize. In one embodiment, the QoS agent  generates QoS envelopes that attempt to maximize satisfaction of both the established QoS policy  and the resource utilization requests by the applications .","The applications  execute within the respective QoS envelopes. If an application  makes a resource request that exceeds the ceiling specified by its QoS envelope, in one embodiment the QoS agent  queues and meters  the resource request. Thus, the application  is allowed to exceed its QoS envelope if the resources are available, subject to excursionary limits that may be specified by the relevant policy.","In one embodiment, the QoS agent  determines  whether to generate security events based on application resource utilizations and\/or requests. In one embodiment, application resource usage that varies widely from the predicted usage is a sign that something is wrong with the application  and\/or managed node . If the application resource utilization and\/or requests warrant, the QoS agent  generates  an alert. In one embodiment, the QoS agent  sends the alert to the management node  where it can be logged, reviewed by an administrator, etc.","In one embodiment, the process of characterizing  and predicting  resource usage, as well has generating QoS envelopes  and metering resources  repeats indefinitely. The QoS agent  adaptively changes the QoS envelopes in view of past behavior and\/or future needs. The QoS agent  thus maximizes resource usage in view of the established QoS policy and detects potential security events.","The above description is included to illustrate the operation of the preferred embodiments and is not meant to limit the scope of the invention. The scope of the invention is to be limited only by the following claims. From the above discussion, many variations will be apparent to one skilled in the relevant art that would yet be encompassed by the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
