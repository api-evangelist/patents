---
title: System and method for metadirectory differential updates among constituent heterogeneous data sources
abstract: A system and method which propagates change operations to data items within a metadirectory on a differential basis in order to minimize or eliminate redundant updates to attributes within data items that have not changed, as well as conserve computing resources and transmission bandwidth consumed by update activities in large organizations of data items. A best match entry in the metadirectory is selected using a weighted score process, a determination is made as to exactly which attributes are changed by the update operation, and a differential update is propagated throughout the metadirectory via direct joiner access to the data items, or through remote access such as through LDAP.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07107297&OS=07107297&RS=07107297
owner: International Business Machines Corporation
number: 07107297
owner_city: Armonk
owner_country: US
publication_date: 20020110
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","This invention relates to technologies and methods for synchronizing two or more directories in a computer data storage system, and especially enterprise directory management tools for managing information in numerous databases and directories in an unified manner.","2. Description of the Related Art","Computing enterprises, whether large or small, comprise numerous directories, network operating systems and databases in which corporate data, client information, and employee data is stored.","In some scenarios, the data to be managed is contained in a homogeneous environment, e.g. the forms and formats of the data are similar or compatible. In such a case, a periodic \u201csynchronization\u201d process is executed which compares the contents of the distributed data objects, and selectively copies or updates all data sources to contain appropriate data.","For example, an email server's message storage format is usually the same as the storage formats on the email client machines. So, when a client machine logs into the email server, the server can quickly determine if there are any \u201cnew\u201d messages (e.g. messages in the server's storage which have not been copied to the client's storage), and transmit those messages to the client machine.","Larger scale homogeneous database synchronization is enabled by many distributed database products, such as IBM's Lotus Notes [TM] product.","However, many data sources which contain related or partially related data objects are not homogenous with each other, but rather are heterogeneous in nature. For example, information relating to a corporate employee \u201cJohn Smith\u201d may be contained in many different data stores within a corporate Intranet. His employee records (hire date, pay scale, home address, dependent names, etc.) may be contained in an Oracle database on an Human Resources server, while his current assignment information may be stored in a departmental or divisional server (department, manager's name, email address, etc.) in a Lotus Notes system.","One available technology for managing data objects in heterogeneous data sources is the Lightweight Directory Access Protocol (\u201cLDAP\u201d), and open industry standard for remotely querying and modifying data objects within an LDAP-enabled directory. This protocol reduces query and change operations to a uniform LDAP operation which can be interpreted by the LDAP-enabled servers in order to make changes to data objects in directories.","LDAP enables a user to locate organizations, individuals, and other resources such as files and devices in a network, whether on the public Internet or on a corporate intranet. LDAP is a minimized version of Directory Access Protocol (DAP), which is part of the X.500 standard for directory services in a network.","Some directories, such as LDAP directories, have support for a change log which records the changes that have been made to the directory. For directories which do not support change logs, users or administrators sometimes develop their own mechanisms for detecting changes in a directory. These techniques usually include polling the directory(ies), identifying any changes which have been made since the last poll operation, and upon detection of a change, report that an entry has been modified, usually listing out all the attributes for the changed entry.","In the following example, a phone number in an entry for a person \u201cJohn Smith\u201d in a Human Resources database at XYZ corporation is to be updated to equal \u201c838-1180\u201d, and his department is to be changed to department \u201c6\u201d. The original entry with five fields may appear as shown in Table 1.",{"@attributes":{"id":"p-0014","num":"0013"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Original Entry"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"full_name=\u201cJohn Smith\u201d"]},{"entry":[{},"PhoneNumber=\u201c838-1178\u201d"]},{"entry":[{},"UserID=\u201cjsmith\u201d"]},{"entry":[{},"Division=92"]},{"entry":[{},"Department=5"]},{"entry":[{},"email=\u201cjsmith@xyzcorp.com\u201d"]},{"entry":[{},"where the entry is of the format:"]},{"entry":[{},"full_name,PhoneNumber,UserID,Division,Department,email"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A user-written script may poll the directory containing the changed entry, which generates a record in the change log. Records in the change log reflect the change to the entry as the series of LDAP modify operations shown in Table 2.",{"@attributes":{"id":"p-0016","num":"0015"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example LDAP Change Log"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DN:cn=John Smith, ou=Austin,o=xyz"]},{"entry":[{},"changetype:modify"]},{"entry":[{},"replace:PhoneNumber"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"PhoneNumber:838-1180"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"-"]},{"entry":[{},"changetype:modify"]},{"entry":[{},"replace:UserId"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"UserID:jsmith"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"-"]},{"entry":[{},"changetype:modify"]},{"entry":[{},"replace:Division"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Division:92"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"-"]},{"entry":[{},"changetype:modify"]},{"entry":[{},"replace:Department"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Department:6"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"-"]},{"entry":[{},"changetype:modify"]},{"entry":[{},"replace:email"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"email:jsmith@xyzcorp.com"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The typical user-developed scripts do not attempt to identify the actual fields of data which were updated or modified. The resulting update to the other directories in the metadirectory are simply made in their entirety to every data object, including fields which were not actually modified.","If the polling operation is relatively fast compared to a series of single-field modification operations, the user-developed solution will detect each individual change, and update each entry (all fields at once) multiple times throughout the metadirectory.","This often results in many redundant entry updates throughout the metadirectory just to achieve small, incremental changes in the actual data. When realistic organizations of data sources are considered which may comprise hundreds of data sources each with several thousand entries, the system performance impact of these redundant updates is readily apparent.","Besides being an inefficient use of computing resources, this can cause considerable problems in overall system operation, as these updates are propagated over computer networks and consequently consume communications bandwidth and intermediate storage memory unnecessarily.","Another drawback of the LDAP approach is that legacy directories may be in existence indefinitely, and not all legacy directories may be upgraded to LDAP compatibility. Further, LDAP actually only provides a common access protocol (e.g. remote method of accessing the directory), but does not provide in itself actual heterogeneous data source management functions.","While some LDAP replication standards are in works but are as yet unfinished, many existing proprietary approaches are different and incompatible. In any case, replication and synchronization, whether proprietary or standards-based, are insufficient for meeting the needs of enterprise-wide heterogeneous data source directory management.","The term \u201cmetadirectory\u201d refers to a class of enterprise directory management tools which provide means to manage and synchronize two or more directories containing heterogeneous data sources. In order to manage disparate heterogeneous data sources, a typical metadirectory product may require the individual data sources (e.g. directories, files, databases, etc.) to export their data to a common format, and then exchange that data with the metadirectory using file transfer, electronic mail, or other data transfer protocol. After the metadirectory receives the files from the data sources, an administrator can add or modify the data from the metadirectory. One such product is the VIA product, originally provided by the Zoomit Corporation, which was acquired by Microsoft Corporation.","Metadirectories are extremely useful for system administration and security management, as they can be used as an integration point to simplify existing solutions and to create new web-based applications. For example, every application has its own proprietary method or scheme of storing information associated with that application, whether it be user information, security information, configuration settings, etc.","Through use of metadirectories, these various data stores may be stored once and integrated so that they may be managed and administered as a single entity (according to the rules and constraints of the metadirectory), thereby reducing the total cost of maintaining this information while increase the security and reliability with which it is handled.","Because current metadirectory products, however, may require the various data sources to be able to export their data into these \u201ccommon\u201d formats, data sources which do not support such export operations may be excluded from inclusion in a metadirectory.","Another problem in managing entries from multiple heterogeneous data sources according to the present processes is that the information may not have been entered consistently in these data sources, e.g. there may be logical synonyms within the entries that are not exact character-string matches. For example, in three data sources managed within a single metadirectory, each data source containing information for \u201cRobert Smith\u201d, the name \u201cRobert Smith\u201d may have been entered as follows:\n\n","Typical metadirectory products provide very little in the way of automatically resolving or detecting these alias or related entries, and often require the administrator to manually intervene to manage these data objects. Traditional approaches to propagating changes to such records containing synonyms would be to propagate a change for each record variant. In this example, to effectively update the mailing address for \u201cRobert Smith\u201d throughout the metadirectory, an administrator would first have to be aware of the three available synonyms, and then manually execute three separate changes which would be propagated throughout the metadirectory.","Therefore, there is a need in the art for a system and method which minimizes the system performance impact of propagating updates to entries in metadirectories. Further, there is a need in the art for this system to cooperate with and extend the capabilities of existing metadirectory tools and technologies, providing user or administrator configurability and control.","The present invention provides as system and method which propagates change operations to data items within a metadirectory on a differential basis in order to minimize or eliminate redundant updates to attributes within data items that have not changed, as well as conserve computing resources and transmission bandwidth consumed by update activities in large organizations of data items. A best match entry in the metadirectory is selected using a weighted score process, a determination is made as to exactly which attributes are changed by the update operation, and a differential update is propagated throughout the metadirectory via direct joiner access to the data items, or through remote access such as through LDAP. In the preferred embodiment, the invention is realized as a plug-in for a metadirectory joiner product, but it may alternately be realized as inline software changes or as a stand alone software product.","The present invention is preferably realized as an extension to the Tivoli SecureWay [TM] enterprise computing product. However, other suitable methods of realizing the present invention will be readily recognizable by those skilled in the art, such as inline code changes or other techniques typically used to add functionality to other metadirectory management software and products.","One particular advantage of the present invention allows administrators to specify rules for criteria for matching objects from one directory to another, rules for attribute and object ownership, and rules for filtering attributes. For example, a rule may be established for a component in a metadirectory which contains employee salary information to prohibit that information from being replicated or copied into other directories, files or databases.","The metadirectory of the preferred embodiment has the following capabilities which meet the industries expectations of a metadirectory:\n\n","Thus, the metadirectory of the preferred embodiment is an enterprise management tool which integrates multiple different name spaces into a logical single name space, in order to provide a common information model (e.g. schema), consolidated client access to information from all connect directories, and a means for managing the multiple different directories in a unified manner. The metadirectory, however, does not imply physical consolidation of information into a single, master \u201cmega-directory\u201d, nor is it just a directory synchronization and replication tool.","Further, the metadirectory of the preferred embodiment interconnects through importing, changing and exporting data to and from heterogeneous data sources including, but not limited to, databases (DB2, Oracle, etc.), Lotus Notes, Novell Directory Services, Netscape, OS\/2 directories, Windows NT data sources, etc.","Turning to , the metadirectory architecture () according to the preferred embodiment is shown. The Joiner () is a central hub where information is integrated and synchronized, and it is extensible through the use of Java beans ().","The Joiner () communicates with connected data sources (\u201cDS\u201d), such as databases (, ), either directly or through an Agent (, , ). It merges entries of the same object type from different data sources together, such as text files (), records in a database (, ), networked data storage items (), or other remotely accessible data stores, such as LDAP directories (, ). The Joiner () keeps a copy of the joined data from each data source in a relational database, preferably in a DB2 database. Each object type for each data store is contained in a local table (\u201cLT\u201d) ().","Each object joined entry for a data store is reflected as a row entry in the corresponding LT. A column is added which contains a unique key or \u201cMatch key\u201d, which is used to identify the same instance of the object for all the data stores.","Metadirectory agents () communicate to the Joiner () any changes which are made to a joined object in a directory or data source within the metadirectory. These changes are stored in a change log that is transmitted to the Joiner. The Joiner then evaluates whether these changes are valid, and then propagates them to the other directories within the metadirectory.","As such, the advantages of the Joiner of the preferred embodiment include:\n\n",{"@attributes":{"id":"p-0051","num":"0060"},"figref":"FIG. 2","b":["22","23","24"]},"The basic join operation performed by the metadirectory () merges selected data items from each of these data sources to create an entry () in a local table for Mr. Kent. Objects from data sources which are not merged or joined are filtered. This prevents cluttering the metadirectory with data items which are not commonly needed from the unified view of the metadirectory. For example, the surname, first name, title, work telephone number and department from the HR database may be exported to the metadirectory, filtering out the other attributes (employee number, date of hire, etc.). Additionally, the user objects from the Novellware bindary may be exported to the metadirectory, while filtering out the routing tables for Mr. Kent.","This flexible management control balances the issues of centralized control versus local autonomy depending upon a specific organizations information ownership and security requirements. It allows \u201ctops-down\u201d or \u201cbottoms-up\u201d to accommodate a range of \u201cgeopolitical\u201d scenarios. Further, the metadirectory (\u201cMD\u201d) may be a master, slave or peer to the managed data sources, which determines which entities may create, modify and delete data objects. Through flexible attribute content control (e.g. filtering configuration), bidirectional flow is defined separate from the object creation, modification and deletion definitions.","Continuing with this example for illustration, the human resources (\u201cHR\u201d) department may control the creation and deletion of certain attributes (fields) within the HR database, while allowing the metadirectory to create or delete other certain attributes within the HR database. As such, for example in , the HR staff may modify the name, title and department attributes () for each employee, while the metadirectory may make changes to the telephone and home address attributes (), which may be propagated () from other department data sources, perhaps the Notes Name and Address Book.","Turning to , a detailed view of the architecture of the Joiner () is provided. The Joiner () may receive data object changes from metadirectory agents () associated with Data Sources (\u201cDS\u201d) (), preferably in LDAP change operation format. The Joiner () may also send changes to the data sources (). Each MD agent () is provided with an appropriate interface, such as an LDAP interface ().","Within the Joiner (), a local table () associated with each data source () is maintained in a common format, preferably in DB2 format, but alternately in any other suitable format. These multiple local tables are then combined to created a joined table (\u201cJT\u201d) by a table joining function (), which provides a homogenous view () of the joined heterogeneous data. The JT data is preferably stored on an LDAP server such that users may view and access the JT data.","In order to properly identify data items which must be changed, responsive to changes received from a data source or an administrator, there are two problems to solve. Each data item consists of an attribute name and attribute value. For example, in an HR database, there may be an attribute (e.g. column) \u201csumame\u201d in each record. For the record (e.g. row) in the HR database for our example Clark Kent, the value of the attribute \u201csurname\u201d may be \u201cKent\u201d.","The first problem with accurate matching involves resolving aliases or synonyms of values of attribute values, within a single data source and between data sources. For example, \u201cBob\u201d, \u201cRobert\u201d, and \u201cRob\u201d may all be synonymous of each other when found in an attribute \u201cFirst_Name\u201d in the HR database. Standard matching rules, such as \u201cRob*\u201d where \u201c*\u201d is a \u201cwild card\u201d character or string, would not yield a match for \u201cBob\u201d. A modified matching rule such as \u201c*ob*\u201d would find the alias \u201cBob\u201d, but would also find \u201cJob\u201d in error.","The second problem with accurate matching involves resolving attribute names (not values) between different data sources. For example, an employees first name may be stored in an attribute \u201cFirst_Name\u201d in an HR database, and again in an attribute \u201cname1 \u201d in a name and address book. Of course, combinations of the two problems can occur, such as",{"@attributes":{"id":"p-0060","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"First Name = \u201cRobert\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"and"]},{"entry":[{},"name_1 = \u201cBob\u201d."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"As previously discussed, many metadirectory products do not attempt to resolve these synonyms and matching problems automatically, but provide an administrator tool to make the matches manually. However, the present invention provides for the addition of matching and joining logic, rules and relationships through the use of matching plug-ins (), preferably in the form of Java beans and extensible markup language (\u201cXML\u201d). Using these matching definitions and logic, the attribute naming conventions local to the individual data sources may be maintained, and master, slave and peer roles can be customized.","Turning to , more detail of the directory-agnostic metadirectory agent () is shown, which is configurable using any appropriate object-oriented programming technology, such as PERL, Java, Visual Basic, or Python. It is a bi-directional stack of services, with data source specific interfaces () to a common services () function. Changes which are being reported from the data source to the metadirectory (), are first converted from the data source specific protocol by a DS interface () to an internal common format, handled by the common services (), and received by a change manager ().","The change manager keeps track of changes and logs them to a change log. The filters and rules () allow for a definition of what is to be exported to the metadirectory and what is to be blocked from export. Then, the changes are mapped from the local set of attribute names to the metadirectory attribute names and put into LDAP protocol format, preferably using XML-based schema mapping.","According to the preferred embodiment, a last stage of processing for user customization () is provided, prior to submitting the change to a simple LDAP demon (\u201cSLAPD\u201d) () which communicates the change to the metadirectory, preferably using secure sockets protocol (\u201cSSL\u201d).","Changes being propagated from the metadirectory to the data source are received () by the metadirectory agent () from the SLAPD (). The filters and rules () are applied to insure that only items allowed to be changed by the metadirectory are implemented. Then, the change operation is mapped from the LDAP protocol to the common services format, after which it is handled by the common services () and passed to the data source specific interface (). The DS interface () then converts it from the common services format to a command (or set of commands) directly compatible with the specific data source.","The change manager is preferably application assisted to approximate real-time response to changes in the data source, and employs a plug-in architecture for associated triggers. The change logging can be periodic (or polled), or may be driven by events or changes. In it's simplest form, the change log is a text-based file.","In , a functional arrangement between the DB2 tables (), the matching plug-in and expert joiner (), table joining functions () and the homogenous joined table () is presented. Changes from the MD agents (from the data sources) is processed by the matching plug-in () to be stored in the tables () associated with the data source from which the change came. Then, the multiple tables () are joined by the joining logic () to create the JT homogenous view (), as previously described. Changes which originate from the administrator via the homogenous view (e.g. via a Java-based user interface tool) are implemented into the data source tables (), and then propagated out to the MD agents as described earlier.","Turning now the matching logic, as previously discussed, there are two problems to solve to effectively match and change entries in heterogeneous data sources\u2014namely attribute name synonyms and attribute value synonyms. According to the preferred embodiment, the following components and logical processes are realized as a Java bean extension(s) to a metadirectory Joiner function, such as the Joiner as previously described or an alternate Joiner function. It will be readily apparent to those skilled in the art that alternate means of realization are available, such as inline code changes or stand-alone application program implementation, without departing from the spirit and scope of the present invention.","Reviewing our example and illustration of the problems to be solved by a successful matching system, synonyms may be defined for the first name (e.g. given name), home telephone number, work telephone number and title for each data source in a match table.","The matcher plug-in of the preferred embodiment uses a single match table for all the joined object classes. However, also according to our preferred embodiment, a match table name is specified with every joined object class for potentially implementing a plurality of match tables. So, in the current embodiment, all the match table names for all the object classes are specified as the same name. An example match table is shown in Table 3 in which synonyms for a name and address book (NAB) and a human resources database are defined, both in the attribute names and in the attribute values.",{"@attributes":{"id":"p-0071","num":"0080"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Match Table"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Attribute Name",{}]},{"entry":["Rule","Synonyms","Attribute Value Synonyms"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["1","HR: First_name","Rob*, Bob;"]},{"entry":[{},"NAB: name1","Daniel, Danny, Dan;"]},{"entry":[{},{},"Liz, Elizabeth;"]},{"entry":["2","HR: Home_tel","512-111-4321, 111\u20134321;"]},{"entry":[{},"NAB: tele1","512-xxx-yyyy, xxx-yyyy;"]},{"entry":["3","HR: Work_tel","512-999-8888, X8888, ext.8888;"]},{"entry":[{},"NAB: tele2","512-xxx-yyyy, Xyyyy, ext.yyyy;"]},{"entry":["4","HR: Title","supervisor, \u201cgroup supervisor\u201d"]},{"entry":[{},"NAB: position"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0072","num":"0081"},"figref":"FIG. 8","b":["80","81","82"]},"This temporary modified entry is not written to the secondary storage (e.g. propagated to the other joined directories), however. The modified entry is compared () with the original (unmodified) entry to identify the differences between the original entry and the updated entry.","If there are no differences between the original entry and the updated entry (), no updates are propagated to other directories in the metadirectory, and the temporary local entry is deleted.","If there are differences (), then a differential update operation is created () containing only the changed fields in the entry and omitted the operations which result in no net change to a field. This differential update is then propagated () to the other directories in the metadirectory, and the original (unmodified) local copy of the entry is replaced by the temporary (updated) copy of the entry. As each of the content formats of the joined objects and directories of the metadirectory may be in different formats (e.g. NAB, DB2, etc.), in order to implement the differential change to the affected items, different update operations must be executed for different format objects and directories. The differential update is propagated in a common format, preferably LDAP, and converted to the necessary format of each joined object and directory by the metadirectory agents.","In the preferred embodiment, an entry class is implemented to store the distinguished name and all the attributes that make the entry. These attributes are sorted in alphabetical order by attribute name. As a result, the \u201capply\u201d operation which applies the updates sent in from a directory to the Joiner is extremely efficient.","The \u201cdifference\u201d operation, consequently, contains the minimal set of update or change operations that need to be applied to transform the original entry to the new entry, which increases time responsiveness and bandwidth consumption efficiency in the metadirectory.","Further according to the preferred embodiment, the application programming interface (\u201cAPI\u201d) is mapped to the LDAP API. So, a metadirectory agent that is responsible for propagating changes made in a directory to the Joiner records the changes as LDAP operations, such as LDAP \u201cadd\u201d, \u201cdelete\u201d or \u201cmodify\u201d.","The following example illustrates the operation of the invention, wherein a phone number in an entry for a person \u201cJohn Smith\u201d in a Human Resources database at XYZ corporation is to be updated to 838-1180, and his department is to be changed to department 6. The original entry with five fields may appear as shown previously in Table 1. Records in the change log created by the metadirectory agent that reflect the change to the entry as the LDAP modify operation were shown in Table 2.","When the change is sent to the Joiner by the metadirectory agent, the Joiner applies the changes to the original entry that it has stored locally to create a new (temporary) entry. After determining the difference between the old entry and the new entry, the Joiner creates a differential update LDAP operation as shown in Table 4.",{"@attributes":{"id":"p-0081","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Differential Update LDAP Operation"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DN:cn=John Smith, ou=Austin, o=xyz,"]},{"entry":[{},"changetype:modify"]},{"entry":[{},"replace:PhoneNumber"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"PhoneNumber:838-1180"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"-"]},{"entry":[{},"changetype:modify"]},{"entry":[{},"replace:Department"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Department:6"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"This differential update operation is then propagated by the Joiner to the other directories within the metadirectory. It is readily apparent from this simple example that the propagation bandwidth is reduced, and the update processing requirements are reduced by this differential update technique. In practice, most entries have many more than 5 fields, and updates may occur to many entries in a given time period, which multiplies the advantage of the invention.","According to the preferred embodiment of the invention, the step of selecting a local table entry upon which to apply the update operation for comparison purposes first employs a user-configurable synonym dictionary, including match tables, to allow for the reduction of multiple operations to records containing synonyms in keys or fields and to assist in the selection of one best matching entry from multiple matching entries.","This matching logic, which consults the synonym dictionary or \u201cmatch table(s)\u201d, is preferably executed before examining the changes in a change log for a data source to reduce it to a minimal set of changes.","For illustrative purposes,  provides some example entries in two data sources, Dand D. We can suppose for this example that data source Dis the metadirectory copy of the entry to be matched, and the second data source Dis the data source to be searched for matching entries. Further, there are several attributes, athrough a, in data source D, which are mapped to attributes a\u2032 through a\u2032 in data source D. Perhaps, at may be \u201cFirst_name\u201d in data source Dwhich is mapped to \u201cname1\u201d, or a\u2032, in data source D. Further for this illustration, suppose that entry eis the entry or record (e.g. set of attribute values) to be matched in D, and that records eand eof Dboth match attribute ain e, such as:\n\n","In most situations, it is unlikely that data source Dactually contains two records for the same person \u201cKris\u201d, so this match is not completely resolved based on the typical fundamental rules of matching. Most metadirectory products would simply record this match discrepancy and report it to an administrator for the administrator to resolve manually.","However, the matching process of the invention eliminates much of this incapability to resolve a match by providing a weighted matching approach in which multiple attributes can be matched to determine a more likely match. For example, further assume that attribute aof data source Dis \u201cTitle\u201d, and that a\u2032 of data source Dis \u201cPosition\u201d. So, the two attributes can be mapped to each other, and a weight can be assigned to the match between those attributes. Assuming a weight of 0.9 to \u201cFirst_name\u201d and 0.6 to \u201cTitle\u201d, and the following example records\n\n","Turning to , the logical process () of the preferred embodiment to apply the weighted score to multiple-match entries is shown in more detail. When the process is started (), a check is made to see if reduction and matching by synonyms is enabled (), and if so, the weighted scoring as previously described is performed () using the administrator-configurable synonym dictionary () for all entries which match values in mapped attributes such that only the one best matching entry is selected.","Now that a single, best match entry is selected, the change or update is applied () to a temporary copy of the selected entry.","Processing proceeds as shown in  by comparing () the updated entry is the original (unmodified) selected entry. Then, if there is a net change to the entry due to the update (e.g. the temporary copy is not equivalent to the original copy), processing continues to generate () a differential update operation and to propagate () that operation to other directories within the metadirectory.","Optionally, multiple entries in a directory which refer to the same entity because the fields or keys in these entries are synonymous can be flagged or marked. This may allow an administrator to review the marked entries, select a single entry that best represents the synonymous entity, and delete the other entries in the directory. This reduces the number of entries that need to be administered in a directory and the number of change log entries that are generated.","It will be understood from the foregoing description that various modifications and changes may be made in the preferred embodiment of the present invention without departing from its true spirit, such as the use of alternate programming methodologies or languages, and use or compliance with other remote directory management protocols. It is intended that this description is for purposes of illustration only and should not be construed in a limiting sense. The scope of this invention should be limited only by the language of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The following detailed description when taken in conjunction with the figures presented herein provide a complete disclosure of the invention.",{"@attributes":{"id":"p-0032","num":"0034"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0033","num":"0035"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0034","num":"0036"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0035","num":"0037"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0036","num":"0038"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0037","num":"0039"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0038","num":"0040"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0039","num":"0041"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0040","num":"0042"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
