---
title: Smart content and placement in a computer-aided design application
abstract: A method, apparatus, and article of manufacture provide the ability to manipulate a graphical representation of a real-world object in a computer drawing application. A semantic behavior is defined for the real-world object. A graphical representation of the real-world object (referred to as a subject object) is obtained. The semantic behavior is assigned to the subject object. The subject object is placed into a drawing. When placed, the subject object automatically, without additional user input, places itself into the drawing based on the semantic behavior.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08392150&OS=08392150&RS=08392150
owner: Autodesk, Inc.
number: 08392150
owner_city: San Rafael
owner_country: US
publication_date: 20091027
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Field of the Invention","The present invention relates generally to computer-implemented drawing applications, and in particular, to a method, apparatus, and article of manufacture for placing and utilizing objects and content in a computer-implemented drawing program based on semantics and behavioral attributes.","2. Description of the Related Art","For computer-aided design (CAD) applications (e.g., home remodeling\/interior design applications), adding content to a floor plan, layout, elevation or other large design project can be problematic. Such content addition often involves an external reference, importing, scaling, positioning and manually moving the object until the position is right. Often the object being added to a scene, whether it's a window, or a chair is usually closely associated with other objects already present in the scene. If objects had some kind of pre-determined intelligence with respect to other objects in a scene, placement, scale and position could be done automatically. Accordingly, there exists a need for some intelligence associated with objects and to a certain extent blocks in a scene. These problems may be better understood with a description of prior art object placement and existing mechanisms for defining and creating user interfaces.","An example of the addition of an object in a CAD environment is that of a user creating a simple office layout. Once the basic floor plan is complete, the user may desire to add a door, desk, chair, bookcase and computer to the scene. To add such objects, the user must perform the following series of steps:","(a) User locates a desk and imports it;","(b) User positions desk correctly in the scene (provided the user can view it once imported);","(c) User scales desk correctly for the proportions of the office space;","(d) User imports a chair;","(e) User positions the chair according to the desk position; etc.","(f) User scales the chair accordingly;",". . . (g) etc. with other objects.","As described above, if the objects have some kind of pre-determined intelligence with respect to other objects, placement, scale and position could be performed automatically. In the above example, if the desk had intelligence that it should be adjacent a wall or the proper scale value, the user would not need to manually position or scale the desk. Similarly, if the chair had pre-determined knowledge regarding placement based on the desk position and the size of the chair (via scaling), the user would not have to perform the manual steps recited above.","In another example, if window added to a scene knew that it had to be within a relative proximity to a desk and knew what scale it was to be when imported, considerable time could be saved during normal workflow. Similarly, if a chair had some intelligence about a scene and knew that it had to have a desk within a certain proximity, orientation and scale, considerable time would be saved in these operations.","Accordingly, there is a need for some intelligence in objects when they are added to a scene. Further, there is a need for a user to be able to create and use such intelligence in an efficient and understandable manner.","In addition to the above, the user must have the ability to easily understand and work with such intelligence both on a specific computer and across a network. Prior art methodologies exist that attempt to represent information about resources on the Internet in an easily understandable language. For example, the Resource Description Framework (RDF\u2122) available from the W3C\u2122 organization. RDF\u2122 is a language hat represents metadata about Web resources, such as the title, author, and modification date of a Web page, copyright and licensing information about a Web document, or the availability for some shared research. In addition, RDF\u2122 can be used to represent information about things that can be identified on the Web, even when they cannot be directly retrieved on the Web (e.g., information about items available from on-line shopping facilities or the description of a Web user's preferences for information delivery.","Semantic Web\u2122 is an extension of the Internet in which the semantics of information and services on the web is defined, making it possible for the web to understand and satisfy the requests of people and machines to use web content. Elements of Semantic Web\u2122 are expressed in formal specifications including RDF\u2122.","In view of the above, Semantic Web\u2122 and RDF\u2122 may be used to assist a user in defining and utilizing web content by establishing objects and relationships between such objects that are based on a semantic document. However, the ability to describe and utilize semantics to create and define a user interface that can be used to place objects in a computer aided drawing in an intelligent manner is lacking from the prior art.","In the prior art, objects were often placed into a scene manually by a user, which made the entire object placement process very slow and frequently required professional assistance. Further, prior art web-based design applications do not have any intelligence component and rely on manual placement and user experience. Other prior art applications lack flexibility and require professional knowledge and training in order to create a design of reasonable complexity.","One or more embodiments of the invention provide the idea for an object placing itself intelligently, based on rules and behavior. Such intelligence provides both an attribute of an object and may further be acquired knowledge based on analysis of user behavior patterns and relationships between objects. Accordingly, as content of the system is more widely used, the usability of the system improves automatically (i.e., without additional user input and dynamically in real-time) without changing or upgrading software.","In the following description, reference is made to the accompanying drawings which form a part hereof, and which is shown, by way of illustration, several embodiments of the present invention. It is understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.","Hardware and Software Environment",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1","b":["100","102","104","106","102","104","106","104","106","118"]},"A network  such as the Internet connects clients  to server computers . Additionally, network  may utilize radio frequency (RF) to connect and provide the communication between clients  and servers . Clients  may execute a client application  or Web browser  and communicate with server computers  executing Web servers . Further, the software executing on clients  may be downloaded from server computer  to client computers  and installed as a plug in or ActiveX control of a Web browser. Accordingly, clients  may utilize ActiveX components\/component object model (COM) or distributed COM (DCOM) components to provide a user interface on a display of client . The Web server  is typically a program such as Microsoft's Internet Information Server\u2122.","Web server  may host an Active Server Page (ASP) or Internet Server Application Programming Interface (ISAPI) application , which may be executing scripts. The scripts invoke objects that execute business logic (referred to as business objects). The business objects then manipulate data in database  through a database management system (DBMS) . Alternatively, database  may be part of or connected directly to client  instead of communicating\/obtaining the information from database  across network . When a developer encapsulates the business functionality into objects, the system may be referred to as a component object model (COM) system. Accordingly, the scripts executing on web server  (and\/or application ) invoke COM objects that implement the business logic. Further, server  may utilize Microsoft's Transaction Server (MTS)\u2122 to access required data stored in database  via an interface such as ADO (Active Data Objects), OLE DB (Object Linking and Embedding DataBase), or ODBC (Open DataBase Connectivity).","Generally, these components - all comprise logic and\/or data that is embodied in or retrievable from device, medium, signal, or carrier, e.g., a data storage device, a data communications device, a remote computer or device coupled to the computer via a network or via another data communications device, etc. Moreover, this logic and\/or data, when read, executed, and\/or interpreted, results in the steps necessary to implement and\/or use the present invention being performed.","Thus, embodiments of the invention may be implemented as a method, apparatus, or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof The term \u201carticle of manufacture\u201d (or alternatively, \u201ccomputer program product\u201d) as used herein is intended to encompass logic and\/or data accessible from any computer-readable device, carrier, or media.","Those skilled in the art will recognize many modifications may be made to this exemplary environment without departing from the scope of the present invention. For example, those skilled in the art will recognize that any combination of the above components, or any number of different components, including different logic, data, different peripherals, and different devices, may be used to implement the present invention, so long as similar functions are performed thereby.","Software Embodiments","One or more embodiments of the invention provide a computer program  that establishes a system where both the order\/procedure for building a graphical user interface as well as a behavior for moving and placing objects within the graphical user interface are driven semantically. Thus, embodiments have both semantic and related behavioral aspects that server to create a flexible framework for manipulating objects in an efficient and easily understandable manner.","In view of the above, one or more embodiments of the program  may consist of a computer drawing application that allows users to move and manipulate objects within a scene. The computer drawing application may be a computer-aided design (CAD) application, a three-dimensional modeling application, a two-dimensional drawing application, etc. Objects that appear within program  have a behavior assigned to it according to a classification\/semantics. The semantics may be used not just to identify what behavior is being used, but also to describe the actual rules\/definitions for creating\/using the object within a user interface. To better understand the invention, a description of content and types of semantics that may be used with such content is useful.","To provide a particular behavior for content, the content should have intelligence and one or more constraints. The complexity of intelligence as well as level of sophistication for constrains is practically unlimited in real life. Accordingly embodiments enable an extendable system, wherein desirable behavior can be described by a content provider with practically infinite complexity. For example, for home improvement\/interior design products, all windows behave in a similar way, yet some of the windows may have more intelligent behavior where size and placement can be determined based on sun location, time of the year, or some aesthetic criteria.","In another example, door placement can be automatically based on other doors and windows in close proximity and possibly on other objects present in a particular scene. In yet another example, chairs, stools, tables, desks, and similar objects may all have some intelligence that would guide their placement relative to each other in a particular scene. Chairs would know that they ideally would appear in a certain orientation relative to a desk and their scale would have to be the same as the desk.","A particular behavior may be established for a given object by assigning a classification or semantic (e.g., label) to an object. Such a semantic may provide a behavior based on various basic rules. The basic rules provide for the following types of behaviors: (1) collision; (2) orientation; (3) affinity; and (4) attachment. These behaviors may be assigned to a subject (the object on which the rules are being evaluated) or to a host (the object to which the subject will attach). Further, different types of content may be used in the various rules.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 2","FIG. 2"]},"With the various behavioral rules specified above, it may be useful to describe how each type of behavior operates.","The collision behavior provides for an intersection between geometries and\/or bounding boxes of two objects. Table A illustrates the schema for the collision behavior in accordance with one or more embodiments of the invention.",{"@attributes":{"id":"p-0042","num":"0041"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE A"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Collision"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attribute","Description","Required"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["host-type","Host content type or ALL","Yes if no host-id"]},{"entry":["host-id","ID of a specific host","Yes if no host-"]},{"entry":[{},{},"type"]},{"entry":["exclusion-host-id","If a host-type is specified but this","No"]},{"entry":[{},"particular host should be excluded",{}]},{"entry":[{},"from rule execution"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":"Comments: One of host-type or ID needs to be specified, if both are specified, host-id will be ignored"}]}}]}}},"In Table A, the host-type field specifies which types of host objects the subject object can interfere with. For example, the host-type may be seating, surface, lighting, etc. The host-id allows the specification of a particular host id to use within a behavioral definition. The exclusion-host-id allows provides the ability to exclude the application of the behavior to the specifically identified host (i.e., identified by the host id). An example of code that may be used for a default d\u00e9cor item having a collision behavior may be:",{"@attributes":{"id":"p-0044","num":"0043"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<Collision>"},{"entry":"\u2003\u2003<!--Sample behavior for a decorative item. The item exhibits"},{"entry":"\u2003\u2003Collision behavior - it collides with all objects of type surface except"},{"entry":"\u2003\u2003the exclusion host id object -->"},{"entry":"\u2003\u2003<inclusionHost hostType=\u201cSURFACE\u201d\/>"},{"entry":"\u2003\u2003<exclusionHost hostID=\u201cOverRideMe\u201d\/>"},{"entry":"<\/Collision>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Such extensible markup language (XML) code specifies the sample behavior where it may collide with all objects of type SURFACE except for the specific hosts having a hostID of \u201cOverRideMe\u201d.","The orientation behavior provides for a loose alignment of one item to the geometry of another item. For example, a sofa may have a back facing orientation with respect to a wall. Table B illustrates the schema for the orientation behavior in accordance with one or more embodiments of the invention.",{"@attributes":{"id":"p-0047","num":"0046"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE B"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Orientation"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attribute","Description","Required"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["host-type","Host content type","Yes if no host-id"]},{"entry":["host-id","ID of a specific host","Yes if no host-type"]},{"entry":["exclusion-","If a host-type is specified but this","No"]},{"entry":["host-id","particular host should be excluded",{}]},{"entry":[{},"from rule execution",{}]},{"entry":["host-","CENTER|FRONT|BACK|LEFT|RIGHT","No, only required if"]},{"entry":["location",{},"the subject needs to"]},{"entry":[{},{},"be aligned to a"]},{"entry":[{},{},"specific section of"]},{"entry":[{},{},"the host geometry"]},{"entry":["subject-","CENTER|FRONT|BACK|LEFT|RIGHT","Yes"]},{"entry":["location",{},{}]},{"entry":["snap-","Distance at which this rule should","No"]},{"entry":["distance","execute, if not specified a default",{}]},{"entry":[{},"value would be used"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":"Comments: One of host-type or ID needs to be specified, if both are specified, host-id will be ignored"}]}}]}}},"In Table B, the host-type, host-id, and exclusion-host-id identify the host information for the orientation behavior similar to that of the collision behavior. The host-location specifies the specific sections of the host geometry that the subject is to be aligned with. Such locations include center, front, back, left, and right. Similarly, the subject-location attribute specifies they locations of the subject that will be aligned with the host. Such locations include center, front, back, left, and right. Lastly, the snap-distance attribute specifies a particular distance at which the orientation rule will execute. In other words, if a distance is specified, when a subject is placed within the snap-distance, the subject will be oriented based on the remainder of settings within the rule.","An example of code that may be used for a default d\u00e9cor item having an orientation behavior may be:",{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<Orientation>"},{"entry":"\u2003\u2003<!-- Sample behavior for a sofa - The item exhibits orientation with"},{"entry":"walls, aligns its back to the front of the wall -->"},{"entry":"\u2003\u2003<inclusionHost executionDistance=\u201c10\u201d hostType=\u201cWALLS\u201d"},{"entry":"subjectLocation=\u201cBACK\u201d hostLocation=\u201cFRONT\u201d\/>"},{"entry":"<\/Orientation>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In this example, the orientation of a sofa is provided with respect to walls. Namely, when the sofa is paced within a snap distance (i.e., execution distance) of 10 of a wall, the back of the sofa is aligned with the front of the wall.","The affinity behavior provides placement rules that define where an object can be legally placed. Affinity is stronger (i.e., has priority or higher precedence within a hierarchical application of behaviors) than orientation rules. Table C illustrates the schema for the affinity behavior in accordance with one or more embodiments of the invention.",{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE C"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Affinity"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attribute","Description","Required"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["host-type","Host content type","Yes if no"]},{"entry":[{},{},"host-id"]},{"entry":["host-id","ID of a specific host","Yes if no"]},{"entry":[{},{},"host-type"]},{"entry":["exclusion-host-id","If a host-type is specified but this","No"]},{"entry":[{},"particular host should be excluded",{}]},{"entry":[{},"from rule execution",{}]},{"entry":["host-location","CENTER|FRONT|BACK|LEFT|RIGHT|","Yes"]},{"entry":[{},"TOP|BOTTOM|<specific-point>",{}]},{"entry":["subject-location","CENTER|FRONT|BACK|LEFT|RIGHT|","Yes"]},{"entry":[{},"TOP|BOTTOM|<specific-point>",{}]},{"entry":["snap-distance","Distance at which this rule should","No"]},{"entry":[{},"execute, if not specified a default",{}]},{"entry":[{},"value would be used"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":"Comments: One of host-type or ID needs to be specified, if both are specified, host-id will be ignored"}]}}]}}},"In Table C, the host-type, host-id and exclusion-host-id attributes are used in similar manner to that for the collision and orientation behaviors. The host location specifies the specific reference point (i.e., center, front, back, left, right, top, or bottom) of the host that determines where that the subject can be legally placed.","Similarly, the subject-location specifies the specific reference point (i.e., center, front, back, left, right, top, or bottom) of the subject for determining where the subject can be legally placed. The snap-distance attribute specifies a particular distance at which the affinity rule will execute. In other words, if a distance is specified, when a subject is placed within the snap-distance, the subject will have an affinity based on the remainder of settings within the rule.","An example of code that may be used for a default d\u00e9cor item having an affinity behavior may be:",{"@attributes":{"id":"p-0057","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<Affinity>"},{"entry":"\u2003\u2003<!--Sample behavior for a decorative item. The item exhibits affinity"},{"entry":"behavior - it builds affinity with all Surface and Seating types except for"},{"entry":"the hostID of OverRideMe -->"},{"entry":"\u2003\u2003<inclusionHost hostType=\u201cSURFACE\u201d\/>"},{"entry":"\u2003\u2003<inclusionHost hostType=\u201cSEATING\u201d\/>"},{"entry":"\u2003\u2003<exclusionHost hostID=\u201cOverRideMe\u201d\/>"},{"entry":"<\/Affinity>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Such XML text defines the affinity behavior for a decorative item subject that may be legally placed on the surface or seating of any host except if the host has a hostID of OverRideMe.","The attachment behavior provides the ability to attach two objects such that both a host and visitor object move if either the visitor or host object is moved. The attachment behavior is stronger (i.e., has priority or higher precedence within a hierarchical application of behaviors) than the affinity and orientation behaviors.","Table D illustrates the schema for the attachment behavior in accordance with one or more embodiments of the invention.",{"@attributes":{"id":"p-0061","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE D"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Attachment"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attribute","Description","Required"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["host-type","Host content type","Yes if no"]},{"entry":[{},{},"host-id"]},{"entry":["host-id","ID of a specific host","Yes if no"]},{"entry":[{},{},"host-type"]},{"entry":["exclusion-host-id","If a host-type is specified but this","No"]},{"entry":[{},"particular host should be excluded",{}]},{"entry":[{},"from rule execution",{}]},{"entry":["host-location","CENTER|FRONT|BACK|LEFT|RIGHT|","Yes"]},{"entry":[{},"TOP|BOTTOM|<specific-point>",{}]},{"entry":["subject-location","CENTER|FRONT|BACK|LEFT|RIGHT|","Yes"]},{"entry":[{},"TOP|BOTTOM|<specific-point>",{}]},{"entry":["snap-distance","Distance at which this rule should","No"]},{"entry":[{},"execute, if not specified a default",{}]},{"entry":[{},"value would be used"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":"Comments: One of host-type or ID needs to be specified, if both are specified, host-id will be ignored"}]}}]}}},"The host-type, host-id, and exclusion-host-id attributes provide similar conditions to that of the other behaviors. The host-location and subject location specify the specific points (center, front, back, left, right, top, or bottom) of the host and subject where the host may attach to the subject. The snap-distance attribute specifies a particular distance at which the attachment rule will execute. In other words, if a distance is specified, when a subject is placed within the snap-distance, the subject will be attached based on the remainder of settings within the rule.","An example of code that may be used for a default d\u00e9cor item having an attachment behavior may be:",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<Attachment>"},{"entry":"\u2003\u2003<!-- Sample behavior for a rug type item which attaches to all"},{"entry":"flooring types - it attaches with all FLOORING types, and it also attaches"},{"entry":"at a negative point with OverRideMe -->"},{"entry":"\u2003\u2003<inclusionHost executionDistance=\u201c\u221210\u201d hostID=\u201cOverRideMe\u201d"},{"entry":"subjectLocation=\u201cFRONT\u201d hostLocation=\u201cBACK\u201d\/>"},{"entry":"\u2003\u2003<inclusionHost hostType=\u201cFLOORING\u201d\/>"},{"entry":"<\/Attachment>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In the above XML language for the attachment behavior, the front of a rug subject is attached to the back of any flooring. In addition, the rug may also attach to any host having a host id of override me when placed within a distance of \u221210.","Attachment and affinity behaviors (as well as orientation behaviors) may be geometrically or non-geometrically based. For geometric based attachments\/affinity, one object attaches its generic geometry location to the host. Examples of geometry based attachments include center line (a line running along the center of the object aligns to a line running along the center of the host) and front\/left\/back\/right (a line running along the front\/left\/back\/right of the object aligns with a different line on the host). For non-geometry based attachments\/affinity, a specific point (x,y,z) on the object can be attached to the host (also referred to as a point to point where both the subject and host specify points for attachment\/affinity).","An additional behavior may include a magnetism behavior that identifies a behavior that a subject indicates as it moves closer to a host (e.g., automatically adjusting to a certain distance\/tolerance once it approached a defined area of influence of the host object). Similarly, a snapping behavior may identify whether an object snaps to a particular angle (e.g., 45 degrees) (e.g., door orientation, tables, chairs, sofas, etc.).","In view of the above defined behaviors, a hierarchy for execution of the rules may be established which specifies which rules have higher priority or will execute or override a behavioral rule (if a conflict arises). An exemplary hierarchy may be orientation, affinity, attachment, collision. In such a hierarchy, orientation based behavior would execute before affinity rules, which would execute before attachment rules, which would execute before collision rules.","The above XML based examples for the different behaviors, provide the behavior for any d\u00e9cor item (e.g., free standing vase or pillow). Any d\u00e9cor item can reference the above XML language (which can be combined into a single XML file) and\/or partially or completely override it and\/or reference any combination of rule files\u2014in this case they will be merged together for interpretation. As can be clearly seen, the semantics for the different categories are being used not just to identify what behavior is being used, but also to describe the actual rules. The rules and definitions for the rules may be extended indefinitely and include very complex behaviors (including scripted behaviors).","The examples below illustrate additional behavioral rules that are defined semantically. The first example provides an XML document that defines a sample behavior for a wall cabinet.",{"@attributes":{"id":"p-0071","num":"0070"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<Behavior>"},{"entry":"\u2002<!--Sample behavior for a wall cabinet-, the cabinet attaches to both"},{"entry":"the wall and other storage objects, the cabinet collides with the other"},{"entry":"cabinets if none of the attachment conditions are satisfied. Finally the"},{"entry":"object collides against a specific type of object-->"},{"entry":"\u2003\u2003<Collision host-type=\u2018Storage\u2019\/>"},{"entry":"\u2003\u2003<Collision host-id=\u2018ae124ss\u2019\/>"},{"entry":"\u2003\u2003<Attachment host-type=\u2018Wall\u2019 host-location=\u2018CENTER\u2019"},{"entry":"subject-location=\u2018BACK\u2019\/>"},{"entry":"\u2003\u2003<Attachment host-type=\u2018Storage\u2019 host-location=\u2018LEFT\u2019 subject-"},{"entry":"location=\u2018RIGHT\u2019\/>"},{"entry":"\u2003\u2003<Attachment host-type=\u2018Storage\u2019 host-location=\u2018RIGHT\u2019"},{"entry":"subject-location=\u2018LEFT\u2019\/>"},{"entry":"<\/Behavior>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In the example, the back of the wall cabinet attaches to center of the wall. In addition, the right and left sides of the wall cabinet attach to other storage objects. The wall cabinet also collides with a storage type object.","The next example semantically defines a sample behavior for a furniture seating:",{"@attributes":{"id":"p-0074","num":"0073"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<Behavior>"},{"entry":"\u2002<!--Sample behavior for a furniture seating- The item orients with its"},{"entry":"back aligned to the center line of the wall. It collides with the wall and"},{"entry":"other items of content type furniture-seating-->"},{"entry":"\u2003\u2003<Collision host-type=\u2018Wall\u2019\/>"},{"entry":"\u2003\u2003<Collision host-type=\u2018Furniture-Seating\u2019\/>"},{"entry":"\u2003\u2003<Orientation host-type=\u2018Wall\u2019 host-location=\u2018CENTER\u2019"},{"entry":"subject-location=\u2018BACK\u2019\/>"},{"entry":"<\/Behavior>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In this example, the furniture seating collides with walls or other furniture type seating and is oriented with the back of the furniture at the center of the wall.","The following example illustrates the sample behavior for a decorative item:",{"@attributes":{"id":"p-0077","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<Behavior>"},{"entry":"\u2003<!--Sample behavior for a decorative item- The item exhibits"},{"entry":"affinity with surface type furniture. It collides with the wall and other"},{"entry":"items of content type furniture-seating-->"},{"entry":"\u2003\u2003<Collision host-type=\u2018Wall\u2019\/>"},{"entry":"\u2003\u2003<Collision host-type=\u2018Decorative\u2019\/>"},{"entry":"\u2003\u2003<Collision host-type=\u2018Furniture-seating\u2019\/>"},{"entry":"\u2003\u2003<Collision host-type=\u2018Storage\u2019\/>"},{"entry":"\u2003\u2003<Affinity host-type=\u2018Furniture-surface\u2019 host-"},{"entry":"location=\u2018CENTER\u2019 subject-location=\u2018CENTER\u2019\/>"},{"entry":"\u2003\u2003<Affinity host-type=\u2018Floor\u2019 host-location=\u2018FRONT\u2019 subject-"},{"entry":"location=\u2018CENTER\u2019\/>"},{"entry":"<\/Behavior>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The above example provides that the decorative item collides with walls, other decorative items, furniture seating or storage. Further, the decorative item can be placed (based on the affinity rules) based on the center of the decorative item and center of the furniture it is being placed on OR based on the center of the decorative item and the front of the floor.","The last example below illustrates the sample semantically defined behavior for a fireplace:",{"@attributes":{"id":"p-0080","num":"0079"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<Behavior>"},{"entry":"\u2002<!--Sample behavior for a fireplace - attach the back to the wall and"},{"entry":"display affinity to the floor, collide against all->"},{"entry":"\u2003\u2003<Collision host-type=\u2018ALL\u2019\/>"},{"entry":"\u2003\u2003<Attachment host-type=\u2018Wall\u2019 host-location=\u2018CENTER\u2019"},{"entry":"subject-location=\u2018BACK\u2019\/>"},{"entry":"\u2003\u2003<Attach host-type=\u2018Floor\u2019 host-location=\u2018TOP\u2019 subject-"},{"entry":"location=\u2018BOTTOM\u2019\/>"},{"entry":"<\/Behavior>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Such XML semantically defined behaviors provide that the back of the fireplace may attach to the center of a wall while the bottom of the fireplace attaches to the top of the floor. Further, the fireplace may collide with all types of objects.","As can be seen, a user has the capability to semantically define various behaviors and characteristics for an object with respect to other objects in an easy, understandable, and efficient manner. Such semantic definitions may be created and assigned to new or existing objects dynamically in real time and provides flexibility for determining how parts interact with each other both geometrically and procedurally. Further, additional semantic properties can be added to any definition or modified dynamically after a behavior has been defined. Such characteristics allows the semantics to drive an inheritance type properties and the behavioral properties and attributes of objects.","The semantically defined behaviors can further provide a procedural system where the user\/designer can designate an order or procedure for building an item\/applying the rules. For example, the procedural aspects\/constraints may require a user to place brackets on a wall before a shelf is placed onto the brackets. Prior art techniques would not prevent users from placing a shelf on the wall from the beginning regardless of the structure necessary to support such a shelf.","In addition to the above, the semantics may define specific relationships between objects. For example, a \u201cplaced-on\u201d type of relationship may specify that a particular shelf may only be used for photographs or that photographs\/photo frame objects may only be placed on a particular shelf.","Software Adaptability","Given a potentially substantial number of users for web-based applications and subsequently large number of designs to be created, one or more embodiments of the invention may utilize adaptable or self-learning capabilities for the system based on identified behavior patterns and styles. While this adaptable or \u201cacquired\u201d behavior may not override the basic rules described above, the system may \u201csuggest\u201d solutions, based on similar designs, styles and other metrics of statistical significance. In this regard, the adaptable system may take advantage of the large number of users and utilize their collective knowledge to present individual consumers with solutions he or she is unlikely to find on their own.","Logical Flow",{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 3"},"At step , a semantic behavior is defined for the real-world object. In this regard, the real-world object may represent any type of object including objects used in a home remodeling\/interior design application (e.g., items in , refrigerator, chair, desk, picture, wall, etc). The semantic behavior may be defined using the resource description framework (RDF) language and semantic web.","Further, as described above, the semantic behavior may consist of various rules including a collision rule, orientation rule, affinity\/placement rule, attachment rule, etc. Such rules may further have different procedural priorities. Such procedural priorities define the procedural order in which the rules are to be applied and determine which rules have priority (e.g., hierarchically). For example, the procedural priority from highest priority to lowest priority may be collision, attachment, affinity, and orientation. Such a procedural priority may also be viewed as the designation by the semantic behavior of a procedural order for placing the subject object with respect to a host object in a drawing.","In addition to the above, the semantic behavior may be dynamically defined and dynamically assigned to the subject object after the subject object has been created. Thus, new rules or existing rules may be modified and then assigned to an already created\/existing object in drawing. Such dynamic rule creation and assigning allows behavioral attributes and properties to be created by the user at any time in a flexible and non-constraining manner. Thus, while certain behavioral properties and attributes can be created before an object is created (and therefore the object essentially inherits certain behavioral traits), additional behaviors can be created and defined dynamically and further constrain a subject objects' placement behavior with respect to other host objects.","Further, the semantic behavior may be defined based on behavior patterns and\/or styles that have been identified through usage of the subject object (e.g., with respect to a host object) by one or more multiple users in drawings on a single application or across the Internet (e.g., via a web based application).","At step , a graphical representation of a real world object (referred to as a subject object) is obtained. Thus, a geometric or graphical representation of a real-world object (i.e., that is to be used\/placed into a drawing) is obtained. Such a method step may include the user creating a geometric object\/shape, or the user may retrieve an existing object from a set of objects created by a third party.","At step , the semantic behavior is assigned to the subject object. Such a step may be integrated into steps  and  using a semantic language such that the semantic behavior is created and assigned using XML, RDF, or semantic web.","At step , the subject object is placed into a drawing. When placed, the subject object automatically, without additional user input, places itself into the drawing based on the semantic behavior. Accordingly, when placed, the object may reorient itself based on an orientation rule, attach to another object in the drawing (e.g., if placed within a certain proximity of a host object) based on an attachment rule, collide with or avoid collision with a host object based on a collision rule, or be placed in a certain area depending on an affinity rule.","Conclusion","This concludes the description of the preferred embodiment of the invention. The following describes some alternative embodiments for accomplishing the present invention. For example, any type of computer, such as a mainframe, minicomputer, or personal computer, or computer configuration, such as a timesharing mainframe, local area network, or standalone personal computer, could be used with the present invention. In summary, embodiments of the invention provide a semantically based behavioral system for defining and placing objects and their relationships. Embodiments conserve time and resources and reduce the manual work associated with placing objects in an \u201cintelligent\u201d environment. Embodiments of the invention may be utilized in home remodeling and interior design applications, and\/or any similar environment, such as landscaping, urban planning, commercial real state planning, etc.","The foregoing description of the preferred embodiment of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
