---
title: Integrating software provisioning and configuration management
abstract: A provisioning server can cooperate with configuration management systems to deliver provisioning processes integrated with configuration management services. The provisioning server can associate provisioning objects for the various provisioning processes with management classes supported by the configuration management systems. The management classes can include data for configuring the resources of a target machine (hardware, software, data, etc.). As the provisioning server performs the provisioning process for a particular provisioning object on a target machine, the provisioning server can apply the management class, associated with the particular provisioning object, to the target machine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09411570&OS=09411570&RS=09411570
owner: Red Hat, Inc.
number: 09411570
owner_city: Raleigh
owner_country: US
publication_date: 20090227
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","DESCRIPTION OF THE RELATED ART","DETAILED DESCRIPTION OF EMBODIMENTS"],"p":["This invention relates generally to software provisioning. In particular, the invention relates to systems and methods for integrating software provisioning and configuration management.","Software provisioning is the process of selecting a target machine, such as a server, loading the appropriate software (operating system, device drivers, middleware, and applications), and customizing and configuring the system and the software to make it ready for operation. Software provisioning can entail a variety of tasks, such as creating or changing a boot image, specifying parameters, e.g. IP address, IP gateway, to find associated network and storage resources, and then starting the machine and its newly-loaded software. Typically, a system administrator will perform these tasks using various tools because of the complexity of these tasks. Unfortunately, there is a lack of provisioning control tools that can adequately integrate and automate these tasks.","For a network of computing systems, the network will include, in addition to install servers, other management systems to track the systems and devices of the network. Typically, the install servers and the other management systems are unaware of the processes performed by each. Thus, it can be difficult to maintain consistency in the network because both the install servers and the management system change and alter the computing systems and devices of the network.","For simplicity and illustrative purposes, the principles of the present invention are described by referring mainly to exemplary embodiments thereof. However, one of ordinary skill in the art would readily recognize that the same principles are equally applicable to, and can be implemented in, all types of information and systems, and that any such variations do not depart from the true spirit and scope of the present invention. Moreover, in the following detailed description, references are made to the accompanying figures, which illustrate specific embodiments. Electrical, mechanical, logical and structural changes may be made to the embodiments without departing from the spirit and scope of the present invention. The following detailed description is, therefore, not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.","Embodiments of the present teachings relate to systems and methods for providing provisioning processes in concert with configuration management in a software provisioning environment. More particularly, a provisioning server can be configured to operate in conjunction with configuration management systems to integrate the provisioning processes and configuration management.","According to embodiments, the provisioning server can be configured to cooperate with configuration management systems to deliver provisioning processes integrated with configuration management services. The provisioning server can be configured to associate provisioning objects for the various provisioning processes with management classes supported by the configuration management systems. The management classes can include data for configuring the resources of a target machine (hardware, software, data, etc.).","In embodiments, as the provisioning server performs the provisioning process for a particular provisioning object on a target machine, the provisioning server can be configured to apply the management class, associated with the particular provisioning object, to the target machine. For example, the provisioning server can apply the configuration data to the target machine as specified in the associated management class. After provisioning, the provisioning server can be configured to provide an indication including the identification of the target machine, the provisioning process performed, and the management class associated with the target machine to the configuration management system associated with the management class.","In embodiments, the provisioning server can be configured to generate the management classes for the configuration management system. Likewise, the provisioning server can be configured to receive the management classes from the configuration management systems. In either case, the provisioning server can be configured to store the generated and\/or receive management classes for use during provisioning processes.","By linking provisioning objects with the management classes, the provisioning server can ensure that new target machines in the software provisioning environment are immediately integrated and supported by the appropriate configuration management systems. Additionally, the provisioning server can ensure that changes to existing target machines remain in sync with the configuration management systems. As such, the provisioning server can seamlessly maintain consistency between the provisioning processes and the configuration management services.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 1","FIG. 1"],"b":["100","100"]},"In particular, the provisioning environment  can manage software provisioning using a hierarchy of commands. In exemplary embodiments, the hierarchy can include at least four levels of commands. The lowest level in the hierarchy can comprise distribution commands, which primarily handle base operating system specific tasks of provisioning. The second level can comprise profile commands, which associate a configuration file, such as a kickstart file for Linux or other operating system, with a distribution and optionally allow for customization. The third level comprises system commands, which associate remote systems that are involved with the provisioning of the software. The fourth level comprises repository commands, which address configurations and tasks related to updating the software, remote installation procedures, and optionally customizing the software.","The provisioning environment  provides several capabilities and advantages over the known provisioning solutions. For example, the present invention is capable of handling a variety of forms of installations, such as preboot execution environment (\u201cPXE\u201d), virtualization, re-installations, and image installations.","In exemplary aspects, the provisioning environment  enables integrating virtualization into a PXE provisioning infrastructure and provides several options to reinstall running machines as well. The provisioning environment  can integrate mirroring of package repositories with the provisioning process, so that a provisioning server may serve as a central mirror point of contact for all of an organization's software needs. In aspects, a set of remote mirrored repositories can automatically be used by provisioned systems without additional setup.","Reference will now be made in detail to the exemplary aspects the provisioning environment . The provisioning environment  can be applied to provisioning any form of software, such as Windows systems, UNIX systems, and Linux systems. In the exemplary description that follows,  is presented to explain the provisioning environment  for provisioning software, such as Linux, and Linux based software, such as Fedora and Red Hat Enterprise Linux by Red Hat, Inc.","In provisioning of software such as Linux, many system administrators use what is known as the \u201ckickstart\u201d installation method. Kickstart files are files that specify the intended configuration of the software being provisioned. Kickstart files can be kept on a server and can be read by individual computers during the installation. This installation method allows the use of a single or relatively few standard kickstart files to install Linux on multiple machines, making it ideal for network and system administrators.","The kickstart file can be a simple text file, containing a list of items, each identified by a keyword. In general, a kickstart file can be edited with any text editor or word processor that can save files as ASCII text. One skilled in the art will recognize that the present invention may be applied to non-kickstart files in software provisioning. For example, configuration files such as AutoYAST Answer files used in Novell SuSe Linux and Sun Solaris Jumpstart files may also be used by the provisioning environment .","Typically, a kickstart file can be copied to the boot disk, or made available on the network. The network-based approach is most commonly used, as most kickstart installations for software provisioning, such as Linux systems, tend to be performed via a network using NFS, FTP, or HTTP on networked computers. Administrators also find it desirable that kickstart installations can be performed using a local CD-ROM, or a local hard drive.","Using kickstart files, a system administrator can create a single file containing the parameters that are needed to complete a typical software installation. For example, kickstart files specify parameters related to: language selection; mouse configuration; keyboard selection; boot loader installation; disk partitioning; network configuration; NIS, LDAP, Kerberos, Hesiod, and Samba authentication; firewall configuration; and package selection.","According to exemplary aspects illustrated in , the provisioning environment  can include a provisioning server , a code repository  which provides access to distributions  and , a set of installation templates , a set of exception plugins , a helper client  running on target machines  in a network , a provisioning database  which comprises a distribution tree list  and template list . Each of these components will now be further described.","The provisioning server (from herein referred to as a \u201ccobbler\u201d)  is responsible for: serving as an extensible markup language remote procedure call (XMLRPC) handler; linking to or mirroring install distribution trees and a configuration database; hosting kickstart templates; hosting plugins; generating installation images, and the like. The cobbler server  can be implemented as software, such as Python code, installed on a boot server machine and provide a command line interface for configuration of the boot server. In addition, the cobbler server  can make itself available as a Python application programming interface (API) for use by higher level management software (not shown). The cobbler server  supports provisioning via PXE, image (ISO) installation, virtualization, re-provisioning. As will be described later, the last two modes are performed with the assistance of a helper client .","The code repository  is responsible for hosting distributions  and . The code repository  can be implemented using well known components of hardware and software. Additionally, the code repository  can include one or more repositories hosting distributions. The distributions  and  can include bundles of software that are already compiled and configured. The distributions  and  may be in the form of either rpm, deb, tgz, msi, exe formats, and the like. For example, as Linux distributions, the distributions  and  are bundles of software that comprise the Linux kernel, the non-kernel parts of the operating system, and assorted other software. The distributions  and  can take a variety of forms, from fully-featured desktop and server operating systems to minimal environments.","In exemplary aspects, the installation templates  are any data structure or processing element that can be combined with a set of installation configurations and processed to produce a resulting configuration file, such as a kickstart file.","In exemplary aspects, exception plugins  are software that interact with cobbler server  to customize the provisioning of software. In general, the exception plugins  are intended to address infrequent customization needs.","In exemplary aspects, the helper client (known as \u201ckoan\u201d, which stands for \u201ckickstart-over-a-network\u201d)  can assist the cobbler server  during the provisioning processes. The koan  can allow for both network provisioning of new virtualized guests and destructive provisioning of any existing system. When invoked, the koan  can request profile information from a remote boot server that has been configured with the cobbler server . In some aspects, what the koan  does with the profile data depends on whether it was invoked with\u2014virt or\u2014replace-self.","In exemplary aspects, the koan  can enable replacing running systems as well as installing virtualized profiles. The koan  can also be pushed out to systems automatically from the boot server. In some aspects, the koan client  is also written in Python code to accommodate a variety of operating systems, machine architectures, etc.","In exemplary aspects, the network  can include a number of the target machines . The target machines  can represent the particular machines to which software provisioning is directed. The target machines  can represent a wide variety of computing devices, such as personal computers, servers, laptop computers, personal mobile devices, and the like. In some aspects, the target machines  can represent distributed computing environments such as cloud computing environments. Although  shows several of the target machines , the provisioning environment  can be capable of managing a wide range environments, such as datacenters with thousands of machines or server pools with just a few machines. Additionally, the cobbler server  can be connected to multiple networks .","In exemplary aspects, the provisioning database  can serve as a data storage location for holding data used by the cobbler server . For example, as shown, the provisioning database  can comprise the distribution tree list  and the template list . The distribution tree list  can provide an inventory of the distributions  and  that are hosted or mirrored by the cobbler server . The template list  can provide an inventory of the templates  that are hosted by the cobbler server .","As noted above, the cobbler server  can manage provisioning using a hierarchical concept of distribution commands, profile commands, system commands, and repository commands. This framework enables the cobbler server  to abstract the differences between multiple provisioning types (installation, reinstallation, and virtualization) and allows installation of all three from a common platform. This hierarchy of commands also permits the cobbler server  to integrate software repositories  with the provisioning process, thus allowing systems to be configured as a mirror for software updates and third party content as well as distribution content.","Distributions can contain information about base operating system tasks, such as what kernel and initial ramdisk (\u201cinitrd\u201d) are used in the provisioning, along with other information, such as required kernel parameters. Profiles associate one of the distributions  and  with a kickstart file and optionally customize it further, for example, using plugins . System commands associate a hostname, IP, or (machine access control) MAC with a distribution and optionally customize the profile further. Repositories contain update information, such as yum mirror information that the cobbler server  uses to mirror repository . The cobbler server  can also manage (generate) dynamic host configuration protocol (DHCP) configuration files using the templates .","In exemplary aspects, the cobbler server  can use a provisioning environment that is fully templated, allowing for kickstarts and PXE files to be customized by the user. The cobbler server  uses the concept of \u201cprofiles\u201d as an intermediate step between the operating system and the installed system. A profile is a description of what a system does rather than the software to be installed. For instance, a profile might describe a virtual web server with X amount of RAM, Y amount of disk space, running a Linux distribution Z, and with an answer file W.","In exemplary aspects, the cobbler server  can provide a command line interface to configure a boot server in which it is installed. For example, the format of the cobbler server  commands can be generally in the format of: cobbler command [subcommand][\u2014arg1=][\u2014arg2=]. Thus, a user can specify various aspects of software provisioning via a single interface, such as a command line interface or other known interface. Examples of exemplary cobbler commands can be found in U.S. patent application Ser. No. 11\/763,315, U.S. Patent Application Publication No. 2008-0288938 and U.S. patent application Ser. No. 11\/763,333, U.S. Patent Publication No. 2008-0288939, all assigned to Red Hat Corporation, the disclosures of which are incorporated herein, in their entirety, by reference.","According to exemplary aspects, a user can use various commands of the provisioning environment  to specify distributions and install trees hosted by the code repository , such as a distribution from the distributions  or . A user can add or import a distribution or import it from installation media or an external network location.","According to exemplary aspects, in order to import a distribution, the cobbler server  can auto-add distributions and profiles from remote sources, whether this is an installation media (such as a DVD), an NFS path, or an rsync mirror. When importing an rsync mirror, the cobbler server  can try to detect the distribution type and automatically assign kickstarts. By default in some embodiments, the cobbler server can provision by erasing the hard drive, setting up eth0 for DHCP, and using a default password. If this is undesirable, an administrator may edit the kickstart files in \/etc\/cobbler to do something else or change the kickstart setting after the cobbler server  creates the profile.","According to exemplary aspects, a user may map profiles to the distributions and map systems to the profiles using profile commands and systems commands of the provisioning environment . A profile associates a distribution to additional specialized options, such as a kickstart automation file. In the cobbler server , profiles are the unit of provisioning and at least one profile exists for every distribution to be provisioned. A profile might represent, for instance, a web server or desktop configuration.","According to exemplary aspects, a user can map systems to profiles using system commands. System commands can assign a piece of hardware with cobbler server  to a profile. Systems can be defined by hostname, Internet Protocol (IP) address, or machine access control (MAC) address. When available, use of the MAC address to assign systems can be preferred.","According to exemplary aspects, the user can map repositories and profiles using repository commands. Repository commands can address configurations and tasks related to updating the software, remote installation procedures, and optionally customizing the software. These repository commands can also specify mirroring of the provisioned software to remote servers. Repository mirroring can allow the cobbler server  to mirror not only the trees  and , but also optional packages, third party content, and updates. Mirroring can be useful for faster, more up-to-date installations and faster updates, or providing software on restricted networks. The cobbler server  can also include other administrative features, such as allowing the user to view their provisioning configuration or information tracking the status of a requested software installation.","According to exemplary aspects, a user can utilize commands to create a provisioning infrastructure from a distribution mirror. Then a default PXE configuration is created, so that by default, systems will PXE boot into a fully automated install process for that distribution. The distribution mirror can be a network rsync mirror or a mounted DVD location.","According to exemplary aspects, the administrator uses a local kernel and initrd file (already downloaded), and shows how profiles would be created using two different kickstarts\u2014one for a web server configuration and one for a database server. Then, a machine can be assigned to each profile.","According to exemplary aspects, a repo mirror can be set up for two repositories, and create a profile that will auto install those repository configurations on provisioned systems using that profile.","According to exemplary aspects, in addition to normal provisioning, the cobbler server  can support yet another option, called \u201cenchant\u201d. Enchant takes a configuration that has already been defined and applies it to a remote system that might not have the remote helper program installed. Users can use this command to replace a server that is being repurposed, or when no PXE environment can be created. Thus, the enchant option allows the koan client  to be executed remotely from the cobbler server .","According to aspects, if the cobbler server  is configured to mirror certain repositories, the cobbler server  can then be used to associate profiles with those repositories. Systems installed under those profiles can be auto configured to use these repository mirrors in commands and, if supported, these repositories can be leveraged. This can be useful for a large install base, when fast installation and upgrades for systems are desired, or software not in a standard repository exists and provisioned systems desire to know about that repository.","According to exemplary aspects, the cobbler server  can also keep track of the status of kickstarting machines. For example, the \u201ccobbler status\u201d will show when the cobbler server  thinks a machine started kickstarting and when it last requested a file. This can be a desirable way to track machines that may have gone inactive during kickstarts. The cobbler server  can also make a special request in the post section of the kickstart to signal when a machine is finished kickstarting.","According to exemplary aspects, for certain commands, the cobbler server  will create new virtualized guests on a machine in accordance with orders from the cobbler server . Once finished, an administrator can use additional commands on the guest or other operations. The cobbler server  can automatically name domains based on their MAC addresses. For re-kickstarting, the cobbler server  can reprovision the system, deleting any current data and replacing it with the results of a network install.","According to exemplary aspects, the cobbler server  can configure boot methods for the provisioning requested by the user. For example, the cobbler server  can configure a PXE environment, such as a network card BIOS. Alternatively, the cobbler server  can compile and configure information for koan client . The cobbler server  can also optionally configure DHCP and DNS configuration information.","According to exemplary aspects, the cobbler server  can serve the request of the koan client . The koan client  can acknowledge the service of information of the cobbler server  and can then initiate installation of the software being provisioned. Additionally, the koan client  can either install the requested software, e.g., replace the existing operating system, or install a virtual machine.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 2","FIG. 2"],"b":["100","102","115","120","205","210","115","102","115","102"]},"As shown in , the network  can include a number of target machines  and . For example, the target machines  and  can include computing systems such as servers, personal computers, laptop computers, etc. In embodiments, the target machines  and  can include hardware typically found in conventional computing systems (processors, memory, video cards, network interface cards, storage devices, and the like). One skilled in the art will realize that network  can include any number of target machines  and .","In embodiments, the cobbler server  can be configured to provide provisioning processes for software distributions utilizing provisioning objects as described above. In the provisioning processes for software distributions, the cobbler server  installs a particular software distribution on a target machine  or  utilizing the provisioning objects such as profiles, templates, system records including the target machine information, etc., as described above.","In embodiments, the provisioning objects can include all the data required by a cobbler server  to perform the software provisioning processes, such as the process described above, supported by the cobbler server . For example, the provisioning objects can include software distributions; configuration templates (templates for generating configuration files, such as kickstart files); distribution profile information (mapping a distribution to profile; a configuration template or a configuration file, and additional preferences, such as kernel options, template variables, or virtual machine settings); target machine information (information representing the mapping of a physical piece of hardware, plus hardware specific customizations, to a profile that it should run); repos information (information representing external or internal software repositories stored on the cobbler server); images (such as distributions representing an undefined executable image (like \u201cmemtest\u201d); a virtual machine to be cloned, or an ISO file for use in installing a virtual machine); and the like.","In embodiments, a configuration management system  can be coupled to the network . The configuration management system  can be configured to provide configuration management services to the network . The configuration management system  performs the configuration management services in order to maintain consistency and reliability of the network . The configuration management services can include tracking the types and configurations of the target machines  and  and the types and configurations of the resources of the target machines  and  (hardware included in the target machines  and , software installed on the target machines  and , data maintained by the target machines  and , and the like). Additionally, the configuration management services can include managing, setting and altering the configurations of the target machines  and  and the configurations of the resources of the target machines  and . The configuration management system  can be coupled to a configuration management data base (CMDB)  for storing information related to the configuration management services.","In embodiments, the configuration management system  can be configured as any type of open-source or proprietary configuration management system, protocol and\/or tool, and configured to support any type of configuration management services, protocols, or methods. For example, the configuration management  can be implemented utilizing known configuration management systems and tools such as Puppet\u2122, cfengine, bcfg2, chef, capistrano, fabric, or spine or any other type of proprietary or open-source systems or tools.","In embodiments, to perform the configuration management services, the configuration management system  can be configured to employ a set of management classes . A management class can include a description of rules, profiles, data files, or configurations that can be applied to the target machines  and . For instance, the management class can include rules, profiles, data, files, and\/or configurations that make the target machines  and  perform a particular role or be configured in a certain manner. For example, a particular management class can describe rules, files, and\/or configurations necessary to configure a \u201cwebserver\u201d once it is installed. The management class can be configured to include rules, files, profiles, and\/or configurations that describe other functions and operations of the target machines  and  such as resource configuration, service configuration, security configuration, and the like.","In embodiments, when a particular target machine is assigned a management class, the configuration management system  can be configured to apply the specific configuration of the management class to the particular target machine. When the specific configuration of a management class is altered or updated, the configuration management system  can be configured to apply the alteration or update to all target machines associated with the management class. As such, the configuration management system  can maintain consistency throughout the network . The configuration management system  can be configured to maintain the set of management classes  in the CMDB .","In embodiments, the configuration management system  can also be configured to maintain a network record . The network record  can be configured to include an identification of the target machines  and , in the network , associated with the management class assigned to the target machines  and . The configuration management system  can be configured to maintain the network record  in the CMDB .","In embodiments, the cobbler server  can be configured to cooperate with the configuration management system  in order to integrate the configuration management services with the provisioning processes. To achieve this, the cobbler server  can be configured to associate the provisioning objects with different management classes in the set of management classes . For example, the cobbler server  can associate the profiles, templates, system records, etc. with different management classes in the set of management classes . Accordingly, when the cobbler server  performs provisioning processes on a target machine  utilizing a particular provisioning object, the cobbler server  can configure the target machine  and the resources of the target machine  according to the configurations contained in the associated management class.","In embodiments, once a target machine  is provisioned, the cobbler server  can be configured to provide an indication  of the provisioning processes to the configuration management server . The indication  can be configured to include the identification of the target machine , the management class of the provisioned target machine , and the provisioning process performed (e.g. software provisioned). The configuration management system  can be configured to store the received indication  in the network record . As such, the configuration management system  can perform the configuration management services on the provisioned target machine .","In embodiments, the cobbler server  can be configured to support multiple numbers and types of configuration management systems. For example, the cobbler server  can be associated with a second configuration management system . The second configuration management system  can be configured to provide configuration management services for certain target machines, for example target machines , in the network . Additionally, the second configuration management system  can be configured to provide configuration management services to other networks such as network . The second configuration management system  can be coupled to a CMBD .","In embodiments, the second configuration management system  can be a different type of management system than the configuration management system . Accordingly, the second configuration management system  can support a different set of management classes , which can be configured in a different format than the set of management classes  and can be configured to include different configurations for the target machines, such as the target machine  in the network .","In embodiments, the cobbler server  can be configured to associate the set of management classes  with the provisioning objects, such as profiles, templates, and system records. For example, the cobbler server  can associate a particular management class from the set of management classes  with provisioning objects for provisioning to certain target machines, such as the target machine . When provisioning processes are performed on the target machine , the cobbler server  can be configured perform the provisioning processes according to the configuration in the associated management class for the configuration management system . Additionally, once the provisioning process is performed, the cobbler server  can provide an indication  to the second configuration management system , which can include the identification of the target machine , the management class of the target machine , and the provisioning process performed on the target machine . The second configuration management system  can be configured to store the indication  in a network record  for the second configuration management system . As such, the second configuration management system  can perform the configuration management services on the provisioned target machines .","In embodiments, the cobbler server  can be configured to select the particular management classes to be associated with the provisioning objects. Additionally, the cobbler server  can be configured to generate the set of management classes  and\/or  and determine the configuration contained in each management class in the set of management classes  and\/or . As such, the cobbler server  can be configured to provide the set of management classes  and  to the configuration management system  and , respectively. Accordingly, the cobbler server  can control how the target machine  will be managed by the configuration management systems.","In embodiments, the configuration management systems  and  can be configured to generate the set of management classes  and , respectively. As such, the configuration management systems  and  can be configured to provide the set of management classes  and , respectively, to the cobbler server . Whether generated or received, the cobbler server  can be configured to store a copy of the set of management classes  and  in the provisioning database .","As illustrated in , the cobbler server  can be configured to operate in conjunction with two configuration management servers of different types. One skilled in the art will realize that the cobbler server  can operate in conjunction with any number or type of configuration management system as described above. Likewise,  illustrates the configuration management systems  and  as being separate from the cobbler server . One skilled in the art will realize that the cobbler server  can be configured to include the configuration management systems  and  as part of the cobbler server . As such, the cobbler server  can be configured to manage the configuration management services prior to, during, and after provisioning processes.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 3","b":["300","115","102","300","302","304","308","308","302","120","300","120","300","102","120"]},"Processor  further communicates with network interface , such as an Ethernet or wireless data connection, which in turn communicates with one or more networks , such as the Internet or other public or private networks. Processor  also communicates with the provisioning database , and the cobbler server , to execute control logic and perform the provisioning processes and cooperate with configuration management systems  and , described above and below.","As illustrated, the cobbler server  can be implemented as a software application or program capable of being executed by a conventional computer platform. Likewise, the cobbler server  can also be implemented as a software module or program module capable of being incorporated in other software applications and programs. In either case, the cobbler server  can be implemented in any type of conventional proprietary or open-source computer language.","Additionally, the configuration management systems  and  can be implemented as a software application or program capable of being executed by a conventional computer platform. Likewise, the configuration management systems  and  can also be implemented as a software module or program module capable of being incorporated in other software applications and programs, such as the cobbler server . In either case, the configuration management systems  and  can be implemented in any type of conventional proprietary or open-source computer language.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 4","b":["100","402","404","102","102","102","120"]},"In , the cobbler server  can optionally generate a set of management classes and provide the classes to the configuration management systems. For example, the cobbler server  can be configured to generate the set of management classes  and\/or  and determine the configuration contained in each management class in the set of management classes  and\/or . The cobbler server  can be configured to provide the set of management classes  and  to the configuration management system  and , respectively. Accordingly, the cobbler server  can control how the target machine  will be managed by the configuration management systems. Alternatively, the configuration management systems  and  can be configured to generate the set of management classes  and , respectively. As such, the configuration management systems  and  can be configured to provide the set of management classes  and , respectively, to the cobbler server . Whether generated or received, the cobbler server  can be configured to store a copy of the set of management classes  and  in the provisioning database .","In , the cobbler server  can associate management classes from the set of management classes with the provisioning objects. For example, the cobbler server  can associate the profiles, templates, system records, etc. with different management classes in the set of management classes .","In , the cobbler server  can initiate a provisioning process for a provisioning object on a target machine. The cobbler server  can be configured to initiate the provisioning process upon the occurrence of any event, such as a request to perform the provisioning process, addition of a new target machine, change in resources of the target machine, and the like. The cobbler server  can perform any type of provisioning processes that can be associated with a provisioning object, for example, provisioning a software distribution to a target machine  according to a profile.","In , the cobbler server  can perform the provisioning process according to the provisioning object and the associated management class. For example, if the cobbler server  performs provisioning a software distribution to a target machine  according to a profile, the cobbler server  can install the software distribution according to the profile and can configure the target machine , the software distribution, and the resources of the target machine  according to the configurations contained in the management class associated with profile.","In , the cobbler server  can provide an indication of the provisioning process to the configuration management system. For example, if the cobbler server  performs a provisioning processes on the target machine , the indication  can include the identification of the target machine , the management class of the provisioned target machine , and the provisioning process performed (e.g. software provisioned). The configuration management system  can be configured to store the received indication  in the network record .","In , the process can end, but the process can return to any point and repeat.","While the invention has been described with reference to the exemplary embodiments thereof, those skilled in the art will be able to make various modifications to the described embodiments without departing from the true spirit and scope. The terms and descriptions used herein are set forth by way of illustration only and are not meant as limitations. In particular, although the method has been described by examples, the steps of the method may be performed in a different order than illustrated or simultaneously. Furthermore, to the extent that the terms \u201cincluding\u201d, \u201cincludes\u201d, \u201chaving\u201d, \u201chas\u201d, \u201cwith\u201d, or variants thereof are used in either the detailed description and the claims, such terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d As used herein, the term \u201cone or more of\u201d with respect to a listing of items such as, for example, A and B, means A alone, B alone, or A and B. Those skilled in the art will recognize that these and other variations are possible within the spirit and scope as defined in the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various features of the embodiments can be more fully appreciated, as the same become better understood with reference to the following detailed description of the embodiments when considered in connection with the accompanying figures, in which:",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
