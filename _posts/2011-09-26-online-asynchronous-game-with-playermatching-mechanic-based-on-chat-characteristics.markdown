---
title: Online asynchronous game with player-matching mechanic based on chat characteristics
abstract: A player-matching mechanic selects users for an online asynchronous game where players specify moves at different times. Values from instances of the game are used to determine characteristics of the users including at least one of gameplay characteristics or chat characteristics. Users can be chosen for instances of the game by comparing values corresponding to these characteristics.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08342967&OS=08342967&RS=08342967
owner: Zynga Inc.
number: 08342967
owner_city: San Francisco
owner_country: US
publication_date: 20110926
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CLAIM OF PRIORITY","TECHNICAL FIELD","BACKGROUND","DESCRIPTION OF EXAMPLE EMBODIMENTS","CONCLUSION"],"p":["This application is a continuation of and claims the benefit of priority under 35 U.S.C. \u00a7120 to U.S. patent application Ser. No. 13\/114,900, filed on May 24, 2011, which is hereby incorporated by reference herein in its entirety.","The present disclosure generally relates to games and applications in general and, in particular embodiments, to computer-implemented online games.","In many games, there is a virtual world or some other imagined playing space where a player\/user of the game controls one or more player characters (herein \u201ccharacter,\u201d \u201cplayer character,\u201d or \u201cPC\u201d). Player characters can be considered in-game representations of the controlling player. As used herein, the terms \u201cplayer,\u201d \u201cuser,\u201d \u201centity,\u201d and \u201cfriend\u201d may refer to the in-game player character controlled by that player, user, entity, or friend, unless context suggests otherwise. The game display can display a representation of the player character. A game engine accepts inputs from the player, determines player character actions, decides the outcomes of events, and presents the player with a game display illuminating what happened. In some games, there are multiple players, wherein each player controls one or more player characters.","In many computer games, there are various types of in-game assets (aka \u201crewards\u201d or \u201cloot\u201d) that a player character can obtain within the game. For example, a player character may acquire game points, gold coins, experience points, character levels, character attributes, virtual cash, game keys, or other in-game items of value. In many computer games, there are also various types of in-game obstacles that a player must overcome to advance within the game. In-game obstacles can include tasks, puzzles, opponents, levels, gates, actions, and so forth. In some games, a goal of the game may be to acquire certain in-game assets, which can then be used to complete in-game tasks or to overcome certain in-game obstacles. For example, a player may be able to acquire a virtual key (i.e., the in-game asset) that can then be used to open a virtual door (i.e., the in-game obstacle).","An electronic social networking system typically operates with one or more social networking servers providing interaction between users such that a user can specify other users of the social networking system as \u201cfriends.\u201d A collection of users and the \u201cfriend\u201d connections between users can form a social graph that can be traversed to find second, third and more remote connections between users, much like a graph of nodes connected by edges can be traversed.","Many online computer games are operated on an online social network. Such a network allows both users and other parties to interact with the computer games directly, whether to play the games or to retrieve game- or user-related information. Internet users may maintain one or more accounts with various service providers, including, for example, online game networking systems and online social networking systems. Online systems can typically be accessed using browser clients (e.g., MICROSOFT INTERNET EXPLORER, MOZILLA FIREFOX, GOOGLE CHROME).","In many computer games, there are various types of in-game actions that a player character can make within the game. For example, a player character in an online role-playing game may be able to interact with other player characters, build a virtual house, attack enemies, go on a quest, go to a virtual store to buy\/sell virtual items, and so forth. A player character in an online poker game may be able to play at specific tables, place bets of virtual currency for certain amounts, play or fold certain hands, play in a online poker tournament, and so forth.","Matching players for an online game presents additional challenges since players may wish to join an instance of a game without previous knowledge of other available players. One factor for matching players is typically skill level, which can be based, for example, on a win-loss record or a rating system. For example, in some operational settings, players are randomly matched within a skill level. In multiplayer synchronous games, where players are simultaneously engaged, physical proximity may also be considered as a factor for matching players in order to avoid problems due to server lag. In multiplayer asynchronous games, however, where players are not constrained to be simultaneously engaged, server proximity is less relevant and other criteria may be more useful for promoting a desirable player experience. Thus, there is a need for improved methods for matching players in online asynchronous games.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["100","101","120","120","130","160","100","160","160"],"i":["a","b"]},"Social networking system is a network-addressable computing system that can host one or more social graphs. Social networking system can generate, store, receive, and transmit social networking data. Social networking system can be accessed by the other components of system  either directly or via network . Game networking system is a network-addressable computing system that can host one or more online games. Game networking system can generate, store, receive, and transmit game-related data, such as, for example, game account data, game input, game state data, and game displays. Game networking system can be accessed by the other components of system  either directly or via network . Player  may use client system  to access, send data to, and receive data from social networking system and game networking system . Client system  can access social networking system  or game networking system directly, via network , or via a third-party system. As an example and not by way of limitation, client system  may access game networking system via social networking system . Client system  can be any suitable computing device, such as a personal computer, laptop, cellular phone, smart phone, computing tablet, and so forth.","Although  illustrates a particular number of players , social networking systems , game networking systems , client systems , and networks , this disclosure contemplates any suitable number of players , social networking systems , game networking systems , client systems , and networks . As an example and not by way of limitation, system  may include one or more game networking systems and no social networking systems . As another example and not by way of limitation, system  may include a system that comprises both social networking system and game networking system . Moreover, although  illustrates a particular arrangement of player , social networking system , game networking system , client system , and network , this disclosure contemplates any suitable arrangement of player , social networking system , game networking system , client system , and network .","The components of system  may be connected to each other using any suitable connections . For example, suitable connections  include wireline (such as, for example, Digital Subscriber Line (DSL) or Data Over Cable Service Interface Specification (DOCSIS)), wireless (such as, for example, Wi-Fi or Worldwide Interoperability for Microwave Access (WiMAX)) or optical (such as, for example, Synchronous Optical Network (SONET) or Synchronous Digital Hierarchy (SDH)) connections. In particular embodiments, one or more connections  each include an ad hoc network, an intranet, an extranet, a VPN, a LAN, a WLAN, a WAN, a WWAN, a MAN, a portion of the Internet, a portion of the PSTN, a cellular telephone network, another type of connection, or a combination of two or more such connections. Connections  need not necessarily be the same throughout system . One or more first connections  may differ in one or more respects from one or more second connections . Although  illustrates particular connections between player , social networking system , game networking system , client system , and network , this disclosure contemplates any suitable connections between player , social networking system , game networking system , client system , and network . As an example and not by way of limitation, in particular embodiments, client system  may have a direct connection to social networking system or game networking system , bypassing network .","Online Games and Game Systems","In an online computer game, a game engine manages the game state of the game. Game state comprises all game play parameters, including player character state, non-player character (NPC) state, in-game object state, game world state (e.g., internal game clocks, game environment), and other game play parameters. Each player  controls one or more player characters (PCs). The game engine controls all other aspects of the game, including non-player characters (NPCs), and in-game objects. The game engine also manages the game state, including player character state for currently active (online) and inactive (offline) players.","An online game can be hosted by game networking system , which can be accessed using any suitable connection with a suitable client system . A player may have a game account on game networking system , wherein the game account can contain a variety of information associated with the player (e.g., the player's personal information, financial information, purchase history, player character state, and game state). In some embodiments, a player may play multiple games on game networking system , which may maintain a single game account for the player with respect to all the games, or multiple individual game accounts for each game with respect to the player. In some embodiments, game networking system can assign a unique identifier to each player  of an online game hosted on game networking system . Game networking system can determine that a player  is accessing the online game by reading the user's cookies, which may be appended to HyperText Transfer Protocol (HTTP) requests transmitted by client system , and\/or by the player  logging onto the online game.","In particular embodiments, player  may access an online game and control the game's progress via client system  (e.g., by inputting commands to the game at the client device). Client system  can display the game interface, receive inputs from player , transmit user inputs or other events to the game engine, and receive instructions from the game engine. The game engine can be executed on any suitable system (such as, for example, client system , social networking system , or game networking system ). As an example and not by way of limitation, client system  can download client components of an online game, which are executed locally, while a remote game server, such as game networking system , provides backend support for the client components and may be responsible for maintaining application data of the game, processing the inputs from the player, updating and\/or synchronizing the game state based on the game logic and each input from the player, and transmitting instructions to client system . As another example and not by way of limitation, each time player  provides an input to the game through the client system  (such as, for example, by typing on the keyboard or clicking the mouse of client system ), the client components of the game may transmit the player's input to game networking system ","Game Systems, Social Networks, and Social Graphs","In an online multiplayer game, players may control player characters (PCs), while a game engine controls non-player characters (NPCs) and game features. The game engine also manages player character state and game state and tracks the state for currently active (i.e., online) players and currently inactive (i.e., offline) players. A player character can have a set of attributes and a set of friends associated with the player character. As used herein, the term \u201cplayer character state\u201d can refer to any in-game characteristic of a player character, such as location, assets, levels, condition, health, status, inventory, skill set, name, orientation, affiliation, specialty, and so on. Player characters may be displayed as graphical avatars within a user interface of the game. In other implementations, no avatar or other graphical representation of the player character is displayed. Game state encompasses the notion of player character state and refers to any parameter value that characterizes the state of an in-game element, such as a non-player character, a virtual object (such as a wall or castle), and so forth. The game engine may use player character state to determine the outcome of game events, while sometimes also considering set or random variables. Generally, a player character's probability of having a more favorable outcome is greater when the player character has a better state. For example, a healthier player character is less likely to die in a particular encounter relative to a weaker player character or non-player character. In some embodiments, the game engine can assign a unique client identifier to each player.","In particular embodiments, player  may access particular game instances of an online game. A game instance is a copy of a specific game play area that is created during runtime. In particular embodiments, a game instance is a discrete game play area where one or more players  can interact in synchronous or asynchronous play. A game instance may be, for example, a level, zone, area, region, location, virtual space, or other suitable play area. A game instance may be populated by one or more in-game objects. Each object may be defined within the game instance by one or more variables, such as, for example, position, height, width, depth, direction, time, duration, speed, color, and other suitable variables. A game instance may be exclusive (i.e., accessible by specific players) or non-exclusive (i.e., accessible by any player). In particular embodiments, a game instance is populated by one or more player characters controlled by one or more players  and one or more in-game objects controlled by the game engine. When accessing an online game, the game engine may allow player  to select a particular game instance to play from a plurality of game instances. Alternatively, the game engine may automatically select the game instance that player  will access. In particular embodiments, an online game comprises only one game instance that all players  of the online game can access.","In particular embodiments, a specific game instance may be associated with one or more specific players. A game instance is associated with a specific player when one or more game parameters of the game instance are associated with the specific player. As an example and not by way of limitation, a game instance associated with a first player may be named \u201cFirst Player's Play Area.\u201d This game instance may be populated with the first player's PC and one or more in-game objects associated with the first player. In particular embodiments, a game instance associated with a specific player may only be accessible by that specific player. As an example and not by way of limitation, a first player may access a first game instance when playing an online game, and this first game instance may be inaccessible to all other players. In other embodiments, a game instance associated with a specific player may be accessible by one or more other players, either synchronously or asynchronously with the specific player's game play. As an example and not by way of limitation, a first player may be associated with a first game instance, but the first game instance may be accessed by all first-degree friends in the first player's social network. In particular embodiments, the game engine may create a specific game instance for a specific player when that player accesses the game. As an example and not by way of limitation, the game engine may create a first game instance when a first player initially accesses an online game, and that same game instance may be loaded each time the first player accesses the game. As another example and not by way of limitation, the game engine may create a new game instance each time a first player accesses an online game, wherein each game instance may be created randomly or selected from a set of predetermined game instances. In particular embodiments, the set of in-game actions available to a specific player may be different in a game instance that is associated with that player compared to a game instance that is not associated with that player. The set of in-game actions available to a specific player in a game instance associated with that player may be a subset, superset, or independent of the set of in-game actions available to that player in a game instance that is not associated with him. As an example and not by way of limitation, a first player may be associated with Blackacre Farm in an online farming game. The first player may be able to plant crops on Blackacre Farm. If the first player accesses a game instance associated with another player, such as Whiteacre Farm, the game engine may not allow the first player to plant crops in that game instance. However, other in-game actions may be available to the first player, such as watering or fertilizing crops on Whiteacre Farm.","In particular embodiments, a game engine can interface with a social graph. Social graphs are models of connections between entities (e.g., individuals, users, contacts, friends, players, player characters, non-player characters, businesses, groups, associations, concepts, etc.). These entities are considered \u201cusers\u201d of the social graph; as such, the terms \u201centity\u201d and \u201cuser\u201d may be used interchangeably when referring to social graphs herein. A social graph can have a node for each entity and edges to represent relationships between entities. A node in a social graph can represent any entity. In particular embodiments, a unique client identifier can be assigned to each user in the social graph. In general, this disclosure assumes that at least one entity of a social graph is a player or player character in an online multiplayer game, although this disclosure is applicable to players or player characters that are not characterized as entities of a social graph.","The minimum number of edges required to connect a player (or player character) to another user is considered the degree of separation between them. For example, where the player and the user are directly connected (one edge), they are deemed to be separated by one degree of separation. The user would be a so-called \u201cfirst-degree friend\u201d of the player. Where the player and the user are connected through one other user (two edges), they are deemed to be separated by two degrees of separation. This user would be a so-called \u201csecond-degree friend\u201d of the player. Where the player and the user are connected through N edges (or N\u22121 other users), they are deemed to be separated by N degrees of separation. This user would be a so-called \u201cNth-degree friend.\u201d As used herein, the term \u201cfriend\u201d means only first-degree friends, unless context suggests otherwise.","Within the social graph, each player (or player character) has a social network. A player's social network includes all users in the social graph within Ndegrees of the player, where Nis the maximum degree of separation allowed by the system managing the social graph (such as, for example, social networking system or game networking system ). In one embodiment, Nequals 1, such that the player's social network includes only first-degree friends. In another embodiment, Nis unlimited and the player's social network is coextensive with the social graph.","In particular embodiments, the social graph is managed by game networking system , which is managed by the game operator. In other embodiments, the social graph is part of a social networking system managed by a third-party (e.g., Facebook, Friendster, Myspace). In yet other embodiments, player  has a social network on both game networking system and social networking system , wherein player  can have a social network on the game networking system that is a subset, superset, or independent of the player's social network on social networking system . In such combined systems, game network system can maintain social graph information with edge type attributes that indicate whether a given friend is an \u201cin-game friend,\u201d an \u201cout-of-game friend,\u201d or both. The various embodiments disclosed herein are operable when the social graph is managed by social networking system , game networking system , or both.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 2","b":["201","200","200","200","201"]},"As shown in , Player  has direct connections with several friends. When Player  has a direct connection with another individual, that connection is referred to as a first-degree friend. In social network , Player  has four first-degree friends. That is, Player  is directly connected to Friend , Friend , Friend , and Friend . In a social graph, it is possible for individuals to be connected to other individuals through their first-degree friends (i.e., friends of friends). As described above, each edge required to connect a player to another user is considered the degree of separation. For example,  shows that Player  has three second-degree friends to which he is connected via his connection to his first-degree friends. Second-degree Friend  and Friend  are connected to Player  via his first-degree Friend , and second-degree Friend  is connected to Player  via his first-degree Friend . The limit on the depth of friend connections, or the number of degrees of separation for associations, that Player  is allowed is typically dictated by the restrictions and policies implemented by social networking system ","In various embodiments, Player  can have Nth-degree friends connected to him through a chain of intermediary degree friends as indicated in . For example, Nth-degree Friend  is connected to Player  via second-degree Friend  and one or more other higher-degree friends. Various embodiments may take advantage of and utilize the distinction between the various degrees of friendship relative to Player .","In particular embodiments, a player (or player character) can have a social graph within an online multiplayer game that is maintained by the game engine and another social graph maintained by a separate social networking system.  depicts an example of in-game social network  and out-of-game social network . In this example, Player  has out-of-game connections  to a plurality of friends, forming out-of-game social network . Here, Friend  and Friend  are first-degree friends with Player  in his out-of-game social network . Player  also has in-game connections  to a plurality of players, forming in-game social network . Here, Friend , Friend , and Friend  are first-degree friends with Player  in his in-game social network , and Friend  is a second-degree friend. In some embodiments, it is possible for a friend to be in both the out-of-game social network  and the in-game social network . Here, Friend  has both an out-of-game connection  and an in-game connection  with Player , such that Friend  is in both Player 's in-game social network  and Player 's out-of-game social network .","As with other social networks, Player  can have second-degree and higher-degree friends in both his in-game and out of game social networks. In some embodiments, it is possible for Player  to have a friend connected to him both in his in-game and out-of-game social networks, wherein the friend is at different degrees of separation in each network. For example, if Friend  had a direct in-game connection with Player , Friend  would be a second-degree friend in Player 's out-of-game social network, but a first-degree friend in Player 's in-game social network. In particular embodiments, a game engine can access in-game social network , out-of-game social network , or both.","In particular embodiments, the connections in a player's in-game social network can be formed both explicitly (e.g., users must \u201cfriend\u201d each other) and implicitly (e.g., the system observes user behaviors and \u201cfriends\u201d users to each other). Unless otherwise indicated, reference to a friend connection between two or more players can be interpreted to cover both explicit and implicit connections, using one or more social graphs and other factors to infer friend connections. The friend connections can be unidirectional or bidirectional. It is also not a limitation of this description that two players who are deemed \u201cfriends\u201d for the purposes of this disclosure are not friends in real life (i.e., in disintermediated interactions or the like), but that could be the case.","Game Systems and Game Interfaces","A game event may be an outcome of an engagement, a provision of access, rights and\/or benefits, or the obtaining of some assets (e.g., health, money, strength, inventory, land, etc.). A game engine determines the outcome of a game event according to a variety of factors, such as the game rules, a player character's in-game actions, player character state, game state, interactions of other player characters, and random calculations. Engagements can include simple tasks (e.g., plant a crop, clean a stove), complex tasks (e.g., build a farm or business, run a caf\u00e9), or other events.","An online game can be hosted by a game networking system, which can be accessed over any suitable network with an appropriate client system (e.g., as in ). A player may have a game system account on a game system, wherein the game system account can contain a variety of information about the player (e.g., the player's personal information, player character state, game state, etc.). In various embodiments, an online game can be embedded into a third-party website. The game can be hosted by the networking system of the third-party website, or it can be hosted on the game system and merely accessed via the third-party website. The embedded online game can be hosted solely on a server of the game system or use a third-party vendor server. In addition, any combination of the functions of the present disclosure can be hosted on or provided from any number of distributed network resources. For example, one or more executable code objects that implement all or a portion of the game can be downloaded to a client system for execution.","A webpage-based game interface for an online game may be accessed by a browser client (e.g., MICROSOFT INTERNET EXPLORER, MOZILLA FIREFOX, GOOGLE CHROME). In various embodiments, a user of a client system  can use a browser client to access the online game over the Internet (or other suitable network). A game interface may be automatically generated and presented to the user in response to the user visiting or accessing the game operator's website or a third-party's website from client system  with a browser client. Game system can transmit data to client system , allowing it to display the game interface, which is typically some type of graphic user interface. For example, the webpage downloaded to client system  may include an embedded call that causes client system  to download an executable object, such as a Flash .SWF object, which executes on client system  and renders the game within the context of the webpage. Other interface types are possible, such as server-side rendering and the like. Typically a game interface is configured to receive signals from the user via client system . For example, the user may click on a game interface or enter commands from a keyboard or other suitable input device. The game engine can respond to these signals to allow game play. The display of a game interface may change based on the output of the game engine, the input of the player, and other signals from game system and client system .","Typically a game interface can display various game components, such as the game environment, options available to the player (e.g., in-game actions, preferences, settings, etc.), game results, and so forth. Some components of the game interface may be static, while others may be dynamic (e.g., changing with game play). The user may be able to interact with some components (e.g., player character, NPCs, virtual objects, etc.) and not interact with other components (e.g., the background of the virtual world, such as the virtual street or sidewalk). The user can engage in specific in-game actions or activities by providing input to the game interface.","Virtual Currency","In various embodiments, players within the game can acquire virtual currency. In such games, the virtual currency might be represented by virtual coins, virtual cash, or by a number or value stored by the server for that player's benefit. Such virtual currency represents units of value for use in the online game system and is analogous to legal currency. Virtual currency can be purchased in one or more actual cash or credit transactions by a player, where the legal currency is transferred using a credit\/debit\/charge card transaction conveyed over a financial network. In some embodiments, a player may earn virtual currency by taking action in the game. For example, a player may be rewarded with one or more units of virtual currency after completing a task, quest, challenge, or mission within the game. For example, a farming game might reward  gold coins each time a virtual crop is harvested.","In some embodiments, virtual currency can be used to purchase one or more in-game assets or other benefits. For example, a player may be able to exchange virtual currency for a desired level, access, right, or item in an online game. In one embodiment, legal currency can be used to directly purchase an in-game asset or other benefit. The player can select the desired in-game asset or other benefit. Once the selections are made, the player can place the order to purchase the in-game asset or other benefit. This order is received by the game system, which can then process the order. If the order is processed successfully, an appropriate financial account associated with the player can be debited by the amount of virtual currency or legal currency needed to buy the selected in-game asset or other benefit.","In some embodiments, multiple types of virtual currency may be available for purchase from the game system operator. For example, an online game may have virtual gold coins and virtual cash. The different types of virtual currency may have different exchange rates with respect to legal currency and each other. For example, a player may be able to exchange $1 in legal currency for either 100 virtual gold coins or $2 in virtual cash, but virtual gold coins may not be exchanged for virtual cash. Similarly, where in-game assets and other benefits can be purchased with virtual currency, they may have different exchange rates with respect to the different types of virtual currency. For example, a player may be able to buy a virtual business object for $10 in virtual cash, but may not purchase the virtual business object for virtual gold coins alone. In some embodiments, certain types of virtual currency can be acquired by engaging in various in-game actions while other types of virtual currency can only be acquired by exchanging legal currency. For example, a player may be able to acquire virtual gold coins by selling virtual goods in a business, but can only acquire virtual cash by exchanging legal currency. In some implementations, virtual cash may also be awarded for leveling up in the game.","Player-Matching Mechanic for Asynchronous Games","In addition to an opponent's skill level, the quality of a player's experience in an online asynchronous game may be affected by other factors related to his opponent's moves and social behavior related to those moves. For example, when the playing frequency (e.g., how often a player makes a move in the game) varies substantially between two players, one of them may lose interest or even forget about the game. Similarly, chatting frequency (e.g., how often a player chats with an opponent during a game) varies substantially between players, but can significantly affect engagement of other users. For example, while not making a move, a user may be enticed to enter a game because he has received a chat message from another player. On the other hand, if a player does not respond to chats, one or both of the players may become frustrated with the experience. In accordance with certain embodiments, a player-matching mechanic facilitates player matching in online asynchronous games by comparing user values for at least one of gameplay characteristics or chat characteristics.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 3","b":"300"},"A first operation  includes receiving values for moves corresponding to users playing in instances of the online asynchronous game where players specify moves at different times. A second operation  includes determining gameplay characteristics for the users from the moves to characterize gameplay patterns over time. A third operation  includes matching a first user and a second user for a selected instance of the online asynchronous game by comparing their corresponding gameplay characteristics.","The gameplay characteristics may include a variety of move-related features.  shows an example method , where determining gameplay characteristics  includes calculating values for one or more of playing frequency , playing intensity , or playing style . For example, the playing frequency  may be calculated as a value for how often that user plays the online asynchronous game with respect to a reference time zone (e.g., typically once a day by Eastern Standard Time (EST)). In this context, the reference time zone may be more specifically and narrowly defined, for example, as a portion of a conventional time zone (e.g., 8 pm-4 am EST). Alternatively, the playing frequency  may be calculated as a value for how long that user waits in the online asynchronous game before responding to another player (e.g., typically ten hours). As another example, playing intensity  may be calculated as a value for how many simultaneous instances of the online asynchronous game that user plays (e.g., typically ten simultaneous games). As yet another example, playing style  may be calculated as one or more values for how often that user employs selected move patterns in the online asynchronous game (e.g., typically includes complex strategy moves). These selected move patterns may include selectively enabled special features of a game that some but not all users prefer to include in the game experience.","Then, with available gameplay characteristics, it is possible to match players with similar characteristics or selectively dissimilar characteristics depending on the requirements of the operational setting. For example, in some cases it may be desirable to match relatively similar players to ensure compatibility (e.g., similar playing frequencies). Similarity may also include players from different time zones who are active simultaneously. For example, someone who plays every morning in Japan could be matched with someone who plays at night-time in the United States in the case where they wish to play at the same or similar times relative to the reference time zone (e.g., EST). Alternatively, it may be desirable to match players with quantified dissimilarities (e.g., different playing frequencies) to alter the players' gaming experience and measure the results (e.g., whether the lower-frequency player now plays faster or the higher-frequency player now plays slower).  shows an example method  that includes classifying users into groups that each correspond to a different range of gameplay values for some measure of gameplay characteristics (e.g., frequency of play) at a first operation . The method  then includes matching the first user and the second user by selecting them from an identical group or from different groups at a second operation . For example, the different groups may be characterized by a threshold difference between gameplay values in the two groups (e.g., with respect to minimum and maximum playing frequency values for each group). The selection within a group can be carried out randomly (e.g., with a conventional random number generator) or by applying another selection principle such as skill level or chat characteristics as discussed below.","In addition to gameplay characteristics based on moves played, players may be matched by the characteristics of chat communications between players in an online asynchronous game.  shows a flowchart that illustrates a method  of matching two or more players in an online asynchronous game according to an example embodiment.","A first operation  includes receiving values for chat communications corresponding to users playing in instances of the online asynchronous game where players specify moves at different times. For example, the chat communications may occur during the moves or between moves of the game. A second operation  includes determining chat characteristics for the users from the chat communications to characterize chat patterns over time. A third operation  includes matching a first user and a second user for a selected instance of the online asynchronous game by comparing their corresponding chat characteristics.","The chat characteristics may include a variety of move-related features.  shows an example method , where determining chat characteristics  includes calculating values for one or more of chat frequency , chat intensity  or chat substance . For example, the chat frequency  may be calculated as a value for how often that user initiates a chat communication during the online asynchronous game (e.g., typically after every move). Alternatively, the chat frequency  may be calculated as a value for how often that user participates in a chat communication during the online asynchronous game (e.g., typically at the start and the end of a game). As another example, chat intensity  may be calculated as a value for a size of a chat communication for that user in the online asynchronous game. For example, this size (e.g., number of words or characters) may be calculated for a typical or random discrete chat communication or alternatively for the union of all chat communications during an instance of the game. As yet another example, chat substance  may be calculated as one or more values for how often that user includes selected text elements in a chat communication during the online asynchronous game (e.g., typically uses complimentary words to describe opponent).","Then, similarly to the above-described matching by gameplay characteristics, it is possible to match players with similar chat characteristics or selectively dissimilar chat characteristics depending on the requirements of the operational setting. For example, in some cases it may be desirable to match relatively similar players to ensure compatibility (e.g., similar chat frequencies). Alternatively, it may be desirable to match players with quantified dissimilarities (e.g., different chat frequencies, typically initiates chats or chats with friend-list players versus chatting with random players) to alter the players' gaming experience and measure the results (e.g., whether the lower-frequency player now chats more frequently or the higher-frequency player now chats less frequently).  shows an example method  that includes classifying users into groups that each correspond to a different range of chat values for some measure of chat characteristics (e.g., chat frequency) at a first operation . The method  then includes matching the first user and the second user by selecting them from an identical group or from different groups at a second operation . For example, the different groups may be characterized by a threshold difference between chat values in the two groups (e.g., with respect to minimum and maximum chat frequency values for each group).","In some embodiments chat values may be used in combination with gameplay values for matching players. For example, players may first be separated into groups by comparing gameplay values, and then players may be selected from an identical group or from different groups by comparing chat values. Similarly, players may be first grouped according to gameplay values, then grouped according to chat values, and then randomly selected from identical or different groups. As discussed above, skill level (e.g., a skill rating) may also used in the selection process, for example, by first grouping for skill level, then grouping for gameplay values, then grouping for chat values, and then randomly selecting from identical or different groups. In general, separate or recursive groupings can be made according to one or more criteria for skill level, gameplay values or chat values, and the selection process may include one or more of these criteria or a randomization process.","In some embodiments the asynchronous game may be considered as a family of games that share common features so that gameplay characteristics or chat characteristics may be used to match players in an instance of a specific game variant within the family. For example, gameplay characteristics and chat characteristics corresponding to a family of strategic games may be used to match two players in an instance of a chess game even if those two players had not previously played chess in the online system.","Additional embodiments relate to an apparatus for carrying out any one of the above-described methods (e.g., as a game mechanic), where the apparatus includes a computer for executing computer instructions related to the method. In this context the computer may be a general-purpose computer including, for example, a processor, memory, storage, and input\/output devices (e.g., keyboard, display, disk drive, Internet connection, etc.). However, the computer may include circuitry or other specialized hardware for carrying out some or all aspects of the method. In some operational settings, the apparatus or computer may be configured as a system that includes one or more modular units, each of which is configured to carry out some aspects of the method either in software, in hardware or in some combination thereof. For example, the system may be configured as part of a computer network that includes the Internet. At least some values for the results of the method can be saved for later use in a computer-readable medium, including memory units (e.g., RAM (Random Access Memory), ROM (Read Only Memory)) and storage devices (e.g., hard-disk systems, optical storage systems).","Additional embodiments also relate to a computer-readable medium that stores (e.g., tangibly embodies) a computer program for carrying out any one of the above-described methods by means of a computer. The computer program may be written, for example, in a general-purpose programming language (e.g., C, C++) or some specialized application-specific language. The computer program may be stored as an encoded file in some useful format (e.g., binary, American Standard Code for Information Interchange (ASCII)). In some contexts, the computer-readable medium may be alternatively described as a computer-useable medium, a computer-storage medium, a computer-program medium, machine-readable medium or some alternative non-transitory storage medium. Depending on the operational setting, specified values for the above-described methods may correspond to input files for the computer program or computer.","Data Flow",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 9","b":["500","500","530","520","520","500","530","520","520","525","545","565","520","520","530","520","520","530","520","520","530","530"],"i":["a","b","a","b ","a ","b ","a ","b ","a ","b "]},"Client system  can receive and transmit data  to and from game networking system . This data can include, for example, webpages, messages, game inputs, game displays, HTTP packets, data requests, transaction information, updates, and other suitable data. At some other time, or at the same time, game networking system can communicate data ,  (e.g., game state information, game system account information, page info, messages, data requests, updates, etc.) with other networking systems, such as social networking system (e.g., FACEBOOK, MYSPACE, etc.). Client system  can also receive and transmit data  to and from social networking system . This data can include, for example, webpages, messages, social graph information, social network displays, HTTP packets, data requests, transaction information, updates, and other suitable data.","Communication between client system , social networking system , and game networking system can occur over any appropriate electronic communication medium or network using any suitable communications protocols. For example, client system , as well as various servers of the systems described herein, may include Transport Control Protocol\/Internet Protocol (TCP\/IP) networking stacks to provide for datagram and transport functions. Of course, any other suitable network and transport layer protocols can be utilized.","In addition, hosts or end-systems described herein may use a variety of higher layer communications protocols, including client-server (or request-response) protocols, such as HTTP. Other communications protocols, such as HTTP Secure (HTTP-S), File Transfer Protocol (FTP), Simple Network Management Protocol (SNMP), Telnet, and a number of other protocols, may also be used. In addition, a server in one interaction context may be a client in another interaction context. In particular embodiments, the information transmitted between hosts may be formatted as HyperText Markup Language (HTML) documents including HTML5 documents. Other structured document languages or formats can be used, such as Extensible Markup Language (XML), and the like. Executable code objects, such as JavaScript and ActionScript, can also be embedded in the structured documents.","In some client-server protocols, such as the use of HTML over HTTP, a server generally transmits a response to a request from a client. The response may comprise one or more data objects. For example, the response may comprise a first data object, followed by subsequently transmitted data objects. In particular embodiments, a client request may cause a server to respond with a first data object, such as an HTML page, which itself refers to other data objects. A client application, such as a browser, will request these additional data objects as it parses or otherwise processes the first data object.","In particular embodiments, an instance of an online game can be stored as a set of game state parameters that characterize the state of various in-game objects, such as, for example, player character state parameters, non-player character parameters, and virtual item parameters. In particular embodiments, a game state is maintained in a database as a serialized, unstructured string of text data as a so-called Binary Large Object (BLOB). When a player accesses an online game on game networking system , the BLOB containing the game state for the instance corresponding to the player can be transmitted to client system  for processing by a client-side executable object. In particular embodiments, the client-side executable may be a FLASH-based game, which can de-serialize the game state data in the BLOB. As a player plays the game, the game logic implemented at client system  maintains and modifies the various game state parameters locally. The client-side game logic may also batch game events, such as mouse clicks, and transmit these events to game networking system . Game networking system may itself operate by retrieving a copy of the BLOB from a database or an intermediate memory cache (memcache) layer. Game networking system can also de-serialize the BLOB to resolve the game state parameters and execute its own game logic based on the events in the batch file of events transmitted by the client to synchronize the game state on the server side. Game networking system may then re-serialize the game state, now modified, into a BLOB and pass this to a memory cache layer for lazy updates to a persistent database.","With a client-server environment in which the online games may run, one server system, such as game networking system , may support multiple client systems . At any given time, there may be multiple players at multiple client systems  all playing the same online game. In practice, the number of players playing the same game at the same time may be very large. As the game progresses with each player, multiple players may provide different inputs to the online game at their respective client systems , and multiple client systems  may transmit multiple player inputs and\/or game events to game networking system for further processing. In addition, multiple client systems  may transmit other types of application data to game networking system ","In particular embodiments, a computer-implemented game may be a text-based or turn-based game implemented as a series of web pages that are generated after a player selects one or more actions to perform. The web pages may be displayed in a browser client executed on client system . As an example and not by way of limitation, a client application downloaded to client system  may operate to serve a set of webpages to a player. As another example and not by way of limitation, a computer-implemented game may be an animated or rendered game executable as a stand-alone application or within the context of a webpage or other structured document. In particular embodiments, the computer-implemented game may be implemented using Adobe Flash-based technologies. As an example and not by way of limitation, a game may be fully or partially implemented as a SWF object that is embedded in a web page and executable by a Flash media player plug-in. In particular embodiments, one or more described webpages may be associated with, or accessed by, social networking system . This disclosure contemplates using any suitable application for the retrieval and rendering of structured documents hosted by any suitable network-addressable resource or website.","Application event data of a game is any data relevant to the game (e.g., player inputs). In particular embodiments, each application datum may have a name and a value, and the value of the application datum may change (i.e., be updated) at any time. When an update to an application datum occurs at client system , either caused by an action of a game player or by the game logic itself, client system  may need to inform game networking system of the update. For example, if the game is a farming game with a harvest mechanic (such as Zynga FarmVille), an event can correspond to a player clicking on a parcel of land to harvest a crop. In such an instance, the application event data may identify an event or action (e.g., harvest) and an object in the game to which the event or action applies. For illustration purposes and not by way of limitation, system  is discussed in reference to updating a multi-player online game hosted on a network-addressable system (such as, for example, social networking system or game networking system ), where an instance of the online game is executed remotely on a client system , which then transmits application event data to the hosting system such that the remote game server synchronizes game state associated with the instance executed by the client system .","In a particular embodiment, one or more objects of a game may be represented as an Adobe Flash object. Flash may manipulate vector and raster graphics, and supports bidirectional streaming of audio and video. \u201cFlash\u201d may mean the authoring environment, the player, or the application files. In particular embodiments, client system  may include a Flash client. The Flash client may be configured to receive and run the Flash application or game object code from any suitable networking system (such as, for example, social networking system or game networking system ). In particular embodiments, the Flash client may be run in a browser client executed on client system . A player can interact with Flash objects using client system  and the Flash client. The Flash objects can represent a variety of in-game objects. Thus, the player may perform various in-game actions on various in-game objects by making various changes and updates to the associated Flash objects. In particular embodiments, in-game actions can be initiated by clicking or similarly interacting with a Flash object that represents a particular in-game object. For example, a player can interact with a Flash object to use, move, rotate, delete, attack, shoot, or harvest an in-game object. This disclosure contemplates performing any suitable in-game action by interacting with any suitable Flash object. In particular embodiments, when the player makes a change to a Flash object representing an in-game object, the client-executed game logic may update one or more game state parameters associated with the in-game object. To ensure synchronization with the Flash object shown to the player at client system , the Flash client may send the events that caused the game state changes to the in-game object to game networking system . However, to expedite the processing and hence the speed of the overall gaming experience, the Flash client may collect a batch of some number of events or updates into a batch file. The number of events or updates may be determined by the Flash client dynamically or determined by game networking system based on server loads or other factors. For example, client system  may send a batch file to game networking system whenever  updates have been collected or after a threshold period of time, such as every minute.","As used herein, the term \u201capplication event data\u201d may refer to any data relevant to a computer-implemented game application that may affect one or more game state parameters, including, for example and without limitation, changes to player data or metadata, changes to player social connections or contacts, player inputs to the game, and events generated by the game logic. In particular embodiments, each application datum may have a name and a value. The value of an application datum may change at any time in response to the game play of a player or in response to the game engine (e.g., based on the game logic). In particular embodiments, an application data update occurs when the value of a specific application datum is changed. In particular embodiments, each application event datum may include an action or event name and a value (such as an object identifier). Thus, each application datum may be represented as a name-value pair in the batch file. The batch file may include a collection of name-value pairs representing the application data that have been updated at client system . In particular embodiments, the batch file may be a text file, and the name-value pairs may be in string format.","In particular embodiments, when a player plays an online game on client system , game networking system may serialize all the game-related data, including, for example and without limitation, game states, game events, and user inputs, for this particular user and this particular game into a BLOB and store the BLOB in a database. The BLOB may be associated with an identifier that indicates that the BLOB contains the serialized game-related data for a particular player and a particular online game. In particular embodiments, while a player is not playing the online game, the corresponding BLOB may be stored in the database. This enables a player to stop playing the game at any time without losing the current state of the game that the player is in. When a player resumes playing the game next time, game networking system may retrieve the corresponding BLOB from the database to determine the most-recent values of the game-related data. In particular embodiments, while a player is playing the online game, game networking system may also load the corresponding BLOB into a memory cache so that the game system may have faster access to the BLOB and the game-related data contained therein.","Systems and Methods","In particular embodiments, one or more described webpages may be associated with a networking system or networking service. However, alternate embodiments may have application to the retrieval and rendering of structured documents hosted by any type of network addressable resource or web site. Additionally, as used herein, a user may be an individual, a group, or an entity (such as a business or third party application).","Particular embodiments may operate in a wide area network environment, such as the Internet, including multiple network addressable systems.  illustrates an example network environment  in which various example embodiments may operate. Network cloud  generally represents one or more interconnected networks, over which the systems and hosts described herein can communicate. Network cloud  may include packet-based wide area networks (such as the Internet), private networks, wireless networks, satellite networks, cellular networks, paging networks, and the like. As  illustrates, particular embodiments may operate in a network environment comprising one or more networking systems, such as social networking system , game networking system , and one or more client systems . The components of social networking system and game networking system operate analogously; as such, hereinafter they may be referred to simply as networking system . Client systems  are operably connected to the network environment via a network service provider, a wireless carrier, or any other suitable means.","Networking system  is a network addressable system that, in various example embodiments, comprises one or more physical servers  and data stores . The one or more physical servers  are operably connected to network cloud  via, by way of example, a set of routers and\/or networking switches . In an example embodiment, the functionality hosted by the one or more physical servers  may include web or HTTP servers, and FTP servers, as well as, without limitation, webpages and applications implemented using Common Gateway Interface (CGI) script, PHP Hyper-text Preprocessor (PHP), Active Server Pages (ASP), HTML, XML, Java, JavaScript, Asynchronous JavaScript and XML (AJAX), Flash, ActionScript, and the like.","Physical servers  may host functionality directed to the operations of networking system . Hereinafter servers  may be referred to as server , although server  may include numerous servers hosting, for example, networking system , as well as other content distribution servers, data stores, and databases. Data store  may store content and data relating to, and enabling, operation of networking system  as digital data objects. A data object, in particular embodiments, is an item of digital information typically stored or embodied in a data file, database, or record. Content objects may take many forms, including: text (e.g., American Standard Code for Information Interchange (ASCII), Standard Generalized Markup Language (SGML), HTML), images (e.g., jpeg, tif and gif), graphics (vector-based or bitmap), audio, video (e.g., mpeg), or other multimedia, and combinations thereof. Content object data may also include executable code objects (e.g., games executable within a browser window or frame), podcasts, and so forth. Logically, data store  corresponds to one or more of a variety of separate and integrated databases, such as relational databases and object-oriented databases, that maintain information as an integrated collection of logically related records or files stored on one or more physical systems. Structurally, data store  may generally include one or more of a large class of data storage and management systems. In particular embodiments, data store  may be implemented by any suitable physical system(s) including components, such as one or more database servers, mass storage media, media library systems, storage area networks, data storage clouds, and the like. In one example embodiment, data store  includes one or more servers, databases (e.g., MySQL), and\/or data warehouses. Data store  may include data associated with different networking system  users and\/or client systems .","Client system  is generally a computer or computing device including functionality for communicating (e.g., remotely) over a computer network. Client system  may be a desktop computer, laptop computer, personal digital assistant (PDA), in- or out-of-car navigation system, smart phone or other cellular or mobile phone, or mobile gaming device, among other suitable computing devices. Client system  may execute one or more client applications, such as a web browser, to access and view content over a computer network. In particular embodiments, the client applications allow a user of client system  to enter addresses of specific network resources to be retrieved, such as resources hosted by networking system . These addresses can be Uniform Resource Locators (URLs) and the like. In addition, once a page or other resource has been retrieved, the client applications may provide access to other pages or records when the user \u201cclicks\u201d on hyperlinks to other resources. By way of example, such hyperlinks may be located within the webpages and provide an automated way for the user to enter the URL of another page and to retrieve that page.","A webpage or resource embedded within a webpage, which may itself include multiple embedded resources, may include data records, such as plain textual information, or more complex digitally encoded multimedia content, such as software programs or other code objects, graphics, images, audio signals, videos, and so forth. One prevalent markup language for creating webpages is HTML. Other common web browser-supported languages and technologies include XML, the Extensible Hypertext Markup Language (XHTML), JavaScript, Flash, ActionScript, Cascading Style Sheet (CSS), and, frequently, Java. By way of example, HTML enables a page developer to create a structured document by denoting structural semantics for text and links, as well as images, web applications, and other objects that can be embedded within the page. Generally, a webpage may be delivered to a client as a static document; however, through the use of web elements embedded in the page, an interactive experience may be achieved with the page or a sequence of pages. During a user session at the client, the web browser interprets and displays the pages and associated resources received or retrieved from the website hosting the page, as well as, potentially, resources from other websites.","When a user at a client system  desires to view a particular webpage (hereinafter also referred to as target structured document) hosted by networking system , the user's web browser, or other document rendering engine or suitable client application, formulates and transmits a request to networking system . The request generally includes a URL or other document identifier as well as metadata or other information. By way of example, the request may include information identifying the user, such as a user ID, as well as information identifying or characterizing the web browser or operating system running on the user's client computing device . The request may also include location information identifying a geographic location of the user's client system or a logical network location of the user's client system. The request may also include a timestamp identifying when the request was transmitted.","Although the example network environment described above and illustrated in  described with respect to social networking system and game networking system , this disclosure encompasses any suitable network environment using any suitable systems. As an example and not by way of limitation, the network environment may include online media systems, online reviewing systems, online search engines, online advertising systems, or any combination of two or more such systems.",{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 11","b":["622","630","700","702","704","700","706","708","710","702","706","712","706","708","714","716","706","700","718","720","708","700","708"]},"The elements of hardware system  are described in greater detail below. In particular, network interface  provides communication between hardware system  and any of a wide range of networks, such as an Ethernet (e.g., IEEE 802.3) network, a backplane, and so forth. Mass storage  provides permanent storage for the data and programming instructions to perform the above-described functions implemented in servers , whereas system memory  (e.g., DRAM) provides temporary storage for the data and programming instructions when executed by processor . I\/O ports  are one or more serial and\/or parallel communication ports that provide communication between additional peripheral devices, which may be coupled to hardware system .","Hardware system  may include a variety of system architectures, and various components of hardware system  may be rearranged. For example, cache  may be on-chip with processor . Alternatively, cache  and processor  may be packed together as a \u201cprocessor module,\u201d with processor  being referred to as the \u201cprocessor core.\u201d Furthermore, certain embodiments of the present disclosure may not require nor include all of the above components. For example, the peripheral devices shown coupled to standard I\/O bus  may couple to high performance I\/O bus . In addition, in some embodiments, only a single bus may exist, with the components of hardware system  being coupled to the single bus. Furthermore, hardware system  may include additional components, such as additional processors, storage devices, or memories.","An operating system manages and controls the operation of hardware system , including the input and output of data to and from software applications (not shown). The operating system provides an interface between the software applications being executed on the system and the hardware components of the system. Any suitable operating system may be used, such as the LINUX Operating System, the Apple Macintosh Operating System, available from Apple Computer Inc. of Cupertino, Calif., UNIX operating systems, Microsoft\u00ae Windows\u00ae operating systems, Berkeley Software Distribution (BSD) operating systems, and the like. Of course, other embodiments are possible. For example, the functions described herein may be implemented in firmware or on an application-specific integrated circuit.","Furthermore, the above-described elements and operations can be comprised of instructions that are stored on non-transitory storage media. The instructions can be retrieved and executed by a processing system. Some examples of instructions are software, program code, and firmware. Some examples of non-transitory storage media are memory devices, tapes, disks, integrated circuits, and servers. The instructions are operational when executed by the processing system to direct the processing system to operate in accordance with the disclosure. The term \u201cprocessing system\u201d refers to a single processing device or a group of inter-operational processing devices. Some examples of processing devices are integrated circuits and logic circuitry. Those skilled in the art are familiar with instructions, computers, and storage media.","Although only certain embodiments have been described in detail above, those skilled in the art will readily appreciate that many modifications are possible without materially departing from the novel teachings of this disclosure. For example, aspects of embodiments disclosed above can be combined in other combinations to form additional embodiments. Accordingly, all such modifications are intended to be included within the scope of this disclosure.","A recitation of \u201ca\u201d, \u201can,\u201d or \u201cthe\u201d is intended to mean \u201cone or more\u201d unless specifically indicated to the contrary. In addition, it is to be understood that functional operations, such as \u201cawarding,\u201d \u201clocating,\u201d \u201cpermitting,\u201d and the like, are executed by game application logic that accesses, and\/or causes changes to, various data attribute values maintained in a database or other memory. Unless specifically indicated to the contrary, ordinal identifiers such as \u201cfirst\u201d and \u201csecond\u201d are used herein for labeling purposes only and are not intended to denote any specific spatial or temporal ordering. Furthermore, the labeling of a \u201cfirst\u201d element does not imply the presence of a \u201csecond\u201d element.","The present disclosure encompasses all changes, substitutions, variations, alterations, and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend. Similarly, where appropriate, the appended claims encompass all changes, substitutions, variations, alterations, and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend.","For example, the methods, game features and game mechanics described herein may be implemented using hardware components, software components, and\/or any combination thereof. By way of example, while embodiments of the present disclosure have been described as operating in connection with a networking website, various embodiments of the present disclosure can be used in connection with any communications facility that supports web applications. Furthermore, in some embodiments the term \u201cweb service\u201d and \u201cwebsite\u201d may be used interchangeably and additionally may refer to a custom or generalized Application Programming Interface (API) on a device, such as a mobile device (e.g., cellular phone, smart phone, personal Global Positioning System (GPS), PDA, personal gaming device, etc.), that makes API calls directly to a server. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. It will, however, be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the disclosure as set forth in the claims and that the disclosure is intended to cover all modifications and equivalents within the scope of the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
