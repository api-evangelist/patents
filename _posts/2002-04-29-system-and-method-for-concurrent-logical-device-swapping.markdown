---
title: System and method for concurrent logical device swapping
abstract: A system and method for concurrently performing logical device swaps for at least one logical subsystem, comprising: concurrently performing the following for each logical subsystem of each computer system prior to the occurrence of an event calling for logical device swaps—receiving a list of data storage device pairs, each pair comprising a first device and a corresponding second device and placing each listed second data storage device into a pseudo-online state; and concurrently performing the following for each logical subsystem of each computer system upon the occurrence of an event calling for logical device swaps—replacing a binding to each listed first device with a binding to each corresponding listed second device, wherein the binding causes I/O requests to be directed to the listed first device prior to the replacement, and further wherein the binding causes I/O requests to be directed to the corresponding listed second device subsequent to the replacement.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07085956&OS=07085956&RS=07085956
owner: International Business Machines Corporation
number: 07085956
owner_city: Armonk
owner_country: US
publication_date: 20020429
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["This disclosure is related to U.S. Pat. No. 5,870,537, \u201cConcurrent Switch to Shadowed Device for Storage Controller and Device Errors\u201d, assigned to the assignee of the present application, the contents of which are herein incorporated by reference.","This disclosure is related to U.S. patent application Ser. No. 10\/134,414, \u201cSystem and Method for Automatic Dynamic Address Switching\u201d, filed Apr. 29, 2002 and assigned to the assignee of the present application, the contents of which are herein incorporated by reference.","Continuous availability (CA) is the attribute of a system or cluster of systems to provide high availability (i.e., mask unplanned outages from an end-user perspective) and continuous operations (i.e., mask planned maintenance from an end-user perspective). Attempts to achieve these attributes have been made utilizing hardware by enabling a system for redundancy with such mechanisms as multiple servers, multiple coupling facilities (CFS), multiple sysplex timers, multiple channel paths spread across multiple switches, etc. Attempts to achieve these attributes have been made utilizing software by enabling a system for software redundancy with redundant z\/OS (IBM's operating system for the mainframe environment that operates on zSeries processor) images and multiple software subsystems per z\/OS, etc.","Existing CA systems generally comprise disk subsystems that are a single point of failure. For example, where there is only one copy of disk resident data and the disk subsystem becomes nonfunctional for any reason, the system and\/or the applications executing therein typically experience an outage even when the system's other components are redundant or fault tolerant. Some CA systems, including those comprising synchronous disk mirroring subsystems, such as those supporting Peer to Peer Remote Copy (PPRC) functions, reduce the opportunity for outages by having two copies of the data and the cluster spread across two geographical locations.","There are several types of outages that a CA system may experience. A first type of outage is a disk subsystem failure. If a PPRC enabled system experiences a primary disk subsystem failure (i.e., the primary disk subsystem is inaccessible causing an impact on service), required repairs can be performed on the primary disk subsystem while simultaneously performing a disruptive failover to use the secondary disk subsystem. Restoration of service typically requires less than one hour, which compares favorably to non-PPRC systems that typically require several hours before service can be restored. In addition, non-PPRC systems may experience logical contamination, such as permanent Input\/Output (I\/O) errors, which would also be present on the secondary PPRC volume and would require a data recovery action prior to the data being accessible. For example, IBM DB2 will create a Logical Page List (LPL) entry for each table space that receives a permanent I\/O error for which recovery is required. Referring again to a system enabled with PPRC, once the primary disk subsystem is repaired the original PPRC configuration is restored by performing a disruptive switch or using existing PPRC\/dynamic address switching functions.","A second type of outage that may be experienced is a site failure wherein the failed site includes disk subsystems necessary for continued operations. When a PPRC enabled system experiences a site failure because for example, z\/OS images within a site become nonfunctional or the primary PPRC disk subsystem(s) are inaccessible, the operator on the PPRC enabled system can initiate a disruptive failover to the surviving site and restore service within one hour. When the failed site is restored, the original PPRC configuration is restored by performing a disruptive switch or using existing PPRC\/dynamic address switching (P\/DAS) functions.","A third type of outage that may be experienced is caused by disk subsystem maintenance. When a PPRC enabled system requires disk subsystem maintenance, there are at least two methods for proceeding. The operator may perform a disruptive planned disk switch to use the secondary disk subsystem restoring service typically in less than one hour. The majority of PPRC systems use this technique to minimize the time when their disaster recovery (D\/R) readiness is disabled. The system may also use existing PPRC P\/DAS functions to transparently switch the secondary disk subsystem into use.","Existing PPRC and z\/OS P\/DAS mechanisms process each PPRC volume pair switch sequentially as a result of z\/OS Input\/Output Services Component serialization logic thus requiring approximately twenty to thirty seconds to switch each PPRC pair. A freeze function is issued to prevent I\/O disabled for the duration of the P\/DAS processing due to primary disks being spread across two sites, resulting in the potential for a lack of Disaster Recovery (D\/R) readiness lasting for a significant period of time. For example, assuming that a PPRC enterprise wanted to perform maintenance on one disk subsystem that contained 1024 PPRC volumes and P\/DAS were used to perform a transparent switch, the elapsed P\/DAS processing time would be equal to 5.7\u20138.5 hours (1024 volumes* 20\u201330 seconds processing time per volume pair). Additionally, there are requirements, as described in the IBM publication DFSMS\/MVS V1 Advanced Copy Services (SC35-0355), that must be met for P\/DAS to work thereby making it very unlikely that a production PPRC disk subsystem pair can be switched using P\/DAS without manual intervention. Because many enterprises are unable to tolerate having their D\/R readiness disabled for several hours, they often elect to perform a disruptive planned disk switch instead of using the P\/DAS function. Once the disk subsystem maintenance is completed, the operator will restore the original PPRC configuration by performing a disruptive switch or use the existing P\/DAS function.","The present invention provides a continuous availability solution (in the event of a primary disk subsystem failure and planned maintenance) for transparent disaster recovery for both uni-geographically and multi-geographically located disk subsystems.","A system and method for concurrently performing logical device swaps for at least one logical subsystem, comprising: concurrently performing the following for each logical subsystem of each computer system prior to the occurrence of an event calling for logical device swaps\u2014receiving a list of data storage device pairs, each pair comprising a first device and a corresponding second device and placing each listed second data storage device into a pseudo-online state; and concurrently performing the following for each logical subsystem of each computer system upon the occurrence of an event calling for logical device swaps\u2014replacing a binding to each listed first device with a binding to each corresponding listed second device, wherein the binding causes I\/O requests to be directed to the listed first device prior to the replacement, and further wherein the binding causes I\/O requests to be directed to the corresponding listed second device subsequent to the replacement.","Peer-to-Peer Dynamic Address Switching (P\/DAS) is a z\/OS operating system function based on Dynamic Device Reconfiguration (DDR) and Peer-to-Peer Remote Copy (PPRC). It provides a means for installations to non-disruptively switch between devices in a duplex pair when the primary device needs to be made unavailable for reasons such as performing service or migrating from one subsystem to another. P\/DAS requires a device to be released (i.e. not actively reserved) prior to P\/DAS's execution of operations on the device. P\/DAS performs various operations serially (i.e. operates on one device at a time) in order to manage the PPRC state of a set of devices. When a Geographically Dispersed logical subsystem is utilized by an enterprise, a common solution for completing P\/DAS functions is to suspend or terminate the applications requiring I\/O access to data stored on the devices, perform operations including breaking the PPRC connections among the devices, and restarting the applications whereby the applications I\/O access requests are redirected to the secondary volumes. These operations generally require approximately fifteen seconds per device, plus one to two additional seconds for each system comprising the cluster. As a result, several thousand PPRC pairs, for example, will exceed the maximum amount of allotted time for continuous availability system requirements. In addition, P\/DAS requires automation routines to provide multi-system serialization via the IOACTION operator command in order to provide a synchronization point for all systems to switch devices at the same time in order to insure data consistency.","In addition to PPRC, RAID5 disk subsystems may be used to provide for fault tolerance. However, RAID subsystems are also subject to failure. Such failures may be due to errors in Licensed Internal Code (LIC, or micro-code) which is itself a single point of failure. Additionally, a typical RAID5 disk subsystem is deployed to a single geographic location and thus is not likely to withstand geographical disasters (e.g. earth quakes, floods, bombs, etc.).","An exemplary embodiment of the invention provides for improving PS, CA, and D\/R attributes by masking logical subsystem outages while eliminating the need for several P\/DAS requirements. An exemplary system and method of the present invention masks primary PPRC disk subsystem problems and planned storage subsystem maintenance activities. In addition, an exemplary embodiment provides for the completion of such tasks prior to or without causing an application or data request time-outs and prior to or without causing an application or data error. For example, when a system is enabled for PPRC and a primary PPRC disk subsystem experiences a problem, the present invention provides for automatically switching to use the secondary PPRC disk subsystem. When the same operator wants to perform a maintenance action against a primary PPRC disk subsystem, the present invention provides for transparently switching to use the secondary PPRC disk subsystem. For purposes of clarity and explanation, it is understood that in-parallel (hereinafter \u201cconcurrent\u201d) computer applications, programs, tasks, operations, and\/or processes refers to the concurrent execution of two or more of the same. Furthermore, it is understood to one of ordinary skill in the art that concurrency may be synchronous or asynchronous and that computer applications, programs, tasks, operations, and\/or processes may initiate, execute, and terminate independent of one another.","A performance objective of the present invention is for the performance of all PPRC pair swaps for a Logical Subsystem (LSS) up to 256 PPRC volume pairs within five seconds and up to the maximum number of LSSes (32,000 PPRC) within thirty seconds for any outage. An LSS may be identified using subsystem identifiers (SSIDs). Such performance satisfies the business requirements of customers who are unable to tolerate longer-term system and\/or application suspension. It is understood that these performance objectives are merely exemplary and not intended to limit embodiments of the invention. When compared to the current multi-hour outages experienced by many enterprises relating to disk subsystem failure or 85 second spin loops (the default spin loop factor of z\/OS images LPAR), the present invention provides for significantly more functionality.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":["10","16","18","20","40","42","22","12","26","28","30","40","42","32","18","20","28","30","24","34","24","34","28","30","12","36","38","28","30","14","16","26"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2","FIG. 2","FIG. 2"],"b":["50","54","56","58","54","56","58","1","54","56","58","1","54","52","1","54"]},"When a failure occurs, various system messages such as IOS002A at , are generated. For the present example, a separate process is spawned for swapping all the PPRC pairs belonging to each LSS. Upon receiving such a message the processor invokes HiperSwap swapping functions for each LSS at , , . It is understood that the swapping functions for each LSS at , ,  are performed simultaneously and asynchronously relative to the swapping functions performed for the other LSSes. For purposes of explanation, the swapping functions are described for LSS  at . It is understood that the swapping functions for LSSes n\u22121 at  and LSS n at  each comprises the steps described for LSS  at .","Upon error detection, the processor issues a command to the LSS causing the suspension of all I\/O at . A time consistent copy of data with respect to transactions is obtained. Primary-secondary copy sessions are terminated at  using I\/O commands issued to the working secondary device. If the termination is successful, the terminated pair devices are logically swapped at . If the termination is not successful at , the swapping function ceases at . All the remaining device pairs are logically swapped at . If logical swapping is successful at , I\/O activity is resumed at . If logically swapping is not successful, the system is placed into a wait state at .",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 3","FIG. 2"],"b":["54","1","100","102","104","1","100","1","106","1","108","106","1","110","112","114","116","118","120","122","124"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 4","FIG. 2"],"b":["150","76","152","154","1","150","1","156","158","160","162","164","166","168","170","156","170"]},"One of ordinary skill in the art will recognize computer functions as computer programming implements consisting of computer program code that when executed performs some function as desired by a the programmer of the computer program code. In an exemplary embodiment, a system for carrying out the exemplary steps already described for  includes the following exemplary computer functions.","Function 0: query to determine that the HiperSwap application programming interface (APIs) are functional or not.","Function 1: add one or more SSIDs with its PPRC pairs to the master list and put the secondary devices in the pseudo online state.","Function 2: this sends the terminate PPRC pairs order to all of the devices in one or more SSIDS.","Function 3: do the DDR swap on all of the PPRC pairs in one or more SSIDs. Remove from the master list if function 5 is not done.","Function 4: remove pseudo online state for all of the devices of one (undoes function 1).","Function 5: quiesce disk I\/O activity\u2014this will quiesce disk I\/O activity by changing the UCBLEVEL to the DDR level for each primary and secondary PPRC volume's unit control block (UCB) in the specified PPRC SSID pairs to prevent I\/O.","Function 6: resume disk I\/O activity by resuming any quiesced disk I\/O activity by changing the UCBLEVEL to normal level for all the primary and secondary devices in one or more SSID's.","Each of the preceding exemplary computer functions can be called multiple times. It is preferable to call Function 1 prior to calling other functions for any SSID because Function 1 includes a list of PPRC pairs while the other function only have a list of SSIDs to perform their function on.","In an exemplary embodiment, computer functions for carrying out the present invention are programmed using the REXX (restructured extended executor) programming language, which is typically used for developing mainframe and\/or MVS computer programs. It is understood that computer functions for carrying out the exemplary method described herein may be written in any computer programming language known to one of ordinary skill in the art. An exemplary computer program builds control blocks and issues a cross memory PC instruction to initiate requested HiperSwap functions. The parameters on the call to the interface program are the function code number and the stem variable. The following is an exemplary REXX computer program for performing Function 1 and Function 2. It is understood that any computer programming language or combination of computer programming languages known to one of ordinary skill of the art may be used including but not limited to assembly, C, C++, or Java. The SSID names are any four alphanumeric characters. The PPRC pairs are eight hex digits. The first four hex digits are the device number for the primary device, the second four hex digits are the device number for the secondary device. The highest return code is returned in a REXX variable.",{"@attributes":{"id":"p-0036","num":"0035"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Sample Computer Program Code"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["PPRC.PAIRS.0 = 2","\/* Set number of SSIDs *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PPRC.PAIRS.1 = \u2018AAAA\u2019","\/* Set SSID","*\/"]},{"entry":["PPRC.PAIRS.2 = \u2018BBBB\u2019","\/* Set SSID","*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PPRC.PAIRS.AAAA.0 = 2","\/* Set number of PPRC pairs *\/"]},{"entry":["PPRC.PAIRS.AAAA.1 =","\/* Set PPRC pair *\/"]},{"entry":"\u2018CA16CB16\u2019X"},{"entry":["PPRC.PAIRS.AAAA.2 =","\/* Set PPRC pair *\/"]},{"entry":"\u2018CA17CB17\u2019X"},{"entry":["PPRC.PAIRS.bbbb.0 = 2","\/* Set number of PPRC pairs *\/"]},{"entry":["PPRC.PAIRS.bbbb.1 = \u2018CA18CB18\u2019X","\/* Set PPRC pair *\/"]},{"entry":["PPRC.PAIRS.bbbb.2 = \u2018CA19CB19\u2019X","\/* Set PPRC pair *\/"]},{"entry":["call rexxdrvr 1, \u201cPPRC.PAIRS\u201d","\/* Call REXX interface rtn\u2003*\/"]},{"entry":["call rexxdrvr 2, \u201cPPRC.PAIRS\u201d","\/* Call REXX interface rtn *\/"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"The description applying the above embodiments is merely illustrative. As described above, embodiments in the form of computer-implemented processes and apparatuses for practicing those processes may be included. Also included may be embodiments in the form of computer program code containing instructions embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other computer-readable storage medium, wherein, when the computer program code is loaded into and executed by a computer, the computer becomes an apparatus for practicing the invention. Also included may be embodiments in the form of computer program code, for example, whether stored in a storage medium, loaded into and\/or executed by a computer, or as a data signal transmitted, whether a modulated carrier wave or not, over some transmission medium, such as over electrical wiring or cabling, through fiber optics, or via electromagnetic radiation, wherein, when the computer program code is loaded into and executed by a computer, the computer becomes an apparatus for practicing the invention. When implemented on a general-purpose microprocessor, the computer program code segments configure the microprocessor to create specific logic circuits.","While the invention has been described with reference to exemplary embodiments, it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted for elements thereof without departing from the scope of the invention. In addition, many modifications may be made to adapt a particular situation or material to the teachings of the invention without departing from the essential scope thereof. Therefore, it is intended that the invention not be limited to the particular embodiments disclosed for carrying out this invention, but that the invention will include all embodiments falling within the scope of the appended claims."],"heading":["CROSS REFERENCES TO RELATED APPLICATIONS","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED EMBODIMENT"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 4","FIG. 2"]}]},"DETDESC":[{},{}]}
