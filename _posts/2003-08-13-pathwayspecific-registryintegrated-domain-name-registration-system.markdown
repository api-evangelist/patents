---
title: Pathway-specific, registry-integrated domain name registration system
abstract: Embodiments of the present invention reliably effect successive registrations of a domain name through implementing a backorder system () integrated with the registry () maintaining the current registration for the domain name. Because the backorder system () is directly integrated with the registry (), a successful new registration can be achieved following the lapse of the current registration. The registry can employ modified registration control logic and new and modified registry commands (). These modifications to the standard registration system enable a registry () to limit successive registrations of the domain name to an entity, such as a registrar (), that employs the backorder service ().
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07904898&OS=07904898&RS=07904898
owner: Snapnames. Com, Inc.
number: 07904898
owner_city: Porland
owner_country: US
publication_date: 20030813
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","COPYRIGHT NOTICE","TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["This application claims priority from U.S. Provisional Patent Application No. 60\/403,497, filed Aug. 13, 2002, which is hereby incorporated by reference in its entirety.","\u00a92003 SnapNames.com, Inc. A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever. 37 CFR \u00a71.71(d), (e).","The present invention is concerned with the processing of successive registrations for unique identifiers on distributed or remote computerized networks and, more particularly, to technology and services integrated with Internet domain name registry systems to enable advance, orderly processing of backorder requests to register domain names upon the current registrations lapsing.","In distributed computer networks, being able to locate individual computers, servers, or various other machines on the network is critical. On the Internet, one of the most valuable identification resources is the domain name. Internet domain names provide a convenient way to reference Internet Protocol (IP) numerical addresses. Presently, IP addresses are 32-bit integers. They comprise four numbers separated by periods. Every \u201chost\u201d machine (e.g., computer, etc.) connected to the Internet must be identifiable by a specific numerical IP address. However, people prefer to reference host machines by pronounceable, easily remembered names, referred to as \u201cdomain names.\u201d The Internet implements a Domain Name System (\u201cDNS\u201d) to facilitate matching specific domain names to specific hosts.","The DNS is a distributed database system that allows computer applications to map between domain names and IP addresses. The DNS also provides electronic mail routing information and many other services. Individual components of the DNS distributed database can be cached locally, or stored on any of numerous distributed machines. The DNS database data correlates each domain name to a specific numeric IP address. If a computer's local cache does not have the information to resolve a domain name into an IP address, it sends a request to other computers that may contain the resolution information. The DNS affords a domain name some measure of independence from the physical location of a host. The host can be moved to a new location on the network, but it can still be accessed using the same domain name. As long as a user can remember the domain name, the host can always be located, even if the IP address changes over time. This illustrates the value of a domain name that is easy to remember.","Physically, the DNS comprises many servers and other computers that run software and store data permitting computers to query the DNS database. One such machine is the \u201croot server.\u201d A root server is a server computer that maintains the software and data necessary to locate \u201cname servers\u201d that contain authoritative data for a specific domain, such as the \u201c.com\u201d top level domain. There are presently thirteen root servers throughout the world. Name servers are computers that have the software and data to resolve the domain name into an IP address. The data accessible through the name server is often referred to as a \u201czone file.\u201d A \u201czone\u201d is a subset of the total domain name space. The domain names in that subset are stored in the zone file for that name server. There is a zone file for each domain space (i.e., zone).","The DNS is organized in a hierarchical, tree structure. A domain name is the label representing a specific domain within the total possible domain space available in the DNS. The highest level in the DNS hierarchy is the \u201croot,\u201d which is technically unnamed but often referred to as the \u201c.\u201d or \u201cdot.\u201d The level immediately below the root in the DNS hierarchy is the top-level domain, or \u201cTLD.\u201d It is called the \u201ctop-level domain\u201d because it is the highest level in the hierarchy after the root. The TLD appears furthest to the right in an English-language domain name. For example, \u201cgov\u201d in the \u201cuspto.gov\u201d domain name. There are various types of TLDs. The term \u201cgTLD\u201d is often interchangeably used to refer to a \u201cglobal top-level domain\u201d or a \u201cgeneric top-level domain.\u201d A global TLD is one that can be registered by an entity regardless of the entity's geographic location or political boundary. For example, a person, corporation, or other entity located anywhere in the world can register a name in the \u201c.com\u201d domain. However, because an entity must have a presence in the United Kingdom to register a name in the \u201c.uk\u201d TLD, that domain is not a global TLD. Similarly, a generic TLD represents a domain in which an entity can register a name regardless of what type of entity it is. For example, because any entity can register a name in the \u201c.com\u201d domain, while only military entities can register a name in the \u201c.mil\u201d domain, the \u201c.com\u201d domain is an example of a generic TLD and the \u201c.mil\u201d domain is an example of a \u201cspecific TLD.\u201d The \u201c.uk\u201d domain is also an example of a \u201ccountry code\u201d TLD, or \u201cccTLD,\u201d applicable to the United Kingdom. Other examples of ccTLDs include \u201c.fr\u201d for France, \u201c.ca\u201d for Canada, \u201c.jp\u201d for Japan, and \u201c.us\u201d for the United States of America.","By registering a domain name in a particular TLD, the TLD is sub-divided into lower levels in the DNS hierarchy. A second-level domain (\u201cSLD\u201d) is the level in the DNS hierarchy immediately below the TLD. An example of a second-level domain would be \u201csnapnames\u201d in the \u201csnapnames.com\u201d domain name. The level in the DNS hierarchy immediately below the second-level domain is the third-level domain. An example of the third-level domain would be \u201cportland\u201d in the \u201cportland.or.us\u201d domain name. Further subdivisions can be created in a similar manner. Domain names at each level of the hierarchy must be unique. Thus, while there can be only one \u201csnapnames\u201d registered in the \u201c.com\u201d TLD, there can be a \u201csnapnames.net\u201d domain name in addition to the \u201csnapnames.com\u201d domain name.","Historically, domain name registration has been conducted through a Shared Registration System (\u201cSRS\u201d) involving registries, registrars, and registrants. The SRS was created by Network Solutions, Inc. in 1999 to provide a registry backend through which multiple, globally diverse registrars could register domain names. The term \u201cregistry\u201d refers to the entity responsible for managing allocation of domain names within a particular name space, such as a TLD. One example of a registry is the VeriSign registry for the .com, .org, and .edu TLDs. The term \u201cregistrar\u201d refers to any one of several entities with authority to issue commands or requests to add, edit, or delete registrations to or from the registry for a name space. Entities that wish to register a domain name do so through a registrar. The term \u201cregistrant\u201d refers to the entity registering the domain name. In some name spaces, the registry and registrar functions can be performed by the same entity. The combined registry-registrar model is implemented in many ccTLDs. The overall registration system, including multiple registries, is overseen by the Internet Corporation for Assigned Names and Numbers (\u201cICANN\u201d). ICANN is a non-profit corporation that was formed to assume responsibility for the IP address space allocation, protocol parameter assignment, domain name system management, and root server system management functions previously performed under U.S. Government contract by the Internet Assigned Numbers Authority (\u201cIANA\u201d) and other entities.","Domain names, or more specifically domain name registrations, have become significant business (and personal) assets. Registration rights are now bought, sold, traded, bartered, auctioned and stockpiled in \u201cinventories.\u201d Some domain names have been transferred for consideration on the order of tens or even hundreds of thousands of U.S. dollars. At the time of this writing, Verisign, Inc. (the company that maintains the .com, .net, and .org gTLD registry) reports over 32 million registrations in its database. Industry statistics indicate, however, that only about 10% of the domain names registered are currently in actual use, including more than just a simple holding or redirection page. Many registrations are the work of speculators.","The actual cost to register an available domain name at present is relatively nominal, averaging around $35 or less per year. This charge is assessed by the domain name registrar to attend to entering the registration on the registry, and to maintain corresponding records. It represents a markup over the wholesale fee charged by the registry. There are numerous qualified registrars for the common gTLDs, so the market for this service is competitive. The registrar business can be viable because it can be largely automated and operated through a Web site so that direct costs are low. Volume is key, however, so much effort and money is spent on advertising and various relationships with other sites to attract \u201ctraffic.\u201d The leading registrars today each process on the order of a few million registrations or renewals per year.","New gTLDs are being added as the older ones (such as .com, .net, and .org) become saturated. The realm of possible names under a given gTLD is not the problem, it is immense. Names of up to 67 characters long, plus the extension, can be registered. The trouble is that popular, easy to remember or easy to recognize names are relatively limited in number. Many of the most desirable domain names, those corresponding to well-known trademarks or generically describing commercial goods or services, have been long since registered in the basic gTLD spaces.","Acquisition of a desirable domain name requires current information as the registry is changing constantly. Each registry operator disseminates updates to the corresponding domain name resolution servers around the world on at least a daily basis. One can expect this update frequency to rise toward substantially continuous. The public can access the registry directly in a \u201cread only\u201d fashion; in other words, the public can view information but not change it. Presently, this ability is generally implemented by the registry maintaining a public Web site (or ftp site) where anyone can get information. The WHOIS lookup, or similar functions provided by the registry or individual registrars, can be used to identify the registrant of a given domain name. Various sites now offer these kinds of lookups, though they merely query the actual registries and\/or registrar databases to acquire the data.","The challenge arises in that many users or entities are \u201cwatching\u201d for availability of the very same names at the very same registries. The \u201cwinner\u201d is the registrar (or individual scripting through the registrar's connections to the registry) who can register the newly released name before anyone else. It may have substantial resale value. Indeed, the registrar likely already has a buyer in the queue to whom to register the domain name. In any event, grabbing the name is a high-tech race where only first place wins. It is considered common knowledge in the industry that the winners are nearly always technologically sophisticated professional speculators, who either script through a registrar's connections without the registrar's knowledge, or strike arrangements with registrars for preferential access. It is also axiomatic that the average domain buyer has practically no chance of registering a valuable deleting name, a state of affairs the present invention would remedy.","To effect a registration (or renewal), domain name registrants or users must work through a qualified registrar; registrants do not typically have direct access to the registry (except a read-only lookup or search). In large part, this is due to the implementation of an SRS. There is only one registry for each gTLD, as domain names must be unique globally. Each registrar qualified to service a particular gTLD has electronic access\u2014typically a secure digital communication channel\u2014for interacting with the corresponding registry, for example to enter or purge a domain name registration. A registration is purged, for example, if the registrant does not timely pay a renewal fee (after a grace period).","The link between a registrar and the registry employs a Registry-Registrar Protocol (\u201cRRP\u201d), a commercial example of which is the Verisign Global Registry RRP. This link into the registry is how registrars monitor the status of registered names. Various protocols can be used, one example being the Verisign EPP (Extensible Provisioning Protocol), which is an XML implementation for domain name related queries. As known to those of skill in the art, suitable alternative or future protocols could be employed.","A registrar employing a RRP communications link with the registry may implement any of several possible registry commands. These can be RRP or WHOIS event commands that instruct the registry as to the modifications that should be made to a particular domain name registration record. For example, typical registry commands include the ability to add a domain name registration, delete a registration, modify the contact information for a registration, renew a registration, check the status of a registration, or transfer a registration.","Typically, the registry operator is contractually obligated to give all registrars equal access. For example, the ICANN (Unsponsored TLD) Registry Agreement provides in pertinent part: \u201cRegistry Operator shall provide all ICANN-Accredited Registrars that have Registry-Registrar Agreements in effect, and that are in compliance with the terms of such agreements, equivalent access to Registry Operator's Registry Services, including to its shared registration system.\u201d The complete contract can be found at: http:\/\/www.icann.org\/tlds\/agreements\/unsponsored\/registry-agmt-11may01.htm.","Because many registrars have a high-speed, efficient communication link to the registry, and assuming each employs an efficient communication protocol, successful registration of a domain name after deletion of the prior registration is still basically left to chance. To be reliably successful at acquiring domain names, a registrar needs a way to get ahead of its competitors.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 1","FIG. 1"]},"During the period between points B and C, the registrar may opt to put the domain on \u201cregistrar-hold.\u201d This hold will remove the domain from the global Domain Name Servers, effectively disabling the domain unless the registrar is paid for the renewal. If the registrar deletes the domain before point C, the domain will exist in a purge queue at the registry for approximately 120 hours (between points C and D) before final deletion. In this state, the domain name is not available for registration and will not be active. After point D, registration of the domain is \u201cup for grabs\u201d on a first-come, first-served basis through any authorized registrar.","Until the registration expires , the domain record is in the zone file for the relevant domain. For a short period after the expiration , the domain record is still cached at local root name servers, but propagation of the change across all servers is not complete. Services such as a Web site and e-mail for that domain name will still work while the domain is listed in the root name servers. After the domain name record is off the name servers, any associated Web site and e-mail stop functioning. During the period  between the domain name being registered and the registration being purged, the record is still in the SRS. After the name is no longer in the SRS, it is available for a subsequent registration. For the period  after the record is no longer in the root servers but before it is purged, the Web site and e-mail for that domain name no longer function, but the name is not available for registration by the general public.","As can be seen with reference to , punctual timing can be crucial when trying to register a recently available domain name. As such, and given the stiff competition, it has typically been very difficult to ensure a successful registration for a deleting domain name under the registration system of the prior art. The present invention addresses this concern.","Embodiments of the present invention implement a domain name backordering service and domain name backorder management system to receive and process one or more requests for backordering a domain name that has a current registration being maintained by a registry. The backorder system can be a global system, meaning that it can be implemented as a single provider of backorder services for multiple registries. The backorder system can also simultaneously serve any number of accredited registrars. The backordering services can be made available to registrars (to backorder a registration on behalf of a registrant), or they can be made available to registrants directly. One example in which backorder requests can be effectively received from registrants is for systems in which the typical registrar and registry functions are combined in a single entity (such as in some country code domains). Those skilled in the relevant art will readily appreciate that embodiments of the present invention can be implemented equally well in thick or thin registry models as well.","One aspect of the present invention enables reliably effecting successive registrations of a domain name through implementing a backorder system integrated with the registry maintaining the current registration for the domain name. Because the backorder system is integrated with the registry, a successful subsequent registration is essentially assured following the lapse of the current registration.","In another aspect of the present invention, the registry implements modified registration control logic and new and modified registry commands. These modifications to the standard registration system enable a registry to preclude successive registrations by entities not using the freely-available backorder service. A backorder management system can offer the backordering services equally to all registrars, on a first-come, first-served basis, thus satisfying the registry's legal and contractual requirements of making its registration services equally available to all registrars, while still establishing an efficient and orderly system to effect successive registrations for a domain name.","It is another aspect of the present invention that employing a backorder system, as described herein, enables orderly processing of multiple requests for successive registrations for a domain name. A backorder management system integrated with the registry can preserve or process the multiple backorder requests in a backordering queue, and offer successive registrations based on the prospective registrant's position in the queue. Such a system enables neat and orderly processing of domain name registrations, as opposed to the speculative rush-to-registration suffered with prior system.","Additional aspects and advantages of this invention will be apparent from the following detailed description of preferred embodiments, which proceeds with reference to the accompanying drawings.","To overcome the deficiencies of the prior art domain name registration system models, a procedure is desired that provides greater certainty of success than is available in the typical \u201crush-to-register\u201d system. Various solutions have been offered in an attempt to provide such an advantage. Two such solutions are presented by the systems and methods disclosed in U.S. Patent Publication Nos. US 2002-0091703 A1 and US 2002-0091827 A1, both of which are hereby incorporated by reference in their entirety. However, even those systems leave room for improvement.","For example, the system disclosed in publication US 2002-0091703 A1 requires monitoring communications between one or more registrars and one or more registries. Successful registration is based on ascertaining the expected date by which the registry will delete a current domain name registration. The system then submits frequent registration requests around the expected registration deletion date. Publication US 2002-0091827 A1 discloses an improved system in that it enables partnering with the registry in order to receive advanced notice of when a registry will purge a domain name registration. However, that system involves the registry sending \u201cpending delete\u201d notifications, preceding the actual purge for each domain name the registry is deleting. Such a system uses unnecessary system resources to provide the pending delete notifications for the domain names for which no subsequent registration may be desired.","Preferred embodiments of the present invention, on the other hand, provide additional improvements and present a more elegant solution for effecting successive domain name registrations. As described herein, the registry can maintain a data source indicating domain names for which backorder requests have been submitted. To implement an efficient, organized system for effecting successive registrations of domain names, the registry can also implement an integrated backorder system (which can simultaneously serve multiple registries, and registrars). Modified registration commands can also be implemented to take into account the presence of a backorder when receiving a request to register a given domain name. If a backorder exists for a domain name, a successive registration of the domain name can be limited to registration requests that originate from the integrated global backorder system.","As will be readily apparent to those skilled in the relevant art, the principles of the present invention presented in the following discussion can be implemented in domain names registration system employing various modifications, including those in which there are one or more registrars, one or more registries, or one or more systems providing backordering services. The present invention can also be implemented in both thick and thin registry models, models in which registrar and registry functions are combined in a single entity, or models in which backorder system functionality is provided by a component that is separate, integrated, or internal to either a registrar or registry. Each of these modification is considered equally within the scope of the present invention, as set forth in the appended claims.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 2","FIG. 1","FIG. 2","FIG. 1","FIG. 2"]},"As a provider of backordering services, a backorder management system can greatly simplify the amount of work necessary for registries and registrars to support backorders on currently registered domain names. Nearly all of the logic to receive, complete, do accounting for, or otherwise process backorders, resides within the backorder management system. The backorder management system can be designed to support any number of registries, thus greatly reducing the cost and development time to implement a backorder service at any given registry. The backorder system can also give any number of registrars simultaneous access to backorders using a single application programming interface (\u201cAPI\u201d) connected to multiple registries. To tie the registry into the backorder system, the registry preferably implements a few new registry commands, and modifies a few standard registry commands.","A schematic of these modifications is illustrated in . In , the backorder system  includes a global backorder database  which can contain backorder information for any of several different registries. The information stored in the backorder database  can contain an indication of the domain name for which the backorder exists, as well as an indication of the services that are being requested (which may include services in addition to pure backorders) . The backorder system  receives backorder requests  from an interested entity. This interested entity may include a customer from a backorder system retail presence  backorder system wholesale presence through registrars  or a registry or registrar domain name reseller entity . Backordering requests can be standardized through implementation of a backorder development kit .","Similarly, communications concerning registration requests  and completed registrations  can be communicated from the registering entities (, , and ) through a registration interface . Communications with the registry  can be standardized through a registration API . The registry  includes a data source  which can be a registry database for maintaining the data records for, the domain names administered by the registry, or any other source storing a local backorder list. The registry  also preferably implements various registry commands . These can include typical registry commands , such as those commonly implemented by prior art registries. They can also include modified registry commands , such as a modified command to check a status of a domain name or add a registration for a domain name. To efficiently implement the present invention, new registry commands can also be adopted. These new registry commands can include commands to ripen a backorder, add a backorder, or delete a backorder. Backorder-specific communications can be communicated from the backorder system  to the registry  through a backorder communication link . The backorder communication link  can accomplish synchronization of the backorder records in the backorder system database  and the local registry backorder list in the registry's data source .","To make the system efficient for the registry , backorder requests can be placed directly with the backorder system . The backorders are then communicated to the registry  via the communication link . The unchanged registry commands implemented by the registry allow registrars to modify the records for domain names they have registered in the standard manner. To tie the backorder system into the registry, the registry can implement modifications shown in the registry commands and . These modifications include altering the check status command to also determine and indicate the presence of a backorder when a request is made by a registrar to determine the availability of a domain name for registration. Similarly, the add registration command can be modified to also require a check of the domain name status to identify existing backorders. This will ensure that actions requested by the registrar will be handled with due consideration of the presence or absence of a backorder for the relevant domain name.","The new registry commands handle the management of backorder requests stored by the registry  in the data source . These include registry commands to add a backorder record, delete a backorder record, or ripen a backorder into a successive registration. The registry can communicate with the backorder system over the internet using one or more TCP\/IP connections. Each registry can maintain a local data source containing a list of domain names within the registry's domain that have backorders placed against them. This data source can be updated to match the backorder system database  in real time as backorders are placed through a registrar, or with a batch update process. The registry is also not dependent of the backorder system for normal registry command processing (through the commands ) that is unaffected by backorder status.","The database local to the backorder system can be a \u201cthick\u201d database, containing all of the customer information to add the domain name to a registry upon ripening. For registry simplicity, the data stored local to the registry can be \u201cthin\u201d, containing a list of the backorder domain names.","A preferred system operation is illustrated as follows. When an entity places a backorder request for a domain name, an entry can be made at the backordering system and in the data source maintained at the registry. Upon expiration of a current domain name registration for the desired domain name, the registry can delete the domain name using its standard deletion process. However, because of the presence of a backorder record in the registry's data source, the registry maintains a \u201cblock\u201d on the domain name after it has been deleted. If an entity tries to register the domain name using a standard registration channel (through the now-modified \u201cadd-name\u201d registry command show at in ) the registry blocks the registration attempt because of the backorder record in the data source. The add request is blocked as long as there is one or more backorders for the name in the registry's data source. To fulfill or complete the backorder process, the backordering system can run real time or frequent batch processes to register the domain names that have been blocked by the registry. This can be done with or without receiving notification from the registry (i.e., it can operate with both push and pull communication paradigms).",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 4","b":["400","402","402","404","404","402","406","406","404","404","404","404","408","408","404","404","404","404","410","410","410","410","412","406","410","410","408","408"],"i":["a ","b","a ","b ","a ","b","a ","b ","a ","b","a ","b ","a ","b ","a ","b ","a ","b ","a ","b. "]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 5","FIG. 5","FIG. 5"],"b":["500","502","504","506","508","510","504","500","504","512","514","508","516","518","520","520","522","524","524","526","528","530"]},"After a backorder has been added to the registry records as illustrated in , efforts by registrars to subsequently register the domain name corresponding to the backorder will be precluded based on the presence of the backorder. These conditions are illustrated in .",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 6","b":["600","602","602","604","606","608","608","610","612","614","616","618","604","600"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 7","FIG. 7"],"b":["700","702","702","704","704","704","706","708","708","710","704","704","712","700"]},"As can be seen from , when a backorder exists for a domain name maintained by a registry, even after the current registration for the domain name has been purged, no registrar may request a successive registration for the domain name. However, as illustrated in , the global backorder system may successfully request a successive registration for the domain name. In , the global backorder system  transmits a registry command to ripen the domain name . The request to ripen is sent to the registry . Upon receiving the request to ripen , the registry  adds the domain name  to the registry domain database . Confirmation of the addition  is received by the registry  and forwarded  to the global backorder system. Having successfully fulfilled the backorder by registering the domain name, the global backorder system no longer needs to maintain the backorder request with the registry records. Accordingly, the global backorder system  communicates a registry command to delete the backorder . The registry , upon receiving the delete command, deletes the backorder  from the registry backorder data source . Confirmation  of the successful deletion is forwarded  from the registry  to the global backorder system . Once the global backorder system  has received acknowledgement that the backorder is removed from the registry data source , the global backorder system issues a delete command  to remove the backorder from the local backorder system database. When the successful deletion is confirmed , indicating that the backorder system database  and the registry backorder data source  are synchronized, the process is complete.","It will be obvious to those skilled in the relevant art, that many modifications can be made to the presently preferred embodiments described herein without departing from the scope of the invention as set forth in the appended claims. For example, one modification may include implementation of a backorder queue to process multiple backorder requests for a given domain name. and illustrate the benefits of such a modification for implementing a neat and orderly process for managing successive registrations of a domain name. illustrates a typical system in which members of the public  comprise a disorganized mass of interested entities hoping to register desirable domain names and with a registry . By implementing embodiments of the present invention, modified to maintain a queue of backorder requests with the registry, distinct advantages are provided. As illustrated in , the public  can be organized into orderly queues and corresponding to the desired domain names and . The queues and avoid the unreliable \u201crush-to-register,\u201d and provide organization and certainty for successive registrations. As can be seen in , the member of the public  that has the first position in the queue and will have the first opportunity to register the corresponding domain name and through the registry or global backorder system . Although, for simplicity reasons,  illustrate the public interacting directly with the registry, a registrar or backorder system typically can serve as an intermediary.","It will be obvious to those having skill in the art that many changes may be made to the details of the above-described embodiments without departing from the underlying principles of the invention. The scope of the present invention should, therefore, be determined only by the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 7","FIG. 5"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 9B","FIG. 9A"]}]},"DETDESC":[{},{}]}
