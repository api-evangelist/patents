---
title: Embeddable distributed e-commerce and community building system
abstract: The present innovation provides a method and a system for embedding e-commerce and community building capability into a seller website, comprising maintaining on an e-commerce server a product database of products sold by a seller, providing a seller script that runs in a web browser for incorporation into at least one web page on the seller website, downloading upon execution of the seller script a dynamic page analyzer from the e-commerce server that, upon execution by the web browser, adds at least one toolbar to the web page, requesting by the web browser, a dynamic cart script, displaying a dynamic cart that enables the buyer to interactively specify an order for the product corresponding to the e-commerce control, and sending the specification of the order to the e-commerce server for fulfillment of the order.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08666825&OS=08666825&RS=08666825
owner: Bay Photo, Inc.
number: 08666825
owner_city: Scotts Valley
owner_country: US
publication_date: 20091026
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["REFERENCE TO RELATED APPLICATIONS","COPYRIGHT NOTICE","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","Embodiment 1","Selling Products Derived from Digital Media Items","Embodiment 2","Selling Products"],"p":["This application claims benefit of U.S. Provisional Application No. 61\/108,826, entitled EMBEDDABLE DISTRIBUTED E-COMMERCE AND COMMUNITY BUILDING SYSTEM, filed on Oct. 27, 2008 by inventors Nasser K. Manesh and Ahmad Kiarostanni.","This application is related to applicants' co-pending application entitled EMBEDDABLE DISTRIBUTED E-COMMERCE AND COMMUNITY BUILDING SYSTEM FOR DIGITAL MEDIA, filed on the same date as this application by inventors Nasser K. Manesh and Ahmad Kiarostanni.","A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent & Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","The present invention relates to e-commerce for digital media on blogs and websites. In particular, it provides systems and methods for licensing, and printing digital media and for selling products and services by embedding e-commerce widgets within blogs and websites. The invention provides, for existing blogs or websites that do not have built-in commerce capabilities, shopping carts as well as back-office processes attached to such shopping carts that enable visitors to make purchases.","Advances in Internet technology such as blogging platforms and website creation tools makes it easy and inexpensive for people to build blogs and websites. Such ease of use and cost effectiveness has enabled many individuals without computer programming background to use the Internet as a medium to present their \u201ccreations\u201d to the rest of the world. These creations may include inter alia digital media such as photos, videos, animations, and music, as well as physical items such as paintings, crafts, mechanical devices, sculptures, and hand-made greeting cards. Creations may include existing media such as photos or text either alone or in combination with created media, or only created media. In the case of physical items, the person usually presents his\/her creations, or the creations of another person, using visual aids that include photos and videos of the actual item combined with descriptive text. It may be noted that the terms creation, media item, digital media item and item are henceforth used interchangeably.","In some cases individuals wish to sell their creations over the Internet, i.e. perform e-commerce. Typically, individuals, henceforth referred to as sellers, use an existing e-commerce website to sell their creations to avoid the cost and complexity of attempting to add e-commerce capability to their own personal blog or website. Examples of existing e-commerce websites that enable a seller to sell their creations include Amazon Marketplace and eBay. Amazon Marketplace is provided by Amazon Inc. of Seattle, Wash. eBay is provided by eBay Inc. of San Jose, Calif. Such existing e-commerce websites enable a seller to list items for sale and to provide descriptive information including text, photos, and videos on a web page provided by the e-commerce provider. The e-commerce provider also handles shopping carts, accepts online payments, provides the seller with sales reports, and makes payments to the seller after deducting any sales commissions.","The e-commerce provider, in effect, creates and manages a store for the seller. Amazon Marketplace and eBay includes the seller's items within an aggregated listing in a virtual store specific to the seller. These websites typically provide a search facility to help visitors to the website, also referred to as buyers, find what they are looking for. While such e-commerce websites attract large numbers of buyers, the seller is not able to offer their creations in the context of a highly personalized, boutique-style website. Thus there is a need to sell creations easily and efficiently from a seller's personal website or blog.","In some cases, the items are some type of digital content and the e-commerce provider handles payment and digital delivery. For example, micro-stock photography websites such as iStockPhoto, found on the web at www.istockphoto.com enable sellers, who are typically photographers, to upload their photos to a website and sell a license to use the uploaded photos to buyers who typically use the photos for commercial purposes. The sellers' photos are presented within aggregated lists and the buyer typically uses a search capability to find a particular photo. iStockPhoto is owned by Getty Images of Seattle, Wash.","Some e-commerce websites provide value added services for digital media such as photo printing. An example of such provider is ImageKind which enables sellers to upload photos to the ImageKind website and enables buyers to select and order framed prints of photos. ImageKind provides e-commerce services including offering a shopping cart and payment processing as well as fulfillment services such as printing of digital images and framing of printed digital images. ImageKind, Inc. is based in Seattle, Wash.","The common approach used by each of the abovementioned e-commerce services is that descriptive information about the items (photos, videos, text, etc) is uploaded to a third-party website separate from the seller's blog or personal website. The buyer must leave the seller's blog or website, and visit the third-party website in order to review items and place orders. For the seller this may result in losing customers and hence reduced sales and potentially reduced customer loyalty. In addition, maintaining multiple online sales outlets, e.g. a personal blog or website, and various e-commerce websites, is time-consuming for the seller.","Therefore, a system and method for adding e-commerce to a seller's website or blog such that a buyer may purchase a creation without leaving the seller's website or blog is desirable.","The present invention provides a system and method which enables a seller to easily add e-commerce services directly to his\/her own website or blog. The invention provides product selection and shopping cart capabilities right on a seller's website. It also provides the back-office services required to fulfill the orders by integrating with various third party fulfillment services. As a result the seller gets a full service e-commerce solution on their own blog or website. The subject invention enables shoppers to select items at different websites and blog sites that also use the subject invention as their e-commerce solution. The e-commerce capabilities allow purchasing in various ways including inter alia direct purchase, auctioned purchase through bidding, purchase along with an escrow through a third-party, purchase by paying in installments, and deferred payment purchase.","The invention allows a seller to add community building features to his\/her website or blog. Buyers can mark an item as their favorite, or rate the item. The invention collects the list of visitors who have shown interest in a product, visitors who have bought products, and gives the seller access to these lists so that they can later interact with their buyer community.","Each step of the sales process, from selection of the product to accepting payment from a buyer takes place on the seller website or blog, and the back-end processes such as printing and shipping are managed by the invention. No intervention or work must be performed by the seller. In short, the invention turns a seller's website or blog into a boutique where he\/she can post photos to his\/her website or blog, and generate sales of merchandise that incorporates the photos or the digital media items they represent or of the merchandise depicted in the photo, and collect a share of each sale. All steps related to sales of various forms of products from prints to licenses to merchandise are performed or managed by the invention. Further, the buyer only needs to interact with the seller's website or blog.","The invention now will be described more fully hereinafter with reference to the accompanying drawings, which form a part hereof, and which show, by way of illustration, specific exemplary embodiments by which the invention may be practiced. This invention may, however, be embodied in many different forms and should not be construed as limited to the embodiments set forth herein; rather, these embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope of the invention to those skilled in the art. Among other things, the invention may be embodied as methods, processes, systems, business methods, or devices. Accordingly, the present invention may take the form of an entirely hardware embodiment or an embodiment combining software and hardware aspects. The following detailed description is, therefore, not to be taken in a limiting sense.","The present invention describes a system, referred to herein as an embeddable distributed e-commerce and community building system or simply \u201cEDECS\u201d, which adds e-commerce and online community capabilities to an existing website or blog. EDECS enables a customer to purchase items directly from a seller's website or blog through a direct purchase, auctioned purchase, escrow purchase, or other e-commerce method. EDECS provides both an e-commerce user interface on an existing website or blog, and the back-office processes required to prepare the products requested and fulfill an order.","As used herein the following terms have the meaning given below:","Creation, media item, or item\u2014A creation or item may refer to an item of media including inter alia a photo, digital image, video, digital video, animation, or music, or to a physical item such as a painting, craft, mechanical device, sculpture, or hand-made greeting card.","Seller\u2014refers to a person that offers one or more creations from a seller website or a blog.","Buyer or visitor\u2014refers to a person that uses a web browser running on a personal computer, mobile device, or other type of computer capable of running a web browser to visit a seller website or blog.","Web page\u2014refers to an HTML web page that is viewed using a web browser. As used herein, the term web page may also refer to a blog page. Where a blog is a specialized type of web page, typically maintained by an individual whose entries are commonly displayed in reverse-chronological order. A web page may include client-side scripting code in addition to HTML as is discussed later.","Website\u2014refers to a collection of static or dynamically generated web pages that are addressed with a common domain name in a network that uses Internet protocols. A web site is hosted on at least one web server which is a specialized type of server computer that serves web pages to a client computer running a web browser application. As used herein, the term website also refers to a blog site that provides blog pages to a web browser, including variations such as a photoblog, which enables the blog owner to easily embed and annotate images, or a videoblog, which enables the blog owner to easily embed and annotate videos.","Client-side script\u2014refers to programming language instructions written in a client-side scripting language that are executed by a web browser. such as JAVASCRIPT from Sun Microsystems. A client-side script may be embedded in a web page. Alternatively, a web page may include an instruction that causes it to download a client-side script from a web server. A client-side script is interpreted by a client-side scripting engine that is embedded in or controlled by a web browser running in a client computer. A client-side scripting engine enables the web browser to perform functions not available through HTML commands such as advanced graphics, database access, and computations. Unless otherwise specified, the JAVASCRIPT client side-scripting language is used in this invention. JAVASCRIPT is a trademark of Sun Microsystems of Mountain View, Calif., and is supported by most commercial browsers. Other client-side scripting languages that can alternatively be used include the Java open source programming language, Flash from Adobe Systems Inc., and ActiveX from the Microsoft Corporation. For purposes of specificity, all of the client-side capabilities described herein can be accomplished using a web browser such as Mozilla Firefox, Microsoft Internet Explorer, and Apple Safari in conjunction with JAVASCRIPT version 1.5, or greater. A description of JAVASCRIPT version 1.5 may be found in the book JavaScript: The Definitive Guide, by David Flanagan, August 2006, published by O'Reilly Media, Inc., which is incorporated herein by reference.","Now reference is made to , which is a simplified block diagram of an embeddable distributed e-commerce and community building system (EDECS) that enables a buyer using a buyer computer to purchase one or more creations from a seller website, in accordance with an embodiment of the present invention. As depicted in , a buyer computer , a seller computer , a seller website , an EDECS server , a payment processing service , and a fulfillment service , are interconnected via a network . Typically, network  is the public Internet. However network  may also be a private network, a local area network or any other type of network that enables a plurality of computers and\/or online services to exchange digital messages. Further seller website  and EDECS server  may each be implemented using either a single computer server or a plurality of computer servers working cooperatively.","A seller  offers photos and other information about his\/her creations via seller website . As previously discussed, seller website  may be inter alia a website that offers conventional web pages or a blog that provides blog pages to a web browser running in buyer computer . Seller website  may include a server computer. Seller website  may host more than one website. Seller website  may be operated by seller  or by a web hosting provider, i.e. a company that hosts websites for sellers. The creations offered for sale on seller website  may include digital media items. In one embodiment, seller website  displays digital images in web pages that each digital image representing a digital media item offered for sale or licensing by seller . Seller  participates in EDECS  by adding a set of instructions, referred to as a \u201cwidget embedding script\u201d, to the web pages on seller website . When executed by the web browser running in buyer computer , the widget embedding script causes a client side application to be downloaded to the web browser. The client-side script, when executed by the web browser running in buyer computer  communicates with EDECS server  to provide e-commerce services.","A buyer  uses buyer computer  to search for or browse, select and purchase creations available from seller website . Buyer computer  is any PC, laptop, mobile device or other device that runs a web browser that enables a buyer to visit seller website  and to open, view and interact with web pages provided by seller website .","EDECS server  provides e-commerce services that enable buyer  to purchase one or more creations from seller website . EDECS server  generates an electronic order for each purchase made by buyer . EDECS server  uses payment processing service  to obtain payment from buyer  and fulfillment service  to fulfill an order.","EDECS server provides a buyer portal  to buyer  that provides information about his\/her orders and a seller portal  to seller  that enables seller  to configure e-commerce for his\/her creations and to obtain sales information for his\/her creations. Buyer portal  is discussed in further detail with reference to  and . Seller portal  is discussed in further detail with reference to  and .","EDECS server  interacts with a number of payment processing services , including credit card payment processing services and online payment services, such as PayPal, Google Checkout, or Amazon Flexible Payments. Credit card payments are provided by a payment processing service  that provides merchant accounts for credit card processing such as Authorize.net. The Authorize.net service is provided by the CyberSource Corp. of Mountain View, Calif.","Fulfillment service  refers to any external service used by EDECS server  to fulfill an order. For example, in the case of an order for prints of a digital image EDECS server will transfer the digital image to the appropriate fulfillment service  along with a work order that includes details specifying the service or work to be performed by fulfillment service  such as the product to be fabricated, the quantity, the type of paper, the print size or mug size, in the case of a printed mug, and the like.","Typically fulfillment service  is provided by a third party, i.e. a different company than the company that operates EDECS . However, fulfillment service  may be provided by the company that operates EDECS .","Depending on the type of product, fulfillment service  may perform processing such as transcoding of video and\/or audio files into different formats or production of output files of various quality levels. For each type of product, such as prints and postcards for photos, or transcoding into different video formats, EDECS  may send work orders to more than one fulfillment service  to fulfill an order.","Alternatively, an order may be fulfilled directly by seller .","EDECS  may have various embodiments based on the type of products sold by seller . Two such embodiments are described below with reference to  and . These embodiments should by no means restrict the application of the invention to other embodiments which may include any physical or digital product or service that is promoted on a website or blog.","In one embodiment of the invention, a website used to promote digital media items created by one or more artists is enhanced to enable buyers to purchase products derived from the digital media items or to license the digital media. The digital media promoted includes any art form that can be represented digitally on a web or blog site including inter alia images or photographs, videos, music, animation, text such as poems, speeches or other writings, and animations. In the example described with reference to , a photographer, acting in this example as seller , uses EDECS  to enable visitors to seller website , which displays his\/her photographs, to buy products and merchandise that incorporate his\/her photos. By using EDECS , seller  incorporates a complete e-commerce system into his\/her web or blog site and thus eliminates the need for a third party e-commerce hosting service.","This embodiment of EDECS  also allows seller  to license to buyer  certain rights to digital media. In this case, buyer , who is in this case, a licensee, to visit seller website  and to license digital media items directly from seller website . What the buyer purchases is a license to use all or part of a digital media item. Rights licensed may include inter alia (1) the right to use the digital media item for specified period of time, (2) the right to use the digital media item in a specified geographic area, (3) the right to use the digital media item for a specific purpose for example for print ads or web ads.","Now reference is made to , which is an example of a digital image in a web page with a buy and share toolbar that enables a buyer to purchase printed products based on the digital image and to send a copy of the digital image as an e-card, in accordance with an embodiment of the present invention. The web page depicted in user interface  displays a buy and share toolbar  beneath a representation of a digital image . Buy and share toolbar  is customized to sell products based on digital media and to license and share digital media. In this example, buy and share toolbar  offers four controls: buy a print, buy a card, license the image and send as an e-card.","If buyer  selects the buy a print control on buy and share toolbar , then a user interface , described with reference to , appears. If buyer  selects the buy a card control then a user interface , described with reference to , appears. If buyer  selects a control to license the image then a user interface, not depicted, appears. If buyer  selects a control to send an e-card then a user interface, not depicted, appears. Additional products can be added with only slight modification to buy and share toolbar . It may be appreciated by one skilled in the art that with this approach new products may be flexibly added. Specifically, when a new product is added, a new control is added to buy and share toolbar  that enables buyer  to initiate the purchase of the new product and a corresponding user interface is provided by EDECS server  when buyer  selects the new control.","Now reference is made to , which is an example of a user interface that enables a buyer to specify various options of a print order, in accordance with an embodiment of the present invention. User interface  is provided by EDECS server  when buyer  selects the buy a print control from buy and share toolbar , as described with reference to . A processing step control  indicates the current step being performed in the five step ordering process. In this example, the five steps are (1) select a size for the print, (2) check out, (3) provide a shipping address, (4) select a shipping method, and (5) make an electronic payment. Steps 2-5 are neither illustrated nor described herein as they are similar to comparable steps performed on existing e-commerce websites. What is unique about the EDECS  approach is that the steps are performed without buyer  having to leave seller website .","A size control  enables buyer  to selects a size for the printed image from a list of print sizes. A small version  of the image to be printed is displayed. A paper type control  enables buyer  to select a paper type. Two controls, a back control  and an add to cart control  allow the user to move backwards and forwards through the five steps in the process.","Now reference is made to , which is an example of a user interface that enables a buyer to specify options for a printed card, in accordance with an embodiment of the present invention. User interface  is provided by EDECS server  when buyer  selects the buy a card control from buy and share toolbar , described with reference to . Buyer  selects a type of card size a list of types of card . A preview of the card  is displayed.","In a second embodiment of the invention, a website used to promote creations created by one or more artists is enhanced to enable buyers to purchase the products depicted in images that appear on the website. The products promoted include any physical product or service that can be represented using digital media such as, digital images, digital videos, or text, on a web or blog site including inter alia items of art and craft, books, records, automobiles, games, and tools. In the example web page described with reference to , a jeweler, acting in this example as seller , uses EDECS  to sell jewelry directly from his\/her website, seller website . By using EDECS , seller  incorporates a complete e-commerce system into his\/her website and thus eliminates any need for a third party e-commerce hosting service.","When seller  uses the invention in conjunction with seller website , visitors to seller website  may (1) select products depicted on website  for purchase, specify sizes and other product options, add the products to a shopping cart, (2) see the total price, shipping options and shipping costs, and (3) make electronic payments. Upon successfully placing an order, EDECS  electronically notifies seller  of the order. Typically, notification is performed by email and the email message includes information about the product and buyer.","The method performed by buyer  when using EDECS  to purchase products derived from digital media, is similar to the method used in the current embodiment, purchasing ordinary products. However, the method for fulfilling the purchase, discussed in detail below with reference to , is different.","Now reference is made to , which is an example of an image of a product in a web page with a buy and share toolbar that enables a buyer to purchase the pictured product, in accordance with an embodiment of the present invention. The web page depicted in user interface  displays buy and share toolbar  beneath a digital image . In this example, buy and share toolbar  offers a single buy now control.","If buyer  selects the buy now control, using buy and share toolbar , then a user interface, not depicted, is provided by EDECS server  that enables the user to specify any product characteristics such as sizes, colors and prices. Such characteristics are configured by seller  using seller portal , described with reference to .","Now reference is made to , which is an example user interface  for a seller portal that enables a seller to customize a buy and share toolbar, in accordance with an embodiment of the present invention. Buy and share toolbar  enables seller  to specify for each image that appears on a web page provided by seller website  whether the e-commerce is to be provided for either (1) the digital media item depicted in the image (as per embodiment 1) or (2) the product depicted in the image (as per embodiment 2). If e-commerce is to be provided then seller  uses user interface , provided by seller portal , to configure buy and share toolbar , which is be displayed next to the image.","A toolbar position control  enables seller  to select between different possible locations for buy and share toolbar  relative to the image. In one embodiment the alternative positions are above the image and below the image.","A customize style entry box  enables seller  to add HTML cascading style sheet (CSS) code that will control the visual characteristics, including color and fonts, of buy and share toolbar .","A group of customized text controls  enables seller  to change the text displays on buy and share toolbar  for each control and for the separator character that appears between controls. Group of customized text controls  includes a control that enables seller  to specify how to display a control that corresponds to a product, e.g. a print, that is not for sale.","A no toolbar control  enables seller  to specify what visual element if any should be displayed in the event that no buy and share toolbar  is shown next to an image.","An add new photos control  enables seller  to specify the default setting when new photos are added. In the embodiment depicted in user interface , the possible default settings are for sale and not for sale.","A minimum size control  enables seller  to specify that images with a width or height less than a certain size do not meet a minimum size requirement and no buy and share toolbar  should be displayed.","In addition to minimum size control , seller portal  provides several other configuration parameters, not depicted that enable seller  to prevent adding buy and share toolbar  next to an image in certain cases. These configuration parameters include inter alia: (1) specifying a URL pattern, and (2) specifying that images that reside in a designated folder should not receive buy and share toolbar .","Now reference is made to , which is an example user interface  for a seller portal that enables a seller to select the products to be sold, in accordance with an embodiment of the present invention. Seller portal  provides user interface  to seller  to enable him\/her to select products to be sold using buy and share toolbar  and to establish pricing for the selected products. A product table  lists each control that can be added to buy and share toolbar . A print control  enables seller  to specify whether a print control should be added to buy and share toolbar . Similarly, a card control  enables seller  to specify whether a card control should be added to buy and share toolbar . Finally, an e-cards control  enables seller  to specify whether an e-card control should be added to buy and share toolbar . Seller  uses a set print pricing control  to specify pricing for prints and a set card pricing control  to specify pricing for cards. For each control in product table  that is selected, a visual control will appear on buy and share toolbar . For example, if seller  uses print control  to specify that he\/she wants to offer prints, then a visible print control will be displayed on buy and share toolbar . An example of a user interface that enables seller  to specify pricing for prints is described below with reference to .","Now reference is made to , which is an example user interface  for a seller portal that enables a seller to specify the price for a product, in accordance with an embodiment of the present invention. User interface  displays a table of print sizes and prices  that includes a row for each differently priced set of print sizes. Each row includes a control, a \u201c+\u201d sign in user interface , that enables seller  to expand the row to show additional sizes. For each print size seller  wishes to offer, he\/she selects the offered checkbox for the row and selects one size in the row.","Now reference is made to , which is an example user interface  for a buyer portal that enables a buyer to view a list of orders he\/she has placed, in accordance with an embodiment of the present invention. User interface , provided by buyer portal , displays a list of orders that seller  has previously placed at seller websites that participate in EDECS . Each row  in the list of orders includes the following information: a thumbnail that depicts the digital media item or product purchased, the date the order was made, a unique order number, the seller name and email address, the store, i.e. seller, at which buyer  purchased the item, the total price paid and the method of payment used and the current status of the order. Also, each row includes a details control . When buyer  selects details control , buyer portal  provides to the web browser running in buyer computer  additional details about the corresponding order which are displayed to buyer . The additional details include the name of buyer  and the shipping address for the order, information about seller  including their name and website address, the price of the order, shipping details and a description of any product options selected.","Now reference is made to , which is an example user interface  for a favorite photos web page in a buyer portal that enables a buyer visit, share and remove favorite photos, in accordance with an embodiment of the present invention. Buyer portal  enables buyer  to view all photos that buyer  selected as a favorite photo when browsing web pages provided by seller website . User interface  includes a favorite photo panel  for each favorite photo selected by buyer . Favorite photo panel  includes an image thumbnail  of a favorite image, the name of the photographer  that took the photo. In addition, favorite photo panel  includes three controls: a remove from favorites control , a share this control , and a visit control . When buyer  selects remove from favorites control  the photo is deleted as a favorite photo. Buyer  uses share this control  to insert a link to the photo on a social network website. In the example presented in , the FACEBOOK social network is shown. In this case, the FACEBOOK API would be used to add a link to the photo in the FACEBOOK account of buyer . FACEBOOK is a social network website that enables independent application developers to use a published API to use FACEBOOK services such as posting a link. FACEBOOK is provided by FACEBOOK Inc. of Palo Alto, Calif. Buyer  uses visit control  to specify whether the photo or the web page containing the photo should be displayed when buyer  clicks on image thumbnail .","Now reference is made to , which is a high level block diagram of the software components of an embeddable distributed e-commerce and community building system (EDECS) server , in accordance with an embodiment of the present invention. EDECS server  uses a web services  to communicate with buyer computer , seller computer , payment processing service  and fulfillment service . In general, to use the services provided by EDECS server , the web browser running inside buyer computer  or seller computer  issues a request for service message using the hypertext transfer protocol (HTTP) to web services . Web services  receives the HTTP request and invokes the appropriate server software module in EDECS server  to process the request. Web services  may include a commercially available application server that includes a web server that accepts and processes HTTP requests from the web browser and serves or transmits HTTP responses back to the web browser along with optional data contents, which usually are web pages in HTML format and linked objects (images, or the like). Henceforth, the term request message refers to a message sent by a web browser using HTTP or another client-server communications method to web services . A response message refers to a message sent in response, typically using the same communications method, by web services  to the web browser.","As previously mentioned, to use EDECS  to provide e-commerce services for a creation, seller  adds a widget embedding script to a web page on seller website  that displays the creation. When the web browser running in buyer computer  executes the widget embedding script it issues an HTTP request to EDECS server  to provide a dynamic page analyzer . In response, EDECS server  sends an HTTP response message that includes dynamic page analyzer . Dynamic page analyzer  is a client-side script, that is then executed by the web browser. So, while dynamic page analyzer  resides on EDECS server , it is sent to and executed by the web browser running on buyer computer . Seller portal  provides the widget embedding script to seller  when he he\/she registers with EDECS .","Dynamic page analyzer  analyzes a web page and determines where on the web page to add an instance of buy and share toolbar . Multiple instances of buy and share toolbar  may be added to a single web page. Dynamic page analyzer  generates the web page code, including HTML and any client-side scripting code required, to display each buy and share toolbar  that it adds to a web page. Both the widget embedding script and dynamic page analyzer  are further discussed with reference to .","As previously discussed, buy and share toolbar  provides controls that enable buyer  to purchase, license, share or obtain a printed version of the creation being viewed. When buyer  selects a control from buy and share toolbar , buyer computer  creates and sends an HTTP message to EDECS server  requesting a dynamic cart. EDECS server  in response sends a HTTP response message that includes a dynamic cart, which is client-side script that when executed by a web browser creates an interactive shopping cart appropriate to the product selected for purchase within the currently displayed web page.","The dynamic cart client-side script, when executed by the web browser running in buyer computer , first adds an HTML DIV element to the DOM of the current web page causes a window to display on the screen. The dynamic cart uses the parameters supplied as a result of buyer  selecting a control from buy and share toolbar , to fetch from EDECS server  the client-side script and HTML content required to provide the specific dynamic cart features appropriate to the product selected by buyer . The dynamic cart provides the visual and interactive elements that enable buyer  to specify product options, place orders, and make payments while staying within the same web page on seller website .","The dynamic cart communicates with a back office and business logic component  which performs order processing, payment processing via a payment processor , bidding and auction processing, escrow processing, and fulfillment via a fulfillment services processor . Back office and business logic component  also stores and maintains a number of databases including a seller database , a buyer database , a product database , an order database , a fulfillment database , a community database , and a cart session database .","Seller database  stores information about the sellers whose creations are sold via seller website . The information includes: a unique seller ID, the URL of seller website , a site key which is a unique string generated by EDECS server  to identify the seller website , any customization seller  makes to his\/her dynamic page analyzer script using seller portal , the seller's preferred method of receiving their sales proceeds such as mailing checks, direct bank transfer, or PayPal, as well as information required to perform the method such as mailing address for checks, bank account number for direct transfer, or PayPal account for PayPal transfer.","Buyer database  stores information about each buyer  that visits a seller website, including a unique buyer identifier (ID), a shipping address, and a preferred payment method.","Product database  stores information about each product sold on seller website . This includes a unique product ID, available options, and prices set by seller  using seller portal .","Order database  stores information about each order processed by EDECS . Every record in this database represents an order, i.e. an instance of a buyer \u201cchecking out\u201d items from an electronic shopping cart. The order includes a unique order ID and information about the order including the date and time the order was made, current fulfillment status, payment status, and a list of product IDs that include one product ID for each product in the order.","Fulfillment database  stores information about different fulfillment services that EDECS server  may use to fulfill an order. Each record describes a fulfillment services and includes a unique fulfillment service id, information describing how to electronically interact with the fulfillment service to use services provided by the fulfillment service, and type of products that the fulfillment service can fulfill, i.e. fabricate, package and ship. Upon receiving an order EDECS server  looks up the products buyer  purchased in product database , matches that against the types of products represented in fulfillment database , and determines which fulfillment service(s) to submit a work order to.","Community database  stores buyer behavior information including inter alia the level of interest buyers show in items by purchasing them, making them favorite, rating them, etc.","Any seller website  that adds the widget embedding script participates in EDECS . Buyer  may visit any website participating in EDECS  and add an item to their shopping cart. Therefore, if buyer  moves from one website participating in EDECS  to another website participating in EDECS  he\/she can use the same sign-in information, access the same dynamic cart, and add items or otherwise make changes to the same dynamic cart. Thus, it is possible for buyer  to select items from different, independent, websites, each participating in EDECS , and to check out pay for all items in the dynamic cart only once. In order to do this, back office and business logic component  stores a \u201ccart session\u201d object for buyer  in cart session database . Each cart session object includes two sub-objects: a session object, which includes information about the type of browser on buyer computer  identifies the buyer , and a cart-item object that identifies each item in the dynamic cart. Each cart-item object includes a unique product id, a specification of any product options, such as such as size and paper type, the URL of the seller website  the item appears on, and its price. As buyer  moves from one web page to the other and adds items to his\/her dynamic cart, the dynamic cart makes HTTP requests to EDECS server  to add the item to the cart session for buyer . Similarly, if buyer  removes an item or changes the selected options of an item using the dynamic cart, the dynamic cart sends an HTTP request to EDECS server  to modify the cart-session object stored in cart session database .","Back office and business logic component  receives, analyzes and processes orders received by web services  from the web browser running in buyer computer . Back office and business logic component  analyzes an order to determine which fulfillment service(s)  should handle the order. It then uses fulfillment services processor  to send work orders to each fulfillment service .","The fulfillment service required to fulfill an order depends on the type of product ordered. For example, seller  may specify that a digital photo being sold on seller website  can be purchased in a variety of formats, including inter alia various sizes of prints, a framed printed image, an image printed on a mug or t-shirt or greeting card. Each such format, size, or packaging of a creation is represented as a separate stock keeping unit (SKU) and each SKU may be fulfilled by a different fulfillment service .","One EDECS order, stored in order database , may result in a plurality of work orders submitted to one or more fulfillment services . For example, a single order placed by buyer  may include multiple products such as (1) a poster print of a photo from an artist's blog, (2) a framed print of a digital image, (3) a t-shirt with a printed version of the image, and (4) a mug also including a printed version of the same image. EDECS server  uses information from fulfillment database  to determine which fulfillment service can make a poster print, which can print on a t-shirt, and which can print on a mug. EDECS server  will also check to see which fulfillment service  provides the type of frame that buyer  requested. Once each fulfillment service  is identified, EDECS server  obtains from fulfillment database  the information necessary to interact with each fulfillment service  and submits a work order to each of them. In this example, a single EDECS order results in up to four separate work orders placed with four different fulfillment services .","As previously discussed, the company that operates EDECS  may provide certain fulfillment services. Other fulfillment services may be provided by independent (third party) companies.","Back office and business logic component  tracks each work order to completion. For example, if buyer  orders a framed print of a digital image, back office and business logic component  first uses fulfillment services processor  to send the digital image file to an appropriate fulfillment service , and then directs that the printed image be shipped to a framer and provides the necessary description of the frame and shipping address. Some of the steps or work orders may be done manually while others may be done in a fully automated fashion via web services call between online services. However buyer  is not exposed to any of these manual or automated steps; he\/she only sees a completed product.","When a product included in an order is derived from a media item such as a photograph, a video or sound, back office and business logic component  will typically send a request to seller  to provide a digital version of the media item. The digital media item is then included in the work order sent to fulfillment service . Alternatively, seller  may maintain online a repository of digital media elements and enable back office and business logic component  to fetch the digital media item when it is needed to fulfill an order.","The architecture of EDECS server  is independent of the physical storage technology. Thus, EDECS server  can work with a variety of physical storage and database management technologies including inter alia network access storage (NAS), Storage Attached Network (SAN), central server, replicated servers, and distributed servers.","Fulfillment services processor  communicates with each third-party fulfillment service  as necessary to fulfill an order. In general, each fulfillment service  specifies a communications interface that must be supported by fulfillment services processor . Fulfillment services processor  thus supports several communications interface methods, referred to as APIs, including a web service using HTTP, file transfer using FTP, and email. The content of a communication between fulfillment services processor  and fulfillment service  typically has two parts: the digital media content item to be used to make the ordered product, e.g. a digital photo, digital video or music clip, and or video, or music, and specification of the product to be made, including the product id and any options. The product specification is typically in an XML format or in the form of key\/value pairs. It includes product option information such as size, paper type, shipping method, shipping address and shipping information.","As previously mentioned, the method performed by buyer  when using EDECS  to purchase products derived from digital media (first embodiment of the subject invention) is the same when using EDECS  to purchase ordinary products (second embodiment of the subject invention). However, the method for fulfilling a purchase is different. In the first embodiment fulfillment service  is required to complete and fulfill the order. EDECS  looks up the product by buyer , e.g. a print, postcard, or license, in fulfillment database  to determine which fulfillment service  to use to fulfill the order. Fulfillment services processor  uses the API of fulfillment service , to send a work order to fulfillment service  along with the digital media and control information required to process the work order. For example, if buyer  selects a canvas print, EDECS  selects a fulfillment service  that is capable of printing on canvas and sends an XML file containing the order information including, size, options, and shipping address information, along with the digital photo that is to be printed. Fulfillment service  then performs all aspects of the fulfillment process, including printing the photo on the right media and shipping it to buyer .","In the second embodiment, the product is fulfilled directly by seller . In this case, fulfillment processor  sends a work order by email to the seller including the product ID, shipping address and shipping method. Seller  is responsible for packaging and shipping the product.","Payment processor  interfaces with a number of payment services including credit card processing services and online payment services such as PayPal. Online payment services hide the credit card or financial details supplied by buyer . Each such online payment service provides a communications method, referred to as an application programming interface (API), that is used to send the required method of payment information including the order amount, tax amount, shipping amount, and list of purchased items. In this approach, the web browser used by buyer  is redirected to a web page on a website provided by the online payment service. Buyer  logs into his\/her account with the online payment service and is presented with a bill that shows the items, order amount, tax amount, shipping amount, and finally a total. Buyer  interacts with the online payment service to make the payment and then the web browser is redirected back to seller website . With this approach, EDECS server  does not store any method of payment information from buyer . Payment processor  encapsulates the information described above into an XML formatted request message based on the API specification of the online payment service, and submits it to the online payment service via a web service call. The online payment service sends the result and status of the payment back to payment processor  via an XML formatted response message.","EDECS server  uses web services  to provide seller portal . Seller portal  enables seller  using seller computer  to access data from the databases stored by back office and business logic component . Seller portal  enables seller  to register with EDECS , customize his\/her settings, view outstanding orders and obtain a widget embedding script. Seller  can obtain various lists by logging into the seller portal , including a list of buyers that have purchased seller  products, a list of buyers that have shown interest in seller  products, and a list of buyers did not indicate interest in seller  products. Buyers that have previously purchased products from seller  and buyers that have visited seller website  and expressed interest in products from seller  are referred to herein as \u201ccommunity members.\u201d","Seller portal  also provides mailing lists and email tools to seller  that enable seller  to contact community members using email. Seller portal  provides an authoring tool to write an email and to attach photos or web page links, and also enables seller  to select the email recipients. For example, seller  could use the mailing list to invite community members to visit seller website  to see his\/her new creations, or to inform community members about an upcoming event or exhibition.","Using seller portal , seller  may flexibly change, update and reconfigure the various products that he\/she sells via seller website . Seller  may add new products and product options at any time and existing products and product options may be deleted at any time. Every time dynamic page analyzer  generates a dynamic cart that provides product options for buyer  to select it checks the latest capabilities and services. Deleted choices are automatically removed; thus, deleted choices are not included in the dynamic cart and buyer  does not see them.","EDECS server uses web services  to provide a buyer portal  that enables buyer  to log in and track his\/her orders. Buyer portal  also acts as a public website that enables visitors and potential buyers to browse, search for, and purchase creations from the various blogs and websites served by EDECS . In this regard, buyer portal  maintains a catalog of creations served by EDECS  and enables buyer  to (1) view sorted lists of creations based on inter alia sales rank and popularity, (2) search the catalog using inter alia keywords, and (3) navigate the catalog using inter alia sellers' names and sellers' website names to find certain items. Selecting a creation name, a seller's name, or a seller website name causes the web browser running in buyer computer  to redirect to seller website .","Seller portal  enables seller  to create an account with EDECS  by going through a registration process. The registration process enables seller  to provide a unique username and password, his\/her contact information and method payment information that enables EDECS  to make electronic payments to seller  for his\/her share of the proceeds for sales of his\/her creations or for sales of products based on his\/her commissions. The portion of each sale to be paid to seller  is specified in a seller agreement that is agreed to during the registration process.","Seller portal  uses back office and business logic component  to store seller information in seller database , including the information provided by seller  during the registration process, a URL for seller website , and to assign and store a unique seller ID, referred to as a site key, for each new seller . Seller portal  provides seller  a web page where he\/she can pick colors, fonts, and other elements of style for the buy and share toolbar, and generates a widget embedding script for seller website . Seller portal  offers an option to automatically pick a style. To automatically generate a style, seller portal  crawls seller website  and extracts information about the visual style of the website from its in-line styles such as font and color definitions or its Cascading Style Sheet (CSS) files. Thus, EDECS  enables seller  to add e-commerce without changing the overall style of seller website . As described with reference to , seller portal  enables seller  to configure rules that are then used by dynamic page analyzer  to identify the items for sale on a web pages.","Widget Embedding Script","EDECS seller portal  generates a widget embedding script specific to seller website . The widget embedding script typically consists of several lines of JAVASCRIPT. Seller  obtains the widget embedding script from EDECS seller portal  and inserts it into the HTML code of seller website  in a way that the widget embedding script is added to every web page on seller website  that displays a creation and offers e-commerce services.","There are many methods by which seller  may add the widget embedding script to his\/her seller website . Although such methods are outside the scope of the invention several common methods are described below.","In a first method, seller  using opens the page or pages of seller website  that display items for sale, and copies and pastes the widget embedding script into those pages. The text can be added anywhere on the page as long as it is outside of other scripts, and it does not break the HTML syntax of the page. The best practice is to add the text closer to the bottom of the page, before the HTML <\/BODY> tag. Typically, seller  uses a text editor or a web page editing program to insert the.","In a second method, if seller website  uses a template in such a way that a common file is included in various pages of the site, for example a file that generates the footer for all of the pages of the site, then seller  adds the widget embedding script to such file. The result is that the widget embedding script is automatically included in all web pages that use the common file. The text can be added anywhere in such common file as long as it is outside of other scripts, and it does not break the HTML syntax of the page.","In a third method, an EDECS plugin or add-on may be created and used with certain publishing or content management system (CMS) platforms. Such an EDECS plugin or add-on would insert the widget embedding script into the proper locations in a websites managed by the publishing or CMS platform. Publishing or CMS platforms support plugins or add-ons include Wordpress, PixelPost, MovableType, Joomla, and Drupal. An EDECS plugin for any of these platforms simply provides a way to enter a site key instead of the widget embedding script, and it uses the site key to generate the widget embedding script and add it to all or some of the web pages managed by such publishing platform. The function of the plugin or add-on is to take the site key provided by seller portal , add it to the rest of the widget embedding script, which is invariant except for the site key, and add the resulting widget embedding script to the correct pages of seller website , i.e. those web pages that incorporate images that either represent digital media items to be used to create a product or which represent products themselves.","Each of the three abovementioned methods for adding widgets to a web page are common practice and are thus familiar to website and blog creators. Seller  does not need to have sophisticated technical programming knowledge to use any of these methods.","Once embedded in a web page, when buyer  visits seller website , the widget embedding script is executed as part of the web page provided by web services . An example of a typical widget embedding script is provided below",{"@attributes":{"id":"p-0111","num":"0110"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<script type=\u201ctext\/javascript\u201d"]},{"entry":[{},"\u2003\u2003src=\u201chttp:\/\/widget.edecs.com\/stores\/script\/"]},{"entry":[{},"\u2003\u2003e79daf52e7f09ec39d8892341fab991c7b84814a.js\u201d>"]},{"entry":[{},"<\/script>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"As shown in the above example, the widget embedding script references a specific program that resides on the EDECS server . When the widget embedding script is included in an HTML page and executed by a web browser running in buyer computer  it instructs the web browser to send an HTTP request and fetch the referenced client-side script, dynamic page analyzer , and then to execute it.","The name of the client-side script has the form \u201c<site key>.js\u201d where site key is the site key stored in seller database . The EDECS server , upon receiving the HTTP request, looks up the site key in seller database , and uses it to determine which seller  and which seller website  it belongs to. Also, for purposes of security, it looks up the HTTP_REFERRER of the HTTP request to see what domain the request has come from. If the domain of the web server that sent the HTTP request (based on HTTP_REFERRER) does not match the domain of seller website  the request is denied. Otherwise, the EDECS server  determines that this is a legitimate request. Then, the EDECS server  looks up the site key in product database  to obtain a list of what products seller website  offers. Then, EDECS server  adds the list of the products to dynamic page analyzer , and sends it back to the web browser.","Dynamic Page Analyzer","Now reference is made to , which is flow diagram that describes the processing performed by a page analyzer to determine if a buy and share toolbar should be placed next to an image on a seller website and if so, where to place the buy and share toolbar, in accordance with an embodiment of the present invention.","As previously discussed, the widget embedding script instructs the web browser running in buyer computer  to send an HTTP request to EDECS server  for dynamic page analyzer . In response, EDECS server  sends dynamic page analyzer  to buyer computer  in an HTTP response message. The web browser running in buyer computer  then executes dynamic page analyzer , which is a client-side script. Dynamic page analyzer  examines the Document Object Model (DOM) for the web page in order to determine the location of and to place instances of buy and share toolbar  within the web page.","By way of background, once a web page is completely downloaded by a web browser, even if external objects such as images and scripts are being downloaded in parallel or client-side scripts are executing, the web browser creates a Document Object Model, or DOM, which is a data structure that reflects the hierarchy of the HTML elements that belong to this page. The DOM describes all of the HTML elements in the page and how they are related, including any images or videos or text that represent the content of the page. The DOM is specified by the World Wide Web Consortium as part of the specification for the hypertext markup language (HTML). There are standard software libraries that enable client-side scripts to traverse or analyze a DOM and to search for certain elements. Once the DOM has been constructed by the web browser, which, as mentioned, does not necessarily mean that elements of the page have been downloaded, the web browser fires an event indicating that the DOM is ready. Such event can be received by a client side script such as dynamic page analyzer .","Now referring to , at step , initially, dynamic page analyzer  waits for a \u201cDOM complete\u201d event to be indicated by the web browser running in buyer computer . One method to accomplish this is for dynamic page analyzer  to schedules itself to run at a later time, using a timer, if the event has not occurred. Such timers exist in all client-side scripting languages. An example client-side script written in JAVASCRIPT is presented below. In the example, dynamic page analyzer  determines if the DOM has been constructed yet and if not, instructs the web browser to call dynamic page analyzer  again  milliseconds later.",{"@attributes":{"id":"p-0118","num":"0117"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002function runInit(site_key)"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003still_initialzing = getEvent(DOM_LOAD);"]},{"entry":[{},"\u2003\u2003if (still_initializing) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003init_timer = setTimeout("]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002function( ) {FOTOMOTO.runInit( );}, 500"]},{"entry":[{},");"]},{"entry":[{},"\u2003\u2002}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"When the DOM has been constructed, at step  dynamic page analyzer  continues execution and searches the DOM and creates a list of all images in the web page. Typically, dynamic page analyzer  uses a DOM manipulation library such as the Yahoo! User Interface Library (YUI) library, from Yahoo! Inc. of Sunnyvale, Calif. However, any DOM manipulation library can be used for this purpose. In the following code example, YUI is used to search the DOM and create a list of the images, named image_list, on the web page.",{"@attributes":{"id":"p-0120","num":"0119"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"var image_list = YUI.util.Dom.getElementsBy(function(el){"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003return EDECS.validateImage(el);"]},{"entry":[{},"}, \u2002\u201cimg\u201d);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Image_list is an array of HTML elements. The elements that are stored in image_list are image properties including width, height, and the location of the image, i.e. the source URL.","Next, dynamic page analyzer  sequentially processes each image in the in the image list and determines for each image if an instance of buy and share toolbar  must be added to the image and if so adds an instance of buy and share toolbar  in the proper location inside the HTML web page. The code example below provides the core algorithm for this processing routine.",{"@attributes":{"id":"p-0123","num":"0122"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"for (var i=0; i<image_list.length; i++) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003var image = image_list[i];"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003var w = image.width;"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003var h = image.height;"]},{"entry":[{},"\u2003var url = image.src;"]},{"entry":[{},"\u2003if (EDECS.ignoreImage(site_key, w, h, url))"]},{"entry":[{},"\u2003\u2003continue;"]},{"entry":[{},"\u2003if (hasToolbar(image))"]},{"entry":[{},"\u2003\u2003continue;"]},{"entry":[{},"\u2003imageAvailability = EDECS.getImageAvail(site_key, url);"]},{"entry":[{},"\u2003if (imageAvailability.isSoldOut)"]},{"entry":[{},"\u2003\u2003continue;"]},{"entry":[{},"\u2003if (imageAvailability.isNotForSale)"]},{"entry":[{},"\u2003\u2003continue;"]},{"entry":[{},"\u2003imageProducts = EDECS.getImageProducts(site_key, url);"]},{"entry":[{},"\u2003EDECS.addToolbar(image, imageProducts);"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"At step  dynamic page analyzer  first obtains the width and height of the image, as well as its source URL, and passes them as parameters to the \u201cignoreImage\u201d function. Next, at step  dynamic page analyzer  sends an HTTP request to EDECS server , including the site key and image URL as parameters, requesting that EDECS server  determine if the image needs to have an instance of buy and share toolbar  displayed next to it. At step  EDECS server  determines if an instance of buy and sell toolbar  is required. It does this by determining if seller  has configured any parameters using seller portal , as discussed with reference to , that would indicate that no buy and share toolbar  should be added next to the image. If no instance of buy and share toolbar  is required then processing continues at step .","If an instance of buy and share toolbar  is to be added next to the image, then, at step  dynamic page analyzer  determines if the image already has an instance of buy and share toolbar , i.e. whether the code to display buy and share toolbar  next to the image has already been added to the web page. If an instance of buy and share toolbar  has already been added to the web page, then processing continues at step .","At step , dynamic page analyzer  sends an HTTP request to EDECS server  to determine if e-commerce is requested for the image by seller . As discussed with reference to , seller  may use seller portal  to specify that e-commerce is not to be provided relative to an image. At step  EDECS server  determines if seller  has requested e-commerce for the image. If seller  has specified that e-commerce not be provided for the image then processing continues at step .","If e-commerce service is to be provided for the image then, at step , dynamic page analyzer  calls the addToolbar( ) function to add the toolbar to the image. The addToolbar( ) function, which is part of dynamic page analyzer  generates the web page code, including HTML and any client-side scripting code required, to add an instance of buy and share toolbar  next to an image. The method used by the addToolbar( ) function to add an instance of buy and share toolbar  next to an image is described below.","Finally, at step  dynamic page analyzer determines if there are more images in the list of all images in the web page to process. If there are images remaining to process then processing resumes at step . If there are no further images to process the method terminates.","Adding a Buy and Share Toolbar Next to an Image","When the addToolbar( ) function is executed to add buy and share toolbar  next to an image, it first determines whether seller  has customized the location of buy and share toolbar . Customizing the location of the buy and share toolbar  can be done by adding optional HTML DIV elements to the page. The seller  can add an HTML DIV tag to the web page, with a unique HTML ID known to the EDECS server, such as <div id=\u201cEdecsToolbar\u201d><\/div>. The dynamic page analyzer  inserts buy and share toolbar  inside this HTML DIV. This allows the seller to specify the location of buy and share toolbar  on the web page.","Seller  can provide \u201chints\u201d about the location of buy and share toolbar  by setting customization controls provided by seller portal . EDECS server  then sends these hints to dynamic page analyzer . These hints are parameters stored in the seller database  for seller website , and are fetched by dynamic page analyzer  from EDECS server  using an HTTP request\/response exchange. These parameters allow the seller  to specify inter alia that (1) buy and share toolbar  should be inserted above, below, or on (overlapping) the photo, (2) buy and share toolbar  should be centered, or left justified or right justified with respect to the photo.","Dynamic page analyzer  uses the previously discussed YUI library to traverse and search the HTML elements of the web page to see if the DIV for customizing the location of buy and share toolbar  already exists. If not, then dynamic page analyzer  automatically determines where to add buy and share toolbar  relative to each image, and in doing so applies the hints described above. While automatically determining, dynamic page analyzer  creates new DIV elements, one for each image it finds in the DOM, so that there is one buy and share toolbar  for each image. Dynamic page analyzer  generates unique HTML IDs for each such DIV in the form of <div id=\u2033EdecsToolbar XXXXXX><\/div> where XXXXXX is different for each image.","As shown in the example code below, dynamic page analyzer  fetches the hints along with other configuration information from EDECS server . This configuration is shown as EDECS_CONFIG in the example code. Dynamic page analyzer  creates a DIV element for the buy and share toolbar  of the image. The variable box_list_hint is a list of HTML elements that dynamic page analyzer  traverses \u201coutwards\u201d, to place the buy and share toolbar one or more boxes \u201couter\u201d than the actual image. It can contain the name of the element (such as p for paragraph, or div for a DIV), or the class of the elements, or the ID of the elements.","An example implementation of how dynamic page analyzer  determines where to add the buy and share toolbar  using JAVASCRIPT is provided below.",{"@attributes":{"id":"p-0134","num":"0133"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"this.toolbar = document.createElement(\u201cdiv\u201d);"]},{"entry":[{},"this.bar_id = \u201cEdecsToolbar_\u201d+this.id;"]},{"entry":[{},"var box_list = EDECS_CONFIG.box_list_hint;"]},{"entry":[{},"var img_box = this.image;"]},{"entry":[{},"for (var i=0; i<box_list.length; i++) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003var box = this.image;"]},{"entry":[{},"\u2003\u2003\u2003\u2003var list = box_list[i].split(\u201c \u201d);"]},{"entry":[{},"\u2003\u2003\u2003\u2003for (var j=0; j<list.length; j++) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (\/{circumflex over (\u2009)}#\/.test(list[j])) { \/\/ id of element"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003box ="]},{"entry":[{},"YUI.util.Dom.get(list[j].replace(\/{circumflex over (\u2009)}#\/,\u201c\u201d));"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003} else if (\/{circumflex over (\u2009)}\\.\/.test(list[j])) { \/\/ class of"]},{"entry":[{},"element"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003box ="]},{"entry":[{},"YUI.util.Dom.getAncestorByClassName(box,"]},{"entry":[{},"\u2003\u2003\u2003\u2003list[j].replace(\/{circumflex over (\u2009)}\\.\/,\u201c\u201d))"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003} else { \/\/ name of element"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003box ="]},{"entry":[{},"YUI.util.Dom.getAncestorByTagName(box, list[j]);"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003}"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (!box)"]},{"entry":[{},"\u2003\u2003\u2003\u2002break;"]},{"entry":[{},"\u2003\u2003\u2003\u2003}"]},{"entry":[{},"\u2003\u2003\u2003\u2003if (box) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003img_box = box;"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"]},{"entry":[{},"\u2003\u2003\u2003\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The code above traverses the DOM, from the image outward, to find the right \u201cimg_box\u201d, which is treated by dynamic page analyzer  as the \u201cfinal box for the image\u201d where buy and share toolbar  should be added. Once this box is known, dynamic page analyzer  uses the toolbar_position_hint to add buy and share toolbar  above, below, or over the image. Adding buy and share toolbar  means dynamically adding a new HTML element to the page, which is achieved by adding a new node to the DOM data structure at the right place. This is performed using the YUI library as follows:",{"@attributes":{"id":"p-0136","num":"0135"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003if (typeof(EDECS_CONFIG.toolbar_position_hint)!=\u201cundefined\u201d)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.toolbar_position ="},{"entry":"\u2003\u2003EDECS_CONFIG.toolbar_position_hint;"},{"entry":"\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.toolbar_position ="},{"entry":"\u2003\u2003EDECS_CONFIG.DEFAULT_POSITION;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003if (img_box) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch (this.toolbar_position) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u201c1\u201d: \/\/top position: toolbar showing above"},{"entry":"\u2003\u2003photo"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003YUI.util.Dom.insertBefore(this.toolbar,"},{"entry":"\u2003\u2003img_box);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u201c2\u201d: \/\/overlay position: toolbar showing over"},{"entry":"\u2003\u2003the photo"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003insertOverlay(this.toolbar, img_box);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u201c0\u201d: \/\/ bottom position: toolbar showing below"},{"entry":"\u2003\u2003photo"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003YUI.util.Dom.insertAfter(this.toolbar,"},{"entry":"\u2003\u2003img_box);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (siblingImage)"},{"entry":"\u2003\u2003YUI.util.Dom.insertAfter(document.createElement(\u201cbr\u201d),"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002this.toolbar);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Thus, buy and share toolbar  is added to the DOM and therefore to the web page. Buy and share toolbar  appears when the web browser renders the web page to the display of buyer computer .","Now reference is made to , which is a flow diagram of an overall method used to purchase a product using an embeddable distributed e-commerce and community building system (EDECS), in accordance with an embodiment of the present invention. At step  seller  uses his\/her browser, running on seller computer  to visit seller portal . If seller  is not already registered as a seller with EDECS  then seller portal  enables seller  to register. If seller  is already registered, then seller  simply signs in. Upon registration or sign-in, seller  provides the URL of seller website  to seller portal  and seller portal  generates an appropriate widget embedding script for seller website .","At step  seller  incorporates the widget embedding script into seller website  in such a way as to be embedded in the HTML code for every page that displays a creation that seller  wishes to obtain e-commerce service for using EDECS . Typically, one way to do this is to copy the widget embedding script into a template that defines the look, feel, and function of each web page that displays a creation. As previously discussed, a creation may be inter alia a digital media item that will be used to create a product such as a print, or it may be a physical product itself that will be taken out of stock and shipped.","At step  buyer  uses his\/her web browser, running on buyer computer , to visit seller website . At seller website , buyer  browses, searches for, and reviews information about various creations. At step  buyer  visits a web page on seller website  that includes a widget embedding script. At step , when the web browser executes the widget embedding script it causes the web browser to send a message to EDECS server  requesting that EDECS server  provide dynamic page analyzer . At step  EDECS server  provides dynamic page analyzer to the web browser running in buyer computer .","At step  dynamic page analyzer  analyzes the web page and adds instances of buy and share toolbar  as required to the web page. The placement of the buy and share toolbar  relative to each image that displays a creation may be customized by seller  using seller portal .","At step  buyer  selects an e-commerce control on the buy and share toolbar  that is placed next to an image, where an e-commerce control is typically a request to purchase either a product incorporating the media item represented by the image or a product depicted in the image. Typical such requests include buy a print, buy a card, buy the product. Selecting an e-commerce control causes the web browser running in buyer computer  to create and send an HTTP message to EDECS server  requesting a dynamic cart. In response, at step  EDECS server  provides a dynamic cart to the web browser. Then at step  the web browser displays the dynamic cart inside the currently displayed web page. The dynamic cart is a client-side script that when executed by the web browser creates an interactive shopping cart appropriate to the product selected for purchase within the currently displayed web page. Thus, buyer  does not have to leave the web page in order to engage in e-commerce for a media item or product depicted on the web page.","At step  buyer  uses the dynamic cart to specify an order. This step includes selecting any options such as quantity and size, checking out, providing a shipping address, selecting a shipping method, selecting a payment method, and providing method of payment information. When the user finishes specifying the order, the web browser sends a message to EDECS server  that includes the order information. In one embodiment, back office and business logic component  notifies seller  when an order for one of their creations is placed. Seller  can track the status of the order using features provided by seller portal .","At step  payment processor  obtains payment for the order from payment processing service . For each payment collected, back office and business logic component  credits a portion of the sales amount to a seller account for seller .","At step  back office and business logic component  determines if the order is for a product derived from a digital media item such as a printed digital image or a card that includes a printed version of a digital image. If so, then processing continues at step . If not, then the order is for a product depicted by an image, rather than a product that incorporates the image, and processing continues at step .","At step  EDECS server  uses fulfillment services processor  to place work orders with at least one fulfillment service . At step , the at least one fulfillment service  completes the work order and ships a completed product. The product may be shipped to buyer  or to another person designated by buyer  during the ordering process.","At step  EDECS server  sends order information to seller  notifying him\/her that buyer  has placed an order for a product provided by seller . The order information includes shipping information and information about any product options selected by buyer . At step  seller  ships the ordered product to the designated product recipient at the designated shipping address.","Typically, EDECS server  will provide electronic updates to buyer  at one or more points during the fulfillment process. Typically, EDECS server  provides electronic updates via email messages when payment has been successfully obtained, when a work order has been placed with a fulfillment service , and when a fulfillment service  fulfills a work order and ships a completed product, when order information has been sent to seller  and when seller  ships a product.","Buyer  may visit buyer portal  to check the status of the order at any time.","Also, on a periodic basis, back office and business logic component  makes an electronic payment to seller  for the aggregated portion of sales credited to his\/her seller account. Such electronic payments are typically performed monthly.","In reading the above description, persons skilled in the art will realize that there are many apparent variations that can be applied to the methods and systems described."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention will be more fully understood and appreciated from the following detailed description, taken in conjunction with the drawings in which:",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
