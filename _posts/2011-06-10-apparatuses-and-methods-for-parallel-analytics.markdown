---
title: Apparatuses and methods for parallel analytics
abstract: Methods, apparatus, and software packages for data processing are disclosed. In some embodiments, the method may include receiving a dataset. In some embodiments, the method may include determining a control number of a processing system. In some embodiments, the control number may include a number of evaluation units within the processing system. The method may include processing the dataset using a plurality of evaluation units. In some embodiments, processing the dataset may include allocating a free evaluation unit to form a busy evaluation unit. Processing the dataset may also include creating a data subdivision for the busy evaluation unit, the data subdivision including a part of the dataset. Processing the dataset may also include evaluating the data subdivision. Processing the dataset may also include releasing the busy evaluation unit. The allocating, creating, evaluating, and releasing may performed concurrently by the plurality of evaluation units.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09519754&OS=09519754&RS=09519754
owner: OPTUMINSIGHT, INC.
number: 09519754
owner_city: Eden Prairie
owner_country: US
publication_date: 20110610
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This application claims the benefit of U.S. Provisional Application No. 61\/353,907 filed Jun. 11, 2010, the entire contents of which is specifically incorporated herein by reference without disclaimer.","Field of the Invention","This invention relates to methods, systems, and apparatuses for data processing and management, and more particularly to a configurable framework for processing parallel analytics.","Summary of the Invention","The healthcare industry is under a high level of scrutiny to reduce overall costs and improve quality. Critical to these improvements is the automated evaluation of insurance coverage, conformity of the services compared to the best practices, opportunities for prevention, quality of care measurements and managed care interventions and detection of fraudulent or incorrect claims. Unfortunately, the healthcare industry is faced with missing or incorrect clinical or demographic information as well as an enormous volume of data for patients, dependents, and the claims for their care.","A large health plan with 34 million members can typically have over two billion claims over a three year period. Because of missing or incorrect information, this data must be reprocessed several times before it meets business requirements. Historical solutions have had difficulties completing several rounds of processing within a month. Reducing the processing times of this automation may (1) help reduce the accounts receivable backlogs of payers and providers, enabling them to be more financially secure, (2) more readily find incorrect or fraudulent claims in an environment of decreasing Medicare reimbursements, (3) enable earlier proactive managed care interventions to keep patients healthy, avoiding the much higher costs of an emergency room visit or costly complication later, (4) increasing other business process velocity by providing quality results more quickly, and more efficiently. Though the systems, methods, and apparatuses disclosed herein may be used to process healthcare claims and similar data, the disclosure is not so limited\u2014any datasets, healthcare or otherwise, may be received and processed.","Prior art solutions have been developed to tackle this problem. For example, U.S. Pat. No. 7,650,331 describes a \u201cSystem and Method for Efficient Large-Scale Data Processing\u201d to Dean et al. The systems and methods described here are based on a \u201cmap\/reduce\u201d programming model and an associated implementation for processing and generating large datasets. The Dean disclosure describes completely subdividing input data into several map tasks and subsequently assigning those tasks to various processes. Such initial subdivision of all work tasks before assignment to various process can be both time consuming and resource intensive.","Systems, methods, and apparatuses for processing data processing are disclosed. The systems, methods, and apparatuses disclosed herein enable efficient work subdivision of received input datasets.","In some embodiments, the method may include receiving a dataset. In some embodiments, the method may further include determining a control number of a processing system. In some embodiments, the control number may include a number of evaluation units within the processing system. The method may further include processing the dataset using a plurality of evaluation units. In some embodiments, processing the dataset may include allocating a free evaluation unit to form a busy evaluation unit. In some embodiments, processing the dataset may also include creating a data subdivision for the busy evaluation unit, the data subdivision including a part of the dataset. In some embodiments, processing the dataset may also include evaluating the data subdivision. In some embodiments, processing the dataset may also include releasing the busy evaluation unit. In some embodiments, one or more of the allocating, creating, evaluating, and releasing steps may performed concurrently by the plurality of evaluation units.","In some embodiments, processing the dataset may be repeated by the plurality of evaluation units until completion.","In some embodiments, the evaluation unit may include one or more processing devices.","In some embodiments, the data subdivision may include one or more subtasks.","In some embodiments, evaluating the data subdivision may further include evaluating one or more subtasks.","In some embodiments, evaluating the data subdivision may further include describing the data subdivision with an XML framework.","In some embodiments, describing the dataset with an XML framework may further include ordering dependencies of the one or more subtasks to form one or more dependent subtasks.","In some embodiments, evaluating the data subdivision may further include producing intermediate results. In some embodiments, evaluating the data subdivision may further include sharing the intermediate results with the one or more dependent subtasks.","In some embodiments, creating the data subdivision may include recursively creating nested data subdivisions.","In some embodiments, creating the data subdivision may include using a one or more configurable subdivision strategies.","In some embodiments, determining the control number may include using configuration rules.","In some embodiments, determining the control number may further include determining available compute resources.","In some embodiments, determining the control number may also include determining available compute resources in response to the configuration rules.","In some embodiments, determining the control number may also include determining the control number in response to the memory size and the one or more processing devices.","In some embodiments, the method may further include using one or more configurable control number strategies.","In some embodiments, evaluating the data subdivision, may further include estimating the evaluation duration and measuring the evaluation duration. In some embodiments, the method further comprising sending status messages.","A apparatus for data processing is also disclosed. In some embodiments, the apparatus may include a receive module configured to receive a dataset. In some embodiments, the apparatus may include a control module configured to determine a control number of a processing system. In some embodiments, the control number may include a number of evaluation units within the processing system. In some embodiments, the apparatus may include a data system module configured to process the dataset using a plurality of evaluation units. In some embodiments, processing the dataset may include allocating a free evaluation unit to form a busy evaluation unit. In some embodiments, processing the dataset may include creating a data subdivision for the busy evaluation unit, the data subdivision comprising a part of the dataset. In some embodiments, processing the dataset may include evaluating the data subdivision. In some embodiments, processing the dataset may include releasing the busy evaluation unit. In some embodiments, one or more of the allocating, creating, evaluating, and releasing steps are performed concurrently by the plurality of evaluation units.","In some embodiments of the apparatus, processing the dataset may be repeated by the plurality of evaluation units until completion.","In some embodiments of the apparatus, the evaluation unit may include one or more processing devices.","In some embodiments of the apparatus, the data subdivision comprises one or more subtasks.","In some embodiments of the apparatus, evaluating the data subdivision may include evaluating one or more subtasks.","In some embodiments of the apparatus, evaluating the data subdivision further may include describing the data subdivision with an XML framework.","In some embodiments of the apparatus, describing the dataset with an XML framework further may include ordering dependencies of the one or more subtasks to form one or more dependent subtasks.","In some embodiments of the apparatus, evaluating the data subdivision may include producing intermediate results and sharing the intermediate results with the one or more dependent subtasks.","In some embodiments of the apparatus, creating the data subdivision may include recursively creating nested data subdivisions.","In some embodiments of the apparatus, creating the data subdivision may include using a one or more configurable subdivision strategies.","In some embodiments of the apparatus, determining the control number may include using configuration rules.","In some embodiments of the apparatus, determining the control number further may include determining available compute resources.","In some embodiments of the apparatus, determining the control number further may include determining available compute resources in response to the configuration rules.","In some embodiments of the apparatus, determining the control number further may include determining the control number in response to the memory size and the one or more processing devices.","In some embodiments of the apparatus, determining the control number further may include using one or more configurable control number strategies.","In some embodiments of the apparatus, evaluating the data subdivision further may include estimating the evaluation duration and measuring the evaluation duration.","Some embodiments of the apparatus may further include a module for sending status messages.","A computer program product is also disclosed. The computer program product may include a computer readable medium having computer usable program code executable to perform operations for processing data, the operations of the computer program product. Some embodiments of the computer program product may include receiving a dataset. Some embodiments of the computer program product may include determining a control number of a processing system, where the control number comprises a number of evaluation units within the processing system. Some embodiments of the computer program product may include processing the dataset using a plurality of evaluation units. In some embodiments of the computer program product, processing the dataset may include allocating a free evaluation unit to form a busy evaluation unit. In some embodiments of the computer program product, processing the dataset may include creating a data subdivision for the busy evaluation unit. In some embodiments of the computer program product, the data subdivision may be a part of the dataset. In some embodiments of the computer program product, processing the dataset may include evaluating the data subdivision. In some embodiments of the computer program product, processing the dataset releasing the busy evaluation unit. In some embodiments of the computer program product, one or more of the allocating, creating, evaluating, and releasing steps are performed concurrently by the plurality of evaluation units.","In some embodiments of the computer program product, processing the dataset may be repeated by the plurality of evaluation units until completion.","In some embodiments of the computer program product, an evaluation unit may include one or more processing devices.","In some embodiments of the computer program product, the data subdivision may include one or more subtasks.","In some embodiments of the computer program product, evaluating the data subdivision may include evaluating one or more subtasks.","In some embodiments of the computer program product, evaluating the data subdivision further may include describing the data subdivision with an XML framework.","In some embodiments of the computer program product, describing the dataset with an XML framework further may include ordering dependencies of the one or more subtasks to form one or more dependent subtasks.","In some embodiments of the computer program product, evaluating the data subdivision further may include producing intermediate results and sharing the intermediate results with the one or more dependent subtasks.","In some embodiments of the computer program product, creating the data subdivision may include recursively creating nested data subdivisions.","In some embodiments of the computer program product, creating the data subdivision may include using a one or more configurable subdivision strategies.","In some embodiments of the computer program product, determining the control number may include using configuration rules.","In some embodiments of the computer program product, determining the control number further may include determining available compute resources.","In some embodiments of the computer program product, determining the control number further may include determining available compute resources in response to the configuration rules.","In some embodiments of the computer program product, determining the control number further may include determining the control number in response to the memory size and the one or more processing devices.","In some embodiments, the computer program product may include using one or more configurable control number strategies.","In some embodiments of the computer program product, evaluating the data subdivision further may include: estimating the evaluation duration and measuring the evaluation duration.","In some embodiments of the computer program product, may send status messages.","The term \u201ccoupled\u201d is defined as connected, although not necessarily directly, and not necessarily mechanically.","The terms \u201ca\u201d and \u201can\u201d are defined as one or more unless this disclosure explicitly requires otherwise.","The terms \u201ccomprise\u201d (and any form of comprise, such as \u201ccomprises\u201d and \u201ccomprising\u201d), \u201chave\u201d (and any form of have, such as \u201chas\u201d and \u201chaving\u201d), \u201cinclude\u201d (and any form of include, such as \u201cincludes\u201d and \u201cincluding\u201d) and \u201ccontain\u201d (and any form of contain, such as \u201ccontains\u201d and \u201ccontaining\u201d) are open-ended linking verbs. As a result, a method or device that \u201ccomprises,\u201d \u201chas,\u201d \u201cincludes\u201d or \u201ccontains\u201d one or more steps or elements possesses those one or more steps or elements, but is not limited to possessing only those one or more elements. Likewise, a step of a method or an element of a device that \u201ccomprises,\u201d \u201chas,\u201d \u201cincludes\u201d or \u201ccontains\u201d one or more features possesses those one or more features, but is not limited to possessing only those one or more features. Furthermore, a device or structure that is configured in a certain way is configured in at least that way, but may also be configured in ways that are not listed.","Other features and associated advantages will become apparent with reference to the following detailed description of specific embodiments in connection with the accompanying drawings.","Certain units described in this specification have been labeled as modules, in order to more particularly emphasize their implementation independence. A module is \u201c[a] self-contained hardware or software component that interacts with a larger system.\u201d Alan Freedman, \u201cThe Computer Glossary\u201d 268 (8th ed. 1998). A module comprises a machine or machines executable instructions. For example, a module may be implemented as a hardware circuit comprising custom VLSI circuits or gate arrays, off-the-shelf semiconductors such as logic chips, transistors, or other discrete components. A module may also be implemented in programmable hardware devices such as field programmable gate arrays, programmable array logic, programmable logic devices or the like.","Modules may also include software-defined units or instructions, that when executed by a processing machine or device, transform data stored on a data storage device from a first state to a second state. An identified module of executable code may, for instance, comprise one or more physical or logical blocks of computer instructions which may be organized as an object, procedure, or function. Nevertheless, the executables of an identified module need not be physically located together, but may comprise disparate instructions stored in different locations which, when joined logically together, comprise the module, and when executed by the processor, achieve the stated data transformation.","Indeed, a module of executable code may be a single instruction, or many instructions, and may even be distributed over several different code segments, among different programs, and across several memory devices. Similarly, operational data may be identified and illustrated herein within modules, and may be embodied in any suitable form and organized within any suitable type of data structure. The operational data may be collected as a single dataset, or may be distributed over different locations including over different storage devices.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 1","b":["100","100","102","104","108","110","100","106","104","102","108","106","108"]},"In one embodiment, the user interface device  is referred to broadly and is intended to encompass a suitable processor-based device such as a desktop computer, a laptop computer, a Personal Digital Assistant (PDA), a tablet computer, a mobile communication device or organizer device having access to the network . In a further embodiment, the user interface device  may access the Internet to access a web application or web service hosted by the server  and provide a user interface for enabling a user to enter or receive information.","The network  may facilitate communications of data between the server  and the user interface device . The network  may include any type of communications network including, but not limited to, a direct PC to PC connection, a local area network (LAN), a wide area network (WAN), a modem to modem connection, the Internet, a combination of the above, or any other communications network now known or later developed within the networking arts which permits two or more computers to communicate, one with another.","In one embodiment, the server  is configured to receive a dataset; determine a control number of a processing system, where the control number comprises a number of evaluation units within the processing system; process the dataset using a plurality of evaluation units; where processing the dataset includes: allocating a free evaluation unit to form a busy evaluation unit; creating a data subdivision for the busy evaluation unit, the data subdivision comprising a part of the dataset; evaluating the data subdivision; and releasing the busy evaluation unit; where allocating, creating, evaluating, and releasing are performed concurrently by the plurality of evaluation units.","Additionally, the server may access data stored in the data storage device  via a Storage Area Network (SAN) connection, a LAN, a data bus, or the like. As discussed in further detail below, received data may be received by such networks and busses and stored in data storage device .","The data storage device  may include a hard disk, including hard disks arranged in an Redundant Array of Independent Disks (RAID) array, a tape storage drive comprising a magnetic tape data storage device, an optical storage device, or the like. In one embodiment, the data storage device  may store healthcare related data, such as insurance claims data, consumer data, or the like. However, data storage  is not limited to simply storing healthcare related and may store, for example any dataset for data processing. The data may be arranged in a database and accessible through Structured Query Language (SQL) queries, or other database query languages or operations.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 2","b":["200","200","102","102","202","200","204","206","208","200","204","208","204","208"]},"In one embodiment, the second data storage device  may store summary data associated with the individual. The summary data may include one or more diagnoses of conditions from which the individual suffers and\/or actuarial data associated with an estimated cost in medical services that the individual is likely to incur. The third data storage device  may store customer service and program service usage data associated with the individual. For example, the third data storage device  may include data associated with the individual's interaction or transactions on a website, calls to a customer service line, or utilization of a preventative medicine health program. A fourth data storage device (not shown) may store marketing data. For example, the marketing data may include information relating to the individual's income, race or ethnicity, credit ratings, etc. In one embodiment, the marketing database may include marketing information available from a commercial direct marketing data provider.","In some embodiments, the data storage devices, in addition to storing data to be processed, may further store necessary instructions for increased configurability of the disclosed systems, methods, and apparatuses. As discussed in more detail below, these instructions may be included user supplied instructions (e.g., in an XML file) to configure certain strategies and algorithms that may be used for data processing. Furthermore, in some embodiments, the data storage device may further store various variables of the data processing systems. For example, the system may comprise a variable number of processors (e.g., computer processors and the like) each with varying capacities and capabilities. As such, the variables associated with the availability of computing resources may be stored in the data storage devices.","In one embodiment, the server  may submit a query to selected data storage devices - to collect a consolidated set of data elements associated with an individual or group of individuals. The server  may store the consolidated dataset in a consolidated data storage device . In such an embodiment, the server  may refer back to the consolidated data storage device  to obtain a set of data elements associated with a specified individual. Alternatively, the server  may query each of the data storage devices - independently or in a distributed query to obtain the set of data elements associated with a specified individual. In another alternative embodiment, multiple databases may be stored on a single consolidated data storage device .","In various embodiments, the server  may communicate with the data storage devices - over the data-bus . The data-bus  may comprise a SAN, a LAN, or the like. The communication infrastructure may include Ethernet, Fibre-Chanel Arbitrated Loop (FC-AL), Small Computer System Interface (SCSI), and\/or other similar data communication schemes associated with data storage and communication. For example, the server  may communicate indirectly with the data storage devices -; the server first communicating with a storage server or storage controller .","The server  may host a software application configured for processing data. The software application may further include modules for interfacing with the data storage devices -, interfacing a network , interfacing with a user, and the like. In a further embodiment, the server  may host an engine, application plug-in, or application programming interface (API). In another embodiment, the server  may host a web service or web accessible software application.",{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 3","b":["300","102","110","302","304","302","302","302","302","302","302"]},"The computer system  also may include Random Access Memory (RAM) , which may be SRAM, DRAM, SDRAM, or the like. The computer system  may utilize RAM  to store the various data structures used by a software application configured to processing data. The computer system  may also include Read Only Memory (ROM)  which may be PROM, EPROM, EEPROM, optical storage, or the like. The ROM may store configuration information for booting the computer system . The RAM  and the ROM  hold user and system  data.","The computer system  may also include an input\/output (I\/O) adapter , a communications adapter , a user interface adapter , and a display adapter . The I\/O adapter  and\/or user the interface adapter  may, in certain embodiments, enable a user to interact with the computer system  in order to input information. In a further embodiment, the display adapter  may display a graphical user interface associated with a software or web-based application for processing data.","The I\/O adapter  may connect to one or more storage devices , such as one or more of a hard drive, a Compact Disk (CD) drive, a floppy disk drive, a tape drive, to the computer system . The communications adapter  may be adapted to couple the computer system  to the network , which may be one or more of a LAN and\/or WAN, and\/or the Internet. The user interface adapter  couples user input devices, such as a keyboard  and a pointing device , to the computer system . The display adapter  may be driven by the CPU  to control the display on the display device .","The present embodiments are not limited to the architecture of system . Rather the computer system  is provided as an example of one type of computing device that may be adapted to perform the functions of a server  and\/or the user interface device . For example, any suitable processor-based device may be utilized including without limitation personal data assistants (PDAs), computer game consoles, and multi-processor servers. Moreover, the present embodiments may be implemented on application specific integrated circuits (ASIC) or very large scale integrated (VLSI) circuits. In fact, persons of ordinary skill in the art may utilize any number of suitable structures capable of executing logical operations according to the described embodiments.","Furthermore, as shown, the server  is shown as a single server. In some embodiments, the processing devices are highly scalable. For example, suitable processors may not only include a single server but a plurality of processing devices (e.g., multi-processor server, multiple multi-processor servers, and the like). In some embodiments, the processing devices may comprise cloud computing technologies to further scale the availability of computing resources. For example, in some embodiments of the disclosed invention, a processing device may comprise a network of processing devices with variable computing resources.",{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 4","b":["400","400","102","400","110","400","402","108","400","104"]},"The network-based system  may include components or devices configured to operate in various network layers. For example, the server  may include modules configured to work within an application layer , a presentation layer , a data access layer  and a metadata layer . In a further embodiment, the server  may access one or more datasets - that comprise a data layer or data tier . For example, a first dataset , a second dataset  and a third dataset  may comprise a data tier  that is stored on one or more data storage devices -.","One or more applications  (e.g., a web application, application accessible across a network, or the like) may operate in the application layer . For example, a user may interact with the application  though one or more I\/O interfaces ,  configured to interface with the application  through an I\/O adapter  that operates on the application layer. In one particular embodiment, an application  may be provided for processing data that includes software modules configured to perform the steps of receiving a dataset; determining a control number of a processing system (where the control number comprises a number of evaluation units within the processing system); processing the dataset using a plurality of evaluation units (where processing the dataset includes: allocating a free evaluation unit to form a busy evaluation unit; creating a data subdivision for the busy evaluation unit; evaluating the data subdivision; and releasing the busy evaluation unit). Moreover, the allocating, creating, evaluating, and releasing are performed concurrently by the plurality of evaluation units.","In a further embodiment, the server  may include components, devices, hardware modules, or software modules configured to operate in the presentation layer  to support one or more web services . For example, an application  may access or provide access to a web service  to perform one or more web-based functions for the application . In one embodiment, an application  may operate on a first server  and access one or more web services  hosted on a additional servers (not shown) during operation.","In one embodiment, an application  or a web service  may access one or more of the datasets - through the data access layer . In certain embodiments, the data access layer  may be divided into one or more independent data access layers  for accessing individual datasets - in the data tier . These individual data access layers  may be referred to as data sockets or adapters. The data access layers  may utilize metadata from the metadata layer  to provide the application  or the web service  with specific access to the dataset .","For example, the data access layer  may include operations for performing a query of the datasets - to retrieve specific information for the application  or the web service . In a more specific example, the data access layer  may include a query for status update regarding a particular subdivision of data processing.","The schematic flow chart diagrams that follow are generally set forth as logical flow chart diagrams. As such, the depicted order and labeled steps are indicative of one embodiment of the presented method. Other steps and methods may be conceived that are equivalent in function, logic, or effect to one or more steps, or portions thereof, of the illustrated method. Additionally, the format and symbols employed are provided to explain the logical steps of the method and are understood not to limit the scope of the method. Although various arrow types and line types may be employed in the flow chart diagrams, they are understood not to limit the scope of the corresponding method. Indeed, some arrows or other connectors may be used to indicate only the logical flow of the method. For instance, an arrow may indicate a waiting or monitoring period of unspecified duration between enumerated steps of the depicted method. Additionally, the order in which a particular method occurs may or may not strictly adhere to the order of the corresponding steps shown.","Furthermore, each of the various method steps disclosed herein may be implemented as a software module. Similarly, one or more steps may be grouped together to form one such software module. A computer program product configured to process data may be comprised of one or more of these software modules. In some embodiments, the server  may be configured to execute one or all of the method steps described here.",{"@attributes":{"id":"p-0100","num":"0099"},"figref":["FIG. 5","FIG. 2"],"b":["500","500","502"]},"As used herein, a \u201cdataset\u201d is a collection of data to be processed. A dataset may organized as plurality of tasks to be processed. For example, a healthcare claim may include missing or incorrect information, and a particular task may include compiling and\/or correcting that information from the appropriate database to update the information in the healthcare claim. As explained, however, a dataset can include any data to be processed\u2014not simply healthcare data. Other applications\u2014such as a financial institution doing end of day book reconciliations for funds transfers\/stock orders\u2014may benefit from the data processing methods, systems, and apparatuses disclosed herein. A particular dataset may also be considered to have one or more dataset elements, wherein each dataset element may characterized by the type of data stored. For example, a dataset of healthcare claims may include dataset elements in such categories as patient identifiers, provider identifiers, claim identifiers, and the like.","As shown with respect to , a particular task , may include additional subtasks -. In some embodiments, tasks may be defined recursively. That is, each task may include additional subtasks, and each subtask may include additional subtasks. For example, as shown in the figure, subtask  further comprises additional subtasks . Furthermore, tasks and subtasks may include ordering dependencies. As shown with respect to , subtask S must be performed before S and S. Subtask S and S, however, may be completed in any order, and as shown can be completed in parallel. Subtask S cannot begin until the completion of subtask both S and S. The evaluation of subtasks with dependencies will be discussed in more detail below. In some embodiments, tasks may be nested within tasks. In some embodiments, the tasks and subtask may be organized using an XML (or other like configuration framework).","A particular dataset to be processed may include thousands, millions, billions, or more tasks. In some embodiments of the method, particular details regarding the number of tasks and subtasks may be unknown. For example, the precise size of the dataset to be processed may be unknown before the processing of the dataset begins. As described in more detail below, such a feature allows the dataset to be incrementally subdivided and processed as required.","The method  may proceed by determining  a control number of a processing system. As used in herein, an evaluation unit is a discrete computing resource used to process a dataset. As discussed in detail above, a server  may comprise one or more processing devices. For example, in various embodiments, an evaluation unit may comprise a single CPU, a single server, a multi-process server, and\/or a cloud computing resource. In some embodiments, multiple processing units may be comprised in a single processing device. Thus, evaluation units need not be physically discrete from one another. In some embodiments, the control number may comprise a number of evaluation units within the processing system. In some embodiments, the control number defines the maximum number of evaluation units that may be used to concurrently process data.","In a simple example, a processing system comprising four processing devices may be determined to have a control number of 4. As such, the processing system could be described as having four evaluation units capable of concurrently processing data. In practice, the determination of a control number will often be more complicated. In some embodiments, determining a control number may comprise determining the number of available computing resources. For example, these various computing resources may include the memory size and\/or the processing capability (e.g., the number and speed of CPUs) of each of the one or more processing devices that make up the processing system. Moreover, the sum of the computing resources may also be considered when determining control number.","In some embodiments, the control number is determined in response to various configuration rules. Configuration rules may be pre-defined (e.g., through an XML framework or other configuration file) by a user and received by the method . In some embodiments, the configuration rules may define the minimum and\/or maximum computing resources required for each evaluation unit. In response to the available computing resources and within the bounds of the configuration file, a control number may be determined. In some embodiments, determining the control number may include using one or more configurable control number strategies. A control number strategy may include known programming strategies used to determine the available resources within a computing system and may apply the configuration rules. Notably, the control number strategy is configurable, and various different logical modules and strategies may be used to determine a control number.","A configuration rule that may be used with certain embodiments of the invention may include the use of a specific mathematical formula in response to the number of processing devices (e.g., CPUs) and the amount of memory. A specific example of a control number configuration rule follows for a given system:\n\nControl number=*(Number of CPUs)+*(Number of gigabytes of memory)\n\nwherein N and M are user selected variables. Applying this formula where N is 4 and M is 1 for a system with 4 CPUs and 20 gigabytes of memory, the control number would be: 4*(4)+1*(20)=36.\n","The method  may proceed by processing  the dataset. Generally, processing the dataset may include evaluating each of the tasks in the dataset using a plurality of evaluation units\u2014concurrently. Processing  the dataset may first include allocating  a free evaluation unit. As described above, the control number may define the number of evaluation units available for processing in the processing system. At any given time, any such evaluation unit may be characterized as \u201cfree\u201d or \u201cbusy.\u201d A busy evaluation unit is currently evaluating a dataset, and a free evaluation unit is available to evaluate a dataset. Allocating  an evaluation unit may include checking whether any evaluation units are free. If an evaluation unit is free, that evaluation unit may be allocated to evaluate a dataset.","Processing  the dataset may also include creating  a data subdivision for the busy evaluation unit. A data subdivision may comprise a part of the dataset. As described earlier, a data subdivision comprises a plurality of tasks to be processed. A data subdivision may include a grouping of those tasks. In a simple example, a dataset may include 1,000,000 discrete tasks that need to be evaluated, and a particular data subdivision may have 100 of these tasks. Thus, in this example, if each data subdivision has 100 tasks, there would be 10,000 data subdivisions. In some embodiments, the data subdivisions may be incrementally subdivided. Thus, rather than subdividing all 1,000,000 tasks into 10,000 subdivisions before evaluating the tasks, each data subdivision may be created dynamically as resources allow (e.g., as an evaluation unit is free or is expected to be free).","In some embodiments, configurable strategies may be used for subdividing datasets to form data subdivisions. These strategies may be configured and implemented both before and during the processing of a given dataset. As such, based on the number of CPUs, operating system, memory size, and\/or evaluation times, the configured subdivision strategy may change dynamically. For example, a \u201cnull subdivision\u201d strategy may be used, wherein no further subdivision of data is performed. This may be useful where the data is organized recursively (e.g., multiple subtasks nested with subtasks\/tasks). An \u201cidentification based\u201d strategy may be used based on a unique identification number based on the dataset elements within a dataset. As explained earlier, the various data stored in a dataset may be organized through one or more dataset elements. In some embodiments, each dataset element may have a unique numerical identity. The identification based strategy may be configured to grab N dataset elements at a time (where N represents the control number). As the data subdivisions are created, the range of the new subdivision may begin where the previous subdivision ended. For example if N=100, the first data subdivision would have a range of 1-100, the second 101-200, and so on. The strategy uses the unique numerical identity to find the dataset elements associated with the assigned range. The unique numerical identities need not be contiguous, and thus, the strategy may find all of the dataset elements within the assigned range. The strategy is configurable, and as such, any user defined strategy based on the dataset contents and system specification may be used. User defined subdivision strategies may be based on anything within the dataset, computing environment (CPUs, memory, operating system, or the like), or prior knowledge. For example, an application may choose to process elements of the dataset in subdivisions based on gender, the number of days the bill is overdue, orders meeting a certain criteria such as by stock symbol, or a combination of criteria (gender, diagnosis, and age).","Processing  the datasets may also include evaluating  the data subdivision. In some embodiments, evaluating  the data subdivision is performed concurrently by the plurality of evaluation units that make up the processing systems. For example, if the control number 4, in some embodiments, four evaluation units will each concurrently evaluate  a data subdivision. In some embodiments, once the evaluation  of a data subdivision has been completed, the evaluation unit may be released . Thus, the released evaluation unit may now be characterized as free. This newly free evaluation unit may be allocated , and new data subdivision may be created , and the new data subdivision may be evaluated . This pattern of allocating, creating, evaluating, and releasing may repeat and run concurrently until the dataset is completely processed.","In some embodiments of the method, status messages may be created and\/or sent to inform the status of the data processing. For example, in some embodiments, the evaluation duration time may be estimated and reported. The actual evaluation time may be compared to the evaluation duration time.","In some embodiments, a data subdivision may be characterized as more than simply a collection of tasks. As discussed above, a task and its associated subtasks may include one or more dependencies. As such, in some embodiments, each data subdivision may be characterized as independent of the other data subdivisions. That is, all of the tasks and subtasks within a given data subdivision can be evaluated independent of the other data subdivisions. Thus, a data subdivision may comprise within it the logic to address the various dependencies within the various tasks. Within a data subdivision the completion of a task or a subtask may produce an intermediate result, and that intermediate result may be shared with other dependant subtasks within the data subdivision. Without such data subdivision independence, intermediate results between data subdivision may be persisted to disk storage while another data subdivision is being evaluated. This feature of this embodiment eliminates the performance overhead of persisting intermediate results between dependent steps.","All of the methods disclosed and claimed herein can be made and executed without undue experimentation in light of the present disclosure. While the apparatus and methods of this invention have been described in terms of preferred embodiments, it will be apparent to those of skill in the art that variations may be applied to the methods and in the steps or in the sequence of steps of the method described herein without departing from the concept, spirit and scope of the invention. In addition, modifications may be made to the disclosed apparatus and components may be eliminated or substituted for the components described herein where the same or similar results would be achieved. All such similar substitutes and modifications apparent to those skilled in the art are deemed to be within the spirit, scope, and concept of the invention as defined by the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The following drawings form part of the present specification and are included to further demonstrate certain aspects of the present invention. The invention may be better understood by reference to one or more of these drawings in combination with the detailed description of specific embodiments presented herein.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
