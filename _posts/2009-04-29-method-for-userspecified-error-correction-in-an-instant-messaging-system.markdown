---
title: Method for user-specified error correction in an instant messaging system
abstract: A method and system enter a correction for a previously sent message, determine whether to send a complete corrected message or a message correction specification, and send the selected message to a messaging server. The messaging server receives the message correction specification and a message identifier (ID), and sends the message correction specification and the message ID to a recipient client system if a message with a corresponding message ID has previously been sent to the recipient client system. Then, the recipient client system receives the message correction specification and message ID, retrieves the message with a corresponding message ID from its conversation log, corrects the message, updates the conversation log, and activates an alert to notify a user of an update. If the message has not previously been sent, the messaging server corrects the message and sends the corrected message and the message ID to the recipient client system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07937445&OS=07937445&RS=07937445
owner: International Business Machines Corporation
number: 07937445
owner_city: Armonk
owner_country: US
publication_date: 20090429
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application is a continuation of U.S. patent application Ser. No. 11\/852,829, filed on Sep. 10, 2007, now U.S. Pat. No. 7,543,033, which is a continuation of U.S. patent application Ser. No. 10\/042,668, filed Jan. 8, 2002, now U.S. Pat. No. 7,296,057; the collective entire disclosure of which being herein incorporated by reference.","1. Field of the Invention","This invention generally relates to the field of instant messaging, and more particularly relates to a system and method for user-specified error correction in an instant messaging system.","2. Description of Related Art","Instant messaging has become an integral part of collaboration within engineering and business organizations. Within many businesses, instant messaging has become a mission-critical application, vital to quickly forming and coordinating task-oriented teams across geographical and organizational boundaries.","In discussions conducted over instant messaging systems (such as Lotus Sametime, AOL Instant Messenger, etc.) users tend to compose short messages, dispatch them immediately, then notice the spelling and grammatical errors, omissions, and other errors that they have typed. By the time these errors are noticed, the message has already been sent and displayed to one or more other parties, and it is too late to correct the original. Common practice is to send a new message clarifying the original, erroneous messages.","Therefore a need exists to overcome the problems with the prior art as discussed above, and particularly for a method for user-specified error correction in an instant messaging system.","According to a preferred embodiment of the present invention, a method and system enter a correction for a previously sent message, determine whether to send a complete corrected message or a message correction specification, and send the selected message to a messaging server. The messaging server receives the message correction specification and a message identifier (ID), and sends the message correction specification and the message ID to a recipient client system if a message with a corresponding message ID has previously been sent to the recipient client system. Then, the recipient client system receives the message correction specification and message ID, retrieves the message with a corresponding message ID from its conversation log, corrects the message, updates the conversation log, and activates an alert to notify a user of an update. If the message has not previously been sent, the messaging server corrects the message and sends the corrected message and the message ID to the recipient client system.","The present invention, according to a preferred embodiment, overcomes problems with the prior art by allowing the users of an instant messaging system to perform additional editing operations on messages they have already sent. These corrections are then automatically reflected in the recipients' displays of the ongoing instant messaging conversation (conversation log).","Popular instant messaging systems display a running log of all instant messages sent and received in a particular conversation. Participants in a conversation typically run instant messaging clients, which are often connected via an instant messaging server. When a user dispatches a message, the server routes it to recipients as a protocol message entity. A preferred embodiment introduces a new protocol entity, a message correction.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["102","106","104","108","108","102","106","210","110","102","106","102","106","108","104","112","102","106"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2","b":["102","106","220","102","106","220","212","212","210","214","216","214","222","210","212","214","204","202","204","102","106","206","208","102","106","218","108","214","102","106"]},"Glue software  may include drivers, stacks, and low-level application programming interfaces (API's) and provides basic functional components for use by the operating system platform  and by compatible applications that run on the operating system platform  for managing communications with resources and processes in the computing system , .","The controller\/processor unit  manages resources, such as the data stored in data memory , the scheduling of tasks, and the operation of the instant messaging client  in the program memory . The controller\/processor unit  may also manage a communication network interface  for communicating with the network link , and a computer-readable medium drive . Additionally, the controller\/processor unit  also manages many other basic tasks of the computer system , , in a manner well known to those of ordinary skill in the art.","Each client computer system , , may include, among other things, one or more computers, a display monitor , and at least a computer readable medium . The computers preferably include means for reading and\/or writing to the computer readable medium. The computer readable medium allows a computer system to read data, instructions, messages or message packets, and other computer readable information from the computer readable medium. The computer readable medium, for example, may include non-volatile memory, such as Floppy, ROM, Flash memory, Disk drive memory, CD-ROM, and other permanent storage. It is useful, for example, for transporting information, such as data and computer instructions, between computer systems. Furthermore, the computer readable medium may comprise computer readable information in a transitory state medium such as a network link and\/or a network interface , including a wired network or a wireless network, that allow a computer to read such computer readable information.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIGS. 3","FIG. 1","FIG. 3"],"b":["4","5","6","100","102","302","210","304","306","104"]},"When a message correction occurs, the originating client system  follows the operational sequence of . The originating client system  enters the sequence, at step , wherein a user enters a message correction by selecting the message to be corrected from the conversation log and editing the previously sent message directly in the conversation log. According to one preferred embodiment of the present invention, the error corrector  then queries the message server  to see if the messaging environment requires a complete message resend as a correction message. Note that an alternative preferred embodiment may include a local query to a configuration parameter (not shown) in memory  that indicates when a complete message is required by the messaging environment for resending an error correction message. This alternative embodiment would avoid the additional query to the server  thereby enhancing network communication throughput. If the system environment requires a complete message resend, the originating system  resends the entire corrected message, at step . Otherwise, the originating system  checks, at step , whether the type of change for error correction requires sending a complete correction of a previous message, and if so, resends the entire corrected message. This includes cases where the server  implements message processing services such as language translation, or when transmitting binary formats such as compressed images. If an entire correction is not required, the error corrector  computes an optimized message correction, at step . Message corrections are encoded as a set of at least one text replacement specification, which in the event of a plurality of specifications would be applied sequentially to update the content of a message. Each text replacement specification contains a start character index, an end character index, and insertion text. For example:\n\n",{"@attributes":{"id":"p-0022","num":"0024"},"figref":"FIG. 5","b":["104","104","102","502","112","504","112","106","506","112","508","112","106","512","106","514"]},"The message server  may also include an ephemeral storage system (not shown). This allows the message server  to enable server-side processing by keeping its own log of the messages in a discussion (which may be purged once the parties end the conversation). The originating client system  issues the same optimized corrections as described above. If no server-side processing is required, the optimized correction is simply forwarded. If server-side processing is required by the system configuration, the server looks up the complete message in its log, applies the correction, computes a new optimized message correction, and sends it to the recipient.","Examples of system configurations that may require server-side processing include such factors as: language translation of messages, correction of binary format information in a message, correction of image information in a message, enhancing system processing efficiency (by moving processing intensive functions to a more powerful processor such as in a server ), and enhancing network communication efficiency (such as by delivering reduced amount of message information and\/or reduced duplication of delivered message information between the client system , the message server , and the receiving system ). Other system configuration factors, and including factors representing trade-offs between the aforementioned factors, for implementing server-side processing in a particular embodiment should be obvious to those of ordinary skill in the art in view of the present discussion. For example, a particular system configuration may benefit by an enhanced system processing efficiency (e.g., selection of a particular processor on a network to handle processing) or by an enhanced network communication efficiency such as by reducing an overall amount of delivered information overhead. These types of system configuration factors, and many variations thereof as are obvious to those of ordinary skill in the art, are anticipated by the preferred embodiments of the present invention.","As discussed above, if a particular system configuration requires server-side processing then the server  looks up the complete message in its log, applies the correction, computes a new optimized message correction, and sends it to the recipient system . The new correction message represents the difference between a processed version of the original logged message and a processed version of the corrected message. All this server-side processing may take place without the knowledge of the sender or the recipient.","In an alternative embodiment, the message server  signals the originating client system  to enter a \u201cserver-side processing\u201d mode, denoting that server-side messaging is being performed and that the server  is not maintaining a message log. The originating client system  issues a full copy of the original message, along with a message correction specification. These two pieces of information allow the server  to compute an optimized correction message to send to the recipient client system . In this scenario the sender is aware that server-side processing is being performed, but the process is totally transparent to the recipient.","Alternatively, the message server  signals the originating client system  to enter a \u201cserver-side processing\u201d mode, denoting that server-side messaging is being performed and that the server  is not maintaining a message log. The originating client system  always issues full copies of corrected messages, which the server  processes and routes the full copies of corrected messages to the recipient system . This scenario has the least desirable network bandwidth efficiency, and both the sender and recipient are typically aware that server-side processing has occurred.",{"@attributes":{"id":"p-0028","num":"0030"},"figref":"FIG. 6","b":["106","106","104","602","604","106","606","110","608","610","110","110","612"]},"The present invention can be realized in hardware, software, or a combination of hardware and software. A system according to a preferred embodiment of the present invention can be realized in a centralized fashion in one computer system, or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system\u2014or other apparatus adapted for carrying out the methods described herein\u2014is suited. A typical combination of hardware and software could be a general-purpose computer system with a computer program that, when being loaded and executed, controls the computer system such that it carries out the methods described herein.","A preferred embodiment of the present invention can also be embedded in a computer program product, which comprises all the features enabling the implementation of the methods described herein, and which\u2014when loaded in a computer system\u2014is able to carry out these methods. Computer program means or computer program in the present context mean any expression, in any language, code or notation, of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a) conversion to another language, code or, notation; and b) reproduction in a different material form.","A computer system may include, inter alia, one or more computers and at least a computer readable medium, allowing a computer system, to read data, instructions, messages or message packets, and other computer readable information from the computer readable medium. The computer readable medium may include non-volatile memory, such as ROM, Flash memory, Disk drive memory, CD-ROM, and other permanent storage. Additionally, a computer readable medium may include, for example, volatile storage such as RAM, buffers, cache memory, and network circuits. Furthermore, the computer readable medium may comprise computer readable information in a transitory state medium such as a network link and\/or a network interface, including a wired network or a wireless network, that allow a computer system to read such computer readable information.","Although specific embodiments of the invention have been disclosed, those having ordinary skill in the art will understand that changes can be made to the specific embodiments without departing from the spirit and scope of the invention. The scope of the invention is not to be restricted, therefore, to the specific embodiments, and it is intended that the appended claims cover any and all such applications, modifications, and embodiments within the scope of the present invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIGS. 3","FIG. 1"],"b":["4","5","6"]}]},"DETDESC":[{},{}]}
