---
title: Downloadable remotely stored device drivers for communication with set-top box peripherals
abstract: A system that downloads device drivers for peripheral devices to a media client device includes, among other things, a memory with logic, and a processor configured with the logic to download a peripheral device driver to a media client device in response to a peripheral device interfacing with the media client device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07765280&OS=07765280&RS=07765280
owner: Scientific-Atlanta, LLC
number: 07765280
owner_city: Lawrenceville
owner_country: US
publication_date: 20021106
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The present invention is generally related to television systems, and, more particularly, is related to peripheral device support in television systems.","With recent advances in digital transmission technology, subscriber television systems are now capable of providing much more than traditional analog broadcast video. In implementing enhanced programming, the home communication terminal (\u201cHCT\u201d), otherwise known as the set-top box, has become an important computing device for accessing content services (and content within those services) and navigating a user through a maze of available services. In addition to supporting traditional analog broadcast video functionality, digital HCTs (or \u201cDHCTs\u201d) now also support an increasing number of two-way digital services such as video-on-demand and personal video recording.","Typically, a DHCT is connected to a cable or satellite, or generally, a subscriber television system, and includes hardware and software necessary to provide the functionality of the digital television system at the user's site. Some of the software executed by a DHCT can be downloaded and\/or updated via the subscriber television system. Each DHCT also typically includes a processor, communication components, and memory, and is connected to a television set or other display device, such as a personal computer, and can be further connected to peripheral devices like portable audio players, printers, or digital cameras, among others. While many conventional DHCTs are stand-alone devices that are externally connected to a television set, a DHCT and\/or its functionality may be integrated into a television or personal computer or even an audio device such as a programmable radio, as will be appreciated by those of ordinary skill in the art.","There are a variety of peripheral devices available with varying formats for communication with client devices, such as DHCTs. For example, a peripheral device such as an MP3 player can use communication formats such as Universal Serial Bus (USB), Firewire (IEEE 1394), Bluetooth, as well as proprietary formats, among others. DHCTs equipped to communicate with peripheral devices, for example via a USB port, may either use a significant portion of memory to store the many varieties of device drivers to enable communication according to these formats, or operate with a limited selection of device drivers resulting in limited peripheral device compatibility. Thus, a need exists in the industry to address the aforementioned and\/or other deficiencies and\/or inadequacies.","Preferred embodiments of the invention now will be described more fully hereinafter with reference to the accompanying drawings, in which preferred embodiments of the invention are shown. One way of understanding the preferred embodiments of the invention includes viewing them within the context of a subscriber television system. In particular, the preferred embodiments of the invention include systems and methods for maintaining a library of device drivers at a server located remotely (e.g., at a headend) and downloading, preferably upon request from a digital home communication terminal (DHCT), one or more device drivers from the headend to be used by the DHCT to communicate with one or more peripheral devices that are connected to the DHCT. As is understood by those having ordinary skill in the art, device drivers include programming code that control and provide software interface to a peripheral device when connected to a device such as a DHCT. Although the terms \u201cconnected\u201d or \u201cconnection\u201d or similar terms will be used herein when referring to the interaction or interfacing between the DHCT and a peripheral device, it will be understood that practically any interfacing between the DHCT and peripheral device is within the scope of the preferred embodiments of the invention, whether the interfacing occurs via an actual physical connection or via wireless communication. The preferred embodiments of the invention use peripheral device information, such as vendor and\/or device identification (ID) acquired at the DHCT when the peripheral device is connected, to search for and retrieve from the library a device driver suitable for use with the connected peripheral device. The retrieved device driver is then downloaded to the DHCT for use by an operating system and\/or an application running on the DHCT to communicate with the peripheral device.","Although other communication environments and other peripheral devices are considered to be within the scope of the preferred embodiments, the preferred embodiments of the invention are described in the context of a DHCT that can support a plurality of peripheral device communication formats for a music service, among other services, in cooperation with a server side device driver application that supplies the device drivers and a server side music application that supplies the music. Thus, an example subscriber television system is introduced, along with select components in an example headend and an example DHCT. Because the DHCT will be described in an implementation wherein the DHCT detects a connection with a peripheral device, an example portable audio player is described as one example peripheral device that can interface with the DHCT and require a downloaded device driver. After the description of an example portable audio player, some timing diagrams are used to describe the interactions at the headend, at the DHCT, and between the DHCT, headend, and a portable audio player to request, download, and\/or receive a device driver for the portable audio player. Finally, some example methods from the perspective of the DHCT and the headend are described for providing device drivers for a peripheral device connected to the DHCT.","The preferred embodiments of the invention may, however, be embodied in many different forms and should not be construed as limited to the embodiments set forth herein; rather, these embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope of the invention to those having ordinary skill in the art. Furthermore, all \u201cexamples\u201d given herein are intended to be non-limiting, and are provided as an exemplary list among many other examples contemplated but not shown.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 1","FIG. 1","FIG. 1"],"b":["10","10","11","16","18","10","10"]},"A DHCT  is typically situated at the residence or place of business of a user and may be a stand-alone unit or integrated into another device such as, for example, a television set or a personal computer or other display devices, or an audio device, such as a programmable radio, among other devices. The DHCT  receives signals (including video, audio and\/or other data) from the headend  through the network  and provides reverse information to the headend  through the network .","The headend  preferably receives content from a content provider (not shown). The headend  may include one or more server devices (not shown) for providing video, audio, and\/or data to media client devices such as the DHCT . The headend  and the DHCT  cooperate to provide a user with television services via a television set (not shown). The television services may include, for example, broadcast television services, music services, cable television services, premium television services, video-on-demand (VOD) services, and\/or pay-per-view (PPV) services, among others.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2","FIG. 2","FIG. 2"],"b":["11","11","11","11","11","11","18","11"]},"In one implementation, a digital audio service (not shown) broadcasts many different audio channels to the headend , which broadcasts the audio channels over the network  to consumers for playback. The broadcast channels originate with a programming provider (not shown) who transmits the audio channels to a satellite (not shown). The headend  receives the satellite signal and, after processing according to mechanisms described below, transmits a reformatted signal to a plurality of DHCTs . Subscribing DHCTs  can decode the signal for playback of the original audio content, or the signal can be passed along and decoded at a peripheral device for playback. In a typical digital audio service, there will be about 40 channels of audio.","As shown, the selected components of the example headend  include a communications interface , a digital network control system (DNCS) , a music server , a device driver server , a quadrature amplitude modulation (QAM) modulator  and quadrature phase shift keying (QPSK) modem , and router . It will be understood by those having ordinary skill in the art that the example headend  can include additional components, such as additional servers, switches, QAM modulators, conditional access and digital rights management components, communication interfaces, among others, or can omit components. In one implementation, the satellite signal is received by the communications interface , and the demodulated data from that signal can be sent via Ethernet  (or in other embodiments, via asynchronous transport mode (ATM), asynchronous system interface (ASI), or some communications protocol for storage on a server) to the music server , among other servers. That is, music data in the music data stream sourced via the satellite signal is \u201crecorded\u201d by the music server . For example, tags can be embedded in the music data stream that can delineate the beginning and end of songs, using for example MPEG-2 transport splice points or clocking mechanisms inherent to MPEG that are synchronized to the headend clock (not shown). The music server  and a plurality of other servers, such as the device driver server , are connected to the DNCS  via the Ethernet . Stored data in the music server  is preferably forwarded to the QAM modulator , where it is converted\/remodulated to a QAM format for transmission over the network .","In another implementation, functionality of the music server  and its associated databases can be implemented external to the headend . In such a case, the music data is received via a satellite signal that is received at the communications interface , converted to Ethernet (or ASI, DigiCable Headend Expansion Interface (DHEI), etc.), and then routed to the QAM modulator  (via connection ) for transmission to subscribers as a QAM modulated signal. Identifying indicia for instances of music (e.g., songs), such as title and\/or artist data, are included by the programming originator at a satellite uplink site (not shown).","In still other implementations, music service functionality is provided by the headend  and locations external to the headend . For example, the music server  is resident at the headend , but supplied with precompressed audio (e.g., tapes, discs, etc.) that has been licensed for installation on the music server . Additionally, music can be provided using sources external to the headend  as indicated in the last described implementation, wherein the music server  is bypassed such that not all the content sourced externally from the headend  is available on the music server , and vice versa. In still other implementations, the music server  can include precompressed audio and also record music off the music data stream sourced from the satellite signal.","The DNCS  provides management, monitoring, and control of the network's elements and of the broadcast services provided to users. The DNCS  includes, among other modules, a subscriber database  that includes information about the subscribers in an illuminated region for such purposes as billing information, data survey, and marketing, among others. In one implementation, the DNCS  uses a data insertion multiplexer  and a data QAM  to insert in-band broadcast file system (BFS) data into an MPEG-2 transport stream that is broadcast and received via a DHCT communication interface (not shown) and tuner system (not shown). In one implementation, the QPSK modem  is responsible for transporting the out of band IP (Internet protocol) datagram traffic between the distribution headend  and the DHCT . Data transmitted or received by the QPSK modem  may be routed by a headend router . The headend router  may be used to deliver upstream data to the various server applications, such as a music server application  and a driver manager . For example, in one embodiment, an indication of a peripheral device connection (i.e., connected to the DHCT ) can be received in the out of band signal path of the network  from one or more DHCTs at the QPSK modem  and routed by the router  to the device driver server  to access and retrieve a device driver for the connected peripheral device. Note that the out of band signal path, though shown and described using QPSK modulation, can be implemented using QAM or QPSK modulation in the forward or reverse signal path depending on, among other factors, customer requirements.","The device driver server  is run by the driver manager , and also includes a device driver library  that the driver manager  searches through and from which it retrieves a device driver for download to a DHCT  that requested the device driver. The device driver library  can be implemented as a database or other data structure. The device driver library  includes device drivers from a plurality of vendors; the device drivers having various functionality and configured with one or more communication formats. In one embodiment, one or more device drivers stored in the device driver library  can be downloaded to the DHCT  and loaded into memory of the DHCT  for use by an application and\/or an operating system that is communicating with a connected (or interfaced) peripheral device. Each device driver preferably includes a common interface to either an application in the DHCT  or an operating system in the DHCT . Equipped with knowledge of the specification of this common interface, individual hardware vendors or other third parties can produce device drivers for their peripheral devices and contribute them to the device driver library . The installation of the required device drivers is preferably performed at the headend  (or other locations that include headend functionality) by the cable operator (or application vendor) when the cable operator determines there is sufficient demand for the device driver and the device driver meets specified quality and\/or security standards defined by the cable operator.","Note that conditional access can also be employed in some embodiments of the invention. For example, the device driver could potentially be signed by the cable operator using a private key of the cable operator that is part of a conditional access system (not shown) as part of the process of installing the driver on the device driver server  at the headend . The DHCT  could then request and receive the device driver and use the conditional access system (which includes the DHCTs verified local copy of the cable operator's public key) to verify that the device driver was not modified on the device driver server  or in transit to the DHCT .","In other embodiments, the device drivers can be delivered to the DHCT  using a broadcast file system (BFS) server . Such a mechanism can be employed in a one-way (e.g., satellite) system or two way interactive system. Applications on both the headend  and the DHCT  () can access the data stored in the BFS server  in a similar manner to a file system found on operating systems. The BFS server  is a part of a broadcast file system that has a counterpart BFS client (not shown) in a DHCT  connected to the network . The BFS server  repeatedly sends data on a data carousel (not shown) over a period of time in cyclical repeated fashion so that a DHCT  that is in need of reading any particular data file or parts thereof may receive it when needed, such as when requested by a user or one or more of its internal running processes, for example. Thus, in one implementation, device drivers and information identifying a particular peripheral, operating system (OS), and\/or DHCT model for each device driver are transmitted in a cyclical fashion. The DHCT  scans the BFS data stream looking for a device driver that is compatible with itself and the connected peripheral device upon detecting the connection of the peripheral device. For example, a BFS file can list all device drivers, operating system\/DHCT compatibility levels, and\/or their associated filenames in a table (not shown) transmitted on a periodic basis (e.g., every 5 seconds). That is, the table is used to locate the correct device driver for the connected peripheral device. The DHCT  (via the BFS client) receives and opens the BFS file specified in the table to retrieve the device driver.","The music server  is preferably run under the control of the music server application . The music server  includes other modules and databases (i.e., structured data such as a database or data structure) that are used by the music server application  to provide a music service, in accordance with one embodiment of the invention. Such modules include functionality for digital rights management and royalty payments, conditional access for secure transmission of audio content, compressed music storage for storage of digital files (i.e., a database for the compressed songs), and\/or a plurality of other databases internal or external to the music server .","In one implementation, the music server  stores identifying indicia associated with a song (e.g., title, artist, album, and\/or other information that references and\/or is descriptive of a song) a user has designated for download to a peripheral device. This identifying indicia is preferably saved in a user-specific playlist (not shown) until the music server  receives a request from the DHCT to download the song or songs referenced in the playlist. In one implementation, after providing a device driver via the device driver server , the music server application  accesses its internal databases to retrieve the songs associated with the saved identifying indicia in the playlist and download the songs to the connected portable audio player. The headend  includes mechanisms for transporting music to the requesting DHCT  over the network , including using one or more QAM modulators , which can deliver songs in a compressed format using MPEG standards and\/or formatted using transmission control protocol\/internet protocol (TCP\/IP), among others. Other mechanisms for transporting music from the headend  include delivering the music over the out of band signal path in addition to the in band signal path, as described above.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 3A","FIG. 3A"],"b":["16","11","341","343","16","16","363","11","16","342","11","18","11","18"]},"The DHCT  preferably includes one or more processors, such as processor , for controlling operations of the DHCT , an output system  for driving the television display of a television set , and a tuner system  for tuning into a particular television channel or frequency to present content and for sending and receiving various types of content to and from the headend  over the network . The DHCT  may include, in other embodiments, multiple tuners for receiving downloaded (or transmitted) content. The tuner system  enables the DHCT  to tune to downstream content transmissions, thereby allowing a user to receive digital and\/or analog content delivered in the downstream transmission via the subscriber television system  (). The tuner system  includes, in one implementation, an out-of-band tuner for bi-directional QPSK data communication and one or more QAM tuners (in band) for receiving television signals. For example, an application or an operating system , in cooperation with the processor , can request a device driver for a newly connected peripheral device, such as the portable audio player , through the out of band tuner of the tuner system . This request, as described above, can be received at the headend  and processed accordingly. Additionally, a receiver  receives externally generated information, such as user inputs or commands from an input device, such as remote control device , or other devices.","The DHCT  processes analog and\/or digital transmission signals for presentation to the television set , and\/or for downloading to the portable audio player . In some embodiments, a storage device (not shown) can be included to provide, among other functions, time shifted presentations of content. The DHCT  preferably includes a signal processing system  and a media engine . The components of the signal processing system  are capable of QAM demodulation, forward error correction, and demultiplexing of MPEG-2 transport streams, and parsing of elementary streams and packetized elementary streams. Additional components, not shown, include an analog decoder and compression engine for processing an analog transmission signal and, in one implementation, converting it to compressed audio and video streams that are produced in accordance with the syntax and semantics of a designated audio and video coding method, such as that specified by the MPEG-2 audio and MPEG-2 video ISO (International Organization for Standardization or ISO) standard, among others.","In one implementation, the signal processing system  outputs parsed elementary streams and presents them to the media engine  for decompression by a video decompression engine  and an audio decompression engine , and then presented to the TV set  via an output system . The DHCT  can include functionality for decryption and digital rights management, among other functionality. Downloaded music carried as parsed elementary streams and slated for playback on the portable audio player  can, in one implementation, be presented to the portable audio player  via a communications port  preferably configured as a USB or Firewire connection.","One having ordinary skill in the art will understand that the signal processing system  will preferably include other components not shown, including memory, decryptors, samplers, digitizers (e.g., analog-to-digital converters), and multiplexers, among other components. Further, it will be understood that one or more of the components listed above will interface with the processor  and\/or memory  (and\/or dedicated memory for a particular component), to facilitate data transfer and\/or processing of the video and\/or audio signal for presentation, storage, and\/or downloads to peripheral devices.","Memory , which may include volatile and\/or non-volatile memory, stores one or more programmed software applications, herein referred to as applications, which contain instructions that may be executed by the processor  under the auspices of the operating system . Note that an application typically includes a client part and a server counterpart that cooperate to provide the complete functionality of the application. Data required as input by an application is stored in memory  and read by processor  from memory  as need be during the course of the application's execution. Input data for an application may be data stored in memory  by a secondary application or other source, either internal or external to the DHCT , or may be data that was created with the application at the time it was generated as a software application program. Data transmitted by the headend  may be received via the communications interface , whereas user input may be received from an input device via receiver . Data generated by an application is stored in memory  by the processor  during the course of the application's execution.","An executable program or algorithm corresponding to an operating system component, or to a client platform component, or to an application, or to respective parts thereof, can reside in memory , or in a local storage device (not shown) externally connected to or integrated into the DHCT  and be transferred into memory  for execution. Likewise, data input for an executable program can reside in the storage device and be transferred into memory  for use by an executable program or algorithm. In addition, data output by an executable program can be written into memory  by an executable program or algorithm and be transferred into the storage device. In other embodiments, the executable code is not transferred, but instead, functionality is effected by other mechanisms. Note that one or more of the components shown in memory  can be stored in volatile memory in some embodiments, and non-volatile memory in other embodiments.","An application referred to as a navigator  is resident in memory  for providing a navigation framework for services provided by the DHCT . The navigator  registers for and in some cases reserves certain user inputs related to navigational keys such as channel increment\/decrement, last channel, favorite channel, etc. The navigator  also provides users with television related menu options that correspond to DHCT functions such as, for example, blocking a channel or a group of channels from being displayed in a channel menu presented on a screen display.","The memory  also includes a platform library . The platform library  is a collection of utilities useful to applications, such as a timer manager, a compression manager, a configuration manager, a hypertext markup language (HTML) parser, a database manager, a widget toolkit, a string manager, and other utilities (not shown). These utilities are accessed by applications via application programming interfaces (APIs) as necessary so that each application does not have to contain these utilities.","Computer functionality of the DHCT  is provided by an operating system . Among other modules, the operating system  includes the resource manager  that provides an interface to resources of the DHCT  such as, for example, computing resources, and a BFS client . As described above, the BFS server  () is in constant communication with the BFS client  to provide data and applications to the DHCTs  in the subscriber television system  (), including providing device drivers in some embodiments.","Other components of memory  include an interactive program guide (IPG) application  for providing interactive program guide services, a WatchTV application  for providing broadcast television services, a music client application  (explained below), a media-on-demand (MOD) application  for providing on-demand services, and an e-mail application . Memory  also includes application memory  that various applications may use for storing and\/or retrieving data. It should be clear to one with ordinary skill in the art that these applications are not limiting and merely serve as examples for embodiments of the invention. These applications, and others provided by the subscriber television system operator, are top-level software entities on the network for providing services to the user.","The music client application  is the client pair of a client server music application pair. The music client application  includes functionality that enables a user to designate a currently playing song for an immediate or future download to the DHCT  and\/or a connected portable audio player . In one implementation, the user can be listening to a song played on the TV set  or other device. Upon hearing a song that he or she likes, the user can designate the song for download using an input device such as a remote control device . Information about the designated song can be stored in a user-specific playlist (not shown) maintained at the headend . Upon detecting the portable audio player connection to the DHCT , the DHCT  sends a download request to the music application server  (), the songs referenced in the playlist are retrieved, and the music is downloaded to the portable audio player . Further information on the mechanisms included in downloading music referenced in a playlist to a portable audio player can be found in the patent application entitled, \u201cSELECTING AND DOWNLOADING CONTENT TO A PORTABLE PLAYER,\u201d having Ser. No. 10\/289,051, filed on the same day as this application, and hereby incorporated by reference herein in its entirety.","The DHCT  can also include one or more wireless or wired interfaces, also called communication ports , for receiving and\/or downloading data to peripheral devices, such as the portable audio player . For instance, the DHCT  may feature USB (Universal Serial Bus), Ethernet (for connection to a computer), IEEE-1394 (for connection to content devices in an entertainment center), serial, and\/or parallel ports, as well as wireless communication ports for Bluetooth, 802.11 networks, etc. Other peripheral interfaces can be used, including peripheral component interconnect (PCI), for example, for connecting to other peripheral devices such as MPEG encoders, graphics cards, additional tuners, MPEG decoders, etc.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 3B","FIG. 3A","FIG. 3A"],"b":["343","374","343","343","302","16","304","306","308","343","343","343","16"]},"The preferred embodiments of the invention include mechanisms to retrieve and download a device driver from a library of device drivers stored in the device driver library  () to a DHCT  (), the DHCT  requesting the device driver in response to being connected with a peripheral device.  are timing diagrams that illustrate some example interactions that occur in the headend  (), the DHCT  (), and between the headend  and the DHCT  to provide a device driver for a portable audio player  connected to the DHCT , in accordance with one embodiment of the invention.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 4","FIG. 3A"],"b":["16","220","343","16","353","344","343","402","343","16","16","16","353","344","11"]},"In response to the connection, a request is made to the device driver server  (by either the operating system  in one embodiment, or in other embodiments, a client application that has registered with the operating system  for this connection event (such as the music client application )) (step ). As described above, the request can include an identifier of the peripheral device connected and an identifier for the DHCT . The identifier for the DHCT  can include an WP address in one embodiment, or in other embodiments, may include such information as a serial number and\/or media access control (MAC) address of the requesting DHCT , in addition to or in lieu of the IP address. The DNCS  () preferably provides the IP address using the MAC address, serial number, and\/or secure micro serial number for the particular DHCT . Additional DHCT related information can be provided, including an operating system\/hardware revision level (or alternatively, the only device drivers that are loaded into the DHCT  can be for a particular running operating system\/hardware revision level, or such information can be determined elsewhere in the system). The identifier for the peripheral device can include the portable audio player vendor and\/or the ID number. This request is received at the device driver server , which after processing the request, responds to the registered client application or the operating system  (step ). If the device driver is unavailable, an error message is presented to the user. The error message can be in the form of a dialog box presented to the user, or other indication such as a blinking light on the DHCT, or an email message, among others feedback mechanisms. If the device driver is available, the response includes downloading the requested device driver to the DHCT .","Upon receiving the downloaded device driver, the operating system  (i.e., the processor  running under control of the operating system ) preferably places the downloaded device driver in memory  () and notes for which peripheral device this downloaded device driver is intended. When application calls are made that will access the peripheral device (such as the music application  in response to a connection of the portable audio player ), the operating system  passes these calls to the device driver for that peripheral device. A peripheral device will typically have N functions that it performs. For example, the portable audio player  might have an open function, a close function, a write song function, a delete song function, and a list songs function. The manner in which arguments are passed to each of these five functions is preferably standardized (i.e., the stack frame for each function looks the same or similar regardless of the device driver being called). The code to implement each of these five functions may vary in length depending on the individual device driver. Thus, a table (not shown) is constructed that is at the first byte of the device driver. This table includes pointers to each of these five functions within the device driver (basically a list of five numbers corresponding to the addresses of the functions). For example, the device driver code may appear as follows:\n\n","When the device driver is downloaded, the operating system  locates the device driver in an area of memory  that is not currently in use. When the application (e.g., the music application ) calls the operating system open function, the application passes an argument specifying that the target of the open function is a peripheral device (e.g., the portable audio player ). The operating system  finds the address of the device driver, adds the address to the number in table entry zero (i.e., the address of the open function instructions) of the device driver and jumps to the calculated address. The device driver code is then executed, enabling communication with the portable audio player .","As one example implementation, the operating system  finds a vacant area of memory  at say address , and loads the device driver there. When the operating system  calls the device driver \u201cwrite function\u201d for example, operation proceeds as follows:\n\n","The operating system  then returns control to the application (e.g., music application ) and the open function is completed. If a close function was implemented, the base address of the device driver would be added to the number stored at table entry  (the address of the close function) and the operating system  would call this new address. Similar mechanisms are employed for these and other functions. Note that the implementation described above is one example among many, and that the preferred embodiments of the invention include other mechanisms for passing control to the device driver.",{"@attributes":{"id":"p-0053","num":"0070"},"figref":["FIG. 5","FIG. 2","FIG. 2"],"b":["220","502","16","11","244","242","222","220","260","222","224","504","224","220","224","220"]},"Step  includes the driver manager  retrieving the device driver corresponding to the information included in the device driver request from the device driver library . The driver manager  arranges for the device driver to be sent to the requesting DHCT  over the network  () using other headend components (step ), as described above in association with . If the driver manager  fails to retrieve the device driver from the device driver library  (e.g., if the requested device driver is not there, or if there is an error in retrieving the device driver, etc.), then the driver manager  communicates an error message to the requesting DHCT (step ). In some embodiments, the driver manager  can also log a message to a log file (not shown) in the device driver server , or located elsewhere, that can be used by the cable operator to evaluate what types of device drivers (and thus peripheral devices) the cable operator may want to support in the future.","As one example implementation, with reference to , if the portable audio player  is connected, the music client application  will preferably send a request for a stored playlist that references songs the user has previously designated for download. Further, in response to the connection, if a suitable (e.g., having the proper communication format) device driver was not stored locally for the connected portable audio player , generalized driver code resident in the operating system  determines the vendor and ID number of the connected portable audio player . A request is then made by the operating system  (or passed to the music client application , which makes the request) out of band to the driver manager . This request preferably includes the vendor number and ID of the portable audio player , in addition to the IP address, serial number, and\/or MAC address of the DHCT . The driver manager , upon receiving the request, searches for a device driver for that particular portable audio player  in the device driver library . The device driver is retrieved by the driver manager , which effects the download of the device driver (preferably via the QPSK modem ) to the operating system  (or to the music client application , which passes the device driver to the operating system ). The operating system  loads the device driver into memory  and enables the loaded device driver to take temporary control to implement a write to the portable audio player  based on the music client application  requesting songs referenced in the playlist. The portable audio player  then receives the downloaded music referenced in the playlist.",{"@attributes":{"id":"p-0056","num":"0073"},"figref":["FIGS. 6 and 7","FIGS. 6-7"]},"Referring to , step  includes receiving a request from a DHCT  () for a device driver. The request can include the particular vendor of the peripheral device for which the device driver is requested and\/or the ID number of the peripheral device. The request can also include an IP address, MAC address, and\/or serial number of the requesting DHCT . Step  includes searching a library of device drivers for a device driver matching the information (e.g., the peripheral device vendor and\/or ID) included in the request. Step  includes retrieving the requested device driver or generating an error message when failing to retrieve the device driver. Step  includes downloading the device driver or sending the error message to the DHCT .","The method illustrated in  is understood in the context of the operating system  or a registered application (i.e., registered an interest in operations to and\/or from a connected peripheral device). Referring to , step  includes receiving an indication that a peripheral device has been connected. Step  includes sending a request to the headend  for a device driver that can be used to communicate with the connected peripheral device. Step  includes receiving the requested device driver, or an error message if the request could not be fulfilled.","Note that although a request for a single device driver has been described herein, the preferred embodiments of the invention can process multiple requests for device drivers.","The driver manager , the driver library , the operating system , the music client application , and other applications can be implemented in hardware, software, firmware, or a combination thereof. In the preferred embodiment(s), driver manager , the driver library , the driver manager , the operating system , the music client application , and other applications are implemented in software or firmware that is stored in a memory and that is executed by a suitable instruction execution system. If implemented in hardware, as in an alternative embodiment, the driver manager , the driver library , driver manager , the operating system , the music client application , and other applications may be implemented with any or a combination of the following technologies, which are all well known in the art: a discrete logic circuit(s) having logic gates for implementing logic functions upon data signals, an application specific integrated circuit (ASIC) having appropriate combinational logic gates, a programmable gate array(s) (PGA), a field programmable gate array (FPGA), etc.","The driver manager , the driver library , driver manager , the operating system , the music client application , and other applications, which comprises an ordered listing of executable instructions for implementing logical functions, can be embodied in any computer-readable medium for use by or in connection with an instruction execution system, apparatus, or device, such as a computer-based system, processor-containing system, or other system that can fetch the instructions from the instruction execution system, apparatus, or device and execute the instructions. In the context of this document, a \u201ccomputer-readable medium\u201d can be any means that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device. The computer readable medium can be, for example but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, device, or propagation medium. More specific examples (a nonexhaustive list) of the computer-readable medium would include the following: an electrical connection (electronic) having one or more wires, a portable computer diskette (magnetic), a random access memory (RAM) (electronic), a read-only memory (ROM) (electronic), an erasable programmable read-only memory (EPROM or Flash memory) (electronic), an optical fiber (optical), and a portable compact disc read-only memory (CDROM) (optical). Note that the computer-readable medium could even be paper or another suitable medium upon which the program is printed, as the program can be electronically captured, via for instance optical scanning of the paper or other medium, then compiled, interpreted or otherwise processed in a suitable manner if necessary, and then stored in a computer memory.","It should be emphasized that the above-described embodiments of the present invention, particularly, any \u201cpreferred embodiments\u201d are merely possible examples of implementations, merely setting forth a clear understanding of the principles of the inventions. Many variations and modifications may be made to the above-described embodiments of the invention without departing substantially from the spirit of the principles of the invention. All such modifications and variations are intended to be included herein within the scope of the disclosure and present invention and protected by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The preferred embodiments of the invention can be better understood with reference to the following drawings. The components in the drawings are not necessarily to scale, emphasis instead being placed upon clearly illustrating the principles of the present invention. Moreover, in the drawings, like reference numerals designate corresponding parts throughout the several views.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 3A","FIG. 1","FIG. 2"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 3B","FIG. 3A"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 4","FIG. 2","FIG. 3B"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 5","FIG. 2","FIG. 3A"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 6","FIG. 3A","FIG. 2"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 7","FIG. 3A","FIG. 2"]}]},"DETDESC":[{},{}]}
