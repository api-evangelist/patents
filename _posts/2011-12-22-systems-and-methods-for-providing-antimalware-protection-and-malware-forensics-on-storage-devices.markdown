---
title: Systems and methods for providing anti-malware protection and malware forensics on storage devices
abstract: Systems and methods for providing features that enable anti-malware protection on storage devices are described. In one embodiment, a storage device includes a controller, firmware, and memory. The controller manages input/output operations for the storage device. The firmware provides features for protection against malware. The memory includes secure storage that is configured to provide a set of storage operations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09165141&OS=09165141&RS=09165141
owner: Intel Corporation
number: 09165141
owner_city: Santa Clara
owner_country: US
publication_date: 20111222
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["This patent application is a U.S. National Phase Application under 35 U.S.C. \u00a7371 of International Application No. PCT\/US2011\/067020, filed Dec. 22, 2011, entitled SYSTEMS AND METHODS FOR PROVIDING ANTI-MALWARE PROTECTION AND MALWARE FORENSICS ON STORAGE DEVICES.","The present disclosure relates to systems and methods for providing anti-malware protection and malware forensics on storage devices.","Security is an important problem for any compute platform having data that resides in a storage device. Malware threats are growing at exponential rate. Malware (e.g., low level malware like rootkits) is getting stealthier and is attacking the host (personal computer) system stack far below the protection provided by anti-virus\/anti-malware (AV\/AM) approaches. Once low level malware has infected the system, a state of the system as seen by AV\/AM is in control of the malware.","The AV\/AM approaches provided by independent software vendor (ISV) applications desire access to virus and malware information in the storage device to assess the nature and level of security threats posed by virus and malware at any given instant, as well as to assess the impact (e.g., return on investment (ROI)) particular AV\/AM actions taken in a network may have. This includes securely logging which viruses were detected, which viruses were cleaned, when the viruses were cleaned, etc.","Systems and methods for providing anti-malware protection and malware forensics on storage devices are described. Embodiments of the invention provide to an anti-virus ISV an improved understanding regarding how malware communicates to the storage device and what are the mechanisms the malware adopts to hide itself. Malware typically hides in a region that is not seen by an operating system. Having this trusted information across the entire network can help develop analytics to improve AV\/AM protection and quantify the ROI. This capability will then enable fingerprinting and performing forensics on a particular malware threat.","In the following description, numerous specific details such as logic implementations, sizes and names of signals and buses, types and interrelationships of system components, and logic partitioning\/integration choices are set forth in order to provide a more thorough understanding. It will be appreciated, however, by one skilled in the art that embodiments of the invention may be practiced without such specific details. In other instances, control structures and gate level circuits have not been shown in detail to avoid obscuring embodiments of the invention. Those of ordinary skill in the art, with the included descriptions, will be able to implement appropriate logic circuits without undue experimentation.","In the following description, certain terminology is used to describe features of embodiments of the invention. For example, the term \u201clogic\u201d is representative of hardware and\/or software configured to perform one or more functions. For instance, examples of \u201chardware\u201d include, but are not limited or restricted to, an integrated circuit, a finite state machine or even combinatorial logic. The integrated circuit may take the form of a processor such as a microprocessor, application specific integrated circuit, a digital signal processor, a micro-controller, or the like. The interconnect between chips each could be point-to-point or each could be in a multi-drop arrangement, or some could be point-to-point while others are a multi-drop arrangement.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["100","160","120","124","130","130","132","136","134","130","140","138","142","150","138","142","132","134","136","142","150","140","132","134","136","150","152","154","156","152","154","156","134","152","154","156","160"]},"Embodiments of this invention involve implementing into the firmware of the storage device security components such as an interface command sequence log , a configurable secure storage , and secure end of drive storage . The log  enables storing the unique sequence of commands that are given to the storage device with several configurable parameters. These parameters include but are not limited to specific commands such as rarely used negative LBA commands, illegal command opcodes, illegal command argument usage, etc. Logging is active only for specific period of time. A logging start is conditional on specified events such as illegal command parameters. Once a log is completed, it is stored in a secure area in the memory  (e.g., NAND storage) that is accessible only to authenticated ISV's. The log is independent of the OS and provides a data trail for any type of malicious activity. A specific ISV is authenticated to talk with the storage device and this makes it difficult for malware to modify the log. In contrast, a conventional approach includes the OS having a log and the malware can hide or delete information stored in this log.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIGS. 2A and 2B","FIG. 2A","FIG. 2B"],"b":["232","230","210","200","234","220","282","280","260","250","284","270"]},"As discussed above, the secure sector may be outside the maximum reported range of sectors. Alternatively, there may be other ways of achieving the same protection via storage device firmware. For example, the ISV user might request that the firmware restrict access to a range of sectors inside the bounds of the operating system partition.","The concept of a \u201cSecure Blackbox\u201d or secure storage incorporates storage device firmware features that allow a set of storage operations, such as a sequence of write commands to be performed on a specially designated section of the storage device, but do not allow this designated area to be overwritten. In addition, these firmware features do not allow data to be directly read from the same specially designated area. In effect, these features create a \u201cblackbox\u201d functionality that prohibits unauthorized persons from tampering with stored data or even reading the same captured data. It is even conceivable that one set of firmware features would be loaded to record the data, while another set of features would need to be loaded to retrieve the data. Thus, physical access to the storage device, and a second version of firmware would be required to retrieve the data captured by the \u201cSecure Blackbox\u201d firmware. For example, a host computer may store certain critical information in the \u201cSecure Blackbox.\u201d A vehicle's computer may store critical information (e.g., quick stops, different vehicle speeds) in the \u201cSecure Blackbox.\u201d","It is the combination of above features that provide an AVS ISV or malware researcher with the tools to perform malware forensics on an infected system and thereby better understand the behavior of malware for enabling development of anti-malware protection. The AVS ISV or malware researcher can configure an area of a storage device that has suspicious activity (e.g., read\/write requests beyond a range, out of bounds parameters, bogus commands that attack a drive). The firmware of the storage device is able to better protect itself from malware.","In one embodiment, a system  includes an operating system  for performing operations on the system and a storage device  to store data and communicate with the operating system. The storage device includes firmware to provide features for protection against malware. The storage device also includes memory  having configurable secure storage  that is configured to monitor activity or restrict activity in the secure storage. The memory also includes a secure log  to record activity of the system. The secure log enables storing a unique sequence of commands that are given to the storage device along with configurable parameters. The secure log is accessed by an authenticated external entity (e.g., ISV) to determine if the activity recorded in the log is suspicious. The authenticated external entity using the firmware configures a region of the secure storage to monitor activity or restrict activity in the secure storage based on determination of suspicious activity or known malware patterns. The authenticated external entity using the firmware configures unused space at an end region near an end of the memory to redirect access to the secure storage. A read request or a write request that is intended for the unused space near the end region is redirected to the secure storage.","In an embodiment, a storage device  includes a controller (e.g., microcontroller, processing unit)  to manage input\/output operations for the storage device. The controller  runs the firmware that gets loaded into memory. The firmware provides features as discussed herein that provide an AVS ISV or malware researcher the tools to perform forensics on an infected system for protection against malware. Thus, the features enable a better understanding of behavior of malware for development of anti-malware solutions. The memory includes secure storage that is configured to provide a set of storage operations. The firmware allows the secure storage to be written by an authenticated entity or user. The firmware may include a first set of features that allow the secure storage to be written by the authenticated entity or user. The firmware may not allow the secure storage to be overwritten after it has been written. The firmware may only allow the secure storage to be read from by the authenticated entity or user. The firmware may include a second set of features that allow the secure storage to be read by the authenticated entity or user. The authenticated external entity using the firmware configures a region of the secure storage to monitor activity or restrict activity in the secure storage based on determination of suspicious activity.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3","b":["300","300","300"]},"A secure log (e.g., ) enables storing the unique sequence of commands that are given to the storage device with several configurable parameters. These parameters include but are not limited to specific commands such as rarely used negative LBA commands, illegal command opcodes, illegal command argument usage, etc. At block , a secure log is initiated with firmware based on the detection of specified events such as illegal command parameters (e.g., illegal command opcodes, illegal command argument usage, etc.) At block , logging is actively maintained only for a specific period of time following the occurrence of the specified event. At block , the secure log is complete. At block , the secure log is stored in a secure area in the memory  (e.g., NAND storage) that is accessible only to authenticated ISV's. The log is independent of the OS and provides a data trail for any type of malicious activity. A specific ISV is authenticated to talk with the storage device and this makes it difficult for malware to modify the log.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 4-7"},"Referring now to , shown is a block diagram of a system  in accordance with one embodiment of the present invention. The system  may include one or more processors , , which are coupled to a controller hub . In one embodiment the controller hub  includes a graphics memory controller hub (GMCH)  and an Input\/Output Hub (IOH)  (which may be on separate chips); the GMCH  includes memory and graphics controllers to which are coupled memory  and a coprocessor ; the IOH  is couples input\/output (I\/O) devices  to the GMCH . Alternatively, one or both of the memory and graphics controllers are integrated within the processor (as described herein), the memory  and the coprocessor  are coupled directly to the processor , and the controller hub  in a single chip with the IOH . The GMCH  may also be coupled to a storage device (e.g., storage device , non-volatile memory) as discussed herein.","The optional nature of additional processors  is denoted in  with broken lines. Each processor ,  may include one or more of the processing cores described herein.","The memory  may be, for example, dynamic random access memory (DRAM), phase change memory (PCM), or a combination of the two. For at least one embodiment, the controller hub  communicates with the processor(s) ,  via a multi-drop bus, such as a frontside bus (FSB), point-to-point interface such as QuickPath Interconnect (QPI), or similar connection .","In one embodiment, the coprocessor  is a special-purpose processor, such as, for example, a high-throughput MIC processor, a network or communication processor, compression engine, graphics processor, GPGPU, embedded processor, or the like. In one embodiment, controller hub  may include an integrated graphics accelerator.","There can be a variety of differences between the physical resources ,  in terms of a spectrum of metrics of merit including architectural, microarchitectural, thermal, power consumption characteristics, and the like.","In one embodiment, the processor  executes instructions that control data processing operations of a general type. Embedded within the instructions may be coprocessor instructions. The processor  recognizes these coprocessor instructions as being of a type that should be executed by the attached coprocessor . Accordingly, the processor  issues these coprocessor instructions (or control signals representing coprocessor instructions) on a coprocessor bus or other interconnect, to coprocessor . Coprocessor(s)  accept and execute the received coprocessor instructions.","Referring now to , shown is a block diagram of a first more specific exemplary system  in accordance with an embodiment of the present invention. As shown in , multiprocessor system  is a point-to-point interconnect system, and includes a first processor  and a second processor  coupled via a point-to-point interconnect . In one embodiment of the invention, processors  and  are respectively processors  and , while coprocessor  is coprocessor . In another embodiment, processors  and  are respectively processor  and coprocessor .","Processors  and  are shown including integrated memory controller (IMC) units  and , respectively. Processor  also includes as part of its bus controller units point-to-point (P-P) interfaces  and ; similarly, second processor  includes P-P interfaces  and . Processors ,  may exchange information via a point-to-point (P-P) interface  using P-P interface circuits , . As shown in , IMCs  and  couple the processors to respective memories, namely a memory  and a memory , which may be portions of main memory locally attached to the respective processors.","Processors ,  may each exchange information with a chipset  via individual P-P interfaces ,  using point to point interface circuits , , , . Chipset  may optionally exchange information with the coprocessor  via a high-performance interface . In one embodiment, the coprocessor  is a special-purpose processor, such as, for example, a high-throughput MIC processor, a network or communication processor, compression engine, graphics processor, GPGPU, embedded processor, or the like.","A shared cache (not shown) may be included in either processor or outside of both processors, yet connected with the processors via P-P interconnect, such that either or both processors' local cache information may be stored in the shared cache if a processor is placed into a low power mode.","Chipset  may be coupled to a first bus  via an interface . In one embodiment, first bus  may be a Peripheral Component Interconnect (PCI) bus, or a bus such as a PCI Express bus or another third generation I\/O interconnect bus, although the scope of the present invention is not so limited.","As shown in , various I\/O devices  may be coupled to first bus , along with a bus bridge  which couples first bus  to a second bus . In one embodiment, one or more additional processor(s) , such as coprocessors, high-throughput MIC processors, GPGPU's, accelerators (such as, e.g., graphics accelerators or digital signal processing (DSP) units), field programmable gate arrays, or any other processor, are coupled to first bus . In one embodiment, second bus  may be a low pin count (LPC) bus. Various devices may be coupled to a second bus  including, for example, a keyboard and\/or mouse , communication devices  and data storage  (e.g., storage device as described herein, storage device  of ) such as a disk drive or other mass storage device which may include instructions\/code and data , in one embodiment. Further, an audio I\/O  may be coupled to the second bus . Note that other architectures are possible. For example, instead of the point-to-point architecture of , a system may implement a multi-drop bus or other such architecture.","Referring now to , shown is a block diagram of a second more specific exemplary system  in accordance with an embodiment of the present invention. Like elements in  bear like reference numerals, and certain aspects of  have been omitted from  in order to avoid obscuring other aspects of .  illustrates that the processors ,  may include integrated memory and I\/O control logic (\u201cCL\u201d)  and , respectively. Thus, the CL ,  include integrated memory controller units and include I\/O control logic.  illustrates that not only are the memories ,  coupled to the CL , , but also that I\/O devices  are also coupled to the control logic , . Legacy I\/O devices  are coupled to the chipset . The memories ,  may include non-volatile memory such as the storage device discussed herein (e.g., storage device  of ).","Referring now to , shown is a block diagram of a SoC  in accordance with an embodiment of the present invention. Also, dashed lined boxes are optional features on more advanced SoCs. In , an interconnect unit(s)  is coupled to: an application processor  which includes a set of one or more cores A-N and shared cache unit(s) ; a system agent unit ; a bus controller unit(s) ; an integrated memory controller unit(s) ; a set or one or more coprocessors  which may include integrated graphics logic, an image processor, an audio processor, and a video processor; an static random access memory (SRAM) unit ; a direct memory access (DMA) unit ; and a display unit  for coupling to one or more external displays. In one embodiment, the coprocessor(s)  include a special-purpose processor, such as, for example, a network or communication processor, compression engine, GPGPU, a high-throughput MIC processor, embedded processor, or the like. The SoC  may include or be coupled to a storage device as described herein.","Embodiments of the mechanisms disclosed herein may be implemented in hardware, software, firmware, or a combination of such implementation approaches. Embodiments of the invention may be implemented as computer programs or program code executing on programmable systems comprising at least one processor, a storage system (including volatile and non-volatile memory and\/or storage elements), at least one input device, and at least one output device.","Program code, such as code  illustrated in , may be applied to input instructions to perform the functions described herein and generate output information. The output information may be applied to one or more output devices, in known fashion. For purposes of this application, a processing system includes any system that has a processor, such as, for example; a digital signal processor (DSP), a microcontroller, an application specific integrated circuit (ASIC), or a microprocessor.","The program code may be implemented in a high level procedural or object oriented programming language to communicate with a processing system. The program code may also be implemented in assembly or machine language, if desired. In fact, the mechanisms described herein are not limited in scope to any particular programming language. In any case, the language may be a compiled or interpreted language.","One or more aspects of at least one embodiment may be implemented by representative instructions stored on a machine-readable medium which represents various logic within the processor, which when read by a machine causes the machine to fabricate logic to perform the techniques described herein. Such representations, known as \u201cIP cores\u201d may be stored on a tangible, machine readable medium and supplied to various customers or manufacturing facilities to load into the fabrication machines that actually make the logic or processor.","Such machine-readable storage media may include, without limitation, non-transitory, tangible arrangements of articles manufactured or formed by a machine or device, including storage media such as hard disks, any other type of disk including floppy disks, optical disks, compact disk read-only memories (CD-ROMs), compact disk rewritable's (CD-RWs), and magneto-optical disks, semiconductor devices such as read-only memories (ROMs), random access memories (RAMs) such as dynamic random access memories (DRAMs), static random access memories (SRAMs), erasable programmable read-only memories (EPROMs), flash memories, electrically erasable programmable read-only memories (EEPROMs), phase change memory (PCM), magnetic or optical cards, or any other type of media suitable for storing electronic instructions.","Accordingly, embodiments of the invention also include non-transitory, tangible machine-readable media containing instructions or containing design data, such as Hardware Description Language (HDL), which defines structures, circuits, apparatuses, processors and\/or system features described herein. Such embodiments may also be referred to as program products.","It should be appreciated that reference throughout this specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure or characteristic described in connection with the embodiment is included in at least one embodiment. Therefore, it is emphasized and should be appreciated that two or more references to \u201can embodiment\u201d or \u201cone embodiment\u201d or \u201can alternative embodiment\u201d in various portions of this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures or characteristics may be combined as suitable in one or more embodiments.","In the above detailed description of various embodiments, reference is made to the accompanying drawings, which form a part hereof, and in which are shown by way of illustration, and not of limitation, specific embodiments in which the invention may be practiced. In the drawings, like numerals describe substantially similar components throughout the several views. The embodiments illustrated are described in sufficient detail to enable those skilled in to the art to practice the teachings disclosed herein. Other embodiments may be utilized and derived there from, such that structural and logical substitutions and changes may be made without departing from the scope of this disclosure. The following detailed description, therefore, is not to be taken in a limiting sense, and the scope of various embodiments is defined only by the appended claims, along with the full range of equivalents to which such claims are entitled."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The various embodiments of the present invention are illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings and in which:",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIGS. 2A and 2B"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
