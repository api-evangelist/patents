---
title: Abstracting links to electronic resources in a network environment
abstract: A procedure for preparing electronic resources for delivery to client computers is disclosed. When rendered on a browser for display, the electronic resources (e.g., web pages) include a reference link to another electronic resource. In response to receiving a request for delivery of a specific resource to a client computer, a server computer retrieves the resource from storage and examines the resource to locate any link identifiers contained therein. If a link identifier is detected, the network address corresponding to this link identifier is identified by the server and incorporated into the requested electronic resource in place of the link identifier. The prepared resource is then delivered to the client computer for rendering on a browser.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07668929&OS=07668929&RS=07668929
owner: Microsoft Corporation
number: 07668929
owner_city: Redmond
owner_country: US
publication_date: 20031112
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application is a continuation of prior U.S. patent application Ser. No. 10\/660,890, filed Sep. 12, 2003 now abandoned and entitled ABSTRACTING LINKS TO ELECTRONIC RESOURCES IN A NETWORK ENVIRONMENT, which is hereby incorporated herein by reference in its entirety.","The present invention relates to electronic resources and services, and more specifically to management of links or other pointer objects embedded in electronic resources.","A primary focus for implementing a network environment is to provide electronic resources and services to clients connected to the network. One such electronic resource\/service is a web page. Web pages are generally understood to be individual electronic documents making up a website within a client-server network. A server computer delivers an electronic resource to a client computer in response to a request issued by the client computer. The request specifically identifies the electronic resource by a unique address recognizable to the server computer as defining the location of the electronic resource on a given network, such as, for example, the Internet or an intranet.","As is known to those skilled in the art, the unique address of a electronic resource is referred to as a universal resource locator (or \u201cURL\u201d) and may take the following exemplary form: http:\/\/www.webpage.com\/path\/sub-path\/object.htm. A URL is typically divided into three constituent parts: a protocol identifier, a domain name and a path; although, the path may not be included in a URL in some circumstances. The protocol identifier identifies the application layer (OSI Reference Model) protocol that is to be used by client computers to render the resource to users. The domain name represents the address of the server computer maintaining the electronic resource on the network and the path identifies the location of the electronic resource within the server computer. Referring back to the exemplary form noted above, the protocol identifier of this URL is \u201chttp:\/\/,\u201d the domain name of this URL is \u201cwww.webpage.com\u201d and the path of this URL is \/path\/sub-path\/object.htm. A fourth and optional constituent part of the URL is a query string containing additional parameters for further specifying the requested resource. The query string is appended to the URL after the path and is separated from the path by a question mark (\u201c?\u201d).","To request a specific electronic resource, a user selects or inputs the URL associated with the electronic resource through a user interface implemented on a client computer. Upon receipt of this URL, the server computer retrieves the associated electronic resource from storage and provides the resource to the client computer for display to the user. While displayed, the electronic resource typically includes multiple information objects embedded in the page and arranged in a predefined order. These information objects may include, for example, text objects, picture objects, clipart and links to other electronic resources maintained on the same or a different server computer maintaining the currently presented electronic resource. As an illustration, a resource server for a vehicle dealership associated with a particular vehicle manufacturer maintains, and thus is operable to serve, i.e., deliver, multiple web pages associated with various vehicles and services which may be purchased through the dealership. While being displayed to users of client computer, these web pages include pictures of the various vehicles as well as hyperlinks that may be selected to request the presentation of other electronic resources related to each of these vehicles.","It is very common that an electronic resource may link to, or reference, another electronic resource on the same or a different server in order to minimize the duplication of content between these pages. In order to establish a link to another electronic resource, the developer of an electronic resource under construction declares a reference to the linked resource within the electronic resource. For example, if the electronic resource under construction is an HTML web page, then the developer includes an \u201chref tag\u201d within the HTML file for the web page. The href tag specifies the URL of the electronic resource being referenced. Declaration of an href tag is a fairly simplistic process that involves manually typing the tag into the electronic resource. However, this current approach is not without at least one significant drawback, as described in the following paragraph.","There typically arises a need at some point in time during the life of an electronic resource for the developer to change the storage location of the electronic resource due to factors such as, but not limited to, load balancing of servers and server maintenance. If, for any reason, a referenced electronic resource moves from one location on a server computer to another location on that or another server computer, the URL of the referenced electronic resource changes accordingly. As such, all current references to that resource that may have been manually incorporated into other electronic resources are no longer valid and must be amended in order for users to properly access the relocated resource via the corresponding link. The otherwise simplistic task of revising each reference to the relocated resource becomes a daunting, time-consuming effort if the re-located web page is referenced in a large number of other electronic resources.","It is with respect to these and other considerations that the present invention has been made.","In accordance with the present invention, the above and other problems are solved by preparing electronic resources for delivery to client computers in a network environment. In accordance with an embodiment, link identifiers are declared in the electronic resources for each reference to another resource. Upon reception of a request for delivery of an electronic resource, a server computer retrieves the requested electronic resource from storage. Link identifiers are not recognizable to client computers, and therefore the server computer analyzes all link identifiers in the electronic resource in order to abstract all links to resources referenced in the requested resource. This abstraction process yields a network address link for each detected link identifier that the server computer incorporates into the requested electronic resource, thereby preparing the resource for use by the requesting client computer.","In an embodiment, the electronic resource is prepared for such delivery by a process of acts or operations performed according to an embodiment of the invention. First, the electronic resource is examined for a link tag corresponding to the link reference. The link tag comprises the link identifier that is used to determine the network location of the referenced electronic resource. The link identifier is extracted and then used to identify a unique network address corresponding to the network location. Once identified, the unique network address is incorporated into the electronic resource. The electronic resource is then ready for transmission to the client computer.","The present invention is also embodied in a system for preparing an electronic resource for delivery to client computer in a network environment. When rendered on a display device on the client computer, the electronic resource presents a graphical representation of a reference link to another electronic resource. The system includes an index file having a plurality of link identifiers associated with electronic resources maintained within the network environment. The index file relates each of the link identifiers to an entry of address information indirectly specifying a unique location within the network environment for each of these electronic resources.","The system also includes a processing module that retrieves the requested electronic resource from storage and extracts from the retrieved electronic resource the link identifier corresponding to the referenced electronic resource. The link identifier is used by the processing module to identify a network location for the referenced electronic resource. More specifically, the processing module references the index file with the link identifier in order to initiate the process for identifying the unique address of this network location.","In accordance with yet another embodiment, the present invention relates to method for developing an electronic resource for use within a network environment. First, a plurality of instructions for rendering the electronic resource for presentation to users is defined within the electronic resource. Then, a reference to another electronic resource is declaring within the plurality of instructions. The reference includes a link identifier associated with a network location for the referenced electronic resource. A reference file is created and maps the link identifier to a unique address corresponding to the network location on which the referenced electronic resource is stored. After the electronic resource has been developed and deployed on a server computer, the server uses the reference file and the link identifier to abstract the unique address of the network location in order to prepare the electronic resource for delivery to a client computer.","The invention may be implemented as a computer process, a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage media readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program product may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process.","The referencing within an electronic resource of other electronic resources using link identifiers, rather than a hard-coded unique address, allows for a more efficient deployment of multiple electronic resources referencing an individual electronic resource on a server computer. If, for any reason, the location of a referenced resource is changed, the reference file is modified to accommodate this change, and as such, the code of each referencing electronic resource does not require modifying.","These and various other features as well as advantages, which characterize the present invention, will be apparent from a reading of the following detailed description and a review of the associated drawings.","The present invention will now be described more fully hereinafter with reference to the accompanying drawings, in which embodiments of the invention are shown. This invention may, however, be embodied in many different forms and should not be construed as limited to the embodiments set forth herein; rather, these embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope of the invention to those skilled in the art. Like numbers refer to like elements throughout.","Referring to , an exemplary environment in which the present invention is practiced is shown in accordance with an embodiment. More specifically,  depicts a client-server network having a server cluster  and a plurality of client computers . The server cluster  is a collection of server computers ,  that maintains at least one electronic resource. The client computer  provides a user interface through which electronic resources are presented to users. One of skill in the art will appreciate that the client-server network shown in  is illustrative only, and that this network may include any number of client computers  and the server cluster  may include any number or server computers , .","An electronic resource is generally defined as a machine-readable form of an electronic file, such as a web page or other electronic document, a sound file, a movie file, or any other file, which may be transmitted between computers across a network environment. In order to clearly illustrate embodiments of the present invention, the exemplary electronic resources shown and described herein are defined as being the machine readable forms of websites and web pages. Management (e.g., creation, implementation and modification) by a group of server computers, such as the server cluster , over a plurality of web pages making up a website is referred to herein as web site \u201cmaintenance.\u201d As such, the server cluster  maintains at least one exemplary website having a plurality of associated web pages. Those skilled in the art will recognize that the present invention is applicable to all other forms of electronic resources as well.","In general, the server cluster  is responsible for delivering electronic resources maintained thereon to client computers (e.g., ). In response to receiving a request for an electronic resource, a server (e.g.,  and ) within the server cluster  performs a resource retrieval process in order to fetch the associated resource from storage. As known to those skilled in the art, there are numerous implementations that may be used to build and maintain a server cluster. Any known implementation for building and maintaining a server cluster may be chosen for the server cluster  on which the present invention is implemented. However, for illustrative purposes, and by no means a matter of limitation, the server cluster  administers the fetching of electronic resources through a two-tier server implementation. In this embodiment, the server cluster  includes a primary server computer , also referred to as a \u201cresource server,\u201d and a plurality of secondary, or \u201cback-end,\u201d server computers .","The resource server  is responsible for preparing the electronic resources maintained on the cluster  for use by client computers (e.g., ). The resource server  also interacts with the client computer  to receive URL requests from the client computer  and to send prepared electronic resources corresponding to the URL requests to the client computer  for presentation to users. The resource server  is communicatively connected to each of the back-end servers , which are responsible for retrieving the electronic resource corresponding to the URL requests from a database  and subsequently providing their electronic resource to the resource server  for preparation and transmission to the client computer .","The databases  are shown in  as being separate storage modules communicatively accessible to each of the back-end servers . However, it should be appreciated that the databases  may instead be storage components maintained on the back-end servers . As such, the term \u201cback-end server\u201d may be used to refer to the combination of a server computer  and an associated database . As is known to those skilled in the art of information services, the implementation is a matter of choice.","The client computer  includes a display device  and one or more software applications that provide a user interface for viewing web pages and other electronic documents rendered from electronic resources sent to the client computer  from the resource server . In an embodiment, the user interface is an electronic resource browser  (hereinafter, \u201cbrowser\u201d), as shown in . The browser  is displayed on the display device . Exemplary software application programs operable for rendering a browser  on the display device  include, for example, word processing application programs, electronic mail application programs, WWW browsing application programs and the like. For illustration purposes, the browser  shown and described in  is operable to implement\/execute prepared electronic resources sent from the resource server  to render web pages  on the display device .","In an embodiment, the browser  includes a document title display , a toolbar  a navigation bar  and a document display region . The document display page  is a display region on the browser  on which web pages  are presented to users for viewing and manipulation. The browser  displays the title  of the web page  being presented in the document title display . The toolbar  includes various menu items selectable by the user for controlling the operations of the browser . The navigation bar  includes icons selectable by the user for navigating through the various web pages of the World Wide Web (WWW). Both toolbars  and navigation bars  are known in the art and therefore not described in greater detail herein.","The web pages  rendered on the display device  each include various information objects  such as, the text and clipart shown in . The web pages  may also include another type of information object referred to as a reference link , which are hyperlinks selectable by users to request the presentation of other web pages  (referred to herein as \u201creferenced web pages\u201d) in the document display region  of the browser . In response to selection of one of these reference links , the browser formulates a URL request specifying the URL associated with the reference link  and forwards this request onto the appropriate resource server. Of course, electronic resources other than web pages  may be referenced on the web page  through the browser .","The referenced electronic resource may be a resource that is maintained by either the server cluster  or another server cluster. That is, the referenced electronic resource may be \u201cinternal to\u201d or \u201cexternal to\u201d the server cluster . If the referenced electronic resource is \u201cinternal to\u201d the server cluster , the electronic resource is thus stored in one of the databases  and maintained by one of the back-end servers . As such, the URL request is sent to the resource server . If, however, the referenced electronic resource  is external to the server cluster , i.e., accessible through a resource server not part of the server cluster , then the URL request is sent to this other resource server for processing.","In accordance with an embodiment and in response to receiving a URL request issued by a client computer , the resource server  analyzes the URL request to determine the appropriate back-end server  responsible for maintaining the associated electronic resource. The resource server  then issues a command to this back-end server  requesting the electronic resource. The back-end server  accesses the database  on which this electronic resource is stored, retrieves the electronic resource and then transmits the electronic resource to the resource server . The resource server  analyzes the electronic resource and then prepares the electronic resource for transmission to the client computer .","In accordance with another embodiment, the use of back-end servers  is relinquished in favor of the resource server  storing all electronic resources maintained by the server cluster . In this embodiment, the resource server  accesses and retrieves from local storage electronic resources identified in URL requests from the client computer .","A communications network  provides a communication connection between the server cluster  and the client computer . As such, a prepared electronic resource is sent from the resource server  to the client computer  over this communications network . It should be appreciated that the communications network  may be any type of network known to those skilled in the art or an equivalence thereto. Some exemplary networks include, without limitation, the Internet, an Intranet, a private line network, or even a direct communication link between the client computer  and the server computer . It should also be understood that the communications network  may utilize any number of communication technologies depending on functions required by the embodiment. Examples of specific technologies used in communications networks  contemplated include without limitation terrestrial, cellular, satellite, short-wave, and microwave connections to the Internet, directly between facilities using modems or other interface devices, or through other communications networks, such as local area networks or wide area networks. Any combination of these or other communications networks may be utilized and remain within the scope of the invention.","The resource server  and the client computer  communicatively connect to the communications network  by way of a server communication link  and a client communication link , respectfully. In an embodiment, the communication links  and  are implemented as wired communication medium, such as, without limitation, copper-based or fiber optic communication media. In another embodiment, the communication links  and  are implemented as wireless communication medium, such as, without limitation, infrared, sonic or radio communication.","As noted above, the term \u201celectronic resource\u201d is being used herein to refer to a machine-readable form for web pages and other types of electronic files. The electronic resources of the present invention, however, are only in a form readable by the resource server , and not the client computer  while stored on the server cluster . Thus, prior to being sent to the client computer , an electronic resource is manipulated, or processed by the resource server  into a modified format that the client computer  can read. The modification of an electronic resource in this manner is referred to as \u201cpreparing\u201d the resource for use by the client computer . It should also be noted that the format in which an electronic resource is \u201creadable\u201d by a client computer  depends on the browser  or other user interface display program implemented on the client computer . Exemplary resource formats that may be readable, or recognizable, to the browser , and thus the client computer , include, but are not limited to, Hypertext Markup Language (HTML), Active Server Page (ASP), ASPX and Extensible Markup Language (XML). Each of these formats are known to those of skill in the art, and therefore not described in further detail herein. Although electronic resources may be stored in a database  in one of these exemplary formats, an embodiment of the invention contemplates that an electronic resource includes one or more executable routines that are not recognizable to the client computer . As such, preparation of the electronic resource by the resource server  includes executing any such routines. A process and system for preparing an electronic resource according to this embodiment is described in more detail in connection with .","Referring now to , a logical representation of plurality of web pages  (Web Pages A, B, C and D) referencing another web page  (Web Page E) are shown according to the environment depicted in . The web pages  each include a plurality of information objects  and reference links , which are both shown logically using square blocks. Web Pages A, B, C and D  each include a reference link  to Web Page E . When selected by a user, the reference link  invokes a process for displaying the referenced web page E  to the user. As is known to those of skilled in the art, a browser- (or client-) recognizable format for an electronic resource definition corresponding to an exemplary reference link is shown as follows:","<a href=\u201chttp:\/\/www.uspto.gov\/siteindx.htm\u201d>, wherein various other parameters may follow the URL specification enclosed by quotation marks.","It should be appreciated that reference links  contained in Web Pages A, B, C and D  may either reference internal and\/or external links. For example, Web Pages A and B  may be maintained on the same server cluster  as Web Page E , while Web Pages C and D  are maintained on a different server cluster . Regardless of the implementation, the browsers  presenting each of these web pages  to a user operate in substantially the same manner when the reference link  to Web Page E  is selected: each of these browsers  creates a URL request specifying the URL for Web Page E and subsequently transmits this request to the resource server  of the server cluster  maintaining Web Page E.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 3","FIG. 3"],"b":["104","104","302","304","304","306"]},"In addition to the memory , the system  may include at least one other form of computer-readable media. Computer readable media can be any available media that can be accessed by the system . By way of example, and not limitation, computer-readable media might comprise computer storage media and communication media.","Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Memory , removable storage  and non-removable storage  are all examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can accessed by system . Any such computer storage media may be part of system .","System  may also contain a communications connection(s)  that allow the system to communicate with other devices. The communications connection(s)  is an example of communication media. Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.","In accordance with an embodiment, the system  includes peripheral devices, such as input device(s)  and\/or output device(s) . Exemplary input devices  include, without limitation, keyboards, computer mice, pens, or styluses, voice input devices, tactile input devices and the like. Exemplary output device(s)  include, without limitation, displays, speakers, and printers. Each of these \u201cperipheral devices\u201d are well known in the art and, therefore, not described in detail herein.","With the computing environment in mind, the following figures () are described with reference to logical operations being performed to implement processes embodying various embodiments of the present invention. These logical operations are implemented (1) as a sequence of computer implemented steps or program modules running on a computing system and\/or (2) as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system implementing the invention. Accordingly, the logical operations making up the embodiments of the present invention described herein are referred to variously as operations, structural devices, acts or modules. It will be recognized by one skilled in the art that these operations, structural devices, acts and modules may be implemented in software, in firmware, in special purpose digital logic, and any combination thereof without deviating from the spirit and scope of the present invention as recited within the claims attached hereto.","Turning now to , a portion of an exemplary code listing for an electronic resource  is shown in accordance with an embodiment of the present invention. The listing for this electronic resource  is in native format with respect to the server cluster  on which the electronic resource  is maintained. As such, the electronic resource  that has not yet been prepared by the resource server  for transmission to and use by the client computer .","The listing for this exemplary electronic resource  begins with an HTML start tag  that identifies the overall format for the electronic resource as being HTML. The HTML start tag  also defines the beginning of the code that corresponds to the actual substance and content of the electronic resource . An HTML end tag  indicates the end of this code corresponding to the actual substance and content of the electronic resource . A header region  follows the HTML start tag  and is bounded by a start header tag  and an end header tag . The header region  describes various aspects of the electronic resource  such as, without limitation, metatags and a description of the electronic resource . As known to those skilled in the art, metatags are used to by search engines to identify electronic resources relative to a query search being performed by the engine.","Following the header region  is a body region , which is bounded by a start body tag  and an end body tag . The body region  specifies the content and structure of the electronic resource . For example, the body region  is shown in  as including an object tag  that defines the background of this electronic resource  when rendered as a web page  by the browser . Also included in the body region  of the listing for this electronic resource  is a link tag  that specifies, in accordance with an embodiment of the present invention, a particular reference link  that will be displayed on the rendered web page . In this embodiment, wherein the electronic resource  is invoked\/executed to render a web page , the link tag  is a definition that is used internally within the server cluster  to determine the URL that is to be specified in an href tag that will be incorporated into the electronic resource  during preparation for transmission to the client computer .","The link tag  includes a tag identifier , a control object  and a link identifier , which is also referred to as a hyperlink identifier, or \u201chlid.\u201d The tag identifier  is the parameter of the link tag  that indicates to the resource server  that this definition is a link tag . In a more specific embodiment, the tag identifier  is a namespace on the resource server  that is associated with various object classes. The control object  is a particular object class that resides in the namespace identified by the tag identifier . After the resource server  detects the link tag  and determines the namespace associated with the tag identifier , the resource server  instantiates the control object  to execute a routine for identifying the URL corresponding to the electronic resource being referenced. The link identifier  is defined as a property of the control object , and thus, used by the executed routine to identify the appropriate URL corresponding to the electronic resource being referenced. Such a routine is described in more detail in  in accordance with an embodiment of the present invention. After this URL is identified, the resource server  replaces the link tag  with a client-readable declaration (e.g. an href tag) specifying the identified URL, thereby preparing this electronic resource  for use by the client computer .","Referring now to , a system  for preparing an electronic resource for use by a client computer  is shown in accordance with an embodiment of the present invention. In this embodiment, the preparation system  embodies a collection of software modules created on computer system  in a build, or development, lab and implemented, or deployed, on the resource server . Those skilled in the art will recognize that various alternatives to the system  shown in  are contemplated within the scope of the present invention. For example, the collection of software modules may be created as well as implemented on the resource server , thereby removing the necessity for the computer system . Additionally, the software modules may be created and\/or implemented on any one of the back-end servers  or on a combination of one or more back-end servers  and the resource server . Further, the system  may embody a collection of firmware or circuit logic modules alone or operating in combination with the software modules.","Various software modules of the preparation system  include a link source file , a compiler , a link identification index  and an associated data structure , and a configuration module . The link source file , which is also referred to herein as a \u201creference file,\u201d is created by the developer(s) of the electronic resources maintained on the server cluster  to be a global listing of link identifiers  associated with each electronic resource referenced by at least one other electronic resource maintained by the cluster . The link source file  maps each link identifier  to information corresponding to the URL of each referenced electronic resource both internal and external to the server cluster . In the embodiment shown in , the link source file  is created on the computing system , which resides in a build lab. Once created, the link source file  is compiled by the compiler , which is a software module implemented on the computing system . Alternatively, the compiler  may reside on the resource server , and as such, the link source file  is loaded into the resource server  for compilation and subsequent deployment thereon. Once compiled, the resulting link identification index  and associated data structure  are placed within the resource server  for implementation thereon.","With reference now to , an exemplary code listing for a link source file  is shown in accordance with an embodiment of the present invention. In this embodiment, the link source file  is a text file. It should be appreciated, however, that the link source file  may be created in any similar file format, including, without limitation, any word processing or spreadsheet format, any programming language format, or in XML format. The link source file  includes a comments portion , a declaration portion  and a definition portion .","The comments portion  is a portion of the link source file  that contains notes and descriptions of the functionality of the file . Developers include this comments portion  in order to provide those reading the file  with an understanding of exactly what the code is to be used for. Each of the comments in the comments portion  are preceded by a comment identifier, such as, for example, the \u201c#\u201d symbol shown in .","The declaration portion of the link source file  defines the various service classes  implemented on the server cluster . In the listing shown in , exemplary service classes are \u201cEXTERNAL,\u201d SAMPLESERV,\u201d \u201cSAMPLESERV,\u201d SAMPLESERV,\u201d and \u201cLOCAL.\u201d The declaration portion  of the link source file  includes a specific definition of each service class  implemented on the server cluster  and a specific definition corresponding to all service classes  external to the server cluster . With the exception of the EXTERNAL service class, each of the service classes  represent a particular entity internal to the server cluster . These particular entities may be physical machines, i.e., back-end servers , or virtual machines operating on the back-end servers . The EXTERNAL service class represents all particular entities external to the server cluster. The LOCAL service class represents all particular entities on the resource server  or a virtual machine operating on the resource server . Each of the service classes  correspond to a specific protocol identifier and domain name assigned to each particular entity. This protocol identifier and domain name forms the base portion of a URL for each electronic resource maintained on the associated entity.","The definition portion  of the link source file  includes a multitude of internal specifications  mapping the link identifiers  incorporated into at least one electronic resource maintained on the server cluster  to a specific service class  and a specific path  relative to that service class . In cases where the service is an internal service, i.e., the service class is not \u201cEXTERNAL,\u201d the path  is a hierarchical constituent path specifying the location of the electronic resource within the directory\/sub-directory file system of the particular machine corresponding to the service. In cases where the service class is \u201cEXTERNAL,\u201d the path  is the entire URL for the referenced electronic resource. The internal specifications  may also define a query string  for each of these link identifiers . This optional query string represents a collection of parameterized values which are to be included in the URL for the electronic resource being referenced by the link identifier .","In an embodiment, the link source file  is a text file that is not readable to the resource server . Such an embodiment is shown in , wherein the link source file  is interpreted and compiled by the compiler  to transition the information defined in the file  into a form readable by the resource server . The resulting output of the compiler  are the link identification index  and the associated data structure , which are used by the resource server  in conjunction with the configuration module  to match a link identifier  to a particular URL for an electronic resource being referenced.","Turning now to , an exemplary listing of the link identification index  corresponding to the exemplary link source file  is shown in accordance with an embodiment of the present invention. In particular, the link identification index  is one of the two resulting objects created by compiling the link source file , the other object being the data structure  associated with the link identification index. The link identification index  and the associated data structure  are collectively used by the resource server  to identify the URL corresponding to the electronic resource being referenced by the link identifier .","The link identification index  includes a class definition  specifying the class to which this object belongs. As such, the class of the link identification index  is \u201chlid,\u201d which as noted above represents an acronym for hyperlink identifier. Following the class definition  is a listing of each link identifier  mapped to a specific index pointer , which in this embodiment is represented with an integer. With reference to , the index pointers  each point to an entry  specified in the associated data structure . The entry  in the data structure  maps each index pointer  to the service class  and path  that were defined to correspond to the corresponding link identifier  in the link source file  at the time that the file was interpreted and compiled by the compiler .","The configuration module  is the portion of the preparation system  that analyzes the service class  for a particular link identifier  to determine the URL corresponding to that service class . The configuration module  may take any number of forms, including, for example, a searchable text or XML file that maps service classes  to domain names and software applications designed specifically to process a service class  and render therefrom the corresponding domain name. Such an application program is described in detail in commonly assigned U.S. patent application Ser. No. 10\/661,721, filed on Sep. 12, 2003 and entitled, \u201cSYSTEM AND METHODS FOR SHARING CONFIGURATION INFORMATION WITH MULTIPLE PROCESSES VIA SHARED MEMORY,\u201d the subject matter of which is incorporated by reference into this application.","The use of the identification index , the associated data structure  and the configuration module  by the web server  to prepare the electronic resource  of  for transmission to and use by a requesting client computer  is now illustrated in accordance with an embodiment of the present invention. The resource server  first detects the tag identifier  and then extracts from link tag definition  the link identifier . The resource server  then references the link identification index  to determine the specific index pointer  associated with the extracted link identifier . The resource server  then references the appropriate entry  in the associated data structure  based on the index pointer  determined for the extracted link identifier . The resource server  first reads the service class  from the entry  and then inputs the service class  into the configuration module , which outputs the protocol identifier and the domain name corresponding to the service classification . The domain name is appended to the protocol identifier to form the base portion of the URL corresponding to the link identifier.","After the protocol identifier and domain name have been determined, the resource server  again references the entry  and reads therefrom the path  associated with the index pointer  determined for the extracted link identifier . The resource server  appends this path  to the determined domain name to yield, and thus identify, the URL corresponding to the link identifier . Finally, the resource server  replaces the link tag  with an href tag specifying the identified URL.","Referring more specifically to the exemplary definitions of , assuming the link identifier  to be \u201cApple,\u201d the index pointer  is thus \u201c0.\u201d The service class  corresponding to an index of \u201c0\u201d is \u201cSERV\u201d and the associated path is \u201c\/fruit\/northamerica.aspx.\u201d For purposes of illustration only, if the configuration module  were to determine that the protocol identifier and domain name corresponding to the service \u201cSERV\u201d is \u201chttp:\/\/www.fruitsworld.com,\u201d the URL for the electronic resource being identified in this example is \u201chttp:\/\/www.fruitsworld.com\/fruit\/northamerica.aspx.\u201d","Referring now to , a flow diagram illustrating operational characteristics embodied in a process  for managing (\u201cmanagement process\u201d) delivery of electronic resources to client computers is shown in accordance with an embodiment of the present invention. To further illustrate the embodiments described above, the management process  is described as being performed by the resource server  in response to the server  receiving a URL request issued by the client computer . As such, the management process  is described as being used to (1) determine whether the electronic resource corresponding to the URL includes a link tag , and if so, (2) convert the link tag  to a format readable by the client computer . It should be appreciated that this process  may be performed multiple times, either simultaneously or sequentially, to perform one or both of these functions. That is, although only a single iteration of this process  is described herein, it is contemplated that multiple iterations are warranted.","The management process  is performed using a flow of operations (\u201coperation flow\u201d) beginning with a start operation  and concluding with a terminate operation . The start operation  is initiated when the server cluster  is deployed and the resource server  is operational to receive URL requests. From the start operation , the operation flow passes to a receive operation .","The receive operation  awaits reception of the URL request from the client computer . Once the URL request is received, the receive operation  extracts the URL specified in the request and the operation flow passes to a retrieve operation . The retrieve operation  retrieves the electronic resource corresponding to the received URL from storage. In an embodiment, this requested resource is stored in the resource server . In another embodiment, this resource server  may be stored on a back-end server . In this embodiment, the retrieve operation  identifies the back-end server  maintaining the electronic resource corresponding to the received URL. The retrieve operation  then sends to the identified back-end server  a request for a copy of the electronic resource identified by the URL. The retrieve operation  then awaits the arrival of the copied electronic resource. Upon receiving the copied electronic resource, the operation flow passes to the examine operation .","The examine operation  parses through the retrieved electronic resource to determine whether any link tags  are included therein. A link tag  is defined herein as a definition included in the electronic resource for use in identifying a current URL corresponding to a specific reference link . In an embodiment, the examine operation  detects a link tag  within the electronic resource by searching for and identifying a tag identifier  declared therein. If the electronic resource does not contain any link tags , then the operation flow passes to the transmit operation . In this case, the electronic resource is currently in a format recognizable to the client computer . The transmit operation  serves the electronic resource to the client computer  for rendering to a user. After the transmit operation  is complete, the operation flow concludes at the terminate operation .","If the examine operation  detects a link tag  contained in the electronic resource, the operation flow passes to the identify operation . The identify operation  utilizes the link identifier  included within the link tag definition to identify the URL corresponding to the requested electronic resource. Embodiments of such a process are shown and described in connection with . After the identify operation  has identified the URL corresponding to the requested electronic resource, the operation flow passes to an incorporate operation . The incorporate operation  replaces the link tag  with a client-readable definition (e.g., an href tag) specifying the identified URL, thereby placing the declaration corresponding to the reference link  into a format readable by the client computer . From the incorporate operation , the operation flow passes back to the examine operation , which continues examining the electronic resource for another link tag . If the examine operation  detects another link tag , the operation flow passes to the identity operation  and continues as previously described. Otherwise, the operation flow passes to the transmit operation , which serves the prepared electronic resource to the client computer  for rendering to a user.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 10","FIG. 10"],"b":["910","911","900","1000","410","410","414","104","418","410","414","104","105"]},"The abstraction process  is performed using an operation flow beginning with a start operation  and concluding with a terminate operation . The start operation  is initiated after the examine operation  detects a link tag  within a retrieved electronic resource. From the start operation , the operation flow passes to a retrieve operation .","The retrieve operation  first extracts the link identifier  from the link tag . The retrieve operation  then accesses the link identification index  and retrieves from the index  the index pointer  mapped to the extracted link identifier . After this index pointer  has been retrieved by the retrieve operation , the operation flow passes to an extract operation . The index pointer  points to an entry  of the associated data structure  that corresponds to the extracted link identifier . As described with reference to , this entry  includes both a service class  and a path  corresponding to the referenced electronic resource. The extract operation  extracts from this entry  the service class  specified in the entry .","From the extract operation , the operation flow passes to a query operation . The query operation  evaluates the extracted service class  to determine whether the service class  is implemented internal or external to the server cluster . In an embodiment, service class  named \u201cEXTERNAL\u201d refers to particular entities implemented on an external server cluster. If the service class  is \u201cEXTERNAL,\u201d the operation flow is passed to a identify operation . The identify operation  retrieves the path  specified in the entry  of the associated data structure  that corresponds to the extracted link identifier . This retrieved path  is then identified to be the URL, inclusive of the protocol identifier, domain name, path and query string (if any), corresponding to the link reference . From the identify operation , the operation flow passes to an incorporate operation , which is described in greater detail below.","Referring back to the query operation , if the service class  is not \u201cEXTERNAL,\u201d then the operation flow is passed to a determine operation . The determine operation  uses the extracted service class  to determine the protocol identifier and the domain name for the referenced electronic resource. In an embodiment, the determine operation  is performed, at least in part, by the configuration module . When the configuration module  is a list mapping each service class  implemented on the server cluster  to a particular protocol identifier and domain name, the determine operation  accesses this list, and using the extracted service class  as a reference, locates the associated protocol identifier and domain name. If the service class  is \u201cLOCAL,\u201d then the determine operation  identifies the protocol identifier and the domain name to be the protocol identifier and the domain name included within the URL request received by the receive operation . That is, the protocol identifier and the domain name of the resource referenced within the requested document is the same as the protocol identifier and the domain name for the requested document. As such, the configuration module  is not used by the determine operation . After the protocol identifier and domain name corresponding to the electronic resource being referenced have been identified, the operation flow passes to an append operation .","The append operation  appends the path  specified in the entry  of the associated data structure  that corresponds to the extracted link identifier  to the protocol identifier and domain name identified by the determine operation  for the electronic resource being referenced. As such, the append operation  yields the URL corresponding to the referenced electronic resource. From the append operation , the operation flow passes to the incorporate operation . The incorporate operation  replaces the link tag  detected by the examine operation  with a client-readable definition (e.g., an href tag) specifying the URL either yielded by the append operation  or identified by the identify operation  (if service class=external). From the incorporate operation , the operation flow of the abstraction process  concludes at the terminate operation . Following occurrence of the terminate operation , the operation flow of the management process  resumes at the transmit operation .","Referring now to , a process  for establishing (\u201cestablishment process\u201d) the above-described system and processes for preparing an electronic resource for use by a client system  is shown in accordance with an embodiment of the present invention. The establishment process  is performed using an operation flow beginning with a start operation  and concluding with a terminate operation . The start operation  is initiated during development of an electronic resource that contains code corresponding to at least one reference link  to another electronic resource. From the start operation , the operation flow passes to a define operation .","The define operation  defines the link source file  for the electronic resource being developed. An exemplary link source file  is shown and described in more detail in connection with . Further, a sub-process illustrating operational characteristics of the define operation  is shown and described in  using dashed lines. This sub-process of the define operation  begins with a start sub-operation that is initiated at substantially the same time that the operation flow of the establishment process  is initiated. From the start sub-operation , the sub-process of the define operation  passes to a declare operation . The declare sub-operation is the operation in which each of the service classes  that will be implemented on server cluster  and relied upon to effectuate a reference link  are declared in the link source file . From the declare sub-operation , the sub-process passes to a first define sub-operation . The first define sub-operation is the operation in which each of the link identifiers  specified in the electronic resource is defined on the link source file . Next, the sub-process passes to a second define operation , in which each of the defined link identifiers  are mapped to a specific service class , a specific path  and maybe even an optional query . The sub-process then concludes at the terminate sub-operation and the operation flow of the establishment process  resumes at the compile operation .","The compile operation  interprets and compiles the link source file  into a format recognizable to the resource server . This compilation yields two objects\u2014a link identification index  and an associated data structure , both of which are described in more detail above. After the link source file  has been interpreted and compiled, the operation flow passes to a save operation . The save operation  saves the link identification index  the associated data structure  to memory such that the resource server  can access these objects in random fashion whenever a client computer  requests an electronic resource having one or more link tags . After these objects are stored to memory, the operation flow passes to a first query operation .","The first query operation  is a query operation that, after a predetermined period in time, accesses the properties associated with the link source file  to determine whether the link source file  has been revised during a predetermined period in time. As such, during each iteration of the first query operation , the properties of the link source file  are examined to determine if any declarations or definitions contained in the file  have been revised since the last time the file  was saved by the save operation . If the link source file  has been revised within this certain predetermined time period, the operation flow is passed back to the compile operation  and continues as previously described.","If, after this predetermined time period, the link source file  is not revised, then the operation flow passes to a second query operation , which checks to make sure that the server cluster  is still operational and may be used to serve electronic resources to the client computer . If the server cluster is operational, the operation flow passes back to the first query operation  and continues as previously described. Otherwise, if the server cluster  is not operational, the operation flow concludes at the terminate operation . As noted above, it should be appreciated that the link source file  may be created and compiled on a computing system other than the resource server  (e.g., in a software development laboratory or environment). In this embodiment, the query operation  and  are not performed and the operation flow passes from the save operation  to the terminate operation .","The various embodiments described above are provided by way of illustration only and should not be construed to limit the invention. Those skilled in the art will readily recognize various modifications and changes that may be made to the present invention without following the example embodiments and applications illustrated and described herein, and without departing from the true spirit and scope of the present invention, which is set forth in the following claims. For example, the present invention is described herein as abstracting a URLL for a referenced electronic resource using a link identifier . These abstracted URLs are described as having at least a protocol identifier, a domain name, a path and maybe even a query string. However, one of skill in the art will recognize that an abstracted URL may include only a protocol identifier and a domain name. As such, the path may also be an optional parameter for a URL being abstracted in accordance with an embodiment of the invention.","Even further, those of ordinary skill in the art will appreciate that the described link identifiers may be used by the present invention to abstract any type of link that may be identifiable to computers within a network environment as specifying a location within the environment on which an electronic resource is stored. As such, unique addresses formatted by a means other than URL are contemplated within the scope of the present invention. Additionally, the link source file  is described as being a file that, at creation, is not recognizable to the resource server . However, the link source file  may instead be written in a format wherein the file  may be interpreted by the resource server  without first having to be compiled by the compiler . For example, without limitation, the link source file may be created in C# programming language."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Having thus described the invention in general terms, reference will now be made to the accompanying drawings, which are not necessarily drawn to scale, and wherein:",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 7","FIG. 6"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 8","FIG. 6"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 10","FIG. 9"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 11","FIG. 5"]}]},"DETDESC":[{},{}]}
