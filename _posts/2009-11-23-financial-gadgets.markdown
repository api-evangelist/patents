---
title: Financial gadgets
abstract: Methods, computer program products, and systems, related to providing financial gadgets to users. In one implementation, a method includes receiving gadgets and receiving a notification that one or more gadgets has been certified. A web page with an interface through which users can select gadgets is generated and provided to a user computer. A user selects a gadget, and the selected gadget is run, including providing the user-specific financial information to the gadget. Content based on the output of the gadget is provided to the user. User-specific financial information can be collected, and modified by the gadget. A notification can be received that a financial institution has authorized one or more of the certified gadgets and the web page can only allow users to select authorized gadgets.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08346615&OS=08346615&RS=08346615
owner: Yodlee, Inc.
number: 08346615
owner_city: Redwood City
owner_country: US
publication_date: 20091123
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Under 35 U.S.C. \u00a7119(e)(1), this application claims the benefit of prior U.S. Provisional Application No. 61\/117,868, titled \u201cFinancial Gadgets,\u201d filed Nov. 25, 2008, which is incorporated here by reference.","This disclosure relates to purchase and use of gadgets that use financial information.","As the Internet has grown in popularity, more users are turning to services provided over the Internet to help manage their finances.","These services can be provided by financial institutions, such as banks or credit card companies, or by account aggregators who aggregate and present user-specific financial information from multiple financial institutions.","Users typically use a user name and password to log-in to web page(s) maintained by a financial institution or an account aggregator. From the web page(s), the user can access online banking, electronic bill payment, account aggregation, and other online financial services.","Online banking provides a user access to his or her financial information and also offers a number of services to a user. Users can, for example, view their statements online, including transaction details and cancelled checks, transfer balances online, and apply for loans online.","Users can also use electronic bill payment to pay bills online by transferring money from an account to a creditor through the Internet. Many financial institutions and account aggregators allow a user to pay all of his or her bills from their web page(s). Users may also be able to schedule automatic payments to creditors from some financial institution and account aggregator web pages.","Account aggregation involves presenting financial information related to multiple accounts of a user in one place. Each account can be with a different financial institution. Account aggregation makes it easy for a user to quickly get a picture of his or her overall finances.","In general, in one aspect, a method includes collecting in a computer system user-specific financial information from a financial institution and storing the user-specific financial information in the computer system. A plurality of gadgets are received in the computer system from a plurality of developers. Each gadget is associated with one or more developers. A notification is received in the computer system that a platform provider has certified one or more of the plurality of gadgets. A first web page is generated with the computer system and is provided to a client computer of a user. The first web page includes an interface through which the user can select a gadget from the one or more certified gadgets. A notification is received in the computer system that the user has selected a gadget, and the selected gadget is run on the computer system. Running a gadget includes providing user-specific financial information to the gadget and receiving output from the gadget. The user-specific financial information in the computer system is modified in response to the output of the gadget or content based on the output of the gadget is provided to the user.","Implementations can include one or more of the following features. Providing content based on the output of the gadget to the user can include generating a second web page on the computer system using the output of the gadget and providing the second web page to the client computer of the user. Providing content based on the output of the gadget to the user can also include sending a text message or an e-mail message to the user. An indication that the financial institution has authorized one or more of the certified gadgets can be received in the computer system. The interface can allow a user to select a gadget only from the one or more authorized gadgets. Selecting a gadget can be purchasing a gadget. Payment information associated with the purchase of the gadget can be received in the computer system. The payment information can include an amount owed and a payment source. A notification than an electronic payment equal to the amount owed has been received from the payment source can be received in the computer system. Electronic payments to the financial institution and the one or more developers associated with the gadget can be caused to be made. The one or more certified gadgets can be stored in the computer system.","The platform provider can determine whether to certify each of the plurality of gadgets according to whether the gadget performs its advertised functionality, whether there are any security concerns about the gadget, and whether there are any performance concerns about the gadget. The method can further include receiving in the computer system a notification that the user has requested that a gadget's access to the user's financial information be revoked, and revoking the gadget's access to the user's financial information.","In general, in one aspect, a computer program product, encoded on a computer-readable medium, is operable to cause a data processing apparatus to perform the method set out above.","In general, in one aspect, a system of one or more computers are programmed to perform operations comprising the method set out above.","In general, in one aspect, a method includes receiving in a computer system a plurality of gadgets from a plurality of developers. Each gadget is associated with one or more developers. A notification is received in the computer system that a platform provider has certified one or more of the plurality of gadgets. A notification is received in the computer system that a financial institution has authorized one or more of the certified gadgets. A first web page is generated with the computer system and is provided to a client computer of a user. The first web page includes an interface through which the user can select a gadget from the one or more authorized gadgets. A notification is received in the computer system that the user has selected a gadget. The selected gadget is run on the computer system and output is received from the selected gadget. A second web page is generated on the computer system using the output of the selected gadget, and the second web page is provided to the client computer of the user.","Implementations can include one or more of the following features. User-specific financial information from the financial institution can be collected and stored in the computer system. Running a selected gadget can include providing the user-specific financial information to the gadget. Selecting a gadget can be purchasing a gadget. Payment information associated with the selection of the gadget can be received in the computer system. Payment information can include an amount owed and a payment source. A notification can be received in the computer system that an electronic payment equal to the amount owed has been received from the payment source. Electronic payments to the financial institution and the one or more developers associated with the gadget can be caused to be made. One or more of the authorized gadgets can be stored in the computer system.","In general, in one aspect, a computer program product, encoded on a computer-readable medium, is operable to cause a data processing apparatus to perform the method set out above.","In general, in one aspect, a system of one or more computers are programmed to perform operations comprising the method set out above.","In general, in one aspect, a method includes collecting in a computer system user-specific financial information from a financial institution and storing the user-specific financial information in the computer system. A plurality of certified gadgets are received from a platform provider. Each gadget is written by one or more developers. A use notification is received in the computer system from the platform provider indicating that a user can use a gadget. The gadget is run on the computer system. Running a gadget includes providing user-specific financial information to the gadget and receiving output from the gadget. The user-specific financial information in the computer system is modified in response to the output of the gadget or content based on the output of the gadget is provided to the user.","Implementations can include one or more of the following features. Providing content based on the output of the gadget to the user can include generating a second web page on the computer system using the output of the gadget and providing the second web page to the client computer of the user. Providing content based on the output of the gadget to the user can also include sending a text message or an e-mail message to the user. The use indication can be user-specific and indicate that a user has purchased the gadget. The use indication can indicate that any user can use the gadget. An indication that the financial institution has authorized one or more of the certified gadgets can be received in the computer system, and only authorized gadgets can be run on the computer system. The plurality of certified gadgets can be stored in the computer system.","In general, in one aspect, a computer program product, encoded on a computer-readable medium, is operable to cause a data processing apparatus to perform the method set out above.","In general, in one aspect, a system of one or more computers are programmed to perform operations comprising the method set out above.","In general, in one aspect, a method includes collecting in a computer system user-specific financial information from a financial institution. The method further includes storing the user-specific financial information in the computer system, receiving in the computer system information identifying a plurality of gadgets from a plurality of developers, each gadget associated with one or more developers, and receiving in the computer system a notification that a platform provider has certified one or more of the plurality of gadgets. A first web page is generated with the computer system and provided to a client computer of a user. The first web page includes an interface through which the user can select a gadget from one or more certified gadgets and specify that the gadget can access the user-specific financial information. A notification that the user has selected a gadget is received. A request from the selected gadget is received and in response to the request, the user-specific financial information is provided to the gadget.","Implementations can include one or more of the following features. The method can further include modifying the user-specific financial information in the computer system in response to output received from the gadget. The method can further comprise running the selected gadget in the computer system.","In general, in one aspect, a computer program product, encoded on a computer-readable medium, is operable to cause a data processing apparatus to perform the method set out above.","In general, in one aspect, a system of one or more computers are programmed to perform operations comprising the method set out above.","The details of one or more embodiments are set forth in the accompanying drawings and the description below. Other features, objects, and advantages will be apparent from the description and drawings, and from the claims.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 1","b":["102","104","106","108","110"]},"A financial institution is an institution that provides financial services, deals in financial instruments, or lends, invests, or stores money. Examples of financial institutions include banks, brokerage firms, credit card companies, credit unions, and savings and loans. The financial institution has financial information about users who have an account with the financial institution stored on its server , for example, in a database. The financial information can also be stored on the platform provider's server . A user can have an account with the financial institution when, for example, the user deposits money at the institution or has a line of credit provided by the institution.","Financial information includes, for example, customer data, account data, financial institution data, payee data, and transaction data. Customer data can include the customer's name and contact information, e.g., the customer's address, telephone number, and email address. Customer data can also include the customer's password or PIN. Account data can include the customer's account numbers, financial institutions, and account balances. The financial institution data can include the financial institution's name and address and the financial institution's ABA or routing number. Where the financial institution server  performs electronic payments to payees, the payee data can include the payee's name, contact information, e.g., the customer's address, telephone number, and email address, and can also identify the bank and account number to receive payment. The transaction data includes data for individual transactions, e.g., the identity of customer, the identity of payee, date of the transaction, the amount of payment, the account from or to which payment will be made, and a transaction identifier, e.g., a check number. Transaction data can also include additional information about the payee such as the payee's address or the bank and account number where the payee received the payment.","A user has an account with the financial institution and uses a computer  to access financial information related to that account from the platform provider's server  or the financial institution's server . The platform provider's server  or the financial institution's server  (whichever the user's computer  is interacting with) transmits data including the requested financial information to the user's computer . The user's computer  then presents the requested financial information to the user. A user may access information about multiple accounts at once.","The platform provider's server  runs applications that provide three main services: account aggregation, presentation of financial information, and a gadget platform. The platform provider's server  can provide these services directly to a user, or the platform provider can act as a backend provider and provide software, support, and other tools to a financial institution to allow the financial institution's server  to provide these services to a user. In some implementations the platform provider provides some of the services directly to a user and acts as a backend provider for other services.","When the platform provider's server  provides these services directly to a user, it can do so on behalf of the financial institution. In this implementation, the platform provider's server  can optionally brand communications it sends to the user's computer  with the financial institution's logo, colors, or other information so that the user, viewing the communication on his or her computer , believes he or she is interacting with the financial institution's server  rather than the platform provider's server . In brief, the platform provider's server  can store data associating financial institutions with graphic images and color codes, e.g., in a database. When the platform provider's server  generates a web page branded as a financial institution, the server  inserts the graphic images and color codes associated with the financial institution into the markup language document that is then sent to the user.","Account aggregation involves collecting financial information about a user. Data representing this information is optionally stored in a financial information repository, e.g., a database, on the platform provider's server  or the financial institution's server . The financial information can be collected directly by a platform provider's server  or by a financial institution's server  with backend support from a platform provider.","Financial information can be collected in different ways. For example, in some implementations, information is received directly from a financial institution's server . In some implementations, the platform provider's server  or the financial institution's server  run one or more agents to extract user-specific financial information from various web pages and other consumer-accessible channels, for example public OFX feeds. An agent is a computer program that extracts financial information by, for example, screen scraping by parsing the HTML code of web pages and identifying relevant information.","A web page is a block of data identified by a URL that is available on the Internet. One example of a web page is a HyperText Markup Language (HTML) file. Web pages commonly contain content; however, web pages can also refer to content outside the web page that is presented when the web page loads in a user's web browser. Web pages can also generate content dynamically based on interactions with the user.","A public OFX feed is a stream of financial data sent to another computer, for example, over the Internet, by a server of one or more financial institutions, where the data is formatted in accordance with the Open Financial Exchange standard.","Other commonly used methods of gathering financial information are also envisioned.","Financial information is presented to the user through one or more web pages sent by the platform provider's server  or the financial institution's server  to the user's computer . The web page(s) can also provide traditional on-line services associated with the financial institution. For example, for banks, credit unions, and savings and loans, these traditional on-line services include paying bills, transferring funds electronically, and reviewing statements. For credit card companies, the traditional on-line services include paying bills, reviewing transactions, reviewing statements, performing balance transfers between two credit cards, and requesting a credit line increase. For brokerage firms, the traditional on-line services include providing account information, providing information about a user's investments, supporting on-line trading, and providing real-time quotes.","These web pages can be generated directly by the platform provider's server  or by the financial institution's server  with backend support from the platform provider. Backend support includes software, support, and other tools that allow the financial institution's server  to generate web pages to present financial information to the user through the user's computer . These tools can be software based, hardware based, or both.","The platform provider's server  or the financial institution's server  with backend support from the platform provider also provides a platform for running gadgets and an interface to allow the gadgets to access stored financial information. Each gadget is managed and presented in a web portal generated by the platform provider's server  or the financial institution's server .","Generally speaking, a gadget is a computer program, run on the platform provider's server  as shown in  (or the financial institution's server  as discussed in the implementation as shown in ), for example a portlet or a servlet. In various implementations, gadgets generate content for presentation on a user's computer . For example, a gadget can generate content, e.g., markup language and\/or scripting language, that is provided to a web page server and inserted by the web page server into a web page (along with other content) that is transmitted for presentation by the web browser on the user's computer. A gadget generates content based at least in part on generally available information or user-specific information. The gadget can store generally available information and can access generally available information on the Internet. The gadget accesses generally available information on the Internet through standard techniques used, for example, by search engines, portals, and destination sites. For example, the gadget can use AJAX web services or RESTful web services to retrieve information from one or more web pages or web servers. In some implementations, the platform provider's server monitors and regulates calls made by the platform provider to outside servers or services.","The gadget can send a request for user-specific information to the platform provider's server  or financial institution's server  (whichever is running the gadget) by using the interface provided by the platform provider. This interface consists of commands for passing information and causing behavior, and it is specified in an gadget application programming interface (gadget API) described in documentation included in a gadget software development kit (gadget SDK) provided to the developer by the platform provider. The gadget SDK can also include tools for developers and other features commonly found in software development kits. User-specific information provided by the platform provider's server  or the financial institution's server  can include financial information.","Examples of functionality that can be provided by gadgets include recognizing discounts based on transaction history, providing spending insights and advice, exporting tax items, exporting medical payments, generating expense reports, tracking savings, monitoring 401\/IRA\/529 accounts, providing investment portfolio tools, generating schedule A, B, & D reports, tracking mileage, analyzing differences between expected expenses and income, helping users pay down debt, generating a combined asset\/liability chart, importing user financial data from other sources, providing a credit card payoff calculator functionality, tracking a user's savings goals, determining mortgage payments, determining credit scores, determining auto valuations, determining asset forecasts, and providing a user with insurance offers tailored to his or her financial profile. Other gadget functionality is also envisioned.","In some implementations, gadgets provide services to a user, such as monitoring or modifying the user's financial information, without necessarily presenting content to the user through a web page. For example, a gadget could periodically scan a user's financial information looking for certain factors, such as a low account balance, and notify the user through a text message or e-mail message sent directly to the user. Gadgets can also make automatic payments, for example, electronically paying a user's cell phone bill from a user's account each month if sufficient funds are in the account and first transferring money from an additional account if sufficient funds are not in the account. In some implementations, content generated by these gadgets is at least periodically presented to the user through a webpage to allow the user to configure the gadgets.","In some implementations, rather than running on the platform provider's servers or a financial institution's servers, the gadgets can run on third party websites or on a user's own computer. In these implementations, the gadget requests needed financial information or needed financial actions from the platform provider's server (or the financial institution with support from the platform provider's server). The platform provider's server (or the financial institution with support from the platform provider's server) verifies that the gadget is authorized to access a user's financial data before providing the requested information or taking the requested action. Verification can include, for example, verifying a password or passkey provided by the gadget to the platform provider's server.","A developer uses a computer  to develop gadgets. A developer can be an independent third party, the platform provider, the financial institution, or a user. In one embodiment, the developer uses his computer  to develop gadgets that are run on the platform provider's server . In an alternative embodiment, the developer uses his computer  to develop gadgets that are run on the financial institution's server . The developer's computer  stores the gadgets as the developer is developing them. The developer's computer  can send completed gadgets to the platform provider's server  through the network . The platform provider's server  stores the completed gadgets, for example, in a gadget database.","The system allows a user to \u201cpurchase\u201d and run gadgets developed by a developer. In one embodiment, the platform provider's server  runs the gadgets. In an alternative embodiment, the financial institution's server  runs the gadgets. In either case, in this context, the \u201cpurchase\u201d is a purchase of the right to have the purchased gadget run on the appropriate server and have the content generated by the gadget incorporated into the web pages generated by the server and presented to the user on the user's computer. The \u201cpurchase\u201d is also an implicit agreement by the user to allow the gadget access to the user's financial information. In some implementations, a user must \u201cpurchase\u201d a separate copy of a gadget for each server on which the user wants to run the gadget. In some implementations, a user must \u201cpurchase\u201d a separate copy of a gadget for each financial institution on whose data the user wants to run the gadget.","Running a gadget includes calling a copy of the gadget, running it on the server, interacting with the gadget using the interface provided by the gadget API\u2014including providing financial information to the gadget, receiving output from the gadget, generating a web page including the output from the gadget, and sending data comprising the web page to the user's computer  through the network . Because the gadgets are resident on a computer system that stores the user's financial information, the gadgets can make use of the user's financial information essentially in real time without needing to access the user's financial information over the Internet from a computer system operated by another entity. In some implementations, calling a copy of the gadget includes instantiating a new copy of the gadget. In some implementations, calling a copy of the gadget includes calling a copy of the gadget that is already running.","In some implementations, the user uses his or her computer  to access gadgets through the platform provider's web page(s). In other implementations, the user uses his or her computer  to access gadgets through the financial institution's web page(s). By selecting gadgets with desired functionality, the user can customize his or her experience. The user can feel comfortable using gadgets with access to his or her financial information because each gadget is certified by the platform provider.","The system also allows the platform provider and financial institution to make more options available to the user. Platform providers and financial institutions sometimes have access to the financial information of users but do not have the resources to create computer program applications to provide all of the functionality a user would desire. Furthermore, even if they did have those resources, not all applications will appeal to all users. Different users have different needs they would like to have met by the online finance world. For example, some users want advanced tools to help them monitor their retirement accounts. Other users are looking for easy-to-use tools to help them stay within a budget. The combination of developer-created and user-selected gadgets means that users can be offered more options in a customized environment.","The system also provides for a new business model. The developer, platform provider, and financial institution all share in the proceeds from the sale of gadgets to users. The system allows the platform provider and the financial institution to leverage their preexisting relationship with the user and increase their respective incomes.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 2"},"A platform provider has one or more servers . While only one server is shown in , multiple servers can be used. In some implementations, at least one of the platform provider's servers  is a programmable general purpose computer. In some implementations, at least one of the platform provider's servers  is comprised of one or more computers in a server rack.","The platform provider's server  stores a gadget database . The gadget database  stores information about gadgets that have been transmitted from a developer's computer  to the platform provider's server , such as the gadget itself, the name of the gadget, the developer of the gadget, the features of the gadget, and the price of the gadget. In some implementations, the platform provider's server  also stores a financial information repository . The financial information repository  stores collected financial information of individual users.","The platform provider's server  runs a number of computer programs. In some implementations, the server runs an optional gadget SDK granter , a certifying system , a data engine , a web page generator  including a store generator , and a gadget runner .","The gadget SDK granter  is a computer program that determines whether a developer should be given access to the gadget SDK. The certifying system  is a computer program that is used in gadget certification. The data engine  is a computer program that extracts and gathers financial information about individual users from the financial institution's server  and web pages. In some implementations, the data engine  stores extracted financial information in the financial information repository .","The web page generator  is a computer program that generates one or more web pages. The store generator  is a computer program that generates web pages directed to selling gadgets to users.","The gadget runner  is a computer program that runs gadgets on the platform provider's server. Running a gadget can include instantiating or loading the gadget and interacting with the gadget through an interface. The interface allows commands and data to be passed back and forth between the gadget and the server. Interacting with a gadget through an interface can include receiving requests from the gadget, sending requested financial information to the gadget, receiving data including output from the gadget, and sending data including output of the gadget to the web page generator  to be incorporated into web pages presented to the user.","A developer typically has a programmable general purpose computer . The developer uses development software  on the computer to develop one or more gadgets and send them to the platform provider sever . In some implementations, the development software includes the gadget SDK.","A user  typically has a programmable general purpose computer . The user runs an web browser  on this computer, for example, Microsoft Internet Explorer\u2122. The web browser  receives one or more web pages from a server run by the platform provider and presents the web pages to the user. Presenting the web pages to the user can include displaying the web pages on a computer monitor or other display device. Presenting the web pages can also include any other method of conveying information to the user, for example presenting sounds corresponding to the web pages or providing haptic feedback corresponding to the web pages.","A financial institution has one or more servers . While only one server is shown in , multiple servers can be used. In some implementations, at least one of the financial institution servers  is a programmable general purpose computer. In some implementations, at least one of the financial institution servers  is comprised of one or more computers in a server rack.","The financial institution's server  has a store of financial information . The store of financial information includes financial information pertaining to individual users. Optionally, the financial institution server also runs a gadget authorizer computer program . The gadget authorizer program determines whether or not a user can see specific gadgets.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["300","301","303","305","307","301"]},"The content management system  manages the content of the web pages presented by the server. Content can include text, configuration parameters, and other settings that allow the financial institution to control the user's experience. The content management system  can include the data needed to brand web pages or other communications sent to the user's computer . For example, the content management system can include a database associating one or more financial institutions with color codes and\/or graphic images of each financial institution's logo for use in generation of web pages. The content management system  can include the data needed to present web pages in different languages. In some implementations the content management system  acts as a single point of control for how web page content is presented to users.","The data engine  is used to extract and collect financial information about a user. The data engine may run one or more agents. Agents are computer programs that extract and collect financial information about a user, by, for example, screen scraping. Agents can perform additional tasks as well, for example, executing user transactions. The collected financial information can be stored in the data engine , e.g., in a relational database.","The platform tools  support the data engine. In some implementations, platform tools provide tools to traverse websites to search for data to extract, and monitor and support data engine agents. Platform tools can also provide aggregation services and support accessing data stored at remote sites. Platform tools can also provide support for performing calculations on extracted data.","Platform services  run on top of the platform tools  and data engine . Platform services  provide an interface of commands for accessing platform tools and the information stored in the data engine.","The eCommerce server  powers the gadget store generated by the platform provider's server. The eCommerce server provides the usual functionality provided by a conventional eCommerce server for purchases of other products, but directed to the purchase of gadgets. The functionality can include, for example, displaying and sorting lists of gadgets with associated information such as price, tracking past user purchases of gadgets, generating rankings of gadgets from user input, cataloging what gadgets are available, tracking user activity on the web pages that make up the store, supporting user-driven customizations of the web page store, and supporting shopping cart functionality to permit a user to select multiple gadgets for purchase as the user navigates the store.","A monitoring system  also runs on top of the content management system . The monitoring system monitors the behavior of the computer programs on the platform provider's server.","The platform provider API  acts as an interface to allow server programs and applications to access the underlying tools. The platform provider API  specifies how information and commands are passed between computer programs running on the server(s) and platform services .","The portal technology  controls the portal generated by the platform provider's server. In some implementations, the portal technology runs gadgets. In some implementations, the portal technology  provides a standard portal architecture with an application programming interface (API) that defines a portal page with content areas and commands that are used to populate the content areas. The portal technology provides a layer of abstraction in regard to what is presented by the portal.","The gadget API  is an interface that specifies how platform provider applications , platform provider gadgets , and developer gadgets  can exchange information and commands with the platform provider's server(s).","The store generator  generates the gadget store web pages and interacts with the eCommerce server  through the portal technology .",{"@attributes":{"id":"p-0091","num":"0090"},"figref":"FIG. 4","b":["402","404","406","408","410"]},"A developer uses his or her computer  to send data indicating a request for access to the gadget SDK to the platform provider's server . When the platform provider's server  receives the data indicating the request, it optionally stores it in a list of requests. The platform provider then applies a screening process to determine whether or not to have its server  send the gadget SDK to the developer's computer .","In some implementations, the screening process includes an application process that limits access to the gadget SDK to developers who meet certain criteria. For example, the platform provider could deny access to the SDK to developers convicted of financial crimes. The screening process can include collecting information from the developer and collecting a fee from the developer. As another example, the screening process can require a developer to create an account with the platform provider. Creating an account can include, for example, creating a user name and password and providing the platform provider with certain information. For example, the developer can be required to provide his or her name, address, e-mail address, and a phone number. In some implementations, the developer must also sign an agreement indicating that he or she will follow the requirements of the platform provider.","In other implementations, access to the gadget SDK is freely available for all developers.","In some implementations, the platform provider's server  runs an SDK granter computer program to automatically determine whether to grant the developer's request. In other implementations, the platform provider's server  receives input from a human being, e.g., an employee of the platform provider, indicating a decision on whether to grant the developer's request. In either case, a database on the platform provider's server  can store identifying and contact information for each developer who has requested the gadget SDK and data indicating whether the developer has been granted access to the gadget SDK.","If the platform provider or the SDK granter computer program run on the platform provider's server  determines access should be granted, the platform provider's server  sends data including the SDK or information on how to access the SDK to the developer's computer . The developer's computer  may store the data.","The developer then uses the gadget SDK to develop a gadget to run on the platform provider's server. Development is done using the developer's computer , and the developer's computer  stores the gadget.","In some implementations, before the developer begins development on a gadget, the developer signs up to be a development partner with the platform provider. As part of the development partner sign-up process, the developer can be required to sign a contract specifying the terms of the financial agreement between the developer and the platform provider, as well as what is and is not allowed in gadgets developed by the developer.","The development partner can also be required to send additional information to the platform provider's server . This information can include, for example, an e-mail address, a phone number, and a payment account. The payment account is a financial institution account for the developer, where the developer wants to receive payment for gadgets he or she develops.","The platform provider's server  can use this information for identity verification purposes. For example, the platform provider's server  may initiate an e-mail verification process and\/or a phone number verification process. These processes can include sending information to the developer at the specified e-mail address or phone number and requiring the developer to confirm his or her identity by sending the received information back to the platform provider's server. For example, the platform provider's server  can send information including a verification code and a verification website. The developer must then visit the verification website and enter the verification code in order to verify his or her identity.","As another example, the platform provider's server  may initiate a verification process based on the account information provided by the developer. For example, the platform provider's server  can initiate a credit check process to determine a credit score for the developer based on the provided account information. In some implementations, the platform provider's server  requires that the developer have a credit score that satisfies, e.g., exceeds, a threshold before the developer is verified. As another example, the platform provider's server  can initiate a background check process on the developer based on the provided account information. This platform provider's server  can then analyze the results of this background check process to ensure that a developer does not have a criminal record, before the developer is verified.","Other identity verification processes can also be used, for example, an identity verification service, such as Equifax, Inc. can be used.","Once a developer becomes a development partner, the platform provider's server  can provide various tools to help the developer with development. In some implementations, the platform provider's server  maintains a gadget wishlist that lists gadget features that users have expressed an interest in. The gadget wishlist can optionally include information such as how many users have requested a particular gadget feature on the wishlist.","In some implementations, the platform provider's server  generates a user interface and sends the user interface to the developer's computer . The user interface specifies what applications the developer is currently developing, along with details and optionally status of those applications.","In some implementations, the platform provider's server  also maintains a bug database. The bug database includes bugs and other service requests submitted by users of the developer's applications. The developer can use the bug database to manage and control responses to user bug reports.","In some implementations, the platform provider's server provides a sandbox testing environment. The sandbox testing environment is a testing environment run on the platform provider's server where a developer can upload and run gadgets that are under development. The testing environment mimics the conditions under which the gadgets would be normally be run on the platform provider's server . In some implementations, the sandbox testing environment is part of the same system that runs certified and purchased gadgets for users. In other implementations, the sandbox testing environment is part of a separate system.","Developers can test their gadgets in the sandbox testing environment using data received from various testing data sources. In some implementations, the test data is the developer's own account data. The platform provider's server  can optionally allow the user to create dummy account entries in his or her account data. This allows a user to safeguard his or her actual accounts from problems with the gadget. It also allows a user to create test accounts to specifically target particular test scenarios. For example, if a developer is interested in how a gadget will behave on a user account that has less than a particular balance, the developer can create a dummy account entry with less than the particular balance and then test the gadget using that account. In some implementations, the platform provider's server  provides the developer with test account data on which the gadgets can be tested. For example, the platform provider's server  can maintain a store of fake account data corresponding to one or more fake users and one or more accounts of those fake users, and then provide access to this fake account data to the gadget during testing.","The platform provider's server  can also provide developers with application guidelines. The application guidelines can be, for example, a document or documents stored on the platform provider's server  that specify the requirements for gadgets running on the platform provider's server . The requirements can include, for example, specific requirements that gadgets running on the platform provider's server  must meet, as well as specific prohibited activities that the gadgets will not be allowed to do. The guidelines can also include requirements such as specific technologies developers must use, a maximum size for gadgets, and a list of attributes that developers can specify for their gadgets. The attributes can include, for example, whether the gadget is compliant with requirements for users with disabilities (e.g., as set forth in the Americans with Disabilities Act), or a web address for developer-specific terms and conditions that govern a user's use of the gadget.","In some implementations, the platform provider's server  hosts a forum where developers can ask questions, either to each other, or to employees of the platform provider. For example, the forum can be a web-based forum hosted on the platform provider's server . Developers and platform provider employees can log-in to the forum, for example, using a user name and password. In some implementations, the forum has different sections including, for example, a public section where forum questions can be posed to all developers and employees, and a private section where forum questions can be posted to just platform provider employees. This division of the forum into multiple sections allows the platform provider to provide a confidential environment for developers to ask questions. In some implementations, platform provider employees can monitor the forum and inform developers when their gadget ideas will not satisfy the application guidelines of the platform provider.","Once a developer has finished testing his or her gadget, the developer can prepare the gadget to be run on other user data, for example, by incorporating standard code provided by the platform provider into the gadget. Then, the developer's computer  sends the gadget to the platform provider's server  through the network . This can include uploading the gadget to the platform provider's server  through a traditional web-based upload interface. In some implementations, the developer's computer  also sends data indicating the price of the gadget as set by the developer. In some implementations, data indicating the price of the gadget indicates a single price for the gadget. In some implementations, data indicating the price of the gadget indicates a tiered pricing structure, for example, $0.99 for a \u201clight\u201d version of the gadget, $9.99 for a \u201cfull\u201d version of the gadget, and $9.00 to upgrade from the \u201clight\u201d version of the gadget to the \u201cfull\u201d version of the gadget. The \u201clight\u201d version of the gadget has some, but not all, of the features of the \u201cfull\u201d version of the gadget. In some implementations, the developer's computer  also sends data including additional information about the gadget, for example, a list of its features, whether a trial version is available, what upgrade options are available, if any, and the type of access to the gadget that will be sold. The type of access can specify, for example, that the user will have unlimited access to the gadget, that the user will pay based on usage of the gadget, or that the user will have unlimited access to the gadget until a particular date. In some implementations, the developer's computer  also sends data indicating that the gadget is \u201cbeta.\u201d A gadget that is \u201cbeta\u201d is still under development and may not have been fully tested.","The platform provider's server  receives the gadget and any accompanying data from the developer's computer . The gadget and accompanying data are stored on the platform provider's server , for example, in a gadget database.","The platform provider then examines the gadget and certifies the gadget if it is safe to run. In some implementations, the examination is directed toward three goals: (1) making sure the gadget does what the developer claims and does not endanger a user's financial information, (2) eliminating gadgets that risk crashing the platform provider's server, and (3) analyzing the performance of the gadget. In some implementations, only the first two examinations are performed.","The examination may include gathering and analyzing background information on the developer, analyzing the gadget for robustness, analyzing whether the gadget complies with the developer's claims of functionality, and analyzing security or privacy concerns raised by the gadget.","In some implementations, the examination includes input from a human being e.g., an employee of the platform provider, as to whether the gadget should be certified. In this implementation, the platform provider's server  receives input from the human being indicating whether the gadget should be certified through its certification program.","In some implementations, certification is at least partly automated by the certification program. For example, a gadget can be automatically run and monitored for problems such as crashing the platform provider's server or transmitting user information without user permission.","For example, the determination of whether the gadget does what is claimed can be performed by one or more employees of the platform provider. These employees can analyze the code and run the gadget to determine whether the functionality is claimed. These employees can also analyze the code for hidden trap doors or other malicious code that would allow a developer or a third party unauthorized control over a user's financial accounts. This process could also be automated, for example, by running the gadget and automatically monitoring for unauthorized transmittal of user information or unauthorized activity on a user account.","As another example, the determination of whether the gadget will crash the platform provider's server  can be made using conventional software programs that run and analyze programs to determine, memory usage, disk requirements, and whether the program runs in infinite loops. Alternatively or additionally, a platform provider employee can manually analyze the code of the gadget.","As yet another example, the determination of whether the gadget has sufficient performance can be made using conventional software programs that analyze programs to determine, for example, whether the programs are making inefficient use of system resources or inefficient system calls. Alternatively or additionally, a platform provider employee can manually analyze the code of the gadget.","In some implementations, the platform provider can certify the gadget for use in some environments, but not in others. For example, if the developer has marked the gadget as \u201cbeta,\u201d the platform provider can certify it only for financial institutions that have indicated they are willing to authorize \u201cbeta\u201d gadgets or for use by users who have indicated they are willing to run \u201cbeta\u201d gadgets.","In some implementations, the platform provider's server  sends data to the developer's computer  to inform the developer whether the gadget was or was not certified, and optionally which environments the gadget was certified for. In some implementations, when a gadget is not certified (or is not certified for all environments), the platform provider's server  sends data to the developer's computer  to inform the developer that the gadget was not certified. In some implementations, this data can include an explanation of why the gadget was not certified. This explanation can be, for example, an identification of which of the three prongs described above the gadget failed, an identification of each specific test the gadget failed, or a brief summary of why the gadget was not certified. The explanation can optionally include suggestions for how to modify the gadget so that it will be certified.","In some implementations, the platform provider's server  maintains a versioning framework to track when modified versions of the same gadget are uploaded for certification.","The platform provider's server  stores data indicating that a gadget has been certified in its gadget database. In some implementations, the certified gadgets themselves are stored in the gadget database. In another implementation, data indicating information about the gadgets is stored in the gadget database. Information about a gadget may include, for example, where the gadget is stored, which financial institutions have authorized the gadget, who developed the gadget, the price of the gadget, a list of the gadget features, and which customers are authorized to use the gadget. Information about a gadget can also include data that the platform provider's server  receives from the developer's computer  along with the gadget.","The platform provider's server  then sends data indicating information about certified gadgets to a financial institution's server . This information can include, for example, the developer of the gadget, the price of the gadget, the functionality of the gadget, any co-branding of the gadget, and the gadget itself.","The financial institution determines which gadgets certified by the platform provider should be authorized. The financial institution can determine which gadgets to authorize using whatever criteria it deems appropriate. The criteria may include not authorizing gadgets developed by or branded by competing financial institutions, not authorizing gadgets that compete with gadgets that the financial institution has created, not authorizing gadgets that compete with services provided by the financial institution, and only authorizing gadgets that are branded with the financial institution's name.","In some implementations, the examination includes input from a human being e.g., an employee of the financial institution, as to whether the gadget should be authorized. In this implementation, the financial institution's server  receives input from the human being indicating whether the gadget should be authorized. Optionally, the financial institution can at least partly automate the authorization process through a gadget authorization program on its server . For example, the information about the gadget can be analyzed and gadgets developed by competing financial institutions can be rejected.","Data indicating the decision to authorize a gadget can be stored on the financial institution's server  or transmitted directly to the platform provider's server .","The financial institution notifies the platform provider's server  of the gadgets it has chosen to authorize. Notification can be done in a number of ways including, for example, through e-mail sent from the financial institution's server  to the platform provider's server  or through an interface on a web page generated by the platform provider's server  and provided to the financial institution's server .","In some implementations, rather than receiving an explicit authorization decision for each gadget, the platform provider's server  receives criteria from the financial institution's server . These criteria specify what factors the financial institution would consider when determining whether to authorize a gadget. The platform provider can then apply these criteria as a proxy for the financial institution.","The platform provider's server  stores data indicating that a particular gadget is approved by a particular financial institution  in the gadget database on its server.","In some implementations, after a gadget is certified, a developer can chose to remove the gadget. For example, the developer can use the developer computer  to view a web page generated by the platform provider's server . This web page can list the gadgets the developer has developed and can include a mechanism through which the developer can remove the gadget from sale. If a developer wants to remove a gadget, the developer can use the mechanism in the web page to send data to the platform provider's server  indicating that the gadget should be removed. The platform provider's server  can then remove the gadget.","A user interacts with the platform provider through the web pages generated by the web page generator computer program on the platform provider's server . The web page generator generates web pages. The platform provider's server  then transmits data comprising the web pages to the user's computer  through the network . The user's computer  receives the data comprising the web pages and presents the web pages to the user in a web browser. The user's computer  receives selections and other input from the user and transmits a notification of the user's selection to the platform provider's server  through the network .","In some implementations, to view the web pages generated by the platform provider's server , the user's computer  transmits data including login information to the platform provider's server  through the network . Login information includes some user identifying information. For example, the user identifying information can be the MAC address of the user's computer or a username and password. The platform provider's server  receives the data including login information from the user's computer . The platform provider's server  then uses the login information to determine and verify the user's identity.","In some implementations, to view the web pages generated by the platform provider's server , the user's computer  transmits login information to the financial institution's server  through the network . The financial institution's server  then sends data comprising an authentication message to the platform provider's server  through the network . The platform provider's server  uses the authentication message to determine and verify the user's identity.","Once the platform provider's server  verifies the identity of the user, the user can use his or her computer  to load various web pages generated by the platform provider's server  and transmitted to the user's computer  through the network . The platform provider's web pages at least allow a user to see his or her financial information from one or more financial institutions, run gadgets, and purchase gadgets from a gadget store. However, additional options may also be available to a user.","A user can run available gadgets, for example, through a dashboard tab of one of the web pages generated by the platform provider's server . The dashboard tab has configurable views to allow a user to run multiple gadgets at the same time. In some implementations, a purchased gadget can be run in response to user request. When a user's computer  receives a notification that a gadget should be run, the computer  transmits a run notification to the platform provider's server . In response to receiving the run notification, the platform provider's server  runs the gadget using a gadget runner computer program. The platform provider's server  generates a web page including output from the gadget. The platform provider sends data representing this web page to the user's computer . The user's computer  then presents the web page to the user. In some implementations, a purchased gadget runs on the platform provider's server  automatically, e.g., each time a web page is generated that includes a portal with the gadget.","In some implementations, only gadgets certified by the platform provider, authorized by the financial institution, and purchased by the user can be run by the platform provider's server .","The platform provider's server  runs a gadget by, for example, calling a copy of the gadget, providing system resources to the gadget, and communicating with the gadget through a software or hardware interface, for example, through commands specified in a gadget API. In some implementations, the platform provider's server  only allows a given gadget access to particular parts of the gadget API (or particular APIs, if the gadget API consists of multiple APIs). The platform provider's server  can make the determination as to what parts of the gadget API are needed, for example, from the description of the gadget provided by the developer at the time the gadget is registered. In some implementations, the platform provider's server informs the developer which APIs, or which part of the API, the gadget will be allowed to access. The platform provider's server can do this, for example, by sending data to the developer's computer for presentation to the developer. This limited access to APIs allows the platform provider's server to better reduce the risk that a rogue gadget will cause harm to the system.","In some implementations, calling a copy of the gadget includes instantiating a copy of the gadget. In some implementations, calling a copy of the gadget includes calling a copy of the gadget that is already running on the platform provider's server.","When a gadget needs user-specific financial information from the platform provider, the gadget uses commands specified in the gadget API to send a request for the information to the platform provider's server . The platform provider's server  receives the request and uses its data engine computer program to collect the needed information. The platform provider's computer  then sends the needed information to the gadget.","In some implementations, the data engine computer program on the platform provider's server  collects user-specific information on the fly, in response to a gadget request for user-specific information. In another implementation, the user-specific information is collected in advance by the data engine program on the platform provider's server  and is stored in the financial information repository on the platform provider's server .","In some implementations, the data engine computer program on the platform provider's server  uses agents to collect data including financial information. These agents can use many techniques to collect financial information. For example, agents can navigate to relevant websites, and parse the HTML code of the websites to extract financial information based on a template. The template can be generated by humans, sometimes with input from the user. If a user name or password is needed to access a web page, the agent can use a stored user name and password of the user or can register the user with the web page to create an account for the user. Agents can also search the Internet, including using private search engines available on individual websites. These techniques are explained in more detail in U.S. Pat. Nos. 6,871,220, 6,567,850, 6,278,993, 6,199,007 and 7,200,804, and U.S. Patent Publications 2007\/0180380 and 2007\/0130347, all of which are incorporated by reference.","In another implementation, the platform provider receives data including financial information in useable form directly from the financial institution's server .","In some implementations, a user or the platform provider, can revoke a gadget's access to financial information of the user. This can occur, for example, when the user changes his or her mind about running the gadget, or is concerned that the gadget may be fraudulent. The user revokes a gadget's access to his or her financial information by sending a request to the platform provider's server . For example, the user can view a settings webpage generated by the platform provider's server's  and presented by the user's computer . The user can then provide input to his or her computer  requesting that a specific gadget have its access to financial information of the user revoked. The user's computer  then sends data indicating this request to the platform provider's server. The platform provider's server then revokes the gadget's access, for example, by updating data stored in the gadget database, or by updating a token associated with the gadget to indicate that the gadget no longer has authorization to access the user's financial information.","A user can also use his or her computer  to select, or \u201cpurchase\u201d gadgets from the gadget store generated by the platform provider's server . The gadget store includes web pages generated by the web page generator computer program and eCommerce server on the platform provider's server . The platform provider's server's web page generator program generates web pages to present gadgets available for purchase. The platform provider's server  transmits data comprising these web pages to the user's computer  through the network . The user's computer  receives the data from the platform provider's server  and presents the web pages to the user through a web browser. The user interacts with the generated web pages to view information available from the gadget store. The generated web pages provide at least the functionality of a conventional web storefront, such as presenting prices, presenting ratings, and providing a shopping cart feature where a user can collect gadgets for purchase at a later time as the user navigates the store.","When a user selects one or more gadgets to purchase, the user's computer  sends a selection notification to the platform provider's server  through the network . When the platform provider's server  receives this notification it creates a purchasing web page where the user can enter payment information. Data comprising this web page is sent by the platform provider's server  to the user's computer  through the network . When the user's computer  receives the data, it presents the web page to the user.","In some implementations, the account information for any accounts the platform provider is aware of is pre-entered and the user can select from his or her accounts. In another implementation, the user  is asked to directly input payment information.","The user's computer  receives input from the user indicating a payment selection and optionally other payment data. The user's computer  then sends data comprising the selection and any other payment data to the platform provider's server  through the network . When the platform provider's server  receives the data, it updates the information stored in the gadget database to reflect that the user is authorized to run the purchased gadget, e.g., by storing a token in the gadget database indicating that the user is authorized to run the purchased gadget and that the gadget is authorized to access the user's financial information. The platform provider's server  optionally also stores the payment data, for example, in a payment database, to allow later collection of money from the user. In some implementations, the platform provider's server  receives data comprising a notification of an electronic payment. In some implementations, the user's computer sends data authorizing a third party to send data comprising an electronic payment notification to the platform provider's sever .","Money from user purchases is distributed by the platform provider. The user pays the platform provider. The platform provider in turn shares the payment with the financial institution and the developer. In some implementations, the financial institution receives 30%, the platform provider keeps 30%, and the developer receives 40%. Other distributions are possible. In general, however, the platform provider, developer, and financial institution each receives some share of the payment. In some implementations, the platform provider's server  distributes the money by making electronic payments.","In some implementations, the user's computer  receives input from the user specifying a configuration of the gadget and sends data comprising the gadget configuration to the platform provider's server  at the time the user purchases the gadget. The platform provider's server  optionally stores the data comprising the gadget configuration.","The following figures illustrate views of the platform provider's web pages as seen by the user. In each, the platform provider's server has generated a web page containing the information described and has transmitted data comprising the web page to the user's computer. The user's computer has received the data comprising the web page and presented the web page to the user.","The user's computer can receive input from the user regarding the web page. When the user's computer receives this input, it transmits data indicating a user's selections and other relevant user input to the platform provider's server. The platform provider's server generates a new or updated web page based on the data it receives from the user's computer and transmits data corresponding to the new or updated web page to the user's computer for presentation to the user.",{"@attributes":{"id":"p-0152","num":"0151"},"figref":"FIG. 5","b":"501"},"Three gadgets are displayed: a map my dollars gadget , a mortgage calculator gadget , and a live quotes gadget . The map my dollars gadget displays a map with information about where the user has spent money. The mortgage calculator allows the user to determine the payments he or she would make on a new mortgage. The live quotes gadget displays quotes of interest to the user.","The platform provider's web page dashboard tab view provides additional options. A user can change the layout of the gadgets through the change view links . Each link will present a user's gadgets in a different configuration. In some implementations, additional links allow users to move or delete widgets from the dashboard.","A user can also view the gadget store, run by the platform provider, through the new gadgets available now link . In some implementations, the platform provider's web page dashboard tab view also allows a user to configure one or more gadgets.","Each web page generated by the platform provider provides several branding opportunities, as illustrated in . Here, Yodlee is the platform provider, so a Yodlee logo  identifies that Yodlee is affiliated with the web pages being presented. In some implementations, if the platform provider was generating the web pages on behalf of a financial institution, the financial institution's logo would appear at  instead. In some implementations, the financial institution's logo would appear at  beside the platform provider's logo at .","In addition, in some implementations, a financial institution can choose to co-brand an individual gadget. In this implementation, the financial institution's logo appears next to the name of the gadget at . In some implementations, a developer receives payment(s) from the financial institution in exchange for co-branding rights.",{"@attributes":{"id":"p-0158","num":"0157"},"figref":["FIG. 6","FIG. 5"],"b":["603","605","607"]},{"@attributes":{"id":"p-0159","num":"0158"},"figref":"FIG. 7"},"In the main view, each gadget is listed with an identifying name  along with a brief description , name of the developer  and optional co-branding .","A user can change the gadgets shown or the sorting order of the gadgets in the list through the options at the left of the screen. A user can enter search terms in the box , see the most popular gadgets (or sort by popularity) by clicking on the link , view new gadgets (or sort by date of the gadget) by clicking on the link , see all gadgets (e.g., sort by name alphabetically) by clicking on the link , or view gadgets by categories using the links . In some implementations (not shown) users are presented with a link, that when selected, shows them their recently viewed widgets.","In some implementations, only gadgets authorized by a user's financial institution are presented to the user. In another implementation, all gadgets are presented to the user, but those gadgets not authorized by a user's financial institution are not selectable.","Near, e.g., to the right, of each gadget description is a rating generated by input from multiple users, e.g., telling the user how many people have given the gadget a good rating  and how many have given the gadget a bad rating . In some implementations, the gadget store web page can also include additional information about each gadget. This information can include information about the developer, ratings of the developer or the gadget, suggested gadgets based on the gadgets the user has purchased in the past, and other information shown in conventional web storefronts. This information can also be provided in the gadget detail view.","In some implementations, the rating is a tally of how many users have said they like the gadget or developer and how many users have said they do not like the gadget or developer. In another implementation, the rating reflects individual user rankings of individual developers and individual gadgets on a scale.","Users rate a gadget or developer as follows. Input indicating a rating is received from a user by the user's computer. The user's computer sends data indicating the rating to the platform provider's server. The platform provider's server receives this data and stores it, for example, in the gadget database. In some implementations, the platform provider does not store the raw data but instead stores only an aggregated rating which is updated when the platform provider's server receives data indicating a rating from a user's computer.","In some implementations, user comments about a particular gadget or a particular developer are also collected by the platform provider's server and presented to other users through the store web pages generated by the platform provider's server. In some implementations, developers are given the chance to respond to comments. The platform provider's server collects the responses and presents them on a web page sent to at least one user. In some implementations, users are encouraged to leave feedback about developers and gadgets through frequent reminders. Other rating systems used by conventional storefronts are also envisioned.","When a user enters a comment on the web page, the user's computer receives the input from the user and sends data including the comments to the platform provider's server. The platform provider's server receives the data, and may store it, for example, in the gadget database. When a developer enters a response, the developer's computer sends data including the response to the platform provider's server. The platform provider's server receives the data, and may store it, for example, in the gadget database.","The data indicating comments and responses are used by the web page generator when generating the detail view web page of the gadget.","In some implementations, users can flag potentially fraudulent activity through a fraud rating system. While a typical rating system allows a user to rate a gadget or developer based on the quality of the developer's product or customer service, the fraud rating is used to indicate potentially fraudulent behavior, beyond the realm of just a poorly performing product.","When a user's computer receives input from a user indicating that a gadget is potentially fraudulent, the user's computer transmits data indicating the gadget may be fraudulent to the platform provider's server. The platform provider's server receives the data and in some implementations stores the data, for example, in the gadget database. In some implementations, when the platform provider's server receives the data indicating that a gadget may be fraudulent, the platform provider's server can trigger a reevaluation of the certification of the gadget. In some implementations, triggering a reevaluation of the certification of the gadget includes temporarily disabling the gadget. In some implementations, temporarily disabling the gadget includes removing the gadget from display in the gadget store. In some implementations, temporarily disabling the gadget includes blocking users from purchasing the gadget from the gadget store. In some implementations, temporarily disabling the gadget includes blocking the gadget from being run on the platform provider's servers.","In some implementations, the store web page includes gadget recommendations based on gadgets the user has purchased in the past. The recommendations can be determined by the platform provider's server using conventional techniques, such as relying, in part, on data indicating what the user has purchased in the past and data indicating what other users have purchased in the past. Data indicating past purchase habits can be stored on the platform provider's server.","The user can click on the buy now button , and be taken directly to the payment page. The user can also click on the name of the gadget  and be taken to a detail view page with more information about the gadget.","The user can return to the dashboard tab view by clicking on the link .",{"@attributes":{"id":"p-0174","num":"0173"},"figref":"FIG. 8","b":["801","803","805","807","809","811"]},"Underneath the demonstration version of the gadget  is a list of gadget features . The list of gadget features contains a description or highlights of gadget functionality. In some implementations this list of features is sent to the platform provider's server by the developer's computer and is stored on the platform provider's server, for example, in the gadget database. In some implementations, this list of features includes one or more categories of functionality selected by the developer from a list of categories of functionality maintained by the platform provider. In these implementations, the developer's computer notifies the platform provider's server of the one or more categories selected by the developer by, for example, sending data indicating the developer's selection to the platform provider's server. In some implementations, data indicating the developer's selections is stored on the platform provider's server. In some implementations, the platform provider verifies the list of features, for example, at the time the gadget is certified.","Below the list of gadget features  is a list of additional gadgets created by the same developer . This list gives the names of each gadget and can include a link to the detail page corresponding to each gadget. Additional information, for example a description of each listed gadget, can also be shown.","In some implementations, this list is generated by the platform provider's server. In some implementations, not all gadgets created by the developer are listed. The platform provider's server applies certain criteria to reduce the number of gadgets listed. These criteria can include ranking the gadgets and only listing a certain number of gadgets. The ranking can be, for example, how new the gadget is, how popular the gadget is, or a random order.","In another implementation, the developer's computer sends data including which gadgets should be listed to the platform provider's server when, for example, the gadget itself is sent to the platform provider's server. The platform provider's server receives this information and stores it, for example, in the gadget database.","Below the list of additional gadgets created by the same developer  is a comments section . The comments section allows a user to add a comment using the add a comment link . The user enters his or her comments using his or her computer. The user's computer sends data including the user's comments to the platform provider's server. The platform provider's server receives this data and stores it, for example, in the gadget database.","When the platform provider's server generates the detail view page for the gadget it includes user comments in the web page.","Rating information is displayed in the upper right hand corner, where the user can see the number of people who said they liked the gadget  and the number of people who said they did not like the gadget .","The user can navigate to other gadgets using the navigation choices  on the left of the page.","The user can use the buy now button  to purchase the gadget. In some implementations, when there are multiple versions of a gadget, the user can give additional input specifying which version he or she wishes to purchase.","In some implementations, additional options are provided to the user through the user interface. For example, the user interface can include an \u201cadd to wishlist\u201d button to allow the user to add the gadget to a list of gadgets the user is interested in. As another example, the user interface can include an \u201ce-mail a friend\u201d button that takes the user to another user interface where he or she can enter an e-mail address of a friend and e-mail the friend information about the gadget.",{"@attributes":{"id":"p-0185","num":"0184"},"figref":["FIG. 9","FIG. 9"],"b":["901","903","905","907"]},"The price of the gadget appears in a box on the left . The amount payable  is also displayed to the user.","The user has two options to pay for the gadget. The user can select the option to pay from an account the platform provider already monitors for the user  in which case the user then selects his or her account information from the dropdown box . The platform provider's server populates the dropdown box  with collected user account information. Alternatively, the user can select the option to pay by PayPal  and enter his or her e-mail address. PayPal is an example of a service that allows users to purchase goods on the Internet by entering their e-mail address and a password. While PayPal is used in , any service that offered to let users make payments for Internet goods could be used, for example PayPal, Google Checkout, Payment Trust, Authorize.net, or iPayment. In an alternative embodiment, account information is not pre-entered and the user must directly input his or her payment information.","While only two payment options are shown in , other payment options, for example, the option to pay by check or money order, can alternatively or additionally be provided to the user.","Once the user has entered his or her payment information, he or she can click on the proceed button  which takes him or her to a confirmation screen. This causes the user's computer to process the user's input specifying the payment information. The user's computer sends data indicating the user's payment information to the platform provider's server through the network. The platform provider's server stores data indicating that the user is now authorized to run the gadget, for example, in it's gadget database. The platform provider's server may also store data indicating the user's payment information, for example, in a payment database, to facilitate collecting the payment from the user in the future.","The purchased gadget will now show up in the dashboard tab view of the platform provider's web page.",{"@attributes":{"id":"p-0191","num":"0190"},"figref":"FIG. 10","b":"1002"},"The preference page lists authorized gadgets  and unauthorized gadgets . Each authorized gadget is a gadget that the user has specified can access his or her personal information. By default, a user authorizes a gadget to access his or her personal information when the user purchases the gadget. Each unauthorized gadget is a gadget that the user has specified cannot access his or her personal information.","A user can use the buttons provided in the preferences page to switch authorized gadgets to unauthorized gadgets, and vice versa. For example, the user can select the unauthorized button  to indicate that the MapMyDollars gadget  should be unauthorized. Similarly, the user can select the authorize button , to indicate that the Show My Spending gadget  should be authorized.","While the preferences page shown in  only lists the names of the gadgets, additional information about the gadgets, such as a description of the gadget, the developer of the gadget, or ratings for the gadget can also be shown.",{"@attributes":{"id":"p-0195","num":"0194"},"figref":"FIG. 11","b":["1100","1100","1100","402","404"]},"The system collects and stores user-specific financial information from a financial institution (), for example, as described above with reference to . The system receives gadgets from developers (), for example, as described above with reference to . The system receives a notification that a platform provider has certified one or more of the gadgets (), for example, as described above with reference to . The system generates a web page through which a user can select a gadget from the certified gadgets (), for example, as described above with reference to FIGS.  and -. The system receives a notification that the user has selected a gadget (), for example, as described above with reference to . The system runs the selected gadget, for example, as described above with reference to . The system modifies the user-specific financial information in response to the output of the gadget or provides content based on the output of the gadget to the user (), for example, as described above with reference to .",{"@attributes":{"id":"p-0197","num":"0196"},"figref":"FIG. 12","b":["1200","1200","1200","402","404"]},"The system receives gadgets from developers (), for example, as described above with reference to . The system receives a notification that a platform provider has certified one or more of the gadgets (), for example, as described above with reference to . The system receives a notification that a financial institution has authorized one or more of the certified gadgets (), for example, as described above with reference to . The system generates a web page through which a user can select a gadget from the authorized gadgets (), for example, as described above with reference to FIGS.  and -. The system receives notification that the user has selected a gadget (), for example, as described above with reference to . The system runs the selected gadget (), for example, as described above with reference to . The system generates a web page using the output of the selected gadget (), for example, as described above with reference to .",{"@attributes":{"id":"p-0199","num":"0198"},"figref":"FIG. 13","b":["1336","1338","1338","1338"]},"In the second embodiment, the gadget authorizer , data engine , web page generator , and gadget runner  are included in enterprise software  run on the financial institution's server .","In an alternative implementation, one or more of these computer programs is not part of the enterprise software  but is a free standing application on the financial institution's server . For example, the gadget authorizer  could be a free-standing application on the financial institution's server .","In some implementations, the data engine  is run by the platform provider's server  and accessed by the financial institution's server over the network .","The financial institution's server  also stores a gadget database  and financial information repository  that the enterprise software  and computer programs on the financial institution's server  can interact with. In an alternative implementation, one or both of the gadget database  and the financial information repository  are stored on the platform provider's server  and accessed by the financial institution's server  through the network.",{"@attributes":{"id":"p-0204","num":"0203"},"figref":"FIG. 14","b":["1402","1404","1406","1408","1410"]},"The information flow in the second embodiment is much like the information flow in the first embodiment, with a few exceptions.","A user interacts with the web pages generated by the financial institution's web page generator in this embodiment as he does with the web pages generated by the platform provider's web page generator in the first embodiment. In some implementations, the platform provider's server  still generates web pages that make up the gadget store. In this implementation, both the platform provider's server  and the financial institution's server  send web pages to the user's computer . Both the platform provider's server  and the financial institution's server  also receive selections from the user.","When the user's computer  sends a notification to the financial institution's server  indicating the user wants to run a gadget, the gadget runner on the financial institution's server  verifies that the user has purchased the selected gadget by, for example, checking the data stored in the gadget database. In some implementations, the gadget runner calls and runs the gadget much as in the first embodiment. In some implementations, the user must have specifically purchased a gadget for use on the financial institution's server in order to be able to run the gadget. In this implementation, users who have purchased the gadget to run on the platform provider's server or on a different financial institution's server will not be able to run the gadget on the financial institution's server. When the gadget requests financial information, the data engine on the financial institution's server  extracts any needed financial data from its collection of financial information and passes it to the gadget, much as the platform provider's data engine does in the first embodiment.","In some implementations, the data engine is run by the platform provider's server . The financial institution's server  sends a request for needed information to the platform provider's server  over the network . When the platform provider's server  receives the request, it send the requested information to the financial institution's server .","In some implementations, when a user's computer  sends a request to access the gadget store to the financial institution's server , the web page generated by the financial institution's server's web page generator links to the gadget store generated by the store generator on the platform provider's server. A user interacts with the store generated by the store generator as in the first embodiment, discussed above. The user's computer  receives input from the user indicating the user wishes to make a purchase. The user's computer  then sends a purchase notification to the platform provider's server . The platform provider's sever  then sends an authorization code to the financial institution's server . The financial institution's server  stores the authorization code for the user to run the gadget, for example, in its gadget database. The platform provider's server  receives payment information from the user's computer . The platform provider then collects and distributes the money as in the first embodiment.","In an alternative implementation, the gadget store is hosted by the financial institution's server . In this implementation, the financial institution pays a fixed sum for each gadget it wants to sell in its store. This money is distributed by the platform provider to itself and the developer. When a user purchases a gadget from the financial institution's gadget store, the financial institution keeps the proceeds.",{"@attributes":{"id":"p-0211","num":"0210"},"figref":"FIG. 15","b":["1500","1500","1500","404"]},"The system collects and stores user-specific financial information (), for example, as described above with reference to . The system receives certified gadgets from a platform provider (). For example, a platform provider's server can send data for the gadgets themselves, or data that links to where the gadgets are stored, to the system. The system then receives a use notification from a platform provider indicating that a user can use a gadget (). The use notification can be, for example, data retrieved by the system from a gadget database, for example, as described above with reference to . The system runs the gadget (), for example, as described comprising 1, for example, as described above with reference to . The system modifies the user-specific financial information or provides content based on the output of the gadget (), for example, as described above with reference to .",{"@attributes":{"id":"p-0213","num":"0212"},"figref":["FIG. 16","FIG. 2"],"b":["1600","1600","1600","202","234","238","244"]},"The system  includes a processor , a memory , a storage device , and an input\/output device . Each of the components , , , and  are interconnected using a system bus . The processor  is capable of processing instructions for execution within the system . In some implementations, the processor  is a single-threaded processor. In another implementation, the processor  is a multi-threaded processor. The processor  is capable of processing instructions stored in the memory  or on the storage device  to display graphical information for a user interface on the input\/output device .","The memory  stores information within the system . In some implementations, the memory  is a computer-readable medium. In some implementations, the memory  is a volatile memory unit. In another implementation, the memory  is a non-volatile memory unit.","The storage device  is capable of providing mass storage for the system . In some implementations, the storage device  is a computer-readable medium. In various different implementations, the storage device  may be a floppy disk device, a hard disk device, an optical disk device, or a tape device.","The input\/output device  provides input\/output operations for the system . In some implementations, the input\/output device  includes a keyboard and\/or pointing device. In another implementation, the input\/output device  includes a display unit for displaying graphical user interfaces.","The features described above can be implemented in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and\/or combinations thereof. Various implementations can include implementation in one or more computer programs that are executable and\/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.","These computer programs (also known as programs, software, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and\/or object-oriented programming language, and\/or in assembly\/machine language. As used in this specification, the terms \u201cmachine-readable medium\u201d or \u201ccomputer-readable medium\u201d refers to any computer program product, apparatus and\/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and\/or data to a programmable processor. In some implementations, the machine-readable medium receives machine instructions as a machine-readable signal. The term \u201cmachine-readable signal\u201d refers to any signal used to provide machine instructions and\/or data to a programmable processor.","Suitable processors for the execution of a program of instructions include, by way of example, both general and special purpose microprocessors, and the sole processor or one of multiple processors of any kind of computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memories for storing instructions and data. Generally, a computer will also include, or be operatively coupled to communicate with, one or more mass storage devices for storing data files; such devices include magnetic disks, such as internal hard disks and removable disks; magneto-optical disks; and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data, including databases, include all forms of non-volatile memory, including by way of example semiconductor memory devices, such as EPROM, EEPROM, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, ASICs (application-specific integrated circuits).","To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.","The systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (\u201cLAN\u201d), a wide area network (\u201cWAN\u201d), and the Internet.","The computer system can include clients and servers. A client and server are generally remote from each other and typically interact through a network, such as the described one. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.","Although a few implementations have been described in detail above, other modifications are possible. For example, the developer  and the platform provider  may be implemented within the same computer system.","In addition, the logic flows depicted in the figures do not require the particular order shown, or sequential order, to achieve desirable results. In addition, other steps may be provided, or steps may be eliminated, from the described flows, and other components may be added to, or removed from, the described systems. Accordingly, other implementations are within the scope of the following claims.","A number of embodiments of the invention have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the invention. Accordingly, other embodiments are within the scope of the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 16"}]},"DETDESC":[{},{}]}
