---
title: Reporting status of external references in a spreadsheet without updating
abstract: The invention, in one embodiment, is a method and system for reporting the status of external references, or links, of a spreadsheet workbook. In an Edit Links dialog box, the user may view a list of links and their status. The user may select a Check Status button in the Edit Links dialog box to check the status of the links without updating the links because updating the links may require considerable time. A textual status message is displayed for each link in the Edit Links dialog box. The textual status message indicates to the user whether there is s possible problem with the link. As part of checking the status of a link, an analysis is made to determine whether any problems with the source file exist. For instance, it is determined whether the source file is open and whether it is valid. The results of this analysis determine what is displayed in the status column of the Edit Links dialog box.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07546521&OS=07546521&RS=07546521
owner: Microsoft Corporation
number: 07546521
owner_city: Redmond
owner_country: US
publication_date: 20041208
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EMBODIMENTS OF THE INVENTION"],"p":["This application is a continuation of U.S. patent application Ser. No. 09\/755,414, entitled \u201cReporting Status of External References in a Spreadsheet Without Updating,\u201d filed Jan. 5, 2001 now U.S. Pat. No. 6,898,760, said application incorporated herein by reference.","The invention generally relates to electronic spreadsheet program modules, and more particularly relates to reporting the status of external references, or links, without updating the external references.","Electronic spreadsheet program modules are useful tools for helping users perform complex calculations. Many electronic spreadsheet program modules include the concept of a workbook with a number of worksheets in a workbook. An external reference, or link, from within one workbook may be made to another workbook. An external reference or link in an electronic spreadsheet may be generally described as when the value of one cell is dependent on the value of another cell in another spreadsheet. Cells may also depend on the value of a defined name or function in another worksheet. Graphic items, such as charts and text boxes, may also be linked to cells, defined names, or functions within another worksheet. Thus, generally described, a link refers to a workbook object (cell, named range, text box) whose content (value or formula) is dependent on an external source. The external source is typically another spreadsheet program but could also be a DDE server, OLE server, or anything that the spreadsheet program is capable of interpreting.","For example, links are commonly used when multiple spreadsheets with common structures are used, such as profit and loss statements for different groups within an organization (each group using their own spreadsheet). A summary spreadsheet may be created that links to values in the external spreadsheets and aggregates the data and formats the data for reporting to management. Of course, there are numerous other examples in which links can be used.","Although links are extremely useful, they can also be problematic. The client spreadsheet stores a local copy of the value of links and needs to be updated regularly to ensure that the data is up-to-date. If a link to the source workbook has not been updated, the source workbook has been moved, the source workbook has been renamed, etc., then the link may not function properly. For example, a common problem for electronic spreadsheet users is to have broken links (a link that cannot be updated) because files can no longer be found or worksheets have been renamed. For example, suppose a server is damaged and is replaced with a new server. The server would have a new name and, thus, any workbook linking to one of the files that was moved to the new server would have broken links because the workbook still believes the source files are located on the damaged server.","Because of the complex and critical calculations performed using spreadsheets, it is important for users to know whether or not the links in their workbook are valid. For example, corporations may maintain thousands of workbooks with a single workbook often having dozens or even hundreds of links. Maintaining these workbooks is often the sole job of employees. One solution to determine whether a link is valid is to attempt to update the link. Updating a link attempts to open the source workbook and any other supporting files. While updating, if the spreadsheet program module determines that a link is broken, the user is then prompted with a message for each broken link indicating that the link is broken. Although updating links works fairly well, it can quickly become burdensome if a workbook includes numerous links. For example, many corporations use workbooks to perform complex calculations and these workbooks may have links that take hours to update completely. Thus, the only way to check the status of links was to attempt to update the links and manually deal with errors on a sequential basis as the spreadsheet program module reports them. Checking status by updating links also changes the current values on the workbook. In many corporations, maintaining spreadsheets (e.g. making sure links work) is a job performed by IT or support personnel, whereas the analysis of the data is performed by other personnel. It is possible that updating links at the wrong time could interrupt the business process.","Thus, there is a need for reporting the status of links in electronic spreadsheets without updating the links so that users can quickly check the status of links.","The present invention meets the above-described needs by providing a method for quickly reporting the status of links within a workbook without updating the links. Updating links requires loading broad portions of the source file(s). The invention loads much smaller portions of the source file(s), thereby requiring much less time than would be required to actually update the links.","The invention, in one aspect, is a method and system for reporting the status of external references, or links, of a spreadsheet workbook. In an Edit Links dialog box, the user may view a list of links and their status. The user may select a Check Status button in the Edit Links dialog box to check the status of the links without updating the links because updating the links may require considerable time. A textual status message is displayed for each link source in the Edit Links dialog box. The textual status message indicates to the user whether there is a possible problem with any of the links that reference that link source. As part of checking the status of a link, an analysis is made to determine whether any problems with the source file exist. For instance, it is determined whether the source file is open and whether it is valid. The results of this analysis determine what is displayed in the status column of the Edit Links dialog box.","That the invention improves over the drawbacks of updating links and accomplishes the advantages described above will become apparent from the following detailed description of the exemplary embodiments and the appended drawings and claims.","An embodiment of the present invention will be incorporated into the \u201cMicrosoft EXCEL 2002\u201d spreadsheet program module manufactured by Microsoft Corporation of Redmond, Wash. \u201cMicrosoft EXCEL 2002\u201d may also be part of the \u201cMicrosoft OFFICE 2002\u201d suite of application program modules. Briefly described, in one embodiment, the invention is a method for reporting the status of links in a workbook without updating the links. Different aspects of the source file are examined to determine whether the link is valid and acceptable. The invention examines the most common reasons that links break. The source file is examined to make sure that it exists and that it is in a proper format that can be opened. It is determined whether the reference (sheet, name) exists also. Rarely-encountered link problems which cannot be specifically identified will be reported as \u201cStatus Indeterminant\u201d.","Exemplary Operating Environment",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},"With reference to , an exemplary system for implementing the invention includes a conventional personal computer , including a processing unit , a system memory , and a system bus  that couples the system memory to the processing unit . The system memory  includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within the personal computer , such as during start-up, is stored in ROM . The personal computer  further includes a hard disk drive , a magnetic disk drive , e.g., to read from or write to a removable disk , and an optical disk drive , e.g., for reading a CD-ROM disk  or to read from or write to other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical drive interface , respectively. The drives and their associated computer-readable media provide nonvolatile storage for the personal computer . Although the description of computer-readable media above refers to a hard disk, a removable magnetic disk and a CD-ROM disk, it should be appreciated by those skilled in the art that other types of media which are readable by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored in the drives and RAM , including an operating system , an application program module , such as Microsoft's \u201cEXCEL 2002\u201d spreadsheet program module, other program modules , and program data . A user may enter commands and information into the personal computer  through a keyboard  and pointing device, such as a mouse . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown), such as speakers or printers.","The personal computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a server, a router, a peer device or other common network node, and typically includes many or all of the elements described relative to the personal computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, Intranets and the Internet.","When used in a LAN networking environment, the personal computer  is connected to the LAN  through a network interface . When used in a WAN networking environment, the personal computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Before proceeding with a detailed description of embodiments of the present invention, a brief description of links follows.","Links","Many electronic spreadsheet program modules include the concept of a workbook with a number of worksheets in a workbook. An external reference, or link, from within one workbook (the client workbook) may be made to another workbook (the source workbook). An external reference or link in an electronic spreadsheet may be generally described as when the value of one cell is dependent on the value of another cell in another spreadsheet. Cells may also depend on the value of a defined name or function in another worksheet. Graphic items, such as charts and text boxes, may also be linked to cells, defined names, or functions within another worksheet. The client workbook may also have a defined name which, in part or in its entirety, is linked to a name, cell, function, etc. in another workbook.","Although links are extremely useful, they are also problematic. If a link to the source workbook has not been updated, the source workbook has been moved, etc., then the link may not function properly. Links are not live connections to the source, so the values of links must be refreshed. A link may be updated when the workbook is opened (either automatically or by prompting the user to update the link). After the workbook is opened, the user can update links manually on an individual basis using the Edit Links dialog. Links are also updated when first created (or edited). Links may also be updated using VBA (a macro). A common problem for electronic spreadsheet users is to have broken links because files can no longer be found or workbooks have been renamed. For example, suppose a server is damaged and is replaced with a new server. The server would have a new name and, thus, any workbook linking to one of the files that was moved to the new server would have broken links because the worksheet believes the source files are located on the damaged server.","Throughout this description, the terms source file and supporting file will be used interchangeably. The terms dependent file and client file will also be used interchangeably.","The most common type of link is a cell being linked to another cell (as described in ). However, the invention is not limited to only cell to cell links. Referring now to , an illustration of a client workbook  with links to source workbooks  and  will be described. In this illustration, it is assumed that client.xls, source.xls, and source.xls are stored in the same directory. The client workbook includes a cell . The formula of cell  is =[source.xls]sheet!A+[source.xls]sheet!A. In other words, the value of cell  is dependent upon cell A () of sheet of the workbook source.xls and cell A () of sheet of the workbook source.xls. Thus, the value of cell  is \u201clinked\u201d to cell A of sheet of the workbook source.xls and cell A of sheet of the workbook source.xls. Thus, updating the link in cell  may take considerable time due to the multiple workbooks that may need to be opened and recalculated. Of course, the description above is a simple one with only a couple of links. It is not uncommon to have hundreds of links to hundreds of different workbooks. In these cases, updating time is considerably longer than the simple example described above.","As will be described, in one embodiment, the present invention provides a method for checking the status of all links in a workbook without updating the links. The invention may report the status of the link so that the user is aware of a problem or a potential problem with the link. In one embodiment, the invention is an Edit Links dialog box listing all of the links in a workbook. Along with each link is listed a status condition under a status column. The Edit Links dialog box also comprises a Check Status button that, when selected, begins the process of checking the status of each link without updating each link. It is again worth noting that links are not live connections and, thus, the status of the source may change at any time. Hence, the status of each link may need to be checked at a given time.","Edit Links Dialog Box","In one embodiment, the invention includes an Edit Links dialog box. Referring now to , an Edit Links dialog box  in accordance with an embodiment of the present invention will be described. The Edit Links dialog box  may be displayed when the user selects the \u201clinks\u201d feature under the \u201cedit\u201d menu.","The Edit Links dialog box  includes a list of all the links in the active spreadsheet workbook. The source workbook for each link is listed under a source column . The Edit Links dialog box also includes a status column . The status column is used to indicate the status of each link. The Edit Links dialog box also includes a Check Status button . When selected, the Check Status button  initiates the method for checking (or refreshing) the status of the links in the active workbook. The status of each link is checked without actually having to update the link. A method for checking the status of a link without updating in accordance with an embodiment of the present invention will be described in reference to .","When the Edit Links dialog box  is opened, the default status for each link is noted as \u201cUnknown\u201d before the user selects the Check Status button . Each link is referred to as \u201cUnknown\u201d because even if the status of a link was checked earlier in a session, external factors may have changed the status of the link since the last time it was checked. For example, the server on which the source file is found may have gone down, the source file may have been deleted or moved, etc. Therefore, the status for each link is reset to \u201cUnknown\u201d whenever the Edit Links dialog box  is brought up and the user must manually check links to determine the current status of links.","It should be understood from the foregoing description that typically the program module for checking the status of links in an electronic spreadsheet is called and executed in response to a user selecting the Check Status button . Of course, other embodiments of the present invention may call and execute the program module for checking that status of links in a background thread. For example, the status of links may be automatically checked each time the Edit Links dialog is brought up and displayed.","It should also be understood that, in a preferred embodiment, the program module for checking the status of links will be part of the \u201cMicrosoft EXCEL 2002\u201d spreadsheet program module manufactured by Microsoft Corporation.","Determining Status of Links Without Updating the Links","Referring now to -, a flow diagram  will be described. The flow diagram  illustrates a method for determining the status of links in an electronic spreadsheet in accordance with an embodiment of the present invention. Those skilled in the art will appreciate that the logic flow diagram of -is executed by the processing unit  () in response to instructions that have been incorporated into the application program module .","The method  begins at start step  and typically proceeds to decision step  when the user selects the Check Status button  (). Of course, besides a button, other indications may be given by the user to indicate that the user wants to check the status of links in an electronic spreadsheet. Also, the method  may proceed in the background and may automatically proceed to decision step  based on the user opening the Edit Links dialog ().","At decision step , it is determined whether the source file that is linked by the client workbook resides on a web server. If not, then the method proceeds to decision step . However, if the source file resides on a web server, then the method proceeds to step  and, for performance reasons, the source file is copied to a temporary local file on the user's computer and the method proceeds to decision step .","At decision step , it is determined whether the source file was successfully copied at step . If the source file is not able to be copied to the temporary local file, then the method proceeds to step  and the status of the link is reported as \u201cError: source not found\u201d. The method ends at step . However, if the source file is successfully copied, then the method then proceeds to decision step .","At decision step , it is determined whether the source file is open. It is important to determine whether the source file is open because checking the link to a file stored on disk as contemplated by the present invention is different than checking the link to a workbook which is resident in memory. Links to resident workbooks may not be out-of-date and, if there is a problem with a link to a resident workbook it will manifest itself as an error within the cell. For example, in a resident workbook, an error indicator of \u201c#NAME?\u201d or another error indicator may be displayed in a cell if a link to a name or a worksheet has been renamed or no longer exists. Thus, if it is determined that the source file is open, then the method proceeds to step .","At step , the status of the link is reported as \u201cSource is open\u201d and the method ends at step .","If, at decision step , it is determined that the source file is not open, the method proceeds to decision step .","At decision step , it is determined whether the source file resides in its specified location (this has already been determined for source files that reside on a web server). Typically, determining whether the source file resides in its specified location is performed via a call to the operating system asking if the source file resides in the specified location. If it is determined that the source file resides in its specified location, then the method proceeds to decision step . However, if it is determined that the source file doesn't reside in the specified location, then the method proceeds to step  and the status of the link is reported as \u201cError: Source not found\u201d. The method ends at step .","At decision step , it is determined whether the source file can be opened. If the source file cannot be opened, then the method proceeds to step  and the status of the link is reported as \u201cWarning: Status indeterminate\u201d and the method ends at step . If, at decision step , it is determined that the source file can be opened, the method proceeds to decision step . It should also be understood that, in one embodiment of the present invention, a determination is made at decision step  to determine if the source file is a \u201cMicrosoft EXCEL\u201d version 1.5 spreadsheet program module file and, if it is, then the method proceeds to step . The \u201cMicrosoft EXCEL\u201d version 1.5 spreadsheet program module was a Macintosh only version. Most current versions of the \u201cMicrosoft EXCEL\u201d spreadsheet program module cannot open this file format.","At decision step , the validity of the source file is checked by determining whether it is in the correct format, is not locked, is not corrupt, etc. There are many things that can make the source file invalid. If a file is in a particular format, then there are specific details that should be in pre-specified locations in the file. If these specific details are not found in the pre-specified locations, then the source file cannot be read. For example, if the source file is in .xls format then the number of sheets and their names are located at a particular location from the beginning of the source file. However, if the file has been corrupted, then it may not have this information in its correct location and may be determined to be an invalid file. If the source file is locked, in an incorrect format, corrupt, etc. then the method proceeds to step . At step , the status of the link is reported as \u201cWarning: Status indeterminate\u201d and the method ends at step . If the source file is determined to be valid at decision step , then the method proceeds to decision step .","At decision step , it is determined whether the link cannot be updated unless the source file is fully loaded into the spreadsheet program module (in other words, whether the file must be filly loaded into RAM becoming a resident workbook). For instance, even though a source file may be opened, the link may not be able to be updated unless the source file is fully loaded into the spreadsheet program module. It should be understood that for certain files, the values in the source file cannot be updated unless the source file is opened. This occurs with HTML files, text files and certain other file formats. The \u201cMicrosoft EXCEL\u201d spreadsheet program module can open many different file formats, such as \u201cLOTUS \u201d files, plain text files, etc. However, the \u201cMicrosoft EXCEL\u201d program module doesn't support updating links to these files remotely, i.e., without the source file being open. Once a file is opened in the \u201cMicrosoft EXCEL\u201d spreadsheet program module (loaded into memory), regardless of its original file type it becomes a workbook structure in RAM. Although the file is not automatically converted, once the file is loaded it is treated like any other \u201cMicrosoft EXCEL\u201d workbook (hence links can be updated). The \u201cMicrosoft EXCEL\u201d spreadsheet program module knows which file types it can not update links from remotely (e.g. TXT) so when these types of files are encountered the status display tells users to open the source file. If the link cannot be updated unless the file is fully loaded into the spreadsheet program module, then the method proceeds to step . At step , the status of the link is reported as \u201cWarning: Open source to update values\u201d and the method ends at step .","If at decision step , it is determined that the link may be updated without fully loading the source file, then the method proceeds to decision step .","At decision step , it is determined whether there are any worksheets in the source file that may be loaded. If there are no worksheets in the source file, then the method proceeds to step . At step , the status of the link is reported as \u201cWarning: Status indeterminate\u201d and the method ends at step . However, if at decision step , it is determined that there are worksheets in the source file, then the method proceeds to decision step  ().","At decision step , it is determined whether the source file was last saved without being fully calculated (so that the values may be out dated). This decision step is used because even if the link is valid and has been updated, the source file may have been last saved without being fully calculated so the values in the source file may be outdated. Typically, there is a bit in the source file that indicates whether the status is calculated or uncalculated. If so, then the source file is out-of-date and the method proceeds to step . At step , the status of the link is reported as \u201cWarning: Source not recalculated\u201d and the method ends at step . If, at decision step , it is determined that the source file was last saved with updating, the method proceeds to decision step .","At decision step , it is determined whether the worksheets referred to by the link in the client file are available in the source file. If not, then the method is proceeds to step . At step , the status of the link is reported as \u201cError: Worksheet not found\u201d and the method ends at step . However, if the worksheets referred to by the client file are available in the source file, then the method proceeds to decision step .","At decision step , it is determined whether the defined names that are referred to by the link in the client file can be found in the source file. It should be understood that names may be defined in the \u201cMicrosoft EXCEL\u201d spreadsheet program module to easily refer to a value or number found in another workbook. For example, the annual percentage rate may be referred to as APR and may be found in a single workbook. However, the annual percentage rate may be named \u201cAPR\u201d and referred to in numerous other workbooks. Thus, every time a user wants to refer to the annual percentage rate in a calculation, the user simply uses the name \u201cAPR\u201d to link to the annual percentage rate.","If at decision step , it is determined that the names referred to by the client file are not found in the source file, then the method proceeds to step . At step , the status of the link is reported as \u201cError: Undefined or non-rectangular name\u201d and the method ends at step . Without fully loading the source workbook into RAM, only rectangular cell references can be updated. This could be as small as one cell (1\u00d71) but non-rectangular links can't be updated without loading the workbook into RAM. So, if a defined name (such as APR) refers to Sheet!A, that can be updated without loading into RAM. However, if the defined name does not refer to a cell (for example, it could reference a direct numeric value or a user-defined function), then the source workbook must be loaded into RAM before the link can be updated. However, if at decision step , it is determined that the names referred to by the client file are found in the source file, then the method proceeds to decision step .","At decision step , it is determined whether the values in the source file have been copied from a temporary source. For example, suppose a client file exists with references to a source file that cannot be found. The user may choose to temporarily use values from a different workbook (the temporary source). If the values in the source file have been copied from a temporary source, then the method proceeds to step . At step , the status of the link is reported as \u201cValues updated from <filename>\u201d (where filename indicates the temporary source) and the method ends at step . If at decision step , it is determined that the values in the source file have not been copied from a temporary source, the method proceeds to decision step .","At decision step , it is determined whether the link has been updated in this session. The session may be defined as the time between the opening of the workbook and the closing of the workbook. Updating the link refers to copying the values from the source file (without modifying the source file). If it is determined that the link has not been updated this session, the method proceeds to step , the status of the link is reported as \u201cWarning: Values not updated\u201d and then the method ends at step . However, if the link has been updated in this session, then the method proceeds from decision step  to step .","At step , the link has been determined to be valid and up-to-date and the status of the link is reported as \u201cOK\u201d and the method ends at step .","Of course, it should be understood that the method  described above is a method for checking the status of a single link. If there are other links in the client file that need to be checked, then, rather than ending at step , the method returns to step  and the process is repeated for every other source file linked to from the client file.","It should be understood that an important aspect of the present invention is that it enables the user to manage links easily. By presenting the status of all links in a workbook in a single dialog, the present invention helps a user know which links have been updated, which links have not been updated and for what reason they have not been updated. The present invention does not cause the user to wait during an updating of the links and navigate through a series of dialogs. Instead, the present invention allows the user to determine the status of a link and, if necessary, easily fix the link.","Having described several embodiments of the invention above, it should be understood that the present invention provides a method for updating links in an electronic spreadsheet without updating the links. For example, suppose an electronic spreadsheet workbook has links to thousands of source files and suppose it requires over an hour to update these links. If a user wants to ensure all the links are valid but does not want to spend an entire hour to do so, the user may open the workbook and choose \u201cDon't update\u201d when prompted to update external references. Then, the user can choose Links from the Edit menu and an Edit Links dialog will be displayed. The Edit Links dialog includes a list of all the links in the workbook and their current status. If the user selects the \u201cCheck status\u201d each linked file will be quickly checked to verify that it exists and is of a valid structure so that the link can be updated at a later time. The Edit Links dialog then displays the status of each link.","It should be understood that the present invention enables the deployment of an automated program that can open many workbooks in sequence to check statuses of links and create a log. For example, using an automated program, a corporation could run this program on their large file shares with hundreds or thousands of workbooks and have large log files written out.","It should be understood that the foregoing pertains only to the preferred embodiments of the present invention, and that numerous changes may be made to the embodiments described herein without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIGS. 4","i":["a","b "],"b":"4"}]},"DETDESC":[{},{}]}
