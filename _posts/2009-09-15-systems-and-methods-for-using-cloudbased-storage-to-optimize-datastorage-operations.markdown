---
title: Systems and methods for using cloud-based storage to optimize data-storage operations
abstract: A computer-implemented method for using cloud-based storage to optimize data-storage operations may include: 1) receiving a request from a client device for instructions or directions for storing a data object, 2) accessing a data-placement policy that contains criteria for identifying storage systems suitable for storing the data object, 3) identifying, based at least in part on the data-placement policy, a plurality of storage systems for storing the data object, at least one of the storage systems including a third-party Internet-based storage system, and then 4) directing the client device to store the data object on the identified storage systems.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08370312&OS=08370312&RS=08370312
owner: Symantec Corporation
number: 08370312
owner_city: Mountain View
owner_country: US
publication_date: 20090915
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["In recent years, the popularity and prevalence of cloud-based storage systems has increased dramatically. Cloud-based storage offers virtually unlimited storage and worldwide access to data via the Internet to users, applications, and services.","Unfortunately, an end user's experience with cloud-based storage may be negatively impacted by a variety of factors, including: 1) network problems (such as a network outages and bandwidth and latency issues), 2) data-center outages, 3) poor reliability of provider hardware, 4) storage provider bankruptcy, and the like. As such, the instant disclosure identifies a need for improving the performance and reliability of cloud-based storage systems and for using the same in combination with traditional enterprise-based storage systems.","As will be described in greater detail below, the instant disclosure generally relates to systems and methods for using cloud-based storage to optimize data-storage operations. In one example, an exemplary server-side method for accomplishing this task may include: 1) receiving a request from a client device for instructions or directions for storing a data object (such as a file or data block), 2) accessing a data-placement policy that contains criteria for identifying storage systems suitable for storing the data object, 3) identifying, based at least in part on the data-placement policy, a plurality of storage systems for storing the data object, at least one of the storage systems including a third-party Internet-based storage system (i.e., an online or cloud-based storage system hosted by an online storage provider), and then 4) directing the client device to store the data object on the identified storage systems.","In some examples, the server may identify storage systems for storing the data object by identifying storage systems that satisfy the criteria of the data-placement policy. This criteria may be based at least in part on the reliability of a particular storage system (e.g., historical uptime, etc.), the bandwidth or storage capacity of a particular storage system, the monetary costs associated with storing data on a particular storage system, the location of a particular storage system relative to the client device (as determined, e.g., by the number of hops between the client device and the storage system), the performance of a particular storage system (as determined, e.g., by the access and response times of a particular storage system), at least one characteristic of the data object (e.g., whether the data object is of a specific file type or is frequently accessed), at least one characteristic of the client device (e.g., whether the client device is of a specific device type, such as a mobile phone or desktop), at least one characteristic of a user of the client device, and\/or any other criteria that may be used to identify storage systems suitable for storing the data object.","In one example, the server may direct the client device to store the data object on the identified storage systems by directing the client device to: 1) encode the data object using an error-correction algorithm and then 2) store encoded data generated by the error-correction algorithm on the identified storage systems. In this example, the level of redundancy introduced by the error-correction algorithm may be based at least in part on the data-placement policy. In some examples, the server may also direct the client device to encrypt the encoded data generated by the error-correction algorithm. In one embodiment, this error-correction algorithm may represent an erasure-coding algorithm, such as a Reed-Solomon erasure-coding algorithm.","In some examples, the server may direct the client device to store the data object on the identified storage systems by providing identification information associated with the storage devices to the client device. This identification information may include, for example, an autonomous system number, all or a portion of an IP address (such as a host ID, a network ID, and\/or a subnet ID), a MAC address, or the like.","In one example, the server may identify storage systems suitable for storing the data object by evaluating the storage systems using at least one evaluation metric. Examples of suitable evaluation metrics include, without limitation, metrics for evaluating the reliability of a storage system, the performance of a storage system, the storage capacity of a storage system, the bandwidth capacity of a storage system, service level agreement(s) associated with a storage system, or the like. In some examples, the server may use the results of these metrics to calculate a quality-of-service score for the storage systems.","In one example, the above-described server-side method may also include: 1) receiving a request from the client device for instructions or directions for accessing (e.g., reading or restoring) the data object, 2) accessing a data-access policy that includes criteria for identifying storage systems suitable for providing access to the data object, 3) identifying, based at least in part on the data-access policy, at least one storage system for providing access to the data object, and then 4) directing the client device to access the data object from the identified storage system. Examples of the type of criteria that may be included within the data-access policy may include criteria based at least in part on the location of a particular storage system relative to the client device, the performance of a particular storage system, the availability of a particular storage system, the reliability of a particular storage system, the bandwidth capacity of a particular storage system, or the like.","In some examples, the exemplary server-side method may also include determining that the data object represents a file of a specific file type (such as a multimedia file). In this example, the server may direct the client device to: 1) encode the file using a layered-coding algorithm to provide graded quality-of-access to the file, 2) and then store the encoded data generated by the layered-coding algorithm on the identified storage systems. When the server later receives a request from a client device for directions for accessing this file, the server may then: 1) identify quality-of-access needs of the client device (which may depend, for example, on the device's connection speed or device type), 2) identifying at least one storage system that contains encoded data generated by the layered-coding algorithm data that satisfies the quality-of-access needs of the client device, and then 3) directing the client device to access the encoded data that satisfies its quality-of-access needs from the identified storage system.","In one example, the exemplary server-side method described above may also include migrating data from at least one of the storage systems to another storage system due to, for example, the failure of a particular storage system (due to, e.g., hardware failures, disasters, bankruptcy, etc.), the reliability (or lack thereof) of a particular storage system, the bandwidth capacity (or lack thereof) of a particular storage system, the storage capacity (or lack thereof) of a particular storage system, monetary costs associated with storing data on a particular storage system, the performance of a particular storage system, the location of a particular storage system, at least one characteristic of the data object (e.g., whether the data object is of a specific file type or is frequently accessed), and\/or a combination of one or more of the same.","In some examples, the server-side method may also include creating and storing an object-to-fragment map for the data object that identifies encoded data associated with the data object, a fragment-to-location map for the data object that identifies the location of the encoded data within the identified storage systems, and\/or a metadata catalog for the client device, a user of the client device, and\/or an organization associated with the user of the client device (such as an employer of the user of the client device). In one example, the server-side method may also include backing up the object-to-fragment map, the fragment-to-location map, and\/or the metadata catalog to at least one of the storage systems.","In an additional embodiment, an exemplary client-side method for using cloud-based storage to optimize data-storage operations may include: 1) sending a request to a data-management server for instructions or directions for storing a data object, 2) receiving directions from the data-management server for storing the data object on a plurality of storage systems, with at least one of the storage systems representing a third-party Internet-based storage system, and then 3) storing the data object on the storage systems in accordance with the directions received from the data-management server. As detailed above, the directions received from the data-management server may be derived based at least in part on a data-placement policy maintained by the data-management server.","In the above example, the client device may store the data object on the storage systems by: 1) encoding the data object using an error-correction algorithm, 2) encrypting encoded data generated by the error-correction algorithm, and then 3) storing the encrypted encoded data on the storage systems.","In some examples, the client device may communicate with Internet-based storage systems via Internet-based protocols. In this example, the client device may virtualize APIs (such as SOAP or REST) used by such Internet-based storage systems.","In one example, the exemplary client-side method may also include providing virtualized access to the data object stored on the storage systems (by, e.g., presenting the data object within a networked or virtualized folder or volume). This client-side method may also include maintaining a cache object that contains cached writes to the data object and\/or a cached copy of recently accessed data.","Corresponding systems and computer-readable media are also disclosed. For example, a computer-readable medium may include one or more computer-executable instructions that, when executed by at least one processor of a computing device, may cause the computing device to: 1) receive a request from a client device for instructions or directions for storing a data object, 2) access a data-placement policy that contains criteria for identifying storage systems suitable for storing the data object, 3) identify, based at least in part on the data-placement policy, a plurality of storage systems for storing the data object, at least one of the storage systems including a third-party Internet-based storage system, and then 4) direct the client device to store the data object on the identified storage systems.","In another embodiment, a computer-readable medium may include one or more computer-executable instructions that, when executed by at least one processor of a computing device, may cause the computing device to: 1) send a request to a data-management server for directions for storing a data object, 2) receive directions from the data-management server for storing the data object on a plurality of storage systems, with at least one of the storage systems representing a third-party Internet-based storage system, and then 3) store the data object on the storage systems in accordance with the directions received from the data-management server.","As will be explained in greater detail below, by managing the placement of and access to data stored on both cloud-based storage systems and traditional enterprise-based storage systems, the systems and methods described herein may effectively increase the reliability and\/or performance of such storage systems. Moreover, by accounting for the characteristics of various data objects, devices, and storage systems, the systems and methods described herein may enable storage providers to effectively manage and improve the experience of end-users that make use of such storage systems.","Features from any of the above-mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments, features, and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.","Throughout the drawings, identical reference characters and descriptions indicate similar, but not necessarily identical, elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms, specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However, the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather, the instant disclosure covers all modifications, equivalents, and alternatives falling within the scope of the appended claims.","As will be described in greater detail below, the instant disclosure generally relates to systems and methods for using cloud-based storage to optimize data-storage operations. The terms \u201ccloud-based storage\u201d and \u201cInternet-based storage,\u201d as used herein, generally refer to any type or form of storage system that may be accessed via the Internet. Examples of Internet-based storage systems offered by online storage providers include, without limitation, AMAZON S3, NIRVANIX SDN, ELASTICDRIVE, IBACKUP, and the like.","The following will provide, with reference to , detailed descriptions of exemplary systems for using cloud-based storage to optimize data-storage operations. Detailed descriptions of corresponding computer-implemented methods will also be provided in connection with . In addition, detailed descriptions of an exemplary computing system and network architecture capable of implementing one or more of the embodiments described herein will be provided in connection with , respectively.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 1","FIGS. 2 and 3","FIGS. 2 and 3","FIGS. 2 and 3"],"b":["100","100","102","100","104","202","1","206","212","1","222","1","100","106"]},"In addition, exemplary system  may include a data-management module  programmed to manage the storage of and access to data. Exemplary system  may also comprise an encoding module  and an encryption module  respectively programmed to encode and encrypt data objects. Exemplary system  may also comprise an evaluation module  for evaluating the quality of various storage systems and providers. Although illustrated as separate elements, one or more of modules  in  may represent portions of a single module or application.","In certain embodiments, one or more of modules  in  may represent one or more software applications or programs that, when executed by a computing device, may cause the computing device to perform one or more tasks. For example, as will be described in greater detail below, one or more of modules  may represent software modules stored and configured to run on one or more computing devices, such as the devices illustrated in  (e.g., client devices ()-(N) and\/or data-management server ), computing system  in , and\/or portions of exemplary network architecture  in . One or more of modules  in  may also represent all or portions of one or more special-purpose computers configured to perform one or more tasks.","As illustrated in , exemplary system  may also include one or more databases . Databases  may represent portions of a single database or computing device or a plurality of databases or computing devices. In one embodiment, exemplary system  may include a policies database  for storing data-placement policies , data-access policies , and data-migration policies , as detailed below. Exemplary system  may also include an evaluation database  for storing evaluation metrics  for evaluating storage systems and the results  of such evaluation metrics. Exemplary system  may also include a mapping database  for storing object-to-fragment maps , fragment-to-location maps , and metadata catalogs , as will be explained below.","Databases  in  may represent a portion of one or more computing devices. For example, databases  may represent a portion of client devices ()-(N) and\/or data-management server  in , computing system  in , and\/or portions of exemplary network architecture  in . Alternatively, databases  in  may represent one or more physically separate devices capable of being accessed by a computing device, such as client devices ()-(N) and\/or data-management server  in , computing system  in , and\/or portions of exemplary network architecture  in .","Exemplary system  in  may be deployed in a variety of ways. For example, all or a portion of exemplary system  may represent portions of a cloud-computing or network-based environment, such as exemplary system  illustrated in . Cloud-computing environments may provide various services and applications via the Internet. These cloud-based services (e.g., software as a service, platform as a service, infrastructure as a service, etc.) may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud-based computing environment.","As shown in , system  may include a plurality of client devices ()-(N) in communication with a data-management server  and a plurality of Internet-based storage systems ()-(N) via a network . Client devices ()-(N) may also be in communication with a plurality of enterprise-based storage systems ()-(N). In one embodiment, and as will be described in greater detail below, data-management server  may be programmed to: 1) receive a request from a client device (such as client device ()) for instructions or directions for storing a data object (such as a file or data block), 2) access a data-placement policy (such as data-placement policy  in ) that contains criteria for identifying storage systems suitable for storing the data object, 3) identify, based at least in part on the data-placement policy, a plurality of storage systems (such as a subset of storage systems ()-(N) and ()-(N)) for storing the data object, at least one of the storage systems including a third-party Internet-based storage system (such as Internet-based storage systems ()-(N)), and then 4) direct the client device to store the data object on the identified storage systems.","Similarly, client devices ()-(N) may be programmed to: 1) send a request to data-management server  for instructions or directions for storing a data object, 2) receive directions from data-management server  for storing the data object on a plurality of storage systems (such as a subset of storage systems ()-(N) and ()-(N)), with at least one of the storage systems representing a third-party Internet-based storage system, and then 3) store the data object on the storage systems in accordance with the directions received from data-management server .","Client devices ()-(N) generally represent any type or form of computing device capable of reading computer-executable instructions. Examples of client devices ()-(N) include, without limitation, laptops, desktops, servers, cellular phones, personal digital assistants (PDAs), multimedia players, embedded systems, combinations of one or more of the same, exemplary computing system  in , or any other suitable computing device.","Data-management server  generally represents any type or form of computing device that is capable of managing placement of, and access to, data stored on storage systems (such as storage systems ()-(N) and ()-(N)). Examples of database server  include, without limitation, application servers and database servers configured to provide various database services and\/or run certain software applications.","In the example illustrated in , client devices ()-(N) may access data-management server  via network , which may, as detailed below, represent the Internet. In this example, data-management server  may reside in a highly available data center and\/or be mirrored across data centers. In other examples, client devices ()-(N) may directly access data-management server . For example, in the example illustrated in , data-management server  may be located within the same enterprise as client devices ()-(N) and storage systems ()-(N).","Network  generally represents any medium or architecture capable of facilitating communication or data transfer. Examples of network  include, without limitation, an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), the Internet, power line communications (PLC), a cellular network (e.g., a GSM Network), exemplary network architecture  in , or the like. Network  may facilitate communication or data transfer using wireless or wired connections.","Internet-based storage systems ()-(N) generally represent any type or form of storage system that may be accessed via the Internet. Examples of Internet-based storage systems ()-(N) include, without limitation, AMAZON S3, NIRVANIX SDN, ELASTICDRIVE, IBACKUP, and the like.","Similarly, storage systems ()-(N) generally represent any type or form of local or remote data-storage system. Examples of storage systems ()-(N) include, without limitation, direct-attached storage systems (such as disk arrays), storage area networks (SANs), network-attached storage systems (NASs), or any other type or form of storage device or medium capable of storing data and\/or computer-readable instructions. As will be discussed in greater detail below, storage systems ()-(N) may be directly attached to client devices ()-(N), positioned within the same enterprise as client devices ()-(N), and\/or located remotely from client devices ()-(N).",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 4","FIG. 4","FIG. 4","FIG. 1","FIGS. 2 and 3"],"b":["400","100","200","300"]},"As illustrated in , at step  one or more of the various systems described herein may receive a request from a client device for directions for storing a data object. For example, communication module  in  may, as part of data-management server  in , receive a request from client device () for directions for storing a data object (such as data object  in ).","The systems described herein may perform step  in a variety of contexts. In one example, the request received in step  may represent a first request to write or store the data object. In other embodiments, the request received in step  may represent a request to write to an existing data object. The term \u201cdata object,\u201d as used herein, generally refers to any type or form of data structure. Examples of data objects include, without limitation, files and data blocks.","At step  in , the systems described herein may access a data-placement policy. For example, policy-management module  in  (which may, as detailed above, represent a portion of data-management server  in ) may retrieve a data-placement policy  from within policy database  of databases  in  (which may, as detailed above, represent a portion of data-management server ).","In one example, the data-placement policy accessed in step  may include criteria for identifying storage systems that are suitable for storing the data object identified in step . Examples of the types of criteria that may be included in this data-placement policy include criteria for evaluating, without limitation, the reliability of a particular storage system (e.g., historical uptime, etc.), the bandwidth or storage capacity of a particular storage system, the monetary costs associated with storing data on a particular storage system, the location of a particular storage system relative to the client device (as determined, e.g., by the number of hops between the client device and the storage system), the performance of a particular storage system (as determined, e.g., by the access and response times of a particular storage system), at least one characteristic of the data object (e.g., whether the data object is of a specific file type or is frequently accessed), at least one characteristic of the client device (e.g., whether the client device is of a specific device type, such as a mobile phone or desktop), at least one characteristic of a user of the client device (such as whether the user is associated with a specific customer or enterprise), and\/or any other criteria that may be used to identify or evaluate storage systems for storing the data object of step .","In one example, the data-placement policy accessed in step  may be associated with the client device itself, a user of the client device, and\/or an organization associated with the user of the client device (such as an employer of the user of the client device). For example, data-placement policy  in  may represent a data-specific policy (e.g., \u201cstore multimedia files or frequently accessed files on high-bandwidth, low-latency storage systems\u201d), a device-specific policy (e.g., \u201cstore data originating from mobile devices on low-cost, high-latency storage systems\u201d), a user-specific policy (e.g., \u201cstore data originating from user X on high-latency but highly available storage systems\u201d), and\/or an organization-specific policy (e.g., \u201cstore data originating from all employees of company X on low-latency, highly available storage systems\u201d).","At step , the systems described herein may identify, based at least in part on the data-placement policy accessed in step , a plurality of storage systems (at least one of which may include a third-party Internet-based stored system) for storing the data object identified in step . For example, data-management module  in  (which may, as detailed above, represent a portion of data-management server  in ) may determine, by applying data-placement policy  in  to storage systems ()-(N) and\/or ()-(N), that Internet-based storage system () and storage system () satisfy the policy's criteria for storing the data object identified in step .","The systems described herein may perform step  in a variety of ways. In one example, data-management module  may identify storage systems for storing the data object by identifying storage systems that satisfy the criteria of the data-placement policy accessed in step . For example, data-management module  may determine whether storage systems ()-(N) and ()-(N) satisfy criteria relating to reliability, bandwidth capacity, storage capacity, cost, location, and\/or performance.","As detailed above, the data-placement policy accessed in step  may represent a data-specific policy, a device-specific policy, a user-specific policy, and\/or an organization-specific policy. In these examples, data-management  may identify an appropriate data-placement policy by analyzing characteristics associated with the data object in question, the client device in question, the user of the client device in question, and\/or an organization associated with the user of the client device in question. Upon identifying and accessing an appropriate data-placement policy, data-management module  may apply this policy to one or more storage systems (such as storage systems ()-(N) and ()-(N) in ) in order to identify storage systems suitable for storing the data object in question.","In some examples, data-management module  may continually evaluate storage systems using various evaluation metrics (such as evaluation metrics  in evaluation database  in ) in order to determine whether these storage systems satisfy the criteria of various data-placement policies. Examples of evaluation metrics that data-management module  may use to evaluate storage systems include, without limitation, metrics for evaluating the reliability of a storage system, the performance of a storage system, the storage capacity of a system, the bandwidth capacity of a storage system, service level agreements associated with a storage system, or the like. In some examples, data-management module  may also use these evaluation metrics to evaluate storage providers (such as, e.g., AMAZON, NIRVANIX, and ELASTICDRIVE) and\/or the individual points of presence operated by such providers (e.g., individual data centers operated by Internet-based storage providers).","In some examples, data-management module  may calculate a quality-of-service score for a storage system and\/or storage provider based on the results of the above-described evaluation metrics (e.g., evaluation results  in evaluation database  in ). For example, data-management module  may assign a relatively high quality-of-service score (e.g., 92, on a scale of 1-100) to storage systems (and\/or the providers of such storage systems) that exhibit high reliability, performance, storage capacity, and bandwidth capacity. In contrast, data-management module  may assign a relatively low quality-of-service score (e.g., 12, on a scale of 1-100) to storage systems (and\/or the providers of such storage systems) that exhibit relatively low reliability, performance, storage capacity, and\/or bandwidth capacity.","Returning to , at step  the systems described herein may direct the client device to store the data object on the storage systems identified in step . For example, data-management module  in  may, as part of data-management server  in , direct client device () to store the data object identified in step  on both Internet-based storage system () and storage system ().","The systems described herein may perform step  in a variety of ways. In one example, data-management module  may cause data-management server  to provide information that identifies the storage devices to the client device. This identification information may include, for example, an autonomous system number associated with a storage system, all or a portion of an IP address associated with a storage system (such as a host ID, and network ID, and\/or a subnet ID), a MAC address associated with a storage system, or the like.","In some examples, data-management module  may perform step  by instructing the client device to encode the data object in question using an error-correction algorithm and then store the encoded data generated by this error-correction algorithm on the storage systems identified in step . For example, data-management module  may instruct client device () to encode data object  in  using an error-correction algorithm.","The term \u201cerror-correction algorithm,\u201d as used herein, generally refers to any type or form of tool, algorithm, or code for generating redundant data. Examples of error-correction algorithms include, without limitation, erasure-coding algorithms, such as Reed-Solomon erasure-coding algorithms. In some examples, the level of redundancy introduced by such error-correction algorithms may be based at least in part on the data-placement policy accessed in step . For example, data-placement policy  in  may specify the number of redundant fragments to be generated when erasure-encoding a data object.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 5","FIGS. 2 and 3","FIG. 1"],"b":["502","202","1","502","506","1","202","1","508","506","1","508","516","1","516","508","132"]},"In some examples, data-management module  may also instruct the client device to encrypt the encoded data generated by the error-correction algorithm. For example, data-management module  may instruct client device () to encrypt fragments ()-(N) and fragments (N+1)-(N+M) using one or more encryption algorithms.","As detailed above, data-management module  may instruct the client device to store the encoded data generated by the error-correction algorithm on the storage systems identified in step . For example, data-management module  may instruct client device () to disperse fragments ()-(N) and (N+1)-(N+M) among both Internet-based storage system () and storage system () in . In some examples, data-management module  may instruct client device () to allocate the disbursement of these encoded fragments between Internet-based storage system () and storage system () based on, or in accordance with, data-placement policy  in . As detailed above, data-placement policy  may allocate or disperse the storage of data objects or fragments of data objects based on the reliability, bandwidth capacity, storage capacity, monetary cost, location, and\/or performance of storage systems and\/or the characteristics of the data object in question, the client device in question, a user of the client device in question, and\/or an organization associated with the user of the client device in question.","In some examples, data-management module  may determine that a data object identified in step  represents a file of a specific file type (e.g., a multimedia file, such as a .jpeg file, an .mpeg file, an .avi file, or the like) capable of supporting graded quality-of-access. In this example, data-management module  may instruct client device () to encode the data object using a layered-coding algorithm or other algorithm that enables graded quality-of-access. Data-management module  may then instruct client device () to store encoded data generated by this layered-coding algorithm on the storage systems identified in step .","The term \u201cgraded quality-of-access,\u201d as used herein, generally refers to the ability to modify the number of fragments of a data object provided to a client device based on the quality-of-access needs of the client device. For example, in the context of a streaming multimedia file, a mobile computing device (such as a cellular telephone) may require a lower-resolution version of the file than is required by a desktop computing device. In this example, upon receiving a request from a client device for directions for accessing the multimedia file, data-management module  may: 1) identify the quality-of-access needs of the client device (based on, for example, the connection speed of the client device and\/or the device type of the client device), 2) identify at least one storage system that contains encoded data that satisfies the quality-of access needs of the client device, and then 3) direct the client device to access encoded data that satisfies the quality-of-access needs of the client device from the identified storage system.","For example, data-management module  may determine that computing device () in  represents a cellular telephone with a relatively low connection speed and screen resolution. In this example, upon receiving a request from client device () for instructions or directions for accessing a multimedia file (encoded fragments of which may be stored on Internet-based storage system () and storage system () in ), data-management module  may direct client device () to stream the multimedia file from Internet-based storage system () due to its relatively high latency. Alternatively, if data-management module  determines that client device () represents a desktop computing device with a relatively high connection speed and screen resolution, then data-management module  may direct client device () to retrieve encoded fragments of the file from both Internet-based storage system () and storage system () in order to increase data throughout.","The systems described herein may encode data objects using layered-coding algorithms in a variety of ways. In the context of a multimedia file, these layered-coding algorithms may generate embedded bitstreams of differing bit rates that may be retrieved and decoded by client devices having differing quality-of-access needs. For example, a layered-coding algorithm may encode a multimedia file by generating a base layer that provides a specific bit rate associated with a basic level of quality. The layered-coding algorithm may then add multiple enhancement layers on top of this basic layer that may provide enhanced bit rates and, thus, enhanced quality-of access.","In some examples, data-management server  may create and store various maps and\/or metadata catalogs. For example, data-management module  may create and store: 1) an object-to-fragment map (such as object-to-fragment map  in mapping database  in ) that identifies encoded data associated with data objects, 2) a fragment-to-location map (such as fragment-to-location map  in ) that identifies the location of encoded data associated with a data object within one or more storage systems, and 3) a metadata catalog (such as metadata catalog  ) for a client device, a user or client device, and\/or an organization associated with the user of the client device. In this example, the metadata catalogs may contain various forms of metadata for identifying policies (such as data-placement policies and data-access policies, as will be described in greater detail below) associated with specific devices, users, and organizations. These metadata catalogs may also identify the various maps (such as object-to-fragment maps and\/or fragment-to-location maps) associated with devices, users, and\/or organizations. In some examples, data-management module  may backup at least a portion of mapping database  (e.g., object-to-fragment map , fragment-to-location map , and\/or metadata catalog ) to at least one of storage systems ()-(N) and ()-(N) in .","In some examples, data-management server  may migrate data from one storage system to another for various reasons. For example, data-management module  may migrate data from one storage system to another storage system due to, for example, the failure of a particular storage system (due to, e.g., hardware failures, disasters, bankruptcy, etc.), the reliability (or lack thereof) of a particular storage system, the bandwidth capacity (or lack thereof) of a particular storage system, the storage capacity (or lack thereof) of a particular storage system (in order to load balance, for example), monetary costs associated with storing data on a particular storage system, the performance of a particular storage system, the location of a particular storage system, at least one characteristic of the data object (e.g., whether the data object is of a specific file type or is frequently accessed), and\/or a combination of one or more of the same. For example, data-management server  may migrate or move data from a primary storage system (such as storage system () in ) to a cloud-based storage system (such as Internet-based storage system () in ) when: 1) the storage capacity of the primary storage system is depleted and\/or 2) the data in question has been not been accessed for a long period of time. In some examples, data-management module  may migrate data in accordance with a migration policy, such as migration policy  in .","In one example, data-management server  may also manage access to data stored on storage systems ()-(N) and ()-(N). For example, data-management module  may manage access to data by: 1) receiving a request from a client device (such as client device () in ) for instructions or directions for accessing (e.g., reading or restoring) a data object, 2) accessing a data-access policy (such as data-access policy  in policy database  of databases  in ) that includes criteria for identifying storage systems for providing access to the data object, 3) identifying, based at least in part on the data-access policy, at least one storage system for providing access to the data object, and then 4) directing the client device to access the data object from the identified stored systems. Examples of the type of criteria that may be included within such data-access policies may include criteria based at least in part on the location of a particular storage system relative to the client device, the performance of a particular storage system, the availability of a particular storage system, the reliability of a particular storage system, the bandwidth capacity of a particular storage system, and\/or combinations of one or more of the same.","As detailed above, the instant disclosure also identifies an exemplary client-side method for using cloud-based storage to optimize data-storage operations.  is a flow diagram of such a method. The steps shown in  may be performed by any suitable computer-executable code and\/or computing system. In some embodiments, the steps shown in  may be performed by one or more of the components of system  in  and\/or systems  and  in , respectively.","As illustrated in , at step  one or more of the various systems described herein may send a request to a data-management server for directions for storing a data object. For example, communication module  in  (which may, as detailed above, represent a portion of client device (N) in ) may send a request to data-management server  for directions for storing a data object.","At step , the systems described herein may receive directions from the data-management server for storing the data object on a plurality of storage systems, at least one of which may represent a third-party Internet-based storage system, as detailed above. For example, communication module  may, as a part of client device (N) in , receive directions from data-management server  for storing the data object in question on both Internet-based storage system () and storage system () in .","At step , the systems described herein may store the data object on the identified storage systems in accordance with the directions received from the data-management server. For example, communication module  may cause client device (N) to store the data object on Internet-based storage system () and storage system ().","The various systems described herein may perform step  in a variety of ways, including in accordance with the various embodiments described in detail above in connection with exemplary method  and . For example, encoding module  and\/or encryption module  in  may cause client device (N) to encode the data object using an error-correction algorithm, encrypt the encoded data generated by the error-correction algorithm, and then store the encrypted encoded data on the storage systems identified by data-management server .","As detailed above, in some examples data-management server  may instruct client device to allocate or disperse the storage of data objects or fragments of data objects in accordance with a data-placement policy. As explained above, such policies may allocate or disperse data objects or encoded fragments of such data objects based on the reliability, bandwidth capacity, storage capacity, monetary cost, location, and\/or performance of storage systems and\/or the characteristics of the data object in question, the client device in question, a user of the client device in question, and\/or an organization associated with the user of the client device in question.","In some examples, communication module  may cause client device (N) to communicate with various third-party Internet-based storage systems using one or more Internet-based protocols. For example, communication module  may virtualize various APIs (such as SOAP or REST) commonly used by Internet-based storage providers.","In addition, in one embodiment, communication module  may provide virtualized access to data stored on various storage systems by, for example, presenting such data within a networked or virtualized folder or volume on a client device. For example, communication module  may virtualize access to data stored on storage systems ()-(N) and ()-(N) by providing a virtualized folder or volume on client device (N) for accessing the data stored on the storage systems.","In addition, in some examples the systems described herein may enable a client device to operate or function in an off-line or disconnected mode. For example, communication module  may generate and maintain a cached object on client device (N) that contains cached rights to data stored on storage systems ()-(N) and ()-(N). Similarly, this cached object may maintain cached copies of recently accessed data stored on storage systems ()-(N) and ()-(N). In this example, the cached object may enable a user of client device (N) to access recently accessed data and\/or cache writes to data stored on the storage systems without being connected to such storage systems.","As detailed above, by managing the placement of and access to data stored on both cloud-based storage systems and traditional enterprise-based storage systems, the systems and methods described herein may effectively increase the reliability and\/or performance of such storage systems. Moreover, by accounting for the characteristics of various data objects, devices, and storage systems, the systems and methods described herein may enable storage providers to effectively manage and improve the experience of end-users that make use of such storage systems.",{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 7","b":["710","710","710","710","714","716"]},"Processor  generally represents any type or form of processing unit capable of processing data or interpreting and executing instructions. In certain embodiments, processor  may receive instructions from a software application or module. These instructions may cause processor  to perform the functions of one or more of the exemplary embodiments described and\/or illustrated herein. For example, processor  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the receiving, accessing, identifying directing, storing, encoding, encrypting, providing, evaluating, determining, migrating, creating, backing up, sending, communicating, maintaining, gerund phrases from claims steps described herein. Processor  may also perform and\/or be a means for performing any other steps, methods, or processes described and\/or illustrated herein.","System memory  generally represents any type or form of volatile or non-volatile storage device or medium capable of storing data and\/or other computer-readable instructions. Examples of system memory  include, without limitation, random access memory (RAM), read only memory (ROM), flash memory, or any other suitable memory device. Although not required, in certain embodiments computing system  may include both a volatile memory unit (such as, for example, system memory ) and a non-volatile storage device (such as, for example, primary storage device , as described in detail below). In one example, one or more of modules  from  may be loaded into system memory .","In certain embodiments, exemplary computing system  may also include one or more components or elements in addition to processor  and system memory . For example, as illustrated in , computing system  may include a memory controller , an Input\/Output (I\/O) controller , and a communication interface , each of which may be interconnected via a communication infrastructure . Communication infrastructure  generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure  include, without limitation, a communication bus (such as an ISA, PCI, PCIe, or similar bus) and a network.","Memory controller  generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example, in certain embodiments memory controller  may control communication between processor , system memory , and I\/O controller  via communication infrastructure . In certain embodiments, memory controller may perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the steps or features described and\/or illustrated herein, such as receiving, accessing, identifying directing, storing, encoding, encrypting, providing, evaluating, determining, migrating, creating, backing up, sending, communicating, maintaining, gerund phrases from claims.","I\/O controller  generally represents any type or form of module capable of coordinating and\/or controlling the input and output functions of a computing device. For example, in certain embodiments I\/O controller  may control or facilitate transfer of data between one or more elements of computing system , such as processor , system memory , communication interface , display adapter , input interface , and storage interface . I\/O controller  may be used, for example, to perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the receiving, accessing, identifying directing, storing, encoding, encrypting, providing, evaluating, determining, migrating, creating, backing up, sending, communicating, maintaining, gerund phrases from claims steps described herein. I\/O controller  may also be used to perform and\/or be a means for performing other steps and features set forth in the instant disclosure.","Communication interface  broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system  and one or more additional devices. For example, in certain embodiments communication interface  may facilitate communication between computing system  and a private or public network including additional computing systems. Examples of communication interface  include, without limitation, a wired network interface (such as a network interface card), a wireless network interface (such as a wireless network interface card), a modem, and any other suitable interface. In at least one embodiment, communication interface  may provide a direct connection to a remote server via a direct link to a network, such as the Internet. Communication interface  may also indirectly provide such a connection through, for example, a local area network (such as an Ethernet network), a personal area network, a telephone or cable network, a cellular telephone connection, a satellite data connection, or any other suitable connection.","In certain embodiments, communication interface  may also represent a host adapter configured to facilitate communication between computing system  and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include, without limitation, SCSI host adapters, USB host adapters, IEEE 1394 host adapters, SATA and eSATA host adapters, ATA and PATA host adapters, Fibre Channel interface adapters, Ethernet adapters, or the like. Communication interface  may also allow computing system  to engage in distributed or remote computing. For example, communication interface  may receive instructions from a remote device or send instructions to a remote device for execution. In certain embodiments, communication interface  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the receiving, accessing, identifying directing, storing, encoding, encrypting, providing, evaluating, determining, migrating, creating, backing up, sending, communicating, maintaining, gerund phrases from claims steps disclosed herein. Communication interface  may also be used to perform and\/or be a means for performing other steps and features set forth in the instant disclosure.","As illustrated in , computing system  may also include at least one display device  coupled to communication infrastructure  via a display adapter . Display device  generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly, display adapter  generally represents any type or form of device configured to forward graphics, text, and other data from communication infrastructure  (or from a frame buffer, as known in the art) for display on display device .","As illustrated in , exemplary computing system  may also include at least one input device  coupled to communication infrastructure  via an input interface . Input device  generally represents any type or form of input device capable of providing input, either computer or human generated, to exemplary computing system . Examples of input device  include, without limitation, a keyboard, a pointing device, a speech recognition device, or any other input device. In at least one embodiment, input device  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the receiving, accessing, identifying directing, storing, encoding, encrypting, providing, evaluating, determining, migrating, creating, backing up, sending, communicating, maintaining, gerund phrases from claims steps disclosed herein. Input device  may also be used to perform and\/or be a means for performing other steps and features set forth in the instant disclosure.","As illustrated in , exemplary computing system  may also include a primary storage device  and a backup storage device  coupled to communication infrastructure  via a storage interface . Storage devices  and  generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions. For example, storage devices  and  may be a magnetic disk drive (e.g., a so-called hard drive), a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash drive, or the like. Storage interface  generally represents any type or form of interface or device for transferring data between storage devices  and  and other components of computing system . In one example, databases  from  may be stored in primary storage device .","In certain embodiments, storage devices  and  may be configured to read from and\/or write to a removable storage unit configured to store computer software, data, or other computer-readable information. Examples of suitable removable storage units include, without limitation, a floppy disk, a magnetic tape, an optical disk, a flash memory device, or the like. Storage devices  and  may also include other similar structures or devices for allowing computer software, data, or other computer-readable instructions to be loaded into computing system . For example, storage devices  and  may be configured to read and write software, data, or other computer-readable information. Storage devices  and  may also be a part of computing system  or may be a separate device accessed through other interface systems.","In certain embodiments, storage devices  and  may be used, for example, to perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the receiving, accessing, identifying directing, storing, encoding, encrypting, providing, evaluating, determining, migrating, creating, backing up, sending, communicating, maintaining, gerund phrases from claims steps disclosed herein. Storage devices  and  may also be used to perform and\/or be a means for performing other steps and features set forth in the instant disclosure.","Many other devices or subsystems may be connected to computing system . Conversely, all of the components and devices illustrated in  need not be present to practice the embodiments described and\/or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system  may also employ any number of software, firmware, and\/or hardware configurations. For example, one or more of the exemplary embodiments disclosed herein may be encoded as a computer program (also referred to as computer software, software applications, computer-readable instructions, or computer control logic) on a computer-readable medium. The phrase \u201ccomputer-readable medium\u201d generally refers to any form of device, carrier, or medium capable of storing or carrying computer-readable instructions. Examples of computer-readable media include, without limitation, transmission-type media, such as carrier waves, and physical media, such as magnetic-storage media (e.g., hard disk drives and floppy disks), optical-storage media (e.g., CD- or DVD-ROMs), electronic-storage media (e.g., solid-state drives and flash media), and other distribution systems.","The computer-readable medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer-readable medium may then be stored in system memory  and\/or various portions of storage devices  and . When executed by processor , a computer program loaded into computing system  may cause processor  to perform and\/or be a means for performing the functions of one or more of the exemplary embodiments described and\/or illustrated herein. Additionally or alternatively, one or more of the exemplary embodiments described and\/or illustrated herein may be implemented in firmware and\/or hardware. For example, computing system  may be configured as an application specific integrated circuit (ASIC) adapted to implement one or more of the exemplary embodiments disclosed herein.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIG. 8","FIG. 7"],"b":["800","810","820","830","840","845","850","810","820","830","710"]},"Similarly, servers  and  generally represent computing devices or systems, such as application servers or database servers, configured to provide various database services and\/or run certain software applications. Network  generally represents any telecommunication or computer network including, for example, an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), or the Internet. In one example, client systems , , and\/or  and\/or servers  and\/or  may include system  from .","As illustrated in , one or more storage devices ()-(N) may be directly attached to server . Similarly, one or more storage devices ()-(N) may be directly attached to server . Storage devices ()-(N) and storage devices ()-(N) generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions. In certain embodiments, storage devices ()-(N) and storage devices ()-(N) may represent network-attached storage (NAS) devices configured to communicate with servers  and  using various protocols, such as NFS, SMB, or CIFS.","Servers  and  may also be connected to a storage area network (SAN) fabric . SAN fabric  generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric  may facilitate communication between servers  and  and a plurality of storage devices ()-(N) and\/or an intelligent storage array . SAN fabric  may also facilitate, via network  and servers  and , communication between client systems , , and  and storage devices ()-(N) and\/or intelligent storage array  in such a manner that devices ()-(N) and array  appear as locally attached devices to client systems , , and . As with storage devices ()-(N) and storage devices ()-(N), storage devices ()-(N) and intelligent storage array  generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions.","In certain embodiments, and with reference to exemplary computing system  of , a communication interface, such as communication interface  in , may be used to provide connectivity between each client system , , and  and network . Client systems , , and  may be able to access information on server  or  using, for example, a web browser or other client software. Such software may allow client systems , , and  to access data hosted by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), or intelligent storage array . Although  depicts the use of a network (such as the Internet) for exchanging data, the embodiments described and\/or illustrated herein are not limited to the Internet or any particular network-based environment.","In at least one embodiment, all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), intelligent storage array , or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program, stored in server , run by server , and distributed to client systems , , and  over network . Accordingly, network architecture  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the receiving, accessing, identifying directing, storing, encoding, encrypting, providing, evaluating, determining, migrating, creating, backing up, sending, communicating, maintaining, gerund phrases from claims steps disclosed herein. Network architecture  may also be used to perform and\/or be a means for performing other steps and features set forth in the instant disclosure.","As detailed above, computing system  and\/or one or more components of network architecture  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more steps of an exemplary server-side or client-side method for using cloud-based storage to optimize data-storage operations.","While the foregoing disclosure sets forth various embodiments using specific block diagrams, flowcharts, and examples, each block diagram component, flowchart step, operation, and\/or component described and\/or illustrated herein may be implemented, individually and\/or collectively, using a wide range of hardware, software, or firmware (or any combination thereof) configurations. In addition, any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.","The process parameters and sequence of steps described and\/or illustrated herein are given by way of example only and can be varied as desired. For example, while the steps illustrated and\/or described herein may be shown or discussed in a particular order, these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and\/or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.","While various embodiments have been described and\/or illustrated herein in the context of fully functional computing systems, one or more of these exemplary embodiments may be distributed as a program product in a variety of forms, regardless of the particular type of computer-readable media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script, batch, or other executable files that may be stored on a computer-readable storage medium or in a computing system. In some embodiments, these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.","In addition, one or more of the modules described herein may transform data, physical devices, and\/or representations of physical devices from one form to another. For example, modules  in  may transform a property or characteristic of data-management server  in  by creating, modifying, and\/or storing maps  and  and catalogs  in mappings database  of databases  on data-management server .","The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.","Unless otherwise noted, the terms \u201ca\u201d or \u201can,\u201d as used in the specification and claims, are to be construed as meaning \u201cat least one of.\u201d In addition, for ease of use, the words \u201cincluding\u201d and \u201chaving,\u201d as used in the specification and claims, are interchangeable with and have the same meaning as the word \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate a number of exemplary embodiments and are a part of the specification. Together with the following description, these drawings demonstrate and explain various principles of the instant disclosure.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
