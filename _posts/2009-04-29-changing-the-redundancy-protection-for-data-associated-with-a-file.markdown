---
title: Changing the redundancy protection for data associated with a file
abstract: A storage subsystem provides redundancy protection for data associated with files stored in a storage subsystem. A request is received to change the redundancy protection for data associated with at least one of the files, where the request identifies the data for which the redundancy protection is to be changed. The redundancy protection for the data identified by the request is changed, while the redundancy protection for a remainder of the data associated with the files stored in the storage subsystem is maintained unchanged.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08195877&OS=08195877&RS=08195877
owner: Hewlett Packard Development Company, L.P.
number: 08195877
owner_city: Houston
owner_country: US
publication_date: 20090429
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["In storage subsystems, redundancy can be provided to protect data stored in such storage subsystems. One type of redundancy is mirroring redundancy, in which data in one storage device of the storage subsystem is copied to a mirror storage device (which contains a mirror copy of the data). Another type of redundancy is parity-based redundancy, where data is stored across a group of storage devices, and parity information associated with the data is stored in another storage device. If data within any storage device in the group of storage devices were to become inaccessible (due to data error or storage device fault or failure), the parity information can be accessed to reconstruct the data. Redundancy protection can be according to one of various RAID (Redundant Array of Inexpensive Disks) schemes, such as the RAID-1 scheme to provide mirroring, or the RAID-5 or RAID-6 scheme to provide parity-based redundancy.","In some cases, conventional mechanisms of providing redundancy protection for data stored in storage subsystems may be inefficient.","In accordance with some embodiments, to improve storage subsystem efficiency, a mechanism is provided to select which files in the storage subsystem are provided with redundancy protection, and which other files in the storage subsystem are not provided with redundancy protection. A \u201cfile\u201d refers to a collection of data, such as a text document, an image object, a video object, an audio object, objects used during operations of software, and so forth. A file is an element useable by application software in a computer. A file differs from storage structures maintained by storage subsystems, such as storage volumes. Redundancy protection refers to storing extra (redundancy) information to protect data stored in the storage subsystem. For example, the redundancy information can include a mirror copy of the data, or alternatively, the redundancy information can include parity information to allow for reconstruction of data in case of data error or system fault or failure.","Examples of redundancy protection are those provided by RAID (Redundant Array of Inexpensive Disks) schemes, such as the RAID-1 scheme (which provides mirroring of data) and the RAID-5 or RAID-6 scheme (which provides parity-based protection). In other implementations, other types of redundancy protection can be provided.","In some cases, it may be inefficient to provide redundancy protection for certain types of files. For example, during execution of software, temporary files may be created. In some cases, such temporary files can be relatively large. Typically, in response to a failure of fault in a storage subsystem, an operation that created the temporary files can simply abort and restart, without any loss of the underlying data on which the operation is applied. One example of a temporary file is a scratch file created during a database operation (e.g., sort operation, merge operation, join operation, and so forth), where the scratch file is used to store partially processed data for later further processing to produce a final result. There can be a relatively large number of scratch files employed if there are a correspondingly large number of concurrent operations that employ such scratch files. For database applications that employ relatively large base tables, scratch files can also be large.","In accordance with some embodiments, a mechanism is provided to allow for redundancy protection to be selectively turned off for data associated with certain files (e.g., temporary files). For example, in a storage subsystem that implements RAID-1, data on a source storage device is copied for storing in a mirror storage device. As used here, the term \u201cstorage device\u201d refers to a physical storage element, such as a disk-spaced storage element (e.g., hard disk drive, optical disk drive, etc.) or other type of storage element (e.g., semi-conductor storage element). The mechanism according to some embodiments allows mirroring to be disabled for data associated with some of the files (e.g., temporary files) in the source storage device. Turning off RAID-1 mirroring protection for data associated with temporary files and\/or for any other type of file (for which mirroring protection is deemed undesirable) provides more efficient usage of storage resources in the storage subsystem.","Disabling mirroring protection for data associated with certain files can also allow for improved network bandwidth usage. To provide RAID-1 mirroring protection, two physical storage devices are typically employed, where the two physical storage devices include the source storage device and the mirror storage device. If mirroring is disabled for data associated with some of the files, then write operation performance for writing to such files is improved since two copies of the data do not have to be written to the corresponding source storage device and mirror storage device with each write operation. When RAID-1 mirroring protection is enabled for data associated with a particular file, the effective write bandwidth is reduced by half, since each write to the particular file has to occur to two storage devices. For a large scratch file that may be accessed multiple times during a database operation, disabling RAID-1 mirroring for such scratch file can provide for more efficient storage subsystem performance.","The above has referred to disabling redundancy protection for certain files stored in a storage subsystem. More generally, the mechanism according to some embodiments is able to change redundancy protection for the certain files, while maintaining unchanged the redundancy protection for the remainder of the files stored in the storage subsystem. Given that a particular redundancy protection is provided for files in the storage subsystem, changing the redundancy protection for a subset of (one or more) files means that the redundancy protection for the subset of files is either turned off (disabled) or changed to a different level of protection. For example, the particular redundancy protection for the files of the storage subsystem can be a parity-based RAID redundancy protection (e.g., RAID-5 or RAID-6 protection). Changing the redundancy protection can mean that the redundancy protection is changed from RAID-1 to RAID-5 or RAID-6, which can provide enhanced storage performance. Alternatively, changing the redundancy protection can mean that the redundancy protection is changed from the RAID-5 or RAID-6 protection to the RAID-1 protection. Switching from RAID-5 or RAID-6 to RAID-1 will increase storage space utilization, but may not improve storage performance.","In some implementations, disabling redundancy protection for a subset of files results in providing a RAID-0 distribution of such subset of files across the storage devices of the storage subsystem. RAID-0 provides striping of data across multiple storage devices without redundancy (without parity or mirroring). Striping of data across multiple storage devices involves distributing blocks of the data across the multiple storage devices according to some criterion. In one implementation in which two storage devices are used, striping of data blocks across the two storage devices can be implemented by storing even blocks on the first storage device and odd blocks on the second storage device. Alternatively, instead of using the RAID-0 distribution of data when redundancy protection is disabled, the distribution of data across multiple storage devices can be performed in a different manner. For example, in an implementation with two storage devices, the address space of the data can be divided in half, with data in the first half of the address space stored in the first storage device, and data in the second half of the address space stored in the second storage device.","In accordance with some embodiments, control of the redundancy level of data associated with files can be performed by a host, or alternatively, by both the host and the storage subsystem.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 1","FIG. 1"],"b":["100","102","104","102","100","100","100","104","104"]},"The storage subsystem  includes a network interface  to allow the storage subsystem  to communicate over the network  with one or more client computers. The storage subsystem  also includes a storage controller  that is used to control access of data stored in storage media  (which can be disk-spaced storage media or semiconductor storage media) of the storage subsystem. The storage media  can include multiple physical storage devices . Although three physical storage devices  are depicted in , note that in alternative implementations there can be two physical storage devices or more than three storage devices. As yet another alternative implementation, instead of implementing the storage media  with multiple storage devices, the storage media can be implemented with one storage device having multiple partitions to allow for provision of redundancy.","As shown in , files  are stored on the storage devices . Redundancy protection, such as RAID-1 protection or RAID-5 or RAID-6 protection, can be implemented for at least some of the files . In the arrangement of , redundancy control is provided at the host (which in the example of  is the client computer ).","The client computer  includes a software application , which is executable on one or more central processing units (CPUs)  in the client computer . The CPU(s)  is (are) connected to storage media . The client computer  also includes a network interface  to allow for communication between the client computer  and the network .","During operation of the software application  in the client computer , one or more temporary files may be created. In some examples, the software application  can be a database software application, and the temporary files can be scratch files to temporarily store partially processed data in database operations, which can include sort, merge, join, and\/or other types of operations. The software application  is able to identify such temporary files.","The software application  can send requests through a redundancy control API (application programming interface)  to a file system  in the client computer  to change the redundancy protection for such temporary files that are stored in the storage media  of the storage subsystem . The \u201cfile system\u201d of a computer refers to the mechanism in the computer for storing and organizing files associated with the computer.","In a different embodiment, instead of a redundancy control API , some other type of interface can be used to allow for requests for selectively changing redundancy protection of files to be sent from the software application  to the file system .","In accordance with some embodiments, the file system  includes a file-based redundancy control module , which controls provision of redundancy for the files  stored in the storage subsystem . The file-based redundancy control module  is responsive to requests from the software application  to provide selective control of redundancy protection for individual ones of the files  (or subsets of the files) stored in the storage subsystem . The file-based redundancy control module  is responsive to such requests to selectively change redundancy protection for selected one(s) of the files  in the storage media  of the storage subsystem .","The file-based redundancy control module  can be a software module that is executable on the CPU(s)  of the client computer . Alternatively, the file-based redundancy control module can be implemented with firmware that is embedded in internal storage of an integrated circuit chip in the computer . As yet another alternative implementation, the file-based redundancy control module  may be a hardware device with fixed circuitry.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIGS. 3 and 4","FIG. 3","FIG. 1","FIG. 1"],"b":["100","104","100","302","106","106","304","306","106","112"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 4","FIG. 1"],"b":["115","115","402","124","122","115","404"]},"In response to the request, the redundancy protection for the file(s) identified by the request is changed (at ) (e.g., changed from RAID-1 to RAID-0), while the redundancy protection for the remaining files are maintained unchanged (e.g. maintained at RAID-1). With RAID-0 distribution, the file(s) identified by the request is (are) striped across the source and mirror storage devices.","When changing from RAID-1 to RAID-0, files that are arranged according to RAID-1 and files that are arranged according to RAID-0 can be stored on the same set of storage devices  (e.g., a pair of storage devices ). However, when changing from RAID-5 or RAID-6 to RAID-1 or RAID-0, then the files arranged according to RAID-5 or RAID-6 can be kept in the original set of storage devices, while the files arranged according to RAID-1 or RAID-0 will be moved from the original set of storage devices to another set of storage devices (or to different partitions in the original set of storage devices). Thus, when performing a redundancy level change from RAID-5 or RAID-6 to a lower level, migration (to a different storage location) of data associated with the files subject to the lower level of protection will occur. Migration would also occur when changing the redundancy protection level from RAID-0 or RAID-1 to RAID-5 or RAID-6.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":["208","100","200","200","202","204","206","202","200","100","200"]},"The storage subsystem redundancy control module  manages provision of redundancy protection (e.g., RAID protection) of data associated with the files  stored in the storage media . Note that the storage subsystem redundancy control module  manages redundancy control at a physical address level, rather than at the file level.","As in , the client computer  includes the software application , CPU , storage media , and redundancy control API  that is used by the software application  to request changes to the redundancy protection of files (in a procedure similar to the procedure of ). The requests to change the redundancy protection of files are sent through the redundancy control API  to a file system  in the client computer .","Upon receiving a request to change the redundancy protection of a file through the redundancy control API , the file system  performs the procedure depicted in . In response to such request, the file system  in the client computer  sends (at ) a redundancy protection change request to the storage subsystem , where this request specifies a logical address space (contiguous or non-contiguous address space) of data associated with the file for which the redundancy protection is to be changed.","The storage subsystem  determines the physical address space (contiguous or non-contiguous address space) that corresponds to the logical address space of the redundancy protection change request. For example, the physical address space can include a number of sectors of disks that are part of the storage media . The determined physical address space is received (at ) by the file system  from the storage subsystem  through the storage subsystem redundancy API . Information relating to this physical address space is stored by the file system . Subsequently, the file system  can send (at ) an access request (e.g., read request or write request) to the storage subsystem , where the access request contains the physical address(es) of the data (contained in a file ) to be accessed. The access request also includes a flag (or other indicator) specifying that the access request is associated with data that is stored at a \u201cnon-native\u201d redundancy level (e.g., RAID-0 instead of RAID-1, which is the native redundancy level of data on the storage subsystem ).",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 6","FIG. 5"],"b":["200","200","502","602","202","200","202","204"]},"The storage controller  determines (at ) the physical address space (e.g., disk sectors) corresponding to the logical address space of the redundancy protection change request. The storage controller  returns this physical address space to the storage subsystem redundancy API , which in turns sends information relating to the physical address space back to the file system  in the client computer . The storage subsystem redundancy API  can also return the number of logical sectors to the file system , so that the file system  can update a space management table to reflect the logical space allocation.","In response to the request for changing the redundancy protection for the identified logical address space, the storage subsystem redundancy control module  implements (at ) the different redundancy level for the data in the physical locations of the storage media  that correspond to the logical address space identified by the redundancy protection change request.","The storage controller  is able to handle (at ) a subsequent access request (issued by the file system  in the client computer ) that contains a flag indicating that the requested data is subject to the non-native redundancy level (e.g., RAID-0 instead of RAID-1). Based on detecting this flag, the storage controller  may determine that data errors may not be recoverable (e.g., if RAID-0 is implemented).","In some alternative embodiments, the redundancy level of a file can be represented by an attribute of the file. This can be useful if the file is to be shared between applications. The different applications can access the redundancy level attribute of the file to determine the redundancy level to use. In this way, if a file is copied or moved across different file systems, the file systems can store the file with the correct redundancy level.","In some implementations, it may be possible that the host RAID level is different from the storage subsystem RAID level. The host can use RAID-1 redundancy, whereas storage subsystems can use RAID-5 or RAID-6 redundancy. Techniques according to some embodiments for changing redundancy levels can also be applied in such implementations. This solution in effect has two distinct levels of redundancy, where data is protected by both dual copies (replicates) with RAID-1, and each RAID-1 copy is again protected by RAID-5\/6 redundancy.","Instructions of software described above (including the file-based redundancy control module , software application , file system  or , storage subsystem redundancy API , and storage subsystem redundancy control module  of  or ) are loaded for execution on a processor. The processor includes CPUs (e.g., CPU(s)  in  or ), microprocessors, microcontrollers, processor modules or subsystems (including one or more microprocessors or microcontrollers), or other control or computing devices (such as storage controller  or  in  or ). As used here, a \u201cprocessor\u201d can refer to a single component or to plural components (e.g., single CPU or multiple CPUs).","Data and instructions (of the software) are stored in respective storage devices, which are implemented as one or more computer-readable or computer-usable storage media. The storage media include different forms of memory including semiconductor memory devices such as dynamic or static random access memories (DRAMs or SRAMs), erasable and programmable read-only memories (EPROMs), electrically erasable and programmable read-only memories (EEPROMs) and flash memories; magnetic disks such as fixed, floppy and removable disks; other magnetic media including tape; and optical media such as compact disks (CDs) or digital video disks (DVDs). Note that the instructions of the software discussed above can be provided on one computer-readable or computer-usable storage medium, or alternatively, can be provided on multiple computer-readable or computer-usable storage media distributed in a large system having possibly plural nodes. Such computer-readable or computer-usable storage medium or media is (are) considered to be part of an article (or article of manufacture). An article or article of manufacture can refer to any manufactured single component or multiple components. The instructions can be stored as drive firmware in flash memory within a tape storage device, for example.","In the foregoing description, numerous details are set forth to provide an understanding of the present invention. However, it will be understood by those skilled in the art that the present invention may be practiced without these details. While the invention has been disclosed with respect to a limited number of embodiments, those skilled in the art will appreciate numerous modifications and variations therefrom. It is intended that the appended claims cover such modifications and variations as fall within the true spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Some embodiments of the invention are described with respect to the following figures:",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIGS. 1 and 2"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
