---
title: Management and implementation of enclosed local networks in a virtual lab
abstract: Methods, systems, and computer programs for creating isolated environments that include virtual machines (VM) and networks in a virtual infrastructure are presented. The method includes an operation to define a configuration of a virtual system which includes VMs, virtual network interface cards (VNIC) in the VMs, and configuration local networks (CLN). Further, the method associates each VNIC with one of the CLNs and transmits instructions to the virtual infrastructure for deploying the configuration. Deploying the configuration includes instantiating VMs and CLNs in the virtual infrastructure. Each VM is instantiated in a host monitored by a virtual lab server, and the CLNs are instantiated in the same hosts where the VMs have been instantiated. Only VMs from the configuration can connect to the instantiated CLNs. The method further transmits instructions to the virtual infrastructure to customize the VMs by executing the customization instructions in the guest operating systems of the VMs to configure the VMs' VNICs.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08838756&OS=08838756&RS=08838756
owner: VMware, Inc.
number: 08838756
owner_city: Palo Alto
owner_country: US
publication_date: 20090727
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","DESCRIPTION OF THE RELATED ART","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is related to U.S. patent application Ser. No. 12\/510,072 filed on Jul. 27, 2009 and entitled \u201cAUTOMATED NETWORK CONFIGURATION OF VIRTUAL MACHINES IN A VIRTUAL LAB ENVIRONMENT\u201d, which is incorporated herein by reference.","Virtualization of computer resources generally involves abstracting computer hardware, which essentially isolates operating systems and applications from underlying hardware. Hardware is therefore shared among multiple operating systems and applications wherein each operating system and its corresponding applications are isolated in corresponding virtual machines (VM) and wherein each VM is a complete execution environment. As a result, hardware can be more efficiently utilized.","Virtual labs, such as VMware's vCenter Lab Manager\u2122 from the assignee of the present patent application, enable application development and test teams to create and deploy complex multi-tier system and network configurations on demand quickly. Testing engineers can set up, capture, and reset virtual machine configurations for demonstration environments in seconds. In addition, hands-on labs can be quickly configured and deployed, to be used for lab testing, hands-on training classes, etc.","The creation of virtual lab environments requires flexible tools to assist in the creation and management of computer networks. For example, if a test engineer decides to perform different tests simultaneously on one sample environment, the test engineer must deploy multiple times the sample environment. The multiple deployments must coexist in the virtual infrastructure. However, these environments often have network configurations, that when deployed multiple times, would cause networking routing problems, such as the creation of VMs with duplicate Internet Protocol (IP) addresses, an impermissible network scenario for the proper operation of the VMs and of the virtual lab environments.","In one embodiment, a method includes an operation to define a configuration of a virtual system, which includes VMs, virtual network interface cards (VNIC) in the VMs, and Configuration Local Networks (CLN). Further, the method associates each VNIC with one of the CLNs and transmits instructions to the virtual infrastructure for deploying the configuration. Deploying the configuration includes instantiating VMs and CLNs in the virtual infrastructure. Each VM is instantiated in a host monitored by a virtual lab server, and the CLNs are instantiated in the same hosts where the VMs have been instantiated. Only VMs from the configuration can connect to the instantiated CLNs. The method further transmits customization instructions to the virtual infrastructure to customize the VMs by executing the customization instructions in the guest operating systems of the VMs to configure the VM VNICs.","In another embodiment, a computer program embedded in a computer-readable storage medium, when executed by one or more processors, performs the method operations. In yet another embodiment, a system for creating isolated environments that include VMs and networks in a virtual infrastructure is presented. The system includes a database and an application module. The database stores configurations of virtual systems and the virtual lab networks created. Each configuration includes VMs, virtual lab networks, VNICs in the VMs, and connections from the VMs to the virtual lab networks. The application module transmits instructions to the virtual infrastructure to deploy the configuration. The deployment includes operations of instantiating the VMs of the configuration in the virtual infrastructure and instantiating the virtual lab networks in the hosts where the VMs have been instantiated. Additionally, the VMs are instantiated in a host monitored by a virtual lab server. The deployment also includes an operation to perform customization instructions at each VM, where the customization instructions are executed by a Guest Operating System (GOS) in the VMs to configure the VNICs in the VMs.","The following embodiments describe methods, systems, and computer programs for creating isolated environments that include virtual machines (VM) and networks in a virtual infrastructure. The method includes an operation to define a configuration of a virtual system with VMs, virtual network interface cards (VNIC) in the VMs, and configuration local networks (CLN). Further, the method associates each VNIC with one of the CLNs and transmits instructions to the virtual infrastructure for deploying the configuration. Deploying the configuration includes instantiating VMs and CLNs in the virtual infrastructure. Each VM is instantiated in a host monitored by a virtual lab server, and the CLNs are instantiated in the same hosts where the VMs have been instantiated. Only VMs from the configuration can connect to the instantiated CLNs. The method further transmits instructions to the virtual infrastructure to customize the VMs by executing the customization instructions in the guest operating systems of the VMs to configure the VM VNICs.","Embodiments of the invention provide the ability to build and reuse network topologies in a virtual laboratory environment. Virtual lab creates and manages shared and private virtual lab networks, creates layer 3 network overlays, connects VMs to networks, configures single and multi-homed VMs, manages the reservation of Media Access Control (MAC) and Internet Protocol (IP) addresses, detects conflicts, etc. It will be obvious, however, to one skilled in the art, that the present invention may be practiced without some or all of these specific details. In other instances, well known process operations have not been described in detail in order not to unnecessarily obscure the present invention.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1","b":["102","104","106","108","106","110"]},"Virtual lab networks, also referred to herein as enclosed local networks, can be categorized as private networks and shared networks. Private networks in a configuration are those networks available exclusively to VMs in the configuration, that is, only VMs in the configuration can have a Network Interface Controller (NIC) or VNIC connected directly to a switch or virtual switch (VSwitch) for the private network. Access to data on a private network is restricted to members of the configuration, that is, the private network is isolated from other entities outside the configuration. This is done by providing layer 2 isolation in the virtual switch of the virtual infrastructure. In one embodiment, a private network in the configuration can be connected to a physical network to provide external connectivity to the VMs in the private network, as discussed in more detail below. Private networks in a configuration are also referred to herein as configuration local networks or virtual networks. Shared networks, also referred to herein as shared physical networks or physical networks, are available to all VMs in the virtual infrastructure, which means that a configuration including a shared network will enable VMs in the shared network to communicate with other VMs in the virtual infrastructure connected, directly or indirectly, to the shared network. In one embodiment, a shared network is part of a Virtual Local Area Network (VLAN).","Deploying a configuration causes the VMs and networks in the configuration to be instantiated in the virtual infrastructure. Instantiating the VMs includes registering the VMs in the virtual infrastructure and powering-on the VMs. When an individual VM from a configuration is deployed, virtual lab deploys all shared networks and CLNs associated with the configuration using the network connectivity options in the configuration. If a network in the configuration already exists in the virtual infrastructure, the deployment will use the existing network. If the network does not exist, the deployment will request from the virtual infrastructure the instantiation of the network. In one embodiment, not all the VMs are instantiated because the user selects which VMs to be instantiated in the virtual infrastructure. Undeploying a configuration de-instantiates the VMs in the configuration from the virtual infrastructure. De-instantiating VMs includes powering off or suspending the VMs and un-registering the VMs from the virtual infrastructure. The state of the deployment can be saved in storage or discarded. Saving the memory state helps debugging memory-specific issues and makes VMs in the configuration ready for deployment and use almost instantly.","Virtual lab server  manages and deploys virtual machine configurations in a collection of hosts . It should be appreciated that not all hosts  need to be part of the scope of virtual lab server , although in one embodiment, all the hosts are within the scope of virtual lab server . Virtual lab server  manages hosts  by communicating with virtual infrastructure server , and by using virtual lab server agents installed on those hosts. In one embodiment, virtual lab server  communicates with virtual infrastructure server  via an Application Programming Interface (API), for example, to request the instantiation of VMs and networks.","Although virtual lab server  is used to perform some management tasks on hosts , the continuous presence of virtual lab server  is not required for the normal operation of deployed VMs, which can continue to run even if virtual lab server  becomes unreachable, for example because a network failure. One or more users  interface with virtual lab server  and virtual infrastructure  via a computer interface, which in one embodiment is performed via web browser.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 2A","FIG. 2A"],"b":["202","206","210","204","206","202","206","208","210","210","212","212","216","214","212","212","216","1","218","4","220","1","218","4","220","216","212","1","4","1","4"]},"The network overlays are configured to have separate Layer 2 (Ethernet) & Layer 3 (Internet Protocol) addressing from the underlying physical infrastructure, allowing a physical network or a CLN to have different subnet masks, gateways, and IP address pools from the underlying physical network. Further, the CLNs may be connected to a virtual router that performs address translation in order to provide connectivity to the underlying physical network infrastructure via a gateway or default router, as discussed in more detail below in reference to .",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 2B","FIG. 1"],"b":["254","256","254","252","258","254","1","2","260","266","268","1","2"]},"It should be appreciated that the embodiment illustrated in  is an exemplary deployment of configuration . Other deployments may result in different results, such as instantiating VMs A, B, and C in the same host, or instantiating the three VMs in three different hosts. The embodiment illustrated in  should therefore not be interpreted to be exclusive or limiting, but rather exemplary or illustrative.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 2C","b":["112","1202","116"]},"Application module  executes the core functionality of virtual lab server . Database manager  interfaces with database , residing in the virtual infrastructure shared storage, to store and retrieve the information used by virtual lab server . This information includes templates  (VMs and networks), virtual lab deployments , virtual lab configurations , virtual lab users and groups , and virtual lab networks . More details on the different elements in the database are described below in reference to . Virtualization infrastructure interface  in virtual lab server  sends and receives information to and from virtual infrastructure , such as for example to request that VMs be instantiated in the virtual infrastructure.","It should be appreciated that the embodiments illustrated in  are exemplary virtual lab modules, and other modules have been omitted for simplicity of description. Other embodiments may utilize different modules or configurations of modules. For example, in one embodiment the data structures are stored in a database not part of the virtual infrastructure pool of resources. The embodiments illustrated in  should therefore not be interpreted to be exclusive or limiting, but rather exemplary or illustrative.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 3"},"When VMs in a configuration have preconfigured IP addresses and the VMs are deployed in fenced mode, virtual lab assigns a unique external IP address to each of these VMs. Through these external addresses, VMs inside the fence and VMs outside the fence can communicate with each other. Virtual lab uses a VM called a virtual router to route packets between these VMs. The virtual router has at least two virtual NICs and \u201croutes\u201d traffic between the networks connected to the virtual NICs. In one embodiment, virtual lab configures the virtual router when a fenced configuration is deployed and deletes the virtual router when the configuration is undeployed.","Referring now to the fenced deployments shown in , configuration  named Athena has been cloned and deployed. Additionally, the cloned configuration has also been deployed, resulting in two deployments of configurations with the same elements. Configuration  includes VMs A and B, and network Blue  with subnet 192.168.0\/16. VMs A and B have IP addresses of 192.168.0.1 and 192.168.0.2, respectively. The first deployment Deployment   has been deployed un-fenced, and the second deployment Deployment   has been deployed in fenced mode. Because Deployment   is unfenced, the resulting VMs A and A connect directly to shared network 192.168.0\/16. It should be noted that to deploy configuration  in un-fenced mode, a shared network with the same network specification must exist so the VMs in the configuration can use the network addresses from the shared network.","Because Deployment   is fenced, fenced network  with exclusive access only to the VMs in Deployment  is created. VMs A and B in Deployment   have the addresses defined in the configuration, but these addresses are only used within fenced network . Virtual router  connects fenced network  with shared network Blue . In one embodiment, fenced network  is implemented as a group of ports on a VSwitch that does not have external connectivity. Each of the \u201cfenced\u201d VMs A and B gets assigned an external IP address from Blue network , 192.168.0.3 and 192.168.0.4, respectively. Virtual router  performs address translation for packets travelling in or out of Deployment  , thus translating 192.168.0.1 with 192.168.03 for VM A, and 192.168.0.2 with 192.168.0.4 for VM B.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIGS. 4A-E","FIG. 4A","FIG. 4B"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 4C","FIG. 4D","FIG. 4E"],"b":["402","402"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 5","b":["502","504","506","502","508","502","510","510","510","512","510","512"]},"CLNs are local to the configuration and designed to provide isolation from physical networks. However, it can be very inconvenient that VMs do not have network connectivity outside the configuration. To avoid this problem, virtual lab provides functionality to connect a CLN to a shared network through a virtual router. This allows the CLN to be isolated while allowing the VMs connected to the CLN to have external connectivity. In the embodiment shown in , the user has selected that CLN  be connected to shared network . This is accomplished by deploying virtual router , which performs address translation for the VMs in deployed CLN . However, the network translation performed by virtual router  is different from a standard Network Address Translation (NAT) because virtual router  performs 1 to 1 address translation, as discussed below in more detail in reference to .",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 6","b":["1","602","1","604","2","606","1","1","1","604","2","2","606","608","610","612","1","604","2","606"]},"Networks  and  can co-exist in the virtual infrastructure with the same network addresses because networks  and  are isolated and private, as previously discussed. To provide external connectivity to the VMs, networks  and  with address 192.168.1\/24 are connected to shared network  with address 10.6\/16. This is because virtual lab allows the creations of CLNs that have their own network addressing scheme, independent of the addressing scheme of shared networks. To provide external connectivity to shared network , networks  and  are connected to virtual routers  and , respectively. The virtual routers  and  assign an IP address to each VM in the configuration from the shared network's pool of addresses, which are managed and administered by the virtual lab. The virtual routers  and  then perform one to one address translation for the network traffic between the corresponding CLN and the shared network. Thus, virtual router translates address 192.168.1.1 for VM A to the assigned address of A\u2032 10.6.1.7. On the other hand, virtual router  translates the same address 192.168.1.1 for VM A to external address A\u2032 10.6.2.2. Therefore, the VMs in the CLNs have their own associated external address in the shared network . The network pool of addresses is managed by the virtual lab in order to avoid associating the same IP address in the shared network to different deployed VMs.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 7","FIG. 7"]},"When all instances of a VM are deleted, virtual lab releases the IP address to the IP pool. However, virtual lab proves expiration times for the assigned MAC and IP addresses to avoid stale Address Resolution Protocol (ARP) resolution. In order to avoid the reuse of IP addresses before the addresses may be purged from the ARP tables of VMs on the network, virtual lab will re-issue a MAC or IP address to a VM only after the address has been out of use for a certain amount of time. Virtual lab recycles an address for use by another deploying VM only after the expiration time of the previous use of the address. In another embodiment, virtual lab recycles network resources using a last-in-last-out (LILO) queue to reduce the chance of using a stale or conflicting resource.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 8","FIG. 7"],"b":["1","4","3"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 9","FIG. 9"],"b":["904","908","908","902","906","904","908"],"i":["a ","b ","a","b. "]},"Virtual lab deploys, in the hosts controlled by virtual lab, a network named the \u201cnone network\u201d so named because there is a group of ports in the VSwitch for the none network, but this group of ports are not configured to connect to an actual network. When deploying a configuration, the VMs are attached to the none network in the case of a CLN, or to a managed shared network in the case of shared networks. This guarantees that the VMs are instantiated in one of the hosts managed by virtual lab because the none network is only instantiated in the hosts managed by virtual lab. Further, the VMs connected to the none network cannot migrate to a virtual infrastructure host not associated with the virtual lab server because the none network is not implemented in other hosts. In the embodiment shown in , the none network is implanted in VSwitch  in Host . Ports  are reserved for the none network by VSwitch .","Additionally, the none network can ease the work a user must do to deploy a configuration. Templates or VMs that do not have access to a network, either because of inadequate access rights or because of the lack of an appropriate network to select at the time of creation, may connect to the none network. The user can later on add connectivity to another virtual lab network. Further, the none network can be used by the user as a default network for VMs and avoid having to configure a network in some cases.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 10","b":["120","1","122","130","2","124","126","136","120","128","126","136","128","136","128","120","120","128","136"]},"VM  does have a path to VM  via gateway  in network . Configuring VM  with NIC   as the primary NIC causes packets sent to remote networks to be sent through a gateway in the network connected to the primary NIC. Configuring the primary NIC in virtual lab allows the user to specify where to get the default gateway and Domain Name System (DNS) information. The user specifies the primary NIC and the gateway and DNS servers set on that network are used as the default for the VM. When configuring network settings in the VM, a single default route to the gateway chosen is added in the routing tables of the VM.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 11","FIG. 11"]},"Further, when a NIC is configured with a static IP, virtual lab configures that static IP the first time the VM is deployed and also during subsequent deployments. That is, the VM will always use the configured static IP address. When the NIC is configured to use Dynamic Host Configuration Protocol (DHCP), the NIC will use DCHP during all deployments, which may result in the same or in a different IP address each time the VM is deployed.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 12","FIG. 8"]},"The screen capture shown in  shows a list of the hosts managed by virtual lab. For each host, a pull down menu allows the user to select a virtual switch to bind the virtual lab shared network. The pull down menu lists the host's virtual switches that are connected to real lab networks.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 13","b":["150","152"]},"If the result of the check performed in operation  is negative then the method flows back to operation , and to operation  otherwise. During operation , the NICs that are new or that have changed are configured according to the current network configuration settings. After operation , a customization packet is created by virtual lab in operation . In one embodiment, the customization packet is a script to be executed by a guest operating system in each VM to configure the VNICs in the VM. The customization packet is pushed to the host in operation  and then the VM is powered-on in the virtual infrastructure in operation . Once the VM is powered-on, the virtual infrastructure runs the customization packet in the GOS of the VM during operation . In operation , the system waits for a request to un-deploy the configuration before ending the process.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 14","FIGS. 2A-B","FIG. 2C"],"b":["1400","1402","1402","1404","8","9","12","1406","1408","1204"]},"Once the virtual infrastructure receives the instructions sent in operation , the virtual infrastructure performs operations , , and . In operation , the VMs of the configuration are instantiated in the virtual infrastructure. The VMs are instantiated in hosts monitored by a virtual lab server. In one embodiment, virtual lab uses the \u201cnone\u201d network to make the VMs be instantiated in the hosts managed by virtual lab, as previously discussed in reference to . In operation , the virtual infrastructure instantiates the CLNs in the hosts where the VMs have been instantiated, such that only VMs from the configuration can connect to the instantiated CLNs. In operation , virtual routers can also be created if required by the network configuration. In operation  the VNICs are connected to the corresponding virtual lab network. In addition, the customization instructions transmitted in operation  are executed by the GOS in each VM to configure the VM VNICs.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 15","FIG. 13"],"b":["1104","1110","1106","1112","1114","1108","1106","1114","1108","1114","1130","1132","1104","1104","1106","1112","1114","1110","1118","1122","1124","1134"]},"Display  is configured to display the user interfaces described herein. Keyboard , cursor control , removable media device , and other peripherals are coupled to I\/O interface  in order to communicate information in command selections to CPU . It should be appreciated that data to and from external devices may be communicated through I\/O interface .","Embodiments of the present invention may be practiced with various computer system configurations including hand-held devices, microprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers and the like. The invention can also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a network.","With the above embodiments in mind, it should be understood that the invention can employ various computer-implemented operations involving data stored in computer systems. These operations are those requiring physical manipulation of physical quantities. Any of the operations described herein that form part of the invention are useful machine operations. The invention also relates to a device or an apparatus for performing these operations. The apparatus may be specially constructed for the required purpose, such as a special purpose computer. When defined as a special purpose computer, the computer can also perform other processing, program execution or routines that are not part of the special purpose, while still being capable of operating for the special purpose. Alternatively, the operations may be processed by a general purpose computer selectively activated or configured by one or more computer programs stored in the computer memory, cache, or obtained over a network. When data is obtained over a network the data maybe processed by other computers on the network, e.g., a cloud of computing resources.","The embodiments of the present invention can also be defined as a machine that transforms data from one state to another state. The transformed data can be saved to storage and then manipulated by a processor. The processor thus transforms the data from one thing to another. Still further, the methods can be processed by one or more machines or processors that can be connected over a network. The machines can also be virtualized to provide physical access to storage and processing power to one or more users, servers, or clients. Thus, the virtualized system should be considered a machine that can operate as one or more general purpose machines or be configured as a special purpose machine. Each machine, or virtual representation of a machine, can transform data from one state or thing to another, and can also process data, save data to storage, display the result, or communicate the result to another machine.","The invention can also be embodied as computer readable code on a computer readable medium. The computer readable medium is any data storage device that can store data, which can be thereafter be read by a computer system. Examples of the computer readable medium include hard drives, network attached storage (NAS), read-only memory, random-access memory, CD-ROMs, CD-Rs, CD-RWs, magnetic tapes and other optical and non-optical data storage devices. The computer readable medium can include computer readable tangible medium distributed over a network-coupled computer system so that the computer readable code is stored and executed in a distributed fashion.","Although the method operations were described in a specific order, it should be understood that other housekeeping operations may be performed in between operations, or operations may be adjusted so that they occur at slightly different times, or may be distributed in a system which allows the occurrence of the processing operations at various intervals associated with the processing, as long as the processing of the overlay operations are performed in the desired way.","Although the foregoing invention has been described in some detail for purposes of clarity of understanding, it will be apparent that certain changes and modifications can be practiced within the scope of the appended claims. Accordingly, the present embodiments are to be considered as illustrative and not restrictive, and the invention is not to be limited to the details given herein, but may be modified within the scope and equivalents of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIGS. 4A-E"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 15"}]},"DETDESC":[{},{}]}
