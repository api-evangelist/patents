---
title: Providing on-demand capabilities using virtual machines and clustering processes
abstract: Techniques are provided for on-demand resource allocation in a cluster having at least one initial virtual machine. It is determined that resource requirements have changed. At least one new virtual machine is created on at least one physical machine based on the changed resource requirements. The at least one new virtual machine is added to the initial cluster. Transactions for the at least one initial virtual machine are failed over to the at least one new virtual machine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07577959&OS=07577959&RS=07577959
owner: International Business Machines Corporation
number: 07577959
owner_city: Armonk
owner_country: US
publication_date: 20040624
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE IMPLEMENTATIONS","Additional Implementation Details"],"p":["1. Field","Implementations of the invention relate to providing on-demand capabilities using virtual machines and clustering processes.","2. Description of the Related Art","Mainframe computers are large computers that include multiple processors and are capable of supporting many users simultaneously. Mainframe computers have the ability to dynamically allocate resources to different workloads. The term workload may be described as a set of transactions that a computer processes (e.g., database transactions or e-mail transactions). For example, if one processor fails, a mainframe computer is able to automatically restart a workload that had been executing on the failed processor on a new processor. Similarly, if the workload exceeds a first processor's capabilities, a mainframe computer is able to add a second processor for that workload.","However, there is a need in the art for on-demand processing on, for example, a server computer. On-demand processing may be described as adaptive computing, autonomic computing or utility computing. With on-demand processing, a system adapts itself to meet the requirements of a changing workload, usually without human intervention.","Provided are an article of manufacture, system, and method for on-demand resource allocation in a cluster having at least one initial virtual machine. It is determined that resource requirements have changed. At least one new virtual machine is created on at least one physical machine based on the changed resource requirements. The at least one new virtual machine is added to the initial cluster. Transactions for the at least one initial virtual machine are failed over to the at least one new virtual machine.","In the following description, reference is made to the accompanying drawings which form a part hereof and which illustrate several implementations of the invention. It is understood that other implementations may be utilized and structural and operational changes may be made without departing from the scope of implementations of the invention.","Implementations of the invention simulate the on-demand processing that mainframe computers provide with an on-demand system that uses virtual machine software (e.g., VMWare ESX Server software available from VMWare, Inc.) and clustering software (e.g., Microsoft\u00ae Cluster Server software available from Microsoft Corporation).",{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 1","FIG. 1"],"b":["116","118","140","120","100","100","116","100","100","118"],"i":["a ","b ","c ","d "]},"Each of the virtual servers ,  may perform a different function. For example, virtual server  may provide e-mail services, while virtual server  may provide payroll services. Client computers that wish to perform e-mail functions connect to virtual server . If a client computer . . . wanted to perform payroll functions as well or instead, the client computer . . . would connect to virtual server  as well or instead.","Each client computer , , , may comprise any computing device known in the art, such as a server, mainframe, workstation, personal computer, hand held computer, laptop telephony device, network appliance, etc. In certain implementations, each client computer , , , may include system memory , , , , respectively, which may be implemented in volatile and\/or non-volatile devices. One or more client applications , , , may reside in system memory , , , , respectively, and may be executed on a processor (e.g., a Central Processing Unit (not shown)) at each respective client computer , , , ","The server computer  includes system memory , which may be implemented in volatile and\/or non-volatile devices. Virtual machine , virtual machine , virtual machine , and virtual machine  are created on server computer  by virtual machine process . Each virtual machine , , ,  includes a clustering process , , , , respectively. Additionally, an on-demand system  resides in system memory  and may be executed to create additional virtual machines and\/or clusters. The on-demand system  also provides other capabilities, such as, for example, determining that resource requirements have changed.","The virtual machine process  is capable of running numerous virtual machines , , ,  at a single server computer .","Each virtual machine , , ,  may have its own operating system and IP address, and each virtual machine , , ,  appears to be a separate physical machine to, for example, the client computers , , , . Each virtual machine , , ,  is capable of emulating a complete hardware system having, for example, a hard drive, a network card, etc., although the virtual machines virtual machine , , ,  may actually be sharing components of the hardware system, such as the hard drive. The term physical machine may be described as any type of computing device, such as an appliance, a server computer, or a mainframe computer.","A cluster may be described as multiple physical and\/or virtual machines acting together as one physical machine. Each physical and\/or virtual machine may be referred to as a node. With implementations of the invention, a cluster is created, with each virtual machine , , ,  being a node in the cluster.","Each clustering process , , ,  manages cluster functions, such as node membership in the cluster, failover processing, and load balancing. For example, if a processor on a virtual machine , , ,  fails, that processor's workload is automatically restarted on a new virtual machine , , ,  (e.g., a clustering process , , ,  on the new virtual machine may intercept transactions to the failed virtual machine). Each clustering process , , ,  also has the ability to interact with an operating system. Each clustering process , , ,  hides the cluster from the client computers , , , so that the client computers , , , each thinks that the one or more virtual machines are a single physical machine.","The server computer  provides the client computers , , , with access to data in one or more data stores . The data stores  may each include an array of storage devices, such as Direct Access Storage Devices (DASDs), Just a Bunch of Disks (JBOD), Redundant Array of Independent Disks (RAID), a virtualization device, etc.","The on-demand system  is capable of automatically creating a cluster having a virtual machine with more or fewer resources (e.g., CPUs, memory, etc.) and fail a workload over to the new virtual machine. For example, a company may wish to have a virtual machine with more resources created for a peak period, such as during the Christmas season or on Mother's day. In , virtual server  may be created with virtual machine . Then, during peak periods, virtual machine  may be created with more resources. Then, the processing performed by virtual machine  may be failed over to virtual machine  during the peak period. After the peak period is over, the on-demand system  is capable of automatically creating another node consisting of a virtual machine with fewer resources to reduce the number of processors that perform the workload. In certain implementations, once a cluster is created and put into production, the cluster is not deleted, because client computers may be connecting to the cluster. However, nodes within the cluster may be added or removed, and this is done transparently to the client computers. In certain implementations, the failover may be accomplished in a few seconds to a few minutes, depending on the size of the workload. Also, in , a virtual server  may be created with virtual machine  that performs processing independently of other virtual machines , , . Also, virtual machine  may be created as an additional resource (e.g., to be added to a cluster as needed to handle workloads). Moreover, separate virtual machines may be created in a new cluster, with a new IP address.","In certain implementations, a client computer , , , connects to a virtual cluster IP address of a cluster. The virtual cluster IP address then redirects a workload to an appropriate virtual machine , , ,  (i.e., a node in the cluster). If that virtual machine , , ,  should fail, a different virtual machine , , ,  is able to take over and traffic from the client computer , , , is redirected to the new virtual machine , , , . When this technique is combined with the ability of the virtual machine process  to dynamically allocate resources to different virtual machines , , , , mainframe-like on-demand capabilities may be simulated.","In certain implementations, the cluster is extended via geographically dispersed clustering with a clustering process to simulate mainframe software-like functions. One example of mainframe software is a Geographically Dispersed Parallel Sysplex (GDPS) software available from International Business Machines Corporation.  illustrates a computing environment with geographically dispersed clusters in which certain implementations of the invention are implemented. For example, in , client computers , are connected to a virtual server , which is formed by server computer  and server computer . The server computers ,  may be geographically dispersed. A first cluster is created at server computer  with virtual machine , which includes clustering process . A second cluster is created at server computer  with virtual machine , which includes clustering process . Each server computer ,  also includes a virtual machine process , , respectively, an on-demand system , , respectively, and system memory , , respectively.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 3A and 3B","b":["150","150","150"]},"In , control begins at block  with the on-demand system  receiving initial resource requirements from a user via a user interface at, for example, installation time (e.g., installation of a business system at the server computer  for which the on-demand system  may monitor and change resources). The user interface may be, for example, a graphical user interface, a command line interface, or an application programming interface. The resource requirements may indicate, for example, that a new partition that contains two processors and two gigabytes (GB) of memory is to be created. In block , the on-demand system  creates a first virtual machine by invoking a virtual machine process. The first virtual machine is created to match the resource requirements provided by the user. In block , a clustering process is installed on the first virtual machine and creates a cluster using the clustering process. In certain implementations, the clustering process is automatically installed by the on-demand system. In certain implementations, the clustering process is installed by a user, such as a system administrator. In block , the first virtual machine is automatically added by the clustering process as a node to the cluster when the clustering process is installed on the first virtual machine. The cluster has a virtual cluster IP address. At this time, the virtual cluster IP address is available to client computers, and client computers may submit transactions to the virtual cluster IP address.","In block , the on-demand system  determines that the resource requirements have changed (e.g., either increased or decreased). For example, the processing of block  may occur after the physical machine has been in production for some time. In certain implementations, the on-demand system  recognizes business policies and is able to compare current resources with the business policies to determine whether to increase or decrease resource allocations. For example, the on-demand system  is capable of recognizing that a virtual machine is rapidly approaching peak capability and may automatically allocate new resources to the virtual machine, if a review of the business policy and resource monitoring determines that this is desirable. As another example, a business policy may state that virtual machines should be allocated extra resources during the months of December and May, and the on-demand system  automatically performs this allocation in the specified months. In certain implementations, a user provides alternate resource requirements via the user interface provided by the on-demand system. For example, a user may want to increase resource requirements to four processors and four gigabytes of memory in the existing partition. In some situations, the user may want to increase resource requirements in anticipation of a peak period, rather than having the on-demand system  perform this operation after entering or during the peak period.","In block , the on-demand system  creates a second virtual machine having fewer or more resources (based on the determination in block ) by invoking a virtual machine process. The second virtual machine may be created either on the same physical machine as the first virtual machine (e.g., where the second virtual machine has different resources than what is available on the first virtual machine) or on a different physical machine (e.g., one that is geographically distant from the first virtual machine or one that is not geographically distant from the first virtual machine). In block , a clustering process is installed on the second virtual machine (e.g., by the on-demand system  or by a user). In block , the on-demand system  adds the second virtual machine to the existing cluster that includes the first virtual machine by invoking the installed clustering processes on the first and second virtual machines. For example, the on-demand system  notifies the clustering process on the first virtual machine that the second virtual machine has been added.","In block , the on-demand system  causes transactions to the first virtual machine to failover to the second machine. In certain implementations, the on-demand system  may cause the failover by invoking the failover capability of the clustering process, or by shutting down the first virtual machine, which will cause the failover to occur automatically. In certain implementations, rather than invoking the failover capability of the clustering process, or by shutting down the first virtual machine, the on-demand system  performs a resource move. To perform a resource move for an application process, the on-demand system  shuts down the application process on the first virtual machine and restarts that application process on the second virtual machine. This is done non-disruptively by enabling client computers that connect to the virtual cluster IP address of the existing cluster to submit transactions to the virtual cluster IP address that automatically fail over to the second virtual machine. In particular, the clustering process on the second virtual machine may intercept transactions to the first virtual machine. Additionally, the resources of the first virtual machine are made available for future allocation to another virtual machine. Additionally, in certain implementations, increased or decreased resource usage may be logged and\/or sent to a user, such as a system administrator, for billing or other purposes.","The logic of  illustrate certain implementations, but the logic may be varied without departing from the scope of the invention. For example, in certain implementations, multiple virtual machines are initially created (block ). Then, a cluster that includes the multiple virtual machines is created (block ). Then, the clustering process on each of the virtual machines in the cluster is able to balance the workload (e.g., if one virtual machine receives a transaction and is busy, the clustering process on that virtual machine may forward the transaction to another virtual machine that is not busy). Additionally, one or more additional virtual machines may be created with a different number of resources (e.g., fewer or more than the resources available at the initially created virtual machines) (block ). Next, processing may be failed over to the newly created one or more additional virtual machines (block ).","In certain implementations, when transactions are failed over from multiple virtual machines to multiple virtual machines, a user may indicate a preference as to which virtual machine's transactions are to be failed over to which other virtual machine's transactions. For example, if initially virtual machines A and B are created, then virtual machines C and D are created, a user may specify that transactions for virtual machine A are to fail over to virtual machine C and that transactions for virtual machine B are to fail over to virtual machine D.","In certain implementations, a cluster may be geographically distributed. For example, initially, a virtual machine A may be created at physical machine A, while a virtual machine B is created at physical machine B, where physical machines A and B are at different geographic locations. Then, one cluster is created to include both virtual machine A and virtual machine B. Then, when resource requirements change, at least one virtual machine is created at one of the physical machines A, B. For example, a new virtual machine C may be created at physical machine A; new virtual machines C and D may be created at physical machines A and B, respectively; or virtual machines C and D may be created at physical machine B. In any case the one or more newly created virtual machines are added to the existing cluster, and transactions from the initially created virtual machines (A and B) are failed over to the newly created virtual machines.","In certain implementations, different virtual machines may be on different physical machines that are not geographically distributed. This may be used, for example, to provide additional hardware redundancy for higher availability, or to migrate a workload from a first physical machine to a second physical machine.","Microsoft is a registered trademark of Microsoft Corporation in the United States and\/or other countries. VMWare is a registered trademark of VMWare, Inc. in the United States and\/or other countries.","The described implementations may be implemented as a method, apparatus or article of manufacture using programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof. The terms \u201carticle of manufacture\u201d and \u201ccircuitry\u201d as used herein refer to a state machine, code or logic implemented in hardware logic (e.g., an integrated circuit chip, Programmable Gate Array (PGA), Application Specific Integrated Circuit (ASIC), etc.) or a computer readable medium, such as magnetic storage medium (e.g., hard disk drives, floppy disks, tape, etc.), optical storage (CD-ROMs, optical disks, etc.), volatile and non-volatile memory devices (e.g., EEPROMs, ROMs, PROMs, RAMs, DRAMs, SRAMs, firmware, programmable logic, etc.). Code in the computer readable medium is accessed and executed by a processor. When the code or logic is executed by a processor, the circuitry may include the medium including the code or logic as well as the processor that executes the code loaded from the medium. The code in which embodiments are implemented may further be accessible through a transmission media or from a server over a network. In such cases, the article of manufacture in which the code is implemented may comprise a transmission media, such as a network transmission line, wireless transmission media, signals propagating through space, radio waves, infrared signals, etc. Thus, the \u201carticle of manufacture\u201d may comprise the medium in which the code is embodied. Additionally, the \u201carticle of manufacture\u201d may comprise a combination of hardware and software components in which the code is embodied, processed, and executed. Of course, those skilled in the art will recognize that many modifications may be made to this configuration, and that the article of manufacture may comprise any information bearing medium known in the art.","The logic of  describes specific operations occurring in a particular order. In alternative implementations, certain of the logic operations may be performed in a different order, modified or removed. Moreover, operations may be added to the above described logic and still conform to the described implementations. Further, operations described herein may occur sequentially or certain operations may be processed in parallel, or operations described as performed by a single process may be performed by distributed processes.","The illustrated logic of  may be implemented in software, hardware, programmable and non-programmable gate array logic or in some combination of hardware, software, or gate array logic.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4","b":["400","400","400","402","404","410","405","404","410","406","410","404","402","408","412","402","414","402","400"]},"The computer architecture  may comprise any computing device known in the art, such as a mainframe, server, personal computer, workstation, laptop, handheld computer, telephony device, network appliance, virtualization device, storage controller, etc. Any processor  and operating system  known in the art may be used.","The foregoing description of implementations of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the implementations of the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the implementations of the invention be limited not by this detailed description, but rather by the claims appended hereto. The above specification, examples and data provide a complete description of the manufacture and use of the composition of the implementations of the invention. Since many implementations of the invention can be made without departing from the spirit and scope of the implementations of the invention, the implementations of the invention reside in the claims hereinafter appended or any subsequently-filed claims, and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
