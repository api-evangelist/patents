---
title: Bi-directional communication between redundant storage controllers
abstract: Technologies are described herein for providing bi-directional communication between redundant storage controllers in a storage system. One of the storage controllers operates in the initiator role over a point-to-point communication channel connecting the controllers, while the other operates in the target role. To transmit a function call from a storage module executing on the initiator storage controller to a corresponding module executing on the target storage controller, the initiator storage controller issues a write command to the second storage controller over the point-to-point communication channel. In order to transmit a function call from a storage module executing on the target storage controller to a corresponding module executing on the initiator storage controller, the target storage controller responds to a pending anticipatory read command sent from the initiator storage controller over the point-to-point communication channel.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08650328&OS=08650328&RS=08650328
owner: American Megatrends, Inc.
number: 08650328
owner_city: Norcross
owner_country: US
publication_date: 20091105
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of U.S. provisional patent application No. 61\/122,576 filed on Dec. 15, 2008, entitled \u201cMaintaining Data and Metadata Cache Coherency in Active\/Active Dual Redundant Storage Servers,\u201d which is expressly incorporated herein by reference in its entirety.","Clustered storage systems allow multiple storage computers and other storage devices to work together in a coherent storage system. Clustered storage systems utilize various configurations of multiple storage controllers, physical storage devices, processors, memory, and other resources to increase the performance of the storage system as well as provide redundancy and high availability.","One such configuration is a high availability cluster with two redundant storage controllers: a primary controller and a secondary controller, which share a set of physical storage devices, such as a disk array. In this configuration, the primary controller may field input\/output (\u201cI\/O\u201d) operations against the array while the secondary controller operates as a \u201chot-spare\u201d to the primary controller. Components or modules of the storage stack on the primary controller may share data and metadata regarding active transactions, logical volumes, etc., with their counterparts on the secondary controller in order to keep the secondary controller in the hot-spare state. In the event of a failure of the primary controller, the secondary controller has all the information required to take over servicing I\/Os against the array. Technologies such multipath I\/O (\u201cMPIO\u201d) may make such node-failovers transparent to the initiators. However, in such a configuration, the additional processing power of the secondary controller generally goes unutilized while the controller is in the hot-spare state.","Another configuration may involve the two storage controllers each fielding I\/O operations for a portion of the disk array. The disks of the array may be logically grouped into two storage groups, with each storage controller acting as a primary controller for one of the storage groups, while also acting as a hot-spare to the other storage controller for the other storage group. In this configuration, because each controller acts as both a primary controller and a secondary controller or hot-spare, the components of the storage stack on the storage controllers may be required to both send and receive data and metadata with their counterparts on the other controller.","It is with respect to these considerations and others that the disclosure made herein is presented.","Technologies are described herein for providing bi-directional communication between redundant storage controllers in a storage device. Through the utilization of the technologies and concepts presented herein, storage modules executing on the storage controllers may communicate with their counterparts on the other controller over a point-to-point communication channel. One of the storage controllers operates in the initiator role over the point-to-point communication channel, and the other operates in the target role.","According to one embodiment, the initiator storage controller sends an anticipatory read command to the target storage controller. In order to transmit a function call from a storage module executing on the initiator storage controller to a corresponding module executing on the target storage controller, the initiator storage controller issues a write command to the second storage controller over the point-to-point communication channel. In order to transmit a function call from a storage module executing on the target storage controller to a corresponding module executing on the initiator storage controller, the target storage controller responds to the anticipatory read command sent from the initiator storage controller over the point-to-point communication channel.","It should be appreciated that the above-described subject matter may also be implemented as a computer-controlled apparatus, a computer process, a computing system, or an article of manufacture, such as a computer-readable storage medium. These and various other features will be apparent from a reading of the following Detailed Description and a review of the associated drawings.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended that this Summary be used to limit the scope of the claimed subject matter. Furthermore, the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.","The following detailed description is directed to technologies for providing bi-directional communication between redundant storage controllers in a storage system. While the subject matter described herein is presented in the general context of program modules that execute on one or more storage controllers in a storage system, those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally, program modules include routines, programs, components, data structures, and other types of structures that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the subject matter described herein may be practiced with other computer system configurations, including multiprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers, special-purposed hardware devices, network appliances, and the like. The embodiments described herein may also be practiced in distributed computing environments, where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 1","FIG. 1"],"b":["100","102","102","102","102","104","106","104","102"]},"The CPUs  perform the necessary operations by transitioning from one discrete, physical state to the next through the manipulation of switching elements that differentiate between and change these states. Switching elements may generally include electronic circuits that maintain one of two binary states, such as flip-flops, and electronic circuits that provide an output state based on the logical combination of the states of one or more other switching elements, such as logic gates. These basic switching elements may be combined to create more complex logic circuits, including registers, adders-subtractors, arithmetic logic units, floating-point units, and the like.","The chipset  provides an interface between the CPUs  and the remainder of the storage controller . The chipset  also provides an interface to a random access memory (\u201cRAM\u201d)  used as the main memory in the storage controller . The chipset  also includes functionality for providing network connectivity through a network controller , such as a gigabit Ethernet adapter. The network controller  is capable of connecting the storage controllers A, B to each other as well as to other client computers  acting as initiators of I\/O operations over a network . The network  may be an Ethernet or Gigabyte Ethernet LAN, a fiber ring, a fiber star, wireless, optical, satellite, a WAN, a MAN, or any other network technology, topology, protocol, or combination thereof.","According to embodiments, each storage controller A, B is connected to a number of physical storage devices, such as physical disks A-E (also referred to herein as physical disks ) shown in . The physical disks  provide the data storage capacity required for the storage controller  to store data and service I\/O operations initiated by the client computers  over the network . A disk controller  allows the storage controller  to communicate with the physical disks  connected to the storage controller. According to one embodiment, the disk controller  may interface with the physical disks  through a serial attached SCSI (\u201cSAS\u201d) interface. In other embodiments, the disk controller  may interface with the physical disks  utilizing a serial advanced technology attachment (\u201cSATA\u201d) interface, a fiber channel (\u201cFC\u201d) interface, or other standard interface for physically connecting and transferring data between computers and physical storage devices.","According to embodiments, the physical disks  may be connected to the storage controller  through a bus  that allows the disk controller  to communicate with the disks. In one embodiment, the physical and electrical structure of the bus  may be based upon the storage bridge bay (\u201cSBB\u201d) specification. The SBB specification defines mechanical, electrical, and low-level enclosure management requirements for a single enclosure that supports the connection of multiple storage controllers  as well as multiple physical disks  from a variety of hardware and system vendors. The SBB mid-plane provides the bus  that allows multiple storage controllers A, B to be connected to and communicate with the physical disks  concurrently.","In addition, the SBB mid-plane bus  provides facilitates for the storage controllers A, B to communicate with each other via the SAS, SATA, or FC interface implemented on the bus. According to embodiments, the disk controller  is capable of utilizing multiple point-to-point communication channels, or ports A, B, to communicate with other devices over the SBB bus . For example, the disk controller  may utilize one or more ports A to communicate with each physical disk  across the bus , while utilizing a separate port B to communicate across the bus with the other storage controller . As will be described in more detail below, the disk controller  may only be capable as operating as either an \u201cinitiator\u201d or a \u201ctarget\u201d in regard to each port A, B, but may be capable of operating as an initiator on one port A while simultaneously operating as a target on another port B.","The storage controller  may store data on the physical disks  by transforming the physical state of the disks to reflect the information being stored. The specific transformation of physical state may depend on various factors, in different implementations of this description. Examples of such factors may include, but are not limited to, the technology used to implement the physical disks , whether the physical disks are characterized as primary or secondary storage, and the like. For example, the storage controller  may store data to the physical disks  by issuing instructions to the disk controller  to alter the magnetic characteristics of particular locations within the physical disk drives. These transformations may also include altering the physical features or characteristics of other media types, including altering the reflective or refractive characteristics of a particular location in an optical storage device, or modifying the electrical characteristics of a particular capacitor, transistor, or other discrete component in a solid-state storage device. Other transformations of physical media are possible without departing from the scope and spirit of the present description, with the foregoing examples provided only to facilitate this discussion. The storage controller  may further read information from the physical disks  by detecting the physical states or characteristics of one or more particular locations within the devices.","In addition to the physical disks  described above, the storage controller  may have access to other computer-readable storage medium to store and retrieve information, such as program modules, data structures, or other data. It should be appreciated by those skilled in the art that computer-readable storage media can be any available media that can be accessed by the storage controller . By way of example, and not limitation, computer-readable storage media may include volatile and non-volatile, removable and non-removable media implemented in any method or technology. Computer-readable storage media includes, but is not limited to, RAM, ROM, EPROM, EEPROM, flash memory or other solid-state memory technology, CD-ROM, DVD, HD-DVD, BLU-RAY, or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the storage controller .","The computer-readable storage media may store an operating system (not shown) utilized to control the operation of the storage controller . According to one embodiment, the operating system comprises the LINUX operating system. According to another embodiment, the operating system comprises the WINDOWS\u00ae SERVER operating system from MICROSOFT Corporation of Redmond, Wash. According to further embodiments, the operating system may comprise the UNIX or SOLARIS operating systems. It should be appreciated that other operating systems may also be utilized.","The computer-readable storage media may store other system or application programs and data utilized by the storage controller . In one embodiment, the computer-readable storage medium may be encoded with computer-executable instructions that, when loaded into the storage controller , may transform the computer system from a general-purpose computing system into special-purpose computer capable of implementing the embodiments described herein. The computer-executable instructions may be encoded on the computer-readable storage medium by altering the electrical, optical, magnetic, or other physical characteristics of particular locations within the media. These computer-executable instructions transform the storage controller  by specifying how the CPUs  transitions between states, as described above. According to one embodiment, the storage controller  may have access to computer-readable storage media storing computer-executable instructions that, when executed by the computer system, perform the routines for providing bi-directional communication between redundant storage controllers in a storage system, described below in regard to .","The chipset  may also provide an interface to a computer-readable storage medium such as a ROM  or NVRAM for storing a firmware that includes program code containing the basic routines that help to startup the storage controller  and to transfer information between elements within the storage controller. The ROM  or NVRAM may also store other software components necessary for the operation of the storage controller  in accordance with the embodiments described herein. It will be appreciated that the storage controller  may not include all of the components shown in , may include other components that are not explicitly shown in , or may utilize an architecture completely different than that shown in .",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2","b":["102","102","102","112","120","120","122","202","202","202","102","102","202","202","102","120","120","202","102","120","120","202"]},"The physical disks  in each of the logical storage groups A, B may be organized into a redundant array of inexpensive disks (\u201cRAID\u201d), such as a RAID 5 array. It will be appreciated, however, that the embodiments described herein may be utilized with storage controllers  connected to storage groups A, B organized at other standard RAID levels, and that the RAID level in each of the storage groups need not be the same. It will be further appreciated that the physical disks  within each of the logical storage groups A, B may be configured in other configurations beyond the RAID configurations described herein.","The storage controller  implements a storage stack  which contains storage modules and interfaces allowing the storage controller to process I\/O operations initiated from the client computers  against the physical disks  in the associated logical storage group . The storage controller  accesses the physical disks  through a RAID layer . The RAID layer  abstracts the organization of the physical disks  in the storage group  and presents a logical block-level interface to higher layers in the storage stack . The RAID layer  may be implemented on the storage controller  in software, hardware, or a combination thereof. In one embodiment, the RAID layer is provided by the MD kernel extension provided by the LINUX operating system. In another embodiment, the RAID layer  may be provided by a MEGARAID\u00ae storage adapter from LSI Corporation of Milpitas, Calif., installed in the storage controller . It will be appreciated that the RAID layer may be implemented by software and\/or hardware components from a variety of vendors beyond those described herein.","A volume module  utilizes the block-level interface provided by the RAID layer  to manage the storage provided by the storage group  and service I\/O operations initiated by the client computers  across the network . The volume module  may be implemented on the storage controller  in software, hardware, or a combination thereof. The volume module  may implement a variety of storage management functions, such as volume virtualization, thin provisioning, snapshots, locking, data replication, etc.","Volume virtualization provides the facility to create and manage multiple, logical volumes in the storage group , as well as expand a logical volume across multiple storage devices within a storage cluster. Thin provisioning provides for the allocation of physical capacity of the storage group  to logical volumes on an as-needed basis. Snapshots provide functionality for creating and utilizing point-in-time snapshots of the contents of logical storage volumes. The locking functionality allows for synchronizing I\/O operations within the storage controller  or across devices within the storage cluster. Data replication provides functionality for replicating data within the storage controller  or across storage devices within a storage cluster.","A cache module  may be implemented above the volume module  in the storage stack . The cache module  caches data and metadata regarding active read and write I\/O operations initiated against the storage group . The cache module  may be implemented on the storage controller  in software, hardware, or a combination thereof. In one embodiment, the cache module  may be the LINUX cache provided by the LINUX operating system.","A protocol layer  may also be provided by the storage stack  that allows the client computers  to access the data stored in the storage group  across the network . For example, the storage stack  may implement a storage area network (\u201cSAN\u201d) path that utilizes an internet small computer systems interface (\u201ciSCSI\u201d) driver at the protocol layer . A network attached storage (\u201cNAS\u201d) path may also be provided that utilizes the XFS high-performance journaling file system at the protocol layer. The storage controller  may expose logical storage volumes through a block-level interface via the SAN path, while exposing fileshares through a file-level interface via the NAS path. The protocol layer  may be implemented on the storage controller  in software, hardware, or a combination thereof.","According to embodiments, redundancy is provided in the active-active configuration of the storage system by having each of the storage controllers A, B operate as both the primary controller for its associated storage group A, B and a secondary controller or \u201chot spare\u201d for the other storage controller. For example, as seen in , storage controller A may act as the primary controller for storage group A while also acting as a hot spare for storage controller B and storage group B. Similarly, storage controller B may act as the primary controller for storage group B while also acting as a hot spare for storage controller A and storage group A. If a primary storage controller  fails, the hot spare controller can take over servicing I\/O operations for the associated storage group . Technologies such multipath I\/O (\u201cMPIO\u201d) may be implemented by the storage stack  to make such controller-failovers transparent to the client computers  initiating I\/O operations.","In order for each storage controller  to function as a secondary controller or hot spare for the other, the various storage modules in the storage stack  of the primary controller may be required to communicate data and metadata regarding active I\/O operations to their counterparts in the secondary controller. For example, the cache module  on the primary controller A for the storage group A may periodically synchronize active cached items with the cache module  on the secondary controller B. The volume module  on the primary controller A may keep allocation tables and other metadata regarding logical volumes residing on the storage group A current on the secondary controller B. Or, the RAID layer  on the primary controller A may maintain a table of outstanding writes on the secondary controller B in order for the controller to be able to perform a consistency check if the case of a failure of the primary controller and recovery by the secondary controller.","It will be appreciated that, because each storage controller  is acting as both the primary controller for the associated storage group  as well as the secondary controller for the opposite storage group, the communication between storage modules and the storage controllers must be bi-directional. In other words, the modules on the primary controller A for storage group A must be able to write data and metadata to the modules of its secondary controller B, and the modules on the primary controller B for storage group B must be able to write data and metadata to the modules of its secondary controller A.","The communication of data and metadata between the storage modules of the separate storage controllers  may be facilitated by an inter-controller communication module (\u201cICM\u201d)  executing on each storage controller . The ICM  may be implemented on the storage controller  in software, hardware, or a combination thereof. In one embodiment, the ICM  on each storage controller  communicates with the corresponding controller through the disk controller  via a port B provided by the bus  connecting the storage controllers. As described above regarding , the bus port B may provide a point-to-point communication channel  between the storage controllers  utilizing the SAS, SATA, or FC interface implemented on the bus .","Utilizing the bus port B for inter-controller communications may provide benefits over other connections that may exist between the storage controllers , such as the network . For example the bus port B may provide greater bandwidth (12 GB for a SAS port) compared to typical network connection (1 GB for an Ethernet connection). In addition, the software stack for communicating over the bus port B is already implemented via the disk controller  and may be smaller and more efficient than a typical TCP\/IP stack utilized to communicate across the network .","However, the SAS, SATA, or FC interface implemented on the bus  may not provide for bi-directional communication through the bus port B, and may require that a storage controller  operate in either an \u201cinitiator\u201d role or a \u201ctarget\u201d role while communicating over the bus . For example, in the SAS protocol, a SAS initiator may execute SCSI commands against a SAS target, but the target is not able to initiate commands against the initiator. While some implementations of the bus  may allow the storage controller  to operate in both roles simultaneously, the hardware used in these \u201cdual role\u201d implementations may be more complex and may not provide as stable an environment as the traditional and more widely used single-mode hardware.","The embodiments described below provide a method for implementing bi-directional communication between the two storage controllers  in the simpler and more stable single-mode bus implementations. In these embodiments, the ICM  on one of the storage controllers A may operate in the initiator role, while the ICM on the other storage controller B may operate in the target role while performing inter-controller communication over the point-to-point communication channel  through the bus port B.","According to embodiments, in order to provide bi-directional communication between the storage modules of the two storage controllers , the ICM  implements one routine for communicating from initiator to target and another routine for communicating from target to initiator, as will be described in detail below in regard to . In one embodiment, the two routines, as well as the operating role of the ICM , are abstracted from the communicating storage modules, which utilize an application programming interface (\u201cAPI\u201d)  provided by the ICM to communicate with the counterpart module. The storage modules utilize the same function call in the API  to communicate with a remote module regardless of whether the ICM  on the storage controller  is operating in the initiator role or the target role.","Turning now to , additional details will be provided regarding the embodiments presented herein for providing bi-directional communication between redundant storage controllers in a storage system. It should be appreciated that the logical operations described herein are implemented (1) as a sequence of computer implemented acts or program modules running on a computing system and\/or (2) as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance and other requirements of the computing system. Accordingly, the logical operations described herein are referred to variously as operations, structural devices, acts, or modules. These operations, structural devices, acts, and modules may be implemented in software, in firmware, in special purpose digital logic, and any combination thereof. It should also be appreciated that more or fewer operations may be performed than shown in the figures and described herein. These operations may also be performed in parallel, or in a different order than those described herein.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 3","b":["102","210","214","210","102","202","210","102","210","214","102","214","102","214"]},"The routine begins with operation , where each of the cache modules A, B executing on the respective storage controllers A, B calls a registration function of the API  provided by the corresponding ICM A, B. The registration function provides a means by which the ICM  may provide to each module incoming data and metadata sent to that module. Each module requiring the inter-controller communications may register with the ICM  when the storage controller  is initialized. In one embodiment, the registration function takes the form:\n\n","Because the ICM  utilizes the communication channel  provided by the disk controller  over the bus port B for inter-controller communication, the communication may take the form of SCSI commands or other storage oriented commands which generally specify a target logical unit, a logical block address (\u201cLBA\u201d), a length of data to read or write, and the corresponding data to be written. The communicating storage modules on the storage controllers  may leverage this communication architecture by mapping specific addresses to specific functions.","For example, the cache module  may map a specific LBA or range of LBAs to the cache synchronization function. Further, the storage modules may encode additional information or parameters into the LBA used to call a specific function. For example, the cache module  may use separate LBAs to synchronize individual cache lines. The data for the cache line is synchronized with the remote cache module B by writing the cache line data to the LBA corresponding to that cache line within the range of addresses mapped for the cache synchronization function. The \u201cstart_lba\u201d and \u201cend_lba\u201d parameters of the registration function provided by the ICM  specify the range of addresses for which each calling module is interested, i.e. those LBAs for which incoming data corresponds to functions provided by that module.","Once each of the respective cache modules A, B are registered with the corresponding ICM A, B, the routine proceeds to operation , where the calling cache module A calls a write function of the API  provided by the initiator ICM A to write data to the remote cache module B executing on the storage controller B with the target ICM B. This may be the case where the calling cache module A executing on the primary controller A wishes to synchronize active cache items with the remote cache module B executing on the storage controller B acting as the hot spare, as described above. According to one embodiment, the write function takes the form:\n\n","From operation , the routine proceeds to operation , where the initiator ICM A issues a write command to the target ICM B via the communication channel . For example, the initiator ICM A may issue a SCSI WRITE command specifying the storage controller B with the target ICM B as the target device, and the LBA, length, data, and acknowledgment flag specified by the calling cache module A in the write function call at operation . Upon receiving the write command, the target ICM B checks the LBA against the address ranges previously registered to determine the target module of the storage controller B for the write. In the example illustrated in , the target ICM B determines that the LBA specified in the write command corresponds to the remote cache module B on the storage controller B.","The routine then proceeds to operation , where the target ICM B calls the get buffer callback function previously registered by the remote cache module B to allocate a buffer for the data and\/or metadata received from the initiator ICM A. According to one embodiment, the get buffer callback function takes the form:\n\n","From operation , the routine proceeds to operation , where the target ICM B calls the write callback function previously registered by the remote cache module B to perform the function with specified data and\/or metadata. According to one embodiment, the write callback function takes the form:\n\n","The routine proceeds from operation  to operation  where the remote cache module B returns a result code to the target ICM B indicating the success or failure of the function. The target ICM B then checks the acknowledgment flag received from the write command to determine whether the result should be returned to the calling module. Depending on the function, the calling module may expect a reply from the call to the remote module. For example, if caching a write I\/O operation with a write-back cache, the calling cache module A on the primary controller A may wait for a successful response from the synchronize cache function call to the remote cache module B on the secondary controller before completing the I\/O operation to the initiating client computer .","If the acknowledgment flag received from the write command indicates that the result should be returned to the calling cache module A, then the routine proceeds to operation , where the target ICM B returns an acknowledgement to the SCSI WRITE command issued by the initiator ICM A at operation . The acknowledgement may contain the result code from the remote cache module B. The routine then proceeds to operation , where, upon receiving the acknowledgment containing the result code from the target ICM B, the initiator ICM A returns the result code to the calling cache module A in response to the write function call at operation .","It will be appreciated that the API  provided by the ICM  abstracts the complexities of communicating with the remote cache module B via he point-to-point communication channel  from the calling cache module A. The calling cache module A must merely call the write function provided by the API , such as the \u201cwrite_to_remote( )\u201d function described above in regard to operation , and the result of the corresponding function executed by the remote cache module B is returned to the calling cache module A as a return code from the write function. As will become apparent below in the discussion regarding , the API  also abstracts the operating role of the ICM  executing on the respective storage controllers .",{"@attributes":{"id":"p-0054","num":"0057"},"figref":"FIG. 4","b":["210","102","214","210","102","202","210","102","210","214","102","214","102","214"]},"The routine begins with operation , where each of the cache modules A, B executing on the respective storage controllers B, A calls the registration function of the API  provided by the corresponding ICM B, A, as described above in regard to operation . From operation , the routine proceeds to operation , where the initiator ICM A issues an anticipatory read command to the target ICM B via the communication channel  provided by the disk controller  over the bus port B. For example, the initiator ICM A may issue a SCSI READ BUFFER command specifying the storage controller B with the target ICM B as the target device. The anticipatory read command will remain pending until acknowledged by the target ICM B, and the initiator ICM A is free to send other commands to the target ICM B while the anticipatory read command is pending.","The routine then proceeds to operation , where the calling cache module A calls the write function of the API  provided by the target ICM B to write data to the remote cache module B executing on the other storage controller A. This write function may take the same form of the \u201cwrite_to_remote( )\u201d function described above in regard to operation . Upon receiving the write function call, the target ICM B stores the data and\/or metadata specified in the call in a temporary location and then, at operation , returns an acknowledgement to the anticipatory read command issued by the initiator ICM A at operation . According to embodiments, the acknowledgement returned to the initiator ICM A indicates that a remote call is pending and contains the LBA, length, and acknowledgment flag values specified by the calling cache module A in the write function call at operation .","Upon receiving the acknowledgment to the anticipatory read command, the initiator ICM A checks the LBA against the address ranges previously registered to determine the target module of the storage controller A for the pending remote call. In the example illustrated in , the initiator ICM A determines that the LBA specified in the acknowledgment corresponds to the remote cache module B on the storage controller A. The routine then proceeds to operation , where the initiator ICM A calls the get buffer callback function previously registered by the remote cache module B to allocate a buffer for the data and\/or metadata for the pending remote call, specifying the LBA and length received in the acknowledgement. The remote cache module B then allocates the buffers for the data and returns the buffers to the initiator ICM A at operation .","From operation , the routine proceeds to operation , where the initiator ICM A issues a read command to the target ICM B via the communication channel  to read the data and\/or metadata for the pending remote call. For example, the initiator ICM A may issue a SCSI READ command specifying the storage controller B with the target ICM B as the target device, and the LBA and length received in the acknowledgment of the anticipatory read command. Upon receiving the read command, the target ICM B retrieves the data and\/or metadata for the pending remote call from the temporary location and returns the data to the initiator ICM A in an acknowledgment to the read command at operation .","After reading the data and\/or metadata for the pending remote call from the target ICM B, the initiator ICM A copies the data to the buffers allocated by the remote cache module B at operation . The routine then proceeds to operation , where the initiator ICM A calls the write callback function previously registered by the remote cache module B with the LBA, length, and retrieved data and\/or metadata. The remote cache module B may then perform the function specified by the LBA and the data and, at operation , returns a result code to the initiator ICM A indicating the success or failure of the function.","The initiator ICM A then checks the acknowledgment flag for the pending remote call received in the acknowledgment of the anticipatory read command to determine whether the result should be returned to the calling module, as described above in regard to operation . If the acknowledgment flag for the pending remote call indicates that the result should be returned to the calling cache module A, then the routine proceeds to operation , where the initiator ICM A issues a write command to the target ICM B with the result code. For example, the initiator ICM A may issue a SCSI WRITE specifying the storage controller B with the target ICM B as the target device, the LBA and length received in the acknowledgment of the anticipatory read command to identify the pending remote call, and the result code returned by the remote cache module B. The routine then proceeds to operation , where, upon receiving the result code from the initiator ICM A, the target ICM B returns the result code to the calling cache module A in response to the write function call from operation .","It will be appreciated that each I\/O operation from a client computer  handled by the primary controller may trigger at least one write command from the primary controller to the secondary controller in cases where the ICM  on the primary controller is operating in the initiator role, or the I\/O operation may trigger at least one acknowledgement to an anticipatory read command, a read command, and a write command in cases where the ICM on the primary controller is operating in the target role. This may result in a significant number of commands being communicated over the communication channel  across the bus .","In a further embodiment, the target ICM B may batch data regarding multiple pending remote calls into a single acknowledgement to the anticipatory read command described above in regard to operation . This may reduce bandwidth utilization on the communication channel  by allowing multiple remote calls to be sent to the initiator ICM A in one transaction. Similarly, the initiator ICM A may batch data and other information regarding multiple pending remote calls in the read command at operation , the write command at operation , or the write result code command at operation , further reducing communication traffic on the bus .","Based on the foregoing, it should be appreciated that technologies for providing bi-directional communication between redundant storage controllers in a storage system are presented herein. Although the subject matter presented herein has been described in language specific to computer structural features, methodological acts, and computer readable media, it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features, acts, or media described herein. Rather, the specific features, acts, and mediums are disclosed as example forms of implementing the claims.","The subject matter described above is provided by way of illustration only and should not be construed as limiting. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described, and without departing from the true spirit and scope of the present invention, which is set forth in the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
