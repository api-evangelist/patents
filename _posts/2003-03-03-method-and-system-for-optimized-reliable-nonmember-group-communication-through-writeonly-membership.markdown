---
title: Method and system for optimized reliable non-member group communication through write-only membership
abstract: A group communication mechanism for optimized reliable non-member group communication through write-only membership is disclosed. The group communication mechanism comprises two or more group member processes that receive all messages that are sent to a group. The group communication mechanism further comprises a non-group member process that has a “write-only” group membership status and does not receive any messages that are sent to the group. The non-group member process is configured to send (a) one or more messages to the group, and (b) in connection with each message that it sends to the group, a different sequence value. Each sequence value identifies an order of a message relative to other messages that the non-group member process sends to the group.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07447202&OS=07447202&RS=07447202
owner: Cisco Technology, Inc.
number: 07447202
owner_city: San Jose
owner_country: US
publication_date: 20030303
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT","1.0 GENERAL OVERVIEW","2.0 STRUCTURAL AND FUNCTIONAL OVERVIEW","3.0 METHOD OF OPTIMALLY AND RELIABLY COMMUNICATING MESSAGES FROM A NON-GROUP MEMBER PROCESS TO A GROUP","4.0 IMPLEMENTATION MECHANISMS","Hardware Overview","5.0 EXTENSIONS AND ALTERNATIVES"],"p":["This application is related to application Ser. No. 10\/279,457, filed Oct. 23, 2002, the entire contents of which is hereby incorporated by reference as if fully set forth herein.","The present invention generally relates to inter-process communication in computer systems. The invention relates more specifically to a method and system for optimized reliable non-member group communication through write-only membership.","The approaches described in this section could be pursued, but are not necessarily approaches that have been previously conceived or pursued. Therefore, unless otherwise indicated herein, the approaches described in this section are not prior art to the claims in this application and are not admitted to be prior art by inclusion in this section.","Certain computing systems comprise a distributed plurality of nodes. For example, a distributed system may comprise a distributed plurality of processors, wherein each processor is a node within the distributed system.","The several nodes of a distributed system may execute processes that communicate with each other to achieve some result. For example, a first node may execute a first process that communicates with a second process that is executed by a second node. A given node of a distributed system may execute multiple processes. Communication between processes that execute within a distributed system is typically achieved through messages that are sent between those processes. A message typically indicates an address for which the message is destined.","Within a distributed system, processes that execute on different nodes may have a collective identity. Such processes may share a role in the distributed system collectively. Such processes may form a group, assuming that the distributed system provides for group communication. Multiple groups may exist within a distributed system, and nodes within the distributed system may be associated with multiple groups. Two or more nodes within a distributed system may be associated with the same group. A membership service implemented within a distributed system may maintain information about which nodes are associated with a particular group. A process that executes on a node that is associated with a particular group may be called a \u201cgroup member process\u201d of the particular group. A process that executes on a node that is not associated with the particular group may be called a \u201cnon-group member process\u201d relative to the particular group. Each group has a different group address. Typically, a message that is delivered to a particular group's group address reaches all of the particular group's group member processes and only the particular group's group member processes.","By sending a message to a single group instead of multiple nodes, a message sender does not need to possess information about the location or identity of any of the individual message receivers. In other words, by sending a message to a group, a message sender can be referentially decoupled from all of the individual message receivers. For example, a group member process may send a message to a group by instructing a transport layer, through a primitive provided by an application programming interface (API), to send the message to the group's group address. Under some approaches, a transport layer sends the message by multicasting the message. Thus, according to some approaches, a group address is sometimes called a \u201cmulticast address.\u201d Under other approaches, a transport layer emulates multicasting the message but actually sends the message through means other than multicasting the message. In response to such an instruction from a group member process, and in conjunction with a membership layer, the transport layer makes a reasonable best effort attempt to deliver the message to all of the group's group member processes.","Communication between processes that execute in a distributed system is not problem-free. Due to the imperfect nature of computing systems generally, the mere sending of a message does not guarantee that the message actually will be received by any of the intended receivers. For example, a failure of a system component can cause messages to become, or appear to become, lost in transit.","Additionally, in asychrononous distributed systems, even though messages originally may be sent in a certain intended order, the messages ultimately may be received in a different order. For example, if a message sender retransmits a message, then the retransmitted message may be received out of order relative to other messages that were not retransmitted. Sometimes, message order is important. For example, if messages that represent consecutive segments of a video stream are received out of order, then it is unsatisfactory to present the segments to a user in the same order in which the messages were received.","One approach to guarantee that messages communicated between group member processes are communicated reliably and with sufficient information to enable a recipient to organize the messages into an intended order involves associating each group member process with its own \u201csequence number space.\u201d The concept of a sequence number space is a part of group communication. When a process joins a group, all of the group members agree on the new group member process and the new group member process' sequence number space. Each message that a group member process sends is associated with a different sequence number that uniquely identifies the message and the message's intended order relative to other messages that the group member process sends. When any group member process receives a message from another group member process, the receiving group member process determines whether the message's associated sequence number matches a sequence number that is next expected from the sending group member process. Each group member process maintains a separate next expected sequence number for each other group member process. Thus, each group member process is associated with its own separate and group-recognized sequence number space.","If the message's associated sequence number matches the next expected sequence number, then the receiving group member process increments the next expected sequence number and sends an acknowledgement to the sending group member process. Because the acknowledgement identifies the message's associated sequence number, the sending group member process \u201cknows\u201d upon receiving the acknowledgment that the message does not need to be retransmitted. According to one approach, a transport layer keeps track of how many acknowledgements are expected as a result of sending a message to a group that has a certain number of members.","Alternatively, if the message's associated sequence number does not match the next expected sequence number, then the receiving group member process does not send an acknowledgement to the sending group member process. According to one approach, the sending group member process recognizes, due to the lack of an acknowledgement that corresponds to the message's sequence number, that the message needs to be retransmitted. Under another approach, the receiving group member process requests that the sending group member process retransmit the message that is associated with the next expected sequence number. According to one approach, the transport layer retransmits the message while awaiting the expected number of acknowledgements. The transport layer counts acknowledgements to determine whether a message has been delivered reliably. After a specified period of time has passed, the transport layer may determine that delivery has failed.","The approaches described above guarantee reliable and orderly communication between group member processes, at least in part through the acknowledgement and retransmission of messages. In other words, the approaches described above guarantee reliable group communication. However, it is sometimes beneficial to associate only some, and not all, nodes of a distributed system with a particular group.","Under some circumstances, it is useful for a non-group member process to send a message to a group. For example, a non-group member process may be a client application that requests a service that is collectively offered by group member server processes that execute on nodes that are associated with the group. For another example, a non-group member process may publish data to group member processes that collectively expect the data, wherein all of the group member processes execute on nodes that are associated with the group.","Due to past definitions of group membership, in past approaches, only group member processes have been associated with group-recognized sequence number spaces. As a result, the mechanisms described above that ensure reliable and orderly communication between group member processes have not been available to guarantee reliable and orderly communication between a non-group member process and a plurality of group member processes.","Thus, when a non-group member process sends a message to a group, the intended receivers are unable to acknowledge the message according to a sequence number, because, by definition, the intended receivers do not maintain a sequence number space in connection with a non-group member process. In the absence of acknowledgements, the non-group member process may attempt to increase the probability that the message will be received by all of the group member processes by retransmitting the message to the group.","While this approach may increase the probability that the message will be received by all of the group member processes, it also introduces the possibility that one or more group member processes may receive the same message twice. In the absence of a unique sequence number per message, the group member processes are not able to ascertain if a given message duplicates a message that has already been received. Two messages with the same content may or may not be duplicates. Sometimes, it is important to be able to determine whether a message is a duplicate of a prior message. For example, if a message that represents an unrepeated segment of a video stream is received more than once, then it is unsatisfactory to present that segment to a user more than once.","Existing distributed systems cannot guarantee that every group member process that executes on a node that is associated with a group will receive, in the intended order, all messages that a non-group member process sends to the group, especially when those messages are delivered at high rates. Because existing approaches do not provide a sequence number space for non-group member processes, existing approaches do not impose any order on messages that are sent to a group by a non-group member process.","Based on the foregoing, there is a clear need for a way to communicate messages from a non-group member process to a group in an optimal, reliable, and orderly manner, without causing the non-group member process to receive messages that are sent to the group.","A method and system for optimized reliable non-member group communication through write-only membership is described. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent, however, to one skilled in the art that the present invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.","Embodiments are described herein according to the following outline:\n\n","The needs identified in the foregoing Background, and other needs and objects that will become apparent for the following description, are achieved in the present invention, which comprises, in one aspect, a group communication mechanism for optimized reliable non-member group communication through write-only membership, or, in other words, a group communication mechanism for reliably and efficiently communicating messages from a non-group member process to a group. The group communication mechanism comprises two or more group member processes that are members of a group. By virtue of their group membership, each group member process receives all messages that are sent to a group. The group communication mechanism provides a primitive that a process may invoke to join a group. When a process invokes the primitive, a membership layer of the group communication mechanism adds the process to the group address and informs current members of the group about the new group member process and the new group member process' sequence number space.","The group communication mechanism further comprises at least one non-group member process. Non-group member processes do not receive any messages that are sent to the group. At least one of the non-group member processes is configured to send one or more messages to the group. At least one such non-group member process is also configured to send, in connection with each message that it sends to the group, a different sequence value. Each sequence value identifies an order of a message relative to other messages that the non-group member process sends to the group. The group communication mechanism provides a special primitive that a non-group member process may invoke. When a non-group member process invokes the special primitive, a membership layer of the group communication mechanism informs current members of the group about the non-group member process and the non-group member process' sequence number space, but does not add the non-group member process to the group address. Thus, in addition to a primitive that allows a process to join a group as a group member process with both read and write privileges, the group communication mechanism provides a special primitive that endows a process with write-only privileges.","Thus, a new kind of group membership status is described. In certain embodiments, the new status is termed \u201cwrite-only group membership.\u201d A process having that status is associated with its own separate group-recognized sequence number space as though it was a group member process. However, as a non-group member process, a process having that status does not receive any messages that are sent to the group. In other words, a non-group member process that executes within a distributed system may send messages to a group as efficiently and with the same semantics as any group member process, while still retaining the semantics of non-membership, in that the non-group member process does not receive any control or data messages sent to the group.","Thus, within the distributed system, messages can be sent from non-group member processes to a group in a reliable and orderly manner, without causing the non-group member processes to receive messages that are sent to the group. As a result, fewer total messages are communicated between processes that execute within the distributed system. Reliable and orderly inter-process communication is provided without sacrificing distributed system performance.","In another aspect, the invention encompasses methods that may be performed by mechanisms such as those that comprise the foregoing distributed system, and a computer-readable medium that bears instructions that are designed to cause one or more processors to carry out the steps of one or more of such methods.",{"@attributes":{"id":"p-0034","num":"0038"},"figref":"FIG. 1","b":["100","102","102","104","104","102","102","104","104","102","102","104","104"]},"Nodes A-N are in a group  that has a group address . Thus, every process that executes on any of nodes A-N is configured to receive all messages that are sent to group . Nodes A-N are not associated with group address . Thus, no process that executes on any of nodes A-N is configured to receive any message that is sent to group .","While nodes A-N are not associated with the same group  with which nodes A-N are associated, it should not be implied that nodes A-N are not associated with any group. While nodes A-N are associated with group , it should not be implied that nodes A-N are associated with only one group, or that all groups with which one or more of nodes A-N are associated are groups with which all others of nodes A-N are associated. While distributed system  is described herein with reference to one particular group , distributed systems of alternative embodiments may comprise more than one group, with a different set of nodes associated with each different group, and with some nodes associated with several different groups.","Node A is configured to execute non-group member processes A-N. Similarly, node N is configured to execute non-group member processes A-N. Others of nodes A-N may also be configured to execute one or more non-group member processes.","Node A is configured to execute group member processes A-N. Similarly, node N is configured to execute group member processes A-N. Others of nodes A-N may also be configured to execute one or more group member processes.","Each of non-group member processes A-N and A-N is configured to send one or more messages to the group with which nodes A-N are associated. For example, non-group member processes A-N and A-N may be configured to stream or publish line card interface data to a group. In this arrangement, non-group member processes A-N, A-N may be termed \u201cwrite-only\u201d members of group .","Each of the non-group member processes is further configured to send, in connection with each message that the non-group member process sends to the group, a sequence value that identifies the order of the message relative to other messages that the non-group member sends to the group. For example, each successive sequence value sent by a particular non-group member may be an integer that is one greater than the preceding sequence value that was sent by the particular non-group member.","As processes that execute on nodes that are associated with a group, each of group member processes A-N, A-N is configured to receive all messages that are sent to the group. For example, group member processes A-N, A-N may be configured to cache line card interface data that has been sent to a group.","Each of the group member processes is further configured to receive, in connection with each message that is sent to group , a sequence value that indicates the message's order relative to other messages sent from a particular sender. A sequence value sent in connection with one message may differ from a sequence value sent in connection with another message. Because a separate sequence number space is associated with each message sender, it is permissible for the range of sequence values that are sent in connection with messages from one sender to overlap with the range of sequence values that are sent in connection with messages from another sender. Sequence values that are sent in connection with messages from a particular sender are not repeated in connection with other messages from the particular sender except if such messages are being retransmitted.","Each of the group member processes is configured to maintain, for each other process that executes on any of the nodes in distributed system \u2014regardless of whether that other process is a group member process or a non-group member process\u2014a separate current expected sequence value for that other process. A current expected sequence value maintained for one process might be different than a current expected sequence value that is maintained for another process. For example, group member process A may maintain a first current expected sequence value for group member process A, a second current expected sequence value for non-group member process A, and a third current expected sequence value for non-group member process A. The first, second, and third current expected sequence values may all differ from each other.","According to one embodiment, each group member process maintains a data structure for tracking the current expected sequence values for other processes. For example, group member process A may maintain a data structure such as table . Table  is a mapping that includes a row for each process other than the process that maintains the table. For example, table  includes rows A and B, among others. Row A indicates that process A is associated with current expected sequence value \u201c10.\u201d Row B indicates that process A is associated with current expected sequence value \u201c20.\u201d Even though process A is a non-group member process, table  stores a current expected sequence value that is associated with process A. According to one embodiment, the current expected sequence value that is associated with a particular process in a particular table is the same current expected sequence value that is associated with that particular process in every table that maintains a row for that process.","According to one embodiment, all group member processes agree upon a separate sequence number space for each non-group member process. For example, agreement may be achieved through messages that are sent between group member processes\u2014and not to non-group member processes. As a result of the agreement, the current expected sequence number associated with a particular non-group member processes is the same current expected sequence number maintained by all of the group member processes for the particular non-group member process. For example, the current expected sequence number that group member process A maintains in association with non-group member process A is the same as the current expected sequence number that group member process A maintains in association with non-group member process A.","For example, each of group member processes A-N and A-N may maintain a current expected sequence number \u201c10\u201d for non-group member process A and a current expected sequence number \u201c20\u201d for non-group member process A.","Thus, each of group member processes A-N and A-N is configured to maintain, for other each process that executes on any of the nodes in distributed system , a separate, group-recognized sequence number space for that other process. Unlike prior approaches, in which each of the group member processes maintained sequence number spaces only for other group member processes, group member processes A-N and A-N are configured to maintain sequence number spaces for non-group member processes also.","Each of group member processes A-N and A-N is configured to determine, for each sequence value received in connection with a message received from a particular one of non-group member processes A-N and A-N, whether the received sequence value matches a current expected sequence value that the receiving group member process maintains for the particular one of the sending non-group member processes.","According to one embodiment, each receiving group member process is further configured to send an acknowledgement to the sending non-group member process based on the receiving group member process determining that a received sequence value matches a current expected sequence value that is associated with the sending non-group member process. The acknowledgement identifies the received sequence number. Using the acknowledgement, the sending non-group member process may identify messages that it successfully sent.","According to one embodiment, each receiving group member process is configured to increment a current expected sequence value that is associated with the sending non-group member process based on the receiving group member process determining that a received sequence value matches the current expected sequence value that is associated with the sending non-group member process. In other words, once a group member process ascertains that it has received the next expected message from a particular non-group member process, the group member process expects, from the particular non-group member process, the next message after that.","According to one embodiment, each receiving group member processes is configured to send, based on the receiving group member process determining that a received sequence value does not match a current expected sequence value that is associated with the sending non-group member process, a retransmission request to the sending non-group member process. The retransmission request identifies the current expected sequence value. Thus, the sending non-member process may identify which messages need to be retransmitted.","According to one embodiment, each of non-group member processes A-N and A-N is configured to receive a retransmission request that identifies a particular sequence value, and to send, in response, one or more messages that are selected, based on the particular sequence value, from among messages that the non-group member process has already sent to the group. For example, if non-group member process A receives a retransmission request that identifies a sequence value \u201c50\u201d, and if non-group member process A last transmitted a message that was associated with a sequence value \u201c53\u201d, then non-group member process  may selectively retransmit messages that are associated with sequence values from \u201c50\u201d through \u201c53\u201d.","According to one embodiment, each of group member processes A-N and A-N is configured to sort, based on sequence values that were received in connection with messages from another process, the messages that were received from that other process, which may be a non-group member process or a group member process. Thus, a receiving group member process may place messages received from a sending non-group member process in an order intended by the sending non-group member process.","Therefore, within distributed system , messages can be communicated from non-group member processes A-N and A-N to a group in a reliable and orderly manner, without causing the non-group member processes to receive messages that are sent to the group. For example, a line card in a distributed router that is configured according to one embodiment may stream line card interface data to route processors that are associated with a group in a reliable and orderly manner without causing other line cards in the distributed router to receive the streamed data.",{"@attributes":{"id":"p-0055","num":"0059"},"figref":"FIG. 2","b":["200","110","110","112","112"]},"In block , a message is received from a non-group member process that sent the message to a group. According to one embodiment, the non-group member process executes on a node that is (a) part of a distributed system and (b) not associated with the group. Messages that are sent to the group are delivered only to all nodes that are associated with the group. The message received in block  includes a sequence value.","In block , in response to receiving the message, it is determined whether a sequence value that was received with the message is the same as a current expected value that is associated with the non-group member process. According to one embodiment, the current expected value is agreed upon by a plurality of group member processes. For example, the current expected sequence value may be negotiated in advance and stored in an appropriate mapping.","If the sequence value is the same as the current expected value, then, in block , an acknowledgement that indicates the sequence value is sent to the non-group member process. According to one embodiment, the sequence value is contained within the acknowledgement.","In block , the current expected value that is associated with the non-group member process is incremented. The current expected value is incremented to reflect a next sequential value, which might or might not be a numeric value.","In block , based on the sequence value and other sequence values that were received in connection with other messages received from the non-group member process, the message is ordered in relation to the other messages. For example, the messages may be sorted according to sequence numbers contained with the messages.","Returning to block , if the sequence value is not the same as the current expected value, then, in block , a retransmission request is sent to the non-group member process. The current expected value is not updated. According to one embodiment, the retransmission request specifies the current value that is associated with the non-member process. According to one embodiment, receipt of the retransmission request causes the non-group member process to send one or more messages that are selected, based on the sequence value, from among messages that the non-group member process has already sent to the group.",{"@attributes":{"id":"p-0062","num":"0066"},"figref":"FIG. 3","b":["300","300","106","106","108","108"]},"In block , a message is sent to a group. The sender of the message is a write-only member of the group. Consequently, the sender does not receive any messages that are sent to the group. Messages that are sent to the group are received by a plurality of group member processes. According to one embodiment, the plurality of group member processes execute on one or more nodes that are (a) a part of a distributed system and (b) associated with the group. According to one embodiment, every message that is sent to the group is delivered only to all nodes that are associated with the group.","In block , a sequence value, which identifies the order of the message relative to other messages that are sent from the same sender, is sent in connection with the message. The sequence value sequentially follows a previous sequence value that was sent in connection with another message that the sender most recently sent. According to one embodiment, the sequence value is contained within the message. Message recipients may use the sequence number to order the message relative to other messages sent by the same sender and to determine whether any of the messages sent by the same sender were not received.","In block , it is determined whether an acknowledgement, which indicates the sequence value, has been received from at least one group member process that executes on a node that is associated with the group.","If an acknowledgement that indicates the sequence value has been received, then control passes back to block , in which another message is sent. Alternatively, if an acknowledgement that indicates the sequence value has not been received, then control passes to block .","In block , it is determined whether a retransmission interval has been exceeded. For example, the retransmission interval may be a specified period of time. If the retransmission interval has not been exceeded, then control passes back to block . Otherwise, control passes to block .","In block , a retransmission count is incremented. In block , it is determined whether the retransmission count is equal to a specified maximum retransmission count. If the retransmission count is not yet equal to the specified maximum retransmission count, then control passes back to block , in which the message is retransmitted. The same sequence value will be sent in connection with the message in block . If the retransmission count is equal to the specified maximum retransmission count, then control passes to block .","In block , the message is not retransmitted. An indication that the message's transmission has failed may be generated.","Thus, in one embodiment, another message is not sent until an acknowledgement of the receipt of that message has been received. Because the sequence value distinguishes a message from other messages sent by a sender, the sender may determine, from the sequence value contained in an acknowledgment, whether the message was received.",{"@attributes":{"id":"p-0071","num":"0075"},"figref":"FIG. 4","b":["400","400","106","106","108","108"]},"In block , it is determined whether an retransmission request, which indicates a sequence value, has been received from at least one group member process that executes on a node that is associated with a group.","If a retransmission request has not been received, then control passes back to block . Alternatively, if a retransmission request has been received, then, in block , one or more messages are selected, based on the sequence value that is indicated by the retransmission request, from among one or more messages that were already sent to the group, although not necessarily received by all of the intended recipients. For example, if the sequence value specified by the retransmission request is \u201c50\u201d and a message containing a sequence value \u201c53\u201d has already been sent, then messages containing sequence values \u201c50\u201d through \u201c53\u201d may be selected.","In block , the selected messages are retransmitted. For example, the selected messages may be retransmitted to the group, to a particular node that is associated with the group, or to a particular group member process that executes on a node that is associated with the group.",{"@attributes":{"id":"p-0075","num":"0079"},"figref":"FIG. 5","b":["500","500"]},"Computer system  includes a bus  or other communication mechanism for communicating information, and a processor  coupled with bus  for processing information. Computer system  also includes a main memory , such as a random access memory (RAM), flash memory, or other dynamic storage device, coupled to bus  for storing information and instructions to be executed by processor . Main memory  also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor . Computer system  further includes a read only memory (ROM)  or other static storage device coupled to bus  for storing static information and instructions for processor . A storage device , such as a magnetic disk, flash memory or optical disk, is provided and coupled to bus  for storing information and instructions.","A communication interface  may be coupled to bus  for communicating information and command selections to processor . Interface  is a conventional serial interface such as an RS-232 or RS-422 interface. An external terminal  or other computer system connects to the computer system  and provides commands to it using the interface . Firmware or software running in the computer system  provides a terminal interface or character-based command interface so that external commands can be given to the computer system.","A switching system  is coupled to bus  and has an input interface  and an output interface  to one or more external network elements. The external network elements may include a local network  coupled to one or more hosts , or a global network such as Internet  having one or more servers . The switching system  switches information traffic arriving on input interface  to output interface  according to pre-determined protocols and conventions that are well known. For example, switching system , in cooperation with processor , can determine a destination of a packet of data arriving on input interface  and send it to the correct destination using output interface . The destinations may include host , server , other end stations, or other routing and switching devices in local network  or Internet .","The invention is related to the use of computer system  for optimized reliable non-member group communication through write-only membership. According to one embodiment of the invention, the optimized reliable non-member group communication through write-only membership is provided by computer system  in response to processor  executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory  from another computer-readable medium, such as storage device . Execution of the sequences of instructions contained in main memory  causes processor  to perform the process steps described herein. One or more processors in a multi-processing arrangement may also be employed to execute the sequences of instructions contained in main memory . In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware circuitry and software.","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing instructions to processor  for execution. Such a medium may take many forms, including but not limited to, non-volatile media, volatile media, and transmission media. Non-volatile media includes, for example, optical or magnetic disks, such as storage device . Volatile media includes dynamic memory, such as main memory . Transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves, such as those generated during radio wave and infrared data communications.","Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, or any other magnetic medium, a CD-ROM, any other optical medium, punch cards, paper tape, any other physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave as described hereinafter, or any other medium from which a computer can read.","Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to processor  for execution. For example, the instructions may initially be carried on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system  can receive the data on the telephone line and use an infrared transmitter to convert the data to an infrared signal. An infrared detector coupled to bus  can receive the data carried in the infrared signal and place the data on bus . Bus  carries the data to main memory , from which processor  retrieves and executes the instructions. The instructions received by main memory  may optionally be stored on storage device  either before or after execution by processor .","Communication interface  also provides a two-way data communication coupling to a network link  that is connected to a local network . For example, communication interface  may be an integrated services digital network (ISDN) card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface  sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.","Network link  typically provides data communication through one or more networks to other data devices. For example, network link  may provide a connection through local network  to a host computer  or to data equipment operated by an Internet Service Provider (ISP) . ISP  in turn provides data communication services through the worldwide packet data communication network now commonly referred to as the \u201cInternet\u201d . Local network  and Internet  both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link  and through communication interface , which carry the digital data to and from computer system , are exemplary forms of carrier waves transporting the information.","Computer system  can send messages and receive data, including program code, through the network(s), network link  and communication interface . In the Internet example, a server  might transmit a requested code for an application program through Internet , ISP , local network  and communication interface . In accordance with the invention, one such downloaded application provides for optimized reliable non-member group communication through write-only membership as described herein.","Processor  may execute the received code as it is received, and\/or stored in storage device , or other non-volatile storage for later execution. In this manner, computer system  may obtain application code in the form of a carrier wave.","In the foregoing specification, the invention has been described with reference to specific embodiments thereof. It will, however, be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense.","For example, instead of associating each non-group member process with its own separate group-recognized sequence number space, a proxy-based approach may be implemented to ensure that messages are reliably delivered to a group. According to the proxy-based approach, a non-group member process multicasts a message to a group. The message may be called a \u201cproxy request.\u201d One of the group member processes is designated to be a \u201cproxy handler.\u201d For example, the proxy handler may be a group leader process or a process appointed by all of the group members.","Under the proxy-based approach, when a non-group member process multicasts a message to the group, all of the group member processes receive the message unless some error occurs in transit. Therefore, unless some error occurs in transit, the proxy handler also receives the message. All of the group member processes except for the proxy handler disregard the message that is sent from the non-group member process.","The proxy handler assigns a group-recognized sequence number to the message and then multicasts the message, in connection with the sequence number, to the group. Unless some error occurs in transit, all of the group member processes receive the message in connection with the sequence number. The group member processes may then respond to the proxy handler with responses, such as acknowledgements or retransmission requests, that are selected based on whether the group member processes expected to receive the particular sequence number or a different sequence number. Based on the response from the group member processes, the proxy handler may retransmit the message to the group and\/or send a delivery status to the non-group member process that originally sent the proxy request."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings and in which like reference numerals refer to similar elements and in which:",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
