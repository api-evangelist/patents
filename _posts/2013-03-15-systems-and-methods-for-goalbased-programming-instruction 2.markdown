---
title: Systems and methods for goal-based programming instruction
abstract: A computer-implemented method according to various aspects of the present disclosure includes receiving, by a computer system, a selection of a programming goal; identifying a skill associated with the goal; and generating, by the computer system, a lesson module for teaching the skill, the lesson module including an ordered list of steps for presentation to a student to teach the skill.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09595205&OS=09595205&RS=09595205
owner: NEURON FUEL, INC.
number: 09595205
owner_city: Mountain View
owner_country: US
publication_date: 20130315
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","DETAILED DESCRIPTION"],"p":["The present application claims priority to Prov. U.S. Pat. App. Ser. No. 61\/738,799, filed Dec. 18, 2012 and entitled \u201cProgramming Learning Center\u201d, the entire disclosure of which application is hereby incorporated herein by reference.","Computers are ubiquitous and used for business, education, recreation and so on. Familiarity with the principles of computer programming and experience in computer programming is a useful skill. While familiarity with commonly used programming languages may be beyond the competency of many younger children, even at a young age children can learn the basic principles of computer programming.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 1","FIG. 1"],"b":["12","11","13","14","12","11","15","13","12","11","16","14","12","11"]},"For example, the learning center integrates social learning and unique game mechanics with a guided curriculum to deliver a highly engaging and rewarding experience to children of all ages. The learning center allows children to perform creative activities such as write digital storybooks and scrapbooks, build video games, animate their favorite characters and share these with friends and family.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2","b":["12","21","22","23","24"]},"Learning center workshop  allows a user on a learning center client to build learning center programs visually using the interface for the learning center client. Learning center runtime  allows a user on a learning center client to run learning center programs.","Learning module generator  allows a user on a learning center client to generate learning modules from learning center programs. Learning module engine  allows a user on the learning center client to run learning modules and guides the user to build a learning center program. The learning module engine validates all known triggers and keeps parameters within a known range.","Table 1 below, sets out an example of a language specification for the learning center.",{"@attributes":{"id":"p-0025","num":"0024"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<scripts> ::= <script> | <script> <scripts>"]},{"entry":[{},"<script> ::= <entry-block> <blocks>"]},{"entry":[{},"<blocks> ::= {empty} | <exit-block> | <inline-block> <blocks>"]},{"entry":[{},"<inline-block> := <container-block> | <block>"]},{"entry":[{},"<entry-block> ::= <label>"]},{"entry":[{},"<exit-block> ::= <label>"]},{"entry":[{},"<block> ::= <label>"]},{"entry":[{},"<container-block> ::= <label> <containers>"]},{"entry":[{},"<containers> ::= <container> | <container> <containers>"]},{"entry":[{},"<container> ::= \u201c{\u201c <blocks> \u201c}\u201d"]},{"entry":[{},"<label> ::= {string} <params>"]},{"entry":[{},"<params> ::= {empty} | <param> <params>"]},{"entry":[{},"<param> ::= {string} | {number} | {boolean} | <label-block>"]},{"entry":[{},"<label-block> ::= {string} <params>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table 2 below, sets out an example of language blocks for the learning center.",{"@attributes":{"id":"p-0027","num":"0026"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CONTROL"]},{"entry":[{},"on start"]},{"entry":[{},"when {choice:keys} pressed"]},{"entry":[{},"when actor clicked broadcast"]},{"entry":[{},"{events} broadcast {events}"]},{"entry":[{},"and wait"]},{"entry":[{},"send message {events} to"]},{"entry":[{},"{actor} with {string}"]},{"entry":[{},"send message {events} to"]},{"entry":[{},"{actor} with {string} and wait"]},{"entry":[{},"received value"]},{"entry":[{},"received source"]},{"entry":[{},"when I receive {events}"]},{"entry":[{},"clone startup"]},{"entry":[{},"wait {number:1} secs"]},{"entry":[{},"forever"]},{"entry":[{},"repeat {number:10}"]},{"entry":[{},"create clone of {actor}"]},{"entry":[{},"name of last cloned actor"]},{"entry":[{},"delete this clone"]},{"entry":[{},"forever if {boolean}"]},{"entry":[{},"if {boolean}"]},{"entry":[{},"if {boolean} else wait"]},{"entry":[{},"until {boolean} repeat"]},{"entry":[{},"until {boolean} stop"]},{"entry":[{},"{choice:stop}"]},{"entry":[{},"stop script"]},{"entry":[{},"stop all"]},{"entry":[{},"MOTION"]},{"entry":[{},"move {number:10} steps turn"]},{"entry":[{},"CW {angle:15} degrees turn"]},{"entry":[{},"CCW {angle:15} degrees"]},{"entry":[{},"point in direction {angle:90} degrees"]},{"entry":[{},"point towards {where}"]},{"entry":[{},"go to x: {number:0} y: {number:0}\u2019"]},{"entry":[{},"blockMotionGoTowards"]},{"entry":[{},"glide {number:1} secs to x: {number:0} y:"]},{"entry":[{},"{number:0}"]},{"entry":[{},"change x by {number:10}\u2019"]},{"entry":[{},"set x to {number:0} change"]},{"entry":[{},"y by {number:10}\u2019 set y to"]},{"entry":[{},"{number:0}"]},{"entry":[{},"if on edge, bounce x"]},{"entry":[{},"position"]},{"entry":[{},"y position"]},{"entry":[{},"direction"]},{"entry":[{},"LOOKS"]},{"entry":[{},"switch to costume {costumes}"]},{"entry":[{},"next costume"]},{"entry":[{},"costume #"]},{"entry":[{},"set label to {string:Hello}"]},{"entry":[{},"say {string:Hello} for {number:2} secs"]},{"entry":[{},"say {string:Hello}"]},{"entry":[{},"think {string:Hmm} for {number:2} secs"]},{"entry":[{},"think {string:Hmm}"]},{"entry":[{},"change {choice:effect} effect by {number:25}"]},{"entry":[{},"set {choice:effect} effect to {number:0}"]},{"entry":[{},"clear graphic effects"]},{"entry":[{},"change size by {number:10}"]},{"entry":[{},"set size to {number:100}% size"]},{"entry":[{},"#"]},{"entry":[{},"show"]},{"entry":[{},"hide"]},{"entry":[{},"go to front"]},{"entry":[{},"go to back"]},{"entry":[{},"go back {number:1} layers"]},{"entry":[{},"go forward {number:1} layers"]},{"entry":[{},"switch to background {costumes}"]},{"entry":[{},"next background"]},{"entry":[{},"background #"]},{"entry":[{},"SENSING touching"]},{"entry":[{},"{where}? touching color"]},{"entry":[{},"{color}?"]},{"entry":[{},"color {color} is touching {color}?"]},{"entry":[{},"ask {string:What is your name} and wait"]},{"entry":[{},"answer"]},{"entry":[{},"mouse x"]},{"entry":[{},"mouse y"]},{"entry":[{},"mouse down?"]},{"entry":[{},"key {choice:keys} pressed?"]},{"entry":[{},"distance to {whereall}?"]},{"entry":[{},"reset timer"]},{"entry":[{},"timer"]},{"entry":[{},"{choice:spriteprop} of {whereall}"]},{"entry":[{},"name of actor {number}"]},{"entry":[{},"# of actors"]},{"entry":[{},"loudness"]},{"entry":[{},"loud?"]},{"entry":[{},"sensor {string:button pressed}?"]},{"entry":[{},"sensor {string:button pressed}?"]},{"entry":[{},"{choice:datetime} of date\/time"]},{"entry":[{},"screen left"]},{"entry":[{},"screen right"]},{"entry":[{},"screen top"]},{"entry":[{},"screen bottom"]},{"entry":[{},"SOUND"]},{"entry":[{},"play sound {sounds}"]},{"entry":[{},"play sound {sounds} until done"]},{"entry":[{},"stop all sounds"]},{"entry":[{},"play drum {choice:instrument} for {number:0.2} beats"]},{"entry":[{},"rest for {number:0.2} beats"]},{"entry":[{},"play note {number:60} for {number:0.5} beats set"]},{"entry":[{},"instrument to {choice:instrument}"]},{"entry":[{},"change volume by {number:\u221210}"]},{"entry":[{},"set volume to {number:100}%"]},{"entry":[{},"volume"]},{"entry":[{},"change tempo by {number:20}"]},{"entry":[{},"set tempo to {number:60} bpm"]},{"entry":[{},"tempo"]},{"entry":[{},"OPERATOR"]},{"entry":[{},"{number} + {number}"]},{"entry":[{},"{number} \u2212 {number}"]},{"entry":[{},"{number} * {number}"]},{"entry":[{},"{number} \/ {number}"]},{"entry":[{},"pick random {number:1} to {number:10}"]},{"entry":[{},"{string} < {string}"]},{"entry":[{},"{string} = {string}"]},{"entry":[{},"{string} > {string}"]},{"entry":[{},"{boolean} and {boolean}"]},{"entry":[{},"{boolean} or {boolean}"]},{"entry":[{},"not {boolean}"]},{"entry":[{},"join {string:hello} {string:world}"]},{"entry":[{},"letter {number:1} of {any:world}"]},{"entry":[{},"length of {string:world}"]},{"entry":[{},"{number} mod {number }"]},{"entry":[{},"round {number}"]},{"entry":[{},"{choice:math} of {number:10}"]},{"entry":[{},"{choice:constants}"]},{"entry":[{},"PEN"]},{"entry":[{},"clear"]},{"entry":[{},"pen up"]},{"entry":[{},"set pen color to {color}"]},{"entry":[{},"change pen color by {number:10}"]},{"entry":[{},"set pen color to {number:0}"]},{"entry":[{},"change pen shade by {number:10} set"]},{"entry":[{},"pen shade to {number:50} change pen"]},{"entry":[{},"size by {number:1}"]},{"entry":[{},"set pen size to {number:1}"]},{"entry":[{},"stamp"]},{"entry":[{},"set font to {choice:fontstyle} {choice:fontsize} {choice:font}"]},{"entry":[{},"draw text {string}"]},{"entry":[{},"when drawing actor"]},{"entry":[{},"redraw actor"]},{"entry":[{},"set fill color to {color}"]},{"entry":[{},"no fill"]},{"entry":[{},"draw bezier at x1:{number:0} y1:{number:0} to x2:{number:0} y2:"]},{"entry":[{},"{number:0} with control points cx1:{number:0} cy1:{number:0} and cx2:"]},{"entry":[{},"{number:0} cy2:{number:0}\u2019"]},{"entry":[{},"draw point at x:{number:0} y:{number:0}"]},{"entry":[{},"draw line from x1:{number:0} y1:{number:0} to x2:{number:0} y2:"]},{"entry":[{},"{number:0}"]},{"entry":[{},"draw rectangle at x:{number:0} y:{number:0} with width:{number:0}"]},{"entry":[{},"height:{number:0}"]},{"entry":[{},"draw triangle with points x1:{number:0} y1:{number:0} x2:{number:0}"]},{"entry":[{},"y2:{number:0} x3:{number:0} y3:{number:0}"]},{"entry":[{},"draw ellipse at x:{number:0} y:{number:0}with width:{number:0}"]},{"entry":[{},"height:{number:0}"]},{"entry":[{},"draw text {string} at x:{number:0} y:{number:0}"]},{"entry":[{},"draw rectangle with width:{number:0} height:{number:0}\u2019"]},{"entry":[{},"draw ellipse with width:{number:0} height:{number:0}"]},{"entry":[{},"PHYSICS"]},{"entry":[{},"when actor collides"]},{"entry":[{},"collided with {where}?"]},{"entry":[{},"apply force {number:0}"]},{"entry":[{},"apply impulse {number:0}"]},{"entry":[{},"apply force {number:0} at {number:0}"]},{"entry":[{},"degrees"]},{"entry":[{},"apply impulse {number:0} at {number:0}"]},{"entry":[{},"degrees"]},{"entry":[{},"apply horizontal (number:0} and vertical"]},{"entry":[{},"{number:0} force"]},{"entry":[{},"apply horizontal {number:0} and vertical"]},{"entry":[{},"{number:0} impulse apply"]},{"entry":[{},"torque {number:0} set"]},{"entry":[{},"static {boolean}"]},{"entry":[{},"set shape to {choice:geometry}"]},{"entry":[{},"set density to {number:10}"]},{"entry":[{},"set friction to {number:0.5}"]},{"entry":[{},"set restitution to {number:0.2}"]},{"entry":[{},"set angular damping to {number:0} set"]},{"entry":[{},"angular velocity to {number:0} set"]},{"entry":[{},"linear damping to {number:0}"]},{"entry":[{},"set linear velocity to (number:0} by {number:"]},{"entry":[{},"0}"]},{"entry":[{},"density friction"]},{"entry":[{},"restitution"]},{"entry":[{},"angular velocity"]},{"entry":[{},"inertia"]},{"entry":[{},"is awake?"]},{"entry":[{},"x linear velocity"]},{"entry":[{},"y linear velocity"]},{"entry":[{},"set gravity to {number:0} by {number:10}"]},{"entry":[{},"start physics"]},{"entry":[{},"stop physics"]},{"entry":[{},"VARIABLES"]},{"entry":[{},"set {properties} of {actor} to {string:0}"]},{"entry":[{},"property {properties} of {actor}"]},{"entry":[{},"set {variables} to {string:0}"]},{"entry":[{},"change {variables} by {number:1}"]},{"entry":[{},"show variable {variables}"]},{"entry":[{},"hide variable {variables}"]},{"entry":[{},"LISTS"]},{"entry":[{},"add {string:thing} to {lists}"]},{"entry":[{},"delete {choice:lastall} of {lists}"]},{"entry":[{},"insert {string:thing} at {choice:lastany} of {lists}"]},{"entry":[{},"replace item {choice:lastany} of {lists} with {string:thing}"]},{"entry":[{},"item {choice:lastany} of {lists}"]},{"entry":[{},"length of {lists}"]},{"entry":[{},"{lists} contains {string:thing}"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A user from a learning center client accesses learning center workshop  through an interface. For example, the interface is a web browser or a dedicated app located on a computing device such as a personal computer or a tablet. When learning is launched, a user can build a project, which is essentially a computer program. Learning center workshop  allows a user to construct a project (computer program) and save it. The computer program can be run using learning center runtime .","Upon entering learning center workshop , a user can elect to build a new computer program from scratch or open an existing computer program.","To build a computer program from scratch, the user utilizes blocks of programming instructions represented visually as building blocks within learning center workshop . The tools provided within learning center workshop  allow a user to create a scene that includes a background, main objects and actors. Learning center workshop  allows a user to add computer program logic to the actors and the background. The user acts by dragging and dropping visual blocks into code areas. The visual blocks snap into place to form logic sequences.","Learning center workshop  saves the computer program and all its assets as the computer program is being built. For example, learning center workshop  saves the computer program in a persistent format so that the computer program can be loaded later. This can be done, for example in a Javascript Object Notation (JSON) format, Extensible Markup Language (XML) or some other structured syntax. The computer program file may be stored on learning center server  and, in addition or instead of, stored on the learning center client used by the user.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 3","b":["90","21","90","92","93","94","95","94","97","96"]},"The flying bird project illustrated within interface  shown in  can be stored in file using language blocks for the learning center. For example, Table 3 below sets out contents for such a file.",{"@attributes":{"id":"p-0034","num":"0033"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"{\u201cname\u201d:\u201cTropical Bird\u201d,\u201cdescription\u201d:\u201cHelp the tropical bird fly out to"},{"entry":"\u2003sea.\u201d,\u201cbackground\u201d:"},{"entry":"{\u201cscaleType\u201d:\u201cstretch\u201d,\u201cwidth\u201d:-.-600,\u201cheight\u201d:-.-400,"},{"entry":"\u2003\u201ccanvasWidth\u201d:480,\u201ccanvasHeight\u201d:320,\u201ccurentBackground\u201d:"},{"entry":"1,\u201cscripts\u201d:[ ],\u201cbackgrounds\u201d:[{\u201cname\u201d:\u201cbeach\u201d,\u201cimg\u201d:\u201c\/assets\/Images\/"},{"entry":"\u2003Backgrounds\/Outdoor\/"},{"entry":"4fcf9088692f886b16000e53.jpg\u201d,\u201ccx\u201d:512,\u201ccy\u201d:341.5}],\u201csounds\u201d:[ ],\u201c"},{"entry":"\u2003documentation\u201d:"},{"entry":"{\u201cdescription\u201d:\u201c\u201d,\u201cinboundEvents\u201d:[ ],\u201coutboundEvents\u201d:[ ],\u201cproperFes"},{"entry":"\u2003\u201d:[ ]}},\u201csprites\u201d:[{\u201clabel\u201d:\u201cParrot\u201d,\u201cscripts\u201d:"},{"entry":"[{\u201cfunc\u201d:\u201cregisterFlagTrigger\u201d,\u201cid\u201d:6,\u201cvalues\u201d:[ ],\u201ccontainers\u201d:[ ],\u201cnext"},{"entry":"\u2003\u201d:{\u201cfunc\u201d:\u201cblockControlForever\u201d,\u201cid\u201d:7,\u201cvalues\u201d:"},{"entry":"[ ],\u201ccontainers\u201d:[{\u201cfunc\u201d:\u201cblockLooksNextCostume\u201d,\u201cid\u201d:8,\u201cvalues\u201d:[ ],"},{"entry":"\u2003\u201ccontainers\u201d:[ ],\u201cnext\u201d:"},{"entry":"{\u201cfunc\u201d:\u201cblockControlWait\u201d,\u201cid\u201d:9,\u201cvalues\u201d:[{\u201ctype\u201d:\u201cnumber\u201d,\u201cvalue"},{"entry":"\u2003\u201d:\u201c.2\u201d}],\u201ccontainers\u201d:[ ],\u201cnext\u201d:"},{"entry":"{\u201cfunc\u201d:\u201cblockMotionMove\u201d,\u201cid\u201d:11,\u201cvalues\u201d:[{\u201ctype\u201d:\u201cnumber\u201d,"},{"entry":"\u2003\u201cvalue\u201d:\u201c6\u201d}],\u201ccontainers\u201d:[ ],\u201cnext\u201d:"},{"entry":"{\u201cfunc\u201d:\u201cblockMotionBounceOnEdge\u201d,\u201cid\u201d:13,\u201cvalues\u201d:[ ],\u201ccontainers"},{"entry":"\u2003\u201d:[ ]}}}}]},\u201cx\u201d:82,\u201cy\u201d:43}],\u201ccostumes\u201d:"},{"entry":"[{\u201cname\u201d:\u201cBird"},{"entry":"\u20031\u201d,\u201cimg\u201d:\u201c\/assets\/user\/50312c85692f88c95000006b.png\u201d},{\u201cname"},{"entry":"\u2003\u201d:\u201cBird 2\u201d,\u201cimg\u201d:\u201c\/assets\/user\/"},{"entry":"50312caa692f88ba5000007f.png\u201d,\u201ccx\u201d:80.5,\u201ccy\u201d:56.5},{\u201cname\u201d:\u201cBird"},{"entry":"\u20033\u201d,\u201cimg\u201d:\u201c\/assets\/user\/"},{"entry":"50312cb1692f88d550000075.png\u201d,\u201ccx\u201d:80.5,\u201ccy\u201d:56.5},{\u201cname\u201d:\u201cBird"},{"entry":"\u20034\u201d,\u201cimg\u201d:\u201c\/assets\/user\/"},{"entry":"50312cb6692f88e050000078.png\u201d,\u201ccx\u201d:80.5,\u201ccy\u201d:56.5}],\u201ccurrentCost"},{"entry":"\u2003ume\u201d:4,\u201csounds\u201d:[ ],\u201cscale\u201d:"},{"entry":"1.1090254493487,\u201cx\u201d:142.77345132738003,\u201cy\u201d:100.08159722222,"},{"entry":"\u201crotation\u201d:180,\u201crotat"},{"entry":"eLock\u201d:"},{"entry":"1,\u201cisHidden\u201d:false,\u201cvolume\u201d:100,\u201clocked\u201d:false,\u201cphysics\u201d:"},{"entry":"{\u201cisStatic\u201d:false,\u201cisActive\u201d:true,\u201cgeometry\u201d:\u201ccircular\u201d,\u201cdensity\u201d:1,"},{"entry":"\u201cfriction\u201d:0.5,"},{"entry":"\u201crestitution\u201d:0.2},\u201cvarDefaults\u201d:"},{"entry":"{ },\u201cvariables\u201d:{\u201cauto start\u201d:true,\u201cdistance\u201d:6},\u201clists\u201d:"},{"entry":"{ },\u201cclassname\u201d:\u201cParrot\u201d,\u201cid\u201d:\u201c50369e94692f885c770000c2\u201d,"},{"entry":"\u201cdocumentation\u201d:"},{"entry":"{\u201cdescription\u201d:\u201cParrot flies around and"},{"entry":"\u2003screeches.\u201d,\u201cinboundEvents\u201d:[{\u201cname\u201d:\u201c[registerFlagTrigger]\u201d,\u201cde"},{"entry":"\u2003scription\u201d:\u201c\u201d,\u201cvisible\u201d:true}],\u201coutboundEvents\u201d:"},{"entry":"[ ],\u201cproperties\u201d:[{\u201cname\u201d:\u201cauto start\u201d,\u201cdescription\u201d:\u201cIf auto start=true,"},{"entry":"\u2003animate on start\u201d,\u201cvisible\u201d:true},"},{"entry":"{\u201cname\u201d:\u201cdistance\u201d,\u201cdescription\u201d:\u201cSpeed of"},{"entry":"\u2003movement\u201d,\u201cvisible\u201d:true}]}}],\u201cmodels\u201d:[ ],\u201cvariables\u201d:{ },\u201clists\u201d:"},{"entry":"{ },\u201cphysics\u201d:{\u201cenabled\u201d:false,\u201cgravity\u201d:{\u201cx\u201d:0,\u201cy\u201d:10}}}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"A user can use learning center runtime , shown in , to run a computer program built in learning center workshop . For example, the interface by which the user accesses learning center runtime  is a web browser on a computing device such as a personal computer or a tablet or is an app running on a mobile phone or tablet computer. For example, the user may iterate through refining a computer program by making modifications such as adding and removing logic, changing the code blocks used and testing the computer program to see how the computer program runs.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 4","FIG. 4"],"b":["22","22","31","37","38","39","32","33","34","22","22","301","302","303","305","306","307","302","308","309"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 20","b":["200","201","210","202","203"]},"Scripts are registered against specific event types (e.g. program start, key event, mouse event). As illustrated by arrow , an external trigger event  results in a script  that has been registered in event registrations list  being added to a scheduler , which is a list of running scripts. Run loop  picks up a script to execute from scheduler . The scripts are executed in parallel by scheduler . Scheduler  determines how to select the next script (e.g. round robin, priority queue, time queue). The execution context is restored from a runtime stack  specific to that script. The instruction is executed as a non-blocking process.","For example, within a project runner , in a block  a next script is fetched from the scheduler. In a block , execution context is restored for the fetched script. In a block  an instruction is run. In a block , context is moved to a next instruction. As illustrated by arrow , block  and block  are continued until there is a context switch. A context switches occurs, for example, when the script has executed a yield instruction, a time slice expires, user interrupts execution, etc. When there is a context switch, in a block , execution context is saved and context is returned to block . If the end of the script has not been reached, the script is retained in the scheduler . If the end of the script has been reached, the script is removed from runtime stack  and the list of running scripts within scheduler .","For example, for learning center runtime , scripts  are written using Javascript. Javascript is a single-threaded environment in a web browser. A sequence of instructions is executed sequentially until the sequence relinquishes control back to the web browser before other instruction sequences will execute. As a result, multiple Javascript sequences cannot run at the same time.","For example, the learning center represents instructions as blocks so that each block represents one instruction that executes atomically, that is without being interrupted by another block. Each block must relinquish control back to the web browser in a timely fashion. Scheduler , therefore, maintains a context for each script sequence. Scheduler  selects a script sequence, switches to that script's context and executes a predetermined number of blocks for each turn. Scheduler  then selects the next script sequence and repeats until all scheduled scripts have run their turn. At this point scheduler  relinquishes control back to the web browser. The web browser starts up another time slice where another script sequence is executed. As a result, multiple scripts  can be run at the same time.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 5","FIG. 5"],"b":["21","22","51","52","53"]},"In a block , a project is loaded. In a block , assets are iterated. In a block , assets are fetched from assets storage . In a block , paths to assets are resolved and rewritten. In a block , optimization is performed. For example, the optimization can include removing assets not used by a target, as shown in a block . Likewise, the optimization can include recompressing and\/or scaling assets for the target, as shown in a block . Also, the optimization can include native code generation, as shown in a block .","In a block  the project is packaged based on a platform specific runtime, as illustrated by a block .","Once a computer program (project) is complete, a user can choose to create a lesson module based on the computer program. For example, the user can choose a create lesson option in learning center workshop  to activate learning module generator .","Learning module generator  includes a parser that parses through the computer program that the user built and generates a task list for the lesson module. For example, learning module generator  reads through the computer program, identifies all objects and identifies actions to recreate the computer program. Then, different kinds of steps are generated based on the results of parsing the computer program. A list of ordered steps are generated where complex tasks are outlined and grouped together.","As shown in , a drop down menu  accessed by a user from the \u201cTropical Bird\u201d label on the menu bar of user interface  includes a selection to \u201cCreate Lesson\u201d. As a result, learning module generator  (shown in ) is invoked and generates a lesson module from the computer program (shown in Table 3) for the flying bird project.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 7","b":["100","90","98"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 8","b":["23","61","23","62","23","67","67","68","69","70","71","72"]},"In a block , learning module generator  iterates through scripts. This is done, for example, to discover dependencies between messages and actors, etc., as shown in block , to sequence script steps by dependencies, as shown in block , and to determine cyclic dependencies and establish a preference for definitions, as shown in block .","As represented by arrow , learning module generator  then generates a sequential list of steps . As illustrated by block , a user can add notations to sequential list of steps . As illustrated by block , a user can reorder steps within sequential list of steps .","Once the list or ordered steps are generated, the user can customize the lesson module. For example, the user can change the order of steps so that the reconstruction of the steps of computer program occurs in a different order than the steps as they originally appeared in the in the computer program when authored. Learning module generator  is used to assure that dependencies between steps are accounted for.","For example, learning module generator  allows a user to add voice over in each step. The voice over is played back while the lesson module is being run within learning center runtime . Similarly, learning module generator  allows a user to add video in any step. The video is played back while the lesson module is being run within learning center runtime . Also, learning module generator  allows additional steps to be added in between the steps for the lesson module originally generated by learning module generator . For example, text for the lesson module can be customized When the user has completed modifications, learning module generator  saves the workflow as a lesson module.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 9","b":["81","82","23","83","84","85","83","23","86","87","88"]},"Table 4 shows an example of computer program for a complex project lesson produced based on language blocks from the flying bird project set out in Table 3:",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"{\u201cwidth\u201d:-600,\u201cheight\u201d:-400,\u201cbgtype\u201d:\u201cstretch\u201d,\u201ccanyasWidth\u201d:480,\u201ccanyasHeig"},{"entry":"\u2003ht\u201d:320,\u201cname\u201d: \u201cTropical Bird\u201d,\u201cdescription\u201d:\u201cHelp the tropical bird fly out to sea.\u201d,"},{"entry":"\u2003resources\u201d:[{\u201ccount\u201d:1,\u201cname\u201d:\u201cbeach.jpg\u201d,\u201cimg\u201d: \u201c\\\/assets\\\/Images\\\/"},{"entry":"Backgrounds\\\/Outdoor\\\/4fcf9088692f886b16000e53.jpg\u201d},{\u201ccount\u201d:1,\u201cname\u201d:\u201c Bird"},{"entry":"\u20031.png\u201d,\u201cimg\u201d:\u201c\\\/assets\\\/user\\\/50312c85692f88c95000006b.png\u201d},"},{"entry":"\u2003{\u201ccount\u201d:1,\u201cname\u201d:\u201cBird 2.png\u201d,\u201cimg\u201d:\u201c\\\/assets\\\/user\\\/"},{"entry":"50312caa692f88ba5000007f.png\u201d},{\u201ccount\u201d:1,\u201cname\u201d:\u201cBird"},{"entry":"\u20033.png\u201d,\u201cimg\u201d:\u201c\\\/assets\\\/user\\\/50312cb1692f88d550000075.png\u201d},{\u201ccount\u201d:1"},{"entry":"\u2003,\u201cname\u201d:\u201cBird 4.png\u201d,\u201cimg\u201d:"},{"entry":"\u2003\u201c\\\/assets\\\/user\\\/50312cb6692f88e050000078.png\u201d}],\u201cblocks\u201d:"},{"entry":"[{\u201ccount\u201d:1,\u201cfunc\u201d:\u201cregisterFlagTrigger\u201d},{\u201ccount\u201d:1,\u201cfunc\u201d:\u201cblockControlForever"},{"entry":"\u2003\u201d},{\u201ccount\u201d:1,\u201cfunc\u201d:\u201cblockLooksNextCostume\u201d},{\u201ccount\u201d:1,\u201cfunc\u201d:\u201cblockCon"},{"entry":"\u2003trolWait\u201d},{\u201ccount\u201d:1,\u201cfunc\u201d:\u201cblockMotionMove\u201d},{\u201ccount\u201d:1,\u201cfunc\u201d:"},{"entry":"\u2003\u201cblockMotionBounceOnEdge\u201d}],\u201cnotes\u201d:[{\u201cblock\u201d:null,\u201cspriteName\u201d:null,"},{"entry":"\u2003\u201cresource\u201d:\u201c\\\/assets\\\/Images\\\/Backgrounds\\\/Outdoor\\\/4fcf9088692f886b16"},{"entry":"\u2003000e53.jpg\u201d,\u201cresourceName\u201d:\u201cbeach\u201d,\u201cattached\u201d:null,\u201cid\u201d:1,\u201ctext\u201d:\u201c"},{"entry":"\u2003\u2003Let's select a Background for our tropical scene<\\\/h2> Click Add to open the"},{"entry":"\u2003Media Library. Select the Background to add it to the stage."},{"entry":"\u2003<\\\/p><\\\/div>\\n\u201d} ,{\u201cblock\u201d:null,\u201cspriteName\u201d:\u201cParrot\u201d,\u201cresource\u201d:\u201c\\\/assets\\\/us"},{"entry":"\u2003er\\\/50312c85692f88c95000006b.png\u201d,\u201cresourceName\u201d:\u201cBird"},{"entry":"\u20031\u201d,\u201cattached\u201d:null,\u201cproperFes\u201d:{\u201cx\u201d:442.77345132738,\u201cy\u201d:99.91840277778,"},{"entry":"\u2003\u201crotation\u201d:180,\u201crotateLock\u201d:1,\u201cscale\u201d:1.1090254493487},\u201cid\u201d:2,\u201ctext\u201d:\u201d"},{"entry":"Add a tropical bird to the Stge+21Vh2> Open the Media Library to add the Parrot<\\\/em>"},{"entry":"\u2003to the Stage.<\\\/p><\\\/div>\\n\u201d},{\u201cblock\u201d:null,\u201cspriteName\u201d:"},{"entry":"\u2003\u201cParrot\u201d,\u201cresource\u201d:\u201c\\\/assets\\\/user\\\/50312caa692f88ba5000007f.png\u201d,"},{"entry":"\u2003\u201cresourceName\u201d:\u201cBird 2\u201d,\u201cattached\u201d:null,\u201cid\u201d:3,\u201ctext\u201d:\u201d"},{"entry":"Let's make an animation<\\\/h2> Let's add a couple costumes to the Parrot that will let us"},{"entry":"\u2003make an animation. Later we will make it move as well. Add the first Costume from the"},{"entry":"\u2003Media Library to the Parrot.<\\\/p><\\\/div>\\n\u201d},"},{"entry":"\u2003{\u201cblock\u201d:null,\u201cspriteName\u201d:\u201cParrot\u201d,\u201cresource\u201d:\u201c\\\/assets\\\/user\\\/50312cb169"},{"entry":"\u20032f88d550000075.png\u201d,\u201cresourceName\u201d:\u201cBird 3\u201d,\u201cattached\u201d:null,\u201cid\u201d:4, \u201ctext\u201d:\u201d"},{"entry":"Two more to go...<\\\/h2> Add the next Costume from the Media Library to the"},{"entry":"\u2003Parrot.<\\\/p><\\\/div>\\n\u201d},{\u201cblock\u201d:null,\u201cspriteName\u201d:\u201cParrot\u201d,\u201cresource\u201d:\u201cVass"},{"entry":"\u2003ets\\\/user\\\/50312cb6692f88e050000078.png\u201d,\u201cresourceName\u201d:\u201cBird"},{"entry":"\u20034\u201d,\u201cattached\u201d:null,\u201cid\u201d:5,\u201ctext\u201d:\u201d"},{"entry":"Last one...<\\\/h2>"},{"entry":"Add the costume \\\u201c9\\\u201d from the media library to"},{"entry":"\u2003\\\u201cParrot\\\u201d.<\\\/p><\\\/div>\\n\u201d},{\u201cblock\u201d:\u201cregisterFlagTrigger\u201d,\u201cspriteName\u201d:"},{"entry":"\u2003\u201cParrot\u201d,\u201cresource\u201d:nulrattached\u201c:nulrid\u201d:6,\u201ctext\u201d:\u201d"},{"entry":"Now that we have everything set up, let\u2019s make it work!<\\\/h2> Drag the"},{"entry":"start<\\\/em> block to Parrot's code.<\\\/p><\\\/div>\\n\u201d},"},{"entry":"\u2003{\u201cblock\u201d:\u201cblockControlForever\u201d,\u201cspriteName\u201d:\u201cParrot\u201d,\u201cresource\u201d:null,\u201cattac"},{"entry":"\u2003hed\u201d:[\u201cregisterFlagTrigger\u201d,6],\u201cid\u201d:7,\u201ctext\u201d:\u201d"},{"entry":"Remember how to animate?<\\\/h2>"},{"entry":"Just like we did in previous activities, start by adding the forever loop<\\\/em> block to the"},{"entry":"\u2003start<\\\/em> block in Parrot's"},{"entry":"\u2003code.<\\\/p><\\\/div>\\n\u201d},{\u201cblock\u201d:\u201cblockLooksNextCostume\u201d,\u201cspriteName\u201d:"},{"entry":"\u2003\u201cParrot\u201d,\u201cresource\u201d:null,\u201cattached\u201d:[\u201cblockControlForever\u201d,7,0],\u201cid\u201d:8,\u201ctext\u201d:\u201d"},{"entry":"Adding animation logic to the Parrot<\\\/h2>"},{"entry":"Add the next costume<\\\/em> block into the forever loop<\\\/em> block in Parrot's"},{"entry":"\u2003code. This allows us to keep changing costumes to get the animation"},{"entry":"\u2003effect.<\\\/p><\\\/div>\\n\u201d},"},{"entry":"\u2003{\u201cblock\u201d: \u201cblockControl Wait\u201d,\u201cspriteName\u201d:\u201cParrot\u201d,\u201cresource\u201d:null, \u201cattached"},{"entry":"\u2003\u201c:[\u201cblockLooksNextCostume\u201d,8],\u201cid\u201d:9,\u201ctext\u201d:\u201d"},{"entry":"Adding animation logic to the Parrot<\\\/h2>"},{"entry":"Add the wait<\\\/em> block to the next costume<\\\/em> block in Parrot's code."},{"entry":"\u2003Without a wait block, the Parrot flaps it's wings too fast. To get a better effect we"},{"entry":"\u2003need to slow it down.<\\\/p><\\\/div>\\n\u201d},"},{"entry":"\u2003{\u201cblock\u201d:null,\u201cspriteName\u201d:\u201cParrot\u201d,\u201cresource\u201d:null,\u201cattached\u201d:[\u201cblockControl"},{"entry":"\u2003Wait\u201d,9,0,\u201c.2\u201d],\u201cid\u201d:10,\u201ctext\u201d:\u201d"},{"entry":"Adjusting our animation<\\\/h2>"},{"entry":"Set the value of the wait<\\\/em> block to .2<\\\/em> in Parrot's code. This will"},{"entry":"\u2003allow for a better animation effect by slowing down how fast the costumes"},{"entry":"\u2003change.<\\\/p><\\\/div> \\n\u201d},"},{"entry":"\u2003{\u201cblock\u201d:\u201cblockMotionMove\u201d,\u201cspriteName\u201d:\u201cParrot\u201d,\u201cresource\u201d:null,"},{"entry":"\u2003\u201cattached\u201d: [\u201cblockControlWait\u201d,9],\u201c id\u201d:11,\u201ctext\u201d: \u201d"},{"entry":"Now that the Parrot knows how to fly, let's make it move<\\\/h2> Add the"},{"entry":"move<\\\/em> block to the wait<\\\/em> block in Parrot's"},{"entry":"\u2003code.<\\\/p><\\\/div>\\n\u201c},{\u201cblock\u201d:null,\u201cspriteName\u201d:\u201cParrot\u201d,\u201cresource\u201d:null,"},{"entry":"\u2003\u201cattached\u201d:[\u201cblockMotionMove\u201d,11,0,\u201c6\u201d],\u201cid\u201d:12,\u201ctext\u201d:\u201d"},{"entry":"Set the speed of the Parrot<\\\/h2>"},{"entry":"The value of the move block determines the number of steps that the bird makes in every"},{"entry":"\u2003cycle of the loop. Set the value of the move<\\\/em> block to"},{"entry":"\u20036<\\\/em> in the Parrot's code.<\\\/p><\\\/div>\\n\u201d},"},{"entry":"\u2003{\u201cblock\u201d:\u201cblockMotionBounceOnEdge\u201d,\u201cspriteName\u201d:\u201cParrot\u201d,\u201cresource\u201d:"},{"entry":"\u2003null, \u201cattached\u201d:[\u201cblockMotionMove\u201d,11],\u201cid\u201d:13,\u201ctext\u201d:\u201d"},{"entry":"Last step, don't let the bird fly away<\\\/h2>"},{"entry":"If we were to run the program right now, the bird would just fly off the Stage."},{"entry":"\u2003We can easily fix this by adding the bounce on edge<\\\/em> block to the move<\\\/em>"},{"entry":"\u2003block in the Parrot's code. This is the easiest way to make the Parrot turn around when"},{"entry":"\u2003it gets to the edge of the"},{"entry":"\u2003Stage.<\\\/p><\\\/div>\\n]}],\u201cownerid\u201d:\u201c4fc97d5d692f883a79004c38\u201d,\u201cdetails\u201d:\u201c Watch"},{"entry":"\u2003the bird fly back and forth across the Stage.\u201d,\u201cconcepts\u201d:\u201cThis project combines the"},{"entry":"\u2003forever loop, animation and motion to make the bird"},{"entry":"\u2003fly across the Stage. The animation is simulated by using Next"},{"entry":"\u2003Costume<\\\/em> in the forever loop. The Move 6 Steps<\\\/em> block moves the bird in"},{"entry":"\u2003the direction it is pointing. If on edge, bounce<\\\/em> is the block that detects that the"},{"entry":"\u2003bird hits the end of the Stage and turns it around."},{"entry":"\u2003Used in combination, it appears that the bird is flying across the Stage.\u201d}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Learning module engine , shown in , is invoked when a user runs a lesson module. For example, a user from a learning center client utilizes learning center workshop  through an interface to invoke the lesson module. For example, the interface is a web browser on a computing device such as a personal computer or a tablet. For example, when learning is launched, a user chooses to run the lesson module using a browser. Then, learning module engine  takes over and guides the user to complete the lesson within the lesson module.","For example, learning module engine  displays a lesson bar that shows the steps that the user must perform. The area of the screen that the user must work on is highlighted and in order to proceed, the user must complete a current task. For example, learning module engine  provides the user with real-time help such as a \u201cHint\/Show Me\u201d button. Learning module engine  also plays any voice over or video associated with the lesson module. Learning module engine  also, for example, provides a user with an option to fast forward several steps in a larger task and an option to step backwards.","For example, learning module engine , while the user adds logic, highlights the source and target areas of the task. If the user makes a mistake, learning module engine  takes the user back to a known state. Once the user has recreated the original program, the lesson is complete. The user can then use learning module generator  to modify the lesson module.","For example, learning module engine  can also operate in other modes. For example, learning module engine  can include a mode where a user can open a lesson module and learning module engine  will animate the lesson module to a certain step. Similarly, learning module engine  can include a mode where a lesson module is run in slow motion continuously with voiceover. This mode can be useful, for example, when a user wants to generate a video.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 10","b":["24","23","101","105","24","102","103","104","101","102"]},"From within a lesson runner , a get instruction block  fetches an instruction within the instructions loaded by lesson loader . The instruction may include, for example, lessons steps from lesson steps , assets from assets  and blocks from blocks used . Get instruction  determines the type of instruction and passes it to the appropriate lesson step handler.","A determine type block  within learning module engine  sequentially handles instructions from lesson loader  and determines instruction type.","For a plain note, the message is displayed and\/or spoken. This is an informational message requiring either a timeout or user acknowledgement to continue. This is represented in  where for a note , learning module engine  displays a message, as represented by a block .","When a resource instruction is run, the resources that are to be used when hints are turned on are highlighted. The lesson step instructions are displayed and\/or spoken with entered explanations from the lesson creator. A check is performed that the resource was placed in the correct place by checking the associated project data structures for the correct placement. This is represented in  where for a resource instruction , learning module engine  displays a workshop window and highlights change, as represented by a block . Learning module engine  also validates settings, as represented by a block .","A code block instruction, when run, highlights the block to be used when hints are turned on and shows where the block should be placed on the code canvas. The lesson step instructions are displayed and\/or spoken with entered explanations from the lesson creator. A check is made that the block was placed in the correct place by checking the associated project code data structures. If validation is not successful, a message appears offering some hints. For example, the hints might include such things as animating actions, highlighting location on the display or masking location on the display.","Users are optionally allowed to proceed to the next step, in which case the lesson runner performs the action on behalf of the user. If validation was successful, the next lesson step is executed. This is represented in  where for a code block instruction , learning module engine  displays code and highlight blocks, as represented by a block . Learning module engine  also validates programming blocks, as represented by a block . After an instruction is processed, in a block , a next instruction is obtained. The lesson proceeds until no more steps, at which point the runner can offer additional activities or the user (lesson creator) can embed additional activities that can be done.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 11","FIG. 11","FIG. 12"],"b":["120","125","121","122","123","124","124","24"]},{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 12","FIG. 13","FIG. 13"],"b":["90","130","24","24","96","97","130","24","97","96"]},"For example, the Learning Center also allows the creation and running of puzzle type lessons with system validating success and failure type triggers.","That is, a puzzle is an example of a special kind of lesson that has built in validation. For example, the puzzle has a specific success criteria that the author defines, such as: \u201cMake the robot go to the green square.\u201d","The author of a puzzle lesson module builds the project (computer program) using learning center workshop. When building the lesson modules, the author uses two special blocks of code: a success criteria block and a failure criteria block. The author uses the blocks to define success and failure and to indicate the consequences of success and failure. The author then uses learning module generator  to generate a lesson module for the project.","When a user opens the project in a lesson running mode, upon a user completing an action, learning module engine  will check whether the success or failure criteria are valid. Learning module engine  will then execute the consequences of success or failure, as appropriate. This is illustrated in .",{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 14","b":["141","142","143","96","90","21"]},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 15","b":["151","150","154","155","21","160"]},"For example, the learning center allows a user to define activities that can be automatically validated by the learning runtime. For example, a task is presented to the student to accomplish a goal such as to write code to move a golf ball into a hole. The student creates the code. In order to check whether the code accomplishes the task, code blocks that the student has added can be checked to see that the code blocks are in the correct order. Alternatively, a trigger methodology can be used to determine whether the task was accomplished.","For example, a trigger is assigned to the objects that a user manipulates. The trigger is based on whether a criteria placed within the computing program has been satisfied. For example the objects are a ball and a hole. The triggers are hidden from the user. The triggers are code instructions that check for the criteria, as delineated by parameters. If the parameters are satisfied, the trigger is fired, and the process that checks that the code can determine whether the user accomplished the task. For example, a geometric criteria specifies that a ball must travel a certain distance. For example, a hole trigger checks that the ball is within the bounds of the hole.","In addition, other types of criteria can be used. For example, a time-based criteria indicates whether a task is completed within a specified amount of time. For example, did a mouse finish a maze in under 8 seconds? A code based criteria determines whether code used to accomplish a task is within predetermined parameters. For example, was a lesson completed using under 8 code blocks and without using recursion? Value-based criteria determine whether a particular value was reached. For example, was a score greater than 25? Event criteria determine whether a certain event criteria was received. For example, was a message sent by one of the actors? A physics based criteria indicates a physical property or phenomena occurred. For example, did a cannon ball reach a velocity of at least 25 meters per second? An external physical criteria indicates some real activity outside the program occur. For example, did a sensor on a physical stage robot move 10 feet?",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 16","b":["151","21","160","160","161","162","161","162","163","164","165","165"]},"An activity monitor  within lesson runner  includes a timer module , a resource monitor  and an event monitor . Lesson runner  performs a compare function  with a step list . Step list  includes steps , resources used  and blocks used . Each of steps  may be an asset to add step , a code to add step  or a property to change step .",{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 17","b":["179","90"]},{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 18","b":["181","90","182","96"]},{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 19","b":["191","90","192","96"]},"After a project author generates a lesson module within learning center server , the author can make the lesson module available to other users of learning center server . For example, other users are charged a fee for using a lesson module made available by an author and the author receives a portion of the fee, based, for example, on the number of other users that use the lesson module.","For example, an author is reimbursed based on tracking the number of times another user views or completes a lesson authored by the author. For example, an author gets paid $2 for every 1000 lesson views inside a paid course authored by the author. Alternatively, an author can sell a lesson for a flat fee.","Goal-Based Lesson Module Generation","Embodiments of the present disclosure can be used to generate lessons of varying scope to teach different programming aspects to students. In exemplary embodiments, students may select one or more programming goals they'd like to learn from a list of possible programming goals presented to the user via the user interface . Goals presented in this manner may include pre-written projects and\/or lesson modules that can be parsed by the learning module generator  to generate a list of tasks to teach the concepts, skills, and techniques associated with the goal.","Alternatively, a student may identify a software program (such as a game) or portion thereof that the student wishes to learn how to write, thereby presenting the student's own goal (learning to write a similar program) to the learning center workshop  or other software implementing functionality of the embodiments of the present disclosure. In such cases, systems and methods of the present disclosure can analyze the program and (based on pre-identified goals, skills, concepts, and code blocks) identify the goals, skills, techniques, and concept involved in writing the program, then generate a lesson module accordingly.","The programming goal identified by a student may pertain to any desired subject matter, programming language, functional effect, hardware component(s), or other characteristic. Exemplary goals may include creating a cartoon with sound, designing a game, creating an animated greeting card and many others. A variety of techniques and skills may be associated with each goal, and each technique or skill may in turn be associated with various core programming concepts.","For example, one possible goal that a user may select is to learn how to build a single-player side-scrolling game. This goal could be selected from a gallery of possible goals, or by the user identifying a side-scrolling game the user wishes to emulate. Associated with this goal may be one or more skills and techniques, such as animation, interactivity, general game building, sound handling, and others. Each skill or technique, in turn, may have one or more associated lower level (i.e., more detailed or fundamental) concepts.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 21","FIG. 21"],"b":["2100","2100","21"]},"In the exemplary method , a programming goal is received (). Where the goal is associated with a learning workshop project external computer program, or other software, such software can be parsed to identify code blocks (), and a statistical () and pattern matching () analysis performed on the code blocks to identify the concepts () and skills\/techniques () associated with the goal. Alternatively, or in addition, the identification of concepts () and skills () may be performed by retrieving concepts, skills, code blocks, and\/or lesson modules stored in conjunction with the goal in a database. A lesson module is generated () in accordance with the identified skills, techniques, and concepts, for presentation to a student.","The programming goal may be received () by the learning center workshop  in any suitable manner. For example, a student may select the programming goal from a list of possible programming goals presented to the user via the user interface . A list of goals may be presented using graphics, icons, buttons, pulldown menus, and\/or any desired user interface feature. The student may also input one or more keywords to perform a search to find a goal associated with the one or more keywords. In this case, the goal and its associated skills, techniques, concepts, and projects\/programs may be stored in a database accessible by the learning center workshop , learning center server , and\/or other hardware or software component implementing methods of the present disclosure. Alternatively, the programming goal may be received () by the student identifying a program (or portion thereof) that the student wishes to learn how to emulate.","The identification of higher-level programming skills and techniques associated with a goal () or lower-level programming concepts associated with skills and techniques () may be identified using similar (or different) techniques, and according to any desired criteria. Any number of skills and techniques may be associated with any particular goal, just as any number of core concepts may be associated with each individual skill\/technique. Goals, skills, techniques, and concepts may be associated with identifying \u201ctags.\u201d Such tags can be defined and assigned to code blocks, programs, goals, skills, techniques, and concepts stored in a database in communication with the learning center workshop . As discussed below, this repository can in turn be used to tag code blocks, programs, goals, skills, techniques, and concepts for new programs (e.g., identified by a student as part of a programming goal the student wishes to achieve).","The goals, skills, techniques, and concepts may have a hierarchal relationship with each other. For example, a goal (at the highest level of the hierarchy) may have a plurality of associated skills at a lower level in the hierarchy, with each associated skill associated with one or more programming concepts at an even lower level. In this context \u201clow level\u201d refers to a lower level of abstraction (and thus a higher level of detail), whereas \u201chigh level\u201d refers to a higher level of abstraction (and thus a lower level of detail) associated with a goal, skill, technique, or concept. Accordingly, a low-level concept might be associated with mathematical operators, while a relatively higher-level concept or skill might be associated with geometric art that includes the use of mathematical operators, as well as other lower-level concepts.","In response to the selection of a goal, the learning center workshop , may identify one or more concepts () and\/or skills () necessary for the student to achieve the goal, as well as skills or techniques associated with the goal in any other desired manner Skills may be identified in response to the goal selection in real-time or near-real-time, or they may be predefined. For example, in a case where the student selects a programming goal from a list, the skills, techniques, and concepts may be pre-defined and stored (e.g., in a relational database record) in conjunction with a pre-generated lesson module.","In another example, in a case where the student identifies his or her goal by identifying a computer program the student wishes to learn how to write or emulate, the learning workshop  may analyze the program entered by the student to identify the goals, programming skills, techniques, concepts, and code blocks associated with the identified program. The student can identify a computer program in any desired manner, such as by uploading source code or object code for the program into the learning center workshop  or by providing a link to the program. The student may identify an entire complete program as well as portions of a program (such as individual functions or code fragments) associated with a programming goal the student wishes to achieve.","The code identified by a student is parsed () to identify one or more code blocks within the code. Each identified code block is compared to code blocks known to the learning center workshop  (e.g., stored in a database and associated with one or more concepts, skills, and\/or goals). Based on the similarity between the identified code block and one or more known code blocks, concepts, skills, and techniques can thus be assigned to the overall code.","In the exemplary method , one or more code blocks may be compared to known code blocks based on similar patterns. Such patterns may include, or be based upon sequences of instructions, variable names, function calls, interactions with other program elements, and any other desired features or criteria. A pattern may be identified for one or more lines of code, as well as for one or more code blocks.","Embodiments of the present disclosure may determine the functionality of blocks of code in an identified program. Among other things, this may aid in comparing the identified blocks to known coding blocks with similar functionality. Functionality of one or more code blocks may be determined in any suitable manner. For example, an identified code block may be executed using a virtual machine (i.e. a software simulator that emulates the functionality of a real-world system) and the functionality of the block determined based on the execution. The functionality of the identified code block can then be compared to the functionality of known code blocks associated with one or more goals, skills, techniques, and\/or concepts. The functionality of a code block may include, for example, user input, output to a user, modification of one or more states by a user, an environmental restart (e.g., characters in a game are reset to their initial state), and combinations thereof. Among other things, use of a virtual machine to execute code blocks allows embodiments of the present disclosure to analyze code executable across a variety of different hardware platforms and operating systems without having to test the code blocks on each actual platform.","The code identified by a student may have any number of different identified code blocks associated with it. Additionally, some code blocks may be associated with multiple goals, skills, concepts, and\/or techniques, and therefore may not (by themselves) be determinative in identifying a particular concept () or skill () for the identified code. Embodiments of the present disclosure may perform any desired analysis or other procedure to help ensure a lesson module is generated that correctly addresses the subject matter associated with a student's goal.","For example, embodiments of the present disclosure may perform a statistical analysis () to identify concepts and skills associated with a program. The statistical analysis () may include calculating the probability that an identified code block (or group of code blocks) is associated with a skill, concept, or goal based on the known code blocks and the skills, concepts and goals with which they are associated. A particular skill or concept can be assigned to the code identified by the student in response to such a probability meeting or exceeding a predetermined threshold. Probabilities for any number of different code blocks can be calculated in any desired manner, such as by calculating, for each of a plurality of identified code blocks, a probability that each respective identified code block is associated with each respective skill from the one or more skills.","In one example, a program identified by a student may be parsed () and the code blocks within the code identified, via pattern matching () to known code blocks, as having the following skill and concept tags associated with the code:","(animation)","(motion)","(keyboard_interaction)","(score_tracking)","(programmatic_music)","This sequence of skills and concepts can then be compared to the skills and concepts associated with known programs (e.g., stored in a database in communication with learning workshop ) that are representative of programs associated with the various skills and concepts.","In this example, the probability each concept or skill is associated with a particular type of program (specifically a \u201cgame\u201d) is as follows:","(animation)\u20140.9","(motion)\u20140.9","(keyboard_interaction)\u20140.9","(score_tracking)\u20140.9","(programmatic_music)\u20140.1","In this example, out of all programs in the database identified with the \u201cgame\u201d tag, 90% of the time, there is an \u201canimation\u201d sequence, but only 10% of the time is there a \u201cprogrammatic_music\u201d sequence. Embodiments of the present disclosure may calculate probabilities in any desired manner, such as by utilizing a Bayesian calculation. Continuing the previous example, the probability that a sequence associated with a skill or concept is in the program identified by the student may be calculated using the following equation:\n\nprobability_of_sequence_type_in_program=probability_of_being_program_type_given_sequence\/ (probability_sequence_appears_in_program_type+probability_sequence_appears_in_other_program_types)\n","Additionally, the probabilities for all the block sequences as a whole can be determined. The respective probabilities for each sequence are in a given type of program can be combined in an extension of a Bayesian equation as follows:\n\nprobability_of_program_type=(12)\/((12)+((11)*(12)* . . . *(1)))\n","Using the above exemplary equations, the program identified by the student in this example would have a probability of 0.999 (99.9%) that is a \u201cgame\u201d program. In embodiments where the learning center workshop  assigns a tag for a goal, skill, or concept to a program when the probability that one or more code blocks are associated with the same goals, skills, or concepts assigned to one or more known code blocks or programs meets or exceeds a threshold of, for example, 90%, the program would be assigned the \u201cgame\u201d tag in this example. In the same manner, the probability that the code block sequences in the program are associated with another type program may be used to determine the identified code or identified code blocks are not associated with a particular goal, skill, or concept. For example, if the individual probabilities that the code block sequences are associated with a music program are:","(animation)\u20140.3","(motion)\u20140.1","(keyboard_interaction)\u20140.2","(score_tracking)\u20140.0","(programmatic_music)\u20140.9","then the program will have a very low probability of being a \u201cmusic\u201d program because \u201cmusic\u201d programs have more programmatic music elements rather than animation, motion, keyboard interation, and score tracking.","The statistical analysis () may include other calculations and analyses as well. For example, embodiments of the present disclosure may be configured to generate alerts in response to one or more calculated probabilities that a goal, skill, and\/or concept associated with a particular code block, group of code blocks, or program being below a predetermined threshold. Using the example above, an alert might be generated in response to the individual probabilities for three of the five identified concepts and skills being below 40%. In other cases, an alert could be generated in response to the probabilities associated with each of any desired number or percentage of identified code blocks being below a predetermined threshold.","Embodiments of the present invention may determine complexity metrics associated with the identified code. The complexity metric can be determined for individual code blocks as well as for the identified code as a whole. Among other things, the complexity metric can help students and teachers determine whether the difficulty of a particular programming goal or project. Exemplary complexity metrics may include: a type associated with a code block, the number of code blocks in the code, a level of nesting in a code block, a number of devices (e.g., input\/output devices, communication hardware) interfacing with the code, a type of media (e.g., sounds, images, video) used by the code, functionality of the code, and combinations thereof.","The lesson module is generated () in accordance with the identified goal, skills, techniques, and concepts as described above. While method  is described in accordance with generating a lesson module for a single goal, the learning center workshop  may generate a lesson module that includes steps for teaching a student about any number of different goals, skills, techniques, and concepts. For example, for each skill, technique, or concept identified, the learning center workshop  may generate a respective step (or set of steps) in the ordered list of steps in the lesson module particularly tailored to teach a student the respective skill, technique, or concept.","Referring now to , diagram  illustrates a hierarchal view showing the relationships between various exemplary goals , techniques and skills , and core concepts . As described previously, a goal may be described in text (as with goal ), represented by an image (such as goal  representing a goal of animating a drawing), or in any other desired manner. In accordance with diagram , the learning center workshop  may identify two skills\/techniques  associated with goal , namely animation  and interactivity . In turn, animation  may be associated with the core concepts of delay , motion , and loops  while interactivity may be associated with the concepts key handling  and events . While animation  and interactivity  are illustrated as each being associated with different concepts, goals , techniques\/skills , and concepts  may be associated with each other in any suitable manner, including multiple techniques\/skills  being associated with the same concept .","Various embodiments of the present disclosure may be implemented in computer hardware, firmware, software, and\/or combinations thereof. Methods of the present disclosure can be implemented via a computer program instructions stored on one or more non-transitory computer-readable storage devices for execution by a processor. Likewise, various processes (or portions thereof) of the present disclosure can be performed by a processor executing computer program instructions. Embodiments of the present disclosure may be implemented via one or more computer programs that are executable on a computer system including at least one processor coupled to receive data and instructions from, and to transmit data and instructions to, a data storage system, at least one input device, and at least one output device. Each computer program can be implemented in any suitable manner, including via a high-level procedural or object-oriented programming language and\/or via assembly or machine language. Systems of the present disclosure may include, by way of example, both general and special purpose microprocessors which may retrieve instructions and data to and from various types of volatile and\/or non-volatile memory. Computer systems operating in conjunction with the embodiments of the present disclosure may include one or more mass storage devices for storing data files, which may include: magnetic disks, such as internal hard disks and removable disks; magneto-optical disks; and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data (also called the \u201cnon-transitory computer-readable storage media\u201d) include all forms of non-volatile memory, including by way of example semiconductor memory devices, such as EPROM, EEPROM, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM disks. Any of the foregoing can be supplemented by, or incorporated in, ASICs (application-specific integrated circuits) and other forms of hardware.","Changes and modifications may be made to the disclosed embodiments without departing from the scope of the present disclosure. These and other changes or modifications are intended to be included within the scope of the present disclosure, as expressed in the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 6","FIG. 7"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 8","FIG. 9"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 11","FIG. 12","FIG. 13"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 15","FIG. 16"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 17","FIG. 18","FIG. 19"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 22"}]},"DETDESC":[{},{}]}
