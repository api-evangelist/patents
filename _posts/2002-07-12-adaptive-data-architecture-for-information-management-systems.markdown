---
title: Adaptive data architecture for information management systems
abstract: A data architecture for an information management system for storing and retrieving data, where the system is characterized by a set of data processing rules. The data architecture includes a database management system implementing a primary data structure including a plurality of data elements for storing data, the primary data structure being characterized by a fixed data schema. The database management system also implements a secondary data structure defining a plurality of data relationships between the data elements of the primary data structure on a basis of the data processing rules of the information management system. Accordingly, the primary data structure is independent of the data processing rules of the information management system, such that the primary data structure is unaffected by changes to the data processing rules of the information management system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07464095&OS=07464095&RS=07464095
owner: 
number: 07464095
owner_city: 
owner_country: 
publication_date: 20020712
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The invention relates to the field of information management systems. More specifically, the invention is directed to an adaptive data architecture for information management systems using database management systems (DBMS).","The traditional approach to the design of information management systems using relational databases typically progresses through five mutually exclusive stages:\n\n","The overall timeframe for application development is dependent on sequentially completing each stage and then moving on to the next. For example, all of the business requirements must be completely defined before the structure of the database tables and fields, as well as their relationships, can be designed. Similarly, the table structure must be completed before the access routines can be written. Based on the completed data schema and procedures, the software programmers then start to develop the business modules and corresponding user interfaces.","The traditional approach can take considerable time. Making changes to a previously completed stage turns into a time consuming process requiring the developers to go \u201cback to the drawing board\u201d and re-work what was already completed. The design phase is most critical because fundamental decisions are made about the general use, purpose and shape of the application. If this foundation work is flawed, it is extremely difficult and expensive to correct later. If there are design weaknesses, the entire process has to be backed up and repeated.","Conventional relational database management systems (RDBMS) are typically built using a fixed data architecture, where this fixed data architecture consists in fixed data structures such as data fields, memo fields, records, spreadsheets, data files, indexes and relationships. Specifically, a data model, including a fixed physical data structure and data access routines, is designed and implemented based on predetermined business rules and requirements known at the time of design. This data model often determines the success or failure of the resulting application. Unfortunately, once completed, changes to this data model in order to implement new requirements are very difficult, due to limitations imposed by the fixed data structure and the dependence of the data model thereon, such that both the data structures and the business rules become locked in to each other.","Consequently, the life span of the traditional information management system is relatively short, as the completed data model rapidly becomes obsolete in the face of new and evolving business requirements. The fixed data architecture limits the growth of the system, as the overall system is unable to evolve to address future business needs and requirements.","Furthermore, relational database management systems often have difficulty integrating with modern object-oriented application development, which introduces objects defined by dynamic templates that are able to adapt and change according to the needs of the application. This is due to the fact that the fixed data structure of the conventional relational database management system originated at a time when business requirements were known well in advance of the system design and were not expected to change once systems were designed and deployed. Thus, the fixed data structure used by relational database management systems is a severe bottleneck in the development, life cycle and flexibility of any data-centric software solution.","A common solution to the limitations of the existing RDBMS engines is the regular re-working of the fixed data architecture, time and time again, in order to implement new business processes. When unforeseen applications require access to the data schema previously developed for an existing RDBMS, another possible solution is the development of separate databases that run independently from the original database, even though some data may be duplicated in both the original and new databases. Such solutions are expensive, time consuming and extremely inefficient.","Against this background, a need exists in the industry for an improved data architecture for information management systems using conventional DBMS engines.","According to a broad aspect, the invention provides a data architecture for an information management system for storing and retrieving data, where the system is characterized by a set of data processing rules. The data architecture includes a database management system implementing a primary data structure including a plurality of data elements for storing data, the primary data structure being characterized by a fixed data schema. The database management system further implements a secondary data structure defining a plurality of data relationships between the data elements of the primary data structure on a basis of the data processing rules of the information management system, whereby the primary data structure is independent of the data processing rules of the information management system.","Advantageously, this novel data architecture improves the flexibility and functionality of the information management system, which is used for the storage and retrieval of information. The data architecture allows for the separation of the fixed primary data structure from the data processing rules of the system, such that the system becomes flexible and adaptive to modifications to the data processing rules. More specifically, the actual physical data structure of the information system does not have to be modified when the data processing rules must be changed to implement new requirements.","In a specific, non-limiting example of implementation, the novel data architecture is applied to an N-tier client\/server information management system, which is operative to store and retrieve information for implementing different business applications.","The information management system includes an N-tier application layer and an N-tier data management layer. The data management layer includes a plurality of database management systems. Each database management system implements a primary data structure including a plurality of data elements for storing data, where the primary data structure is characterized by a fixed data schema. In other words, the primary data structure is a physical data structure in which the physical layout of the stored data is fixed.","Examples of such database management systems include relational database management systems (RDBMS), hierarchal database management systems and XML database management systems, among other possibilities.","The application layer of the information management system is characterized by at least one set of data processing rules, also referred to as business rules or business logic. A data processing rule is a directive, policy or procedure, either established within an organization or by an outside source, which defines information and\/or information relationships that must be supported by the system. Each set of rules is associated with the processes and functions of a particular business application implemented by the information management system, and guides the data processing performed b the systems under this particular business application.","The application layer of the information management system also includes a plurality of different client application user interfaces, each user interface being associated with a respective set of data processing rules, and thus with a respective business application. Each user interface is operative to present information to a system user, to prompt the user for input and to obtain data from the user.","Specific to the present invention, the database management system also implements a secondary data structure. For each business application, the secondary data structure defines a plurality of data relationships between the data elements stored in the primary data structure, where these data relationships are established on the basis of the corresponding set of data processing rules. Accordingly, the primary data structure of the database management system is completely independent of the data processing rules.","The secondary data structure is a logical data structure defined by a particular organization of the data elements of the primary data structure, and characterized by a dynamically variable data model. This logical data structure is compatible with the application layer, and the primary data structure acts simply as an interface for channeling or exchanging data between the logical data structure and the application layer.","A data access module allows for data stored to be exchanged between the database management system and the application layer. The data access module includes a primary data access unit and a secondary data access unit. The primary data access unit is responsible for exchanging data with the database management system, and generates primary data instructions for transmission to the database management system. The database management system is responsive to these primary data instructions to modify the data elements of the respective primary data structure.","The secondary data access unit is operative to communicate and exchange data with the application layer of the system. More specifically, the secondary data access unit generates secondary data instructions on a basis of the data processing rules of the application layer, each secondary data instruction being indicative of a modification to be made to at least one of the data relationships defined by the secondary data structure.","The primary data access unit is responsive to a secondary data instruction generated by the secondary data access unit to convert the secondary data instruction into a primary data instruction for transmission to the database to the database management system. Various different algorithms and techniques may be implemented by the primary data access unit to convert secondary data instructions into primary data instructions.","According to another broad aspect, the invention provides an information management system for storing and retrieving data. The information management system includes an application layer characterized by a set of data processing rules, as well as a data management layer. The data management layer includes at least one database management system implementing a primary data structure including a plurality of data elements for storing data, where this primary data structure is characterized by a fixed data schema. The database management system also implements a secondary data structure operative to define a plurality of data relationships between the data elements of the primary data structure on a basis of the data processing rules of the information management system, whereby the primary data structure is independent of the data processing rules of the information management system.","According to another broad aspect, the invention provides a computer readable storage medium containing a program element for execution by at least one computer including a processor and a memory for implementing in the memory of the at least one computer an information management system. The information management system includes at least one database management system implementing a primary data structure including a plurality of data elements for storing data, where this primary data structure is characterized by a fixed data schema. The database management system also implements a secondary data structure operative to define a plurality of data relationships between the data elements of the primary data structure on a basis of the data processing rules of the information management system, whereby the primary data structure is independent of the data processing rules of the information management system.","In the drawings, embodiments of the invention are illustrated by way of example. It is to be expressly understood, however, that the drawings are provided only for purposes of illustration and as an aid to understanding, and are not intended to be a definition of the limits of the invention, for which reference should be made to the appending claims.",{"@attributes":{"id":"p-0034","num":"0038"},"figref":"FIG. 1","b":["10","12","14","18"]},"Each user interface component  contains input\/output rules, and is used to present information to the system user and to obtain input from the user. The user interface component  implements presentation logic that provides menus of display options that allow the user to navigate through the different parts of the business application and, in addition, allow for the manipulation of input and output fields through a display device, such as a computer terminal.","Each business component  contains business data processing rules implementing business logic that governs both the functions and processes of the business application. These functions and processes are invoked by either a user interface component  when a user requests an option or by another function or process.","A set of access routines  is associated with each DBMS  for implementing data access logic that interfaces to database system . The data access functions of each data access component  are generally invoked by a business function or process of one of the business components ; however, they may also be invoked directly by a user interface component .",{"@attributes":{"id":"p-0038","num":"0042"},"figref":"FIG. 2","b":"20"},"The information management system  includes an N-tier application layer , also referred to as the front end of the system , and an N-tier data management layer , also referred to as the back end of the system .","The data management layer  includes a plurality of database management systems . Each database management system  implements a primary data structure  including a plurality of data elements for storing data, where this primary data structure  is characterized by a fixed data schema. In other words, the physical layout of the data stored in the primary data structure  is a physical data structure in which the physical layout of the stored data is fixed. The data elements of the primary data structure  may consist of database tables, data fields of fixed or variable length, records, word processing documents, spreadsheets, data files, database files, indexes, among many other possibilities.","For the purpose of clarification, the following example of implementation will be described in the context of a single database management system , although the same implementation may be applied to the plurality of database management systems .","Examples of such database management systems include relational database management systems (RDBMS), hierarchical database management systems and XML database management systems, among other possibilities.","In a specific example, the primary data structure  includes a database containing a plurality of tables for storing data, where each table includes a fixed number of columns and a dynamically variable number of rows. Although the physical layout of the tables in the primary data structure  is fixed, the size, or more specifically, the number of rows in a table of the primary data structure  may vary as a result of the type and quantity of data input to the system  for storage.","It should be noted that a data element stored in the primary data structure might include textual information and\/or binary information.","The application layer  of the information management system  is characterized by at least one set of data processing rules , also referred to as business rules or business logic. A data processing rule is a directive, policy or procedure, either established with an organization or by an outside source, which defines information and\/or information relationships that must be supported by the system . Examples of business rules established by an outside source include government regulations and membership association guidelines. Each set of rules  is associated with the processes and functions of a particular business application implemented by the information management system , and guides the operation of the system , more specifically the data processing performed by the system , under this particular business application.","The application layer  of the information management system  also includes a plurality of different client application user interfaces , each user interface  being associated with a respective set of data processing rules , and thus with a respective business application. As discussed above in relation to , each user interface  is operative to present information to a system user, to prompt the user for input and to obtain data from the user. The functionality and implementation of such a user interface is well known to those skilled in the art, and is not critical to the present invention, such that it will not be described in further detail.","The application layer  is implemented in software, and uses an object oriented application development language, such as C++, JAVA or Visual Basic, among other possibilities. The functionality and implementation of the application layer of an information management system is well known to those skilled in the art, and will not be described in further detail.","Specific to the present invention, the information management system  also implements a secondary data structure . For each business application, the secondary data structure  defines a plurality of data relationships between the data elements stored in the primary data structure , where these data relationships are established on the basis of the corresponding set of data processing rules . Accordingly, the primary data structure  of the database management system  is completely independent of the data processing rules .","Take for example the situation where the business application to be implemented by the information management system  is the creation of a database of customer and employee information. In this case, examples of possible data relationships defined by the secondary data structure  may include the association of an e-mail address to a customer, the association of an address to a customer, the association of a telephone number to an employee, among many other possibilities.","More specifically, the secondary data structure  is a logical data structure defined by a particular organization of the data elements of the primary data structure . This logical data structure  is compatible with the object-oriented development language of the application layer , and the primary data structure  acts as an interface for channeling or exchanging data between the logical data structure  and the application layer . In this way, the primary data structure  is itself transparent to the application layer , which communicates with the logical data structure . Thus, the primary data structure  is separate from the data processing rules  of the application layer  and unaffected by any modifications made to the data processing rules .","The secondary data structure  is characterized by a variable data model. As is well known to those skilled in the art, a data model says what information is to be contained in a data structure, how the information will be used, and how the items in the data structure will be related to each other. By \u201cdynamically variable\u201d is implied that the secondary data structure  is capable to adapt to different quantities and types of information to be stored in the information management system . Thus, the creation and modification of the secondary data structure  is driven by the actual processing rules  of the system .","A data access module  allows for the data to be exchanged between the database management system  and the application layer . As shown in , the data access module  includes both a primary data access unit  and a secondary data access unit . The primary data access unit  is responsible for exchanging data with the database management system , and generates primary data instructions for transmissions to the database management system . The database management system  is responsive to these primary data instructions to modify the data elements of the respective primary data structure .","In a specific example, the primary data instructions generated by the primary data access unit  implement the basic data access routines of the information management system , notably the Read, Write and Delete routines. The Read routine allows for a data element to be read from the primary data structure , while the Write routine allows for a data element to be written to the primary data structure . The Delete routine allows for a data element to be removed from the primary data structure .","The secondary data access unit  is operative to communicate and exchange data with the application layer  of the system . More specifically, the secondary data access unit  generates secondary data instructions on a basis of the data processing rules  of application layer , each secondary data instruction being indicative of a modification to be made to at least one of the data relationships defined by the secondary data structure .","Similarly, the secondary data instructions generated by the secondary data access unit  are access routines associated specifically with the secondary data structure , in order to create, edit and delete data stored in the dynamic tables of the secondary data structure , among other possible processes. For each different business application, and thus for each different set of data processing rules , the same set of access routines implemented by the secondary data access unit  allows for the customization of the data relationships defined by the secondary data structure . The particular set of data access routines implemented by the secondary data access unit  will be described in further detail below.","The primary data access unit  is responsive to a secondary data instruction generated by the secondary data access unit  to convert the secondary data instruction into a primary data instruction for transmission to the database management system . Various different algorithms and techniques may be implemented by the primary data access unit  to convert secondary data instructions into primary data instructions. Such algorithms and techniques are not critical to the present invention and, as such, will not be described in further detail.","Thus, the separation of the fixed primary data structure , which stores the information being managed by the system , from the data processing rules , which define requirements to be met by the system , provide a flexible and adaptive data architecture for the information management system . In particular, the use of a dynamically variable secondary data structure  within the database management system  allows the system  to address new business requirements and needs that may arise over time with regard to an existing business application, without having to recreate or modify the primary data structure . Furthermore, the design, development and deployment of the information management system  can proceed simultaneously, since the data architecture shown in  supports future changes to the business rules and requirements of the system . More specifically, the specific details of the primary data structure  may be completed, and the data processing rules  added and refined, while the development of the system  is in progress.","According to the present example of implementation, each component of the information management system , including in particular the data access module , the data processing rules  and the user interfaces , is software implemented on one or more computing platforms, for example a server and several client workstations.  depicts a functional block diagram of one example of a computing platform  implementing at least one component of the information management system . Assume for example that the computing platform  implements the data access module  of the information management system . The latter is implemented by a program element that is stored in the memory , and executed by the controller , of the computing device . Alternatively, the data access module  may be stored on a computer readable medium, such as a floppy disk, that is external to the computing device . The floppy disk can be read by a floppy drive to load the program instructions in the memory . The computer readable medium may be part of a remote computing platform that is in some way connected to the computing platform that executes the program element for allowing the data transfer necessary to pass the program element to the computing platform on which the execution will take place. For example, a file server containing the program element that can be accessed over any suitable connection by another computing platform to obtain the program element is considered a computer readable medium storing the program element.","In another example,  shows a functional block diagram of a single server  implementing the entirety of the information management system  shown in . In this case, a memory  contains a program element that controls the operation of the server . That program element is comprised of individual instructions that are executed by various controllers . The program element includes several functional blocks that manage several tasks. One of those functional blocks is the Primary Data Management System (PDMS) , which provides efficient and effective use and maintenance of the primary data structure . For example, in the case where the primary data structure  consists of a plurality of relational databases, the PDMS  is a Relational Database Management System (RDBMS). The RDBMS will not be described in detail because it is well known to those skilled in the technological field to which the present invention belongs. The primary and secondary data structures ,  are stored in the memory , which also provides random access storage, capable of holding data elements such as data packets that the processors manipulate during the execution of the program element.","In the example shown in , primary and secondary data structures ,  are part of the memory  of the server . Alternatively, either one or both of the primary and secondary data structures ,  may be stored on a separate storage medium, such as non-volatile medium interconnected through a high speed data bus with the memory  so the record set from the data structure can be quickly loaded in the random access memory  for processing. Alternatively, the collection of data which makes up either one or both of the data structures ,  may be stored remotely on one or a set of physical storage device(s), for instance a disk. In such a case, one of the server's device drivers would be responsible for communicating directly with the peripheral device(s) in order to access the database.","In a specific, non-limiting example of implementation of the present invention, assume that the particular business application to be implemented by the information management system  is the creation of a database for storing and retrieving customer and employee information. For this particular business application, the business requirements are:",{"@attributes":{"id":"p-0062","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"CUSTOMER"},{"entry":"For each customer, the following information must be captured:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Name"]},{"entry":[{},"Last Name"]},{"entry":[{},"Physical Addresses"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Addr1"]},{"entry":[{},"Addr2"]},{"entry":[{},"City"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Electronic Addresses"]},{"entry":[{},"Email-Address"]},{"entry":[{},"Cell Numbers"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"EMPLOYEE"},{"entry":"For each employee, the following information must be captured:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Name"]},{"entry":[{},"Log Name"]},{"entry":[{},"Password"]},{"entry":[{},"Physical Addresses"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Addr1"]},{"entry":[{},"Addr2"]},{"entry":[{},"City"]},{"entry":[{},"Country"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Electronic Addresses"]},{"entry":[{},"Email-Address"]},{"entry":[{},"Cell Numbers"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Further, assume that the information management system  is characterized by the following data processing rules , also referred to as business rules or business logic:\n\n","Assume that the information management system  includes an RDBMS engine, whereby the primary data structure  is formed of a plurality of relational databases. The fixed data schema of the relational database structure  is integrated with a modern, object-oriented development language, such as C++, JAVA or Visual Basic, for implementing the secondary data structure . More specifically, the secondary data structure  includes object-based tables and the set of data access routines implemented by the secondary data access unit  are object-oriented. Typically, under an object-oriented development language, objects are comprised of data (properties) and processes (methods). For example, a \u201ccustomer\u201d object would be comprised of information (first name, last name, address, password, etc) and specific processes to access or update that information (read methods, write methods, etc). Such object-oriented development languages and techniques are well known to those skilled in the art, and as such will not be discussed in further detail.","The following steps must be followed in order to generate an object-oriented secondary data structure :\n\n","Continuing with the specific, non-limiting example of implementation of the database of customer and employee information, the following property and object classes are defined:",{"@attributes":{"id":"p-0067","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Property classes","Object classes"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Name","Customer"]},{"entry":[{},"Last Name","Employee"]},{"entry":[{},"First Name","P-Address"]},{"entry":[{},"Addr1","E-Address"]},{"entry":[{},"Addr2"]},{"entry":[{},"City"]},{"entry":[{},"Country"]},{"entry":[{},"Email-Address"]},{"entry":[{},"Cell Number"]},{"entry":[{},"Log Name"]},{"entry":[{},"Password"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"For each defined property class, the following methods are defined:\n\n","Similarly, for each defined object class, the following methods are defined:\n\n",{"@attributes":{"id":"p-0070","num":"0090"},"figref":["FIGS. 5A","FIG. 5C","FIG. 6","FIG. 7"],"b":["5","5","28","28","1","5","1","5","3","2","4"]},"A particular set of data access routines must also be defined, to be implemented by the secondary data access unit  for calling the methods of each defined property class and object class in order to customize the data relationships defined by tables T-T of the secondary data structure . The following is one example of such a set of data access routines:",{"@attributes":{"id":"p-0072","num":"0092"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"AddObjectClass((\u201cObjectClass\u201d)"},{"entry":"(Insert ObjectClass into T1)"},{"entry":"Add PropertyClass ((\u201cPropertyClass\u201d)"},{"entry":"(Insert PropertyClass into T5)"},{"entry":"AssociateOCPC(ObjectClass, PropertyClasses)"},{"entry":"("}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Loop for number of PropertyClasses"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Insert ObjectClassID, PropertyClassesID into t3"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End loop"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":")"},{"entry":"CreatPropertInstance(ObjectClass, ObjectClassInst,"},{"entry":"PropertyClassesValues)"},{"entry":"("}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Insert ObjectClassInst into T2"]},{"entry":[{},"Loop for number of PropertyClassesValues"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Insert ObjectClassID, PropertyClassesID, ObjectClassInstID,"]},{"entry":[{},"PropertyClassesValues into t4"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End loop"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":")"},{"entry":"Get info(\u201cObjectClassInst\u201d,\u201dPropertyClasses\u201d)"},{"entry":"("}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Select values from T5 as a, T2 as b, T1 as c, T3 as d"]},{"entry":[{},"where a.oiid = b.oiid and c.oid = b.oid and d.opid = a.opid. etc...."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":")"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Advantageously, using these data access routines, it is possible to:\n\n","Now, assume that information indicative of a new customer is input by a user for storage in the information management system . This inputted data will drive the secondary data structure  to create a new Object class instance in table T for this new customer, prompting the user for the associated Property class values in order to complete the Table T. Thus, in this scenario, the tables T and T will be dynamically varied by the addition of one or more new rows for the new customer information. In a different scenario, a customer could be deleted from the database, such that the corresponding Object class instance in table T would be deleted, and at least one row from each table T and T would be deleted.","Although several embodiments have been illustrated, this was for the purpose of describing, but not limiting, the invention. Various modifications will become apparent to those skilled in the art and are within the scope of this invention, which is defined more particularly by the attached claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["These and other features of the present invention will become apparent from the following detailed description considered in connection with the accompanying drawings, of which:",{"@attributes":{"id":"p-0026","num":"0030"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0027","num":"0031"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0028","num":"0032"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0029","num":"0033"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0030","num":"0034"},"figref":["FIGS. 5A","FIG. 2"],"b":["5","5"]},{"@attributes":{"id":"p-0031","num":"0035"},"figref":["FIG. 6","FIGS. 5A"],"b":["5","5"]},{"@attributes":{"id":"p-0032","num":"0036"},"figref":["FIG. 7","FIGS. 5A"],"b":["5","5"]}]},"DETDESC":[{},{}]}
