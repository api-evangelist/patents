---
title: Methods for dynamically configuring the cardinality of keyword attributes
abstract: Methods are provided for dynamically configuring the cardinality of keyword attributes. A table definition is received including an identification field, a keyword field and a keyword value field. A first value is inserted into the keyword value field and associated with a first keyword residing in the keyword field. Furthermore, a second value is inserted into the keyword value field and associated with the first keyword. Moreover, a first identification, which is part of the identification field, is associated with the first keyword.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06895412&OS=06895412&RS=06895412
owner: NCR Corporation
number: 06895412
owner_city: Dayton
owner_country: US
publication_date: 20010412
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention relates to methods for dynamically expanding the cardinality associated with keyword attributes in a data store.","Information collected about customers in the retail industry is typically stored by individual retailers in one or more databases. The information is used by the retailer to facilitate communications with their customers, to assist with the billing of their customers, and to improve the marketing of products or services to their customers. The warehousing and mining of this information is often referred to as customer relationship management (CRM). A plethora of information technology services and tools have been created in recent years to assist retailers in developing CRM systems from their existing customer databases.","Many retailers are still finding the task of creating CRM systems daunting, because often each retailer will have multiple disparate legacy databases having information about customers, and these databases need to be integrated in order to achieve a complete customer data representation. Moreover, the quality and accuracy of any CRM system is directly dependent upon the completeness of the customer data on which it depends. Accordingly, one of the paramount prerequisites of any successful CRM system is to establish a centralized data representation of a customer.","To achieve this, requires a single database table with design consistency such that all the various permutations of similar customer attributes are identified within the table as a single consistent customer attribute. For example, consider two databases within a retail establishment, the first is used to record and market to customers purchasing by mail order catalogue, and the second is used to record and market to customers purchasing by phone.","Over the course of time, each of these databases may have been populated, enhanced, and utilized by two separate business units within the retail establishment. As a result, each database table may represent attributes associated with the same customer in mutually exclusive manners making the integration of the two databases a labor intensive and expensive process for the retail establishment.","For instance, if the first database table recorded the various phone numbers of a customer as fields or attributes with field names such as \u201cphone1\u201d \u201cphone2,\u201d \u201cphone3,\u201d and the like, while the second database table recorded the same phone numbers of the customer as fields or attributes with field names such as \u201chome,\u201d \u201ccell,\u201d \u201cwork,\u201d and the like, then creating a centralized representation of the customer would require mapping the disparate naming conventions to a single consistent naming convention. Moreover, if each database has any significant number of attributes associated with each customer within the database, then the mapping of the disparate attributes of the two databases to a consistent schema may be very expensive for the retail establishment. Furthermore, achieving a consistent naming convention for disparate database tables is largely a manual process which typically cannot be achieved through automated software processes.","As one skilled in the art will readily appreciate, as the number of disparate databases and disparate naming conventions for attributes of each database increases within a retail establishment, the expense of migrating to a consistent centralized database will corresponding increase as well. Therefore, many retail establishments have been slow to migrate towards the CRM paradigm, and they have not benefitted, to any significant degree, from the CRM services and tools available in the industry.","Accordingly, methods are needed wherein a single database table definition would permit the rapid and easy migration of disparate database tables into a single consistent table. To achieve this, the cardinality (e.g., the relationship between the attribute and the value of the attribute, such as by way of example only, one to one, one to many, and the like) associated with the database attributes must be dynamically modifiable. By permitting the attributes of a table definition, associated with a database table, to be dynamically configured a single table definition may be defined wherein disparate attributes are seamlessly integrated.","In this way, retail establishments and any other organization, may rapidly and efficiently integrate all the information within the establishment's disparate databases by migrating the databases to a single table definition using standard automated database extraction and database insertion operations. This permits establishments the ability to rapidly create powerful and centralized data warehouses without the need to eliminate or modify any established information collection processes.","Database designers cannot adequately predict all of the attributes that will ever be of interest, correspondingly a flexible design approach to accommodate any unforeseen attributes which develop over the course of time is desirable. The adaptability of a new approach, which would permit a single database design to integrate with multiple disparate customer database environments without changing the single design, is highly desirable.","Accordingly, an object of the invention is to provide methods for dynamically configuring the cardinality associated with keywords in a data store. A table definition, associated with a table of a data store, may be defined to include a keyword value field which when combined with keyword and identification fields may be used to form a composite key associated with the table.","The cardinality associated with any given keyword may be dynamically altered as unique values are added to the keyword value field, without the need to alter the table definition of the data store. In this way, disparate data stores having information relevant to a single keyword may be combined in a single table definition that permits the keyword cardinality to be expanded without redesigning the table definition to achieve the same. As a result, data design consistency may be achieved programmatically without the need for labor intensive redesigning or ad hoc creation of table definitions which are typically required when information from disparate tables are integrated into a single table.","Additional objectives, advantages and novel features of the invention will be set forth in the description that follows and, in part, will become apparent to those skilled in the art upon examining or practicing the invention. The objects and advantages of the invention may be realized and obtained by means of the instrumentalities and combinations particularly pointed out in the appended claims. To achieve the foregoing and other objects and in accordance with the purpose of the present invention, methods for dynamically configuring a cardinality associated with keyword attributes are provided.","One aspect of the present invention provides a method for dynamically configuring a cardinality of keyword attributes having executable instructions, wherein a table is received. The table has a table definition including an identification field, a keyword field, and a keyword value field. First and second values are inserted into the table and associated with a first keyword. The values are part of the keyword value field while the first keyword is part of the keyword field. Further, a first identification which is part of the identification field is associated with the first keyword and the values.","Another aspect of the present invention provides a method for expanding a table definition having executable instructions where a table definition is received. The table definition includes an identification field, a keyword field, and a keyword value field. First and second values of the keyword value field are associated with a first keyword of the keyword field.","Furthermore, a method for expanding a keyword by permitting one or more keyword values to be associated with each keyword is provided having executable instructions for receiving a table having an identification field, a keyword field, and a keyword value field. Moreover, a first keyword is received and associated with the keyword field. The first keyword has first and second values where each value is associated with the keyword value field.","Still other aspects of the present invention will become apparent to those skilled in the art from the following description of an exemplary embodiment, which is by way of illustration, one of the best modes contemplated for carrying out the invention. As will be realized, the invention is capable of other different and obvious aspects, all without departing from the invention. Accordingly, the drawings and descriptions are illustrative in nature and not restrictive.","The present invention provides methods for dynamically configuring the cardinality associated with keyword attributes of a data store. One embodiment of the present invention is implemented by providing a single table definition within the NCR Teradata database and utilizing standard SQL database operations to extract information from disparate databases which is then inserted into the single table definition.","However, as one skilled in the art will readily appreciate alternative database technologies and database application programming interface (API) languages (now known or hereafter developed) may also be readily employed. Moreover, as one skilled in the art will readily appreciate no database is needed at all, since the present invention could be written as a stand alone application providing its own database operations and its own database API.","Information gathered by organizations is typically stored in databases. A database is a set of software applications which requires the information to be stored in a structured manner into one or more data structures referred to as database tables. Each table within the database includes columns (e.g. fields) and rows (e.g. tuples or records). Typically, each table has a single key or a composite key where access to a row of the table may be acquired when the appropriate key is provided.","A single key consists of a single unique field within the table, such that no value within the unique field recurs within the table. A composite key includes two or more fields within the table, such that no set of values within the fields, used for purposes of key construction, are identical within the table.","Furthermore, the fields of the table are defined when the table is initially created, this schema is often referred to as a table definition. If new fields are later added to the table, which were not initially defined, then the table definition must be modified to accommodate the newly added fields. As one skilled in the art will readily appreciate, modifying a table definition is an expensive and undesirable operation for large databases, requiring the table indexes and the entire database utilizing the table to be reconfigured or rebuilt. Also, during this operation access to the database is often restricted and available computing cycles for other computing operations become scarce. As a result, large databases are typically rebuilt on dedicated computing devices or are rebuilt during off-peak usage hours, so a user's response time is not measurably affected.","Accordingly, great effort and time are usually expended in the designing and creation of a database table definition, so that the definition may last for a reasonable amount of time without the need for modification. Moreover, when multiple databases are migrated to a single database a single table definition will need to be created to achieve consistency among all fields which are logically the same but stored under different field names within the multiple databases.","Consider a table definition having three fields: Identification, Keyword, and Value; where the \u201cIdentification\u201d field includes values L associated with uniquely identifying a specific customer of a retail establishment, these values may include, by way of example only, account numbers, social security numbers, last names, and the like. Moreover, an Identification field may be manufactured by additional software, such that a specific customer is resolved and given a unique Identification number by the additional software. This may be done, by way of example only, by analyzing information received from an unknown customer, and determining based on the information, such as address, last name, and\/or social security number, that the customer in question is uniquely identifiable with a Identification number \u201cn.\u201d Of course, as one skilled in the art will appreciate any number of data mining techniques may be used to identify a specific customer and assign a unique Identification number to that specific customer.","Furthermore the \u201cKeyword\u201d field includes string values which are the field names of other disparate database tables, such as by way of example only-\u201cphone,\u201d \u201caddress,\u201d \u201ccell,\u201d name,\u201d and others. Moreover, the \u201cValue\u201d field includes values associated with the keyword field. For example, if a keyword field value consists of the string \u201cname\u201d then a corresponding value field may include an associated value of \u201cHutchinson.\u201d","By permitting the fields of a disparate database to be included as string values in the keyword field, then a single table definition having three fields as presented above may be used to permit the integration of multiple disparate database tables into the single integrated table definition presented above. In this way, a retail establishment having separate or conflicting field names within disparate databases for information regarding the same customer may be seamlessly migrated to a single table using the table definition presented. Standard database extraction is operations may then be used to extract the fields of a database associated with a customer and used in connection with standard database insertion operations to insert the extracted fields and their corresponding values into the table definition presented.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1","b":["10","20","30","40"]},"The three fields are associated with a table in step  by creating a table definition. The table is created having a composite key which includes all three fields of the table definition in step . An initial Keyword string (\u201ckeyword1\u201d) is acquired from one or more external data stores along with an initial Value (\u201cvalue1\u201d). As previously presented, the Keyword string (e.g., keyword1) is a field name of an external table definition and the Value associated with the string (e.g., \u201cvalue1\u201d). Acquisition of keyword1 and value1 may be accomplished, by way of example only, by extracting these items from an external database using any standard SQL search query.","In step , keyword1 and value1 are inserted into the table, so as to create a first tuple or row in the table in step . Furthermore, keyword1 is also associated with a second value (\u201cvalue2\u201d) and inserted in the table in step , so as to create a second tuple or row in the table in step .","Assume for purposes of illustration only, a customer of a retailer with an account number of \u201c11111111.\u201d However, as previously presented the account number may just be used by another piece of software to assign a unique number to a customer associated with the account number. Or, alternatively the account number itself may be used as the Identification number, as discussed above. Further, the retailer maintains two disparate databases on customers, these databases are not integrated. Each database uniquely identifies the customer with the above account number, and each database contains a field entitled \u201cphone\u201d for the customer, however, in the first database a value associated with the phone field contains the customer's home phone number, while the second database includes a phone field's value containing the customer's work phone number.","In the present example, a table definition is established having three fields and two rows. The fields include \u201cIdentification,\u201d \u201cKeyword,\u201d and \u201cValue.\u201d Keyword1 is the string \u201cphone,\u201d and it is associated with the Keyword field. Moreover, the Identification field includes the account number \u201c11111111.\u201d The Value field has two entries which represent the customer's home phone number and work phone number. The resulting table has a first row including the tuple \u201c11111111, phone, home-phone-number\u201d and a second row including the tuple \u201c11111111, phone, work-phone-number.\u201d Access to the table is obtained using a unique composite key which includes all three fields of the table. The table appears as follows:",{"@attributes":{"id":"p-0039","num":"0038"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Identification","Keyword","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1 1 1 1 1 1 1 1","phone","home-phone-number (e.g., 000-0000)"]},{"entry":["1 1 1 1 1 1 1 1","phone","work-phone-number (e.g., 111-2222)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"In this way two disparate databases where integrated into a single database table definition where the Keyword phone which originally had a cardinality of one-to-one (e.g., the Keyword field value \u201cphone\u201d occurred only once within each database and had only one possible value, namely home or work phone number). Yet, by migrating to a table definition, as presented above, the cardinality associated with the keyword field is dynamically expanded to include a many-to-one relationship (e.g., the resulting table includes two phone Keywords, with each Keyword has one possible value, namely home or work phone number). Two disparate databases are merged into a single database table and the effective cardinality originally associated with fields of the disparate databases are dynamically modified during the transition.","As one skilled in the art will readily appreciate, the method depicted in  will readily permit automatic extraction and migration of multiple disparate database tables into a single integrated database table, thereby permitting a single centralized data store wherein the fields may be modified so as to change a cardinality associated therewith. This permits field extensibility and better data mining, since all information regarding a customer, may be centralized for purposes of data indexing, searching, retrieving, and extracting.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 2","b":["110","120","130","140","170","190","160"]},"The association between the first keyword and the first value creates a first table entry in step , and the association between the second keyword and the second value creates a second table entry in step . In this way, the table definition which was originally associated with two separate tables housing the first keyword is expanded by migrating the first keyword to a single integrated table definition of the present invention.","Accessing a unique row of a large database presents a number of performance issues, since often the table is indexed on its key, and if this key is modified regularly or comprises a large number of fields within the table, performance may actually degrade such that access to a single row becomes a linear function where each row is checked to determine if a match has occurred. In these situations, the maximum number of key queries that the database would need to perform would be a function of the total number of rows within the table itself. For example, a query against a table having 10,000 rows would require at a maximum 10,000 checks against each row before a guaranteed result could be returned from the query.","As one skilled in the art would readily appreciate, database retrieval time should be as direct as possible and should not be a serial or linear function. Correspondingly, two tables may be created for purposes of the present invention, as depicted in , where the access to the first table  (\u201cTable1\u201d) creates an index offset into a second table  (\u201cTable2\u201d).","Table includes three fields: \u201cID\u201d , \u201cKeyword\u201d , and \u201cValue\u201d . Values for the ID field  may be repeated within Table , and need not be unique. However, values for the Keyword field  (e.g., First Keyword  through Nth Keyword ) uniquely occur within Table1 , as may values associated with the Value field  (e.g., First Value  through Zth Value ). Although, since the Value field  is not part of the key, it is not required to be unique within Table . Accordingly, a key for Table  may include only the ID  and the Keyword  field. When a query to obtain a row of Table or Table2  is requested, the key is constructed using only the ID  and the Keyword  fields, with the smaller more compact Table being accessed initially and providing an index offset into the second larger Table. This reduces the amount of search queries necessary to return a result, since serial access begins, if at all, within Table and only where Keyword field values are not unique.","Table includes three fields: \u201cID\u201d , \u201cKeyword\u201d , and \u201cValue\u201d . However, in Table the composite key to access a row of the table includes the ID , Keyword , and Value  fields. Correspondingly, Keyword values, such as First Keyword  may be repeated within Table and only a complete tuple of table  is ensured to be unique. As a result, the key to Table includes all fields of Table as presented.","As one skilled in the art will readily appreciate, by decomposing a table definition of the present invention into two separate tables with the first being smaller and more compact and being used to provide an offset access into a second much larger table, performance may be substantially enhanced. Especially, if values are continually being added to the second table because updates to the entire database would not need to occur as each change is made, and the smaller compact table would rarely need updated. Moreover, the number of serial accesses of each row of Table is limited to those instances in which Keyword values are repeated and not unique.","Furthermore by using two tables, as presented above, a database server software can more easily enforce integrity constraints to preclude multiple values for a key when such a situation is not permissible. In this way, the integrity of a key's cardinality may be checked by using this multiple table feature to enforce one-to-one or one-to-many cardinality relationships.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 4","b":["400","410","1","1","1","430"]},"Subsequently, a second tuple I, K, and V are inserted into the second table in step . At some later point in time after the first and second table have been populated, a search request is received in step  for the tuple I, K, and V. This request precipitates a search of table 1 in step  where tuple I, K, and V are detected using the key pair I and K to access the first table, this detection also provides an index offset into the second table in step , such that searching of the second table begins with the tuple I, K, and V. The tuple I, K, and V are immediately detected in the second table and returned in step .",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 5","b":["1","480","1","490","1","1","1","2","500","1","2"]},"Subsequently, a search may occur against table T in step  where index offset is returned into T in step , and a further search beginning at offset location reveals a desired tuple value in step  which is returned in response to the initial search request.","The foregoing description of an exemplary embodiment of the invention has been presented for purposes of illustration and description. It is not intended to be exhaustive nor to limit the invention to the precise form disclosed. Many alternatives, modifications, and variations will be apparent to those skilled in the art in light of the above teaching. Accordingly, this invention is intended to embrace all alternatives, modifications, and variations that fall within the spirit and broad scope of the attached claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, incorporated in and forming part of the specification, illustrate several aspects of the present invention and, together with their descriptions, serve to explain the principles of the invention. In the drawings:",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
