---
title: Method, device, and system for securely sharing media content from a source device
abstract: A method, device, and system for sharing media content with a sink device includes performing a cryptographic key exchange with the sink device and generating an authorization key in a security engine of a system-on-a-chip (SOC) of a source device. The method may also include generating an exchange key as a function of the authorization key and a packet key as a function of the exchange key. Such key generation occurs in the security engine of the SOC, and the keys are stored in a secure memory of the security engine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09497171&OS=09497171&RS=09497171
owner: Intel Corporation
number: 09497171
owner_city: Santa Clara
owner_country: US
publication_date: 20111215
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION OF THE DRAWINGS"],"p":["The generation, sharing, and consumption of digital media content continue to grow as consumer devices capable of interacting with such content become ubiquitous. The desire to share digital media content between consumer devices, especially in the home environment, is increasing in unison with the increased exposure to digital media content. To ensure that two media devices can properly share digital media content while also ensuring the digital rights of such content remain protected, digital media content delivery protocols have been developed by various authority organizations. One such organization is the Digital Living Network Alliance (DLNA), which has established various interoperability protocols and standards for sharing media content between media devices. For example the Digital Transmission Content Protection (DTCP) protocol is a security protocol that defines security guidelines and compliance requirements for securely sharing media content between media devices. Digital Transmission Content Protection over Internet Protocol (DTCP-IP) is a sub-set protocol of the DTCP protocol directed to sharing media content between media devices over a network.","Some media devices utilize system-on-a-chip (SOC) designs due to their relatively small footprint. SOC devices are integrated circuits that incorporate various components, in addition to the processing core, of electronic systems on a single die. For example, an SOC may include a processor core, memory controller, video components, audio components, and\/or communication components on a single chip.","While the concepts of the present disclosure are susceptible to various modifications and alternative forms, specific exemplary embodiments thereof have been shown by way of example in the drawings and will herein be described in detail. It should be understood, however, that there is no intent to limit the concepts of the present disclosure to the particular forms disclosed, but on the contrary, the intention is to cover all modifications, equivalents, and alternatives consistent with the present disclosure and the appended claims.","In the following description, numerous specific details such as logic implementations, opcodes, means to specify operands, resource partitioning\/sharing\/duplication implementations, types and interrelationships of system components, and logic partitioning\/integration choices are set forth in order to provide a more thorough understanding of the present disclosure. It will be appreciated, however, by one skilled in the art that embodiments of the disclosure may be practiced without such specific details. In other instances, control structures, gate level circuits and full software instruction sequences have not been shown in detail in order not to obscure the invention. Those of ordinary skill in the art, with the included descriptions, will be able to implement appropriate functionality without undue experimentation.","References in the specification to \u201cone embodiment,\u201d \u201can embodiment,\u201d \u201can example embodiment,\u201d etc., indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the art to effect such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.","Embodiments of the invention may be implemented in hardware, firmware, software, or any combination thereof. Embodiments of the invention implemented in a computer system may include one or more bus-based interconnects or links between components and\/or one or more point-to-point interconnects between components. Embodiments of the invention may also be implemented as instructions carried by or stored on a machine-readable medium, which may be read and executed by one or more processors. A machine-readable medium may be embodied as any device, mechanism, or physical structure for storing or transmitting information in a form readable by a machine (e.g., a computing device). For example, a machine-readable medium may be embodied as read only memory (ROM); random access memory (RAM); magnetic disk storage media; optical storage media; flash memory devices; mini- or micro-SD cards, memory sticks, electrical signals, and others.","In the drawings, specific arrangements or orderings of schematic elements, such as those representing devices, modules, instruction blocks and data elements, may be shown for ease of description. However, it should be understood by those skilled in the art that the specific ordering or arrangement of the schematic elements in the drawings is not meant to imply that a particular order or sequence of processing, or separation of processes, is required. Further, the inclusion of a schematic element in a drawing is not meant to imply that such element is required in all embodiments or that the features represented by such element may not be included in or combined with other elements in some embodiments.","In general, schematic elements used to represent instruction blocks may be implemented using any suitable form of machine-readable instruction, such as software or firmware applications, programs, functions, modules, routines, processes, procedures, plug-ins, applets, widgets, code fragments and\/or others, and that each such instruction may be implemented using any suitable programming language, library, application programming interface (API), and\/or other software development tools. For example, some embodiments may be implemented using Java, C++, and\/or other programming languages. Similarly, schematic elements used to represent data or information may be implemented using any suitable electronic arrangement or structure, such as a register, data store, table, record, array, index, hash, map, tree, list, graph, file (of any file type), folder, directory, database, and\/or others.","Further, in the drawings, where connecting elements, such as solid or dashed lines or arrows, are used to illustrate a connection, relationship or association between or among two or more other schematic elements, the absence of any such connecting elements is not meant to imply that no connection, relationship or association can exist. In other words, some connections, relationships or associations between elements may not be shown in the drawings so as not to obscure the disclosure. In addition, for ease of illustration, a single connecting element may be used to represent multiple connections, relationships or associations between elements. For example, where a connecting element represents a communication of signals, data or instructions, it should be understood by those skilled in the art that such element may represent one or multiple signal paths (e.g., a bus), as may be needed, to effect the communication.","Referring now to , a system  for sharing digital media content includes a media source device , a media sink device , and a network . In operation, the media source device  may share digital media content with the media sink device  over the network  using a security protocol. In the illustrative embodiment, a Digital Transmission Content Protection (DTCP) security protocol is used, such as the Digital Transmission Content Protection over Internet Protocol (DTCP-IP). However, other security protocols may be used in other embodiments.","The media source device  initially authenticates the media sink device . If the media sink device  is successfully authenticated, the media source device  and sink device  perform a key exchange to generate a shared secret key. The media source device  generates a packet encryption key based on the shared key and encrypts the media content using the packet encryption key. The media sink device  may decrypt the media content using a shared exchange key. To ensure the security and protection of the media content, the keys and other cryptographic functions generated by the media source device  are done so within a security engine  of a system-on-a chip (SOC)  of the media source device . The media source device  maintains the keys in secrecy within a secure memory  of the security engine . In this way, digital media content may be shared with the media sink device  while ensuring the security of the digital media content and the encryption keys used to facilitate such secured sharing.","The media source device  may be embodied as any type of device capable of delivering digital media content to the media sink device . For example, the media source device  may be embodied as a set-top box, a digital television, a smartphone, a tablet computer, a laptop computer, a mobile internet device (MID), a desktop computer, or other device capable of delivery of media content. The media source device  may be configured to deliver any type of digital media content to the media sink device  including, for example, movies, pictures, images, songs, audio and\/or video recordings, and\/or any other type of audio, video, and\/or audio and video content.","As discussed above, the media source device  includes the SOC , which may be embodied as any type of system-on-a-chip device having various components and structures. In the illustrative embodiment of , the SOC  includes the security engine , a memory controller , a processor core , and bus a plurality of hardware peripherals , which are communicatively coupled to each other a link . The link  may be embodied as any type of interconnect such as a bus, point-to-point, or other interconnect capable of facilitating communication between the various components of the SOC . The hardware peripherals  may include any type of hardware peripheral component depending upon the intended functionality of the SOC . For example, in the illustrative embodiment, the hardware peripherals  include a demux  to separate audio and video content streams, video processing component(s)  to process video content, and audio processing component(s)  to process audio content. Of course, it should be appreciated that the hardware peripherals  of the SOC  have been simplified in the illustrative embodiment of  and that the SOC  may include additional, different, and\/or greater detailed hardware peripherals , which are not illustrated in  for clarity of the disclosure.","The security engine  may be embodied as a security co-processor or processing circuitry separate from the processor core . The security engine  includes a security key  and the secure memory , which is accessible only by the security engine . The security engine  stores the security key , and other cryptographic keys as discussed below, in the secure memory . In the illustrative embodiment, the security key  is provisioned during the manufacturing of the SOC , but may be generated by the SOC  during operation in other embodiments. For example, in some embodiments, the security key  is based on blown fuses within the security engine  itself. Additionally or alternatively, the security engine  may include a key-generating module, such as a trusted platform module (TPM), to generate the security key . During use, the security engine  may use any number of security keys , which may be identical or different from each other.","In some embodiments, the media source device  may include additional components and structures other than the SOC  depending on the type and intended use of the media source device . For example, in the illustrative embodiment of , the media source device  includes a system memory , a data storage , a communications output , and one or more input\/output devices . The system memory  may be embodied as any type of main memory or data storage locations including, for example, dynamic random access memory devices (DRAM), synchronous dynamic random access memory devices (SDRAM), double-data rate synchronous dynamic random access memory device (DDR SDRAM), mask read-only memory (ROM) devices, erasable programmable ROM (EPROM), electrically erasable programmable ROM (EEPROM) devices, flash memory devices, and\/or other volatile and\/or non-volatile memory devices.","The data storage  may be embodied as any type of device or devices configured for the short-term or long-term storage of data such as, for example, memory devices and circuits, memory cards, hard disk drives, solid-state drives, or other data storage devices. In the illustrative embodiment of , encrypted media content  may be stored in the data storage , which may be subsequently shared with the media sink device  as discussed below.","The communications output  may be embodied as a simplified output or as various circuits and\/or devices to facilitate, for example, communications with the media sink device . For example, the communications output  (and\/or communication circuitry within the SOC ) may any suitable communication protocol such as Ethernet (i.e. the IEEE 802.3 standard) or Wi-Fi\u00ae (i.e., the IEEE 802.11 standard), and\/or other communication protocols or standards.","The input\/output devices  may be embodied as any type of I\/O device for interacting with the media source device . For example, the I\/O devices  may include output devices such as a display for displaying media on the media source device  and speakers for playing audio content, and\/or input devices such as a remote control receiver, a keyboard, a mouse, and\/or the like.","The media sink device  may be embodied as any type of media device capable of communicating with and receiving media content from the media source device . For example, the media sink device  may be embodied as a digital television, a smartphone, a tablet computer, a laptop computer, a mobile internet device (MID), a desktop computer, or other electronic device capable of receiving of media content from the media source device .","The illustrative media sink device  includes a processor , a memory , communication circuitry , and one or more output devices , which may be similar to such components found in other media devices. For example, the processor  may be embodied as any type of processor capable of executing software\/firmware, such as a microprocessor, digital signal processor, microcontroller, or the like, and may include one or more processing cores. The memory  may be embodied as any type of memory or data storage locations including, for example, dynamic random access memory devices (DRAM), synchronous dynamic random access memory devices (SDRAM), double-data rate synchronous dynamic random access memory device (DDR SDRAM), mask read-only memory (ROM) devices, erasable programmable ROM (EPROM), electrically erasable programmable ROM (EEPROM) devices, flash memory devices, and\/or other volatile and\/or non-volatile memory devices.","The communication circuitry  may be embodied any type of circuitry and\/or device to facilitate, for example, communications with the media source device . For example, the communication circuitry  may support communication protocols such as Ethernet (i.e. the IEEE 802.3 standard) or Wi-Fi\u00ae (i.e., the IEEE 802.11 standard), and\/or other communication protocols or standards. The output devices  may be embodied as any type of output device for playing, rendering, or otherwise delivering the media content to a user. For example, the output devices  may include a display for displaying media on the media sink device  and speakers for playing audio content.","The network  may be embodied as any number of various wired and\/or wireless networks, in the illustrative embodiment, the network  is a local area network (LAN) such as a home network, but may be embodied as or otherwise include other networks in other embodiments. For example, in some embodiments, the network  may be embodied as an ad-hoc or point-to-point network or a wide area network (WAN). As discussed in more detail below, the media source device  is configured to share media content with the media sink device  over the network .","Referring now to , in use, the security engine  of the SOC  of the media source device  may be provisioned with key material for facilitating the delivery of media content to various sink devices. To do so, the media source device  may execute a method  for provisioning the security engine . The method  begins with block  in which the security engine  receives a source device certificate, a private device key, and a public certification key. The source device certificate, the private device key, and the public certification key are typically generated by a certification authority organization, which acts as a third-party verifier of the authentication of the particular device. The source device certificate includes a unique device identifier or number assigned to the media source device  by the certification authority organization to verify the media source device  to other media devices. The unique device identifier may also be used to revoke the authorization of the media source device  via distribution of a System Renewability Message (SRM) revocation list. The private device key may be used by the media source device  to sign the packets so as to authenticate the media source device  to other media devices as discussed in more detail below. Conversely, the public certification key may be used by the media sink device  to verify the packets received form the media source device  during authentication.","In block , the security engine  stores the source device certificate and the public certification key in the secure memory . In some embodiments, the security engine  may encrypt the source device certificate and\/or the public certification key using the security key  stored in the security engine . In such embodiments, the security engine  may store the encrypted source device certificate and\/or the encrypted public certification key in the secure memory , in the memory , or in the data storage .","In block , the security engine  encrypts the private device key using the security key  stored in the security engine . In some embodiments, the security engine  may also secure the encrypted private device key in block . To do so, for example, the security engine may perform a Cipher Block Chaining Message Authentication Code (CBC MAC) on the encrypted private device key. Alternatively, the security engine  may use some other cryptographic methodology to secure the encrypted private device key. Regardless, in block , the security engine  stores the secured, encrypted private device key in the secure memory . In this way, the security engine  of the SOC  of the media source device  is provisioned with initial key material to facilitate delivering media to sink devices in a secure manner.","Referring now to , the media source device  may use a Digital Transmission Content Protection (DTCP) protocol to share media content with the sink device  as discussed above. Prior to the actual sharing of media content with the media sink device , the media source device  is configured to authenticate the media sink device  and negotiate cryptographic keys with the media sink device  to facilitate the delivery of media content thereto. To do so, the media source device  may execute a method  for authenticating the media sink device . The method  begins with block  in which the media source device  determines whether a request for authorization has been received from the media sink device . If so, in block , the media source device  receives the sink device certificate and sink public cryptographic key. Similar to the source device certificate of the media source device , the sink device certificate is issued by the certification authority organization to verify the media sink device . The sink device certificate includes a unique device identifier assigned by the certification authority organization, which uniquely identifies the media sink device  from other media devices. The sink public key may be used by the security engine  in subsequent communications to verify that received messages were originated by the media sink device .","In block , the media source device  verifies the sink device certificate using the public certification key. In embodiments in which the public certification key is stored in an encrypted form, the security engine  of the SOC  of the media source device  retrieves the encrypted public certification key and decrypts the key using the security key . The public certification key is used to verify that the sink device certificate has been properly signed by an authorized media device. As such, in block , the media source device  determines whether the media sink device  is properly certified using the public certification key. If not, the method  advances to block  in which the media source device  rejects the authorization request from the media sink device .","However, if the sink device certificate is verified in block , the media source device  further verifies that the certification of the media sink device  has not been revoked. To do so, the media source device  may utilize an SRM list, which includes identifiers of devices whose certification has been previously revoked. The SRM list of the media source device  may be stored in the secure memory  of the SOC  in some embodiments. Alternately, the SRM list may be stored in the memory  or the data storage  in an encrypted or unencrypted form. As new devices are added to the local network of media devices, the SRM list is updated on each device. As such, in block , the media source device  compares the unique device identifier of the media sink device , which was received with the sink device certification, against the current SRM list. If, in block , the certification of the media sink device  is determined to have been revoked, the method  advances to block  in which the media source device  rejects the authorization request from the media sink device .","If, however, the certification of the media sink device is not revoked, the method  advances to block  in which the security engine  of the SOC  stores the sink public key in the secure memory  of the security engine . In block , the security engine  attic SOC  retrieves the source device certificate and private source key from the secure memory . Additionally, in block , the media source device  may retrieve a source public key and a source certificate and send the key and certificate to the media sink device . The source public key may be used by the media sink device  in subsequent communications to verify that received messages were originated by the media source device .","If the media source device is not verified in block , the method  advances to block  in which the media source device  rejects the authorization request from the media sink device . Alternatively, in some embodiments, the media source device  may attempt to resend the source certificate and source public key to the media sink device .","However, if the source certificate is verified in block , the method  advances to block  (see ) in which the media source device  and the media sink device  perform a key exchange. The key exchange is used to establish a shared secret key in the media source device  and the media sink device  without prior provisioning of the devices ,  with corresponding keys. The media source device  may use any appropriate key exchange algorithm to effect the establishment of a shared secret.","In the illustrative embodiment, the media source device  uses an elliptic curve Diffie-Hellman (ECDH) key exchange in block . To do so, the media source device  provisions the media sink device  for the Diffie-Hellman key exchange in block . For example, media source device  may select the elliptic curve, E, and the base point, G, to be used in generating the shared secret. The domain parameters associated with the elliptic curve and base point selections are sent to the media sink device  in block . Of course, in other embodiments, other Diffie-Hellman key exchanges may be used such as, for example, Rivest-Shamir-Adleman (RSA) Diffie-Hellman key exchange. In such embodiments, the media source device  generates the domain parameters (e.g., selects a prime number and a primitive root) and transmits the domain parameters to the media sink device  in block .","The security engine  of the SOC  of the media source device  may sign the transmission of block , and other subsequent transmissions, with the private source key corresponding to the public source key provided to the media sink device  in block . In some embodiments, the private source key may be the security key  or other key stored in the secure memory  of the security engine .","In block , the security engine  of the SOC  generates a source Diffie-Hellman public and private key based on the domain parameters generated or otherwise determined in block . The media source device  sends the public Diffie-Hellman key to the media sink device  in block . Again, such transmission may be signed by the security engine using the private source key (e.g., security key ).","In block , the media source device  receives the sink Diffie-Hellman public key from the media sink device , which may be calculated in a similar manner as described above in regard to the media source device . The media source device  stores the sink Diffie-Hellman public key in the secure memory  of the security engine . Additionally, in block , the media source device  verifies the signature of the sink Diffie-Hellman public key message, and other subsequent messages received from the media sink device , using the sink public key stored in the secure memory . If the media source device  determines that the message, or other message, is not properly signed, the method  advances to block  in which the media source device  rejects the authorization request from the media sink device .","In block , the security engine  of the SOC  of generates an authentication key, K, using the source Diffie-Hellman private key and the sink Diffie-Hellman public key. The security engine  may store the authentication key, K, the secure memory . In the illustrative embodiment, for example, the security engine  performs an elliptic curve scalar multiplication using the source Diffie-Hellman private key and the sink Diffie-Hellman public to generate the authentication key, K. Of course, other cryptographic calculations may be performed in block  in other embodiments to generate the authentication key, K. However, any such calculations occur in the security engine  to maintain the security of the authentication process.","In block , the security engine  generates an exchange key, K, In the illustrative embodiments, the exchange key, K, is embodied as a random nonce, but may be generated using other methodologies or calculations in other embodiments. The nonce is a random or pseudo-random number intended to be used only once in cryptographic functions to thwart, for example, replay attacked.","In block , the security engine  of the SOC  scrambles the exchange key, K, using the authentication key, K. The security engine  may use any suitable cryptographic calculation or scrambling algorithm\/methodology to scramble the exchange key, K. Subsequently, in block , the media source device  sends the scrambled exchange key to the media sink device . Again, as discussed above, such message may be signed by the security engine  of the SOC  using the private device key (e.g., the security key ). The media sink device  may generate the exchange key, K, using the shared authentication key, K. In this way, a shared secret key is established between the media source device  and the media sink device  using the security engine  of the SOC  of the media source device .","After the media source device  and the media sink device  have established the shared secret key via the method , the media source device  may share media content with the media sink device  using the shared secret key. To do so, the media source device  may execute a method  for sharing media content with the media sink device  as shown in . The method  begins with block  in which the media source device  obtains media content to be shared with the media sink device . Such media content may be stored in the media source device  as encrypted media content  or may be received by the media source device  from an external source (e.g., streamed or transmitted to the media source device  such as digital cable TV).","In block , the security engine  of the media source device  generates a random nonce, which is used to combat replay attacks. In block , the security engine  generates a packet encryption key, K, using the exchange key, K, the random nonce generated in block , and an encryption mode indicator (EMI), which is used for copy control of media content, in the illustrative embodiment, the security engine  utilizes an Advanced Encryption Standard-Cipher Block Chaining (AES-CBC) algorithm to generate the packet encryption key, K. However, other encryption algorithms may be used in other embodiments. It should be appreciated that a new packet encryption key, K, is generated in the security engine for each packet of media content sent to the media sink device .","In block , the security engine  encrypts the media content, or a portion thereof, to be sent to the media sink device  using the packet encryption key, K. Of course, if the media content is stored on the media source device  in an encrypted format (which would be encrypted using an encryption key other than the packet encryption key, K), the media source device  decrypts the media content before re-encrypting the media content with the packet encryption key, K.","In block , the media source device  encapsulates the encrypted media content, the random nonce generated in block , and the EMI into a Protected Content Packet (PCP) packet. Of course, other encapsulation methodologies may be used in other embodiments. Subsequently, in block , the media source device  sends the encapsulated packet to the media sink device . It should be appreciated that the media source device  may send multiple packets to the media sink device  to effect the secure delivery of the media content to the media sink device . The media sink device  may decrypt the media content using the exchange key, K, as discussed above.","While the disclosure has been illustrated and described in detail in the drawings and foregoing description, such an illustration and description is to be considered as exemplary and not restrictive in character, it being understood that only illustrative embodiments have been shown and described and that all changes and modifications consistent with the disclosure and recited claims are desired to be protected."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention described herein is illustrated by way of example and not by way of limitation in the accompanying figures. For simplicity and clarity of illustration, elements illustrated in the figures are not necessarily drawn to scale. For example, the dimensions of some elements may be exaggerated relative to other elements for clarity. Further, where considered appropriate, reference labels have been repeated among the figures to indicate corresponding or analogous elements.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 4","FIG. 1"]}]},"DETDESC":[{},{}]}
