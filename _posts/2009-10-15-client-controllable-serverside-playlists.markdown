---
title: Client controllable server-side playlists
abstract: A system and method is disclosed for establishing an interactive multimedia application environment in which server-side streaming media may be controlled by a client using a programming model provided at both a communication server and an interactive multimedia runtime on the client. The application program interface (API) preferably provides methods for the client user to establish a stream of data from the client to the communication server in addition to allowing a stream from the communication server to the client. The API also preferably allows the user at a client to exert control over the broadcasting of the media streams. Streams may be built, edited, paused, stopped, augmented, and the like by the client user. Each function that the client user may operate on the broadcast media stream is preferably viewable by all of the other subscribing clients.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08150918&OS=08150918&RS=08150918
owner: Adobe Systems Incorporated
number: 08150918
owner_city: San Jose
owner_country: US
publication_date: 20091015
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND OF THE RELATED ART","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["This application is a continuation of and claims the benefit of the priority of U.S. patent application Ser. No. 10\/353,811, filed Jan. 29, 2003, entitled \u201cClient Controllable Server-Side Playlists\u201d, and is hereby incorporated by reference.","The present invention relates, in general, to broadcasting Internet media, and, more specifically, to a system and method for providing a client controllable server-side playlist.","Streaming media is a technology that has steadily grown over the course of the Internet's popularity. A media stream is generally a cohesive segment of some media, such as video, audio, data, or the like. In a typical application a user may access a streaming media source to listen to music, view a movie or video feed, whether live or pre-recorded, all played from a remote server. The server generally sends the media segments across the Internet to the user, who generally must have a compatible media player to view the steaming media. Many different users may access the media stream, referred to as subscribing, to view or play the same content. Players such as the MICROSOFT WINDOWS MEDIA PLAYER\u2122, REALNETWORK'S REALONE PLAYER\u2122 and REALPLAYER\u2122, QUICKTIME\u2122 PLAYER, and the like, render the different media streams depending on their formats and display or play the media to the user.","Playlists are generally a list of media segments that are played in the playlist order. For example, radio stations typically plan the songs they will play throughout any given day by assembling a list of artists and songs for the disc jockeys to either play or monitor. In digital media, a sequence of media segments, for example, music, can be played one after the other either on a user's local machine, or played on the server side. Most media players, such as the MICROSOFT WINDOWS MEDIA PLAYER\u2122, allow a user to assemble a list of digitally recorded songs or video clips on the user's computer to play in any sequence selected by the user.","Streaming media is generally played from the server side, allowing individual users to subscribe to the media streams. Server-side programmers and administrators may basically combine snippets from different media files and treat them as one media output or stream. A television broadcasts is a similar concept where the content and advertisements are interspersed with each other with the user watching them on a single channel. While the media is being switched from one to another, the user does not intervene in anyway and experiences only a \u201csingle\u201d stream of the channel broadcast. One of the limitations with this server-side playlist scheme is that the user must usually not only know what it is that the user wants to view (i.e., the media format and access address), but the media must also typically have an explicit resource as well (e.g., channel 1, 6, and the like).","While playlists may provide the user with multimedia content that is very rich and very entertaining or informational, it is still a rather static experience among the growing number of dynamic and interactive applications appearing on the Internet. The user can subscribe or unsubscribe and, when subscribed, see or hear only the content playing on the server. While this may be acceptable in the case of a movie or song, if the streaming media is an instructional program, the user can only sit and experience the media. Users may overcome this limitation by developing their own playlists locally. However, those playlists cannot generally be shared with other users across a network without copying the entire playlist content to the other users.","The present invention is directed to a system and method for establishing an interactive multimedia application environment in which server-side streaming media may be controlled not only from the server-side developers, but also from users at the client-side. A programming model is provided at a communication server and an interactive multimedia runtime on a client. The application program interface (API) preferably provides methods for the user at a client to establish a stream of data from the client to the communication server in addition to allowing a stream from the communication server to the client. The API also preferably allows the user at a client to exert control over the broadcasting of the media streams. Streams may be built, edited, paused, stopped, augmented, and the like by a user operating a client. Each function that the client user may operate on the broadcast media stream is preferably viewed by all of the other subscribing clients.","The foregoing has outlined rather broadly the features and technical advantages of the present invention in order that the detailed description of the invention that follows may be better understood. Additional features and advantages of the invention will be described hereinafter which form the subject of the claims of the invention. It should be appreciated by those skilled in the art that the conception and specific embodiment disclosed may be readily utilized as a basis for modifying or designing other structures for carrying out the same purposes of the present invention. It should also be realized by those skilled in the art that such equivalent constructions do not depart from the spirit and scope of the invention as set forth in the appended claims. The novel features which are believed to be characteristic of the invention, both as to its organization and method of operation, together with further objects and advantages will be better understood from the following description when considered in connection with the accompanying figures. It is to be expressly understood, however, that each of the figures is provided for the purpose of illustration and description only and is not intended as a definition of the limits of the present invention.","Existing multimedia application environments (MAE) do not provide true interactivity with streaming media applications. Once the server has begun to broadcast the media stream, each accessing client or user may typically only play the stream. Individually, each client may pause or cut access to the stream, but the paused client will continue from the real-time point of the media stream.  is a block diagram illustrating the relationship of existing MAE. Server  connected to Internet  may serve several clients, clients -. Within server , application server  provides a streaming media function, such as streaming music, to each of clients -. Each of clients - will generally have a media player, such as player  shown on client , that reads the format of the streaming media and displays or plays the media to the user. Player  allows client  limited playback control, such as pausing or unsubscribing to the media stream. However, that control only effects client  locally. Client  cannot exert any additional control over the broadcast media at server .",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 2","FIG. 1"],"b":["100","101","103","200","100","201","103","200","201","200","101","103","201","100","103","101","201","202"]},"By selecting various functions provided on action panel , iMR  may preferably initiate a stream of data to iMCS . Therefore, unlike the process in , the multimedia environment established between server  and client  is two-way and interactive. Using this interactive gateway established between iMR  and iMCS , a user at client  may preferably build a personal playlist on server  to be played by iMCS . Moreover, a user may preferably stop or pause the stream, change or select specific resources, add media to in-progress streams, and the like. Each interaction may then preferably also be experienced by all of the subscribing clients. In this manner, personal playlists may preferably be built on-demand by client  at server  and then broadcast to each subscribing client.","It should be noted that the iMAE that is established between iMCS  and iMR  is made possible by a programming model that exists within each one. The programming model on the server-side provides a method of specifying the resource and the duration of how long to play that resource and\/or when to start within that media resource. Considering a media resource as merely a time-based resource (i.e., it starts at zero seconds and it has a specified duration), a developer may preferably provide to play a given media segment starting at 10 seconds and continuing for another 10 seconds. In this manner, using the server-side programming model, a developer may preferably issue multiple commands to create or edit a media stream (e.g., play media X for 10 seconds followed by media Y for one hour, and then switch to a live feed after playing media Y). Thus, a server-side interface is provided that makes the playlist editing and\/or creation simple.","In addition to providing control and access to server-side developers, the client-side programming model provides methods to the client that are communicated to and executed by the server. Therefore, a user, through the client-side application program interface (API) may also preferably issue the scripts or commands that are executable by the server to play media X for 10 seconds followed by media Y for one hour, and then switch to a live feed after playing media Y in the same way as the server-side developer.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3","b":["100","200","101","103","300","302","201","103","300","302","103","100","303","200","100","200","300","302","200"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 4","b":["103","400","401","402","101","405","407","400","103","401","402","400","303","405","407","400","103","401","402","401","405","407"]},"IMR  at client  may also instruct iMCS  to stop playing video from camera source  to play a multimedia datastream from electronic whiteboard . The instructor in the video may desire to write up certain formulae in real time for viewing by each subscribing client. Because the media stream at iMCS  now broadcasts the datastream from electronic whiteboard , each of clients - may preferably view the live writing in real-time. This operation illustrates the ability of iMR  and iMCS  to interleave live and recorded content and to do so \u201con-the-fly,\u201d when the originating stream has already begun.","In additional embodiments, a user of any of clients - may wish to participate in the seminar by asking the lecturer a question. In such embodiments, microphone resource  may be made available to any or all of clients -, or may be representative of a microphone peripheral attached to any one of more of clients -. When a client, such as client , desires to ask a question, iMR  at client  may preferably instruct iMCS  to stop playing the media stream from camera resource  and play the audio stream captured from microphone resource . Because iMCS  is now streaming the live audio captured from the user of client , each of the subscribing clients may listen to the user's question. The lecturer may be set up to either hear the audio directly from microphone resource  or may have his or her own subscribed client (not shown) to hear the audio. Therefore, by utilizing the client side API of iMR  at client , a complete iMAE is established in which live media and pre-recorded media may preferably be assembled and broadcast in a single streaming media source.","Moreover, regardless of which format the media segments are stored or created in, each subscribing client only sees a common, single media stream playing on the iMR, such as MACROMEDIA'S FLASH\u2122 PLAYER 6. Furthermore, the users at the subscribing clients preferably do not see or have to deal with changing the locations of the different media resources. The embodiments described herein preferably provide a single access point to the streaming media. Management of that media stream is preferably performed on the server-side, either by server-side developers or by client-side developers with, for example, ACTIONSCRIPT\u2122 from MACROMEDIA'S FLASH MX\u2122 development environment.","All media stream management is preferably directed by the programming model within an interactive multimedia development environment (iMDE). One example of a programming model capable of providing the features and elements of the embodiments described herein is MACROMEDIA'S ACTIONSCRIPT\u2122 API. It should be noted that the features and elements described herein may also be programmed and controlled by other similar programming models and APIs. However, for purposes of this disclosure, ACTIONSCRIPT\u2122 is used as an example in .",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 5","FIG. 5"],"b":["500","501","506","506","506"]},"In line , a communication stream is initiated between the publishing client and broadcasting iMCS . The first action performed in  is adding an audio stream to the open stream in line . The attachAudio method passes Microphone.get( ) object  which, in ACTIONSCRIPT\u2122, constructs a new audio object for a microphone resource. As such, the live audio captured by the microphone resource will be attached to the new stream. The second action performed is to add a video stream in line . The attachVideo method passes Camera.get( ) object  which constructs a new video object for a camera resource. The live video signal captured by the camera will be attached to the new stream.","In the ACTIONSCRIPT\u2122 model shown in , in order for a subscribing client to subscribe to and view a media stream, the stream generally is published to broadcasting iMCS . Line  preferably publishes a live stream called todays_news . The publish method of line  publishes the live audio and video that is being captured and placed onto the open stream by lines  and . This shows how the two separate media segments and possible different formats are combined into a single media stream, todays_news , published on broadcasting iMCS .","Multiple streams may preferably be open over a single connection, but in the embodiment described herein using the example programming model of ACTIONSCRIPT\u2122, each stream either publishes or plays. The publishing client represented in  may also open a second stream to play the published stream, todays_news . In line  a second stream is opened over the connection. Line  shows a subscribing video object, myVideoArea, in which a video stream is added through the attachVideo( ) method. The added video stream is defined by line  by the call to play todays_news  to the open video stream. The publishing client may now view the streaming video as a subscriber.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 6","b":["60","600","601","604","604","602","603","606","604"]},"Program segment  represents example code that may be used within the subscribing client. In lines  and , a connection is established between the subscribing client and broadcasting iMCS  at rtmp:\/\/myRTMPServer.myDomain.com\/app. In line , a new stream is initiated on the connection. In line , the subscribing client plays video stream myWeddingVideo  being broadcast on broadcasting iMCS .","It should be noted that in different embodiments of the technology described herein, program code or script, such as that described in , may be assigned to different user interface objects, such that users may preferably interact with elements on an iMR to execute commands or scripts that interact or operate with an iMCS. In the examples given with ACTIONSCRIPT\u2122, the ACTIONSCRIPT\u2122 code may be assigned to interface components of the MACROMEDIA FLASH\u2122 player allowing the subscribing user to interact with the iMCS.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 7","b":["70","700","705","701","706","702","707","703","708","704","705","706","708"]},"Program segment  represents example code that may be used within the iMR. In lines  and , a new connection is established between the iMR and iMCS  at rtmp:\/\/myRTMPServer.myDomain.com\/appMM. In line , a new stream is initiated over the connection. Line  adds a video object to the newly initiated stream. Finally, the client plays stream object  in line . Thus, the client subscribes to the stream being played at iMCS  comprising two recorded segments  and , and one live segment .","It is also possible to provide for clients to subscribe to streams published from an iMCS in which the stream may be live or recorded.  is a partial script listing demonstrating another embodiment of a capability to publish and subscribe to an example media stream according to the teachings described herein. Program segment  represents example code that may be run from the iMCS or the publishing client. Much as with the example shown in , a stream is established from the iMCS that plays two recorded stream objects for five seconds each, followed by one live stream object for five seconds in lines , , -. However, instead of merely streaming the multi-source stream, iMCS records the broadcast in line . By recording the multi-source stream, clients may subscribe to the broadcast stream whether or not the broadcast is live.","Program segment  represents example code that may be run from the iMR to subscribe to the published and recorded multi-source stream. Similar to the example from , a connection and stream are established in lines - with iMCS  at rtmp:\/\/myRTMPServer.myDomain.com\/appMM where the client subscribes to stream object . Because iMCS  has recorded the broadcast multi-source stream, the client may either subscribe to the live stream if it is still being broadcast from iMCS , or may subscribe to the recorded version if the live broadcast is over.","When implemented in software, the elements of the present invention are essentially the code segments to perform the necessary tasks. The program or code segments can be stored in a computer readable medium or transmitted by a computer data signal embodied in a carrier wave, or a signal modulated by a carrier, over a transmission medium. The \u201ccomputer readable medium\u201d may include any medium that can store or transfer information. Examples of the computer readable medium include an electronic circuit, a semiconductor memory device, a ROM, a flash memory, an erasable ROM (EROM), a floppy diskette, a compact disk CD-ROM, an optical disk, a hard disk, a fiber optic medium, a radio frequency (RF) link, etc. The computer data signal may include any signal that can propagate over a transmission medium such as electronic network channels, optical fibers, air, electromagnetic, RF links, etc. The code segments may be downloaded via computer networks such as the Internet, Intranet, etc.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 9","FIGS. 2-4"],"b":["900","900","901","902","901","901","901","902","903","904","902","903","904"]},"Bus  is also coupled to input\/output (I\/O) controller card , communications adapter card , user interface card , and display card . The I\/O adapter card  connects to storage devices , such as one or more of a hard drive, a CD drive, a floppy disk drive, a tape drive, flash ROM, or the like to the computer system. Communications card  is adapted to couple the computer system  to a network , which may be one or more of a telephone network, a local (LAN) and\/or a wide-area (WAN) network, an Ethernet network, and\/or the Internet network implemented either using wireline and\/or wireless transmission technology. User interface card  couples user input devices, such as keyboard , pointing device , or may also include input devices, such as touch-screens, telephone keypads, and the like, to the computer system . The display card  is driven by CPU  to control the display on display device , which may include devices, such as a computer monitor, a personal digital assistant (PDA) screen, a landline and\/or wireless telephone, or the like.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 10","b":["1000","1001","1002","1003","1004","1005","1007","1005","1006","1007"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 11","FIG. 8","FIG. 8"],"b":["1100","1101","1102","1103","1104","1104","1100"]},"Of course, it should be noted that in some embodiments, it may be beneficial to prevent everyone from being able to add media to the broadcasting streams. In these embodiments, access parameters may be established to grant rights for editing the streams.","Although the present invention and its advantages have been described in detail, it should be understood that various changes, substitutions and alterations can be made herein without departing from the spirit and scope of the invention as defined by the appended claims. Moreover, the scope of the present application is not intended to be limited to the particular embodiments of the process, machine, manufacture, composition of matter, means, methods and steps described in the specification. As one of ordinary skill in the art will readily appreciate from the disclosure of the present invention, processes, machines, manufacture, compositions of matter, means, methods, or steps, presently existing or later to be developed that perform substantially the same function or achieve substantially the same result as the corresponding embodiments described herein may be utilized according to the present invention. Accordingly, the appended claims are intended to include within their scope such processes, machines, manufacture, compositions of matter, means, methods, or steps."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a more complete understanding of the present invention, reference is now made to the following descriptions taken in conjunction with the accompanying drawing, in which:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
