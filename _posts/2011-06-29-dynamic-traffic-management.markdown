---
title: Dynamic traffic management
abstract: Requests from multiple users for one or more shared resources can be dynamically throttled based on at least one allowance value determined for each user at a current point in time. One or more business functions or other such algorithms can be used to determine an appropriate allowance value for a user based on any of a number of appropriate factors, such as the cost of a resource, a value of the user, a request volume of the user, or other such factors. The values for each user can be fed into one or more algorithms to determine information such as request limits, burst limits, and costs per request. Such approaches provide for dynamic and fine-grained traffic shaping while allowing for variance of these limits or values over time.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08667056&OS=08667056&RS=08667056
owner: Amazon Technologies, Inc.
number: 08667056
owner_city: Reno
owner_country: US
publication_date: 20110629
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["In provider networks and other electronic environments, it is common for multiple users to send requests to a common resource, such as a host machine or server that is operable to process the request and perform at least one associated action. As the number of users and requests increases, the number of resources needed to handle those requests increases as well. The cost of purchasing and maintaining these resources can limit the amount of resources made available, such that there generally is a maximum number of requests that can be handled at any given time, even when the requests are distributed across multiple instances of a given type of resource. Exceeding a maximum number or rate of allowable requests can negatively impact the quality of service that users receive, as the average response time for requests might increase dramatically, requests might time out, or the system might crash or experience other problems.","One conventional solution to this problem is to limit the number of requests from a given requestor over a given period of time, commonly referred to as throttling. In some conventional approaches, a group or type of user is given a hard limit for resource requests for a particular type of resource over a period of time. There might be more than one group or type of user that each receives a different limit, such as may be based upon the price paid by that type of user. While such an approach may be effective in some situations, it can be too limiting in other situations. For example, such an approach may work well in an environment with a single host having a fixed amount of capacity, but may not be optimal in situations where resources are provided in a dynamic and distributed fashion, where the amount of available resource capacity can change over time. Further, other aspects such as the effective cost of processing a request can vary over time as well. Hard limits or fixed throttling caps do not provide any flexibility to adapt to these changing conditions.","Systems and methods in accordance with various embodiments of the present disclosure may overcome one or more the aforementioned and other deficiencies experienced in conventional approaches to managing traffic, such as requests for resources in an electronic environment. In particular, various approaches discussed herein provide for dynamic throttling of requests, messages, or other such access to, or use of, resources that can be provided in a distributed environment. This dynamic throttling of requests, or \u201cshaping\u201d of traffic flow, can be provided by utilizing one or more resource appropriate curves or functions that are able to adapt to changing conditions across the network. In at least some embodiments, one such function can enable each customer (e.g., an individual user, entity, organization, etc.) to receive a portion of the resource capacity that is proportional to some type of value provided by that user to a provider of the resource. Such functions also can be used to determine factors such as rates of utilization for various customers, which can be used to determine an allowed amount of access to a resource to provide to a user for at least a given period of time. Such an approach enables throttling or traffic shaping approaches to adjust dynamically to various conditions and provide a much more fine-grained approach than for hard limits or step function-based throttling limits. Further, each type of resource can have one or more specific curves that can be used to shape traffic as appropriate for that particular resource. A user can be charged as appropriate for the type of resource accessed, the rate or volume of requests over a given period, and\/or other such aspects.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["100","102","104","104","106"]},"The Web services layer  can include any appropriate components known or used for receiving and managing Web service requests. These can include, for example, one or more Application Programming Interfaces (APIs), at least one Web server, firewall or security components, etc. When a request is received by the Web services layer (or another appropriate set of hardware and\/or software components), the Web services layer can determine various information about the request, such as a type of request and a user, customer, or entity associated with the request, and can determine whether to process the request based at least in part upon permissions, security policies, access agreements, and other such information. In this example, a component of the Web services layer  might determine that the request relates to at least one resource offered by an associated provider. The resource can be any appropriate device, system, or component operable to receive a request and perform an operation in response thereto. For example, a resource might be a data server  operable to read, write, or process data in or from one or more data stores . In some embodiments, a resource might comprise one or more compute resources , such as may comprise a host machine or application server operable to perform a specified operation in response to a request. Any other appropriate resource  can be provided as well, such as a resource that locates, provides, or renders content, etc. The resources can be dedicated or multi-tenant resources, where access may be shared among one more users according to one or more policies or rules. Further, the requests for a user might be allocated across multiple instances of a single type of resource.","When the Web services layer determines that the request is a valid request relating to an associated resource, a component of the Web services layer  can provide the request to one or more throttling components . The throttling components can include any appropriate device, system, module, or process, implemented in hardware and\/or software for managing customer traffic. In some embodiments, this involves placing information for the request in a work queue that is monitored by the throttling components. When a request is received by the throttling components , the components can consult information related to the request, such as a type of resource targeted by the request and a user associated with the request, as may be stored in at least one data store  or other such location. As used herein, the term \u201cdata store\u201d refers to any device or combination of devices capable of storing, accessing and retrieving data, which may include any combination and number of data servers, databases, data storage devices and data storage media, in any standard, distributed or clustered environment. Based at least in part upon this information, the throttling components can determine whether to allow or deny the request. If the request is denied, a denial message or other such information can be returned and\/or displayed to the user as appropriate. If the request is allowed for processing, information for the request can be passed to one or more routing components , as known or used in the art for routing traffic, to direct the request to an appropriate resource. As discussed, the resources might be distributed logically and\/or geographically, and the network routing can ensure that the request is directed to an appropriate instance, address, or location, etc. It should be understood that there can be several servers, layers, or other elements, processes, or components, which may be chained or otherwise configured, that can interact to perform tasks such as obtaining data from an appropriate data store or causing an operation to be performed. Each server or host device in the system typically will include an operating system that provides executable program instructions for the general administration and operation of that server or device, and typically will include at least one non-transitory computer-readable storage medium storing instructions that, when executed by a processor of the server, allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art, particularly in light of the disclosure herein.","The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links, using one or more computer networks or direct connections. However, it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Further, traffic management could be offered as a service for third party providers whereby at least some of the resources are provided by a third party, and the requests from the user are received (or intercepted) by the throttling service and then denied or passed along to the third party for processing. Thus, the depiction of the system  in  should be taken as being illustrative in nature and not limiting to the scope of the disclosure.","As discussed above, for each type of resource there can be a maximum amount of capacity available at any given time, even though this amount might vary over time, such as where additional servers or host machines are added to, or removed from, the respective portion of the network. Traditional throttling approaches that place fixed limits on resources or numbers of requests do not adapt well to these dynamic changes, and can result in resources being underutilized, users being unnecessarily limited, or other such situations.","Approaches in accordance with various embodiments address at least some of these and other situations by utilizing one or more resource allocation or traffic shaping curves or functions, which can be selected and\/or adapted to various situations. For example, different types of resource might have different curves used for access control, or can utilize different scaling factors or other such values that can affect the shape or results of a given curve.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2","b":["200","202","204","206"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 3","FIG. 2","FIG. 3"],"b":"300"},"In some embodiments, a curve such as that illustrated in  might be applied to individual customers as well. Such an approach would enable individual customers to obtain a cost per request that is determined based upon an amount of capacity that is dedicated to that customer. In this way, customers purchasing a large amount of capacity (whether dedicated, reserved, etc.) might pay less on a per-request basis than a customer who submits only a small number of requests with no minimum allocated capacity. Such an approach effectively enables certain customers to obtain a \u201cdynamic volume discount\u201d based at least in part upon a current rate of usage of not only all customers, but the individual customer itself.","As discussed above, such curves can be used to control access to a resource or otherwise shape network traffic. For example,  illustrates an example of a curve  that can be used to determine an amount of access to give to a customer under current conditions. Again, the curve can be normalized to run from 0 to 1 in at least some embodiments. An appropriate business function can be selected that can address the fact that the supply (e.g., availability) and demand (e.g., number of requests) for a given type of resource can change over periods of time and over different types of resource.","An example of one such business function (here, a sigmoid function) as illustrated by the plot of  is given by:\n\n\n\nwhere \u03c8 is defined as the allowance of a resource, the evaluation of a function that has a range of [0,1], which can be based upon factors such as the cost of a resource at the current time and\/or inputs based on the source or type of request, etc. Further, S is a scaling factor that can be selected based at least in part upon the current type of resource for which traffic is being shaped, and T is the maximum traffic level for a particular allowance. The implication is that, for given values of the normalized domain and range:\n\n(0)=\n\nand\n\n(1,0)=.\n\nThus, if the request rate exceeds T, requests to that resource might be denied as a result of the resource being determined to be unavailable for that request.\n","Such a function models an availability of a population whose distribution is skewed to the right, although other such curves can be used for similar modeling and\/or other population characteristics can be considered when selecting a model. In the example business function above, the function provides simple scaling of the traffic shape by influencing or adjusting the scaling factor S, which might have a lower value for scarce resources and a higher value for resources that are abundant. The function itself models systematic exponential, yet bounded, growth. The derivative of this particular function is a distribution curve that is skewed to the right, and the majority of the population is between 0.10 and 0.50. It should be understood, however, that other curve(s) can be used as well as appropriate, such as a linear function T=S\u03c8.","In at least some embodiments, such a curve can be used to determine when to throttle requests for a specific type of resource. In order to determine when requests for the resource should be throttled, the curve in at least some embodiments can be consulted for a particular \u201cframe\u201d or determined period of time. A frame can correspond to a rolling or sliding window of time that, when summed, equals a single unit of time for which T\u03c8 is defined. There can be multiple levels of frames used in various embodiments to detect events such as bursting, where a user might be within a given allowance but utilizing that allowance over a very short period of time, which can potentially cause problems for the system if, for example, all users try to use their hourly allowance in the first 30 seconds of an hour. Thus, it can be important, or at least useful, in at least some embodiments to also look to a rate or velocity of requests over a period of time.","In at least some embodiments, a \u201cvelocity\u201d of requests can be incremented when a number n of requests are made for a resource at time t, as may be based on the time of the previous request. A set allowance value can be compared to the current velocity value, and if the velocity exceeds the allowance then one or more requests can be denied. In certain embodiments, the velocity might only be increased if the request is accepted. An example of a velocity calculation function is given by:",{"@attributes":{"id":"p-0028","num":"0027"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["V","n"]},"mo":"=","mrow":{"mi":"max","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"0","mo":",","mrow":{"msub":{"mi":"V","mrow":{"mi":"n","mo":"-","mn":"1"}},"mo":["+","-"],"mfrac":{"mi":"r","mrow":{"mi":["\u0394","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mrow":{"mo":"\u2202","mrow":{"mo":["(",")"],"mrow":{"mi":["\u0394","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}}}}}}}}},"In this example, r is the number of requests in the current time frame, and \u0394t is the time difference from the last time where r>0. Access to the resource can be denied if Vis ever greater than T\u03c8 for the current frame. In at least some embodiments, the velocity determination can have a built-in decay value, such that the velocity will tend to zero when there are no new requests over a period of time. The speed at which the decay occurs is based on \u2202, which is dependent on the resource being controlled.","In at least some embodiments, however, velocity alone will not be sufficient to maintain a constant stream of requests that approaches T\u03c8. For example, if the frame is a 60 minute period, then V could equal T\u03c8 within the first few minutes. To account for this, a maximum burst rate can be calculated to account for, and allow an amount of, bursting of a resource relative to \u03c8. In one embodiment, the maximum burst rate M can be defined by:",{"@attributes":{"id":"p-0031","num":"0030"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"M","mo":"=","mfrac":{"mrow":[{"mi":["T","\u03c8"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mi":["\u0394","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}]}}}},"br":[{},{},{}],"sub":["p ","p"],"in-line-formulae":[{},{}],"i":["V","\u2266M "]},{"@attributes":{"id":"p-0032","num":"0031"},"maths":[{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"msub":{"mi":["V","p"]},"mo":"=","mrow":{"msub":[{"mi":"A","mrow":{"mi":["\u0394","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mi":["V","n"]}],"mo":"+"}},"mo":",","mi":"where"}}},{"@attributes":{"id":"MATH-US-00003-2","num":"00003.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":"A","mrow":{"mi":["\u0394","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mo":"=","mrow":{"mfrac":{"mrow":[{"mo":["(",")"],"mrow":{"msub":[{"mi":["v","n"]},{"mi":"V","mrow":{"mi":"n","mo":"-","mn":"1"}}],"mo":"-"}},{"mi":["\u0394","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}]},"mo":"."}}}}],"br":{},"sub":["n ","n\u22121 "]},"In at least some embodiments, a maximum burst rate or other such factor can be adjusted based at least in part upon certain conditions. For example, a maximum burst rate and\/or length of a sliding window can be adjusted dynamically based upon changes in the load on a type of resource. If a user is able to submit up to 500 requests per hour, then at peak load the user might be able to submit up to 15 requests per minute as a maximum burst rate. At times of lesser load, there might be no burst rate applied (assuming 500 relatively simultaneous requests would not cause problems in the network) or there might be a different time period applied, such as where a user can submit up to 200 requests in any five or ten minute period. In some embodiments there might even be multiple frames, such as where a user has an allowance of 500 requests per hour, but can submit up to 15 in any one-minute time period and up to 100 in any ten minute period.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 5","b":["500","502","504","506","502","508","510"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIGS. 6(","FIG. 6(","FIG. 6(","FIG. 6("],"i":["a","c","a","a","a","a","a","b","a","b","b","b","c","c","c","c","c"],"b":["6","600","602","604","606","608","610","602","604","606","608","620","602","604","606","608"]},"As mentioned, throttling decisions can be made at any appropriate time or location, which can vary depending at least in part upon the environment. In , for example, one or more components of the throttling layer can, upon receipt of a request for a resource, analyze the limit, velocity, and other such information for a customer associated with that request and determine whether to allow or deny that request, or perform another such action.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 7","b":["700","702","704"]},"If the user is determined to have access to the type of resource associated with the request, one or more request limits can be determined for the user . As discussed, the user might have an overall allowance limit on a number of requests over a given period of time, and might also have an associated burst limit for submitted requests. These limits can vary by user and\/or type of resource, and further can vary over time as discussed elsewhere herein. A determination is made as to whether the user is over the allowed request limit for the current period . In some embodiments, the user might be associated with an entity or organization that might have a limit which might already have been exceeded by other users associated with that entity. In any of these cases, the request can be denied  when the user is over a respective limit. If a decision is made not to process the request, a response can be returned to the user indicating that the request was denied. In some embodiments this can take the form of a \u201cservice unavailable\u201d or other such message. In other embodiments, a response can be sent that includes information indicating to the user that the request was denied for a particular reason, such as exceeding an agreed-upon amount of traffic. In other embodiments, the request might just be dropped, which can result in a \u201cservice not available\u201d or other such error message on the respective client device utilized to submit the request.","If the user is not currently over one or more limits, a current velocity and rate of acceleration can be determined for the user . Using any appropriate formula discussed herein, the current velocity can be determined and compared against a most recent prior velocity to determine an acceleration and, finally, a predicted velocity over a subsequent period of time . Thus, a determination can be made as to not whether the user is currently over a limit, but if based on recent activity is likely to exceed that limit in the near future. A determination is made as to whether the predicted velocity is over the limit for that type of resource for that user , and if not then the request can be processed , such as by placing the request in a queue to be transmitted on to the target resource. If the predicted velocity is over the limit, a decision can be made as to whether to process the request . As mentioned, various embodiments or implementations can handle predicted overruns in different ways. In some embodiments, a user may not be throttled until the user actually exceeds the limit. In some embodiments, a user can be notified if the user is about to exceed a burst limit or other such threshold. In still other embodiments, one or more of the requests received during a current period can be throttled if it is determined that the user will likely exceed the allowable velocity in the upcoming period, based on the predicted velocity value. In some embodiments, a request will be denied until the predicted velocity falls back to within an allowable range. If the decision is made to process the request, the request can be processed . If not, the request can be denied  as discussed elsewhere herein. It should be understood that at least some of these decisions can be made in different orders or concurrently using similar or different components in various embodiments.","As discussed, such an approach enables requests for storage capacity, computing capacity, or other such resources to be managed at times of peak traffic or other such conditions. Approaches provided herein can dynamically adjust limits and\/or allowances in real time based upon current conditions and other such aspects, such as the currently available resource capacity, number of users, etc. A traffic shaping algorithm as discussed herein can handle resource scaling and other such occurrences, and can provide a much finer level of granularity of allowances and limits than traditional fixed-limit approaches. One or more scaling factors can be determined for each user and\/or type of resource, such that traffic for different types of users or resources can be managed most effectively while maintaining the scalability of the approach.","In one embodiment, a lightweight throttling component can be used to receive or intercept requests for access to one or more types of resource and determine whether or not to provide such access using a global overview of usage data. In another embodiment, a throttling service, such as a throttling Web service, can be provided that sits \u201con top of\u201d another service or application, for example, and controls access thereto. That is, the throttling service may be functionally placed between a requester and the other service or application. Other such throttling components and mechanisms can be used as well as would be understood to one of ordinary skill in the art in light of the teachings and suggestions contained herein. Further, although the examples are described with respect to users or requestors requesting access, it should be understood that the requests can be received from any appropriate person, application, component, service, or other such source in a manual or automatic process, or combination thereof.","In one example, a throttling component parses or otherwise determines information from the request that can be used to determine whether or not to process the request, such as whether the source of the request is authorized, how many requests have been sent for a given session, an Internet protocol (IP) address of the request, etc. The throttling component can compare this information with information such as configuration and traffic data to decide, on a request-by-request basis, whether to allow access. If the data for the request results in a determination that the request should be processed, the request, or a portion thereof, can be passed to the appropriate Web service and processed, and the data can be returned to the user in an appropriate format, such as an extensible markup language (XML) document.","In some embodiments, the actual throttling can be performed by a daemon for each server in a group of managed servers capable of serving the request. In other embodiments, there may be a distributed set of daemons and\/or similar components across the electronic network. As known in the art, a daemon is typically a computer program, module, or process that runs in the background on each server, rather than under the direct control of a user. In other embodiments, the throttling can be performed by an appropriate service, process, etc. After a decision is made, information for the request can be propagated to other servers in the managed group, such that each server knows the global state of the system. Thus, a requestor can at any time send a request to one of the servers, and that server will be able to know when that requestor last made a request and\/or other such information. Regardless of whether a given request is processed or denied, information about the receiving of the request can be stored locally by the throttling component. At an appropriate time, the data can be pulled or pushed to the other throttling daemons such that the global usage data is known to each instance of the throttling daemon across a server or resource group, etc.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 8","b":["800","802","804","806","808"]},"In one embodiment, a provider is notified when a requestor exceeds a certain amount of traffic, or meets some other criterion. The provider can pull up a usage data page for that requestor, and determine whether the requestor is doing something out of the ordinary, using substantially real-time data. The provider also can view throttling data to see how often that requestor is throttled due to exceeding the appropriate number of requests, etc.","As discussed above, the various embodiments can be implemented in a wide variety of operating and\/or electronic environments, which in some cases can include one or more user computers, computing devices, or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers, such as desktop or laptop computers running a standard operating system, as well as cellular, wireless, and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially-available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices, such as dummy terminals, thin-clients, gaming systems, and other devices capable of communicating via a network.","Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially-available protocols, such as TCP\/IP, OSI, FTP, UPnP, NFS, CIFS, and AppleTalk. The network can be, for example, a local area network, a wide-area network, a virtual private network, the Internet, an intranet, an extranet, a public switched telephone network, an infrared network, a wireless network, and any combination thereof.","In embodiments utilizing a Web server, the Web server can run any of a variety of server or mid-tier applications, including HTTP servers, FTP servers, CGI servers, data servers, Java servers, and business application servers. The server(s) also may be capable of executing programs or scripts in response requests from user devices, such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language, such as Java\u00ae, C, C# or C++, or any scripting language, such as Perl, Python, or TCL, as well as combinations thereof. The server(s) may also include database servers, including without limitation those commercially available from Oracle\u00ae, Microsoft\u00ae, Sybase\u00ae, and IBM\u00ae.","The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations, such as on a storage medium local to (and\/or resident in) one or more of the computers are remote from any or all of the computers across the network. In a particular set of embodiments, the information may reside in a storage-area network (\u201cSAN\u201d) familiar to those skilled in the art. Similarly, any necessary files for performing the functions attributed to the computers, servers, or other network devices may be stored locally and\/or remotely, as appropriate. Where a system includes computerized devices, each such device can include hardware elements that may be electrically coupled via a bus, the elements including, for example, at least one central processing unit (CPU), at least one input device (e.g., a mouse, keyboard, controller, or keypad), and at least one output device (e.g., a display device, printer, or speaker). Such a system may also include one or more storage devices, such as disk drives, optical storage devices, and solid-state storage devices such as random access memory (\u201cRAM\u201d) or read-only memory (\u201cROM\u201d), as well as removable media devices, memory cards, flash cards, etc.","Such devices also can include a computer-readable storage media reader, a communications device (e.g., a modem, a network card (wireless or wired), an infrared communication device, etc.), and working memory as described above. The computer-readable storage media reader can be connected with, or configured to receive, a computer-readable storage medium, representing remote, local, fixed, and\/or removable storage devices as well as storage media for temporarily and\/or more permanently containing, storing, transmitting, and retrieving computer-readable information. The system and various devices also typically will include a number of software applications, modules, services, or other elements located within at least one working memory device, including an operating system and application programs, such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example, customized hardware might also be used and\/or particular elements might be implemented in hardware, software (including portable software, such as applets), or both. Further, connection to other computing devices such as network input\/output devices may be employed.","Storage media and computer readable media for containing code, or portions of code, can include any appropriate media known or used in the art, including storage media and communication media, such as but not limited to volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage and\/or transmission of information such as computer readable instructions, data structures, program modules, or other data, including RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disk (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the a system device. Based on the disclosure and teachings provided herein, a person of ordinary skill in the art will appreciate other ways and\/or methods to implement the various embodiments.","The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. It will, however, be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various embodiments in accordance with the present disclosure will be described with reference to the drawings, in which:",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 6(","i":["a","b","c"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
