---
title: Method and apparatus for a receiver/decoder
abstract: A method and apparatus relating to a receiver/decoder in a digital television environment, including logical devices (including logical demultiplexer devices) for representing physical and other devices in the receiver/decoder. The method includes the instantiation of devices by the receiver/decoder as required to support functionality thereof. The method further includes the use of multiple demultiplexers/remultiplexers, for example in the recording of more than one service simultaneously; and a control word device for the management of control word operations; the use of two or more tuners. Various elements of a digital television system (such as a receiver/decoder and a set top box) are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07984478&OS=07984478&RS=07984478
owner: Canal + Technologies Societe Anonyme
number: 07984478
owner_city: Paris
owner_country: FR
publication_date: 20020821
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["The invention relates to methods and apparatus for use in or with a receiver\/decoder, and may include a receiver\/decoder, a broadcast system, a computer program product, a computer readable medium having stored thereon a computer program product and\/or a signal tangibly embodying a computer program product. The invention finds particular application in supporting one or more functions of the receiver\/decoder.","Embodiments of the invention may support for instance communication and\/or control between software applications and supporting devices in a receiver\/decoder, and\/or performance of a security process in accessing one or more data streams at the receiver\/decoder.","Digital television systems transmit television channels to the viewer in digital, rather than analogue, form. The digital channels are encoded into a digital data stream at the transmitter end, and are decoded at the receiver end using a digital receiver\/decoder. To allow interactivity, an uplink may be provided, either via the same medium that delivers the television channels, or else via a different medium such as a telephone link. Further types of data, such as digital audio, software and interactive data can be or are also broadcast. As used herein, the term \u201cdigital television system\u201d includes for example any satellite, terrestrial, cable and other system.","The term \u201creceiver\/decoder\u201d as used herein may connote a receiver for receiving either encoded or non-encoded signals, for example television and\/or radio signals, preferably in MPEG format, which may be broadcast or transmitted by some other means. The term may also connote a decoder for decoding received signals. Embodiments of such receiver\/decoders may include a decoder integral with the receiver for decoding the received signals, for example, in a \u201cset-top box\u201d, such as a decoder functioning in combination with a physically separate receiver, or such a decoder including additional functions, such as a web browser, a video recorder, or a television.","The term MPEG refers to the data transmission standards developed by the International Standards Organisation working group \u201cMotion Pictures Expert Group\u201d and in particular but not exclusively the MPEG-2 standard developed for digital television applications and set out in the documents ISO 13818-1, ISO 13818-2, ISO 13818-3 and ISO 13818-4. In the context of the present patent application, the term includes all variants, modifications or developments of MPEG formats applicable to the field of digital data transmission.","Signals received by a receiver\/decoder may be dealt with in different ways. For instance, they may be played as they are received, or recorded for later playback. Incoming signals to a receiver\/decoder may also be scrambled, particularly in the case of broadcast digital television systems since users may have to pay for receiving selected channels or programmes and scrambling can be used as a way of preventing unauthorised access. The receiver\/decoder may also therefore provide a descrambling function and equipment of a relevant type is sometimes called an Integrated Receiver\/Descrambler (IRD).","Known digital receivers\/decoders are effectively based on a computer type architecture, having an associated hardware\/software platform, an operating system and software applications. For instance, in a known form of receiver\/decoder, there are provided:\n\n","These three aspects are generally supported by an operating system of the equipment in which they are installed.","In computing technology, an Application Programming Interface (API) usually comprises or includes the set of function calls and services that a program makes available to other processes. Each function or service has a set format which specifies values which must be supplied, and which will be returned, in use of the function or service and the API sets these out. The addition of the middleware layer mentioned above in a receiver\/decoder, together with an API, means that applications become portable. That is, they can be reused on different receiver\/decoders, having different software\/hardware platforms, which is clearly beneficial, as long as the applications and middleware conform to the same API. It also means that users can download applications from different sources onto an existing receiver\/decoder platform.","One further feature which has been developed in a known receiver\/decoder is a device layer interface (DLI), sometimes referred to simply as a Device Layer. This is a further step in flexibility. The devices in the receiver\/decoder have to interact with software so that they can for instance be started and stopped and can notify events and they are provided, in known manner, with device drivers for that purpose. Hardware devices are provided with separate device drivers and devices which are embodied in software, or firmware, may have integrated drivers. A device driver is a program to control a particular device and it responds to communications such as interrupts from the system to convert instructions from the operating system or an application to messages for a specific device. In this known arrangement, the DLI provides an interface between the middleware and device drivers. Once this is done, the middleware can be ported to any receiver\/decoder whose devices comply with the DLI.","A receiver\/decoder of this general type is described in international patent application number WO 99\/40719, in the name of the present applicant. In the system described there, each function of the receiver\/decoder is related to a device in the DLI. The DLI holds software representations of devices and provides a device manager which looks after interactions with the devices in use of the receiver\/decoder. When devices are required to carry out a function, data passes between programs such as application instruction sequences and the devices. The device manager controls this routing by declaring each program as a \u201cclient\u201d when it needs access to a device and assigns the program a client number which it adds to a client list for the duration of access by that program to the relevant device.","The present invention seeks to provide one or more improvements in relation to the above prior art.","In a first aspect of the invention, there is provided a logical device for a receiver\/decoder.","Such a logical device, situated for example in the device layer interface of a receiver\/decoder, may reduce the dependence of the software of the receiver\/decoder upon the specific hardware solution of the receiver\/decoder, potentially resulting in the increased portability of the software. It may, in addition, facilitate the easy upgrade of a receiver\/decoder without changes to the software being required.","Preferably, the logical device further comprises means for binding the logical device to a further device. That is to say that the logical device may preferably be adaptable to rely upon a particular hardware device to perform functionality offered by it. This may advantageously increase the stability of the software of a receiver\/decoder.","The binding means is preferably adapted to bind the logical device to a plurality of further devices. This may confer the advantage of increasing the flexibility of a receiver\/decoder and facilitate the efficient use of hardware. The further layer of abstraction may in addition allow for easier programming and maintenance of software, and easier programming of applications to be executed on a receiver\/decoder running the software.","The binding means may preferably be adapted to bind the logical device to a software device. This added layer of abstraction may allow for easier programming and maintenance of software.","In a preferred embodiment, the logical device is adapted to manage a demultiplexing operation. Such a logical device encapsulates a number of hardware operations, which may result in the provision of a platform for which applications to be run on a receiver\/decoder may be programmed more easily.","The logical device may preferably comprise means for restricting functionality offered by the device. For example, a logical demultiplexer may be adapted to represent a demultiplexer supporting the playback of a bitstream, in which it is required to perform demultiplexing and filtering operations, and other operations may be prohibited; alternatively, the logical device may be adapted to represent a demultiplexer supporting the recording of a bitstream, in which case, it is required to perform filtering and remultiplexing operations, and other operations may be prohibited. This restriction of functionality may confer additional stability.","In a second aspect of the invention, there is provided apparatus for a receiver\/decoder, the apparatus being provided with at least one function description describing a function supported by one or more processes in use of the receiver\/decoder, and means for loading a value with respect to the or each function description for use in said one or more processes.","Each function description preferably comprises a set of one or more data fields which together characterise the described function in use of the receiver\/decoder.","The availability of one or more of said processes is preferably determined by a value in at least one data field associated with that process. For example, the availability may preferably be determined by the presence or absence of said value in the at least one data field.","In a preferred embodiment, each process, and thus each function, is supported in use by one or more devices, and the apparatus is provided with at least one device description in respect of one or more of said devices; means for loading device-specific data with respect to said device description; means to detect the presence of at least one device in the receiver\/decoder which supports a function described by the function description; and means to load a function identifier for that function description as part of a device identifier for use in communicating with the at least one device in use of the receiver\/decoder.","Preferably, the function supported by one or more processes comprises a demultiplexing function. In this case, the means for loading a value is preferably adapted to load multiple values comprising a set of identifiers for input sources of multiplexed signals.","Preferably, the means to detect the presence of at least one device comprises means to detect the presence of each of a plurality of devices in the receiver\/decoder which together support the function described by the function description and said means to load the function identifier for that function description as part of a device identifier is adapted to load the same function identifier as part of the device identifier in respect of each of said plurality of devices.","Preferably, the apparatus is adapted to modify a function description in accordance with devices detected.","In a preferred embodiment, the apparatus is provided with at least two different function descriptions and the means to load a function identifier is adapted to load a function identifier for each of at least two different function descriptions to provide at least two different device identifiers for use in communicating with a common device in use of the receiver\/decoder.","Preferably, the apparatus comprises control signal management means for managing signals for controlling one demultiplexing device to demultiplex at least first and second data streams over a common time period.","Also preferably, the apparatus comprises control signal management means for managing signals for controlling one or more remultiplexing devices to remultiplex at least first and second data streams for recording over a common time period.","In an aspect of the invention, there is provided a method of operating a receiver\/decoder, which method comprises creating and\/or accessing at least one function description describing a function supported by one or more processes in use of the receiver\/decoder, and loading a value with respect to the or each function description for use in said one or more processes. The loading step is preferably performed at first initialisation of the receiver\/decoder.","In a further aspect, there is provided a method of operating a receiver\/decoder which comprises communicating with at least one device in providing a function, wherein a device identifier is used in communicating with the at least one device, which identifier comprises a part associated with the function and a part associated with the device.","In a further aspect, there is provided apparatus comprising means for instantiating a device for a receiver\/decoder. This may confer the advantage of reducing dependence upon a particular hardware configuration of a receiver\/decoder, resulting in increased portability of software, and increased efficiency in terms of requirements upon programmers and size of program, improved reliability and maintenance of the product.","The instantiating means preferably comprises means for providing generic information and means for providing instance-specific information to a device being instantiated. This abstraction of functionality may confer the advantage of using resources more efficiently. When implemented in software, this may advantageously result in a smaller compiled size. The instantiating means may for example copy an existing instance of a device (including the generic information, which may in turn include an identifier identifying the device type) and then impart to it information specific to the instance being created (including, for example, an instance number). The device type identifier and the instance number then together form a unique identifier for the device.","Preferably, the instantiating means is adapted to instantiate a device statically. Using static instantiation, that is instantiation at the time of booting or rebooting, may provide a more stable environment than using dynamic instantiation.","In a preferred embodiment, the instantiated device is adapted to provide functionality to a client. This further level of abstraction may afford a greater ease of maintenance of the system and ease of programming and maintenance of code.","Preferably, the instantiated device is adapted to provide functionality to a plurality of clients. This feature may result in more efficient use of resources (for example of the hardware of a receiver\/decoder).","Preferably, the instantiated device is capable of asynchronous communication, which may give rise to more fluid operation and more stable software.","In a particularly preferred embodiment, the apparatus comprises means for receiving information relating to a new type of device to be instantiated. This information may for example be downloaded by a receiver\/decoder, and it may relate to a new version of an existing device, or to a new type of device. This feature may thus increase the flexibility and ease of maintenance of software.","In another particularly preferred embodiment the apparatus comprises means for determining a hardware environment. The apparatus may thus be able to tailor instantiated devices based upon detected physical device; it may not be necessary to know details of the environment upon which software is to be run at the time of compilation.","Preferably, the instantiated device is a logical device as aforesaid.","In a further aspect of the invention, there is provided apparatus for a receiver\/decoder, the apparatus being provided with at least one device description and means for loading device-specific data with respect to said device description.","Preferably, the means for loading device-specific data is adapted to load at least one value with respect to one or more device descriptions, said value comprising at least part of a device identifier for use in communicating with a device in use of the receiver\/decoder.","The apparatus may also comprise means for loading device-specific data with respect to more than one respective copy of at least one of the device descriptions. The device-specific data preferably includes a value loaded to each device instance as device-specific data including at least part of a device identifier which is different from any value loaded as at least part of a device identifier to another copy of the same device description.","Preferably, when instantiating devices for use in the provision of a function in a receiver\/decoder, more than one different device is used to provide said function, each device description with at least one value loaded provides a device instance, and the at least part of a device identifier is common to at least one device instance for each of at least two different devices used to provide said function.","The device-specific data may, for example, comprise at least one value for a parameter of a procedure supported by a device to which the description relates. This value may for example comprise an identifier for an authorised input to the device to which the description relates.","In a particularly preferred embodiment, the device to which the description relates may comprise a demultiplexing device.","The apparatus may further comprise limiting means for limiting the number of copies of one or more device descriptions to a preset maximum. This may assist in preventing overloading of the resources of the apparatus.","Preferably, the apparatus is further provided with at least one function description describing a function supported by one or more processes in use of the receiver\/decoder, and means for loading a value with respect to the or each function description for use in said one or more processes.","In a further aspect of the invention, there is provided a method of operating a receiver\/decoder to provide a function, which method comprises selecting an identifier for a device from at least two different identifiers available for that device and using the selected identifier in relation to communications with the device to provide the function.","In yet a further aspect of the invention, there is provided a method of operating a receiver\/decoder to provide a function, which method comprises communicating with at least two different devices used in providing the function, using a different respective identifier in relation to communication with each of said two different devices, wherein said different respective identifiers share a common portion.","In a further aspect of the invention, there is provided apparatus for processing data, comprising means for operating a demultiplexer to demultiplex a plurality of services simultaneously. This aspect may benefit from increased flexibility. The demultiplexer operating means may, for example, be adapted to effect the demultiplexing of at least three, five, ten or twenty services simultaneously.","In a particularly preferred embodiment, the demultiplexer operating means comprises means for allocating a respective logical demultiplexer as described above to each service to be demultiplexed.","In a further aspect of the invention, there is provided apparatus for controlling a demultiplexing process in a receiver\/decoder, comprising control signal management means for managing signals for controlling one demultiplexing device to demultiplex at least first and second data streams over a common time period.","The control signal management means may be adapted to maintain a first family of devices for use together in controlling the demultiplexing device to demultiplex said first data stream, and to maintain a second family of devices for use together in controlling the demultiplexing device to demultiplex said second data stream.","Preferably, the devices of each family are each allocated an identifier which has at least a common portion for all the devices of a family, the common portion for the first family being different from said common portion for the second family, for use in coordinating processes performed by the devices of each family in controlling the demultiplexing device to demultiplex a respective data stream.","The apparatus may preferably further comprise at least one remultiplexing device for remultiplexing each of said at least two data streams for recording.","In a further aspect, the aforesaid apparatus is provided in a receiver\/decoder, further comprising at least two inputs for connection to respective channels and correlation means for correlating a signal received at a first of said inputs with a signal received at a second of said inputs.","In yet a further aspect of the invention, there is provided a control word device for managing a descrambling operation, the device being implemented in software. It is known for the descrambling operation to be managed by hardware devices; the present aspect of the invention may confer the advantage of increased security.","In yet a further aspect, the invention provides apparatus for a receiver\/decoder comprising an interface for use in controlling descrambling equipment to descramble signals.","The apparatus may further comprise means to assign an identifier to an instance of use of the descrambling equipment to descramble a signal, which identifier is used in controlling the descrambling equipment in relation to that instance of use by means of the interface.","The means to assign an identifier may comprise means to assign more than one identifier to the descrambling equipment over the same time period, each identifier being for use in controlling the descrambling equipment with respect to a respective instance of use of the descrambling equipment.","At least first and second instances of use of the descrambling equipment may be subject to at least one different respective access condition for descrambling signals.","The apparatus may be arranged to control supply of a decryption key to the descrambling equipment for use in a respective descrambling process. For example, the apparatus may be arranged to co-ordinate supply of a decryption key, from means for receiving delivery of decryption keys, to the descrambling equipment, the co-ordination being done by use of the identifier assigned to each respective instance of use of the descrambling equipment. The decryption key may, for example, be received in a multiplexed information signal.","The interface may be accessible to at least one device in a family of devices supporting a demultiplexing function and the apparatus may further comprise means to provide more than one instance of the same device in the family of devices, each instance so provided being related to at least one assigned identifier for an instance of use of the descrambling equipment.","In yet a further aspect of the invention, there is provided a method of descrambling scrambled signals, comprising the use of an interface in the control of descrambling equipment. The method may, for example, comprise the steps of assigning an identifier to an instance of use of the descrambling equipment; and using the identifier in controlling the descrambling equipment in relation to said instance of use by means of the interface.","The method may further comprise assigning a first identifier to a first instance of use of the descrambling equipment, assigning a second identifier to a second instance of use of the descrambling equipment, and using the first and second identifiers to distinguish the first and second instances of use in controlling the descrambling equipment, said first and second instances of use occurring over a common time period.","The first and second instances of use of the descrambling equipment may be subject to at least one different respective access condition for descrambling.","In a further aspect of the invention, there is provided apparatus for processing data, comprising means for recording a first service, means for simultaneously recording a second service and means for playing back the first service and the second service at respective times chosen by a user. Such apparatus may provide increased flexibility and utility for the user.","In yet a further aspect, the invention provides apparatus for a receiver\/decoder comprising recording means for recording two or more programme data streams over a common time period.","In yet a further aspect, the invention provides a method of recording programme signals, comprising recording two or more different programme data streams over a common time period.","In a further aspect of the present invention, there is provided apparatus for processing data, comprising means for receiving service data on a first channel and means for receiving conditional access data relating to that service on a second channel. This may confer the advantage of reducing the bandwidth required to receive conditional access.","The apparatus may further comprise means for causing the conditional access data receiving means to change the channel from which it receives the conditional access data. It may thus be possible to receive conditional access data from a channel which changes, for, example periodically, enabling the channel upon which conditional access data is broadcast to change, thus allowing channel-hopping of conditional access data, which may increase security.","To this end, a further aspect of the invention provides a broadcast centre comprising service data broadcasting means adapted to broadcast service data excluding conditional access data on a first channel, and conditional access data broadcasting means for broadcasting conditional access data relating to the service on a second channel.","The broadcast centre may further comprise means for causing the conditional access data broadcasting means to change the channel upon which the conditional access data is broadcast.","In yet a further aspect of the invention, there is provided a conditional access system comprising service data broadcasting means for broadcasting service data excluding conditional access data on a first channel, conditional access data broadcasting means for broadcasting conditional access data relating to the service on a second channel, service data receiving means for receiving the service data and conditional access data receiving means for receiving the conditional access data.","In a further aspect, the invention provides apparatus for a receiver\/decoder, for use in receiving and\/or decoding signals received at the apparatus over more than one channel, wherein said apparatus comprises at least two inputs for connection to respective channels and correlation means for correlating a signal received at a first of said inputs with a signal received at a second of said inputs.","The apparatus may further comprise detection means for detecting a channel identifier received in the signal at the first input, channel selection means for selecting a channel for connection to said second input, and control means to control the channel selection means to select a channel identified by the channel identifier for connection to said second input. Each respective channel may for example have a different carrier frequency.","The signal received at the first input may comprise at least primarily content data and the signal received at the second input may comprise administrative data with respect to the content data.","The apparatus may further comprise an interface for use in controlling descrambling equipment to descramble information signals.","In a further aspect of the invention, there is provided a broadcast system for broadcasting related signals in multiplexed signal transport streams, which comprises broadcast means for broadcasting a first signal in a first multiplexed signal transport stream, broadcast means for broadcasting a second signal in a second multiplexed signal transport stream, and correlation signal transmission means for transmitting a correlation signal for use in correlating the related signals. The correlation signal may for example comprise carrier frequency data for identifying a carrier frequency for at least one of the first and second transport streams. The correlation signal may additionally or alternatively comprise at least one slot identifier for identifying a slot in one of the first and second transport streams.","The invention also provides a computer program and a computer program product for carrying out any of the methods described herein and\/or for embodying any of the apparatus features described herein, and a computer readable medium having stored thereon a program for carrying out any of the methods described herein and\/or for embodying any of the apparatus features described herein.","The invention also provides a signal embodying a computer program for carrying out any of the methods described herein and\/or for embodying any of the apparatus features described herein, a method of transmitting such a signal, and a computer product having an operating system which supports a computer program for carrying out any of the methods described herein and\/or for embodying any of the apparatus features described herein.","The invention extends to methods and\/or apparatus substantially as herein described with reference to the accompanying drawings.","Any feature in one aspect of the invention may be applied to other aspects of the invention, in any appropriate combination. In particular, method aspects may be applied to apparatus aspects, and vice versa.","Furthermore, features implemented in hardware may generally be implemented in software, and vice versa. Any reference to software and hardware features herein should be construed accordingly.","An overview of a digital television system  is shown in . As will be discussed below, the system  comprises a broadcast centre , a receiver\/decoder , a software\/hardware architecture  of the receiver\/decoder, an interactive system , and a conditional access system , as will all be discussed below.","The system  includes a mostly conventional digital television system  that uses the known MPEG-2 compression system to transmit compressed digital signals. In more detail, MPEG-2 compressor  in a broadcast centre  receives a digital signal stream (typically a stream of video signals). The compressor  is connected by linkage  to a multiplexer and scrambler .","The multiplexer  receives a plurality of further input signals, assembles the transport stream and transmits compressed digital signals to a transmitter  of the broadcast centre via linkage , which can of course take a wide variety of forms including telecommunications links. The transmitter  transmits electromagnetic signals via uplink  towards a satellite transponder , where they are electronically processed and broadcast via notional downlink  to earth receiver , conventionally in the form of a dish owned or rented by the end user. Other transport channels for transmission of the data are of course possible, such as terrestrial broadcast, cable transmission, combined satellite\/cable links, telephone networks etc.","The signals received by receiver  are transmitted to an integrated receiver\/decoder  owned or rented by the end user and connected to the end user's television set . The receiver\/decoder  decodes the compressed MPEG-2 signal into a television signal for the television set . Although a separate receiver\/decoder is shown in , the receiver\/decoder may also be part of an integrated digital television. As used herein, the term \u201creceiver\/decoder\u201d includes a separate receiver\/decoder, such as a set-top box, and a television having a receiver\/decoder integrated therewith.","In the receiver\/decoder  a hard disk  is provided, on which audiovisual and other data can be stored. This allows advanced recording and playback facilities for programmes received by the receiver\/decoder, and also allows large amounts of other types of data, such as electronic programme guide data, to be stored in the receiver\/decoder.","A content management and protection system (CMPS)  (not shown) in the receiver\/decoder provides the ability securely and flexibly to control the recording and playback of data on the hard disk  (or other storage device).","In a multichannel system, the multiplexer  handles audio and video information received from a number of parallel sources and interacts with the transmitter  to broadcast the information along a corresponding number of channels. In addition to audiovisual information, messages or applications or any other sort of digital data may be introduced in some or all of these channels interlaced with the transmitted digital audio and video information.","An interactive system  is connected to the multiplexer  and the receiver\/decoder , and is located partly in the broadcast centre and partly in the receiver\/decoder. It enables the end user to interact with various applications via a back channel . The back channel may be, for example a Public Switched Telephone Network (PSTN) channel (for example, a modemmed back channel) or an Out of Band (OOB) channel.","A conditional access system , also connected to the multiplexer  and the receiver\/decoder  and again located partly in the broadcast centre and partly in the receiver\/decoder, enables the end user to access digital television broadcasts from one or more broadcast suppliers. A smartcard, capable of deciphering messages relating to commercial offers (that is, one or several television programmes sold by the broadcast supplier), can be inserted into the receiver\/decoder . Using the receiver\/decoder  and smartcard, the end user may purchase commercial offers in either a subscription mode or a pay-per-view mode. Typically this is achieved using the back channel  which is used by the interactive system .","As mentioned above, programmes transmitted by the system are scrambled at the multiplexer , the conditions and encryption keys applied to a given transmission being determined by the access control system . Transmission of scrambled data in this way is well known in the field of pay TV systems. Typically, scrambled data is transmitted together with a control word for descrambling of the data, the control word itself being encrypted by a so-called exploitation key and transmitted in encrypted form.","The scrambled data and encrypted control word are then received by the receiver\/decoder  having access to an equivalent to the exploitation key stored on a smartcard inserted in the receiver\/decoder to decrypt the encrypted control word and thereafter descramble the transmitted data. A paid-up subscriber will receive, for example, in a broadcast monthly EMM (Entitlement Management Message) the exploitation key necessary to decrypt the encrypted control word so as to permit viewing of the transmission.",{"@attributes":{"id":"p-0115","num":"0117"},"figref":"FIG. 2","b":"504"},"The satellite transponder and transmitting and receiving stations are replaced by a cable network . Additionally, in this particular embodiment, the modemmed back channel between the receiver\/decoder  and the interactive system  and conditional access system  is removed, replaced by linkages ,  between the cable network  and the conditional access system  and interactive system  respectively. The receiver\/decoder  thus communicates with the other systems via the cable network , utilising a cable modem or other means to allow it to send and receive data via the same link as it receives data from the broadcast centre.","The cable network  may be any form of wide area network (WAN), such as a dedicated connection, the internet, local cable distribution network, wireless connection, or any combination of the above. In the present embodiment, the hybrid fibre coax (HFC) network is used. It is appreciated that the various means of communication between the receiver\/decoder  and the other components of the television system are interchangeable.","Conditional Access System","With reference to , in overview the conditional access system  includes a Subscriber Authorization System (SAS) . The SAS  is connected to one or more Subscriber Management Systems (SMS) , one SMS for each broadcast supplier, by a link , which may be a TCP-IP link or other type of link. Alternatively, one SMS could be shared between two commercial operators, or one operator could use two SMSs, and so on.","First encrypting units in the form of ciphering units  utilising \u201cmother\u201d smartcards  are connected to the SAS by linkage . Second encrypting units again in the form of ciphering units  utilising mother smartcards  are connected to the multiplexer  by linkage . The receiver\/decoder  receives a \u201cdaughter\u201d smartcard . The receiver\/decoder is connected directly to the SAS  via communications servers  and the modemmed back channel . The SAS sends amongst other things subscription rights to the daughter smartcard on request.","In variants of the preferred embodiment, internet or cable connections either complement or replace the PSTN  and communications servers .","The smartcards contain confidential information from one or more commercial operators. The \u201cmother\u201d smartcard encrypts different kinds of messages and the \u201cdaughter\u201d smartcards decrypt the messages, if they have the rights to do so.","With reference to , in the broadcast centre, the digital video signal is first compressed (or bit rate reduced), using the MPEG-2 compressor . This compressed signal is then transmitted to the multiplexer and scrambler  in order to be multiplexed with other data, such as other compressed data.","The scrambler generates a control word used in the scrambling process and included in the MPEG-2 stream in the multiplexer . The control word is generated internally and enables the end user's integrated receiver\/decoder  to descramble the programme.","Access criteria, indicating how the programme is commercialised, are also added to the MPEG-2 stream. The programme may be commercialised in either one of a number of \u201csubscription\u201d modes and\/or one of a number of \u201cPay Per View\u201d (PPV) modes or events. In the subscription mode, the end user subscribes to one or more commercial offers, or \u201cbouquets\u201d, thus getting the rights to watch every channel inside those bouquets. In the Pay Per View mode, the end user is provided with the capability to purchase events as he wishes.","Both the control word and the access criteria are used to build an Entitlement Control Message (ECM); this is a message sent in relation with one scrambled program; the message contains a control word (which allows for the descrambling of the program) and the access criteria of the broadcast program. The access criteria and control word are transmitted to the second encrypting unit  via the linkage . In this unit, an ECM is generated, encrypted and transmitted on to the multiplexer and scrambler .","Each service broadcast by a broadcast supplier in a data stream comprises a number of distinct components; for example a television programme includes a video component, an audio component, a sub-title component and so on. Each of these components of a service is individually scrambled and encrypted for subsequent broadcast. In respect of each scrambled component of the service, a separate ECM is required.","The multiplexer  receives electrical signals comprising encrypted EMMs from the SAS , encrypted ECMs from the second encrypting unit  and compressed programmes from the compressor . The multiplexer  scrambles the programmes and transmits the scrambled programmes, the encrypted EMMs and the encrypted ECMs as electric signals to broadcast system , which may be for example a satellite system as shown in , or other broadcast system. The receiver\/decoder  demultiplexes the signals to obtain scrambled programmes with encrypted EMMs and encrypted ECMs.","The receiver\/decoder receives the broadcast signal and extracts the MPEG-2 data stream. If a programme is scrambled, the receiver\/decoder  extracts the corresponding ECM from the MPEG-2 stream and passes the ECM to the \u201cdaughter\u201d smartcard  of the end user. This slots into a housing in the receiver\/decoder . The daughter smartcard  controls whether the end user has the right to decrypt the ECM and to access the programme. If not, a negative status is passed to the receiver\/decoder  to indicate that the programme cannot be descrambled. If the end user does have the rights, the ECM is decrypted and the control word extracted. The decoder  can then descramble the programme using this control word. The MPEG-2 stream is decompressed and translated into a video signal for onward transmission to television set .","If the programme is not scrambled, no ECM will have been transmitted with the is MPEG-2 stream and the receiver\/decoder  decompresses the data and transforms the signal into a video signal for transmission to television set .","The subscriber management system (SMS)  includes a database  which manages, amongst others, all of the end user files, commercial offers (such as tariffs and promotions), subscriptions, PPV details, and data regarding end user consumption and authorization. The SMS may be physically remote from the SAS.","The SMS  transmits messages to the SAS  which imply modifications to or creations of Entitlement Management Messages (EMMs) to be transmitted to end users. The SMS  also transmits messages to the SAS  which imply no modifications or creations of EMMs but imply only a change in an end user's state (relating to the authorization granted to the end user when ordering products or to the amount that the end user will be charged). The SAS  also sends messages (typically requesting information such as call-back information or billing information) to the SMS , so that it will be apparent that communication between the two is two-way.","Receiver\/Decoder","Referring to , the various elements of receiver\/decoder  will now be described in terms of functional blocks.","The receiver\/decoder , which may be, for example, a digital set-top box (DSTB), comprises a central host processor  and a digital TV coprocessor , both having associated memory elements (not shown) and joined by a coprocessor bus . The coprocessor  is adapted to receive input data from a USB interface , a serial interface , a parallel interface (not shown), a modem  (connected to the modem back channel  of ), and switch contacts on the front panel  of the decoder.","The receiver\/decoder is additionally adapted to receive inputs from an infra-red remote control  (and optionally from other wireless peripherals  such as Bluetooth-enabled devices) and also possesses two smartcard readers ,  adapted to read bank and subscription smartcards ,  respectively. The subscription smartcard reader  engages with an inserted subscription card  and with a conditional access unit (not shown) to supply the necessary control word to a demultiplexer\/descrambler\/remultiplexer unit  to enable the encrypted broadcast signal to be descrambled. The decoder also includes a conventional tuner  and demodulator  to receive and demodulate the satellite transmission before being filtered and demultiplexed by the demodulator\/descrambler unit . A second tuner  and second demodulator  are also provided, to allow, amongst other things, a second channel to be received and decoded in parallel with the first.","A hard disk  is also provided, allowing storage of programme and application data received and generated by the receiver\/decoder. In conjunction with the two tuners , , two demodulators , , the descrambler\/demultiplexer\/remultiplexer , and the data decoder  and audio decoder , advanced recording and playback features are provided, allowing simultaneous recordings of one or more programmes while a further programme is being viewed, and more general transfers to and from the hard disk to and from the display devices and\/or inputs and outputs, all occurring in parallel.","The audio output  and video output  in the receiver\/decoder are fed by the PCM mixer  and audio DAC , and the MPEG video decoder , graphic engine  and PAL\/SECAM encoder  respectively. Alternative or complementary outputs may of course be provided.","As used in this description, an application is preferably a piece of computer code for controlling high level functions of preferably the receiver\/decoder . For example, when the end user positions the focus of remote control  on a button object seen on the screen of the television set (not shown) and presses a validation key, the instruction sequence associated with the button is run. Applications and the associated middleware are executed by the host processor , with remote procedure calls (RPCs) being made to the digital TV coprocessor  across the coprocessor bus  as and when required.","An interactive application proposes menus and executes commands at the request of the end user and provides data related to the purpose of the application. Applications may be either resident applications, that is, stored in the ROM (or FLASH or other non-volatile memory) of the receiver\/decoder , or broadcast and downloaded into the RAM, FLASH memory or hard disk of the receiver\/decoder .","Applications are stored in memory locations in the receiver\/decoder  and represented as resource files. The resource files comprise graphic object description unit files, variables block unit files, instruction sequence files, application files and data files.","The receiver\/decoder contains memory (not shown) divided into at least one RAM volume, a FLASH volume and at least one ROM volume, but this physical organization is distinct from the logical organization. The memory may further be divided into memory volumes associated with the various interfaces. From one point of view, the memory can be regarded as part of the hardware; from another point of view, the memory can be regarded as supporting or containing the whole of the system shown apart from the hardware.","Architecture of Receiver\/Decoder","With reference to , the software\/hardware architecture  of the receiver\/decoder contains five software layers, organized so that the software can be implemented in any receiver\/decoder and with any operating system. The various software layers are application layer , application programming interface (API) layer , virtual machine layer , device layer interface  (often abbreviated just to \u2018device layer\u2019) and system software\/hardware layer .","The application layer  encompasses applications  that are either resident in or downloaded to the receiver\/decoder. They may be interactive applications used by customers, written in, for example, Java, HTML, MHEG-5 or other languages, or they may be applications used by the receiver\/decoder for other purposes, for example for running such interactive applications. This layer is based on a set of open Application Programming Interfaces (APIs) provided by the Virtual Machine layer. This system allows applications to be downloaded to the hard disk, flash memory or RAM memory in the receiver\/decoder on-the-fly or on demand. The application code can be transmitted in compressed or uncompressed format using protocols such as Data Storage Media Command and Control (DSMCC), Network File Server (NFS) or other protocols.","The API layer  provides high-level utilities for interactive application development. It includes several packages that make up this high-level API. The packages provide all the functionality necessary to run interactive applications. The packages are accessible by the applications.","In a preferred embodiment the API is adapted for applications written in the Java, PanTalk or such similar programming languages. Furthermore, it can facilitate the interpretation of HTML and other formats, such as MHEG-5. Besides these features, it also includes other packages and service modules that are detachable and extensible as requirements dictate.","The virtual machine layer  is composed of language interpreters and various modules and systems. This layer, managed by a kernel  (not shown), consists of everything necessary to receive and execute interactive applications in the receiver\/decoder.","The device layer interface  includes a Device Manager and software devices (generally referred to herein as just \u2018devices\u2019). Devices are software modules which consist of the logical resources necessary for management of external events and physical interfaces. The device layer interface, under the control of the Device Manager, manages communication channels between drivers and applications and provides enhanced error exception checking. Some examples of managed (hardware) devices are: card readers  (not shown), modems  (not shown), network . (not shown), PCMCIA (Personal Computer Memory Card International Association), LED display and so on. Programmers do not have to deal with this layer directly, since the API layer controls the devices from above.","The system software\/hardware layer  is provided by the manufacturer of the receiver\/decoder. Because of the modularity of the system and because services supplied by the higher-level operating system (such as event scheduling and memory management) are part of the virtual machine and kernel, the higher layers are not tied to a particular Teal-time operating system (RTOS) or to a particular processor.","Typically the virtual machine layer , occasionally in combination with the device layer interface  and\/or API , is referred to as the \u2018middleware\u2019 of the receiver\/decoder.","With reference to  the software architecture of the receiver\/decoder  corresponding to the top half of  (comprising the application layer , API layer  and virtual machine layer ) will now be described in more detail.","Interactive applications are applications that the user interacts with, for example, to obtain products and services, such as electronic program guides, telebanking applications and games.","There are two types of application in the application layer , plus the Application Manager . There are interactive applications such as a Web Browser  which can be added at any time as long as they conform to the API , and there are resident applications which manage and support the interactive applications. The resident applications are substantially permanent and include the following:\n\n","Other applications in the application layer  include a program guide application , a pay-per-view application , a banner (pilot) application , a home banking application , a software download application  and a PVR (personal video recorder) application  (see below).","As noted above, the Application Programming Interface (API) layer  contains several packages. These include basic system packages , used, for example, to access basic features of the virtual machine, DAVIC packages , and proprietary packages , used to access features of the software architecture unique to the principal software vendor.","Considered in more detail, the virtual machine  includes the following:\n\n","Furthermore, the DAVIC resource notification model is supported so that client resources are efficiently managed.","A kernel  manages the various different processes running in the virtual machine  and device layer interface  (not shown). For efficiency and reliability reasons, the kernel implements relevant parts of the POSIX standard for operating systems.","Under control of the kernel, the virtual machine (running Java and Pantalk applications) runs in its own thread, separate to other \u2018server\u2019 elements of the operating system, such as the mass storage server  (not shown). Corresponding provisions, such as requiring Thread IDs to be passed as parameters in system calls, are also made in the API layer  to allow the applications  to benefit from the multithreaded environment.","By providing multiple threads, more stability can be achieved. For example, if the virtual machine  ceases to operate for some reason, by suffering a crash or being blocked for a long time by an application trying to access a device, other time-critical parts of the system, such as the hard disk server, can continue to operate.","As well as the virtual machine  and kernel , a hard disk video recorder (HDVR) module  is provided for handling the recording and playback functions of the hard disk  or other attached mass storage component. The server comprises two separate threads ,  handling recording, one thread  for handling playback, and a file system library  for interfacing with the mass storage components.","An appropriate one of the threads , ,  in the hard disk video recorder (HDVR)  receives commands (such as a command to start recording a particular programme) from clients such as the personal video recorder (PVR) application , in response to the user pressing a \u2018record\u2019 button, for example.","In turn, the thread in question then interacts with the service device  (shown in ) to set up and synchronise the parts of the receiver\/decoder handling the bitstream to be recorded or played back. In parallel, the thread also interacts with the file system library  to coordinate the recording or playback operation at appropriate places on the hard disk  (not shown).","The file system library  then sends commands to the mass storage device  (also shown in ) which tell the mass storage device  which sub-transport stream (STS) to transfer (via a FIFO buffer), and on which hard disk target the stream should be stored. Allocation of clusters on the hard disk and general file management is carried out by the file system library , the mass storage device itself being concerned with lower level operations.","The service device  mentioned above is unique amongst the devices in that it does not relate to a physical component of the receiver\/decoder. It instead provides a high level interface which groups together in a single \u2018instance\u2019 the various sets of tuner, demultiplexer, remultiplexer and hard disk devices in the receiver\/decoder, freeing higher level processes from the difficulties of coordinating the various sub-devices.","With reference to  the software architecture of the receiver\/decoder  corresponding to the bottom half of  (comprising the device layer interface  and the system software and hardware layer ) will now be described in more detail.","Further devices provided in the device layer include the conditional access device , tuner devices  corresponding to the two (or potentially more) tuners ,  of , the video device , the I\/O port device , and the service device  and mass storage device  mentioned above.","In broad terms, a device can be regarded as defining a logical interface, so that two different devices may be coupled to a common physical port. Certain devices may communicate among themselves, and all devices also operate under the control of the kernel .","Before using the services of any device, a program (such as an application instruction sequence) has to be declared as a \u201cclient\u201d, that is, a logical access-way to the device or the device manager . The manager gives the client a client number which is referred to in all accesses to the device. A device can have several clients, the number of clients for each device being specified depending on the type of device. A client is introduced to the device by a procedure \u201cDevice: Open Channel\u201d. This procedure assigns a client number to the client. A client can be taken out of the device manager  client list by a procedure \u201cDevice: Close Channel\u201d.","The access to devices provided by the device manager  can be either synchronous or asynchronous. For synchronous access, a procedure \u201cDevice: Call\u201d is used. This is a means of accessing data which is immediately available or a functionality which does not involve waiting for the desired response. For asynchronous access, a procedure \u201cDevice: I\/O\u201d is used. This is a means of accessing data which involves waiting for a response, for example scanning tuner frequencies to find a multiplex or getting back a table from the MPEG stream. When the requested result is available, an event is put in the queue of the engine to signal its arrival. A further procedure \u201cDevice: Event\u201d provides a means of managing unexpected events.","In a second embodiment of the receiver\/decoder, the lower half of the architecture of the receiver\/decoder is replaced by the layers shown in .","In this embodiment, an extended device layer interface (EDLI)  is provided between the virtual machine  (not shown) and the device layer interface , and an abstraction device interface  is provided between the device layer interface  and the system software\/hardware layer . Otherwise, like parts are indicated with like reference numerals.","The extended device layer interface (EDLI)  provides a dedicated interface between the virtual machine  and the device layer interface  and generally provides multithreading support to the device layer interface. Functions of the EDLI include routing asynchronous events to the appropriate thread in the middleware (since the device layer interface need not itself support multithreading) and routing messages between threads.","The abstraction device interface  provides a further interface between the device layer interface  and the device drivers  in the system software\/hardware layer . By providing such an interface, the large and complex device layer  can be made hardware independent to a greater degree.","Further Aspects of System Devices","The organisation of software devices within the receiver\/decoder , and in particular the use of device instantiation and logical demultiplexers to provide enhanced functionality, are described in more detail below. A logical demultiplexer, which advantageously makes use of the above-mentioned features of device instantiation, is then described.","Subsequently, the use of the above-mentioned logical demultiplexer for demultiplexing more than one service simultaneously (to allow one demultiplexer to perform the role of two conventional demultiplexers, for example) and for recording more than one service (such as a digital television programme) simultaneously are then described. The provision of a control word device and other system aspects for use in managing conditional access will then be described, and finally there follows description of the use of two tuners, particularly with respect to conditional access data and having a close relationship with the above-mentioned logical demultiplexer.","Device Instantiation in the Context of Device Management","In the preferred embodiment, the device manager  is adapted to instantiate the devices required by the receiver\/decoder. This instantiation of software devices and their detailed structure is now described in more detail, with reference to .",{"@attributes":{"id":"p-0176","num":"0194"},"figref":["FIG. 9","FIG. 9"],"sub":["0 ","1 ","0 ","1 "],"b":["6000","6002","6004","6006","6008","6010","6012","6014","6016","6018","6000","6002","6000","6002","6020","6022"]},"The devices ,  form part of the device layer ; the device clients typically form part of the application layer , API layer , virtual machine layer  or device layer ; and the device driver  and hardware devices ,  form part of the system software\/hardware layer , all as shown in ,  and .","In order to create greater flexibility and efficiency, each of the \u2018software devices\u2019 referred to elsewhere is created by a process of instantiation. In more detail, when the receiver\/decoder  is initialised or reinitialised, the device manager  instantiates in turn each of the software devices\u2014such as devices d and d\u2014by combining a general \u2018device profile\u2019 for each required device\u2014such as the device profile d \u2014with instance-specific information (which may be no more than the instance identifier)\u2014such as instantiation information  or .","In the preferred embodiment, the device profile comprises a stand-alone version of the corresponding instantiated device, including the necessary interfaces, code and data fields, options (for example including the commands to be supported) being specified for each device instance. After instantiation (for example, by byte-for-byte code duplication of the device profile), every instance of a particular device is then entirely independent from other instances of the same or other devices.","It should also be noted that in  a generic device driver  is provided for accessing the hardware functions of the devices D; in this case, calls to this device driver (as opposed to higher level calls to the device manager ) specify the particular one of the hardware devices to which the call relates (by supplying the device instance number as a parameter, for example). Depending on the implementation of the device layer  and system software\/hardware layer , which can vary widely, separate device drivers might instead be provided for each of the hardware devices , .","Each class or type of device is allocated a two-byte class identifier  which identifies that class of device uniquely. Upon instantiation, each device of a particular class is allocated a two-byte instance identifier  which is unique within that class. That is to say the first TUNER device may be allocated the same instance identifier as the first DEMUX device (described below), however, no two TUNER devices will have the same instance identifier. After instantiation, each device is uniquely identified by a compound, four-byte identifier  (see ) constructed from the class identifier  (forming the lowest two bytes of the compound identifier) and the instance identifier  (forming the highest two bytes of the identifier).","In more detail, the devices D could be the tuners in the receiver\/decoder, for example, which, in broad terms, are adapted to select for decoding a number of different transport streams broadcast on different frequencies.","In this case, the hardware devices Dand Dwould be the two tuners ,  shown in  respectively, the software devices d and d would be the two TUNER devices  shown in , and the hardware device driver would be a tuner device driver (not shown elsewhere), which would allow direct communication with the hardware underlying the two tuners (although as noted above, separate device drivers could be provided for each tuner).","To illustrate the above, a typical function provided by the generic TUNER device (a is the TUNER_TUNING_SET command, for example, which sets various properties of the given tuner, including frequency, signal polarisation, and so on. The TUNER_TUNING_SET command is used, for example, by the zapping application  mentioned earlier in order to change channels. In this system, the actual executable code corresponding to the TUNER_TUNING_SET command is common to all TUNER devices, but allows each TUNER device to be tuned independently of the others. Information such as the current frequency of a particular tuner instance (such as d) is contained in the instance-specific information for the particular TUNER device (d).","The device profile  and the instantiation data ,  will now be further described with reference to and ","In contrast to the situation shown in , where there are a plurality of hardware devices and corresponding software devices (such as the two tuners and the corresponding TUNER software devices mentioned above), there may be only one software device in a given device class (such as for the LCARD smartcard reader device, for example). In this case, a device profile is still provided, from which a single instance is created, as described above.","The stored operating system comprises the device profiles necessary to create all of the required software device instances. As described above, in the preferred embodiment, when the operating system is booted or rebooted (following a power-on or other reset of the receiver\/decoder). Thus, the instantiation of software devices is static, performed once every reset. Since the hardware provided in the receiver\/decoder is also static, this is generally perfectly acceptable.","In some cases, as will be described in more detail later, a particular functionality offered by a subset of a hardware device or a group of hardware devices is encapsulated in a single software device, providing a \u2018logical\u2019 software device without a physical equivalent. An example of this would be the logical demultiplexer, which is described later.","The communication of devices with one another and with applications under the control of the device manager  is now described in more detail.","Each device communicates with an application, or potentially another device, under the control of the device manager . The device manager  controls access to the devices, declares receipt of an unexpected event and manages shared memory. The three procedures used by the devices for communication with one another and with other parts of the system (for example, applications) are introduced above. In greater detail, these three procedures serve the following purposes:","\u201cDevice: Call\u201d procedures are used to give synchronous commands or effect data transfer. Execution of an application requesting this procedure is suspended during execution of the command or the data transfer. This allows operations which must be performed in strict sequence to be controlled reliably.","\u201cDevice: I\/O\u201d procedures provide for asynchronous operation. That is, an application can send a request for a data transfer or a particular function to be performed by a device, and execution of the requesting application continues while the data transfer or function is performed. When a requested result is available, an event is put in a queue by the device manager  to signal its arrival.","\u201cDevice: Event\u201d procedures provide a means of managing unexpected events, enabling events to be signalled to an application by a device. When a device makes such a call, the device manager  loads an event item into a queue. The Event Manager  of the virtual machine  extracts event items according to a priority level allocated to each event item and inserts them into appropriate further queue structures specific to particular applications in the virtual machine . When an application receives an event, it is interrupted and responds independently of the code it was executing at the time an event is signalled. Events may be used to notify something which has occurred on an interface, such as a bus reset, or can be used to notify a result in response to an asynchronous command for instance to signal completion of a requested data transfer.","If a particular function of a class of software device is not supported by the underlying hardware (that is to say that, if a device feature, such as a scan feature for a tuner device for example, is not provided in hardware), instances of that software device will not provide that function.","As indicated earlier, an important feature is the abstraction of functionality from its supporting physical device(s). Each function can potentially be a complex one, involving several physical devices, and a set of functions may be related in that they involve an overlapping set of physical or logical devices. This is dealt with by device instantiation as described generally above. One device class can be instantiated with respect to more than one function. This is exemplified by the description of multiple demultiplexing functions in a receiver\/decoder below, each demultiplexing function having its own set of device instances and the device instances belonging to overlapping sets of device classes.","Logical Devices","As indicated above, the preferred embodiment comprises logical devices. A logical device is one which may, but does not necessarily, correspond to a single item of underlying hardware. The functionality provided by a logical device may for example be a subset of the functionality provided by an item of hardware or it may be an amalgamation of functionality provided by a number of items of hardware. It may include functionality provided by the software device itself without the support of an item or items of hardware. Furthermore, a logical device may provide functionality which it accesses by making calls to one or more further software devices, which may provide that functionality with or without the support of an item or items of hardware.","The preferred embodiment provides demultiplexing functionality to applications using logical demultiplexer (DEMUX) devices, which make calls both to hardware and to other software devices.","A set of software devices is provided in the device layer interface  for accessing demultiplexing functions of the DDR unit  in response to a request by an application. This set comprises:\n\n","In the preferred embodiment, three types of logical demultiplexer device are provided (see ):\n\n","These three types of logical demultiplexer are supported by different subsets , ,  of the software devices listed above, as can be seen in . The PLAYER logical demultiplexer  does not require a TS_REMUX device  since it does not need to construct a programme transport stream, and the RECORDER logical demultiplexer  does not require a SERVICE device  since it is not concerned with the presentation of a service to a, viewer. For each logical demultiplexer a dedicated one of each of the required other software devices listed above is also instantiated.","When a logical demultiplexer requires functionality provided by a hardware demultiplexer, for example to record a service from an incoming transport stream, the logical demultiplexer first notifies the hardware demultiplexer of the source of the transport stream using a DEMUX_SET_SOURCE command. The possible sources include one of the tuners (further information regarding the provision of multiple tuners is provided below), the hard disk via a buffer (for example, a FIFO), and a port to which an external device is attached. If the demultiplexer is active in demultiplexing a stream from a different source, it notifies the logical demultiplexer device that it is not available to perform the requested operation. Otherwise the source of the demultiplexer is set to the indicated source and the requested operation is performed. The procedure for allocating a hardware demultiplexer to perform a desired demultiplexing operation is further described below.","In a particularly preferred embodiment, the logical devices comprise one or more identifier identifying one or more physical or other software devices which implement the functionality offered by the logical device. In a further preferred embodiment, a database containing data indicating which logical devices uses which other device(s) is maintained, for example by the device manager.","Multiple Demultiplexers\/Remultiplexers","In a preferred embodiment, the DDR  comprises two (or, in a particularly preferred embodiment, three) physical demultiplexers, each capable of being set to demultiplex up to 32 PIDs received from a distinct source. Moreover, preferred embodiments are able, for example using the logical demultiplexer devices described above, to use each physical demultiplexer to demultiplex more than one service from a particular source simultaneously.","In order illustrate this feature, the procedure for the selection of a physical demultiplexer to perform a desired demultiplexing operation will now be described, with reference to and , and , in the context of a receiver\/decoder having two physical demultiplexers , .",{"@attributes":{"id":"p-0205","num":"0233"},"figref":["FIGS. 12","FIG. 12"],"i":["a ","b ","a"],"b":["2016","2018","6302","6304","6302","6310","2016","2016","6250","6320"]},"A logical demultiplexer device (as described above) is allocated to oversee the demultiplexing operation. The logical demultiplexer then performs the following procedure, described with reference to .","The logical demultiplexer device determines (at step ) whether any physical demultiplexer is demultiplexing a service from the desired transport stream. If so, then it checks (at step ) whether that physical demultiplexer has sufficient capacity to demultiplex five additional PIDs. If the answer is yes again, the logical demultiplexer uses that physical demultiplexer to perform the desired operation.","In the case of this example, however, no physical demultiplexer has the correct source for the desired operation (that is, a tuner tuned to transport stream Y). Therefore, after step , the logical demultiplexer checks (at step ) whether any physical demultiplexer is inactive by determining whether any has its source disconnected. If no physical demultiplexers are inactive, then the logical demultiplexer returns an error (at step ) to the application which requested the demultiplexing operation. However, in the case of this example, the source of the second physical demultiplexer is disconnected, and it is therefore available to be used by the logical demultiplexer, which switches the source of the second physical demultiplexer to the second tuner , and requests that the second tuner be tuned to the frequency of the desired transport stream (in the preferred embodiment, by sending a command to a TUNER device  as described above).","In a second example, commencing with the situation shown in , it is desired to demultiplex five additional PIDs from transport stream X . In this case, at step , it is discovered that the first physical demultiplexer  does have the desired source. The logical demultiplexer then determines (at step ) whether the first physical demultiplexer  has sufficient capacity to demultiplex five additional PIDs; it does since it is presently demultiplexing only five PIDs (as stated above, each demultiplexer may simultaneously demultiplex 32 PIDs from a transport stream). The logical demultiplexer therefore uses the first physical demultiplexer  to perform the desired operation, switching its source to the first tuner , as shown in ","The preferred embodiment also comprises two (or more) physical remultiplexers, each capable of constructing, in a known manner, a transport stream for storage from the demultiplexed packets of a service","The embodiment is thus capable of presenting more than one service simultaneously (for example, in a picture-in-picture configuration) or recording more than one service simultaneously (upon which subject more information is provided below), or recording one or more services while presenting one or more different services, regardless of whether the services being presented\/recorded are being received on the same or different transport streams.","Recording Multiple Services","As indicated above, the preferred embodiment is capable of recording more than one service simultaneously.","The requirement to do so may arise, for example, when a viewer decides to record a first programme and a second programme being broadcast at overlapping times. Alternatively, a viewer may wish to record a first programme and time shift a second programme being broadcast at the same time as the first. This latter case will now be described in the context of a preferred embodiment, with reference to .","For the purposes of this discussion, it is presumed that the user wishes to watch (and timeshift) programme A being received in transport stream X, having duration 90 minutes and commencing at 21 h 00; and to record programme B being received in transport stream Y, having duration 45 minutes and commencing at 21 h 30.","Having indicated earlier in a known manner that programme. B is to be recorded, the user indicates at 21 h 00 that he desires to watch programme A, for example by selecting programme A from an electronic programme guide. A PLAYER\/RECORDER logical demultiplexer device, DEMUX_PLAY_RECORD  (as described above), is allocated to the demultiplexing of the service forming programme A; DEMUX_PLAY_RECORD determines, using the process described above, that the first physical demultiplexer, HW_DEMUX_ , is available to demultiplexer from a tuner. A first tuner, TUNER_ , is tuned to the frequency of transport stream X, and the source of HW_DEMUX_  is set to TUNER_  using the DEMUX_SET_SOURCE command. The PIDs of the elementary streams belonging to programme A are obtained from the SI Engine  (described above) and passed to HW_DEMUX_  which commences demultiplexing of those PIDs. The extracted elementary stream packets are descrambled (as described below) and presented to the user in a known manner.","At 21 h 30, a RECORDER logical demultiplexer device, DEMUX_RECORD , is allocated to the demultiplexing of the service forming programme B. The DEMUX_RECORD  determines, as described above, that HW_DEMUX_  is performing a demultiplexing operation on the transport stream being received in transport stream X, but that a second physical demultiplexer, HW_DEMUX_ , is available. A second tuner, TUNER_ , is tuned to the frequency of transport stream Y, and the source of HW_DEMUX_  is set to TUNER_ .","The PIDs belonging to programme B are determined as above and passed to HW_DEMUX_  which commences demultiplexing of those PIDs. The extracted elementary streams are then remultiplexed and stored on the hard disk in a known manner.","For the purposes of this discussion we now suppose that, at 21 h 45, the user decides that he wishes to postpone viewing of the remaining 45 minutes of programme A, and indicates this by pressing a PAUSE button on a remote control. DEMUX_PLAY_RECORD  ceases the descrambling of the extracted elementary streams, causes the SERVICE device  allocated to it to freeze the video display on screen and commences the remultiplexing of the elementary streams using the TS_REMUX device  allocated to it. The remultiplexed stream is stored on the hard disk in a known manner.","At 22 h 00, the user indicates that he wishes to view the remaining 45 minutes of programme A by pressing a resume button on a remote control. A PLAYER logical demultiplexer, DEMUX_PLAY , is allocated to the demultiplexing of the stored portion of programme A; DEMUX_PLAY  determines that HW_DEMUX_  and HW_DEMUX_  are not available to demultiplex a stream from the hard disk, and a third physical demultiplexer, HW_DEMUX_ (not shown), is selected and its source set to the hard disk (via a FIFO) in a known manner. The stored portion of programme A is read, demultiplexed and descrambled from the hard disk by DEMUX_PLAY until 22 h 45, while DEMUX_PLAY_RECORD continues to demultiplex and remultiplex programme A from TUNER_  until 22 h 30. DEMUX_RECORD  ceases demultiplexing and remultiplexing programme B from TUNER_  at 22 h 15.","If the user decides subsequently to view programme B, DEMUX_PLAY  performs the demultiplexing operations, and so on, as described above.","Control Word Device","In known systems, the control words are extracted from the ECMs by the conditional access smartcard housed in the card reader. In embodiments of the invention, the control words continue to be extracted from the ECMs by the smartcard, but further processing of the conditional access data is handled at a higher level in the architecture.","Preferred embodiments comprise a further software device, the control word (CW) device , for managing descrambling operations performed by the descrambler in the DDR .","As mentioned above, the Service Information (SI) Engine  loads and monitors common Digital Video Broadcasting (DVB) or Program System Information Protocol (PSIP) tables and puts them into a cache. Data contained in the tables includes Conditional Access Tables (CATs) from which the PIDs for Entitlement Control Messages (ECMs), each containing an encrypted control word and access criteria for a programme component, can be ascertained. To descramble incoming programme components, the relevant control words need to be loaded to the conditional access smartcard (CA smartcard)  where they can be decrypted, using the key received in an Entitlement Management Message (EMM), and then used in the DDR unit  for descrambling.","The handling of ECMs will now be further described with reference to .","When a service is to be descrambled, a CA kernel  in the middleware (for example, forming part of the virtual machine) receives an event from elsewhere in the system (for example, from the Zapping application ) identifying the channel upon which the service to be descrambled is being received. The CA kernel  retrieves from the data cached by the SI engine  the PIDs of the ECMs relevant to the service to be descrambled and instructs the MLOAD device  in the DLI to isolate the ECMs  as they are received in the programme data stream. The isolated ECMs are then routed by the CA kernel  to the conditional access smartcard  which operates under the control of an LCARD device . The conditional access smartcard extracts control words from the ECMs in a known manner, if it has the rights to do so, and the extracted code words are passed by the CA kernel  to the Control Word (CW) device  in the DLI. As a result, the handling of the control words is not visible at a the DLI level, resulting in increased security.","As indicated above, the role of the CW device is to manage descrambling operations performed by the physical descrambler(s). In the preferred embodiment, the CW device is instantiated, as described above, and each instance of the device is a client of the (or one of the) descrambler(s). The CW device allocates a descrambler channel, identified by a descrambler channel identifier DESCR_ID, to each requested descrambling operation for which different access conditions apply (that is, requiring the use of different control words).","For a particular descrambling operation, the CW device is responsible for the following tasks:\n\n","In addition, the CW device determines the maximum number of descrambler channels which can be allocated at any time, based on the capabilities of the descramblers, and it notifies the CA kernel if a request for a descrambling operation cannot be accommodated.","Multiple Tuners","The provision of two or more tuners in preferred embodiments will be described below after a brief review of provisions for conditional access in prior art systems.","In known systems, an MPEG transport stream carries a limited number of audio and video programmes, the number being dependent on factors such as the degree of data compression, and so on. Administrative data, including conditional access data, for all of the programmes being broadcast from a head-end is inserted into each of the transport streams, so that a receiver\/decoder is able to determine for which programmes the rights to view are held, without tuning to each transport stream in turn. This provision of such data in each transport stream reduces the bandwidth available for content itself, and thus increases the number of transport streams, transponders, and so on, necessary for the distribution of a bouquet.","In a preferred embodiment, a head-end is provided which is capable of broadcasting this administrative data (including conditional access data) in a single transport stream only. It is indicated above that a preferred embodiment comprises two tuners. In a preferred embodiment, one of these tuners (or, in a particularly preferred embodiment, an additional tuner) is dedicated to the task of receiving this administrative data.","In the description above referring to ,  and , a single multiplexer  is described for constructing a transport stream for broadcast to users over a linkage . The multiplexer  in fact represents a plurality of multiplexers which construct the plurality of transport streams necessary for broadcasting a bouquet. The provision of an additional multiplexer for broadcasting administrative data in a preferred embodiment is now further described with reference to .","In addition to the multiplexers , an administrative data multiplexer \u2032 is provided which receives the encrypted EMMs from the SAS , encrypted ECMs from the second encrypting unit , datastream description tables (for example, the PATs and the PMTs), update packets for the CAT table and any other data of a similar type, which it uses to assemble an administrative data transport stream. This transport stream has a broadcast route \u2032 (which may be the same as the broadcast routes ). In this embodiment, the administrative data is not inserted into the transport streams constructed by the multiplexers .","When a receiver\/decoder is installed at a user's premises, the frequency of the administrative data transport stream is programmed during initialisation. In an alternative embodiment, the receiver\/decoder is adapted to scan frequencies for a transport stream identifying itself as the administrative data transport stream.","In further embodiments, the conditional access data is not broadcast (and therefore received) on a dedicated channel, but on a channel which also carries some programme data. In yet further embodiments, channel-hopping is implemented, such that channel upon which the conditional access data is broadcast changes.","In a preferred embodiment of a receiver\/decoder intended to be used to receive transport streams broadcast by a head-end as described above, there is provided a first tuner  tunable to the administrative data transport stream and a second tuner  (or, in a particularly preferred embodiment, second and third tuners) tunable to transport streams comprising programme data.","It will be readily understood that, in, order to demultiplex both programme data and administrative data simultaneously, the preferred embodiment of receiver\/decoder must be provided with at least two physical demultiplexers in the DDR unit , a first to filter programme stream PIDs from one transport stream and a second to filter the related administrative data PIDs from the administrative data transport stream. In fact, as indicated above, a particularly preferred embodiment comprises three physical demultiplexers.","The precise details of the implementation of the various functions described above, and their distribution between hardware and software, are a matter of choice for the implementer and will not be described in detail. It is, however, noted that dedicated integrated circuits capable of performing the operations required in the receiver\/decoder are commercially available or can be readily designed, and these can be used as the basis for a hardware accelerator, or more preferably modified to produce a dedicated hardware accelerator, to implement various of the operations required, thereby reducing the processing power required to run the software. However, the operations required may be implemented in software if sufficient processing power is available.","The modules and other components have been described in terms of the features and functions provided by each component, together with optional and preferable features. With the information given and specifications provided, actual implementation of these features and the precise details are left to the implementer. As an example, certain modules could be implemented in software, preferably written in the C programming language and preferably compiled to run on the processor used to run the application; however, some components may be run on a separate processor, and some or all components may be implemented by dedicated hardware.","The above modules and components are merely illustrative, and the invention may be implemented in a variety of ways, and, in particular, some components may be combined with others which perform similar functions, or some may be omitted in simplified implementations. Hardware and software implementations of each of the functions may be freely mixed, both between components and within a single component.","It will be readily understood that the functions performed by the hardware, the computer software, and such like are performed on or using electrical and like signals. Software implementations may be stored in ROM, or may be patched in FLASH.","It will be understood that the present invention has been described above purely by way of example, and modification of detail can be made within the scope of the invention.","Each feature disclosed in the description, and (where appropriate) the claims and drawings may be provided independently or in any appropriate combination."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"p":["Preferred features of the present invention will now be described, purely by way of example, with reference to the accompanying drawings, in which:\u2014",{"@attributes":{"id":"p-0088","num":"0090"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0089","num":"0091"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0090","num":"0092"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0091","num":"0093"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0092","num":"0094"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0093","num":"0095"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0094","num":"0096"},"figref":["FIG. 7","FIG. 5"]},{"@attributes":{"id":"p-0095","num":"0097"},"figref":["FIG. 8","FIG. 5"]},{"@attributes":{"id":"p-0096","num":"0098"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0097","num":"0099"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0098","num":"0100"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0099","num":"0101"},"figref":"FIGS. 12","i":["a, b ","c "]},{"@attributes":{"id":"p-0100","num":"0102"},"figref":["FIG. 13","FIG. 12"]},{"@attributes":{"id":"p-0101","num":"0103"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0102","num":"0104"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0103","num":"0105"},"figref":"FIG. 16"}]},"DETDESC":[{},{}],"heading":"SYSTEM OVERVIEW"}
