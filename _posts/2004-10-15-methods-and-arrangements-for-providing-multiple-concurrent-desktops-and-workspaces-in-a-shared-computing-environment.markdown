---
title: Methods and arrangements for providing multiple concurrent desktops and workspaces in a shared computing environment
abstract: Methods and arrangements are provided for use in multiple user computing environments. These methods and arrangements can be configured to allow for a plurality of separate and concurrent desktops and workspaces within the shared computing environment. One method includes creating a separate desktop thread for each user that is authenticated during a logon process, creating a separate desktop associated with each desktop thread, and maintaining a list of desktop threads that are created. In this manner, several users can be logged on simultaneously. In certain implementations, the method further includes establishing a separate user environment associated with each desktop and launching a separate user shell associated with each desktop. The list of desktop threads allows for selective and/or automatic switching from a first desktop to a second desktop without terminating a desktop thread associated with the first desktop. The methods and arrangements are also applicable to remote process logon and switching.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07127719&OS=07127719&RS=07127719
owner: Microsoft Corporation
number: 07127719
owner_city: Redmond
owner_country: US
publication_date: 20041015
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This application claims priority to U.S. patent application Ser. No. 09\/573,628, filed May 17, 2000, which claims priority from U.S. Provisional Application Ser. No. 60\/170,956, filed Dec. 15, 1999 entitled \u201cMultiple Desktops To Provide Separate Concurrent Work Spaces For Multiple Users Using The Same Computer\u201d, the disclosure of which is incorporated by reference herein.","This invention relates to computers and software, and more particularly to methods and arrangements that provide a plurality of separate and concurrent desktops and workspaces within a shared computing environment.","There are many situations where several people would like to share a single computer. For example, a home may have a single personal computer (PC) that is shared by the family members. If these users desire a unique configuration, privacy, and\/or security for their applications and data files, such a shared computing environment may not adequately accommodate them.","For example, with most operating systems, the users share a single workspace. Unfortunately, doing so does not allow personalization of their workspace or security of data between users. In certain operating systems, users may separate their data into multiple \u201cprofiles\u201d or \u201caccounts\u201d. One of the drawbacks to this scheme is that if one user is using the computer and a another user would like to access their own files, the first user would have to close all open applications in order for the other user to log on to the system and access their data. Thus, the first user's application state is lost. In addition to losing the application state, the user is inconvenienced because of the time involved with closing down the prior user's state and re-establishing the new user's state.","Certain solutions, such as, for example, the \u201cIdentity Manager\u201d available in Microsoft Outlook Express version 5.0, allow certain user data to be shared among separate users without losing all of the application's states during a user switch. However, the Identity Manager manages only a small subset of the user's data. Text documents, for example, are not stored separately for each user. Furthermore, there is little workspace personalization available and the user data is not secured for other user access.","Consequently, there is a need for an improved methods and arrangements for use in multiple user computing environments. Preferably, the methods and arrangements will allow for a plurality of separate and concurrent desktops and workspaces within the shared computing environment","The present invention provides improved methods and arrangements for use in multiple user computing environments. These methods and arrangements can be configured to allow for a plurality of separate and concurrent desktops and workspaces within the shared computing environment","The above stated needs and other are met, for example, by a method for use in a multiple user computing environment logon user interface. The method includes creating a separate desktop thread for each user that is authenticated during a logon process, creating a separate desktop associated with each desktop thread, and maintaining a list of desktop threads that are created. In this manner, several users can be logged on simultaneously. In certain implementations, the method further includes establishing a separate user environment associated with each desktop and launching a separate user shell associated with each desktop. The list of desktop threads allows for the selective switching from a first desktop to a second desktop without terminating a desktop thread associated with the first desktop. Indeed, in certain implementations the method includes automatically switching from one desktop to another desktop without terminating the associated desktop threads. For example, this can occur following a configurably defined period of user inactivity. When a user logs off, then the method further includes selectively removing the applicable desktop thread from the list of desktop threads.","As shown in , computer  includes one or more processors or processing units , a system memory , and a bus  that couples various system components including the system memory  to processors . Bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures.","The system memory includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM .","Computer  further includes a hard disk drive  for reading from and writing to a hard disk, not shown, a magnetic disk drive  for reading from and writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM, DVD ROM or other optical media. The hard disk drive , magnetic disk drive  and optical disk drive  are each connected to bus  by applicable interfaces ,  and , respectively.","The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for computer . Although the exemplary environment described herein employs a hard disk, a removable magnetic disk  and a removable optical disk , it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, random access memories (RAMs) read only memories (ROM), and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk, magnetic disk , optical disk , ROM , or RAM , including an operating system , one or more application programs , other program modules , and program data . A user may enter commands and information into computer  through input devices such as keyboard  and pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are connected to the processing unit  through an interface  that is coupled to bus .","A monitor  or other type of display device is also connected to bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown) such as speakers and printers.","Computer  can operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . Remote computer  may be another personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to computer . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When used in a LAN networking environment, computer  is connected to the local network  through a network interface or adapter . When used in a WAN networking environment, computer  typically includes a modem  or other means for establishing communications over the wide area network , such as the Internet. Modem , which may be internal or external, is connected to bus  via interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Reference is now made to , which depicts an exemplary graphical user interface (GUI) display suitable for use in identifying users to the operating system of computer . Here, a logon screen  is shown as having a first title area  that identifies logon screen . Logon screen  may take up be a full screen of display  or a portion thereof. As shown, first title area  can include any graphical feature (e.g., bitmap, photo, video, text, etc).","Logon screen  also includes a multiple user logon area  wherein the user is presented with selectable user identifiers and related information and permitted to input certain data. In this example, logon area  is configured for five different users, namely, Billy, Christopher, Pat, Suzie, and William; each being identified by a text identifier  and\/or graphical identifier . Thus, William may begin logging on to the operating system by selecting either text identifier  and\/or graphical identifier . If William has an established password, then a password input field  is displayed and configured to receive his password. Once William's password has been authenticated then William is logged on. If William does not have an established password, then he would be logged on after selecting text identifier  or graphical identifier . Logon screen  can also be configured to display other user related information  to a user. In this example, user related information  identifies that Suzie has ten (10) new messages.","A second title area  is shown in this example along the left hand border of logon screen . Here, second title area  identifies the computer as the \u201cDen Computer\u201d. A selectable shut down mechanism  is also provided to allow a user to shut down the computer.","Logon screen  is, by way of example, the starting point for this description of the various methods and arrangements that allow for a plurality of separate and concurrent desktops and workspaces within the shared computing environment of computer . As described in more detail below and depicted in the flowcharts of , a desktop switching scheme is implemented for use with Microsoft Windows\u2122 NT or Windows\u2122 2000. Those skilled in the art, however, will recognize that the desktop switching scheme is applicable to other operating systems, computers, etc. For example, the scheme is extended herein to further include WinStation switching, each of which may include desktop switching as well.","The exemplary implementations presented herein utilize the Desktop application programming interfaces (APIs) available in Windows NT to create separate workspaces for each user who interactively logs on through logon screen . Using Windows NT profiles, the user's data is separated from other user's data and depending on the user's or the computer manager's preferences, access to other user's data can be secured. By using a separate desktop for each user, multiple users can be logged on to the computer simultaneously. Switching users is very fast, since it is just a desktop switch. No application state is lost during the switch because the applications run within the context of a desktop and are completely separated from one another.","To protect the user's logon session from other users if the users should happen to walk away form the computer without securing their workstation, the operating system will automatically switch back to the logon desktop after a user configurable timeout period. The logon desktop is secured from the user desktops and can only switch back to a user desktop if the user is identified by an to authentication entity within the operating system.","With this in mind, attention is drawn to the flowchart in . Here, process  begins with the computer displaying logon screen . In step , the user provides the necessary inputs to logon as part of the user authentication scheme. For example, the user selects text identifier  or graphical identifier  and subsequently enters a password in password input field . The authentication process occurs in the operating system, as depicted by decision step . If the authentication was not a success, then in accord with step  (NO), process  returns to logon screen . If the authentication was a success, then in accord with step  (YES), process  continues to decision step .","In decision step , it is determined if the authenticated user from step  is already logged in. This is accomplished by checking open desktops list (ODL) . If the authenticated user has not already logged in per step  (NO), then in accordance with step  a new desktop thread is created for this user. In step , the thread and desktop information are then added to the list of users currently logged on within ODL . The user's thread also sets up the user environment in step , and starts the user shell on their newly created desktop in step . In step  the logon program switches to the user's new desktop . At this point, the logon process is complete.","Returning to decision step , if a desktop is already open for the user as demonstrated by an associated entry in ODL , then step  (YES) advances process  to step . In step , a switch is made to the existing desktop thread, followed by a switch to the applicable desktop , in step . In  there are N>1 desktops as represented by desktops ","Reference is now made to , wherein a flowchart depicts a process  for logging off of a desktop . In this example, there are three ways for the user to become \u201clogged off\u201d. The first takes place in step , wherein the user intentionally and fully logs off. When such a logoff event is generated in step , then in step  the desktop is cleaned up, ODL  is updated and the thread is terminated. After step , process  returns to logon screen .","The second way for a user to become \u201clogged off\u201d is provided in step , wherein the user switches desktops manually. At any point prior to logging off, the user can initiate an action (e.g., by user input), which will return them to logon screen  without signaling the user's thread that a logoff has occurred. When this happens, the users desktop remains running and all applications that have been started on that desktop continue to run. However, the user is unable to see any of these applications because their desktop is essentially hidden. At this point, the desktop is said to be \u201cswitched out\u201d, but it is still active. The user will need to log on again in accord with process  to have the active desktop \u201cswitched in\u201d.","The third way that a user can become \u201clogged off\u201d is shown in step , wherein after a user configurable period of inactivity (e.g., no mouse activity or keyboard input) the operating system will assume that the user has stopped working on the computer for the time being and it will automatically switch back to logon screen . This helps to improve security by securing the user's desktop when they no longer appear to be using the computer. It also makes it easier for other users to utilize the computer and not worry about ending another user's session.","It is also possible to provide a plurality of separate and concurrent environments within the shared computing environment by switching remote processes, such as, for example, WinStations, instead of desktops. Logically, WinStations contain multiple desktops. Creating a WinStation for each user and switching the active WinStation when a user logs on or switches back to logon screen  could implement the same mechanism as described above.","Although some preferred embodiments of the various methods and arrangements of the present invention have been illustrated in the accompanying Drawings and described in the foregoing Detailed Description, it will be understood that the invention is not limited to the exemplary embodiments disclosed, but is capable of numerous rearrangements, modifications and substitutions without departing from the spirit of the invention as set forth and defined by the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more complete understanding of the various methods and arrangements of the present invention may be had by reference to the following detailed description when taken in conjunction with the accompanying drawings wherein:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
