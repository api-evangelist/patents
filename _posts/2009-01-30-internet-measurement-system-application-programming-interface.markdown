---
title: Internet measurement system application programming interface
abstract: Systems, application programming interfaces, and other embodiments associated with internet measurements are described. Example systems and methods facilitate requesting that a control server acquire internet measurements from a set of distributed measurement points. One example application programming interface (API) includes a list request interface to provide a list request to a control server. The list request may request a list of measurement points from the control server. The example API may also include a list receipt interface to receive a list response from the control server. The list response may contain information concerning measurement points. The API may enable a user to perform a complex series of internet measurements by giving the user access to standardized function calls for accessing a distributed internet measurement system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09021082&OS=09021082&RS=09021082
owner: Case Western Reserve University
number: 09021082
owner_city: Cleveland
owner_country: US
publication_date: 20090130
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","FEDERAL FUNDING NOTICE","BACKGROUND","DETAILED DESCRIPTION"],"p":["This application claims the benefit of provisional application No. 61\/062,911 filed Jan. 30, 2008.","The invention was developed with federal funding supplied under Federal Grant No. CNS-0520105 and CNS-0721890 provided by the National Science Foundation. The Federal government has certain rights in the invention.","Systems and methods may exist for running focused, on-demand internet measurements. Some conventional approaches for acquiring internet measurements may require using systems with limited data collection points. This may lead to inaccurate measurements due to the small number of collection points. Additional inaccuracies may arise from internet service providers influencing measurements by, for example, giving priority to packets to and from the collection points, and\/or by building service nodes closer to the collection points.","Some conventional systems may address these issues by allowing a widely distributed array of users to download a measurement point software. This may increase the number of data collection points available and may make it more difficult for internet service providers to influence measurements. Additionally, some approaches leave it to a researcher to discover measurement systems, arrange access to them, and communicate with them to obtain measurements. Still other systems may simply provide a graphical user interface (GUI) to select measurement hosts and the measurements to be performed. Thus, systems that provide GUIs may require an experimenter to manually set up simple monitoring tasks with periodic measurements from specified hosts. This may require the experimenter to monitor the measurements and to manually make changes. This non-automatic oversight may be expensive and\/or ineffective as labor is costly and humans may not be able to react quickly when changes are necessary.","One example distributed internet measurement platform, the Deep Internet Performance Zoom (DipZoom) platform, includes measuring points (MPts), clients, and the DipZoom core. MPts advertise their capabilities to the core (e.g., platform, offered measurements, etc.), announce their coming on-line, and perform measurements requested by the core on behalf of measurement requesters. The core maintains the database of the MPts and keeps track of MPts that are currently on-line. A measurement requestor may query the database for a list MPts that fit requirements based on characteristics including geographic location, identification number, operating system, connection bandwidth, and so forth. The measurement requestor may then submit measurement requests for selected MPts to the core, and download the results when the measurements have completed. Thus the DipZoom platform is, in one example, a peer-to-peer system for internet measurements. The core serves as both the central index of peers and the focal point for communication between clients and MPts.","In the DipZoom platform, a user may download and install DipZoom measuring software to become a measuring point (MPt). The core may generate MPt executable instances dynamically when the measuring software is downloaded. This may allow the core to assign a globally unique ID (MPtID) to instances of the measuring software and to embed a unique secret key into instances of the measuring software. Subsequent interactions between a MPt and the core may be encrypted using the MPt's secret key. A result of this encryption may be that MPts may be difficult to access. Therefore an application programming interface (API) may bridge communications between requesters and the DipZoom core. However, a person having ordinary skill in the art can see how there may be other advantages and reasons to use an API. In the DipZoom platform, the API is embedded in software that may be packaged with the measurement software. The API may facilitate scripting together a series of internet measurements.","Requests sent through the API are handled by the DipZoom core. The core handles requests for information regarding measurement points. The core also handles requests regarding internet measurements. When a measurement requester requests an internet measurement through the API, the measurement requestor may specify MPts and measurements to be performed by the MPts. The core formulates the requests and passes them along to the MPts to perform the measurements. When an MPt has completed the specified measurement, the MPt supplies the requested information back to the core. The information is then stored in the core. A measurement requester may then retrieve information regarding completed measurements through the API.","The following includes definitions of selected terms employed herein. The definitions include various examples and\/or forms of components that fall within the scope of a term and that may be used for implementation. The examples are not intended to be limiting. Both singular and plural forms of terms may be within the definitions.","References to \u201cone embodiment\u201d, \u201can embodiment\u201d, \u201cone example\u201d, \u201can example\u201d, and so on, indicate that the embodiment(s) or example(s) so described may include a particular feature, structure, characteristic, property, element, or limitation, but that not every embodiment or example necessarily includes that particular feature, structure, characteristic, property, element or limitation. Furthermore, repeated use of the phrase \u201cin one embodiment\u201d does not necessarily refer to the same embodiment, though it may.","\u201cComputer component\u201d, as used herein, refers to a computer-related entity (e.g., hardware, firmware, software in execution, combinations thereof). Computer components may include, for example, a process running on a processor, a processor, an object, an executable, a thread of execution, and a computer. A computer component(s) may reside within a process and\/or thread. A computer component may be localized on one computer and\/or may be distributed between multiple computers.","\u201cComputer communication\u201d, as used herein, refers to a communication between computing devices (e.g., computer, personal digital assistant, cellular telephone) and can be, for example, a network transfer, a file transfer, an applet transfer, an email, an HTTP transfer, and so on. A computer communication can occur across, for example, a wireless system (e.g., IEEE 802.11), an Ethernet system (e.g., IEEE 802.3), a token ring system (e.g., IEEE 802.5), a LAN, a WAN, a point-to-point system, a circuit switching system, a packet switching system, and so on.","\u201cComputer-readable medium\u201d, as used herein, refers to a medium that stores signals, instructions and\/or data. A computer-readable medium may take forms, including, but not limited to, non-volatile media, and volatile media. Non-volatile media may include, for example, optical disks, magnetic disks, and so on. Volatile media may include, for example, semiconductor memories, dynamic memory, and so on. Common forms of a computer-readable medium may include, but are not limited to, a floppy disk, a flexible disk, a hard disk, a magnetic tape, other magnetic medium, an ASIC, a CD, other optical medium, a RAM, a ROM, a memory chip or card, a memory stick, and other media from which a computer, a processor or other electronic device can read.","\u201cData store\u201d, as used herein, refers to a physical and\/or logical entity that can store data. A data store may be, for example, a database, a table, a file, a list, a queue, a heap, a memory, a register, and so on. In different examples, a data store may reside in one logical and\/or physical entity and\/or may be distributed between two or more logical and\/or physical entities.","\u201cLogic\u201d, as used herein, includes but is not limited to hardware, firmware, software in execution on a machine, and\/or combinations of each to perform a function(s) or an action(s), and\/or to cause a function or action from another logic, method, and\/or system. Logic may include a software controlled microprocessor, a discrete logic (e.g., ASIC), an analog circuit, a digital circuit, a programmed logic device, a memory device containing instructions, and so on. Logic may include one or more gates, combinations of gates, or other circuit components. Where multiple logical logics are described, it may be possible to incorporate the multiple logical logics into one physical logic. Similarly, where a single logical logic is described, it may be possible to distribute that single logical logic between multiple physical logics.","An \u201coperable connection\u201d, or a connection by which entities are \u201coperably connected\u201d, is one in which signals, physical communications, and\/or logical communications may be sent and\/or received. An operable connection may include a physical interface, an electrical interface, and\/or a data interface. An operable connection may include differing combinations of interfaces and\/or connections sufficient to allow operable control. For example, two entities can be operably connected to communicate signals to each other directly or through one or more intermediate entities (e.g., processor, operating system, logic, software). Logical and\/or physical communication channels can be used to create an operable connection.","\u201cQuery\u201d, as used herein, refers to a semantic construction that facilitates gathering and processing information. A query may be formulated in a database query language (e.g., SQL), an OQL, a natural language, and so on.","\u201cSignal\u201d, as used herein, includes but is not limited to, electrical signals, optical signals, analog signals, digital signals, data, computer instructions, processor instructions, messages, a bit, a bit stream, or other means that can be received, transmitted and\/or detected.","\u201cSoftware\u201d, as used herein, includes but is not limited to, one or more executable instruction that cause a computer, processor, or other electronic device to perform functions, actions and\/or behave in a desired manner. \u201cSoftware\u201d does not refer to stored instructions being claimed as stored instructions per se (e.g., a program listing). The instructions may be embodied in various forms including routines, algorithms, modules, methods, threads, and\/or programs including separate applications or code from dynamically linked libraries.","\u201cUser\u201d, as used herein, includes but is not limited to one or more persons, software, computers or other devices, or combinations of these.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 1","b":["100","100","199","100","110","110","110","100","120","120","199","199","120","199","100","130","130","199","110","199","110"]},"A DIMC may be associated with a set of client unique properties and a set of client generic properties. A client unique property may be a property held by one DIMC (e.g., client identification number, IP address, MAC address, and so forth). A client generic property may be a property held by one or more DIMCs (e.g., geographic location, client type, group identification number, configuration value, internet service provider, bandwidth value, owner, operating system, and so forth). In one example, the set of inputs may identify the DIMC with a client generic property. In this example, the action associated with the DIMC identified by the set of inputs may be requesting a list of identifiers of DIMCs having the client generic property. Thus, an example action query may request identifiers of DIMCs that are in a specific building that are owned by a specific company.","In another example, the set of inputs may identify the DIMC with a client unique property. In this example, one possible action associated with the DIMC identified by the set of inputs may be requesting a measurement be performed by the DIMC. Thus, by identifying a client identification number(s) of a DIMC(s), interface logic  may generate an action signal that causes control server  to queue up a measurement(s) for the DIMC(s). While a queue is described in this example, a person having ordinary skill in the art can see how other ways to store data may be applicable. In response to receiving a measurement request in an action query, control server  may provide a ticket identification number(s) associated with the measurement request. In one example, a ticket identification number may be associated with a single measurement being performed by a single DIMC. However, a person having ordinary skill in the art can see how a ticket identification number could be associated with multiple measurements being performed by a DIMC(s). Thus, a ticket identification number may be either a client unique property or a client generic property depending on the implementation of the control server and the client software.","Another possible action associated with the DIMC identified by the set of inputs may be requesting a status of a measurement being performed by the DIMC. An action query for requesting a measurement status may use a ticket identification number to identify the measurement(s) in question. Upon receiving an action query requesting a measurement status, control server  may provide a response comprising a binary indication as to whether the measurement has been completed. However, a person having ordinary skill in the art can see how there may be other possible pieces of information included in responses including estimated time to completion, actual measurement data, and so forth.","Another possible action associated with the DIMC identified by the set of inputs may be requesting a result of a measurement being performed by the DIMC. As described above, a ticket identification number may identify the measurements. Upon receiving an action query requesting a result, control server  may provide a set of data it has received from a DIMC associated with the ticket identified by the ticket identification number. As before, a person having ordinary skill in the art can see how other responses may be appropriate in other implementations. Thus, control server  may allow system  to acquire information about and from DIMCs. While four example actions are described, a person having ordinary skill in the art can see how system  may facilitate additional actions (e.g., paying the control server and\/or a DIMC for a measurement).","By way of illustration, a company concerned with streaming video and audio may be interested in estimating an appropriate level of quality of media to serve to customers based on their geographic location. A researcher at the company may query a control server for a list of DIMCs that are willing to perform measurements involving large data files. Additionally, the researcher may request that the list include the geographic location of DIMCs. The control server may then respond to the request with a list of client IDs that are willing to perform measurements involving large data files and are willing to disclose their geographic location. The researcher may then select some or all of the DIMCs to perform a test. In one example, the researcher may request that the DIMCs see how long it takes to download a movie (e.g., Road House starring Patrick Swayze). In another example, the researcher may request that the DIMCs determine how much time they spend buffering a song (e.g., Livin' on a Prayer by Bon Jovi). The control server may process this request and control the DIMCs to perform the selected measurement. As measurements involving larger files (e.g., high quality audio and\/or video files) may take some time, the researcher may configure his system to check for results every few hours. As results come in, the researcher's system may ask the control server to tell the system which measurements have completed and then download data from the completed measurements. This may allow the researcher to program the researcher's system to dynamically add measurement data to a set of results that the researcher may use to estimate quality settings for various locations.","Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a memory. These algorithmic descriptions and representations are used by those skilled in the art to convey the substance of their work to others. An algorithm, here and generally, is conceived to be a sequence of operations that produce a result. The operations may include physical manipulations of physical quantities. Usually, though not necessarily, the physical quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated in a logic, and so on. The physical manipulations create a concrete, tangible, useful, real-world result.","It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, and so on. It should be borne in mind, however, that these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise, it is appreciated that throughout the description, terms including processing, computing, determining, and so on, refer to actions and processes of a computer system, logic, processor, or similar electronic device that manipulates and transforms data represented as physical (electronic) quantities.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 2","b":["200","200","210","200","220","200"]},"While  illustrates various actions occurring in serial, it is to be appreciated that various actions illustrated in  could occur substantially in parallel. By way of illustration, a first process could generate an action request, and a second process could provide the action request. While two processes are described, it is to be appreciated that a greater and\/or lesser number of processes could be employed and that lightweight processes, regular processes, threads, and other approaches could be employed.","In one example, a method may be implemented as computer executable instructions. Thus, in one example, a computer-readable medium may store computer executable instructions that if executed by a machine (e.g., processor) cause the machine to perform method . While executable instructions associated with the above method are described as being stored on a computer-readable medium, it is to be appreciated that executable instructions associated with other example methods described herein may also be stored on a computer-readable medium.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 3","FIG. 2","FIG. 2"],"b":["300","300","200","300","310","320","300","300","330","300","340","300","350","300","200","300"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 4","b":["400","400","410","410","400","415","415"]},"System  also includes a measurement request logic . Measurement request logic  may provide a measurement request to the control server. The measurement request may request that an internet measurement be performed by a measurement point. A measurement request may identify a measurement source and a measurement target. Both measurement sources and measurement targets may be measurement points. However, one example measurement may determine how long it takes a measurement source to download a file stored on a measurement target that may not be otherwise configured with measurement point functionality. A person having ordinary skill in the art can see how other measurements may be useful (e.g., ping, trace route, and so forth). System  also includes a result receipt logic . Result receipt logic  may receive a result response from the control server. The result response may contain a result of an internet measurement.","In one example, the control server may impose a limit on the aggregate measurement rate against a given measurement target. This may help prevent the measurement target from being overwhelmed with measurement requests and\/or preventing the measurement target from having other functionalities impacted. The control server may also impose a limit on the measurement rate of a given measurement source. As above, this may reduce the likelihood that a large number of internet measurements may adversely impact a measurement source. The control server may impose these limits as a function of the bandwidth consumed by the measurements, the number of measurements per time unit, and so forth. In one example, a measurement point may establish a local measurement rate limit for measurements it performs. The measurement rate limit may influence limits imposed by the control server associated with the measurement point. As described above, the measurement rate limit may be a function of bandwidth consumed by measurements, the number of measurements per time unit, and so forth.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 5","FIG. 4"],"b":["500","500","400","500","510","515","520","545","500","500","525","525","500","530","530","500","535","535","500","540","540","500"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 6","b":["600","600","610","600","620","630","610","620","610","600","620","610","620","610","610"]},"Similarly, the API  can be employed to provide data values to the system  and\/or retrieve data values from the system . For example, a process  that examines internet measurement data can request internet measurements from the system  via the API  by, for example, using a call provided in the API . Thus, in one example of the API , a set of application programming interfaces can be stored on a computer-readable medium. The interfaces  can be employed by a programmer, computer component, logic, and so on, to gain access to a system  for performing internet measurements. System  may be, for example, implemented in the form of a control server. One example control server is used in conjunction with the DipZoom platform for performing internet measurements. In another example, system  can be a distributed system (e.g., a peer-to-peer network of measurement points.","The interfaces  include a getMPlist request interface . GetMPlist request interface  may provide a getMPlist request to a control server. The getMPlist request may request a list of measurement points from the control server. The getMPlist request may identify a set of desired characteristics of the measurement points. The interfaces  also include a getMPlist receipt interface . GetMPlist receipt interface  may receive a getMPlist response from the control server. The getMPlist response may contain a set of information concerning a set of measurement points. Information regarding the measurement points may include, a geographic location, an identification number, an operating system, a measurement type, a bandwidth a number of measurements that a given measurement point is willing to perform in a single request, and so forth.","The interfaces  also include a SendRequest request interface . SendRequest request interface  may provide a SendRequest request to the control server. A SendRequest request may request one or more internet measurements from one or more measurement points. The interfaces  also include a SendRequest receipt interface . SendRequest receipt interface  may receive a SendRequest response from the control server. The SendRequest response may include a list of ticket IDs. A ticket ID may correspond to one or more internet measurements.","The interfaces  also include a Getticketstatus request interface . Getticketstatus request interface  may provide a Getticketstatus request to the control server. A Getticketstatus request may request the status of one or more internet measurements. The interfaces  also include a Getticketstatus receipt interface . Getticketstatus receipt interface  may receive a Getticketstatus response from the control server. A Getticketstatus response may include a ticket ID and a status of one or more internet measurements.","The interfaces  also include a Sendpayment request interface . Sendpayment request interface  may provide a Sendpayment request to the control server. A Sendpayment request may include a list of ticket IDs. The interfaces  also include a Sendpayment receipt interface . Sendpayment receipt interface  may receive a Sendpayment response from the control server. A Sendpayment response may include a result of one or more Internet Measurements. The result to be included may be based, at least in part, on a list of ticket IDs from an associated Sendpayment request.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 7","b":["700","702","704","710","708","700","730","730","730","708","730","702"]},"Thus, logic  may provide means (e.g., hardware, software, firmware) for requesting an action be taken by a control server. The action may be associated with a distributed internet measurement client. Logic  may also provide means (e.g., hardware, software firmware) for receiving a response based on the action from the control server. The means associated with logic  may be implemented, for example, as an ASIC. The means may also be implemented as computer executable instructions that are presented to computer  as data  that are temporarily stored in memory  and then executed by processor .","Generally describing an example configuration of the computer , the processor  may be a variety of various processors including dual microprocessor and other multi-processor architectures. A memory  may include volatile memory and\/or non-volatile memory. Non-volatile memory may include, for example, ROM, PROM, and so on. Volatile memory may include, for example, RAM, SRAM, DRAM, and so on.","A disk  may be operably connected to the computer  via, for example, an input\/output interface (e.g., card, device)  and an input\/output port . The disk  may be, for example, a magnetic disk drive, a solid state disk drive, a floppy disk drive, a tape drive, a Zip drive, a flash memory card, a memory stick, and so on. Furthermore, the disk  may be a CD-ROM drive, a CD-R drive, a CD-RW drive, a DVD ROM drive, a Blu-Ray drive, an HD-DVD drive, and so on. The memory  can store a process  and\/or a data , for example. The disk  and\/or the memory  can store an operating system that controls and allocates resources of the computer .","The bus  may be a single internal bus interconnect architecture and\/or other bus or mesh architectures. While a single bus is illustrated, it is to be appreciated that the computer  may communicate with various devices, logics, and peripherals using other busses (e.g., PCIE, , USB, Ethernet). The bus  can be types including, for example, a memory bus, a memory controller, a peripheral bus, an external bus, a crossbar switch, and\/or a local bus.","The computer  may interact with input\/output devices via the i\/o interfaces  and the input\/output ports . Input\/output devices may be, for example, a keyboard, a microphone, a pointing and selection device, cameras, video cards, displays, the disk , the network devices , and so on. The input\/output ports  may include, for example, serial ports, parallel ports, and USB ports.","The computer  can operate in a network environment and thus may be connected to the network devices  via the i\/o interfaces , and\/or the i\/o ports . Through the network devices , the computer  may interact with a network. Through the network, the computer  may be logically connected to remote computers. Networks with which the computer  may interact include, but are not limited to, a LAN, a WAN, and other networks.","While example systems, methods, and so on have been illustrated by describing examples, and while the examples have been described in considerable detail, it is not the intention of the applicants to restrict or in any way limit the scope of the appended claims to such detail. It is, of course, not possible to describe every conceivable combination of components or methodologies for purposes of describing the systems, methods, and so on described herein. Therefore, the invention is not limited to the specific details, the representative apparatus, and illustrative examples shown and described. Thus, this application is intended to embrace alterations, modifications, and variations that fall within the scope of the appended claims.","To the extent that the term \u201cincludes\u201d or \u201cincluding\u201d is employed in the detailed description or the claims, it is intended to be inclusive in a manner similar to the term \u201ccomprising\u201d as that term is interpreted when employed as a transitional word in a claim.","To the extent that the term \u201cor\u201d is employed in the detailed description or claims (e.g., A or B) it is intended to mean \u201cA or B or both\u201d. When the applicants intend to indicate \u201conly A or B but not both\u201d then the term \u201conly A or B but not both\u201d will be employed. Thus, use of the term \u201cor\u201d herein is the inclusive, and not the exclusive use. See, Bryan A. Garner, A Dictionary of Modern Legal Usage 624 (2d. Ed. 1995).","To the extent that the phrase \u201cone or more of, A, B, and C\u201d is employed herein, (e.g., a data store configured to store one or more of, A, B, and C) it is intended to convey the set of possibilities A, B, C, AB, AC, BC, and\/or ABC (e.g., the data store may store only A, only B, only C, A&B, A&C, B&C, and\/or A&B&C). It is not intended to require one of A, one of B, and one of C. When the applicants intend to indicate \u201cat least one of A, at least one of B, and at least one of C\u201d, then the phrasing \u201cat least one of A, at least one of B, and at least one of C\u201d will be employed."],"GOVINT":[{},{}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute a part of the specification, illustrate various example systems, methods, and other example embodiments of various aspects of the invention. It will be appreciated that the illustrated element boundaries (e.g., boxes, groups of boxes, or other shapes) in the figures represent one example of the boundaries. One of ordinary skill in the art will appreciate that in some examples one element may be designed as multiple elements or that multiple elements may be designed as one element. In some examples, an element shown as an internal component of another element may be implemented as an external component and vice versa. Furthermore, elements may not be drawn to scale.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
