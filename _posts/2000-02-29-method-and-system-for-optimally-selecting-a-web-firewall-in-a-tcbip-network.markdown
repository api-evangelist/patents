---
title: Method and system for optimally selecting a web firewall in a TCB/IP network
abstract: The present invention relies on dynamic autoproxy configuration and more particularly to a method and system for selecting a Proxy/Socks Server according to some response time and availability criteria. It rests on a dynamic autoproxy mechanism using availability and response time probes. It relies on probes retrieving well known HTML pages through each Proxy/Socks Server, measuring associated response time, detecting Proxy/Socks failures and degradation of response time. It also uses a CGI (Common Gateway Interface) program for dynamically creating autoproxy code (in a preferred embodiment Javascript code) on an autoproxy URL (Universal resource locator) system for selecting said Proxy/Socks Server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06892235&OS=06892235&RS=06892235
owner: International Business Machines Corporation
number: 06892235
owner_city: Armonk
owner_country: US
publication_date: 20000229
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD OF THE INVENTION","BACKGROUND ART","OBJECTS OF THE INVENTION","SUMMARY OF THE INVENTION","PREFERRED EMBODIMENT OF THE INVENTION"],"p":["The present invention relates to computer networks, and more particularly to a method and system in a TCP\/IP network for optimally selecting a Web Firewall according to some response time and availability criteria.","Internet","The Internet is a global network of computers and computers networks (the \u201cNet\u201d). The Internet connects computers that use a variety of different operating systems or languages, including UNIX, DOS, Windows, Macintosh, and others. To facilitate and allow the communication among these various systems and languages, the Internet uses a protocol referred to as TCP\/IP (\u201cTransmission Control Protocol\/Internet Protocol\u201d). TCP\/IP protocol supports three basic applications on the Internet:\n\n","With the increasing size and complexity of the Internet, tools have been developed to help find information on the network, often called navigators or navigation systems. Navigation systems that have been developed include standards such as Archie, Gopher and WAIS. The World Wide Web (\u201cWWW\u201d or \u201cthe Web\u201d) is a recent superior navigation system. The Web is:\n\n","The Web uses hypertext and hypermedia. Hypertext is a subset of hypermedia and refers to computer-based \u201cdocuments\u201d in which readers move from one place to another in a document, or to another document, in a non-linear manner. To do this, the Web uses a client-server architecture. The Web servers enable the user to access hypertext and hypermedia information through the Web and the user's computer. (The user's computer is referred to as a client computer of the Web Server computers.) The clients send requests to the Web Servers, which react, search and respond. The Web allows client application software to request and receive hypermedia documents (including formatted text, audio, video and graphics) with hypertext link capabilities to other hypermedia documents, from a Web file server.","The Web, then, can be viewed as a collection of document files residing on Web host computers that are interconnected by hyperlinks using networking protocols, forming a virtual \u201cweb\u201d that spans the Internet.","Uniform Resource Locators","A resource of the Internet is unambiguously identified by a Uniform Resource Locator (URL), which is a pointer to a particular resource at a particular location. A URL specifies the protocol used to access a server (e.g. HTTP, FTP, . . . ), the name of the server, and the location of a file on that server.","Hyper Text Transfer Protocol","Each Web page that appears on client monitors of the Web may appear as a complex document that integrates, for example, text, images, sounds and animation. Each such page may also contain hyperlinks to other Web documents so that a user at a client computer using a mouse may click on icons and may activate hyperlink jumps to a new page (which is a graphical representation of another document file) on the same or a different Web server.","A Web server is a software program on a Web host computer that answers requests from Web clients, typically over the Internet. All Web servers use a language or protocol to communicate with Web clients which is called Hyper Text Transfer Protocol (\u201cHTTP\u201d). All types of data can be exchanged among Web servers and clients using this protocol, including Hyper Text Markup Language (\u201cHTML\u201d), graphics, sound and video. HTML describes the layout, contents and hyperlinks of the documents and pages. Web clients when browsing:\n\n","After the document or an error message is returned, the connection between the Web client and the Web server is closed.","The first version of HTTP is a stateless protocol. That is with HTTP, there is no continuous connection between each client and each server. The Web client using HTTP receives a response as HTML data or other data. This description applies to version 1.0 of HTTP protocol, while the newer versions 1.1 breaks this barrier of stateless protocol by keeping the connection between the server and client alive under certain conditions.","Browser","After receipt, the Web client formats and presents the data or activates an ancillary application such as sound player to present the data. To do this, the server or the client determines the various types of data received. The Web Client is also referred to as the Web Browser, since it in fact browses documents retrieved from the Web Server.","Domain Names","The host or computers names (like www.entreprise.com) are translated into numeric Internet addresses (like 194.56.78.3), and vice versa, by using a method called DNS (\u201cDomain Name Service\u201d). DNS is supported by network-resident servers, also known as domain name servers or DNS servers.","Intranet","Some companies use the same mechanism as the Web to communicate inside their own corporation. In this case, this mechanism is called an \u201cIntranet\u201d. These companies use the same networking\/transport protocols and locally based Web servers to provide access to vast amount of corporate information in a cohesive fashion. As this data may be private to the corporation, and because the members of the company still need to have access to public Web information, to avoid that people not belonging to the company can access to this private Intranet coming from the public Internet, they protect the access to their network by using a special equipment called a Firewall.","Firewall","A Firewall protects one or more computers with Internet connections from access by external computers connected to the Internet. A Firewall is a network configuration, usually created by hardware and software, that forms a boundary between networked computers within the Firewall from those outside the Firewall. The computers within the Firewall form a secure sub-network with internal access capabilities and shared resources not available from the outside computers.","Often, a single machine, on which the Firewall is, allows access to both internal and external computers. Since the computer, on which the Firewall is, directly interacts with the Internet, strict security measures against unwanted access from external computers are required.","A Firewall is commonly used to protect information such as electronic mail and data files within a physical building or organization site. A Firewall reduces the risk of intrusion by unauthorized people from the Internet, however, the same security measures can limit or require special software for those inside the Firewall who wish to access information on the outside. A Firewall can be configured using \u201cProxies\u201d or \u201cSocks\u201d to designate access to information from each side of the Firewall.","Proxy Server","A HTTP Proxy is a special server that typically runs in conjunction with Firewall software and allows an access to the Internet from within a Firewall. The Proxy Server:\n\n","A single computer can run multiple servers, each server connection identified with a port number. A Proxy Server, like an HTTP Server or a FTP Server, occupies a port. Typically, a connection uses standardized port numbers for each protocol (for example, HTTP=80 and FTP=21). That is why an end user has to select a specific port number for each defined Proxy Server. Web Browsers usually let the end user set the host name and port number of the Proxy Servers in a customizable panel. Protocols such as HTTP, FTP, Gopher, WAIS, and Security can usually have designated Proxies. Proxies are generally preferred over Socks for their ability to perform caching, high-level logging, and access control, because they provide a specific connection for each network service protocol.","Socks","A Socks Server (also called a Socks Gateway) is also software that allows computers inside a Firewall to gain access to the Internet. Socks is usually installed on a server positioned either inside or on the Firewall. Computers within the Firewall access the Socks Server as clients to reach the Internet. Web Browsers usually let the end user set the host name and port number of the Socks hosts (servers) in a customizable panel. On some Operating Systems, the host is specified in a separate file (e.g. socks.conf file). As the Socks Server acts as a layer underneath the protocols (HTTP, FTP, . . . ), it cannot cache data (as a Proxy does), because it doesn't decode the protocol to know what kind of data, it is transferring.","Options","The Web Browser often proposes that the end user select between the different options of \u201cNo Proxies\u201d, \u201cManual Proxy Configuration\u201d, or \u201cAutomatic Proxy Configuration\u201d to designate the conduit between his computer and the Internet.\n\n","Today, most of the Web Browsers are configured to forward all requests, even requests for internal hosts, through the Socks Firewall. So when the end user wants to have access to an internal Web-based application, his request travels to the Firewall, and is then reflected back into the internal network. This sends internal traffic on a long path, puts extra load on the Firewall and on the network, and worst of all, slows down the response time the end user sees from the applications and Web pages he is trying to access. This is called \u201cnon flexible\u201d Socks access (when everything goes via the Socks Server).","Manual Proxy Configuration","The Manual Proxy configuration in the Web Browser is simple to process, but its main drawback is that the Firewall (or Proxy) selection is then static. There is no dynamic criterion for the Firewall selection, such as selection of the Firewall providing the best response time. Firewall failures require a manual reconfiguration of the navigation software to point to another active Firewall, since the manual configuration usually only allows the definition of one single Firewall per protocol with no possibility to pre-configure a backup Firewall. In addition to the manual proxy configuration in the Web Browser, external procedures can be used to provide some kind of robustness in the Firewall selection. They rely for instance on the use of multiple Firewalls having the same name defined as aliases in the Domain Name Server (DNS). But this technique based on alias definition still has drawbacks since for instance the DNS is not always contacted for name resolution by Web Clients caching locally the name resolution. Other techniques using external hardware equipment such as load and request dispatcher provide more robustness and load balancing, but still have drawbacks such as the need for additional and costly hardware.","Automatic Proxy Configuration","Automatic Proxy Configuration (or also referred to as \u201cautoproxy\u201d) can set the location of the HTTP, FTP, and Gopher Proxy every time the Web Browser is started. An autoproxy retrieves a file of address ranges and instructs the Web Browser to either directly access internal IBM hosts or to go to the Socks Server to access hosts on the Internet.","Automatic Proxy Configuration is more desirable than simple Proxy Server Configuration in the Web Browser, because much more sophisticated rules can be implemented about the way Web pages are retrieved (directly or indirectly). Automatic Proxy Configuration is useful to users, because the Web Browser knows how to retrieve pages directly if the Proxy Server fails. Also Proxy requests can be directed to another or multiple Proxy Servers at the discretion of the system administrator, without the end user having to make any additional changes to his Web Browser configuration. In general, these Proxy configuration files (also called autoproxy code) are usually written in the Javascript language. Autoproxy facility can also contain a file of address ranges for instructing the Web Browser to either directly access internal hosts or to go to the Socks Server to access hosts on the Internet. The Socks Server protects the internal network from unwanted public access while permitting access of network members to the Internet. One of the drawbacks of this \u201cautoproxy\u201d mechanism is that there is no proactive Firewall failure detection nor response time consideration.","More explanations about the domain presented in the above sections can be found in the following publications:\n\n","The problem to solve is to provide an optimized Web access, with a dynamic Proxy or Socks Server selection to get the best response time, and a detection of failures in Proxy or Socks Server to prevent Web service disruption. The current solutions address this problem partially:\n\n","An alternate to these current solutions is to cluster the Proxy\/Socks Servers using an external dispatcher system acting as single logical access point. All Web Browsers are then manually configured with the name of that external dispatcher system (as the target Proxy\/Socks Server) which then routes the traffic to a selected Proxy\/Socks Server. An example of such a dispatcher is for example the IBM Interactive Network Dispatcher product. More information concerning this product can be found in IBM's publication entitled \u201cInteractive Network Dispatcher V1.2-User's Guide\u201d GC31-8496-01. Although a dispatcher oriented solution allows an efficient load balancing in most cases, its main drawback is that additional dedicated system or specific hardware is required, and that the external dispatcher name has to be manually configured by the end users in their Web Browsers.",{"@attributes":{"id":"p-0028","num":"0000"},"ul":{"@attributes":{"id":"ul0017","list-style":"none"},"li":{"@attributes":{"id":"ul0017-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0018","list-style":"none"},"li":["The object of the present invention is to optimize Proxy\/Socks Server selection by using availability and response time criteria.","It is a further object of the present invention to optimize the Web service performance by integrating a response time factor to the Proxy\/Socks Server selection.","It is another object of the present invention to minimize Web service interruption and thus to insure a better service availability by automatically detecting Proxy\/Socks Server failures."]}}}},"The present invention relates to dynamic autoproxy configuration and more particularly to a method and system for optimizing selection of a Proxy\/Socks Server according to some response time and availability criteria. The invention rests on a dynamic autoproxy mechanism using availability and response time probes.","The present invention also relies on probes retrieving well known HTML pages through each Proxy\/Socks Server, measuring associated response time, detecting Proxy\/Socks failures and degradation of response time.","The present invention also uses a CGI (Common Gateway Interface) program for dynamically creating autoproxy code (in a preferred embodiment Javascript code) on an autoproxy URL (Universal Resource Locator) system for selecting the Proxy\/Socks Server using availability and response time information provided by probes.","The present invention fixes the drawbacks of the existing current solutions by integrating dynamic Proxy\/Socks availability and response time selection criteria to the autoproxy mechanism.","The present inventions provides the following advantages:\n\n","The present invention relies on dynamic autoproxy configuration and more particularly to a method and system for selecting a Proxy\/Socks Server according to some response time and availability criteria. It rests on a dynamic autoproxy mechanism using availability and response time probes. It relies on probes retrieving well known HTML pages through each Proxy\/Socks Server, measuring associated response time, detecting Proxy\/Socks failures and degradation of response time.","It also uses a CGI (Common Gateway Interface) program for dynamically creating autoproxy code (in a preferred embodiment Javascript code) on an autoproxy URL (Universal resource locator) system for selecting said Proxy\/Socks Server.","Logical View of a End User Accessing the World Wide Web",{"@attributes":{"id":"p-0044","num":"0080"},"figref":"FIG. 1","b":["102","101","101","103","104","101","103","101","104","103","104","101"]},"General Physical View of an End User Accessing the WWW",{"@attributes":{"id":"p-0045","num":"0081"},"figref":"FIG. 2","b":["1","201","202","203","202","204","205"]},"Logical View of Availability and Response Time Probes","The domain of the invention is the one described in FIG.  and , where a user within an Intranet wants to access the World-Wide-Web using a Web Browser, and where the Intranet network is protected from the Internet by several Firewalls playing role of so called HTTP Proxies (FIG. ). The issue is to select the \u201cbest\u201d Proxy\/Socks Server to insure an optimized availability and response time of the service to the end user. To automatically optimize this selection, a software component called a \u201cWWW availability and response time probe\u201d is introduced. Its role is to provide selection criteria. As shown in , this data is gathered by measuring the response time for requesting a specific content of a well known Web Server. The induced HTTP survey traffic is minimized, by running the availability and response time probes from single autoproxy URL system (versus running the probes on each Web Browser client system).",{"@attributes":{"id":"p-0047","num":"0083"},"figref":["FIG. 3","FIG. 3"],"b":["304","302","307","304","1","303","306","305","301"]},"The lower portion of the  shows a similar arrangement but in this case the measurements data is being gathered for a Socks Server (Gateway) access method. Again a client probe () makes an HTTP request that represents an \u201cHTTP survey flow\u201d () which travels via the Socks Server () and then onto () the destination Web site (). This HTTP request is for a set target URL () that is known to exist on the target Web Server. Again it is the timing of how long this survey takes that provides the measurements data that can be used to generate an autoproxy URL that takes into account the relative performance of a set of Socks Server (or in the case above, HTTP Proxies).","Obviously if there is no response to the HTTP survey flow, then the particular Proxy or Socks Server being tested can be marked as unavailable. In this way the autoproxy URL can be used to not select Proxy or Socks Servers that do not work.","Internal Logic of the Availability and Response Time Probes","The internal mechanism of the probe itself is described in FIG. . The probe simulates a Web Client, by requesting through an HTTP connection a Web page from a target URL through the target Proxy\/Socks Server (using its host name and port as a reference). The Web page is retrieved either through a normal HTTP connection, or through a socksified flow (a flow through a Socks Server). Typically, normal flow is used to retrieve a Web page from a Proxy Server or from a Web Server, while socksified flow is used to retrieve a Web page through a Socks Server. Then, the probe basically checks that the Web page:\n\n","Finally, the probe returns either the associated response time in seconds (successful retrieval) or a failure return code. This mechanism retrieves one or multiple target Web pages. When multiple Web pages are retrieved, the probe program sequentially tests each Web page until one Web page retrieval is successful or all Web page retrievals fail. Probes:\n\n",{"@attributes":{"id":"p-0052","num":"0093"},"figref":"FIG. 4","b":"3","ul":{"@attributes":{"id":"ul0025","list-style":"none"},"li":{"@attributes":{"id":"ul0025-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0026","list-style":"none"},"li":["The first thing the probe program does is to start a timer ().","Next the probe program attempts to establish a connection () with the target Web Server to retrieve a Web page at the target URL (Universal Resource locator). The probe program establishes the connection according to the way it has been configured e.g. via an HTTP Proxy Server, via a Socks Server (Gateway) or directly.","If the attempt for establishing the connection is unsuccessful, the probe program immediately goes into error mode (). An error value is returned () by the probe program indicating that the connection is not possible.","If the attempt for establishing the connection is successful, then the Web page () is retrieved by the probe program.","The probe program then closes the connection () pursuant to the normal HTTP protocol procedure.","To ensure that the Web page has been correctly retrieved, the probe program then searches for known keywords () that are expected to be in the Web page.","If the keyword is found () in the Web page, then the Web page retrieval is successful. The timer is stopped and the correct response time for the operation is returned. By storing and integrating a short historic of the measured response time over time, the probe program can detect and return any response time degradation, thus enabling an anticipation of the Proxy\/Socks Servers failures.","If however the correct keyword is not found () in the Web page, then the Web retrieval is unsuccessful and again an error value is returned. The type of event that might trigger this sort of error is when the connection is successfully established but a Web page with an error is retrieved.","The action whereby the probe goes into retry mode () occurs only when the probe is configured to try multiple destination URL's as opposed to a single URL. This adds some robustness to the testing of the probe and hence insulates it somewhat from one-off network \u201cglitches\u201d (e.g. dropped connections etc.).\n\nPhysical View of Availability and Response Time Probes External Flows\n"]}}}},"The probes are used by various components and in various flows () in order to provide the Web Browser with the best Proxy\/Socks Server. The data gathered by the probes are indirectly downloaded to the Web Browser by using an autoproxy mechanism. The present invention allows a software implementation with no additional or specific hardware.","The output from the probe is stored on the autoproxy URL system as shown in FIG.  and used to create the autoproxy code (Javascript code in a preferred embodiment). There is no extra process inside the code. Web Browser performance is not degraded because availability and response time probes are not processed within the downloaded autoproxy code (Javascript code) but in the autoproxy URL system.","A CGI (Common Gateway Interface) program dynamically creates the autoproxy code as shown in  with the availability and response time information provided by probes. The use of response time and availability criteria for selecting a Proxy\/Socks Server by the probes is fully compatible, and can be combined, with existing criteria such as client's origin IP subnet.","The use of response time and availability criteria also provides a proactive Proxy\/Socks Servers failure detection through the integration of response time degradation. The Web Browser can be periodically and dynamically updated with a new selection of the \u201cbest\u201d Proxy\/Socks Server using:\n\n","Another positive consequence is the minimization of the useless traffic to failing Proxy\/Socks Server since Proxy\/Socks Servers are excluded from list of available target servers upon failure detection. Since an autoproxy mechanism is used, there is no need for manually updating the manual proxy configuration in the Web Browser in case of Proxy\/Socks Server failure. Proxy\/Socks Servers names or locations don't need to be known and configured by the end user, thus providing for instance a seamless service for mobile users.",{"@attributes":{"id":"p-0058","num":"0111"},"figref":"FIG. 5","b":["3","501","502","503","504","505","506","507","508"],"ul":{"@attributes":{"id":"ul0029","list-style":"none"},"li":{"@attributes":{"id":"ul0029-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0030","list-style":"none"},"li":["an available Proxy\/Socks Server, and","what is deemed the best Proxy\/Socks Server.\n\nData Flows of Availability and Response Time Probes\n"]}}}},{"@attributes":{"id":"p-0059","num":"0114"},"figref":"FIG. 6","b":["5","601","602","603","604","605","609","606"],"ul":{"@attributes":{"id":"ul0031","list-style":"none"},"li":{"@attributes":{"id":"ul0031-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0032","list-style":"none"},"li":["the \u201crefresh\u201d tag in the autoproxy code,","an external code (or Java applet), or","a Web Browser new feature for periodically and automatically refreshing the autoproxy code."]}}}},"The system where the autoproxy URL resides and which runs the availability and response time probes (), uses the CGI (Common Gateway Interface) () to dynamically generate the autoproxy code () of the autoproxy URL. The autoproxy code is based on the information gathered by the availability and response time probes that have tested the Proxy\/Socks Servers via the HTTP survey flows ( and ) described in FIG. . In this way the Web Browser ends up with what is deemed the best Proxy\/Socks Server.","Internal Storage of Availability and Response Time Probes",{"@attributes":{"id":"p-0061","num":"0119"},"figref":"FIG. 7","b":["701","702","703","704"]},"Program Running at Autoproxy URL System",{"@attributes":{"id":"p-0062","num":"0120"},"figref":"FIG. 8","ul":{"@attributes":{"id":"ul0033","list-style":"none"},"li":{"@attributes":{"id":"ul0033-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0034","list-style":"none"},"li":["The autoproxy URL system is initially contacted by a Web Browser () wanting to \u201cknow\u201d which is the best Proxy\/Socks Server (or Firewall) to use. This is for instance achieved by selecting the Automatic Proxy Configuration option in the Web Browser and by providing information such as the URL of the autoproxy code.","The autoproxy URL system activates () the CGI (Common Gateway Interface) program (via the Web Server CGI extensions). The CGI program has access to all standard CGI variables including the IP (Internet Protocol) address of the Web Browser.","The CGI program selects () the best Proxy\/Socks Server for the client system (Web Browser) based on both the IP address of the Web Browser (obtained as a CGI variable) and the information generated by the availability and response time probes for each Proxy\/Socks Server and stored in the table of the autoproxy URL system (). The IP address is used to add a geographical criteria to the Proxy\/Socks Server selection. For instance, if two Proxy\/Socks Servers provide the same response time (one in the US, the other one in Europe), the closest Proxy\/Socks Server is preferred (the one in Europe if the Web Browser is in Europe).","To improve the robustness of the Proxy\/Socks Server selection, the CGI program selects a best \u201cbackup\u201d Proxy\/Socks Server for the Web Browser (). This \u201cbackup\u201d Proxy\/Socks Server is automatically used by the Web Browser after it times out attempting to use what it thinks is the \u201cbest\u201d Proxy\/Socks Server. Again this \u201cbackup\u201d Proxy\/Socks Server is selected using both the IP address of the Web Browser (obtained as a CGI variable) and the information generated by the availability and response time probes for each Proxy\/Socks Server and stored in the table of the autoproxy URL system ().","Once the CGI program has selected the best and backup Proxy\/Socks Servers, it created the autoproxy code (). This code is generally made of Javascript language.","Once the autoproxy code has been created, the autoproxy URL system downloads it to the Web Browser () via standard HTTP protocol as any other output of a CGI program.\n\nWhile the invention has been particularly shown and described with reference to a preferred embodiment, it will be understood that various changes in form and detail may be made therein without departing from the spirit, and scope of the invention.\n"]}}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DRAWINGS","p":["The novel and inventive features believed characteristics of the invention are set forth in the appended claims. The invention itself, however, as well as a preferred mode of use, further objects and advantages thereof, will best be understood by reference to the following detailed description of an illustrative detailed embodiment when read in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0035","num":"0071"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0036","num":"0072"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0037","num":"0073"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0038","num":"0074"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0039","num":"0075"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0040","num":"0076"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0041","num":"0077"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0042","num":"0078"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
