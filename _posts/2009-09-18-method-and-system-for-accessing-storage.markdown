---
title: Method and system for accessing storage
abstract: Method and system is provided for accessing storage. A first logical data structure is created without receiving a client request from a computing system. A first identifier for identifying the first logical data structure is assigned to the first logical data structure. Upon receiving a client request, a second logical data structure associated with a storage device is generated and the first identifier is assigned to the second logical data structure. The second logical data structure identified by the first identifier is then used by the computing system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08255659&OS=08255659&RS=08255659
owner: Netapp, Inc.
number: 08255659
owner_city: Sunnnyvale
owner_country: US
publication_date: 20090918
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Definitions"],"p":["1. Technical Field","The present disclosure relates to storage systems.","2. Related Art","Various forms of storage systems are used today. These forms include network attached storage (NAS) systems, storage area networks (SANs), and others. Network storage systems are commonly used for a variety of purposes, such as providing multiple users with access to shared data, backing up data (e.g., by data mirroring) and others.","A network storage system typically includes at least one computing system (may also be referred to as a \u201cserver\u201d), which is a processing system configured to store and retrieve data on behalf of one or more client processing systems (\u201cclients\u201d). In the context of NAS, a storage server operates on behalf of one or more clients to store and manage shared files in a set of mass storage devices, such as magnetic or optical disks or tapes.","In a SAN context, the storage server provides clients with block-level access to stored data. Some storage systems may be capable of providing clients with both file-level access and block-level access.","Computing systems typically use LUNs (logical unit numbers) to access storage devices. The LUNs are typically created in response to a request from a computing system system. Typically, a storage system managing storage space creates the LUN and assigns it to the computing system. Before the computing system can use the LUN, it has to be discovered via a discovery process.","The discovery process for accessing the LUN is often defined by a standard or protocol, for example, Fibre Channel and other storage and network protocols. Typically, during discovery, a client computing system sends out a discovery packet\/request seeking access to LUNs. The storage system or a management application responds to the request and presents the LUN to the computing system. Therefore, the discovery process may consume processor resources and computing time. Continuous efforts are being made to efficiently assign LUNs and improve the overall discovery process.","In one embodiment, a method and system for accessing storage is provided. A first logical data structure is created without receiving a client request from a computing system. A first identifier for identifying the first logical data structure is assigned to the first logical data structure. Upon receiving a client request, a second logical data structure associated with a storage device is generated and the first identifier is assigned to the second logical data structure. The second logical data structure identified by the first identifier is then used by the computing system.","In another embodiment, a machine implemented method is provided. A first logical data structure is generated without receiving a client request and is assigned a first identifier. Upon receiving a client request, a second logical data structure associated with a storage device is generated. The second logical data structure identifier is replaced by the first identifier. The second logical data structure having the first identifier is then used by the client.","In yet another embodiment, a machine implemented method is provided. A client request for accessing a logical data structure associated with a storage device is received. The process retrieves a first identifier for a logical data structure created before the client request is received. The logical data structure in response to the client request is then generated and the first identifier is used to identify the generated logical data structure.","In another embodiment, a machine implemented method is provided. The process includes: (a) creating a first logical data structure without receiving a client request; (b) assigning a first identifier (ID) to the first logical data structure; (c) discovering the first logical data structure having the first logical data structure ID; (d) upon receiving a client request, creating a second logical data structure associated with a storage device and assigning a second logical data structure ID to the second logical data structure; (e) swapping the second logical data structure ID with the first logical data structure ID; and (f) using the second logical data structure without having to discover the second logical data structure ID.","In yet another embodiment, a machine readable storage medium storing executable instructions, which when executed by a machine, causes the machine to perform a method for accessing storage. The method includes: (a) creating a first logical data structure without receiving a client request; (b) assigning a first identifier (ID) to the first logical data structure; (c) discovering the first logical data structure having the first logical data structure ID; (d) upon receiving a client request, creating a second logical data structure associated with a storage device and assigning a second logical data structure ID to the second logical data structure; (e) swapping the second logical data structure ID with the first logical data structure ID; and (f) using the second logical data structure without having to discover the second logical data structure ID.","In another embodiment a computer program product is provided. The product includes a computer usable storage medium having computer readable instructions embodied therein for accessing storage. The storage medium includes: (a) instructions for creating a first logical data structure without receiving a client request; (b) instructions for assigning a first identifier (ID) to the first logical data structure; (c) instructions for discovering the first logical data structure having the first logical data structure ID; (d) instructions for creating a second logical data structure associated with a storage device upon receiving a client request, and instructions for assigning a second logical data structure ID to the second logical data structure; (e) instructions for swapping the second logical data structure ID with the first logical data structure ID; and (f) instructions for using the second logical data structure without having to discover the second logical data structure ID.","In yet another embodiment, a machine implemented method for accessing a logical unit number (LUN) is provided. The method creates a first LUN without receiving a client request. The first LUN with a first LUN ID is discovered by a computing system. Upon receiving a client request, a second LUN having a second LUN identifier (second LUN ID) is created. The second LUN ID is then swapped with the first LUN ID; and the second LUN is then used by the computing system without having to discover the second LUN ID.","In one embodiment, resources are used efficiently because when the computing system wants to create and use a LUN, it does not have to go through a discovery process because an already discovered LUN ID is used for the second LUN. The already discovered LUN is created without a client request by a storage system and a management application, when the storage system and management application are not busy with other tasks.","This brief summary has been provided so that the nature of this disclosure may be understood quickly. A more complete understanding of the disclosure can be obtained by reference to the following detailed description of the various embodiments thereof in connection with the attached drawings.","The following definitions are provided as they are typically (but not exclusively) used in the computing\/storage environment, implementing the various adaptive embodiments described herein.","\u201cCIFS\u201d means the Common Internet File System Protocol, an access protocol that client systems use to request file access services from storage systems over a network.","\u201cData Container\u201d means a logical unit of data and may include a block, a volume, a file, a LUN or any other data structure.","\u201cFC\u201d means Fibre Channel, a high-speed network technology primarily used for storage networking. Fibre Channel Protocol (FCP) is a transport protocol (similar to Transmission Control Protocol (TCP) used in Internet Protocol (\u201cIP\u201d) networks) which predominantly transports SCSI commands over FC networks.","\u201cLUN\u201d means a logical unit number. A LUN represents an addressable logical device that is a part of a physical device, for example, part of a storage sub-system. Typically, a LUN is identified by a unique identifier that may be referred to as LUN ID. A LUN may be any logical data structure that is associated with a storage device and before it can be accessed by a computing system it is discovered by a computing system.","\u201ciSCSI\u201d means the Internet Small Computer System Interface, an IP based storage networking standard for linking data storage facilities. The standard allows carrying SCSI commands over IP networks. iSCSI may be used to transmit data over local area networks (LANs), wide area networks (WANs), or the Internet, and can enable location-independent data storage and retrieval.","\u201cNFS\u201d means Network File System, a protocol that allows a user to access storage over a network.","\u201cProvisioning\u201d means setting aside and configuring a storage resource for a particular purpose.","\u201cResource pool\u201d is a collection of one or more storage servers and one or more aggregates, and its configuration is typically determined by a network storage administrator. An \u201caggregate\u201d is a logical aggregation of physical storage, i.e., a logical container for a pool of storage, combining one or more physical mass storage devices (e.g., disks) or parts thereof into a single logical storage object, which contains or provides storage for one or more other logical data sets at a higher level of abstraction (e.g., volumes).","\u201cVolume\u201d means a logical data set which is an abstraction of physical storage, combining one or more physical mass storage devices (e.g., disks) or parts thereof into a single logical storage object, and which is managed as a single administrative unit, such as a single file system. A volume is typically defined from a larger group of available storage, such as an aggregate.","As used in this disclosure, the terms \u201ccomponent\u201d \u201cmodule\u201d, \u201csystem,\u201d and the like are intended to refer to a computer-related entity, either software-executing general purpose processor, hardware, firmware and a combination thereof. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer.","By way of illustration, both an application running on a server and the server can be a component. One or more components may reside within a process and\/or thread of execution, and a component may be localized on one computer and\/or distributed between two or more computers. Also, these components can execute from various computer readable media having various data structures stored thereon.","The components may communicate via local and\/or remote processes such as in accordance with a signal having one or more data packets (e.g., data from one component interacting with another component in a local system, distributed system, and\/or across a network such as the Internet with other systems via the signal). Computer executable components can be stored, for example, on computer readable media including, but not limited to, an ASIC (application specific integrated circuit), CD (compact disc), DVD (digital video disk), ROM (read only memory), floppy disk, hard disk, EEPROM (electrically erasable programmable read only memory), memory stick or any other storage device, in accordance with the claimed subject matter.","In one embodiment, a method and system for accessing storage is provided. A first logical data structure is created without receiving a client request from a computing system. A first identifier for identifying the first logical data structure is assigned to the first logical data structure. Upon receiving a client request, a second logical data structure associated with a storage device is generated and the first identifier is assigned to the second logical data structure. The second logical data structure identified by the first identifier is then used by the computing system.","In another embodiment, a machine implemented method is provided. A client request for accessing a logical data structure associated with a storage device is received. The process retrieves a first identifier for a logical data structure created before the client request is received. The logical data structure in response to the client request is then generated and the first identifier is used to identify the generated logical data structure.","In one embodiment, a method and system is provided for accessing LUNs. A first LUN (also referred to as a dummy LUN with a first LUN identifier (ID) (may also be referred to as first LUN ID) without a client request from a client computing system. The dummy LUN is created by a storage system on behalf of a management application.","After the dummy LUN is created, the dummy LUN ID is discovered by a computing system. When the computing system wants to create and use a LUN, a second LUN with a second LUN ID is created by the storage system. The LUN ID for the second LUN is swapped with the already discovered dummy LUN ID. The computing system is able to use the second LUN without having to go through a discovery process.","In one embodiment, the dummy LUN is created when the storage system and the management application are not busy with other tasks. Resources are used efficiently because when the computing system wants to create and use a LUN, it does not have to go through a discovery process because an already discovered dummy LUN ID is used for the second LUN.","System:",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 1A","b":["10","20","18"]},"System  may include a plurality of storage systems , each coupled to a separate mass storage subsystem . A storage subsystem  may include multiple mass storage devices (e.g., disks). The mass storage devices in each storage subsystem  may be, for example, conventional magnetic disks, optical disks such as CD-ROM or DVD based storage, magneto-optical (MO) storage, or any other type of non-volatile storage devices suitable for storing data. Each storage subsystem  is managed by a corresponding storage system . The storage devices in each storage subsystem  can be organized into one or more RAID groups, in which case the corresponding storage system  accesses the storage subsystem  using an appropriate RAID protocol.","Each storage system  may operate as a NAS based file server, a block-based storage server such as used in a storage area network (SAN), or a combination thereof, or a node in a clustered environment described below with respect to  or any other type of storage server. Note that certain storage systems from Network Appliance, Inc. (NetApp\u00ae) in Sunnyvale, Calif., are capable of providing clients with both file-level data access and block-level data access.","The storage systems  may be coupled through a network  to a number of clients . Each of the clients  may be, for example, a conventional personal computer (PC), workstation, or the like. The network  may be, for example, a local area network (LAN), a wide area network (WAN), or other type of network or a combination of networks.","Clients  may be general purpose computers having a plurality of components. These components may include a central processing unit (CPU), main memory, I\/O devices, and storage devices (for example, flash memory, hard drives and others). The main memory may be coupled to the CPU via a system bus or a local memory bus. The main memory may be used to provide the CPU access to data and\/or program information that is stored in main memory at execution time. Typically, the main memory is composed of random access memory (RAM) circuits. A computer system with the CPU and main memory is often referred to as a host system.","Each storage system  receives and responds to various read and write requests from clients , directed to data stored in or to be stored in a corresponding storage subsystem .","Also connected to the network  is a management console , in which a storage management application  may reside and execute. The management console  may be, for example, a conventional PC, workstation, or the like. The storage management application  may be a software application used by a storage network administrator to manage a pool of storage devices (may also be referred to as a \u201cresource pool\u201d). This application enables the administrator to perform various operations, such as monitoring and allocating storage space in the storage pool, creating and deleting volumes, directories and others. The application also allows a storage administrator to provision and configure storage space, as described below in detail.","Communication between the storage management application  and storage systems  may be accomplished using any of the various conventional communication protocols and\/or application programming interfaces (APIs), the details of which are not germane to the technique being introduced here. This communication can be done through the network  or it can be via a direct link (not shown) between the management console  and one or more of the storage systems .","One or more other storage-related software applications  may also be operatively coupled to the network , residing and executing in one or more other computer systems . Examples of such other applications include data backup software, Snapshot management software and others.","The management application  provisions storage space for a client . Management application  sends a request to the storage system  servicing the client to create a LUN. The LUN is created by the storage system  and then presented to the management application . The LUN may appear as a \u201cdrive\u201d to the client . This allows the client to read and write data to a particular LUN.  shows LUN  A and LUN B that may be presented to client  after a provisioning operation.","Client  performs a discovery process to discover the LUN, before it can access and use the LUN. The discovery process depends on a type of protocol that is used by client  to access the provisioned storage. For example, if client  uses FCP to access storage space, then a FC discovery process is used to identify the LUN. The discovery process is typically initiated by an adapter, for example, a host bus adapter (not shown).","One challenge that clients  face is that LUN discovery can be time consuming and may waste system resources. The embodiments described herein reduce the overhead associated with the LUN discovery process.","Storage Management Application:","The techniques being introduced here may be implemented in the storage management application , for example, by a provisioning manager , as described below in detail with respect to . In one embodiment, a client request for a LUN is received by the management application . The management application  retrieves a first identifier for a first LUN (for example, a dummy LUN) created before the client request is received. The LUN in response to the client request is then generated and the first identifier is used to identify the generated LUN.","In the illustrated embodiment of , the storage management application  includes a graphical user interface (GUI) module  to generate a GUI (e.g., for use by a storage administrator); a provisioning manager  for provisioning storage and creating LUNs, according to one embodiment; one or more other management modules  to perform various other storage management related functions; and a communication module . The storage management application  may also maintain policies , a list  of all volumes in a storage pool as well as a table  of all free space (on a per-disk basis) in a storage pool.","Provisioning manager  typically receives a provisioning request from a user. The request may specify storage space requirement. Based on the space requirement provisioning manager  scans a storage resource pool to select storage space.","Provisioning manager  communicates with a storage system  that manages the selected storage space. The communication module  may implement one or more conventional communication protocols and\/or APIs to enable the storage management application  to communicate with the storage systems .","Storage system  provides a LUN identifier (may also be referred to as LUN ID) for the provisioned storage space. The LUN attributes for example, size, partitioning, security settings, path and others are also set by the storage system. Storage system  provides the LUN ID and attributes to the management application .","As mentioned above, before a LUN can be used by client , the LUN has to be discovered, typically, by a complex discovery process. In one embodiment, a dummy LUN (or a dummy logical data structure) is first created with a dummy LUN ID. The dummy LUN may be created by management application  and storage system  without receiving a LUN creation request from client . In one embodiment, the dummy LUN is created when management application  and the storage system  are not busy with other tasks. This allows one to create the dummy LUN without wasting computing resources. After the dummy LUN is created, the dummy LUN ID is discovered by client .","When the client  wants to use an actual LUN, based on a client request, a second LUN (LUN) is created with a second LUN ID. However, the second LUN ID is not provided to client , but instead, the second LUN ID is swapped with the dummy LUN ID discovered by client  before LUN is presented to the client. Because the dummy LUN ID was already discovered, client  does not have to discover the second LUN because it uses the already discovered dummy LUN ID. This saves processing time and hence improves overall efficiency in accessing storage.","The various adaptive embodiments of the present disclosure and the functionality of the storage management application are now described below with respect to the process flow diagram of .","Process Flow:",{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 1C","FIG. 1A"],"b":["42","44","1","1","26","12"]},"In one embodiment, the dummy LUN may be created by the storage system  upon receiving a request from the management application . The dummy LUN is assigned a LUN ID (also referred to as dummy LUN ID or first LUN ID) by the storage system .","The dummy LUN is created at an instance when the storage system  and the management application  may not be busy. This allows one to create the dummy LUN without consuming excessive computing resources.","In block S, a client  discovers the dummy LUN with the dummy LUN ID. The discovery process and protocol may depend on the storage environment. For example, for FC devices, the FCP discovery process may be used to discover the dummy LUN.","In response to a client request, in block , a second LUN (LUN) is created by management application  and storage system . LUN is also assigned a LUN ID by the storage system (may be referred to as \u201csecond LUN ID\u201d or \u201cLUN\u201d).","In block S, the second LUN ID is swapped (exchanged or replaced) with the already discovered dummy LUN ID. In one embodiment, to swap the LUN ID, management application  may maintain a plurality of data structures (not shown) with information for each LUN. The data structures in this case may be a table, a relational database, an object or other similar structures. A first data structure may include information regarding LUN with the LUN identifier. A second data structure may include information regarding LUN with the LUN ID after the client request is processed. A third data structure may include information regarding LUN using the swapped LUN ID.","To swap the LUN ID, management application  may retrieve the first data structure created before the request was received and then create the third data structure with the swapped LUN ID.","After the LUN ID is swapped, in block S, client  can use LUN attributes with the dummy LUN ID without having to discover LUN.","This saves time and computing resources and improves the overall efficiency with which LUNs can be accessed and used by computing systems.","Although the foregoing descriptions are based on LUNs, the adaptive embodiments disclosed herein are applicable to any data structure associated with provisioned storage that a computing system needs to discover prior to using the data structure.","Clustered System:",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 1D","b":["102","100","100","102","18"]},"Nodes  comprise various functional components that cooperate to provide distributed storage system architecture of cluster . Each node  is generally organized as a network element (N-module ) and a disk element (D-module ). N-module  includes functionality that enables node  to connect to clients  over a computer network , while each D-module  connects to one or more storage devices, such as disks  or a disk array  (similar to storage subsystem , ).","Nodes  may be interconnected by a cluster switching fabric  which, in the illustrative embodiment, may be embodied as a Gigabit Ethernet switch. It should be noted that while there is shown an equal number of N and D-modules in the illustrative cluster , there may be differing numbers of N and\/or D-modules in accordance with various embodiments of the present invention. For example, there may be a plurality of N-modules and\/or D-modules interconnected in a cluster configuration  that does not reflect a one-to-one correspondence between the N and D-modules. As such, the description of a node  comprising one N-module and one D-module should be taken as illustrative only.","Clients  may be configured to interact with the node  in accordance with a client\/server model of information delivery. That is, each client  may request the services of the node , and the node  may return the results of the services requested by the client , by exchanging packets over the network . The client  may issue packets using application  including file-based access protocols, such as the CIFS protocol or the NFS protocol, over TCP\/IP when accessing information in the form of certain data containers, such as files and directories. Alternatively, the client  may issue packets using application  including block-based access protocols, such as the iSCSI protocol when accessing information in the form of other data containers, such as blocks.","Storage System Node:",{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 2","b":["102","202","202","204","210","212","216","213","208","213","214"]},"The cluster access adapter  comprises a plurality of ports adapted to couple node  to other nodes of cluster . In the illustrative embodiment, Ethernet may be used as the clustering protocol and interconnect media, although it will be apparent to those skilled in the art that other types of protocols and interconnects may be utilized within the cluster architecture described herein. In alternate embodiments where the N-modules and D-modules are implemented on separate storage systems or computers, the cluster access adapter  is utilized by the N\/D-module for communicating with other N\/D-modules in the cluster .","Each node  is illustratively embodied as a dual processor storage system executing a storage operating system  that preferably implements a high-level module, such as a file system, to logically organize the information as a hierarchical structure of named directories, files and special types of files called virtual disks (hereinafter generally \u201cblocks\u201d) on disks . However, it will be apparent to those of ordinary skill in the art that the node  may alternatively comprise a single or more than two processor systems. Illustratively, one processor A executes the functions of the N-module  on the node, while the other processor B executes the functions of the D-module .","The memory  illustratively comprises storage locations that are addressable by the processors and adapters for storing programmable instructions and data structures. The processor and adapters may, in turn, comprise processing elements and\/or logic circuitry configured to execute the programmable instructions and manipulate the data structures. It will be apparent to those skilled in the art that other processing and memory means, including various computer readable media, may be used for storing and executing program instructions pertaining to the invention described herein.","The storage operating system , portions of which is typically resident in memory and executed by the processing elements, functionally organizes the node  by, inter alia, invoking storage operations in support of the storage service implemented by the node. An example of operating system  is the DATA ONTAP\u00ae (Registered trademark of NetApp, Inc.) operating system available from NetApp, Inc. that implements a Write Anywhere File Layout (WAFL\u00ae(Registered trademark of NetApp, Inc.)) file system. However, it is expressly contemplated that any appropriate storage operating system may be enhanced for use in accordance with the inventive principles described herein. As such, where the term \u201cONTAP\u201d is employed, it should be taken broadly to refer to any storage operating system that is otherwise adaptable to the teachings of this invention.","The network adapter  comprises a plurality of ports adapted to couple the node  to one or more clients  over point-to-point links, wide area networks, virtual private networks implemented over a public network (Internet) or a shared local area network. The network adapter  thus may comprise the mechanical, electrical and signaling circuitry needed to connect the node to the network. Illustratively, the computer network  may be embodied as an Ethernet network or a FC network. Each client  may communicate with the node over network  by exchanging discrete frames or packets of data according to pre-defined protocols, such as TCP\/IP.","The storage adapter  cooperates with the storage operating system  executing on the node  to access information requested by the clients. The information may be stored on any type of attached array of writable storage device media such as video tape, optical, DVD, magnetic tape, bubble memory, electronic random access memory, micro-electro mechanical and any other similar media adapted to store information, including data and parity information. However, as illustratively described herein, the information is preferably stored on the disks  of array . The storage adapter  comprises a plurality of ports having input\/output (I\/O) interface circuitry that couples to the disks over an I\/O interconnect arrangement, such as a conventional high-performance, FC link topology.","Storage of information on each array  is preferably implemented as one or more storage volumes that comprise a collection of physical storage disks  cooperating to define an overall logical arrangement of volume block number (vbn) space on the volume(s). Each logical volume is generally, although not necessarily, associated with its own file system. The disks within a logical volume\/file system are typically organized as one or more groups, wherein each group may be operated as a Redundant Array of Independent (or Inexpensive) Disks (RAID). Most RAID implementations, such as a RAID-4 level implementation, enhance the reliability\/integrity of data storage through the redundant writing of data \u201cstripes\u201d across a given number of physical disks in the RAID group, and the appropriate storing of parity information with respect to the striped data. An illustrative example of a RAID implementation is a RAID-4 level implementation, although it should be understood that other types and levels of RAID implementations may be used in accordance with the inventive principles described herein.","Operating System:",{"@attributes":{"id":"p-0093","num":"0092"},"figref":"FIG. 3","b":["206","102","206","104","106","206","18"]},"Operating system  layers include a file system manager  that keeps track of a directory structure (hierarchy) of the data stored in storage devices and manages read\/write operations, i.e. executes read\/write operations on disks in response to client  requests.","Operating system  may also include a protocol layer  and an associated network access layer , to allow node  to communicate over a network with other systems, such as clients . Protocol layer  may implement one or more of various higher-level network protocols, such as NFS, CIFS, Hypertext Transfer Protocol (HTTP), TCP\/IP and others.","Network access layer  may include one or more drivers, which implement one or more lower-level protocols to communicate over the network, such as Ethernet. Interactions between clients  and mass storage devices  (e.g. disks, etc.) are illustrated schematically as a path, which illustrates the flow of data through operating system .","The operating system  may also include a storage access layer  and an associated storage driver layer  to allow D-module  to communicate with a storage device. The storage access layer  may implement a higher-level disk storage protocol, such as RAID (redundant array of inexpensive disks), while the storage driver layer  may implement a lower-level storage device access protocol, such as FC or SCSI. In one embodiment, the storage access layer  may implement the RAID protocol, such as RAID-4 or RAID-DP\u2122 (RAID double parity for data protection provided by NetApp Inc. the assignee of the present disclosure).","As used herein, the term \u201cstorage operating system\u201d generally refers to the computer-executable code operable on a computer to perform a storage function that manages data access and may, in the case of a node , implement data access semantics of a general purpose operating system. The storage operating system can also be implemented as a microkernel, an application program operating over a general-purpose operating system, such as UNIX\u00ae or Windows XP\u00ae, or as a general-purpose operating system with configurable functionality, which is configured for storage applications as described herein.","In addition, it will be understood to those skilled in the art that the invention described herein may apply to any type of special-purpose (e.g., file server, filer or storage serving appliance) or general-purpose computer, including a standalone computer or portion thereof, embodied as, or including a storage system. Moreover, the teachings of this disclosure can be adapted to a variety of storage system architectures including, but not limited to, a network-attached storage environment, a storage area network and a disk assembly directly-attached to a client or host computer. The term \u201cstorage system\u201d should therefore be taken broadly to include such arrangements in addition to any subsystems configured to perform a storage function and associated with other equipment or systems. It should be noted that while this description is written in terms of a write any where file system, the teachings of the present invention may be utilized with any suitable file system, including a write in place file system.","Processing System:",{"@attributes":{"id":"p-0101","num":"0100"},"figref":["FIG. 4","FIG. 4"],"b":["400","18"]},"The processing system  includes one or more processor  and memory , coupled to a bus system . The bus system  shown in  is an abstraction that represents any one or more separate physical buses and\/or point-to-point connections, connected by appropriate bridges, adapters and\/or controllers. The bus system , therefore, may include, for example, a system bus, a Peripheral Component Interconnect (PCI) bus, a HyperTransport or industry standard architecture (ISA) bus, a SCSI bus, a universal serial bus (USB), or an Institute of Electrical and Electronics Engineers (IEEE) standard 1394 bus (sometimes referred to as \u201cFirewire\u201d).","Processor  is the central processing unit (CPUs) of the processing system  and, thus, controls its overall operation. In certain embodiments, the processor  accomplishes this by executing software stored in memory . A processor  may be, or may include, one or more programmable general-purpose or special-purpose microprocessors, digital signal processors (DSPs), programmable controllers, application specific integrated circuits (ASICs), programmable logic devices (PLDs), or the like, or a combination of such devices.","Memory  represents any form of random access memory (RAM), read-only memory (ROM), flash memory, or the like, or a combination of such devices. Memory  includes the main memory of the processing system . Software  which implements the processes described herein (e.g., the storage management application  in ) may reside in and may be executed (by processor ) from memory .","Also connected to processor  through the bus system  are one or more internal mass storage devices , and a network adapter . Internal mass storage devices  may be or may include any conventional medium for storing large volumes of data in a non-volatile manner, such as one or more magnetic or optical based disks. The network adapter  provides the processing system  with the ability to communicate with remote devices (e.g., storage servers ) over a network and may be, for example, an Ethernet adapter, a FC adapter, a Fibre Channel over Ethernet (FCOE) adapter or the like. The processing system  also includes one or more input\/output (I\/O) devices  coupled to the bus system . The I\/O devices  may include, for example, a display device, a keyboard, a mouse, etc.","Thus, a method and apparatus for accessing LUNs have been described. Note that references throughout this specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Therefore, it is emphasized and should be appreciated that two or more references to \u201can embodiment\u201d or \u201cone embodiment\u201d or \u201can alternative embodiment\u201d in various portions of this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures or characteristics being referred to may be combined as suitable in one or more embodiments of the invention, as will be recognized by those of ordinary skill in the art.","While the present disclosure is described above with respect to what is currently considered its preferred embodiments, it is to be understood that the disclosure is not limited to that described above. To the contrary, the disclosure is intended to cover various modifications and equivalent arrangements within the spirit and scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing features and other features will now be described with reference to the drawings of the various embodiments. In the drawings, the same components have the same reference numerals. The illustrated embodiments are intended to illustrate, but not to limit the present disclosure. The drawings include the following Figures:",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1C"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1D"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 2","FIG. 1D"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
