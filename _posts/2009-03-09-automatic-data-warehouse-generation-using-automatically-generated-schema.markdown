---
title: Automatic data warehouse generation using automatically generated schema
abstract: Techniques for automatic data warehouse generation are disclosed herein. A first data set is received. The first data set includes a plurality of tables and includes a plurality of keys. A dimensional model is mapped onto the first data set. A schema is automatically generated based on the dimensional model.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09483537&OS=09483537&RS=09483537
owner: Birst, Inc.
number: 09483537
owner_city: San Francisco
owner_country: US
publication_date: 20090309
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims priority to U.S. Provisional Patent Application No. 61\/068,531 entitled AUTOMATIC DATA WAREHOUSE GENERATION filed Mar. 7, 2008 which is incorporated herein by reference for all purposes.","The design and creation of a data warehouse is traditionally a highly manual process. Typically, the dimensional model and database schema of the data warehouse is specified and created manually based on an understanding of the business requirements and, in general, independent from the source data. Unfortunately, designing a dimensional model and then mapping source data files to the corresponding database schema is a difficult and time-consuming process. Moreover, additional manual work is typically required to maintain that schema and the data it contains as new data is continually loaded into it.","The invention can be implemented in numerous ways, including as a process; an apparatus; a system; a composition of matter; a computer program product embodied on a computer readable storage medium; and\/or a processor, such as a processor configured to execute instructions stored on and\/or provided by a memory coupled to the processor. In this specification, these implementations, or any other form that the invention may take, may be referred to as techniques. In general, the order of the steps of disclosed processes may be altered within the scope of the invention. Unless stated otherwise, a component such as a processor or a memory described as being configured to perform a task may be implemented as a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. As used herein, the term \u2018processor\u2019 refers to one or more devices, circuits, and\/or processing cores configured to process data, such as computer program instructions.","A detailed description of one or more embodiments of the invention is provided below along with accompanying figures that illustrate the principles of the invention. The invention is described in connection with such embodiments, but the invention is not limited to any embodiment. The scope of the invention is limited only by the claims and the invention encompasses numerous alternatives, modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the invention. These details are provided for the purpose of example and the invention may be practiced according to the claims without some or all of these specific details. For the purpose of clarity, technical material that is known in the technical fields related to the invention has not been described in detail so that the invention is not unnecessarily obscured.","Techniques for automatically generating a database schema (e.g., for a relational database) and data loading procedures for a data warehouse using metadata derived from source data files are described herein. A data warehouse is a repository of all or significant portions of data collected by entities such as the various business systems of an enterprise. With a data warehouse, business data captured from diverse sources can be used for subsequent analysis and access, e.g., by business users.","Typically, analysis of such data requires the ability to look at that data at multiple levels. Analysis is also comparative, and requires the ability to look at various measures for different parts of a business to compare them vs. each other and over time. This process of hierarchical measurement and comparison naturally leads to a \u201cdimensional model.\u201d The dimensional metaphor provides a way of describing various hierarchical measurements. In the dimensional model, two concepts include measures and dimensions. Measures are measurements of data such as business data. Examples of measures include revenue, sales, assets, number of orders, etc. Measures can be analyzed across dimensions. Dimensions are ways of grouping measurements. Examples of dimensions include years, months, product categories, sales regions, etc. One example of information that can be expressed using a dimensional is the monthly sales by product.","A database schema defines the structure of a database system, described in a formal language supported by a database management system (DBMS). In a relational database, the schema defines the tables, the fields in each table, and the relationships between fields and tables.","A star schema is an example of the database schema for a dimensional model. In the star schema design, a single object (the fact table) sits in the middle and is connected to other surrounding objects (dimension tables). A star schema can be simple or complex. A simple star might include as little as one fact table; a more complex star has multiple fact tables. The star schema (also referred to as a star join schema) is an example of a data warehouse schema, and includes fact tables referencing any number of dimension tables. The \u201cfacts\u201d that the data warehouse helps analyze are classified along different \u201cdimensions.\u201d The fact tables typically hold the main data, measures, while the dimension tables describe each value of a dimension and can be joined to fact tables as needed.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1","b":["106","104","102","102","104","106","104","102","106"]},"As described in more detail below, data warehouse generation engine  reads the received source data files, reads metadata stored in metadata repository , and automatically generates a set of schema and data loading procedures. Also as described in more detail below, dashboard engine  is configured to automatically evaluate the source data (and\/or data in data warehouse ) and to generate applicable reports.","Examples of different types of source data files  include flat files, Excel spreadsheets, tables in a relational database, structured data files such as XML data, and data obtained via a service call to another program (for example a web service or a remote procedure call). In the case of flat files, fields from each record may have fixed width with padding, or may be delimited by whitespace, tabs, commas or other characters. Source data may originate from a set of operational data stores, back office systems or existing data warehouses\/marts.","Metadata in repository  is implemented using the Extensible Markup Language (XML) and can also make use of any other suitable language. In some embodiments, the metadata for the data warehouse schema and data loading procedures is editable using Metadata Management Tool . Augmentations include but are not limited to adding column and table transformations.","Data Warehouse , which is implemented in this example by a relational database , is organized around dimensions and measures (or facts). The relational database is a collection of data items organized as a set of tables with each table organized into columns and rows. The schema of data warehouse  comprises staging tables mapped to source data files, dimension and measure tables mapped to staging tables, and join relationships between dimension and dimension or measure tables. In various embodiments it also contains information about the granularity of data, how data may be partitioned for performance purposes, and\/or how that data may be indexed by the underlying relational database for performance purposes.","The creation and population of the relational database , based on the data warehouse schema defined in repository  may be performed in any suitable manner, as applicable. For example, in one embodiment, data warehouse generation engine  interprets the logical dimensional structure in repository , automatically initializes corresponding relational database , and loads data from source data  into database  using data loading procedures in repository , by calling one or more APIs (e.g. in the SQL language).","As described in more detail below, using editing tool , a user is able to declare the grain of a source data file and label each source data element as pertaining to a logical dimension and\/or as a measure. Key columns are mapped by the user to their corresponding levels in the dimensional hierarchies. For example, a user may map the key column \u201cRegion_ID\u201d in a \u201cBusiness\u201d dimension to a \u201cRegion\u201d level in an associated \u201cBusiness\u201d hierarchy. The corresponding data warehouse star, including staging, measure, and dimension tables and joins, as well as loading procedures from source files to staging and staging to warehouse tables are then generated automatically. Metadata repository  stores all the metadata that defines the star schema, mapping and transformations of source data files to staging tables, and staging tables to measures and dimension tables. Also as described in more detail below, in some embodiments system  automatically performs portions of this processing, reducing and in some cases eliminating the need for a user to perform such tasks.","In various embodiments, the infrastructure provided by portions of system  is located on and\/or replicated across a plurality of servers rather than the entirety of system  being collocated on a single platform. Such may be the case, for example, if the contents of database  are vast (and thus distributed across multiple databases) and\/or if system  is used to provide services to many users. Whenever system  performs a task (such as receiving information from a user, producing reports, etc.), either a single component or a subset of components or all components of system  may cooperate to perform the task.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 2","FIG. 2"],"b":["106","202","202","102","104","108","106"]},"At , metadata is set up. As described in more detail below, portions of the processing may be performed manually (e.g., by a user or with user input) and portions of the processing may also be performed automatically. Metadata is stored in a repository such as metadata repository . For each table received at , two pieces of metadata are created. The grain of each table, describing the set of levels that are appropriate for each file, is determined. For each column in those files, a target dimension and level, and whether the column is measure, is also determined. Finally, a set of hierarchies are created, and certain levels are selected to be turned into dimension tables.","At , metadata that defines a corresponding schema is generated, as is the database schema. First, all levels of all dimensions that are designated to be dimension tables are evaluated. For each level, each source staging table is examined. If the table has a grain in the dimension of the appropriate level and the level of that grain is at or above the level in question, the table is a candidate. All columns are scanned to determine which could be sources for that target dimension table. Once all source tables are scanned, each dimension table is created based on all the columns from all source files that are targeted to that level. All source tables are similarly scanned to determine which columns are measures and a measure table is generated for each grain.","At , the warehouse is loaded. First, the system scans source tables in order to move data from those tables into target dimension tables. All source records are marked with a checksum before loading (so that only changed records will be moved). The system generates inserts into the target dimension table for each staging table that is a source. Additional staging tables are joined in to supply related columns not in that table (e.g., higher level keys). Higher level dimension tables also serve as lookups for keys. Levels are loaded in descending order. If the dimension table is type I (i.e., only current versions of each dimension record are kept), then the system does an update for any non-inserted dimensional records that may have changed attributes. If the dimension table is type II (i.e., history is kept), dimension records that have changed are flagged as retired, and inserts add the new records with the changed attributes.","Next, the system scans source tables to find sources for all measure grains. In the case of snapshots, old records may be truncated, as applicable. In the case of inserts, higher level surrogate keys are looked up from the dimension tables. Natural keys\u2014which may be composed of multiple columns\u2014are transformed into simple integer surrogate keys for performance.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 3","FIG. 3","FIG. 2"],"b":["202","204","302","120"]},"At , source data files are read by data warehouse generation engine  and a definition of each source file is automatically generated in metadata repository . The definition of a source file includes information such as format type, name and data type for each column and may be modified by the user via editor .","At , corresponding definitions of staging tables are automatically created in metadata repository  based on source data file representations. Based on a user's input, more than one staging table may be defined based on a single source data file. A user may modify the staging table definitions using metadata editor . Staging tables serve as a temporary holding or staging place for data when it is brought into a relational database for the first time.","At , the user declares the grain of each staging table using the metadata editor . The grain is declared as a reference to at least one logical dimension and a level in the associated dimensional hierarchy.","At , the user declares each column in a staging table to be a source to a dimension, to a fact\/measure (or to both simultaneously) using metadata editor . A user may define table transformations on a staging table and column transformations for columns in a staging table. These transformations allow data in a staging table to be altered\/modified before it is moved to its ultimate destination, the dimension and measure tables.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 4","FIG. 4","FIG. 2"],"b":["204","402","106","106","106"]},"The data provided at portion  of the process shown in  is typically provided in a flat form. The target data structures to be built by system  are analytical ones based on notions of a dimensional structure, such as cubes, hypercubes, etc. Accordingly, once the keys have been determined at , system  attempts to assemble the information into a dynamical hierarchal structure.","At , each of the columns in the source data is classified as either a measure, a dimension, or both. By default, system  classifies columns as both a measure (a source for metrics) and a dimension (a source for dimensional attributes). Typically, columns populated with numeric values are classified as both measures and dimensions, and columns populated with text strings are classified only as dimensions.","At , joins are determined. For example, two columns with the same name and same data type are considered to be the same column and can be linked.","At , system , for every level of data in each dimension, creates a dimension table that stores dimensional attributes. System  then evaluates the source tables to determine which metrics need to be generated, groups them into grains, and for each grain creates a fact table.","At , hierarchies are determined and combined. For example, at  it is determined that a particular dimension table for geography at the region level can be fed from a particular table and that geography at the city level is a \u201clower\u201d level in the hierarchy.","In the following example, suppose an analyst (hereinafter \u201cAlice\u201d) works for a grocery store chain and has been asked to analyze checkout data collected from a sample of markets in North America over the course of one year. As described in the following example, Alice wishes to identify sales patterns and information of interest and to present a set of dashboards to the grocery store chain's managers. Alice contacts system  via client  and uploads sales data in the form of a MICROSOFT EXCEL file that includes five spreadsheets. Alice may interact with system  in either an \u201cautomatic\u201d mode (in which the bulk of the processing is performed automatically by system , such as by using the process of ), or in an advanced mode, described below.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 5","FIG. 6","FIG. 7","FIG. 8","FIG. 9"]},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 10A","b":["106","106"]},"In order to process source data, its grain needs to be defined first. The grain of a data source defines what a data record in the source represents. It specifies the level of detail captured in a source. In system , the grain is declared as a combination of hierarchy levels. System  establishes relationships between multiple sources based on key columns with identical names and the grains of the sources.","Alice can define the grain of the \u201cCart Details\u201d data source by selecting region  of the interface shown in . She creates a new hierarchy, known as \u201cSales.\u201d The \u201cCard ID\u201d and \u201cProduct ID\u201d columns of the \u201cCart Details\u201d table uniquely identify records in the Cart Details table and form a \u201cProduct Sale\u201d level in the Sales hierarchy.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 10B","FIG. 10B"]},"Analogous to the actions taken by Alice in conjunction with , Alice takes the following actions: For the \u201cCustomers\u201d data source, she creates a new hierarchy named \u201cCustomers\u201d with a single level \u201cCustomer\u201d mapped to the column \u201cLoyalty Card ID.\u201d For the \u201cProducts\u201d data source, she creates a new hierarchy named \u201cProducts\u201d with two levels, one level \u201cProduct\u201d mapped to \u201cProduct ID\u201d and a level above it named \u201cCategory\u201d mapped to \u201cCategory ID.\u201d For the \u201cShopping Carts\u201d data source, she modifies the existing \u201cSales\u201d hierarchy by adding a level \u201cCart\u201d mapped to \u201cCart ID\u201d above the existing \u201cProduct Sale\u201d level. For the \u201cStores\u201d data source, she creates a new hierarchy named \u201cStores\u201d with a single level \u201cStore\u201d mapped to \u201cStore ID.\u201d",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 10C","FIG. 10C"]},"Once the hierarchies and levels are in place, Alice uses the interface shown in  to finalize the grain definition for some sources. For \u201cCart Details\u201d she adds the following three hierarchy-level combinations to the grain definition by selecting it from the two drop downs in the \u201cDefine Grain\u201d section for the source: \u201cProducts-Product,\u201d \u201cCustomers-Customer,\u201d and \u201cStores-Store.\u201d The second two are added to the grain definition to force system  to create a \u201cSales Date\u201d version of the \u201cQuantity\u201d measure.","Alice then uses the interface shown in  to remove the automatically added hierarchy-level combination \u201cSales-Product Sale\u201d from \u201cShopping Carts.\u201d Next, she adds \u201cSales-Cart,\u201d \u201cCustomers-Customer,\u201d and \u201cStores-Store\u201d to the grain definition.","Before proceeding to processing the data sources, the properties of all columns in a data source should be defined. Alice makes the following adjustments: For the data source \u201cCart Details,\u201d she indicates that the \u201cCart ID\u201d and \u201cProduct ID\u201d columns are needed as measures. She sets the hierarchy of the \u201cQuantity\u201d column to \u201cSales\u201d and makes the level blank. For the remaining sources, she sets the column properties as shown in .","Next, Alice indicates to system  that the grocery data should be processed, through the interface shown in . System  allows users to upload new snapshots of the same data sources over time. Each time a new snapshot is uploaded, it is tagged with a unique load ID and date. The load date is used for time-dependent analysis. When Alice opens the Process Data page shown in , system  sets the load date by default to the current date.","After successfully processing the uploaded data, Alice is now ready to analyze the data and build reports. She begins by building a simple report that breaks out quantity sold by each product category using tools provided by system . First, she opts to view the quantity of products sold by category and is presented with the report shown in .","Alice may share the report with others, e.g. via interface . Alice can also manipulate the report. For example, Alice can indicate to system  that she would like to see \u201cYear\/Month\u201d data in addition to \u201cCategory Name\u201d and \u201cQuantity.\u201d","As shown in , the resulting table shows a single value for \u201cYear\/Month\u201d across all rows. The existing \u201cQuantity\u201d measure will report the quantity sold in relation to the load date. Since Alice has so far only loaded her data a single time, only one load date exists and therefore \u201cYear\/Month\u201d is single valued. In order to report the quantity sold in relation to the sales date, system  provides another version of the \u201cQuantity\u201d measure starting with the prefix \u201cSales Date.\u201d To see it, Alice removes the \u201cSum: Quantity\u201d column from the report by clicking on the \u201cRemove chart\u201d icon and adds the measure \u201cSum\u201d from the folder Measures\/Quantity\/By Sales Date to the report. Since the dataset contains sales data for all twelve months in 2007, instead of showing a row for each month of the year across all product categories, a pivot table can be used to display the report, as shown in .","The following is yet another example of how a data warehouse can be automatically generated. The first step is to map in source data files, for example, as explained above. One example of source data include extracts of many tables in a relational database that tracks orders for a company for a given period of time. Another example, in the case of a financial services company, would be all trades, transactions, accounts and other financial information generated in the normal course of operating the business. The files serve as sources for staging tables. Staging tables are places in a relational database where raw source data can be loaded for further processing.","In some embodiments, an administrator initially sets up the general hierarchies present in the data. For example, the data contains information on products and product categories. Each product category is made up of several products. That relationship can be represented in a product hierarchy where the name of the hierarchy is Product, the top level is Category and the bottom level is Product. Similarly, if order data is received, some data will pertain to the entire order (like customer, etc.) and other data will pertain to each order line item. An order hierarchy can be erected with both levels. Using this hierarchy, the system can be instructed what granularity of data is in each staging table. As one example, an Orders staging table has an Order level of the Order hierarchy selected as well as the Customer level of the Customer hierarchy and the Employee level of the employee hierarchy. That is because each order record has assigned order information, a specific customer and a specific employee\u2014its grain. The order item table is one level deeper and contains information at the Order Item level of the Order hierarchy.","Schema includes fact tables and dimension tables. Fact tables include metrics to be aggregated and dimension tables include ways to group or slice these facts. Using the techniques described herein, fact tables are automatically generated for each grain for which there are aggregateable metrics. In addition, by clicking on a checkbox for a given level in a hierarchy, the system will automatically determine the table format required to build a dimension table for that level. In some embodiments it does so by first determining which columns must be present in the dimension table at this level (by scanning all columns in all staging tables that are targeted to this level). Those columns and their required data types and formats as well as the keys for each level determine what is required in that table. In addition, special types of dimension tables can be supported (for example, like below, slowly changing dimension versions of dimension tables that record history and degenerate dimension tables that are stored in the fact tables themselves). All an administrator needs to do is specify the level, identify the column which uniquely defines that level (a level key) and then check the box to have a dimension table created for that level. Once all levels in a dimension are specified, the system can determine, using the dimension targets in the staging tables as well as the grain levels for each staging table what columns must be placed in which instantiated dimension table. Each column must be in a table at or below the level specified for that column.","In addition, metrics can be analyzed over time and there are various ways users might want to aggregate data over time. With the techniques described herein, the user can specify all the different kinds of time aggregation or shifting that one desires and all the variants of the metrics that calculate these versions are generated automatically.","Once the previous have been specified, an automatic schema generation tool can be run (i.e. the application can be \u201cbuilt\u201d). When that happens definitions for many tables get created, all the columns in those tables are created, keys are created into those tables for later access and join relationships based on the hierarchies are also setup. During an application build, previously automatically built items are removed and automatically generated items are regenerated. Surrogate keys are automatically generated and added to the hierarchies after a build. In addition, new metrics are created based on columns in the staging tables (using the grain of the staging table, data types, etc. to infer metrics). Additionally, individual physical mappings are also generated (each metric may exist in one or more physical tables\u2014each at a different grain of aggregation).","Dimension columns are automatically created in each dimension. And, dimension columns are physically mapped to tables. Suppose there is a dimension table for Order data and a dimension table for individual order line item data. The system automatically determines based on source table grain and hierarchies which columns should go where and how they should be mapped.","Finally, once the schema is determined for the warehouse, load processes need to be generated to populate this schema from source staging tables. Using the techniques herein, an analysis is performed of each target table against every staging table and it is determined what can be loaded from where. It then automatically generates the data load queries for the database that load the target tables from the staging tables.","Quick Dashboards","In addition to providing the reporting tools described above, system  also provides a dashboard engine  that assists users such as Alice in automatically locating information that is likely to be of interest, such as to the grocery store managers. As described in more detail below, dashboard engine  is configured to evaluate the source data provided by Alice for metrics of interest, to locate metric-attribute combinations (such as number of products sold per region), and to populate a dashboard with reports associated with the metric-attribute combinations that are likely to be of interest to Alice.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 15","FIG. 15"],"b":"106"},"The process begins at  when source data is received. For example, when Alice uploads source data  to system , both data warehouse generation engine  and dashboard engine  may ingest the data at the same time. In various embodiments, dashboard engine  receives data (including as realtime data) from data warehouse generation engine , relational database , or another component of system , rather than receiving it at the time Alice provides the source data to the system. In various embodiments, dashboard engine  receives data from a third party and\/or portions of system  such as the data warehouse generation engine are omitted and the techniques described herein are adapted with respect to quick reports are used on other types of data or data sets, as applicable.","At , metric-attribute combinations are identified and at  the combinations are prioritized. Portions  and portions  can be performed together, may be performed in either order, and may be performed in a variety of ways. As one example, all of the metrics extracted from source data  by data warehouse generation engine  may first be evaluated to determine which metrics have the least uniform statistical distribution. Metric-attribution combinations include at least one metric and at least one attribute, but may include additional metrics and\/or attributes as well. One technique for determining which metrics have the least uniform distribution is kurtosis. Other techniques may also be used, such as skewness.","The metrics showing the least uniform distribution (e.g., the top 10 out of 100 possible metrics) then have their associated attributes evaluated, again, to select the combinations of metrics and attributes (e.g., quantity per city) that are likely to be of interest to Alice. One technique for evaluating the candidate metric-attribute combinations is through the use of decision trees. Generally, attributes with a higher information gain relative to a chosen metric will likely be more interesting to a user than attributes having a lower information gain. Additional techniques for selecting the most significant attributes include the use of chi-squared automatic interaction detector, classification and regression trees, entropy, and any other applicable node splitting techniques.","The metric-attribute combinations are ranked, e.g., based on information gain, and the highest ranked combinations are used to generate reports showing such information as quantity sold per region. In various embodiments, multiple reports are presented on the same screen, referred to herein as a dashboard. Alice can share access to the dashboard with others users, and can also interact with the dashboard, e.g, by adding and removing additional attributes and\/or metrics from inclusion in the reporting. For example, suppose one report selected for display to Alice is products by region. In various embodiments, Alice is provided with an interface that allows her to refine the report so that it shows products by region by time.","The following is an example of a log file generated by an embodiment of system  when processing the data described in conjunction with .","2009-03-05 17:21:38,296-0800 [Pool Worker-9] INFO\u2014Starting: Repository c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\repository_dev.xml","2009-03-05 17:21:38,609-0800. [Pool Worker-9] INFO\u2014Application Name: Grocery Sales\/schst@example.com","2009-03-05 17:21:38,906-0800 [Pool Worker-9] INFO\u2014Engine Repository Version: 7, Repository Version: 7","2009-03-05 17:21:38,906-0800 [Pool Worker-9] DEBUG\u2014File: Cart Details.txt, Encoding: UTF-8, Separator: |, Quote: \u201c, IgnoredRows: 0, IgnoredLastRows: 0, HasHeaders: true, IgnoreBackslash: false","2009-03-05 17:21:38,906-0800 [Pool Worker-9] DEBUG\u2014File: Customers.txt, Encoding: UTF-8, Separator: |, Quote: \u201c, IgnoredRows: 0, IgnoredLastRows: 0, HasHeaders: true, IgnoreBackslash: false","2009-03-05 17:21:38,906-0800 [Pool. Worker-9] DEBUG\u2014File: Products.txt, Encoding: UTF-8, Separator: |, Quote: \u201c, IgnoredRows: 0, IgnoredLastRows: 0, HasHeaders: true, IgnoreBackslash: false","2009-03-05 17:21:38,906-0800 [Pool Worker-9] DEBUG\u2014File: Shopping Carts.txt, Encoding: UTF-8, Separator: |, Quote: \u201c, IgnoredRows: 0, IgnoredLastRows: 0, HasHeaders: true, IgnoreBackslash: false","2009-03-05 17:21:38,906-0800 [Pool Worker-9] DEBUG\u2014File: Stores.txt, Encoding: UTF-8, Separator: |, Quote: \u201c, IgnoredRows: 0, IgnoredLastRows: 0, HasHeaders: true, IgnoreBackslash: false","2009-03-05 17:21:38,937-0800 [Pool Worker-9] INFO\u2014Database connection pool created for Default Connection using connection string jdbc:sqlserver:\/\/localhost;databaseName=AcornData and driver com.microsoft.sqlserver.jdbc.SQLServerDriver","2009-03-05 17:21:39,437-0800 [Pool Worker-9] INFO\u2014JDBC Driver information: Microsoft SQL Server 2005 JDBC Driver, 1.2.2828.100","2009-03-05 17:21:39,437-0800 [Pool Worker-9] INFO\u2014JDBC Version: 3.0","2009-03-05 17:21:40,078-0800 [Pool Worker-9] INFO\u2014Creating snowflake: [Cart_Details Cart_Details, Cart_Details Shopping_Carts]","2009-03-05 17:21:40,140-0800 [Pool Worker-9] INFO\u2014Creating snowflake: [Cart_Details Shopping_Carts, Cart_Details Customers Customers]","2009-03-05 17:21:40,171-0800 [Pool Worker-9] INFO\u2014Creating snowflake: [Cart_Details Shopping_Carts, Cart_Details Stores Stores]","2009-03-05 17:21:40,203-0800 [Pool Worker-9] INFO\u2014Creating snowflake: [Cart_Details Cart_Details, Cart_Details Shopping_Carts, Cart_Details Customers Customers]","2009-03-05 17:21:40,234-0800 [Pool Worker-9] INFO\u2014Creating snowflake: [Cart_Details Cart_Details, Cart_Details Shopping_Carts, Cart_Details Stores Stores]","2009-03-05 17:21:40,343-0800 [Pool Worker-9] INFO\u2014Creating snowflake: [Cart_Details Shopping_Carts, Cart_Details Customers Customers, Cart_Details Stores Stores]","2009-03-05 17:21:40,421-0800 [Pool Worker-9] INFO\u2014Instantiating the cache: c:\/SMI\/Data\/389a3dee-ce29-4e42-90ad-44970093f745\/cache","2009-03-05 17:21:40,421-0800 [Pool Worker-9] DEBUG\u2014Creating JDBM Record Manager: c:\/SMI\/Data\/389a3dee-ce29-4e42-90ad-44970093f745\/cache\\cacheMaps","2009-03-05 17:21:40,500-0800 [Pool Worker-9] DEBUG\u2014Creating JDBM HTree Instance: cmap","2009-03-05 17:21:40,531-0800 [Pool Worker-9] DEBUG\u2014Creating JDBM HTree Instance: cfmap","2009-03-05 17:21:40,546-0800 [Pool Worker-9] DEBUG\u2014Creating JDBM HTree Instance: emap","2009-03-05 17:21:40,546-0800 [Pool Worker-9] DEBUG\u2014Creating JDBM HTree Instance: rmap","2009-03-05 17:21:40,562-0800 [Pool Worker-9] INFO\u2014Repository Variable Initialization Started.","2009-03-05 17:21:40,562-0800 [Pool Worker-9] INFO\u2014Variable: LoadNumber=1","2009-03-05 17:21:40,562-0800 [Pool Worker-9] INFO\u2014Variable: LoadDate=5 Mar. 2009","2009-03-05 17:21:40,562-0800 [Pool Worker-9] INFO\u2014Repository Variable Initialization Complete.","2009-03-05 17:21:40,578-0800 [Pool Worker-9] INFO\u2014Security Settings for Passwords: min: 6, max: 100, upper and lower case: false, non-alphanumeric: false, not contain the username: false","2009-03-05 17:21:40,578-0800 [Pool Worker-9] WARN\u2014Create User Operation (Create User) does not exist","2009-03-05 17:21:40,578-0800 [Pool Worker-9] WARN\u2014Delete User Operation (Delete User) does not exist","2009-03-05 17:21:40,578-0800 [Pool Worker-9] WARN\u2014Disable User Operation (Disable User) does not exist","2009-03-05 17:21:40,578-0800 [Pool Worker-9] DEBUG\u2014Connection allocated for thread (Thread[Pool Worker-9,5,main])","2009-03-05 17:21:40,656-0800 [Pool Worker-9] WARN\u2014SMI_USERS either does not exist or does not have 2 [username, password] or 4 [username, password, fullname, email] columns; disabling DB-based authentication and authorization","2009-03-05 17:21:40,656-0800 [Pool Worker-9] WARN\u2014Problems encountered when trying to create DatabaseRealm, using Repository only for authentication and authorization","2009-03-05 17:21:40,781-0800 [Pool Worker-9] INFO\u2014Performance Model: Default Performance Model: reference population does not exist: Default Reference Population","2009-03-05 17:21:40,859-0800 [Pool Worker-9] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.TXN_COMMAND_HISTORY ([TM] DATETIME,[COMMAND_TYPE] VARCHAR(30),[STEP] VARCHAR(30),[SUBSTEP] VARCHAR(255),[ITERATION] VARCHAR(20),[STATUS] INTEGER,[NUMROWS] BIGINT,[NUMERRORS] BIGINT,[NUMWARNINGS] BIGINT,[MESSAGE] VARCHAR(1000))","2009-03-05 17:21:40,875-0800 [Pool Worker-9] DEBUG\u2014CREATE INDEX DX_TXN_COMMAND_HISTORYITERATION ON S_N389a3dee_ce29_4e42_90ad_44970093f745.TXN_COMMAND_HISTORY (ITERATION)","2009-03-05 17:21:40,906-0800 [Pool Worker-9] INFO\u2014Elapsed Time=0 minutes, 2 seconds for: Repository c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\repository_dev.xml","2009=03-05 17:21:41,328-0800 [Pool Worker-10] INFO\u2014Starting: SetVariable LoadDate 5 Mar. 2009","2009-03-05 17:21:41,328-0800 [Pool Worker-10] INFO\u2014Set repository variable \u2018LoadDate\u2019 to value \u20185 Mar. 2009\u2019","2009-03-05 17:21:41,328-0800 [Pool Worker-10] INFO\u2014Elapsed Time=0 minutes, 0 seconds for: SetVariable LoadDate 5 Mar. 2009","2009-03-05 17:21:41,328-0800 [Pool Worker-10] INFO\u2014Starting: ResetETLRun 1","2009-03-05 17:21:41,328-0800 [Pool Worker-10] DEBUG\u2014Clearing ETL history for 1","2009-03-05 17:21:41,328-0800 [Pool Worker-10] INFO\u2014Deleting previous data from TXN_COMMAND_HISTORY","2009-03-05 17:21:41,328-0800 [Pool Worker-10] DEBUG\u2014DELETE","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.TXN_COMMAND_HISTORY","WHERE ITERATION=\u20181\u2019 AND COMMAND_TYPE=\u2018ETL\u2019","2009-03-05 17:21:41,328-0800 [Pool Worker-10] DEBUG\u2014Connection allocated for thread (Thread[Pool Worker-10,5,main])","2009-03-05 17:21:41,328-0800 [Pool Worker-10] DEBUG\u2014Deleted 0 rows","2009-03-05 17:21:41,328-0800 [Pool Worker-10] INFO\u2014Elapsed Time=0 minutes, 0 seconds for: ResetETLRun 1","2009-03-05 17:21:41,328-0800 [Pool Worker-10] INFO\u2014Starting: GenerateSchema 1 notime","2009-03-05 17:21:41,359-0800 [Pool Worker-10] DEBUG\u2014Logging step GenerateSchema for 1, status Running","2009-03-05 17:21:41,359-0800 [Pool Worker-10] INFO\u2014Starting GenerateSchema","2009-03-05 17:21:41,406-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CA RTS ([Cart_ID$] INTEGER,[Store_ID$] INTEGER,[Loyalty_Card_ID$] INTEGER,[Sales_Date$] DATETIME,[Shopping_Carts_13875573$] INTEGER IDENTITY,[LOAD_ID] INTEGER,[ST_Cart_Details_CKSUM$] INTEGER,[ST_Shopping_Carts_CKSU$] INTEGER)","2009-03-05 17:21:41,562-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_CART_DETAILS ([Cart_ID$] INTEGER,[Product_ID$] INTEGER,[Quantity$] INTEGER,[Shopping_Carts_13875573$] INTEGER,[Cart_Details200351043$] INTEGER IDENTITY,[LOAD_ID] INTEGER,[ST_Cart_Details_CKSUM$] INTEGER)","2009-03-05 17:21:41,640-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS ([Loyalty_Card_ID$] INTEGER,[Age_Group$] NVARCHAR(8),[Gender$] NVARCHAR(6),[Customers120094747$] INTEGER IDENTITY,[LOAD_ID] INTEGER,[ST_Customers_CKSUM$] INTEGER,[ST_Shopping_Carts_CKSUM$] INTEGER)","2009-03-05 17:21:41,750-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_PRODUCTS_PRODUCTS ([Product_ID$] INTEGER,[Category_ID$] INTEGER,[Product_Name$] NVARCHAR(10),[Category_Name$] NVARCHAR(9),[Products1249892458$] INTEGER IDENTITY,[LOAD_ID] INTEGER,[ST_Products_CKSUM$] INTEGER,[ST_Cart_Details_CKSUM$] INTEGER)","2009-03-05 17:21:41,859-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES ([Store_ID$] INTEGER,[Region$] NVARCHAR(5),[City$] NVARCHAR(15),[Type$] NVARCHAR(11),[Stores1543357431$] INTEGER IDENTITY, [LOAD_ID] INTEGER,[ST_Stores_CKSUM$] INTEGER,[ST_Shopping_Carts_CKSUM$] INTEGER)","2009-03-05 17:21:41,921-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SFCART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES ([LOAD_ID] INTEGER,[Cart_Details$Cart_Details200351043$] INTEGER,[Cart_Details$Cart_ID] INTEGER,[Cart_Details$Product_ID$] INTEGER,[Products$Products1249892458$] INTEGER,[Products$Product_ID$] INTEGER,[Customers$Customers120094747$] INTEGER,[Customers$Loyalty_Card_ID$] INTEGER,[Stores$Stores1543357431$] INTEGER,[Stores$Store_ID$] INTEGER,[Cart_Details$Shopping_Carts_13875573$] INTEGER,[Time$Day_ID$] INTEGER,[Time$Week_ID$] INTEGER,[Time$Month_ID$] INTEGER, [Time$Quarter_ID$] INTEGER,[Cart_ID$] INTEGER,[Product_ID$] INTEGER,[Quantity$] INTEGER,[Time$Sales_Date_Day_ID$] INTEGER)","2009-03-05 17:21:42,062-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_SHOPPING_CARTS_DAY_CUSTO MERS_STORES ([LOAD_ID] INTEGER,[Cart_Details$Shopping_Carts_13875573$] INTEGER,[Cart_Details$Cart_ID$] INTEGER,[Customers$Customers120094747$] INTEGER,[Customers$Loyalty_Card_ID$] INTEGER,[Stores$Stores1543357431$] INTEGER,[Stores$Store_ID$] INTEGER,[Time$Day_ID$] INTEGER,[Time$Week_ID$] INTEGER,[Time$Month_ID$] INTEGER,[Time$Quarter_ID$] INTEGER,[Cart_ID$] INTEGER,[Loyalty_Card_ID$] INTEGER,[Store_ID$] INTEGER,[Time$Sales_Date_Day_ID$] INTEGER)","2009-03-05 17:21:42,140-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_PRODUCTS_DAY ([LOAD_ID] INTEGER,[Products$Products 1249892458$] INTEGER,[Products$Product_ID$] INTEGER,[Time$Day_ID$] INTEGER,[Time$Week_ID$] INTEGER,[Time$Month_ID$] INTEGER,[Time$Quarter_ID$] INTEGER,[Product_ID$] INTEGER,[Category_ID$] INTEGER,[Unit_Price$] FLOAT)","2009-03-05 17:21:42,234-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CUSTOMERS_DAY ([LOAD_ID] INTEGER,[Customers$Customers 120094747$] INTEGER,[Customers$Loyalty_Card_ID$] INTEGER,[Time$Day_ID$] INTEGER,[Time$Week_ID$] INTEGER,[Time$Month_ID$] INTEGER,[Time$Quarter_ID$] INTEGER,[Loyalty_Card_ID$] INTEGER)","2009-03-05 17:21:42,281-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_STORES_DAY ([LOAD_ID] INTEGER,[Stores$Stores1543357431$] INTEGER,[Stores$Store_ID$] INTEGER,[Time$Day_ID$] INTEGER,[Time$Week_ID$] INTEGER,[Time$Month_ID$] INTEGER,[Time$Quarter_ID$] INTEGER,[Store_ID$] INTEGER)","2009-03-05 17:21:42,312-0800 [Pool Worker-10] DEBUG\u2014Logging step GenerateSchema for 1, status Complete","2009-03-05 17:21:42,312-0800 [Pool Worker-10] INFO\u2014Finished GenerateSchema","2009-03-05 17:21:42,312-0800 [Pool Worker-10] INFO\u2014Elapsed Time=0 minutes, 0 seconds for: GenerateSchema 1 notime","2009-03-05 17:21:42,312-0800 [Pool Worker-10] INFO\u2014Starting: LoadStaging c:\\SMIData\\389a3dee-ce29-4e42-90ad-44970093f745\\data 1 loadgroup=ACORN databasepath=c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data numrows=\u22121","2009-03-05 17:21:42,375-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadStaging [ACORN] for 1, status Running","2009-03-05 17:21:42,375-0800 [Pool Worker-10] INFO\u2014Starting LoadStaging [ACORN]","2009-03-05 17:21:42,375-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadStaging [ACORN: ST_Cart_Details] for 1, status Running","2009-03-05 17:21:42,390-0800 [Pool Worker-10] INFO\u2014Starting LoadStaging [ACORN: ST_Cart_Details]","2009-03-05 17:21:42,390-0800 [Pool Worker-10] DEBUG\u2014Deleting format files that might be lingering over from previous unsuccessful runprematurely terminated-Cart Details.txt.format.","2009-03-05 17:21:42,390-0800 [Pool Worker-10] DEBUG\u2014No files found with search pattern Cart Details.txt.format","2009-03-05 17:21:42,390-0800 [Pool Worker-10] DEBUG\u2014Deleting tmp files that might be lingering over from previous unsuccessful runprematurely terminated-Cart Details.txt.tmp.","2009-03-05 17:21:42,390-0800 [Pool Worker-10] DEBUG\u2014No files found with search pattern Cart Details.txt.tmp","2009-03-05 17:21:42,390-0800 [Pool Worker-10] INFO\u2014Preprocessing source file Cart Details.txt (c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\Cart Details.txt)","2009-03-05 17:21:42,609-0800 [Pool Worker-10] INFO\u2014Read 12438 lines, wrote 12438 lines","2009-03-05 17:21:42,609-0800 [Pool Worker-10] INFO\u2014Successfully preprocessed source file Cart Details.txt","2009-03-05 17:21:42,656-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Cart_Details ([Cart_ID$] Integer,[Product_ID$] Integer,[Quantity$] Integer,[DW_DM_CART_DETAILS_SHOPPING_CARTS_CKSUM$] INTEGER,[DW_DM_PRODUCTS_PRODUCTS_CKSUM$] INTEGER,[DW_DM_CART_DETAILS_CART_DETAILS_CKSUM$] INTEGER)","2009-03-05 17:21:42,734-0800 [Pool Worker-10] INFO\u2014Bulk loading staging table ST_Cart_Details from source file Cart Details.txt","2009-03-05 17:21:42,734-0800 [Pool Worker-10] DEBUG\u2014BULK INSERT S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Cart_Details FROM \u2018c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\Cart Details.txt.tmp\u2019 WITH (FORMATFILE.\u2018c\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\Cart Details.txt.format\u2019,FIRSTROW=1,ROWS_PER_BATCH=12438,DATAFILETYPE.\u2018widechar\u2019)","2009-03-05 17:21:42,796-0800 [Pool Worker-10] INFO\u2014Successfully loaded ST_Cart_Details","2009-03-05 17:21:42,796-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadStaging [ACORN: ST_Customers] for 1, status Running","2009-03-05 17:21:42,796-0800 [Pool Worker-10] INFO\u2014Starting LoadStaging [ACORN: ST_Customers]","2009-03-05 17:21:42,796-0800 [Pool Worker-10] DEBUG\u2014Deleting format files that might be lingering over from previous unsuccessful runprematurely terminated-Customers.txt.format.","2009-03-05 17:21:42,796-0800 [Pool Worker-10] DEBUG\u2014No files found with search pattern Customers.txt.format","2009-03-05 17:21:42,796-0800 [Pool Worker-10] DEBUG\u2014Deleting tmp files that might be lingering over from previous unsuccessful runprematurely terminated-Customers.txt.tmp.","2009-03-05 17:21:42,796-0800 [Pool Worker-10] DEBUG\u2014No files found with search pattern Customers.txt.tmp","2009-03-05 17:21:42,796-0800 [Pool Worker-10] INFO\u2014Preprocessing source file Customers.txt (c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\Customers.txt)","2009-03-05 17:21:42,796-0800 [Pool Worker-10] INFO\u2014Read 100 lines, wrote 100 lines","2009-03-05 17:21:42,796-0800 [Pool Worker-10] INFO\u2014Successfully preprocessed source file Customers.txt","2009-03-05 17:21:42,859-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Customers ([Loyalty_Card_ID$] Integer,[Age_Group$] NVarchar(8),[Gender$] NVarchar(6),[DW_DM_CUSTOMERS_CUSTOMERS_CKSUM$] INTEGER)","2009-03-05 17:21:42,921-0800 [Pool Worker-10] INFO\u2014Bulk loading staging table ST_Customers from source file Customers.txt","2009-03-05 17:21:42,921-0800 [Pool Worker-10] DEBUG\u2014BULK INSERT S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Customers FROM \u2018c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\Customers.txt.tmp\u2019 WITH (FORMATFILE=\u2018c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\Customers.txt.format\u2019,FIRSTROW=1,ROWS_PER_BATCH=100,DATAFI LETYPE=\u2018widechar\u2019)","2009-03-05 17:21:42,921-0800 [Pool Worker-10] INFO\u2014Successfully loaded ST_Customers","2009-03-05 17:21:42,921-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadStaging [ACORN: ST_Products] for 1, status Running","2009-03-05 17:21:42,921-0800 [Pool Worker-10] INFO\u2014Starting LoadStaging [ACORN: ST_Products]","2009-03-05 17:21:42,921-0800 [Pool Worker-10] DEBUG\u2014Deleting format files that might be lingering over from previous unsuccessful runprematurely terminated-Products.txt.format.","2009-03-05 17:21:42,921-0800 [Pool Worker-10] DEBUG\u2014No files found with search pattern Products.txt.format","2009-03-05 17:21:42,921-0800 [Pool Worker-10] DEBUG\u2014Deleting tmp files that might be lingering over from previous unsuccessful runprematurely terminated-Products.txt.tmp.","2009-03-05 17:21:42,921-0800 [Pool Worker-10] DEBUG\u2014No files found with search pattern Products.txt.tmp","2009-03-05 17:21:42,921-0800 [Pool Worker-10] INFO\u2014Preprocessing source file Products.txt (c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\Products.txt)","2009-03-05 17:21:42,921-0800 [Pool Worker-10] INFO\u2014Read 20 lines, wrote 20 lines","2009-03-05 17:21:42,921-0800 [Pool Worker-10] INFO\u2014Successfully preprocessed source file Products.txt","2009-03-05 17:21:42,968-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Products ([Product_ID$] Integer,[Category_ID$] Integer,[Product_Name$] NVarchar(10),[Category_Name$] NVarchar(9),[Unit_Price$] FLOAT,[DW_DM_PRODUCTS_PRODUCTS_CKSUM$] INTEGER)","2009-03-05 17:21:42,984-0800 [Pool Worker-10] INFO\u2014Bulk loading staging table ST_Products from source file Products.txt","2009-03-05 17:21:42,984-0800 [Pool Worker-10] DEBUG\u2014BULK INSERT S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Products FROM \u2018c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\Products.txt.tmp\u2019 WITH (FORMATFILE=\u2018c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\Products.txt.format\u2019,FIRSTROW=1,ROWS_PER_BATCH=20,DATAFILE TYPE=\u2018widechar\u2019)","2009-03-05 17:21:42,984-0800 [Pool Worker-10] INFO\u2014Successfully loaded ST_Products","2009-03-05 17:21:42,984-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadStaging [ACORN: ST_Shopping_Carts] for 1, status Running","2009-03-05 17:21:42,984-0800 [Pool Worker-10] INFO\u2014Starting LoadStaging [ACORN: ST_Shopping_Carts]","2009-03-05 17:21:42,984-0800 [Pool Worker-10] DEBUG\u2014Deleting format files that might be lingering over from previous unsuccessful runprematurely terminated-Shopping Carts.txt.format.","2009-03-05 17:21:42,984-0800 [Pool Worker-10] DEBUG\u2014No files found with search pattern Shopping Carts.txt.format","2009-03-05 17:21:42,984-0800 [Pool Worker-10] DEBUG\u2014Deleting tmp files that might be lingering over from previous unsuccessful runprematurely terminated-Shopping Carts.txt.tmp.","2009-03-05 17:21:42,984-0800 [Pool Worker-10] DEBUG\u2014No files found with search pattern Shopping Carts.txt.tmp","2009-03-05 17:21:42,984-0800 [Pool Worker-10] INFO\u2014Preprocessing source file Shopping Carts.txt (c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\Shopping Carts.txt)","2009-03-05 17:21:43,312-0800 [Pool Worker-10] INFO\u2014Read 3000 lines, wrote 3000 lines","2009-03-05 17:21:43,312-0800 [Pool Worker-10] INFO\u2014Successfully preprocessed source file Shopping Carts.txt","2009-03-05 17:21:43,343-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts ([Cart_ID$] Integer,[Store_ID$] Integer,[Loyalty_Card_ID$] Integer,[Sales_Date$] DateTime,[Sales_Date_Day_ID$] INTEGER,[DW_DM_CART_DETAILS_SHOPPING_CARTS_CKSUM$] INTEGER,[DW_DM_CUSTOMERS_CUSTOMERS_CKSUM$] INTEGER,[DW_DM_STORES_STORES_CKSUM$] INTEGER)","2009-03-05 17:21:43,375-0800 [Pool Worker-10] INFO\u2014Bulk loading staging table ST_Shopping_Carts from source file Shopping Carts.txt","2009-03-05 17:21:43,375-0800 [Pool Worker-10] DEBUG\u2014BULK INSERT S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts FROM \u2018c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\Shopping Carts.txt.tmp\u2019 WITH (FORMATFILE=\u2018c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\ Shopping Carts.txt.format\u2019,FIRSTROW=1,ROWS_PER_BATCH=3000,DATAFILETYPE=\u2018widechar\u2019)","2009-03-05 17:21:43,406-0800 [Pool Worker-10] INFO\u2014Successfully loaded ST_Shopping_Carts","2009-03-05 17:21:43,406-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadStaging [ACORN: ST_Stores] for 1, status Running","2009-03-05 17:21:43,406-0800 [Pool Worker-10] INFO\u2014Starting LoadStaging [ACORN: ST_Stores]","2009-03-05 17:21:43,406-0800 [Pool Worker-10] DEBUG\u2014Deleting format files that might be lingering over from previous unsuccessful runprematurely terminated-Stores.txt.format.","2009-03-05 17:21:43,406-0800 [Pool Worker-10] DEBUG\u2014No files found with search pattern Stores.txt.format","2009-03-05 17:21:43,406-0800 [Pool Worker-10] DEBUG\u2014Deleting tmp files that might be lingering over from previous unsuccessful runprematurely terminated-Stores.txt.tmp.","2009-03-05 17:21:43,406-0800 [Pool Worker-10] DEBUG\u2014No files found with search pattern Stores.txt.tmp","2009-03-05 17:21:43,406-0800 [Pool Worker-10] INFO\u2014Preprocessing source file Stores.txt (c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\Stores.txt)","2009-03-05 17:21:43,421-0800 [Pool Worker-10] INFO\u2014Read 100 lines, wrote 100 lines","2009-03-05 17:21:43,421-0800 [Pool Worker-10] INFO\u2014Successfully preprocessed source file Stores.txt","2009-03-05 17:21:43,453-0800 [Pool Worker-10] DEBUG\u2014CREATE TABLE S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Stores ([Store_ID$] Integer,[Region$] NVarchar(5),[City$] NVarchar(15),[Type$] NVarchar(11),[DW_DM_STORES_STORES_CKSUM$] INTEGER)","2009-03-05 17:21:43,468-0800 [Pool Worker-10] INFO\u2014Bulk loading staging table ST_Stores from source file Stores.txt","2009-03-05 17:21:43,468-0800 [Pool Worker-10] DEBUG\u2014BULK INSERT S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Stores FROM \u2018c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data\\Stores.txt.tmp\u2019 WITH (FORMATFILE=\u2018c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data \\Stores.txt.format\u2019,FIRSTROW=1,ROWS_PER_BATCH=100,DATAFILET YPE=\u2018widechar\u2019)","2009-03-05 17:21:43,468-0800 [Pool Worker-10] INFO\u2014Successfully loaded ST_Stores","2009-03-05 17:21:43,500-0800 [Pool Worker-10] INFO\u2014Replacing unknown keys in ST_Cart_Details","2009-03-05 17:21:43,531-0800 [Pool Worker-10] INFO\u2014Replacing unknown keys in ST_Customers","2009-03-05 17:21:43,546-0800 [Pool Worker-10] INFO\u2014Replacing unknown keys in ST_Products","2009-03-05 17:21:43,562-0800 [Pool Worker-10] INFO\u2014Replacing unknown keys in ST_Shopping_Carts","2009-03-05 17:21:43,578-0800 [Pool Worker-10] INFO\u2014Replacing unknown keys in ST_Stores","2009-03-05 17:21:43,828-0800 [Pool Worker-10] INFO\u2014Updating checksums","2009-03-05 17:21:43,828-0800 [Pool Worker-10] DEBUG\u2014UPDATE S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Cart_Details SET DW_DM_CART_DETAILS_SHOPPING_CARTS_CKSUM$=BINARY_CHECKSUM(Cart_ID$),DW_DM_PRODUCTS_PRODUCTS_CKSUM$=BINARY_CHECKSUM(Product_ID$),DW_DM_CART_DETAILS_CART_DETAILS_CKSUM$=BINARY_CHECKSUM(Cart_ID$,Product_ID$,Quantity$)","2009-03-05 17:21:43,875-0800 [Pool Worker-10] INFO\u2014Updated 12438 rows","2009-03-05 17:21:43,875-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadStaging [ACORN: ST_Cart_Details] for 1, status Complete","2009-03-05 17:21:43,875-0800 [Pool Worker-10] INFO\u2014Finished LoadStaging [ACORN: ST_Cart_Details]","2009-03-05 17:21:43,921-0800 [Pool Worker-10] INFO\u2014Updating checksums","2009-03-05 17:21:43,921-0800 [Pool Worker-10] DEBUG\u2014UPDATE S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Customers SET DW_DM_CUSTOMERS_CUSTOMERS_CKSUM$=BINARY_CHECKSUM(Loyalty_Card_ID$,Age_Group$,Gender$)","2009-03-05 17:21:43,953-0800 [Pool Worker-10] INFO\u2014Updated 100 rows","2009-03-05 17:21:43,953-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadStaging [ACORN: ST_Customers] for 1, status Complete","2009-03-05 17:21:43,968-0800 [Pool Worker-10] INFO\u2014Finished LoadStaging [ACORN: ST_Customers]","2009-03-05 17:21:44,000-0800 [Pool Worker-10] INFO\u2014Updating checksums","2009-03-05 17:21:44,015-0800 [Pool Worker-10] DEBUG\u2014UPDATE S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Products SET DW_DM_PRODUCTS_PRODUCTS_CKSUM$=BINARY_CHECKSUM(Product_ID$,Category_ID$,Product_Name$,Category_Name$)","2009-03-05 17:21:44,015-0800 [Pool Worker-10] INFO\u2014Updated 20 rows","2009-03-05 17:21:44,015-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadStaging [ACORN: ST_Products] for 1, status Complete","2009-03-05 17:21:44,031-0800 [Pool Worker-10] INFO\u2014Finished LoadStaging [ACORN: ST_Products]","2009-03-05 17:21:44,062-0800 [Pool Worker-10] INFO\u2014Updating checksums","2009-03-05 17:21:44,062-0800 [Pool Worker-10] DEBUG\u2014UPDATE S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts SET DW_DM_CART_DETAILS_SHOPPING_CARTS_CKSUM$=BINARY_CHECKSUM(Cart_ID$,Store_ID$,Loyalty_Card_ID$,Sales_Date$),DW_DM_CUSTOMERS_CUSTOMERS_CKS UM$=BINARY_CHECKSUM(Loyalty_Card_ID$),DW_DM_STORES_STORES_CKSUM$=BINARY_CHECKSUM(Store_ID$)","2009-03-05 17:21:44,093-0800 [Pool Worker-10] INFO\u2014Updated 3000 rows","2009-03-05 17:21:44,093-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadStaging [ACORN: ST_Shopping_Carts] for 1, status Complete","2009-03-05 17:21:44,125-0800 [Pool Worker-10] INFO\u2014Finished LoadStaging [ACORN: ST_Shopping_Carts]","2009-03-05 17:21:44,171-0800 [Pool Worker-10] INFO\u2014Updating checksums","2009-03-05 17:21:44,171-0800 [Pool Worker-10] DEBUG\u2014UPDATE S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Stores SET DW_DM_STORES_STORES_CKSUM$=BINARY_CHECKSUM(Store_ID$,Region$,City$,Type$)","2009-03-05 17:21:44,671-0800 [Pool Worker-10] INFO\u2014Updated 100 rows","2009-03-05 17:21:44,671-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadStaging [ACORN: ST_Stores] for 1, status Complete","2009-03-05 17:21:44,671-0800 [Pool Worker-10] INFO\u2014Finished LoadStaging [ACORN: ST_Stores]","2009-03-05 17:21:44,671-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadStaging [ACORN] for 1, status Complete","2009-03-05 17:21:44,687-0800 [Pool Worker-10] INFO\u2014Finished LoadStaging [ACORN]","2009-03-05 17:21:44,687-0800 [Pool Worker-10] INFO\u2014Elapsed Time=0 minutes, 2 seconds for: LoadStaging c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data 1 loadgroup=ACORN databasepath=c:\\SMI\\Data\\389a3dee-ce29-4e42-90ad-44970093f745\\data numrows=\u22121","2009-03-05 17:21:44,687-0800 [Pool Worker-10] INFO\u2014Starting: LoadWarehouse 1 loadgroup=ACORN","2009-03-05 17:21:44,687-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN] for 1, status Running","2009-03-05 17:21:45,031-0800 [Pool Worker-10] INFO\u2014Starting LoadWarehouse [ACORN]","2009-03-05 17:21:45,031-0800 [Pool Worker-10] DEBUG\u2014SELECT COUNT(*) FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Cart_Details","2009-03-05 17:21:45,031-0800 [Pool Worker-10] DEBUG\u2014SELECT COUNT(*) FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Customers","2009-03-05 17:21:45,031-0800 [Pool Worker-10] DEBUG\u2014SELECT COUNT(*) FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Products","2009-03-05 17:21:45,031-0800 [Pool Worker-10] DEBUG\u2014SELECT COUNT(*) FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts","2009-03-05 17:21:45,046-0800 [Pool Worker-10] DEBUG\u2014SELECT, COUNT(*) FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Stores","2009-03-05 17:21:45,046-0800 [Pool Worker-10] DEBUG\u2014Order of loading dimension tables: [Cart_Details Shopping_Carts, Cart_Details Cart_Details, Customers Customers, Products Products, Stores Stores]","2009-03-05 17:21:45,046-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Cart_Details Shopping_Carts] for 1, status Running","2009-03-05 17:21:45,046-0800 [Pool Worker-10] INFO\u2014Starting LoadWarehouse [ACORN: Cart_Details Shopping_Carts]","2009-03-05 17:21:45,046-0800 [Pool Worker-10] INFO\u2014Probing staging table ST_Cart_Details for DISTINCT to load Cart_Details Shopping_Carts","2009-03-05 17:21:45,046-0800 [Pool Worker-10] DEBUG\u2014","SELECT TOP 1 Cart_ID$,COUNT(*)","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Cart_Details B","GROUP BY Cart_ID$","HAVING COUNT(*)>1","2009-03-05 17:21:45,406-0800 [Pool Worker-10] INFO\u2014Not distinct","2009-03-05 17:21:45,406-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Cart_Details Shopping_Carts from staging table ST_Cart_Details","2009-03-05 17:21:45,406-0800 [Pool Worker-10] DEBUG\u2014INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CA RTS (Cart_ID$,ST_Shopping_Carts_CKSUM$,LOAD_ID,ST_Cart_Details_CKSUM$)","SELECT B.Cart_ID$,0,1, MAX(B.DW_DM_CART_DETAILS_SHOPPING_CARTS_CKSUM$)","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Cart_Details B","WHERE NOT EXISTS\n\n","GROUP BY B.Cart_ID$","2009-03-05 17:21:45,453-0800 [Pool Worker-10] INFO\u2014[INSERTDT:1:Cart_Details Shopping_Carts:ST_Cart_Details:2976:[Cart ID]] 2976 rows inserted","2009-03-05 17:21:45,453-0800 [Pool Worker-10] INFO\u2014Updating surrogate keys for load id 1 in dimension table Cart_Details Shopping_Carts","2009-03-05 17:21:45,453-0800 [Pool Worker-10] INFO\u2014Probing staging table ST_Shopping_Carts for DISTINCT to load Cart_Details Shopping_Carts","2009-03-05 17:21:45,453-0800 [Pool Worker-10] DEBUG\u2014","SELECT TOP 1 Cart_ID$,COUNT(*)","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts B","GROUP BY Cart_ID$","HAVING COUNT(*)>1","2009-03-05 17:21:45,562-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_DM_CART_DETAILS_SHOPPING_CARTSCART_DETAILSDCART_IDCART_D ETAILSDST_SHOPPING_CARTS_CKSUM ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CA RTS (Cart_ID$,ST_Shopping_Carts_CKSUM$)","2009-03-05 17:21:45,828-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_ST_Shopping_CartsCART_DETAILSDCART_IDCART_DETAILSDDW_DM_CART_D ETAILS_SHOPPING_CARTS_CKSUM ON S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts (Cart_ID$,DW_DM_CART_DETAILS_SHOPPING_CARTS_CKSUM$)","2009-03-05 17:21:46,031-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Cart_Details Shopping_Carts from staging table ST_Shopping_Carts","2009-03-05 17:21:46,031-0800 [Pool Worker-10] DEBUG\u2014INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CA RTS (Cart_ID$,Store_ID$,Loyalty_Card_ID$,Sales_Date$,ST_Cart_Details_CKSUM$,LOAD_ID,ST_Shopping_Carts_CKSUM$)","SELECT B.Cart_ID$,B.Store_ID$,B.Loyalty_Card_ID$,B.Sales_Date$,0,1, B.DW_DM_CART_DETAILS_SHOPPING_CARTS_CKSUM$","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts B","WHERE NOT EXISTS\n\n","2009-03-05 17:21:46,046-0800 [Pool Worker-10] INFO\u2014[INSERTDT:1:Cart_Details Shopping_Carts:ST_Shopping_Carts:24:[Sales Date, Loyalty Card ID, Cart ID, Store ID]] 24 rows inserted","2009-03-05 17:21:46,046-0800 [Pool Worker-10] INFO\u2014Updating table DW_DM_CART_DETAILS_SHOPPING_CARTS from staging table ST_Shopping_Carts","2009-03-05 17:21:46,046-0800 [Pool Worker-10] DEBUG\u2014UPDATE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CARTS SET LOAD_ID=1,Store_ID$=B.Store_ID$,Loyalty_Card_ID$=B.Loyalty_Card_ID$,Sales_Date$=B.Sales_Date$,ST_Shopping_Carts_CKSUM$=B.DW_DM_CART_DETAILS_SHOPPING_CA RTS_CKSUM$","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CA RTS A","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts B ON A.Cart_ID$=B.Cart_ID$ AND A.ST_Shopping_Carts_CKSUM$< >B.DW_DM_CART_DETAILS_SHOPPING_CARTS_CKS UM$","2009-03-05 17:21:46,250-0800 [Pool Worker-10] INFO\u2014[UPDATEDT:1:Cart_Details Shopping_Carts:ST_Shopping_Carts:2976:[Sales Date, Loyalty Card ID, Store ID]] 2976 rows affected","2009-03-05 17:21:46,250-0800 [Pool Worker-10] INFO\u2014Updating surrogate keys for load id 1 in dimension table Cart_Details Shopping_Carts","2009-03-05 17:21:46,250-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_DM_CART_DETAILS_SHOPPING_CARTSCART_DETAILSDSHOPPING_CART S_13875573 ON S_N389a3 dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CARTS (Shopping_Carts_13875573$)","2009-03-05 17:21:46,328-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_DM_CART_DETAILS_SHOPPING_CARTSCART_DETAILSDCART_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CA RTS (Cart_ID$) INCLUDE (Shopping_Carts_13875573$)","2009-03-05 17:21:46,406-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Cart_Details Shopping_Carts] for 1, status Complete","2009-03-05 17:21:46,437-0800 [Pool Worker-10] INFO\u2014Finished LoadWarehouse [ACORN: Cart_Details Shopping_Carts]","2009-03-05 17:21:46,437-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Cart_Details Cart_Details] for 1, status Running","2009-03-05 17:21:46,484-0800 [Pool Worker-10] INFO\u2014Starting LoadWarehouse [ACORN: Cart_Details Cart_Details]","2009-03-05 17:21:46,484-0800 [Pool Worker-10] INFO\u2014Probing staging table ST_Cart_Details for DISTINCT to load Cart_Details Cart_Details","2009-03-05 17:21:46,484-0800 [Pool Worker-10] DEBUG\u2014","SELECT TOP 1 Cart_ID$,Product_ID$,COUNT(*)","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Cart_Details B","GROUP BY. Cart_ID$,Product_ID$","HAVING COUNT(*)>1","2009-03-05 17:21:46,546-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_DM_CART_DETAILS_CART_DETAILSCART_DETAILSDCART_IDCART_DET AILSDPRODUCT_IDCART_DETAILSDST_CART_DETAILS_CKSUM ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_CART_DETAILS (Cart_ID$,Product_ID$,ST_Cart_Details_CKSUM$)","2009-03-05 17:21:46,578-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_ST_Cart_DetailsCART_DETAILSDCART_IDCART_DETAILSDPRODUCT_IDCART_DETAILSDDW_DM_CART_DETAILS_CART_DETAILS_CKSUM ON S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Cart_Details (Cart_ID$,Product_ID$,DW_DM_CART_DETAILS_CART_DETAILS_CKSUM$)","2009-03-05 17:21:46,781-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Cart_Details Cart_Details from staging table ST_Cart_Details","2009-03-05 17:21:46,781-0800 [Pool Worker-10] DEBUG\u2014INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_CART_DETAILS (Cart_ID$,Product_ID$,Quantity$,LOAD_ID,ST_Cart_Details_CKSUM$)","SELECT B.Cart_ID$,B.Product_ID$,B.Quantity$,1, B.DW_DM_CART_DETAILS_CART_DETAILS_CKSUM$","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Cart_Details B","WHERE NOT EXISTS\n\n","2009-03-05 17:21:46,984-0800 [Pool Worker-10] INFO\u2014[INSERTDT:1:Cart_Details Cart_Details:ST_Cart_Details:12438:[Quantity, Cart ID, Product ID]] 12438 rows inserted","2009-03-05 17:21:46,984-0800 [Pool Worker-10] INFO\u2014Updating surrogate keys for load id 1 in dimension table Cart_Details Cart_Details","2009-03-05 17:21:46,984-0800 [Pool Worker-10] DEBUG\u2014UPDATE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_CART_DETAILS SET Shopping_Carts_13875573 $=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CARTS.Shopping_Carts_13875573$","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_CART_DETAILS","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CA RTS ON DW_DM_CART_DETAILS_CART_DETAILS.Cart_ID$=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CARTS.Cart_ID$","WHERE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_CART_DETAILS.LOAD_ID=1","2009-03-05 17:21:47,156-0800 [Pool Worker-10] INFO\u201412438 rows updated","2009-03-05 17:21:47,156-0800 [Pool Worker-10] WARN\u2014Unable to load dimension table [Cart_Details Cart_Details] from staging table [ST_Shopping_Carts]: could not find columns in staging table that map to any dimension columns except for any potential references to natural keys","2009-03-05 17:21:47,156-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_DM_CART_DETAILS_CART_DETAILSCART_DETAILSDCART_DETAILS2003 51043 ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_CART_DETAILS (Cart_Details200351043$) INCLUDE (Shopping_Carts_13875573$)","2009-03-05 17:21:47,265-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_DM_CART_DETAILS_CART_DETAILSCART_DETAILSDCART_IDCART_DET AILSDPRODUCT_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_CART_DETAILS (Cart_ID$,Product_ID$) INCLUDE (Cart_Details200351043$,Shopping_Carts_13875573$)","2009-03-05 17:21:47,421-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_DM_CART_DETAILS_CART_DETAILSCART_DETAILSDCART_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_CART_DETAILS (Cart_ID$) INCLUDE (Cart_Details200351043$,Shopping_Carts_13875573$)","2009-03-05 17:21:47,515-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Cart_Details Cart_Details] for 1, status Complete","2009-03-05 17:21:47,531-0800 [Pool Worker-10] INFO\u2014Finished LoadWarehouse [ACORN: Cart_Details Cart_Details]","2009-03-05 17:21:47,531-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Customers Customers] for 1, status Running","2009-03-05 17:21:47,546-0800 [Pool Worker-10] INFO\u2014Starting LoadWarehouse [ACORN: Customers Customers]","2009-03-05 17:21:47,546-0800 [Pool Worker-10] WARN\u2014Unable to load dimension table [Customers Customers] from staging table [ST_Cart_Details]: natural keys not available at level Customers","2009-03-05 17:21:47,546-0800 [Pool Worker-10] INFO\u2014Probing staging table ST_Shopping_Carts for DISTINCT to load Customers Customers","2009-03-05 17:21:47,546-0800 [Pool Worker-10] DEBUG\u2014","SELECT TOP 1 Loyalty_Card_ID$,COUNT(*)","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts B","GROUP BY Loyalty_Card_ID$","HAVING COUNT(*)>1","2009-03-05 17:21:47,593-0800 [Pool Worker-10] INFO\u2014Not distinct","2009-03-05 17:21:47,593-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Customers Customers from staging table ST_Shopping_Carts","2009-03-05 17:21:47,593-0800 [Pool Worker-10] DEBUG\u2014INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS (Loyalty_Card_ID$,ST_Customers_CKSUM$,LOAD_ID,ST_Shopping_Carts_CKSUM$)","SELECT B.Loyalty_Card_ID$,0,1, MAX(B.DW_DM_CUSTOMERS_CUSTOMERS_CKSUM$)","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts B","WHERE NOT EXISTS\n\n","GROUP BY B.Loyalty_Card_ID$","2009-03-05 17:21:47,625-0800 [Pool Worker-10] INFO\u2014[INSERTDT:1:Customers Customers:ST_Shopping_Carts:100:[Loyalty Card ID]] 100 rows inserted","2009-03-05 17:21:47,625-0800 [Pool Worker-10] INFO\u2014Updating surrogate keys for load id 1 in dimension table Customers Customers","2009-03-05 17:21:47,625-0800 [Pool Worker-10] INFO\u2014Probing staging table ST_Customers for DISTINCT to load Customers Customers","2009-03-05 17:21:47,625-0800 [Pool Worker-10] DEBUG\u2014","SELECT TOP 1 Loyalty_Card_ID$,COUNT(*)","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Customers B","GROUP BY Loyalty_Card_ID$","HAVING COUNT(*)>1","2009-03-05 17:21:47,625-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_ST_CustomersCUSTOMERSDLOYALTY_CARD_IDCUSTOMERSDDW_DM_CUSTO MERS_CUSTOMERS_CKSUM ON S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Customers (Loyalty_Card_ID$,DW_DM_CUSTOMERS_CUSTOMERS_CKSUM$)","2009-03-05 17:21:47,640-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Customers Customers from staging table ST_Customers","2009-03-05 17:21:47,640-0800 [Pool Worker-10] DEBUG\u2014INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS (Loyalty_CardID$,Age_Group$,Gender$,ST_Shopping_Carts_CKSUM$,LOAD_ID,ST_Custo mers_CKSUM$)","SELECT B.Loyalty_Card_ID$,B.Age_Group$,B.Gender$,0,1, B.DW_DM_CUSTOMERS_CUSTOMERS_CKSUM$","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Customers B","WHERE NOT EXISTS\n\n","2009-03-05 17:21:47,656-0800 [Pool Worker-10] INFO\u2014[INSERTDT:1:Customers Customers:ST_Customers:0:[Loyalty Card ID, Age Group, Gender]] 0 rows inserted","2009-03-05 17:21:47,656-0800 [Pool Worker-10] INFO\u2014Updating table DW_DM_CUSTOMERS_CUSTOMERS from staging table ST_Customers","2009-03-05 17:21:47,656-0800 [Pool Worker-10] DEBUG\u2014UPDATE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS SET LOAD_ID=1,Age_Group$=B.Age_Group$,Gender$=B.Gender$,ST_Customers_CKSUM$=B. DW_DM_CUSTOMERS_CUSTOMERS_CKSUM$","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS A","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Customers B ON A.Loyalty_Card_ID$=B.Loyalty_Card_ID$ AND A.ST_Customers_CKSUM$< >B.DW_DM_CUSTOMERS_CUSTOMERS_CKSUM$","2009-03-05 17:21:47,703-0800 [Pool Worker-10] INFO\u2014[UPDATEDT:1:Customers Customers:ST_Customers:100:[Age Group, Gender]] 100 rows affected","2009-03-05 17:21:47,703-0800 [Pool Worker-10] INFO\u2014Updating surrogate keys for load id 1 in dimension table Customers Customers","2009-03-05 17:21:47,703-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_DM_CUSTOMERS_CUSTOMERSCUSTOMERSDCUSTOMERS120094747 ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS (Customers 120094747$)","2009-03-05 17:21:47,734-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Customers Customers] for 1, status Complete","2009-03-05 17:21:47,734-0800 [Pool Worker-10] INFO\u2014Finished LoadWarehouse [ACORN: Customers Customers]","2009-03-05 17:21:47,734-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Products Products] for 1, status Running","2009-03-05 17:21:47,734-0800 [Pool Worker-10] INFO\u2014Starting LoadWarehouse [ACORN: Products Products]","2009-03-05 17:21:47,734-0800 [Pool Worker-10] INFO\u2014Probing staging table ST_Cart_Details for DISTINCT to load Products Products","2009-03-05 17:21:47,734-0800 [Pool Worker-10] DEBUG\u2014","SELECT TOP 1 Product_ID$,COUNT(*)","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Cart_Details B","GROUP BY Product_ID$","HAVING COUNT(*)>1","2009-03-05 17:21:47,750-0800 [Pool Worker-10] INFO\u2014Not distinct","2009-03-05 17:21:47,750-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Products Products from staging table ST_Cart_Details","2009-03-05 17:21:47,750-0800 [Pool Worker-10] DEBUG INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_PRODUCTS_PRODUCTS (Product_ID$,ST_Products_CKSUM$,LOAD_ID,ST_Cart_Details_CKSUM$)","SELECT B.Product_ID$,0,1, MAX(B.DW_DM_PRODUCTS_PRODUCTS_CKSUM$)","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Cart_Details B","WHERE NOT EXISTS\n\n","GROUP BY B.Product_ID$","2009-03-05 17:21:47,765-0800 [Pool Worker-10] INFO\u2014[INSERTDT:1:Products Products:ST_Cart_Details:20:[Product ID]] 20 rows inserted","2009-03-05 17:21:47,765-0800 [Pool Worker-10] INFO\u2014Updating surrogate keys for load id 1 in dimension table Products Products","2009-03-05 17:21:47,765-0800 [Pool Worker-10] INFO\u2014Probing staging table ST_Products for DISTINCT to load Products Products","2009-03-05 17:21:47,765-0800 [Pool Worker-10] DEBUG\u2014","SELECT TOP 1 Product_ID$,COUNT(*)","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Products B","GROUP BY Product_ID$","HAVING COUNT(*)>1","2009-03-05 17:21:47,843-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_ST_ProductsPRODUCTSDPRODUCT_IDPRODUCTSDDW_DM_PRODUCTS_PRODU CTS_CKSUM ON S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Products (Product_ID$,DW_DM_PRODUCTS_PRODUCTS_CKSUM$)","2009-03-05 17:21:47,890-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Products Products from staging table ST_Products","2009-03-05 17:21:47,890-0800 [Pool Worker-10] DEBUG\u2014INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_PRODUCTS_PRODUCTS (Product_ID$,Category_ID$,Product_Name$,Category_Name$,ST_Cart_Details_CKSUM$,LOAD_ID,ST_Products_CKSUM$)","SELECT B.Product_ID$,B.Category_ID$,B.Product_Name$,B.Category_Name$,0,1, B.DW_DM_PRODUCTS_PRODUCTS_CKSUM$","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Products B","WHERE NOT EXISTS\n\n","2009-03-05 17:21:47,890-0800 [Pool Worker-10] INFO\u2014[INSERTDT:1:Products Products:ST_Products:0:[Product Name, Category ID, Category Name, Product ID]] 0 rows inserted","2009-03-05 17:21:47,890-0800 [Pool Worker-10] INFO\u2014Updating table DW_DM_PRODUCTS_PRODUCTS from staging table ST_Products","2009-03-05 17:21:47,890-0800 [Pool Worker-10] DEBUG\u2014UPDATE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_PRODUCTS_PRODUCTS SET LOAD_ID=1,Category_ID$=B.Category_ID$,Product_Name$.B.Product_Name$,Category_Na me$=B.Category_Name$,ST_Products_CKSUM$=B.DW_DM_PRODUCTS_PRODUCTS_CK SUM$","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_PRODUCTS_PRODUCTS A","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Products B ON A.Product_ID$=B.Product_ID$ AND A.ST_Products_CKSUM$< >B.DW_DM_PRODUCTS_PRODUCTS_CKSUM$","2009-03-05 17:21:47,906-0800 [Pool Worker-10] INFO\u2014[UPDATEDT:1:Products Products:ST_Products:20:[Product Name, Category ID, Category Name]] 20 rows affected","2009-03-05 17:21:47,906-0800 [Pool Worker-10] INFO\u2014Updating surrogate keys for load id 1 in dimension table Products Products","2009-03-05 17:21:47,906-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_DM_PRODUCTS_PRODUCTSPRODUCTSDPRODUCTS1249892458 ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_PRODUCTS_PRODUCTS (Products 1249892458$)","2009-03-05 17:21:47,937-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Products Products] for 1, status Complete","2009-03-05 17:21:47,937-0800 [Pool Worker-10] INFO\u2014Finished LoadWarehouse [ACORN: Products Products]","2009-03-05 17:21:47,937-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Stores Stores] for 1, status Running","2009-03-05 17:21:47,937-0800 [Pool Worker-10] INFO\u2014Starting LoadWarehouse [ACORN: Stores Stores]","2009-03-05 17:21:47,937-0800 [Pool Worker-10] WARN\u2014Unable to load dimension table [Stores Stores] from staging table [ST_Cart_Details]: natural keys not available at level Stores","2009-03-05 17:21:47,937-0800 [Pool Worker-10] INFO\u2014Probing staging table ST_Shopping_Carts for DISTINCT to load Stores Stores","2009-03-05 17:21:47,937-0800 [Pool Worker-10] DEBUG\u2014","SELECT TOP 1 Store_ID$,COUNT(*)","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts B","GROUP BY Store_ID$","HAVING COUNT(*)>1","2009-03-05 17:21:47,937-0800 [Pool Worker-10] INFO\u2014Not distinct","2009-03-05 17:21:47,937-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Stores Stores from staging table ST_Shopping_Carts","2009-03-05 17:21:47,937-0800 [Pool Worker-10] DEBUG\u2014INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES (Store_ID$,ST_Stores_CKSUM$,LOAD_ID,ST_Shopping_Carts_CKSUM$)","SELECT B.Store_ID$,,, MAX(B.DW_DM_STORES_STORES_CKSUM$)","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts B","WHERE NOT EXISTS\n\n","GROUP BY B.Store_ID$","2009-03-05 17:21:47,984-0800 [Pool Worker-10] INFO\u2014[INSERTDT:1:Stores Stores:ST_Shopping_Carts:100:[Store ID]] 100 rows inserted","2009-03-05 17:21:47,984-0800 [Pool Worker-10] INFO\u2014Updating surrogate keys for load id 1 in dimension table Stores Stores","2009-03-05 17:21:47,984-0800 [Pool Worker-10] INFO\u2014Probing staging table ST_Stores for DISTINCT to load Stores Stores","2009-03-05 17:21:47,984-0800 [Pool Worker-10] DEBUG\u2014","SELECT TOP 1 Store_ID$,COUNT(*)","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Stores B","GROUP BY Store_ID$","HAVING COUNT(*)>1","2009-03-05 17:21:48,015-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_ST_StoresSTORESDSTORE_IDSTORESDDW_DM_STORES_STORES_CKSUM ON S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Stores (Store_ID$,DW_DM_STORES_STORES_CKSUM$)","2009-03-05 17:21:48,031-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Stores Stores from staging table ST_Stores","2009-03-05 17:21:48,031-0800 [Pool Worker-10] DEBUG\u2014INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES (Store_ID$,Region$,City$,Type$,ST_Shopping_Carts_CKSUM$,LOAD_ID,ST_Stores_CKSU M$)","SELECT B.Store_ID$,B.Region$,B.City$,B.Type$,0,1, B.DW_DM_STORES_STORES_CKSUM$","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Stores B","WHERE NOT EXISTS\n\n","2009-03-05 17:21:48,046-0800 [Pool Worker-10] INFO\u2014[INSERTDT:1:Stores Stores:ST_Stores:0:[Region, Type, Store ID, City]] 0 rows inserted","2009-03-05 17:21:48,046-0800 [Pool Worker-10] INFO\u2014Updating table DW_DM_STORES_STORES from staging table ST_Stores","2009-03-05 17:21:48,046-0800 [Pool Worker-10] DEBUG\u2014UPDATE S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES SET LOAD_ID=1,Region$=B.Region$,City$=B.City$,Type$=B.Type$,ST_Stores_CKSUM$=B.D W_DM_STORES_STORES_CKSUM$","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES A","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Stores B ON A.Store_ID$=B.Store_ID$ AND A.ST_Stores_CKSUM$< >B.DW_DM_STORES_STORES_CKSUM$","2009-03-05 17:21:48,093-0800 [Pool Worker-10] INFO\u2014[UPDATEDT:1:Stores Stores:ST_Stores:100:[Region, Type, City]] 100 rows affected","2009-03-05 17:21:48,093-0800 [Pool Worker-10] INFO\u2014Updating surrogate keys for load id 1 in dimension table Stores Stores","2009-03-05 17:21:48,093-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_DM_STORES_STORESSTORESDSTORES1543357431 ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES (Stores 1543357431$)","2009-03-05 17:21:48,140-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Stores Stores] for 1, status Complete","2009-03-05 17:21:48,140-0800 [Pool Worker-10] INFO\u2014Finished LoadWarehouse [ACORN: Stores Stores]","2009-03-05 17:21:48,140-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Cart_Details Day Products Customers Stores Fact] for 1, status Running","2009-03-05 17:21:48,140-0800 [Pool Worker-10] INFO\u2014Starting LoadWarehouse [ACORN: Cart_Details Day Products Customers Stores Fact]","2009-03-05 17:21:48,140-0800 [Pool Worker-10] INFO\u2014Deleting any records from table Cart_Details Day Products Customers Stores Fact with same load ID","2009-03-05 17:21:48,140-0800 [Pool Worker-10] DEBUG\u2014DELETE","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES","WHERE LOAD_ID=1","2009-03-05 17:21:48,156-0800 [Pool Worker-10] INFO\u20140 rows deleted","2009-03-05 17:21:48,156-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Cart_Details Day Products Customers Stores Fact from staging table ST_Cart_Details","2009-03-05 17:21:48,156-0800 [Pool Worker-10] DEBUG\u2014INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES (DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES.Cart_Details$Cart_ID$,DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES.Cart_Details$Pro duct_ID$,DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES.Products$ Product_ID$,DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES.Time$ Day_ID$,DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES.Cart_ID$, DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES.Product_ID$,DW_S F_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES.Quantity$,DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES.Cart_Details$Shopping_Carts_13875573$,DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES.Cart_Details$C art_Details200351043$,DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES.Products$Products1249892458$,DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOM ERS_STORES.Time$Week_ID$,Time$Month_ID$,Time$Quarter_ID$,DW_SF_CART_DETA ILS_DAY_PRODUCTS_CUSTOMERS_STORES.Stores$Stores1543357431$,DW_SF_CART DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES.Customers$Customers120094747$,S tores$Store_ID$,Time$Sales_Date_Day_ID$,Customers$Loyalty_Card_ID$, LOAD_ID)","SELECT B.Cart_ID$,B.Product_ID$,B.Product_ID$,39870,B.Cart_ID$,B.Product_ID$,B.Quantity$,S_N 389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CARTS Shopping_Carts_13875573 $,S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_CART_DETAILS.Cart_Details200351043$,S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_PRODUCTS_PRODUCTS.Products 1249892458$,dbo.DW_DM_TIME_DAY.WeekID$,dbo.DW_DM_TIME_DAY.Month_ID$,dbo.DW_DM_TIME_DAY.Quarter_ID$,S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES.Stores1543357431 $,S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS.Customers120094747$,ST_Shopping_Carts$.Store_ID$,ST_Shopping_Carts$.Sales_Date_Day_ID$,ST_Shopping_Carts$.Loyalty_Card_ID$,1","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Cart_Details B","LEFT OUTER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts ST_Shopping_Carts$ ON B.Cart_ID$=ST_Shopping_Carts$.Cart_ID$","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CARTS ON B.Cart_ID$=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CARTS.Cart_ID$","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_CART_DETAILS ON B.Cart_ID$=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_CART_DETAILS.Cart_ID$ AND B.Product_ID$=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_CART_DETAILS.Product_ID$","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_PRODUCTS_PRODUCTS ON B.Product_ID$=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_PRODUCTS_PRODUCTS.Product_ID$","INNER JOIN dbo.DW_DM_TIME_DAY ON 39870=dbo.DW_DM_TIME_DAY.Day_ID$","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES ON ST_Shopping_Carts$.Store_ID$=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES.Store_ID$","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS ON ST_Shopping_Carts$.Loyalty_Card_ID$=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS.Loyalty_Card_ID$","2009-03-05 17:21:48,343-0800 [Pool Worker-10] INFO\u2014[INSERTF:1:Cart_Details Day Products Customers Stores Fact:ST_Cart_Details:12438:[Quantity, Cart ID, Product ID]] 12438 rows inserted","2009-03-05 17:21:48,343-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORESCUSTOMERS DCUSTOMERS 120094747 ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES (Customers$Customers 120094747$)","2009-03-05 17:21:48,421-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORESPRODUCTSDPRODUCTS 1249892458 ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES (Products$Products1249892458$)","2009-03-05 17:21:48,453-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORESTIMEDDAY_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES (Time$Day_ID$)","2009-03-05 17:21:48,468-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORESTIMEDWEEK_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES (Time$Week_ID$)","2009-03-05 17:21:48,515-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORESTIMEDMONTHID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES (Time$Month_ID$)","2009-03-05 17:21:48,546-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORESTIMEDQUART ER_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CART_DETAILS_DAY_PRODUCTS CUSTOMERS_STORES (Time$Quarter_ID$)","2009-03-05 17:21:48,562-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORESSTORESDSTORES1543357431 ON S_N389a3dee_ce29_4e4290ad_44970093f745.DW_SF_CART_DETAILS_DAY_PRODUCTS CUSTOMERS_STORES (Stores$Stores1543357431$)","2009-03-05 17:21:48,609-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORESCART_DETAILSDCART_DETAILS200351043 ON S_N389a3dee_ce29_4e4290ad_44970093f745.DW_SF_CART_DETAILS_DAY_PRODUCTS CUSTOMERS_STORES (Cart_Details$Cart_Details200351043$)","2009-03-05 17:21:48,656-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORESCART_DETAILSDSHOPPING_CARTS_13875573 ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES (Cart_Details$Shopping_Carts_13875573$)","2009-03-05 17:21:48,671-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORESLOAD_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CART_DETAILS_DAY_PRODUCTS_CUSTOMERS_STORES (LOAD_ID)","2009-03-05 17:21:48,734-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Cart_Details Day Products Customers Stores Fact] for 1, status Complete","2009-03-05 17:21:48,734-0800 [Pool Worker-10] INFO\u2014Finished LoadWarehouse [ACORN: Cart_Details Day Products Customers Stores Fact]","2009-03-05 17:21:48,734-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Shopping_Carts Day Customers Stores Fact] for 1, status Running","2009-03-05 17:21:48,734-0800 [Pool Worker-10] INFO\u2014Starting LoadWarehouse [ACORN: Shopping_Carts Day Customers Stores Fact]","2009-03-05 17:21:48,734-0800 [Pool Worker-10] INFO\u2014Deleting any records from table Shopping_Carts Day Customers Stores Fact with same load ID","2009-03-05 17:21:48,734-0800 [Pool Worker-10] DEBUG\u2014DELETE","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES","WHERE LOAD_ID=1","2009-03-05 17:21:48,750-0800 [Pool Worker-10] INFO\u20140 rows deleted","2009-03-05 17:21:48,750-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Shopping_Carts Day Customers Stores Fact from staging table ST_Shopping_Carts","2009-03-05 17:21:48,750-0800 [Pool Worker-10] DEBUG\u2014INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES (DWSF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES.Cart_Details$Cart_ID$,DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES.Customers$Loyalty_Card_ID$,DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES.Stores$Store_ID$,DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES.Time$Day_ID$,DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES.Cart_ID$,DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES.Loyalty_Card_ID$,DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES.Store_ID$,DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES.Time$Sales_Date_Day_ID$,DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES.Cart_Details$Shopping_Carts_13875573$,DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES.Time$Week_ID$,Time$Month_ID$,Time$Quarter_ID$,DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES.Stores$Stores1543357431$,DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES.Customers$Customers120094747$, LOAD_ID)","SELECT B.Cart_ID$,B.Loyalty_Card_ID$,B.Store_ID$,39870,B.Cart_ID$,B.Loyalty_Card_ID$,B.Store_ID$,B.Sales_Date_Day_ID$,S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CARTS.Shopping_Carts_13875573$,dbo.DW_DM_TIME_DAY.Wee k_ID$,dbo.DW_DM_TIME_DAY.Month_ID$,dbo.DW_DM_TIME_DAY.Quarter_ID$,S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES.Stores1543357431$,S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS.Customers120094747$,1","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Shopping_Carts B","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CARTS ON B.Cart_ID$=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CART_DETAILS_SHOPPING_CARTS.Cart_ID$","INNER JOIN dbo.DW_DM_TIME_DAY ON 39870=dbo.DW_DM_TIME_DAY.Day_ID$","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES ON B.Store_ID$=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES.Store_ID$","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS ON B.Loyalty_Card_ID$=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS.Loyalty_Card_ID$","2009-03-05 17:21:48,796-0800 [Pool Worker-10] INFO\u2014[INSERTF:1:Shopping_Carts Day Customers Stores Fact:ST_Shopping_Carts:3000:[Loyalty Card ID, Cart ID, Store ID]] 3000 rows inserted","2009-03-05 17:21:48,796-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORESCUSTOMERSDCUSTOMERS 120094747 ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES (Customers$Customers 120094747$)","2009-03-05 17:21:48,828-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORESTIMEDDAY_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES (Time$Day_ID$)","2009-03-05 17:21:48,843-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORESTIMEDWEEK_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES (Time$Week_ID$)","2009-03-05 17:21:48,890-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORESTIMEDMONTH_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES (Time$Month_ID$)","2009-03-05 17:21:48,921-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORESTIMEDQUARTER_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES (Time$Quarter_ID$)","2009-03-05 17:21:48,921-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORESSTORESDSTORES 1543357431 ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES (Stores$Stores1543357431$)","2009-03-05 17:21:48,953-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORESCART_DETAILSDSHOPPING_CARTS_13875573 ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES (Cart_Details$Shopping_Carts_13875573$)","2009-03-05 17:21:48,968-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORESLOAD_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_SHOPPING_CARTS_DAY_CUSTOMERS_STORES (LOAD_ID)","2009-03-05 17:21:48,984-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Shopping_Carts Day Customers Stores Fact] for 1, status Complete","2009-03-05 17:21:48,984-0800 [Pool Worker-10] INFO\u2014Finished LoadWarehouse [ACORN: Shopping_Carts Day Customers Stores Fact]","2009-03-05 17:21:48,984-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Products Day Fact] for 1, status Running","2009-03-05 17:21:48,984-0800 [Pool Worker-10] INFO\u2014Starting LoadWarehouse [ACORN: Products Day Fact]","2009-03-05 17:21:48,984-0800 [Pool Worker-10] INFO\u2014Deleting any records from table Products Day Fact with same load ID","2009-03-05 17:21:48,984-0800 [Pool Worker-10] DEBUG\u2014DELETE","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_PRODUCTS_DAY","WHERE LOAD_ID=1","2009-03-05 17:21:48,984-0800 [Pool Worker-10] INFO\u20140 rows deleted","2009-03-05 17:21:48,984-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Products Day Fact from staging table ST_Products","2009-03-05 17:21:48,984-0800 [Pool Worker-10] DEBUG\u2014INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_PRODUCTS_DAY (DW_SF_PRODUCTS_DAY.Products$Product_ID$,DW_SF_PRODUCTS_DAY.Time$Day_ID$,DW_SF_PRODUCTS_DAY.Product_ID$,DW_SF_PRODUCTS_DAY.Category_ID$,DW_SF_PRODUCTS_DAY.Unit_Price$,DW_SF_PRODUCTS_DAY.Products$Products1249892458$,DW_SF_PRODUCTS_DAY.Time$Week_ID$,Time$Month_ID$,Time$Quarter_ID$, LOAD_ID)","SELECT B.Product_ID$,39870,B.Product_ID$,B.Category_ID$,B.Unit_Price$,S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_PRODUCTS_PRODUCTS.Products1249892458$,dbo.DW_DM_TIME_DAY.Week_ID$,dbo.DW_DM_TIME_DAY.Month_ID$,dbo.DW_DM_TIME_DAY.Quarter_ID$,1","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Products B","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_PRODUCTS_PRODUCTS ON B.Product_ID$=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_PRODUCTS_PRODUCTS.Product_ID$","INNER JOIN dbo.DW_DM_TIME_DAY ON 39870=dbo.DW_DM_TIME_DAY.Day_ID$","2009-03-05 17:21:48,984-0800 [Pool Worker-10] INFO\u2014[INSERTF:1:Products Day Fact:ST_Products:20:[Category ID, Unit Price, Product ID]] 20 rows inserted","2009-03-05 17:21:49,000-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_PRODUCTS_DAYTIMEDDAY_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_PRODUCTS_DAY (Time$Day_ID$)","2009-03-05 17:21:49,015-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_PRODUCTS_DAYTIMEDWEEK_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_PRODUCTS_DAY (Time$Week_ID$)","2009-03-05 17:21:49,015-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_PRODUCTS_DAYTIMEDMONTH_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_PRODUCTS_DAY (Time$Month_ID$)","2009-03-05 17:21:49,031-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_PRODUCTS_DAYTIMEDQUARTER_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_PRODUCTS_DAY (Time$Quarter_ID$)","2009-03-05 17:21:49,031-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_PRODUCTS_DAYPRODUCTSDPRODUCTS 1249892458 ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_PRODUCTS_DAY (Products$Products 1249892458$)","2009-03-05 17:21:49,062-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_SF_PRODUCTS_DAYLOAD_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_PRODUCTS_DAY (LOAD_ID)","2009-03-05 17:21:49,062-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Products Day Fact] for 1, status Complete","2009-03-05 17:21:49,062-0800 [Pool Worker-10] INFO\u2014Finished LoadWarehouse [ACORN: Products Day Fact]","2009-03-05 17:21:49,078-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Customers Day Fact] for 1, status Running","2009-03-05 17:21:49,078-0800 [Pool Worker-10] INFO\u2014Starting LoadWarehouse [ACORN: Customers Day Fact]","2009-03-05 17:21:49,078-0800 [Pool Worker-10] INFO\u2014Deleting any records from table Customers Day Fact with same load ID","2009-03-05 17:21:49,078-0800 [Pool Worker-10] DEBUG\u2014DELETE","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CUSTOMERS_DAY","WHERE LOAD_ID=1","2009-03-05 17:21:49,093-0800 [Pool Worker-10] INFO\u20140 rows deleted","2009-03-05 17:21:49,093-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Customers Day Fact from staging table ST_Customers","2009-03-05 17:21:49,093-0800 [Pool Worker-10] DEBUG\u2014INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CUSTOMERS_DAY (DW_SF_CUSTOMERS_DAY.Customers$Loyalty_Card_ID$,DW_SF_CUSTOMERS_DAY.Time$Day_ID$,DW_SF_CUSTOMERS_DAY.Loyalty_Card_ID$,DW_SF_CUSTOMERS_DAY. Time$Week_ID$,Time$Month_ID$,Time$Quarter_ID$,DW_SF_CUSTOMERS_DAY.Customers$Customers120094747$, LOAD_ID)","SELECT B.Loyalty_Card_ID$,39870,B.Loyalty_Card_ID$,dbo.DW_DM_TIME_DAY.Week_ID$,dbo.DW_DM_TIME_DAY.Month_ID$,dbo.DW_DM_TIME_DAY.Quarter_ID$,S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS.Customers120094747$,1","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Customers B","INNER JOIN dbo.DW_DM_TIME_DAY ON 39870=dbo.DW_DM_TIME_DAY.Day_ID$","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS ON B.Loyalty_Card_ID$=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_CUSTOMERS_CUSTOMERS.Loyalty_Card_ID$","2009-03-05 17:21:49,093-0800 [Pool Worker-10] INFO\u2014[INSERTF:1:Customers Day Fact:ST_Customers:100:[Loyalty Card ID]] 100 rows inserted","2009-03-05 17:21:49,093-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CUSTOMERS_DAYCUSTOMERSDCUSTOMERS 120094747 ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CUSTOMERS_DAY (Customers$Customers 120094747$)","2009-03-05 17:21:49,140-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CUSTOMERS_DAYTIMEDDAY_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CUSTOMERS_DAY (Time$Day_ID$)","2009-03-05 17:21:49,140-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CUSTOMERS_DAYTIMEDWEEK_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CUSTOMERS_DAY (Time$Week_ID$)","2009-03-05 17:21:49,140-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CUSTOMERS_DAYTIMEDMONTH_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CUSTOMERS_DAY (Time$Month_ID$)","2009-03-05 17:21:49,171-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_CUSTOMERS_DAYTIMEDQUARTER_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CUSTOMERS_DAY (Time$Quarter_ID$)","2009-03-05 17:21:49,187-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_SF_CUSTOMERS_DAYLOAD_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_CUSTOMERS_DAY (LOAD_ID)","2009-03-05 17:21:49,187-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Customers Day Fact] for 1, status Complete","2009-03-05 17:21:49,187-0800 [Pool Worker-10] INFO\u2014Finished LoadWarehouse [ACORN: Customers Day Fact]","2009-03-05 17:21:49,187-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Stores Day Fact] for 1, status Running","2009-03-05 17:21:49,187-0800 [Pool Worker-10] INFO\u2014Starting LoadWarehouse [ACORN: Stores Day Fact]","2009-03-05 17:21:49,187-0800 [Pool Worker-10] INFO\u2014Deleting any records from table Stores Day Fact with same load ID","2009-03-05 17:21:49,187-0800 [Pool Worker-10] DEBUG\u2014DELETE","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_STORES_DAY","WHERE LOAD_ID=1","2009-03-05 17:21:49,187-0800 [Pool Worker-10] INFO\u20140 rows deleted","2009-03-05 17:21:49,187-0800 [Pool Worker-10] INFO\u2014Inserting new records into table Stores Day Fact from staging table ST_Stores","2009-03-05 17:21:49,187-0800 [Pool Worker-10] DEBUG\u2014INSERT","INTO S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_STORES_DAY (DW_SF_STORES_DAY.Stores$Store_ID$,DW_SF_STORES_DAY.Time$Day_ID$,DW_SF_STORES_DAY.Store_ID$,DW_SF_STORES_DAY.Time$Week_ID$,Time$Month_ID$,Time$Quarter_ID$,DW_SF_STORES_DAY.Stores$Stores1543357431$, LOAD_ID)","SELECT B.Store_ID$,39870,B.Store_ID$,dbo.DW_DM_TIME_DAY.Week_ID$,dbo.DW_DM_TIME_DAY.Month_ID$,dbo.DW_DM_TIME_DAY.Quarter_ID$,S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES.Stores1543357431$,1","FROM S_N389a3dee_ce29_4e42_90ad_44970093f745.ST_Stores B","INNER JOIN dbo.DW_DM_TIME_DAY ON 39870=dbo.DW_DM_TIME_DAY.Day_ID$","INNER JOIN S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES ON B.Store_ID$=S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_DM_STORES_STORES.Store_ID$","2009-03-05 17:21:49,203-0800 [Pool Worker-10] INFO\u2014[INSERTF:1:Stores Day Fact:ST_Stores:100:[Store ID]] 100 rows inserted","2009-03-05 17:21:49,203-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_STORESDAYTIMEDDAY_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_STORES_DAY (Time$Day_ID$)","2009-03-05 17:21:49,218-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_STORES_DAYTIMEDWEEK_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_STORES_DAY (Time$Week_ID$)","2009-03-05 17:21:49,234-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_STORES_DAYTIMEDMONTH_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_STORES_DAY (Time$Month_ID$)","2009-03-05 17:21:49,234-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_STORES_DAYTIMEDQUARTER_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_STORES_DAY (Time$Quarter_ID$)","2009-03-05 17:21:49,234-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX MX_DW_SF_STORES_DAYSTORESDSTORES 1543357431 ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_STORES_DAY (Stores$Stores1543357431$)","2009-03-05 17:21:49,281-0800 [Pool Worker-10] DEBUG\u2014CREATE INDEX DX_DW_SF_STORES_DAYLOAD_ID ON S_N389a3dee_ce29_4e42_90ad_44970093f745.DW_SF_STORES_DAY (LOAD_ID)","2009-03-05 17:21:49,312-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN: Stores Day Fact] for 1, status Complete","2009-03-05 17:21:49,312-0800 [Pool Worker-10] INFO\u2014Finished LoadWarehouse [ACORN: Stores Day Fact]","2009-03-05 17:21:49,312-0800 [Pool Worker-10] DEBUG\u2014Logging step LoadWarehouse [ACORN] for 1, status Complete","2009-03-05 17:21:49,328-0800 [Pool Worker-10] INFO\u2014Finished LoadWarehouse [ACORN]","2009-03-05 17:21:49,328-0800 [Pool Worker-10] INFO\u2014Elapsed Time=0 minutes, 4 seconds for: LoadWarehouse 1 loadgroup=ACORN","2009-03-05 17:21:49,328-0800 [Pool Worker-10] INFO\u2014Starting: ExecuteScriptGroup ACORN","2009-03-05 17:21:49,328-0800 [Pool Worker-10] WARN\u2014Empty script group: There are no scripts defined in script group ACORN","2009-03-05 17:21:49,328-0800 [Pool Worker-10] INFO\u2014Elapsed Time=0 minutes, 0 seconds for: ExecuteScriptGroup ACORN","Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding, the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed embodiments are illustrative and not restrictive."],"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION","EXAMPLE","Shopping Scenario","Additional Example","Data Example"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various embodiments of the invention are disclosed in the following detailed description and the accompanying drawings.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 10A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 10B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 10C"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 11A"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 11B"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 14A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 14B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 14C"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 15"}]},"DETDESC":[{},{}]}
