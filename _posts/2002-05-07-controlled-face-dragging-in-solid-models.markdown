---
title: Controlled face dragging in solid models
abstract: One or more embodiments of the invention provide a method, apparatus, and article of manufacture for modifying a three-dimensional model. A three-dimensional model is displayed in a computer implemented solid modeling system. A first face of the three-dimensional model is then selected. A first constraint that controls a behavior of a repositioning operation for the first face is specified. Once the face and constraint have been selected/specified, the three-dimensional model is modified by repositioning the selected first face, wherein the repositioning operation is constrained in accordance with the specified first constraint.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06867771&OS=06867771&RS=06867771
owner: Autodesk, Inc.
number: 06867771
owner_city: San Rafael
owner_country: US
publication_date: 20020507
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["U.S. patent application Ser. No. 10\/132,544, filed on Apr. 25, 2002, entitled \u201cFACE MODIFICATION TOOL\u201d, by Sha Wang, William L. Myers and John R. Wallace.","1. Field of the Invention","The present invention relates generally to three-dimensional modeling systems based on boundary representations, and in particular, to a method, apparatus, and article of manufacture for the controlled dragging of faces in boundary representations and solid bodies.","2. Description of the Related Art","The use of solid modeling application programs is well known in the art. In a 3D solid modeling system, a 3D model (also referred to as an object model) may be constructed, displayed, modified, etc. A solid model may be presented to the user by displaying the boundary of the model (referred to as a boundary representation or B-rep). Further, the boundary representation has multiple individual faces. To manipulate\/modify the model, a face of the boundary representation may be dragged\/repositioned using a cursor control device such as a mouse. However, when a single face is dragged, adjacent faces (i.e., faces that share common edges and vertices with the face being dragged) may become invalid. For example, an adjacent face that was originally planar may become non-planar when vertices shared between the dragged face and adjacent face are repositioned (such that the vertices of the adjacent face do not lie on the same plane any more).","Additionally, in prior art solid modeling application programs, the user cannot control how adjacent faces should be adjusted during a face dragging operation. For example, without input from the user, a solid modeling application program may adjust adjacent faces in a predetermined manner during a face dragging operation. Thus, the user is not provided with any option(s) and does not have the capability to control or elect between multiple different types of face dragging operations.","Accordingly, what is needed is a method, system, and article of manufacture for repositioning a face of a boundary representation while providing the user with options to control the repositioning operation.","One or more embodiments of the invention provide a method, apparatus, and article of manufacture for repositioning individual faces in a topological structure of boundary representation solid bodies, such as during the dragging of faces in solid bodies. The boundary representation solid bodies are facetted (i.e., all of the faces are planar and all face vertices lie on the same plane).","Two constraints control the behavior of the face repositioning operation. These two constraints are selectable by the user, who thus controls the outcome of the face repositioning operation.","The first constraint constrains the planes of the faces adjacent to the face being repositioned not to change (i.e., the slopes of adjacent faces remain fixed). The adjacent faces' edges and vertices may change, however, such as the faces may be stretched or shrunk.","The second constraint constrains the geometry of the face being repositioned to be fixed (i.e., the face is repositioned as rigid and only its location changes).","In the following description, reference is made to the accompanying drawings which form a part hereof, and which is shown, by way of illustration, several embodiments of the present invention. It is understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.","Overview","A method, apparatus, and article of manufacture provide for the ability to modify\/reposition a face of a three-dimensional model in a solid modeling system based on the boundary representation of the solid models. To control the face repositioning operation, the user is provided with two user selectable constraints. The first constraint allows the user to determine whether to constrain the planes of faces adjacent to the face being repositioned to be fixed. The second constraint allows the user to determine whether to constrain the geometry of the face being repositioned to be fixed.","Hardware and Software Environment",{"@attributes":{"id":"P-00034","num":"00034"},"figref":"FIG. 1","b":["100","102","104","106","100"]},"One or more embodiments of the invention are implemented by a computer-implemented solid modeling program , wherein the solid modeling program  is represented by a window displayed on the display device . Generally, the solid modeling program  comprises logic and\/or data embodied in or readable from a device, media, carrier, or signal, e.g., one or more fixed and\/or removable data storage devices  connected directly or indirectly to the computer , one or more remote devices coupled to the computer  via a data communications device, etc.","Those skilled in the art will recognize that the exemplary environment illustrated in  is not intended to limit the present invention. Indeed, those skilled in the art will recognize that other alternative environments may be used without departing from the scope of the present invention.","Computer-Implemented Solid Modeling Program",{"@attributes":{"id":"P-00038","num":"00038"},"figref":"FIG. 2","b":["108","108","200","202","204","206"]},"The Graphical User Interface  displays information to the operator and provides the functionality for the operator's interaction with the solid modeling program .","The Image Engine  processes the DWG files  and delivers the resulting graphics to the monitor  for display. In one or more embodiments, the Image Engine  provides a complete application programming interface (API) that allows other computer programs to interface to the solid modeling program  as needed.","The Database  is comprised of two separate types of databases: (1) a 3D database  known as the \u201c3D world space\u201d that stores 3D information; and (2) one or more 2D databases  known as the \u201c2D view ports\u201d that stores 2D information derived from the 3D information.","Object List",{"@attributes":{"id":"P-00043","num":"00043"},"figref":"FIG. 3","b":["300","208","300","302","304","306","300","208","304","300","208"]},"Operation of the Software Embodiment","One or more embodiments of the invention provides a new method within solid modeling program  for repositioning individual faces in a topological structure of boundary representation solid bodies, such as during the dragging (e.g., grip-point editing) of faces in solid bodies. Two constraints are introduced to control the behavior of the face move\/repositioning operation. The two constraints are selectable by the user (e.g., through a selectable option), who thus controls the outcome of the face repositioning operation.","The first constraint constrains the planes of faces adjacent to the face being repositioned not to change. Thus, while the edges and vertices of adjacent faces may change, the slopes of adjacent faces remain fixed. In other words, the adjacent faces may be stretched or shrunk on the same plane.","The second constraint constrains the geometry of the face being repositioned to be fixed. Thus, while the location of the face may change, the face (i.e., its size, rotation, etc) is repositioned as rigid.",{"@attributes":{"id":"P-00048","num":"00048"},"figref":["FIGS. 4A-4F","FIG. 4A","FIG. 4B","FIG. 4C"],"b":["400","402","402","402","404","402"]},{"@attributes":{"id":"P-00049","num":"00049"},"figref":["FIG. 4D","FIG. 4E"],"b":["402","402","402","404"]},{"@attributes":{"id":"P-00050","num":"00050"},"figref":"FIG. 4F","b":["402","404","402","400","406","400","408","402"]},"Logic of the Graphics Program",{"@attributes":{"id":"P-00052","num":"00052"},"figref":"FIG. 5","b":["108","108"]},"Generally, the flowchart begins by waiting at block  for an event (e.g., a mouse button click). It should be appreciated that, during this time, other operating system tasks, e.g., file, memory, and video tasks, etc., may also be carried out. When an event occurs, control passes to block  to identify the event. Based upon the event, as well as the current state of the graphics solid modeling program  determined in block , a new state is determined in block . In block , the logic transitions to the new state and performs any actions required for the transition. In block , the current state is set to the previously determined new state, and control returns to block  to wait for more input events.","The specific operations that ate performed by block  when transitioning between states will vary depending upon the current state and the event. The various operations required to implement and maintain the preferred embodiment of the present invention represent particular events handled by the logic. However, it should be appreciated that these operations represent merely a subset of all of the events handled by the computer .",{"@attributes":{"id":"P-00055","num":"00055"},"figref":"FIG. 6","b":["600","102","402","108","402"]},"At step , the user specifies whether the one or more of the constraints described above (referred to as first constraint and second constraint) are required to be satisfied. Such specifying may be performed by the user specifying (or selection of an option for) a constraint that controls the behavior for the repositioning operation. For example, the user may press the <SHIFT> or <CTRL> keys on the keyboard. If no key is pressed, the first constraint may not be required to be satisfied and the second constraint may be required to be satisfied. If the <SHIFT> key is pressed, it may indicate the first constraint is required to be satisfied and the second constraint is not required to be satisfied. If the <CTRL> key is pressed, it may indicate that both constraints are required to be satisfied. Additionally, it should be noted that the selection of a constraint may be represented through the use of a Boolean flag.",{"@attributes":{"id":"P-00057","num":"00057"},"figref":"FIG. 7","b":["108","400","402","600","702","604","704","602","108","604","616","706","708"]},"Referring back to , steps - provide for modifying the three-dimensional model by repositioning the face  selected at step , wherein the repositioning operation is constrained in accordance with the specified constraint(s). At step , the user specifies the dragging vector (i.e., the displacement of the face  relative to its original position). The dragging vector is perpendicular to the face  plane. The specification of the dragging vector is often performed graphically using the graphical user interface of the modeling system\/solid modeling program , but it may also be performed by entering a numerical value or by any other means.","At step , the original solid body (e.g., body ) is cloned. At step , the controlled face dragging operation is performed on the cloned solid body obtained in step , on the face  selected at step , using the dragging vector specified at step , in accordance with the constraint(s) specified at step . Accordingly, the cloned solid body is modified by the operation.","At step , a determination is made regarding whether the dragging operation on the clone was successful. If the drag operation returns a success status, the dragging is accepted and the modified cloned solid body is displayed on display device  at step . Otherwise, the dragging is rejected and the last modified cloned solid body for which the dragging succeeded is displayed on display device  at step .","At step , a determination is made regarding whether the user keeps dragging the same face . If the same face  continues to be dragged, processing continues with step . Otherwise, the original solid body is replaced with the last modified cloned body for which the dragging operation succeeded at step  and the user interaction is complete.","Steps - are described in detail with respect to , , , , , , and .  is a flow chart illustrating the details of steps -. A temporary face  (as illustrated in ) that is a clone of original face  is created at step  with vertices repositioned relative to the vertices of original face . How the vertices are repositioned depends on the value of the constraint options\/flags .","At step  a determination is made regarding whether the value of the second constraint flag C is true (i.e., whether the user has elected to preserve the geometry of the face being moved). If the second constraint is to be preserved (i.e., the value of the flag C is true), the vertices are repositioned along the drag vector  at step  as illustrated in . If the value of the second constraint flag C is false, each vertex is repositioned along a vector that is the cross product of the normal vectors of the side faces  incident at the vertex at step  as illustrated in .","At step , a determination is made regarding whether the value of the first constraint flag C is true (i.e., the user has elected to preserve the planes of the adjacent faces ). If the first constraint is to be preserved (i.e., the value of the flag C is true), a solid body is created that is defined by the two faces\u2014the original face  and the cloned face  (with the repositioned vertices), and by adding side faces  between the two faces at step  as illustrated in FIG. . At step , a Boolean operation is performed between the original solid body and the cloned solid body (created at step ). If the drag vector  is in the direction of the face  normal vector, a Boolean operation union is performed. If the drag vector  is in the opposite direction, a Boolean operation subtraction is performed. The process is then complete and returns an indicator that the operation completed successfully.","If the value of the first constraint flag C is false (as determined at step ), the coordinates of the vertices of face  are replaced with the coordinates of the repositioned vertices of face  at step . The planes and vertices of the side faces  (faces sharing an edge with face ) are attempted to be adjusted so that the side faces  remain planar (i.e., all vertices of each side face  still lie on the same plane) at step .  illustrates an example of the result of the adjustment of the vertices and planes of side faces  in a more complex solid body where the side faces contain holes, cuts, and ribs.",{"@attributes":{"id":"P-00066","num":"00066"},"figref":"FIG. 11","b":["1","2","402","3","404","1","2","402","914","3","404","404","1","2","3","918","404","920","920","402","404","404","918"]},"To adjust the vertices at step , the number of planes are examined. If there are at least three non-coplanar planes, the intersection of any three planes is calculated and the resulting intersection point becomes the new coordinates of the adjusted vertex. If there are two non-coplanar planes, the coordinates of the original vertex are projected perpendicularly on a line that is the intersection between the two planes. The projected point becomes the new coordinates of the adjusted vertex. If there is a single plane (i.e., the plane of the repositioned face ), the coordinates of the original vertex are projected perpendicularly to the plane. The projected point becomes the new coordinates of the adjusted vertex.","After the planes and vertices of all side faces  have been adjusted at steps  and , the validity of modified solid body  is checked at step . If the solid body  is valid, a flag  indicating a success may be returned. Otherwise, a flag  indicating a failure may be returned.","Conclusion","This concludes the description of the preferred embodiment of the invention. The following describes some alternative embodiments for accomplishing the present invention. For example, any type of computer, such as a mainframe, minicomputer, or personal computer, or computer configuration, such as a timesharing mainframe, local area network, or standalone personal computer, could be used with the present invention.","The foregoing description of one or more embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"P-00014","num":"00014"},"figref":"FIG. 1"},{"@attributes":{"id":"P-00015","num":"00015"},"figref":"FIG. 2"},{"@attributes":{"id":"P-00016","num":"00016"},"figref":"FIG. 3"},{"@attributes":{"id":"P-00017","num":"00017"},"figref":"FIG. 4A"},{"@attributes":{"id":"P-00018","num":"00018"},"figref":["FIG. 4B","FIG. 4A"]},{"@attributes":{"id":"P-00019","num":"00019"},"figref":["FIG. 4C","FIG. 4A"]},{"@attributes":{"id":"P-00020","num":"00020"},"figref":["FIG. 4D","FIG. 4A"]},{"@attributes":{"id":"P-00021","num":"00021"},"figref":["FIG. 4E","FIG. 4A"]},{"@attributes":{"id":"P-00022","num":"00022"},"figref":["FIG. 4F","FIG. 4A"]},{"@attributes":{"id":"P-00023","num":"00023"},"figref":"FIG. 5"},{"@attributes":{"id":"P-00024","num":"00024"},"figref":"FIG. 6"},{"@attributes":{"id":"P-00025","num":"00025"},"figref":"FIG. 7"},{"@attributes":{"id":"P-00026","num":"00026"},"figref":"FIG. 8"},{"@attributes":{"id":"P-00027","num":"00027"},"figref":"FIG. 9"},{"@attributes":{"id":"P-00028","num":"00028"},"figref":"FIGS. 10A and 10B"},{"@attributes":{"id":"P-00029","num":"00029"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
