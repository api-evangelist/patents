---
title: System and method for monitoring user interaction with web pages
abstract: Systems and methods for monitoring usage of an electronic device are disclosed herein. A client component in stalled in a client device is operative to monitor usage of the client device in accordance with a monitoring profile, and to generate corresponding usage data. The monitoring profile typically includes information specifying which features of which application programs are to be disabled on the client device. A server component, installed on a server device in communication with the client device, provides the monitoring profile to the client device and receives the usage data from the client device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07958234&OS=07958234&RS=07958234
owner: Yahoo! Inc.
number: 07958234
owner_city: Sunnyvale
owner_country: US
publication_date: 20090304
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","Overview","Monitoring and Application Profiles","Methods of Tracking Application Usage","Data Analysis and Display","Data Management Subsystem","System Administration","Methods of Restricting Application and Feature Usage","Monitoring User Interaction with the World Wide Web","Real-Time User Help","Profile Management: Client Side Components","Profile Management: Server Module Side Components","User Monitoring: Client Side Components","User Monitoring: Server Module Side Components","Data Analysis: Client Side Components","Data Management: Client Side Components","Data Management: Server Side Components","System Administration Subsystem","Monitoring User Interaction with the World Wide Web"],"p":["The present patent document is a divisional of application Ser. No. 09\/587,236 filed Jun. 2, 2000 and International Application No. PCT\/US00\/15299 filed on Jun. 2, 2000, which claims priority from provisional Application Ser. No. 60\/139,915 filed on Jun. 17, 1999, which claims priority from provisional Application Ser. No. 60\/137,788 filed on Jun. 3, 1999, which is incorporated herein in its entirety by this reference.","This invention relates to a system for monitoring usage of computers and other electronic devices, and, more particularly, to a system for collecting information concerning user interaction with application programs and the host environment in accordance with defined monitoring profiles.","Many commercial and governmental organizations are becoming increasingly reliant upon software applications to perform enterprise management and other functions. Expenditures relating to hardware, software and related support (collectively, \u201cinformation technology\u201d) now represent a significant portion of the capital improvements undertaken by many entities. Since it is not atypical for a large corporation to utilize software products from hundreds of different vendors, it is not uncommon for difficulties to arise because of overlapping program functionality. Usage of a multitude of software products also tends to complicate delineation of training and line management responsibilities.","An enterprise may be motivated to make investments in information technology for a variety of reasons. For example, information technology assets may be utilized to generate revenue for the enterprise by facilitating accomplishment of essential tasks. Investments in information technology may also be motivated by a desire to reduce costs by streamlining or simplifying certain activities. Information technology may also be acquired as a form of insurance against losses from system failures or breaches in security, irrespective of whether the acquired assets enhance revenue or reduce costs.","Although relatively clear motivations may exist for considering investments in information technology, the selection of particular assets for acquisition has become a complex process. A primary difficulty confronting managers responsible for acquiring information technology is determining an expected rate of return in connection with the proposed investment. This is a difficult task because current monitoring systems are not designed to selectively track measure and analyze user activity most pertinent to determination of such an expected rate of return. Responsible management must also decide which applications should be purchased, and when such purchases should be made. It must also be determined how users will be trained, and how subsequent performance will be measured. Current monitoring systems are also ill equipped to provide assistance in making these types of decisions.","Management of large enterprises are also becoming interested in determining the total cost associated with ownership of particular information technology assets. A rudimentary measure of the cost of such ownership is obtained simply by determining the expense required to furnish each user with required hardware and associated software. More sophisticated measures of such ownership costs will also take into account an expected rate of return on the investment in information technology by ascertaining the extent of any increase in user productivity. Existing computer use monitoring systems have unfortunately not been specifically designed to measure such user productivity, and thus have tended to be of minimal assistance in facilitating determination of an expected rate of return on investments in information technology. Decisions regarding investments in information technology are thus likely being made without the benefit of relevant information relating to user productivity and expected rates of return.","In one aspect the present invention comprises a system for monitoring usage of an electronic device. A client component installed in a client device is operative to monitor usage of the client device in accordance with a monitoring profile, and to generate corresponding usage data. The monitoring profile typically includes information specifying which application programs, and which features of such application programs, installed on the client device are to be monitored by the client component. A server component, installed on a server device in communication with the client device, provides the monitoring profile to the client device and receives the usage data from the client device. The system may also include a data management component disposed to store the monitoring profile and to store the usage data provided to the server device. A data analysis component determines usage statistics associated with application programs installed on the client device based upon the usage data. The usage statistics may include measurements of usage time, number of uses, and sequence of usage of specified ones of the application programs.","Another aspect the present invention relates to a method for monitoring user interaction with a web page downloaded to a client device from a remote location. Monitoring instrumentation is initially embedded within the web page in accordance with a monitoring profile. This embedding may be effected by, for example, incorporating scripting language into the web page. Events relating to such user interaction are monitored, and corresponding usage data is generated using the monitoring instrumentation. The usage data is then transmitted from the client device to a monitoring server.","A preferred embodiment of the computer usage monitoring system of the present invention may be used in a distributed system  of the type shown in . The distributed system  includes a number of client computers  in communication with a server computer  through a network . Each of the client computers  may concurrently run a client monitoring module  for tracking usage of application programs installed on the client computers  in accordance with monitoring profiles (described below). The network may be any of a number of different types of networks, including local area networks (\u201cLANs\u201d) or wide area networks. Usage data collected by each client monitoring module  is provided to a server module  running on the server computer . The server module  also provides monitoring profiles to the client monitoring modules .",{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 2","b":["12","12","12","26","28","28","27","12","28","29","30","32","26","12","40","42","44","46"]},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIGS. 3","i":["a ","b "],"b":["3","32","32","50","52","12","56","58","56","58","32","12","12"]},"In order to minimize complexity and facilitate orderly relations among the various monitoring components, each component is designed to have only limited awareness of the system environment. This limited awareness simplifies communication between system components, and eases system administration. In particular, each client monitoring agent  is preferably made to be aware of only its client service . Similarly, each client service  is aware of only its assigned server computer and of its client monitoring agents . As is indicated by and , the client service  is disposed to communicate with the server module   on the server computer . This communication is preferably carried out in accordance with the distributed COM protocol. The server module   accesses monitoring data and other information within the database  by way of a database object broker (\u201cDBOB\u201d)  (described below).","Referring now to , an illustrative representation is provided of an architecture for a profile and user management subsystem  of the present invention. The subsystem  provides a mechanism through which monitoring profiles can be created, stored, and provided to client monitoring modules . The subsystem  includes a profile builder , and the DBOB  executing on the server computer . In a preferred configuration the profile builder  and DBOB  are implemented as separate COM objects, and communicate in accordance with the distributed COM protocol.","The profile builder  is an application program designed to provide a mechanism for creating a monitoring profile  composed of one more application profiles . Each application profile  determines the type of usage of an associated application program  which is to be monitored. For example, an application profile  may specify that use of certain editing functions (e.g., \u201cCut\u201d and \u201cPaste\u201d operations) are to be recorded, and that periods of inactivity of greater than a predetermined duration are also be noted. The monitoring profile  also specifies the frequency with which usage data collected in accordance with the application profiles  is to be reported to the server module  on the server computer . Such usage data may include, for example, information relating to the use of mouse actions verses accelerator keys, the frequency with which key application features are used, and the sequences of actions taken within an application or between applications. Each monitoring profile  may be assigned to a particular user or group of users.","In a preferred implementation a set of default application profiles associated with well known application programs are stored within a database  for the server computer . Default monitoring profiles which use default application profiles may also be stored within the database . The default application profile provides a template from which monitoring profiles  and application profiles  tailored to particular users may be developed using the profile builder .","One principal feature of the profile builder  is the ability to create application profiles applicable to essentially any Windows-based application. As is described below, the profile builder  allows for creation of an application profile  through selection of various items from the user interface presented by the associated application program. Items such as buttons, text fields, menus, and the like from the applicable user interface may be selected. Application profiles  that have been created in this manner via the profile builder  can be saved within the database  via DBOB  and used in combination with other monitoring profiles  in order to construct various monitoring profiles . The DBOB , in conjunction with the database , collectively serve as a repository for all monitoring profiles . The profile builder  uses the DBOB  to access an object corresponding to a monitoring profile  desired to be viewed and\/or modified. The database  is preferably implemented as a relational database.","The profile builder  will preferably provide a graphical interface allowing for inspection and modification of the monitoring profiles  stored within the database . In this regard each monitoring profile  can be visualized as a treelike structure consisting of a plurality of application profiles . Each constituent application profile  may be selected and its contents edited. As is described below, the profile builder  also allows for definition of particular classes of users, hereinafter referred to as \u201cgroups\u201d. A particular monitoring profile  may be assigned to each such group, thereby allowing evaluation of the performance of each user in the group relative to the assigned monitoring profile . Groups are a mechanism to allow system administrators to easily define and maintain identical profiles for multiple users.","In a preferred implementation of the usage monitoring system of the present invention a monitoring profile  is associated with each user of a client computer . As is indicated by , this association may be in the form of a direct assignment of the monitoring profile  to a given user. Alternately, this association may be effected indirectly by virtue of the user's inclusion in a group to which a monitoring profile  has been assigned. Each user may be associated with only one group at a time, and each group associated with only one monitoring profile. By default, a user is assigned the monitoring profile associated with his group (). This can be overridden for individual users by assigning a monitoring profile directly to the user. In , the monitoring profile identified as \u201cProfile \u201d has been assigned directly to user U. If a monitoring profile  has not been so directly or indirectly assigned to a given user, the user's activity is monitored in accordance with a predefined default monitoring profile (\u201cDefault Monitoring Profile\u201d).","When a user becomes logged on to a client computer , the client service  installed on the computer  requests a profile server  to deliver the associated monitoring profile . The client service then creates a client monitoring agent  and initializes it with the monitoring profile  (). In a preferred implementation each user is identified by a user name identical to the name used to identify the user within the applicable operating system (e.g., Windows 95 or Windows NT). Because it is possible for a previously unknown user to log onto a client computer , it is necessary to provide a mechanism for dealing with user names that are not otherwise recognized. Such an unknown user will often be encountered under the following circumstances: (i) a user logs onto a client computer  with a user name that has not been previously utilized; and (ii) a user may log onto a client computer  without specifying a user name, hereinafter an \u201canonymous user\u201d. In the former case, the profile builder  will add the new user to the list of known users and automatically assign the new user to a default user group (the \u201cDefault Group\u201d). In the case described in (ii) above, the \u201cUnknown User\u201d becomes a member of the Default Group and is assigned the Default Monitoring Profile ().","As an initial step in identifying the appropriate monitoring profile for a given user, upon becoming logged on to client computer  it is determined whether the user has previously been assigned a monitoring profile. If not, it is determined whether the user is a member of any defined groups. If so, the monitoring profile for the applicable group is assigned to the user; otherwise, the profile for the default group is assigned to the user. Upon identifying the most specific monitoring profile applicable to the given user, the object corresponding to the identified monitoring profile  is provided by the DBOB  to the client monitoring agent  (via the server module  ) by the client service . The client monitoring agent  then begins monitoring user activity in accordance with the received monitoring profile .","As is indicated by , one or more application profiles  are incorporated into a monitoring profile  via association links. Each application profile  contains attribution uniquely identifying those events to be recorded during the interaction of a user with a specific application program. It follows that each application profile  is specific to a particular application program, and in some cases is applicable only to a particular program version.","Each monitoring profile will typically specify the application programs, and the features in such programs, which should be tracked. Monitoring profiles by default record entry into and exit from each application program in order to measure the duration of usage of each application. Various monitoring profiles may also define a user inactivity threshold, which is compared to the duration of a user's inactivity. A user is deemed to be \u201cinactive\u201d when such user fails to interact with any application program for a period exceeding the inactivity threshold, and is otherwise deemed \u201cactive\u201d. Information relating to the schedule (e.g., time of day, days of week) during which a given user is to be monitored will be included in each monitoring profile .","Also preferably included in each monitoring profile are specifications pertaining to the reporting of monitoring data from the client service  to the server module . These data reporting specifications will typically specify an upper limit to the size of the file (or memory buffer) containing the monitoring data held on the client computer . In a preferred implementation the client monitoring agent  informs the client service  when this upper limit is exceeded (i.e., when data is available for transfer from the client monitoring agent ). In turn, the client service  signals the applicable server module , which in its discretion calls back to the signaling client service  to collect the cached data. In a preferred implementation a nominal data reporting interval, relating to the minimum frequency with which reports need to be provided to the server module , is included in the data reporting specifications of each monitoring profile. This parameter ensures that the server module  obtains timely updates from the client monitoring agent  (i.e., at least once per nominal data reporting interval), even during periods of low user activity.",{"@attributes":{"id":"p-0092","num":"0091"},"figref":["FIG. 10","FIG. 10","FIG. 10"],"b":["78","78","76","76","78","78","76","76"],"i":["a","d ","a ","b","a","d ","a ","b"]},"Each client monitoring agent  is also capable of collecting, in accordance with the applicable application profile, data pertaining to usage of defined \u201cfeatures\u201d of application programs. In the context of the present invention the term \u201cfeature\u201d is intended to refer to the operation or function performed by a series of keystrokes or mouse clicks. For example, the keystrokes required to enter text into a file path field, or to enter text into a main application window, could each be defined to correspond to a particular feature.","In an exemplary implementation the client monitoring agent  is disposed to track the following application features:\n\n","As is described in detail below, the client monitoring agent  generally uses one or both of two primary methods of collecting information relating to usage of application programs. A first technique involves monitoring and filtering the message traffic associated with particular user interface events of Windows-based applications. This information is accessed via hooks in the applications and Windows operating system which are associated with particular user interface events (collectively, \u201cWindows Hooks\u201d). Data relating to this message traffic may be analyzed to ascertain the existence of activities deemed to be of significance within an application. Such activities could include, for example, rates of mouse and accelerator key events useful in computation of general productivity metrics.",{"@attributes":{"id":"p-0096","num":"0104"},"figref":["FIG. 11","FIG. 11","FIG. 21"],"b":["92","52","94","92","52","96","94","96","52","50","52","92","92","92","52"],"i":"d "},"In implementations of the present invention within systems governed by recent versions of the Microsoft Windows operating systems (e.g., Windows 95, Windows 98, or Windows NT 5.0), information concerning usage of certain application programs may also be collected via Microsoft Active Accessibility application programming interfaces (\u201cAccessibility APIs\u201d). These Accessibility APIs allow more extensive information to be collected regarding usage of various application features. In this context an application \u201cfeature\u201d is defined by an Accessible Object of the application program, where the term \u201cAccessible Object\u201d is intended to have the meaning provided within the \u201cMicrosoft Active Accessibility Software Development Kit,\u201d which has been made available at http:\/\/www.microsoft.com\/enable\/dev\/msaa.htm. Accessibility APIs were designed primarily to provide limited internal access to an application program in order to facilitate utilization of alternative input and feedback mechanisms associated with third party applications.","Application programs incorporating Accessibility APIs create and destroy Accessible Objects during program execution. In a preferred implementation of the present invention the following process is employed to track usage of application features by monitoring associated Accessible Objects:\n\n","Since Accessible Objects are extinguished each time an application program is terminated, it is necessary to identify those of such objects corresponding to monitored features upon each subsequent invocation of the application program. TABLE I provides a list of attributes of Accessible Objects and accompanying explanations of the manner in which such attributes can assist in identifying objects corresponding to monitored features.",{"@attributes":{"id":"p-0100","num":"0111"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE I"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Attribute","Explanation"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Object","The Object Name is the name as reported by the object's"]},{"entry":["Name","accessibility interface. The Object name is usually (but not"]},{"entry":[{},"always) the same as its displayed caption. For example, a"]},{"entry":[{},"button's name is typically the same as its label. The same is"]},{"entry":[{},"true for menu items."]},{"entry":["Role","The Role is the Accessible Object's Role as reported by the"]},{"entry":[{},"objects accessibility interface. The set of allowable roles is"]},{"entry":[{},"defined by Microsoft as part of the Accessibility API. There"]},{"entry":[{},"are presently 61 defined roles. The role of an object is used to"]},{"entry":[{},"help identify when a particular feature is used. Roles include"]},{"entry":[{},"denotations such as button, menu item, popup menu, combo"]},{"entry":[{},"box and others."]},{"entry":["Window","The Window class is the class name of the Object's parent"]},{"entry":["Class","window. The window class is included in the identification"]},{"entry":[{},"attributes to help distinguish between objects that have the"]},{"entry":[{},"same name and role, but whose window class may be"]},{"entry":[{},"different."]},{"entry":["Top Level","This is the Top Level Window's Class of the window at the"]},{"entry":["Window","top of the Microsoft Window's window hierarchy chain."]},{"entry":"Class"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The client monitoring agent  examines the attributes of Accessible Objects set forth in TABLE I to identify objects corresponding to monitored features. However, examination of the four attributes listed in TABLE I will not always uniquely identify a monitored feature, although in most practical applications such an examination will suffice. As an example, consider the case in which the monitored feature consists of the Copy menu item on the Edit menu within Microsoft Word 97. The Copy menu item reports the following characteristics when examined through its accessible interface:\n\n","Unfortunately, these features are also reported by the Accessible Object associated with a Copy menu item appearing on the popup menu which arises in response to a \u201cright click\u201d in the text area of a document. Accordingly, merely examining the values for the attributes listed in TABLE I leads to an ambiguous result. TABLE II lists the values for the attributes of the Accessibility Object for the \u201cCopy\u201d feature from the popup menu along with the attributes associated with the \u201cCopy\u201d feature from the menu bar:",{"@attributes":{"id":"p-0103","num":"0118"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE II"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Attribute","(Copy) Popup Menu","(Copy) Edit Menu on Menu Bar"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Object Name","Copy","Copy"]},{"entry":["Object Role","ROLE_SYSTEM_MENUITEM","ROLE_SYSTEM_MENUITEM"]},{"entry":["Window Class","MsoCommandBar","MsoCommandBarPopup"]},{"entry":["Top Level","OpusApp","MsoCommandBarPopup"]},{"entry":"Window Class"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"In the example of TABLE II, the values of the Window Class and Top Level Window differentiate between the two Copy items. Although it is believed that in most instances Accessibility Objects associated with specific features may be distinguished by inspection of the attributes described in TABLE I and TABLE II, the present invention provides a mechanism hereinafter referred to as \u201cfeature ancestry\u201d for resolving any ambiguities.","The concept of feature ancestry may be appreciated by considering that every Accessible Object is a member of a tree structure of Accessible Objects stemming from a Top Level Window. In this context a given Accessible Object can generally be identified by a qualified name generated by concatenating the names of selected Accessibility Objects forming an ancestry of the given Accessible Object. It is noted that each potential ancestral Accessibility Object need not necessarily be used in the identification process. The following procedure may be utilized to determine the qualified name of an Accessible Object:\n\n","As an example of the above procedure, consider the case of the standard \u201cOK\u201d button commonly found on dialog boxes. In the case of Microsoft Word 97, examination of the attributes of the Accessibility Object for the \u201cOK\u201d button on the dialog box brought up via the \u201cTools\/Options . . . \u201d menu item yields the following: Object Name is \u201cOK\u201d, Role is ROLE_SYSTEM_PUSHBUTTON, Window Class is \u201cbosa_sdm_Microsoft Word 8.0\u201d. Examination of the Accessibility Object for the \u201cOK\u201d button on the dialog box brought up by \u201cFile\/Print . . . \u201d menu item yields exactly the same information. However, the ancestral Accessibility Objects for each of these \u201cOK\u201d buttons are different as indicated by TABLE III:",{"@attributes":{"id":"p-0107","num":"0124"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE III"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Tools\/Options . . . Dialog","File\/Print . . . Dialog"]},{"entry":[{},"OK button","OK button"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Ancestor1","Name:","Options","Print"]},{"entry":[{},"Role:","ROLE_SYSTEM_DIALOG","ROLE_SYSTEM_DIALOG"]},{"entry":[{},"Class:","bosa_sdm_Microsoft Word 8.0","bosa_sdm_Microsoft Word 8.0"]},{"entry":["Ancestor2","Name:","Options","Print"]},{"entry":[{},"Role:","ROLE_SYSTEM_WINDOW","ROLE_SYSTEM_WINDOW"]},{"entry":[{},"Class:","bosa_sdm_Microsoft Word 8.0","bosa_sdm_Microsoft Word 8.0"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"As is indicated by TABLE III, the Accessibility Objects for the two \u201cOK\u201d buttons described in the preceding example can be distinguished only by comparing their respective ancestral Accessibility Objects.","Each feature identified by the applicable monitoring profile is tracked according to whether the feature is \u201cused\u201d or not. When features are monitored via associated Accessibility Objects, the definition of usage for a given feature is dependent upon the nature of the role defined by its associated Accessibility Object. TABLE IV below provides exemplary usage definitions for roles assumed by various Accessibility Objects associated with features likely to be tracked. Again, the role of an Accessibility Object may be examined by way of the defined set of Accessibility APIs. TABLE IV also provides, for certain roles, examples of the manner in which usage of an application program affects the state of a given role.",{"@attributes":{"id":"p-0110","num":"0127"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"left"}},"thead":{"row":[{"entry":"TABLE IV"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"ROLE_SYSTEM_BUTTONDROPDOWN"},{"entry":"\u2003\u20031. Used if pressed."},{"entry":"\u2003\u2003No Application Instances Appear To Exist."},{"entry":"ROLE_SYSTEM_BUTTONDROPDOWNGRID"},{"entry":"\u2003\u20031. Used if pressed."},{"entry":"\u2003\u2003No Application Instances Appear To Exist."},{"entry":"ROLE_SYSTEM_BUTTONMENU"},{"entry":"\u2003\u20031. Used when Pressed."},{"entry":"\u2003\u2003No Application Instances Appear To Exist."},{"entry":"ROLE_SYSTEM_CHECKBUTTON"},{"entry":"\u2003\u20031. Used when State Changed (i.e. transitioned from check to unchecked or vice-versa)"},{"entry":"\u2003\u2003Check buttons are the commonly found check boxes in lots of places. The standard windows"},{"entry":"\u2003\u2003check box control has this role."},{"entry":"ROLE_SYSTEM_CLIENT"},{"entry":"\u2003\u20031. Used when receives mouse clicks or keystrokes."},{"entry":"\u2003\u2003Clients are frequently found as the interior area of framed windows. The interior area of Word"},{"entry":"\u2003\u2003documents are clients, as are excel and all tested applications."},{"entry":"\u2003\u2003An object that is a Client is defined as Used if any mouse clicks or keystrokes are aimed at it."},{"entry":"ROLE_SYSTEM_COMBOBOX"},{"entry":"\u2003\u20031. Used when any of its children are used."},{"entry":"\u2003\u2003A combo box always has three children: the text area (sometime editable, sometimes not) the"},{"entry":"\u2003\u2003button that drops and undrops the list (sometimes visible, sometimes not), the window that holds"},{"entry":"\u2003\u2003the list."},{"entry":"\u2003\u2003A combo box is defined as used if the user uses and of the child windows."},{"entry":"\u2003\u2003The standard windows combo box has this role."},{"entry":"ROLE_SYSTEM_DIAL"},{"entry":"\u2003\u20031. Used if child objects are used or if the dial object receives any mouse clicks or keystrokes."},{"entry":"\u2003\u2003An object that is a dial is used if any of its child objects are used or if the object itself receives any"},{"entry":"\u2003\u2003mouse clicks or keystrokes."},{"entry":"\u2003\u2003No Application Instances Appear To Exist"},{"entry":"ROLE_SYSTEM_DIALOG"},{"entry":"\u2003\u20031. Used when displayed to the user."},{"entry":"ROLE_SYSTEM_DROPLIST"},{"entry":"\u2003\u20031. Used if any of its child objects are used."},{"entry":"\u2003\u2003A drop list is like a combo box, it always has three children: the text area (sometime editable,"},{"entry":"\u2003\u2003sometimes not) the button that drops and undrops the list (sometimes visible, sometimes not), the"},{"entry":"\u2003\u2003window that holds the list."},{"entry":"\u2003\u2003A list box is defined as used if the user uses any of the child objects."},{"entry":"\u2003\u2003No Application Instances Appear To Exist."},{"entry":"ROLE_SYSTEM_GRIP"},{"entry":"\u2003\u20031. Used if it receives any mouse down messages."},{"entry":"\u2003\u2003No Application instances Appear To Exist."},{"entry":"ROLE_SYSTEM_HOTKEYFIELD"},{"entry":"\u2003\u20031. Used if receives any keystrokes."},{"entry":"\u2003\u2003Used if it receives any keystrokes."},{"entry":"ROLE_SYSTEM_LINK"},{"entry":"\u2003\u20031. Pressed."},{"entry":"\u2003\u2003Links act like buttons, but generally look like text or graphics."},{"entry":"ROLE_SYSTEM_LIST"},{"entry":"\u2003\u20031. Used when one or multiple list items are selected\/deselected."},{"entry":"ROLE_SYSTEM_LISTITEM"},{"entry":"\u2003\u20031. A list item is used whenever its state toggles between selected and not selected."},{"entry":"ROLE_SYSTEM_MENUITEM"},{"entry":"\u2003\u20031. Used when the menu item is selected."},{"entry":"\u2003\u2003A menu item is selected when its state becomes \u201cfocused\u201d and while focused it receives a mouse"},{"entry":"\u2003\u2003up event or return key press."},{"entry":"ROLE_SYSTEM_MENUPOPUP"},{"entry":"\u2003\u20031. Used if any of its children are used."},{"entry":"ROLE_SYSTEM_OUTLINE"},{"entry":"\u2003\u20031. Used if any mouse clicks or keystrokes are directed at it or if any of its children are used."},{"entry":"\u2003\u2003The Outline is used if any mouse clicks or keystrokes are directed at it or if any of its children are"},{"entry":"\u2003\u2003used. The standard windows tree control publishes its role as outline."},{"entry":"ROLE_SYSTEM_OUTLINEITEM"},{"entry":"\u2003\u20031. Outline Items are used if they receive any keystrokes or mouse clicks or the object's state"},{"entry":"\u2003\u2003toggles between selected\/unselected."},{"entry":"\u2003\u2003Items within the standard windows tree control publish their role as outline."},{"entry":"ROLE_SYSTEM_PAGETAB"},{"entry":"\u2003\u20031. Used if any mouse clicks are directed at it."},{"entry":"\u2003\u2003Tabs on tabbed dialogs appear as page tabs."},{"entry":"ROLE_SYSTEM_PROPERTYPAGE"},{"entry":"\u2003\u20031. Used if any child objects are used."},{"entry":"\u2003\u2003Used means the page was displayed."},{"entry":"ROLE_SYSTEM_PUSHBUTTON"},{"entry":"\u2003\u20031. Used if pressed."},{"entry":"\u2003\u2003The button was pressed, either by the user interacting with the control via the mouse or keyboard."},{"entry":"ROLE_SYSTEM_RADIOBUTTON"},{"entry":"\u2003\u20031. Used if the button transitions between checked and unchecked states."},{"entry":"\u2003\u2003A radio button is used if it transitions between the checked and unchecked states."},{"entry":"ROLE_SYSTEM_SCROLLBAR"},{"entry":"\u2003\u20031. Used if any of its child objects are used or if the object itself receives any keystroke or mouse"},{"entry":"\u2003\u2003clicks."},{"entry":"\u2003\u2003A scroll bar is used if any of its children are used."},{"entry":"ROLE_SYSTEM_SLIDER"},{"entry":"\u2003\u20031. Used if the object receives any mouse clicks or keystrokes."},{"entry":"\u2003\u2003The standard windows slider control publishes this role."},{"entry":"ROLE_SYSTEM_SPINBUTTON"},{"entry":"\u2003\u20031. Used if the user clicks the mouse within the spin object"},{"entry":"ROLE_SYSTEM_TEXT"},{"entry":"\u2003\u20031. Used if there are any keystrokes or mouse clicks directed at the object."},{"entry":"ROLE_SYSTEM_TITLEBAR"},{"entry":"\u2003\u20031. Used (gabbed) if a mouse down occurs on the object."},{"entry":"ROLE_SYSTEM_TOOLBAR"},{"entry":"\u2003\u20031. Used if any of its children are used."},{"entry":"ROLE_SYSTEM_WINDOW"},{"entry":"\u2003\u20031. Used if any of its children are used."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0111","num":"0128"},"figref":["FIG. 12","FIG. 12"],"b":["92","102","52","94","92","102","52","96","92","94","96","102"],"i":["d ","d "]},"In accordance with one aspect of the present invention, the AppFeature DLLs  internally use Windows Hooks in conjunction with Accessible Events to determine whether a feature is being used. Although the Accessibility API provides notification of occurrences of Accessible Events monitored by AppFeature DLLs , not all Accessible Objects generate notifications capable of being monitored by the AppFeature DLLs . Accordingly, the Windows-based events tracked by the Hooks DLLs  are used to trigger the AppFeature DLLs  to query the Accessibility API for information relating to the identity of the Accessible Object, if any, associated with the Window generating the event. The following is an exemplary sequence of Windows-based events capable of being monitored by an AppFeature DLL :",{"@attributes":{"id":"p-0113","num":"0130"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"WM_KEYDOWN","(Win32 Event)"]},{"entry":[{},"WM_CHAR","(Win32 Event)"]},{"entry":[{},"ACC_STATE_CHANGE","(Accessibility Event)"]},{"entry":[{},"WM_KEYUP","(Win32 Event)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Further details regarding various preferred mechanisms for tracking user events in accordance with the present invention are described below with reference to .",{"@attributes":{"id":"p-0115","num":"0132"},"figref":"FIG. 13","b":["110","20","110","110","114","116","114","12","74","14","74","80","110","80","110"]},"The DAT  provides the means to view and compare the data collected by the client monitoring modules . The DAT  uses the DBOB  to access the monitoring data within database . In addition, the reports engine  of the DAT  utilizes an Open Database Connectivity (\u201cODBC\u201d) connection to the database  in connection with data retrieval (). The following type of usage information may be generated by the DAT  on the basis of the monitoring data collected and reported by a specific client monitoring module :\n\n","In addition to facilitating acquisition of the type of usage information outlined above, the DAT  allows the monitoring data collected by the client monitoring modules  to be queried in a user-defined manner. This feature enables generation of usage reports focused upon user-defined usage parameters. In a preferred implementation the DAT  is also capable of providing various representations of historical usage activity for individual users.","An exemplary set of such presentations are described below:\n\n","The DAT  also preferably allows comparison of the histograms or other usage representations of two or more users through, for example, superimposing the histograms or representations on the same portion of a display screen. Each of the compared histograms or representations may constitute an average taken over many users.","The DAT  provides representations of the activity history associated with specific applications. This type of representation will typically be generated by the DAT  on the basis of the monitoring data collected from a group of users and reported by the client monitoring module . Set forth below are an exemplary set of such representations specific to a particular application:\n\n","Referring to , a data management subsystem  is disposed to store persistent objects used by other components of the inventive data monitoring system. The data management subsystem  includes the DBOB  and a database  having a schema divided into several interrelated logical sections. Specifically, the database schema  includes a monitoring data section , a profile data section , and a report templates section . The DBOB  is operative to access the sections of the schema ,  and  using an ODBC interface , thereby allowing the DBOB  to remain independent of the specific implementation of the database .","A primary purpose of the DBOB  is to deliver appropriate objects to other requesting system components and to act as a common gateway for the relational database . In a preferred implementation a single DBOB  serves many instances of server module   (potentially on separate platforms), and each such DBOB is capable of accessing the database . This arrangement permits maximum utilization of certain finite resources, such as ODBC connectors. The interfaces of the DBOB  define the manner in which data within the database  is manipulated. In providing access to, and managing the database , the DBOB  isolates the low-level storage and methods used to access the database from the client monitoring modules  and other \u201cclients\u201d of the DBOB .",{"@attributes":{"id":"p-0123","num":"0150"},"figref":"FIG. 15","b":["140","140","140","144","14","140","22","20","22","20","22","20"],"i":["s ","a ","s ","b "]},"The administration console  is disposed to display an active client list, which allows the system administrator to monitor usage of the client computers . The administration console  will preferably allow a system administrator to determine if the client service  associated with a particular client computer  is installed and running. In addition, the administration console  is capable of causing a new monitoring profile  to be sent, by way of the applicable server module  , to a client service  specified by a system administrator. The client monitoring agent  associated with this client service  then begins collecting usage data in accordance with the new profile.","Referring again to , the hierarchical arrangement of server module  is intended to ensure that each server module   serves only that number of client monitoring modules capable of being adequately supported in light of the processing power of the host server machine. By configuring the servers to be subordinate to the server , a tree structure can be developed so as to mirror a desired parameter (e.g., network topology, business sectors, task groups). In this way management of certain \u201clegs\u201d of the tree can be delegated to subordinate administrators, while at the same time allowing oversight by other administrators with the requisite permission. When a hierarchical server arrangement is employed, the following operations will preferably be carried out recursively throughout the arrangement:\n\n","As was discussed above, the client monitoring agent  generally uses one or both of two primary methods of collecting information relating to usage of application programs. In particular, a first technique involves injecting Hooks DLL into each application program that has been activated by the user. The Hooks DLLs are monitor prescribed Windows Hooks in the application programs and desktop environment so as to determine when specific user input events have been performed. In a second approach, information concerning usage of certain application programs may also be collected via Accessibility APIs. These Accessibility APIs allow more extensive information to be collected regarding usage of various application features.","The present invention also contemplates utilizing these methods of tracking application feature usage to restrict usage of application features. Advantageously, such restriction may be effected without modifying the application program in which restriction is to take place. Use of certain application features, or even access to entire application programs, can be restricted on the basis of individual user identity or group membership. As is discussed below, the ability to recognize the startup of an application program and the pending activation of an application feature via injected Windows Hooks and AppFeature DLLs provides an opportunity to restrict activation of the feature.",{"@attributes":{"id":"p-0128","num":"0162"},"figref":["FIG. 16","FIG. 17","FIG. 16"],"b":["170","174","176","178","180","182"]},"Usage of \u201ctransient\u201d controls may also be restricted. Examples of transient controls are the buttons upon dialog boxes, which are created and destroyed in connection with each display of the dialog box. By trapping the user event indicating creation of a dialog, the recursive feature detection described above may be applied to disable the newly created control (i.e., the dialog box button).","Dialogs themselves, as well as other top-level windows of application programs, may also be restricted. Specifically, creation of the Accessible Object corresponding to the top-level window to be disabled is detected using Hooks DLLs as described above. This top-level window is then immediately closed and a dialog displayed indicating that use of the window is restricted. In order to avoid interfering with the timely processing of events, the dialog informing the user of the feature restriction is preferably displayed using a separate, dedicated process.","The feature restriction capability of the present invention may also be invoked to ensure that application programs permit only certain desired usage paths. Such desired usage paths may be developed by, for example, using monitoring data collected in the manner above to identify patterns of efficient usage. Once such patterns have been identified, usage of all unrelated features is restricted. Alternatively, a user could be \u201cguided\u201d through operations comprised of multiple steps. This is done by permitting the application program to enable only those features relevant to a current task to be completed. By limiting the set of features available during each task, the navigation of complex application programs offering many feature options may be appreciably simplified.","In another aspect of the present invention, the monitoring technology described herein may be embedded in an internet browser on a client machine so as to enable tracking of user interaction with the browser. Usage data collected by the client monitoring agent incorporated within the browser would be transmitted to the location of the server module  via an HTTP protocol POST operation. The URL to which the data was posted could reference a Common Gateway Interface (\u201cCGI\u201d) script disposed to read the posted monitoring data and forward it to the applicable server module  using the data notification scheme previously described.","A different approach may be taken to facilitate the monitoring of web-based applications built with JAVA, HTML, DHTML, Java Script, XML and the like delivered to host browsers via the world wide web (the \u201cWeb\u201d). In this approach the client monitoring technology (\u201cCollection Agent\u201d) is embedded within the HTML document provided to the host browser via the web. By configuring the Collection Agent as a Dynamic Link Library (\u201cDLL\u201d) rather than as an independent executable program, its functionality can be packaged as an ActiveX Control or Netscape Plug-in or the equivalent. A reference to the control or plug-in is preferably embedded directly within the HTML document provided to the host browser. When the HTML document is fetched and rendered by the host browser, the object reference to the plug-in or control is resolved and the appropriate installation process begun. Depending on the current security settings in use on the client machine, the user may be unaware that a Collection Agent in the form of an ActiveX control has been installed. However, installation Collection Agents realized as certain types of plug-ins (e.g., a Netscape Plug-in) causes generation of a dialog allowing the plug-in to be accepted or rejected. An exemplary sample of HTML source containing a reference to an embedded ActiveX control is provided below:",{"@attributes":{"id":"p-0134","num":"0168"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<p>"]},{"entry":[{},"<object ID=\u201cMakeLogin\u201d WIDTH=\u201c249\u201d HEIGHT=\u201c130\u201d"]},{"entry":[{},"CLASSID=\u201cCLSID:590669BA-3431-11D2-BEBB-60505AC"]},{"entry":[{},"10000\u201d \u2003\u2003\u2003\u2003\u2003\u2003CODEBASE=\u201chttp:\/\/www.A-"]},{"entry":[{},"SoftTech.com\/ActiveX\/ASoftMakeLogin.CAB#version= 1,0,0,5 \u201d>"]},{"entry":[{},"\u2009<\/object>"]},{"entry":[{},"<\/p>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"By embedding reference to a Collection Agent only within Web pages desired to be monitored, targeted monitoring of specific Web pages may be effected without undertaking a mass installation of monitoring software within each individual client. The targeted monitoring of Web pages via a downloaded Collection Agent is of significant potential value to entities engaged in \u201ce-commerce\u201d and \u201ce-business\u201d. For example, an installed Collection Agent can provide nearly instantaneous feedback concerning the manner in which visitors interact with the applicable site. Such feedback may indicate: (i) whether users encountered any difficulties in utilizing the site, (ii) whether users hesitated while performing a given process or task, (iii) whether users abandoned an operation or task, (iv) to what sites users go upon leaving the monitored site, and (v) the manner in which users leave the site (e.g., via advertisement selection, other URL, text typed in the GOTO box, etc.). Information of this type is generally incapable of being derived from the logs conventionally maintained by web servers. These logs typically include information relating only to requests for, and postings of, documents.","Usage data collected by the Collection Agent may be provided to a server module  as described above. That is, the usage data would be transmitted to the location of the server module  via an HTTP protocol POST operation. A CGI script at the URL to which the data is posted would then read the posted monitoring data and forward it to the applicable server module  as previously described.","In accordance with another aspect of the present invention and as is more fully described herein, user interaction with the world wide web is tracked via monitoring mechanisms embedded within web pages downloaded to the user's browser. The web pages provided to the user's browser are preferably modified at the server to include scripting functions disposed to gather events and otherwise measure user activity while the web page is active on the client browser. Measured information may then be provided back to the server through one of several mechanisms, including hidden form fields and encoded URLs. Alternatively, a Java applet may be utilized to convey measurement information to the applicable server. In a preferred implementation the monitoring scripts are embedded within web pages using the JavaScript scripting language. Since JavaScript can be embedded within the page itself in text form, this implementation advantageously tends to have little or no impact on the time required to download web pages. In addition, JavaScript possesses built-in features for accessing all of the components of a web page and interacting with them. This concept is more completely described in the section below entitled \u201cDocument Object Model (DOM)\u201d. Finally, unlike an ActiveX control or Netscape plugin, JavaScript isn't able to interact with a user's desktop or files system. This characteristic of JavaScript may address the concerns of certain users with regard to the activation of monitoring mechanisms on their respective client machines.","Using an application similar to the profile builder  described above, a monitoring profile is generated designating which features should be tracked and which measures are of particular interest. The monitoring profile is then used to \u201cinstrument\u201d (i.e., add JavaScript instructions to) the web page documents with which the user will interact. This instrumentation of web pages is performed independently of the content development process, and can even be effected in real time as the page is transmitted to a requester. The only corresponding instrumentation required at the server is incorporation of the applicable monitoring script in the page just after the <BODY> tag and in the page header. The general format of a web page instrumented in accordance with the present invention is set forth below:",{"@attributes":{"id":"p-0139","num":"0173"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<BODY BGCOLOR=blanchedalmond topMargin=50>"]},{"entry":[{},"\u2009<SCRIPT LANGUAGE=\u201cJavaScript\u201d>"]},{"entry":[{},"window.onload = startmonitor;"]},{"entry":[{},"\u2009<\/SCRIPT>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"An example given below describes the adding of the onload property to the document in order to complete the instrumentation and start the monitoring of a web page.","In cases where the web pages to be instrumented are dynamically constructed via CGI execution or completion of a document template by way of a data base query, the instrumentation will often be integrated into the server setup and web page construction process at the applicable web site. This integration of instrumentation into each web page may be straightforwardly effected by using the \u201cserver side include\u201d operations currently supported by nearly all commercial web servers. Such operations allow a reference to a document to be embedded in other documents. When a document is served to a client the reference is resolved and additional content written from the other document is incorporated within the data stream provided to the client. This avoids the necessity of issuing secondary requests from the client to fetch the contents of the reference.","Transmitting the feature activations collected by an instrumented web page to the applicable server via the Internet poses several problems. First, in order to ensure passage through intervening infrastructure (e.g., firewalls and routers), the connection must be made on an open port. One approach to ensuring such passage is to use port , the HTTP protocol port. However, actually sending the data through this port is complicated by the fact that JavaScript does not possess any network privileges. Accordingly, a JavaScript instruction cannot simply open a socket connection to the data host on port  and transmit the data using the PUT operation of the HTTP protocol. Although the script could control an applet for creating the socket, applets are limited to establishing connections only to the server from which they were downloaded. In addition, the time required to download an applet also makes this solution unattractive. Instead, in a preferred embodiment two indirect means of data transmission using JavaScript are contemplated; namely, transmission via \u201ccookies\u201d and \u201chidden FORM fields\u201d.","Cookies are often used to give the illusion of persistence over the connectionless and stateless HTTP protocol. They were originally created to support CGI programming and are implemented as an extension to the HTTP protocol. The data in cookies is automatically transmitted between the browser and the HTTP server without the knowledge of the user. As is described further below, a cookie consists of a named value and four optional properties for controlling the lifetime, visibility and security of the cookie. The cookies associated with a particular page are made available to JavaScript through the cookie property of the document object.","Transmittal of monitoring data can also be performed using what is commonly referred to as a \u201chidden FORM\u201d. Such a hidden FORM is constructed using elements of a FORM defined with <INPUT TYPE=hidden>, which are not visible to the user. A FORM containing a single hidden element can be used to transmit data to a server without altering the appearance of the web page in which it is embedded. A simple example of a hidden FORM is shown below:",{"@attributes":{"id":"p-0145","num":"0179"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<FORM NAME=myform ACTION=\u201d\/cgi-bin\/nputdata.pl\u201d"]},{"entry":[{},"METHOD=GET>"]},{"entry":[{},"<INPUT TYPE=hidden NAME=\u201dmydata\u201d>"]},{"entry":[{},"<\/FORM>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"A script may refer to the data item as myform.mydata and set the value to a string containing a compressed stream of monitoring data. The METHOD tag in the form definition controls whether the data is sent to the server appended to the ACTION URL (GET) or sent in the body of the HTTP request (POST). Examples are provided blow expressed in HTTP protocol notation.",{"@attributes":{"id":"p-0147","num":"0181"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GET http:\/\/www.limesoft.com\/cgi-bin\/nputdata.pl?mydata=<data>"]},{"entry":[{},"HTTP\/1.1"]},{"entry":[{},"POST http:\/\/www.limesoft.com\/cgi-bin\/nputdata.pl HTTP\/1.1"]},{"entry":[{},"....[additional header entries here]"]},{"entry":[{},"mydata=<data>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The \u201chidden FORM\u201d approach to data transmission has certain advantages relative to data transmission using cookies. For example, in the hidden FORM approach the instrumenting script enables control over precisely when data is sent. Specifically, the data may be sent to the server at any time by invoking the submit( ) method of the FORM. This is significant since it is preferable to send monitoring data to the server during times when the user is not initiating any other server requests in order to avoid the impression of degraded performance. The data should preferably be sent during periods of inactivity (e.g., when a user pauses to view text or images after a document is loaded).","Usage data collected by a Collection Agent or client monitoring agent can form the basis for providing essentially real-time assistance to end users. This may be effected by passing usage data through a structure (e.g., a decision tree or similar model) designed to detect situations where a user is in need of assistance. User behavior evidencing long pauses in certain fields, rapid switching among fields, repeated changing of control values, or aimless searching for features are likely indicators of user distress. Under such conditions a short list of subjects related to a best guess at the user's intention would be created and provided to the user. The user would have the opportunity to select an intention from the list, and optionally could indicate that operations associated with the selected intention be automatically carried out.","Since in certain implementations the collected usage data may only be intermittently reported to a server module , the above analysis may be conducted at the client In order to enable real-time assistance to be provided continuously. The module responsible for delivering such functionality (\u201cHelp Module\u201d) is preferably implemented as an adjunct to the standard client monitoring agent. The Help Module informs the client monitoring agent of the data items needed to discern a user's action\/inaction as it occurs. The Help Module need not be highly integrated with the client monitoring agent, and may simply be disposed to receive a stream of specified data items.",{"@attributes":{"id":"p-0151","num":"0185"},"figref":"FIG. 18","b":["72","70","72","72","72"]},"The profile builder  manages five main object types via its user interface (): (i) Users, (ii) Groups, (iii) Monitoring Profiles, (iv) Application Profiles, and (v) Product Version Groups. Administrative users (simply referred to as users throughout the rest of this section) will need to manage individual objects and also their relationships. The class diagram of  illustrates these objects and their relationships. From within the Profile builder, users can navigate the objects that populate the database  using the primary tree view (). Selected items are displayed on the right side of the user interface.","The profile builder  supports different views of the database . The view displayed is dependent on the type of object selected in the tree view. Selection of a root node in the tree view will present a list of all items contained beneath that node. In the \u201cUser's view\u201d of , the root level group object has been selected by a user, with the appropriate view displayed on the right. Similar list views for each of the profile object types are obtained via user selection of the corresponding root node. Selection of a non-root node profile object will display the specific properties for that object.","From within the User's view, a system administrator is able to do the following: (i) modify the name of the user, (ii) modify the user's group, and (iii) explicitly assign the user's monitoring profile. This will result in overriding of the monitoring profile obtained through the user's group.",{"@attributes":{"id":"p-0155","num":"0189"},"figref":"FIG. 22","b":"72"},{"@attributes":{"id":"p-0156","num":"0190"},"figref":["FIG. 23","FIG. 23"],"b":"72"},{"@attributes":{"id":"p-0157","num":"0191"},"figref":"FIG. 24","b":"72"},"The profile builder  makes use of the database object broker  to manipulate profile database objects.  depicts various interfaces of the database object broker  used to access and manage profile data. Referring to , the profile builder  accesses the actual monitoring profile objects via the IProfileObjects interface. The accesses typically result in enumerated lists of interfaces to specific profile data objects. The database object broker  holds and maintains these objects, constructing the objects from data contained in the profile database system. The profile builder  uses the interface to pull information from the object This also supports changing the object's attributes, since the database object broker  maintains independent copies of the objects for each profile builder.","Referring again to , the IProfileserver moduleEdit interface is used to commit changes to the monitoring profile objects to the Profile Database. The commit is performed as a database transaction, which serializes the update of the appropriate tables in the database. The database management system is responsible for coordinating multiple accesses to the Profile Database.","The database object broker  manages the persistence of, and relationships between, several types of objects stored in the Profile database:\n\n","Clients of the database object broker  will generally interact with objects that are \u201cowned\u201d by the database object broker . Furthermore, these clients will normally be operating on remote machines. The interfaces of the database object broker  will preferably be crafted to allow remote clients to manipulate the objects as efficiently as possible. Nonetheless, the database object broker  operates to protect the internal integrity of the Profile Database at all times.","All profile data is preferably housed in the Profile Database. The Profile Database is typically implemented using a relational database. Part of the task of the database object broker  is to store the various profile objects (User, Groups, Monitoring Profiles and Application Profiles) to the Profile Database. This generally requires the database object broker  to be capable of translating between relational table rows and COM or C++ objects. The database object broker  preferably uses ODBC to access the Profile Database.",{"@attributes":{"id":"p-0163","num":"0203"},"figref":"FIG. 26","ul":{"@attributes":{"id":"ul0019","list-style":"none"},"li":{"@attributes":{"id":"ul0019-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0020","list-style":"none"},"li":["(1) Each User must be a member of a Group;","(2) Each Group must have a Monitoring Profile; and","(3) Each Application Profile must be assigned a Product Version Group."]}}}},"The relationships depicted in  are further described in Table I.",{"@attributes":{"id":"p-0165","num":"0208"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE V"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Relationship","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User and Group","Each User must be a member of one and only one Group. This"]},{"entry":[{},"relationship is mandatory. A user cannot exist without being a"]},{"entry":[{},"member of a Group. Each Group contains from zero to n users. In"]},{"entry":[{},"this direction, the relationship is optional; A Group can exist"]},{"entry":[{},"independent of Users."]},{"entry":[{},"These rules dictate that when the user's Group is deleted, the user"]},{"entry":[{},"must be deleted (or moved to another Group) to ensure database"]},{"entry":[{},"integrity."]},{"entry":["User and Monitoring Profile","Each user can optionally have a Monitoring Profile. This relationship"]},{"entry":[{},"is optional. If a user does have a specific Monitoring Profile, it"]},{"entry":[{},"overrides the profile the user has by-virtue of its Group association."]},{"entry":["Group and Monitoring Profile","Each Group must have exactly one Monitoring Profile. The"]},{"entry":[{},"relationship is mandatory. A Group cannot exist without a"]},{"entry":[{},"Monitoring Profile. Note however, that not all Monitoring Profiles"]},{"entry":[{},"need have a Group. A Monitoring Profile exists independent of a"]},{"entry":[{},"Group."]},{"entry":["Application Profile and Product","Each Application Profile must be associated with a Product Version"]},{"entry":["Version Group","Version Group Group. The PVG contains the master set of features"]},{"entry":[{},"available for tracking via this Application Profile."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The Profile Database typically includes two \u201cDefault\u201d objects: (i) Default Group, and (ii) Default Monitoring Profile. In a preferred implementation of the Profile Database these objects always exist and cannot be deleted or re-named. These objects allow database integrity rules to be followed without forcing cascaded deletes during certain object deletion operations. When a group object is deleted, integrity rules dictate that the users assigned to the group must be deleted also. However, with the introduction of the Default Group it is possible to (optionally) re-assign the users to the Default Group rather than delete them.","The Default Monitoring Profile works similarly. Database integrity rules dictate that when a monitoring profile is deleted, the delete must cascade to groups using the monitoring profile, since groups are required to have a monitoring profile. With the introduction of the Default Monitoring Profile object, it is possible to (optionally) re-assign these groups to the Default Monitoring Profile, rather than deleting them.",{"@attributes":{"id":"p-0168","num":"0211"},"figref":["FIG. 27","FIG. 27","FIG. 27"]},"Table VI describes an exemplary set of default responses to error results from COM interface methods used by the profile builder . Certain exceptions to these responses are described on a per method basis in the tables that follow.",{"@attributes":{"id":"p-0170","num":"0213"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE VI"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"HRESULT Classes","Default Error Response"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"E_FAIL"]},{"entry":[{},"E_NOCOM"]},{"entry":[{},"E_FAULT"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Table VII describes the responses of profile builders  to error results from the implementation of the IProfileObjects interface through the database object broker .",{"@attributes":{"id":"p-0172","num":"0215"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE VII"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"IProfileObjects Method","Error Response"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EnumUsers ( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"EnumGroups ( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"EnumMonProfiles( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"EnumAppProfiles( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"EnumSubnetMappings( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Table VIII describes the responses of profile builders  to error results from the implementation of the IProfileserver moduleEdit interface through the database object broker .",{"@attributes":{"id":"p-0174","num":"0217"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE VIII"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"IProfileserver",{}]},{"entry":[{},"moduleEdit Method","Error Response"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NewMonitoringProfile( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"DeleteMonitoringProfile( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"EditMonitoringProfile( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"NewApplicationProfile( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"DeleteApplicationProfile( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"EditApplicationProfile( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"NewGroup( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"DeleteGroup ( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"EditGroup ( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"NewUser( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"DeleteUser ( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"EditUser( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"NewSubnetMapping( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"DeleteSubnetMapping( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT -"]},{"entry":[{},"EditSubnetMapping( )","E_FAIL -"]},{"entry":[{},{},"E_NOCOM -"]},{"entry":[{},{},"E_FAULT-"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The server side components most directly associated with the Profile Management Subsystem are the database object broker  and the profile database . It is one of the primary tasks of the database object broker  to provide access to profile data for both Profile Management and Monitoring. In addition, the Profile Monitoring Objects created and edited by the profile builder  are stored in the Profile Database via interfaces of the database object broker .","Client Service",{"@attributes":{"id":"p-0177","num":"0220"},"figref":"FIG. 28","b":["12","50","12","12","50","50","22","50","22"]},{"@attributes":{"id":"p-0178","num":"0221"},"figref":"FIG. 29","b":["50","22","50","22","22","22","50","22","22","50","22","50","22"]},"The client service  uses the IClientMonitoringAgent interface of the client monitoring agent to initialize and control the monitoring agent. Commands received via the ISageControlSink are passed through to the client monitoring agent. These include Suspend\/Resume Data Collection and Profile Update commands. Also the client service  will synchronize the client monitoring agent before logging off to ensure that all data has been sent to the server module. When the client monitoring agent is initialized it is handed a pointer to the ICollectionStatusSink interface of the client service . The client monitoring agent uses this interface to provide feedback to the client service  regarding its state as well as to signal the client service  when data is ready for transmission to the server module .","The foregoing discussion describes the monitoring system in a fully connected and steady state mode of operation. As is described below, other relationships between the components of the monitoring system are established during initialization and termination of such operation. In a preferred implementation the client Service executes on the Client continuously, even in the event that a user is not logged onto the client. The client service  watches for certain events in order to initiate a conversation with the server module . Table IX describes the operations performed by the client service  in response to certain events:",{"@attributes":{"id":"p-0181","num":"0224"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE IX"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Event","Actions Taken by the client service 50"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User Login","1. Connect to server module 22 telling it who logged in."]},{"entry":[{},"2. Retrieve from the server module 22 the appropriate monitoring profile."]},{"entry":[{},"3. Start up a client monitoring agent, passing the client the relevant"]},{"entry":[{},"profiling information and the ICollectionStatus sink of the client"]},{"entry":[{},"service 50."]},{"entry":[{},"4. Sign up as a listener on the appropriate server module 22's"]},{"entry":[{},"outgoing interfaces."]},{"entry":[{},"Notice that prior to the user login, the client service 50 had no"]},{"entry":[{},"connection to the server module 22. An assumption of this model is"]},{"entry":[{},"that if there is no user logged in on a client, there is no information to"]},{"entry":[{},"be collected, thus no communication between client service 50 and"]},{"entry":[{},"server module 22."]},{"entry":[{},"For a multiuser terminal server where more than one user can log on,"]},{"entry":[{},"the above sequence is modified. If another user has logged on to the"]},{"entry":[{},"client such that a connection has already been made to the server, then"]},{"entry":[{},"the last step (4) is not necessary."]},{"entry":["User Logoff","1. Resign as a listener on all server module 22's outgoing interfaces."]},{"entry":[{},"2. Shutdown the client monitoring agent (if one is running). The"]},{"entry":[{},"client will pass any buffered information to the server module 22 as"]},{"entry":[{},"part of its shutdown sequence."]},{"entry":[{},"3. Disconnect from the server module 22. As part of the"]},{"entry":[{},"disconnection the client service 50 will tell the server module 22 of"]},{"entry":[{},"the logoff event."]},{"entry":[{},"4. Watch for the next login event."]},{"entry":[{},"Again this sequence assumes that only one user has logged on and is"]},{"entry":[{},"now logging off. In multiuser client environments, steps 1 and 3 are"]},{"entry":[{},"performed only when the last user has logged off."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In addition to watching for system events (in order to notify the server module ), the client service  listens to the server module 's outgoing commands via the callback registry. The notifications possible, along with the client service 's response, are described in Table X. These notifications can only occur while the client service  is listening to the server module , which implies that at least one user has logged on.",{"@attributes":{"id":"p-0183","num":"0226"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE X"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Server Module to Client","Notification Meaning And Actions Taken by the Client"]},{"entry":["Service Notification","Service"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Reread Profile","This informs the client service 50 that the profile currently in use by the"]},{"entry":[{},"client monitoring agent has been updated, and must be re-read from the"]},{"entry":[{},"server module 22."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"1. Request an updated profile from the server module 22."]},{"entry":[{},"2. Pass the updated profile to the client monitoring agent."]},{"entry":["Suspend Data Reporting","This informs the client service 50 that the server module 22 has"]},{"entry":[{},"determined that it would like the client monitoring agent associated with"]},{"entry":[{},"this client service 50 to stop reporting data for the time being."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"1. Tell the client monitoring agent to stop reporting, and furthermore"]},{"entry":[{},"to stop all data collection. The client monitoring agent will stop all"]},{"entry":[{},"monitoring and collection activities."]},{"entry":["Resume Data Reporting","This informs the client service 50 that the server module 22 would like"]},{"entry":[{},"to resume data reporting. This notification only makes sense when"]},{"entry":[{},"paired with a Suspend Data Reporting notification."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"1. Tell the client monitoring agent to resume reporting."]},{"entry":["Synchronize","This informs the client service 50 to flush cached monitoring data to the"]},{"entry":[{},"server."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"1. Tell the client monitoring agent to immediately flush any cached"]},{"entry":[{},"data to the server module 22."]},{"entry":["ServerShutdown","This informs the client service 50 that the server module 22 is planning"]},{"entry":[{},"to do a complete shutdown and all connections to the server should be"]},{"entry":[{},"dropped."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"Shutdown the client monitoring agent (no reconnect delay is given)"]},{"entry":[{},"Resign as a listener to the server module 22's outgoing interfaces."]},{"entry":[{},"Release all interface pointers on the server module."]},{"entry":[{},"As part of the notification, the client service 50 will also receive"]},{"entry":[{},"a DWORD argument known as a ReconnectionAttemptPolicy"]},{"entry":[{},"that determines when the client service 50 should attempt a re-"]},{"entry":[{},"connection. The possibilities for reconnection are:"]},{"entry":[{},"At the next logon event, and all successive logon events until one"]},{"entry":[{},"succeeds."]},{"entry":[{},"At some periodic interval after a delay of n seconds. This instructs"]},{"entry":[{},"the client service 50 to periodically attempt to re-connect to the"]},{"entry":[{},"server module 22 until success. The client service 50 only attempts"]},{"entry":[{},"re-connections if a user is currently logged on. When a user logs"]},{"entry":[{},"off, the client service 50 suspends re-connection attempts until a"]},{"entry":[{},"user logs back on."]},{"entry":[{},"Once a server module shut down notification has been given, along with"]},{"entry":[{},"the re-connection policy, the client service 50 will continue to use the"]},{"entry":[{},"re-connection policy until the next successful connection. After"]},{"entry":[{},"success, the re-connection policy is discarded."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"These notifications can be targeted to all or to specific users managed by the client service . The server moduleShutdown notification results in disconnecting all client monitoring agents as well as the client service  itself. When reconnected, all current client monitoring agents are re-initialized and connected to the server module.","Control of Client Services","Control of client service  is performed via the ISageControlSink interface:",{"@attributes":{"id":"p-0187","num":"0230"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"interface ISageControlSink: IUnknown"]},{"entry":[{},"{"]},{"entry":[{},"HRESULT EnumActiveClientDigest("]},{"entry":[{},"\u2003\u2003[out] IEnumActiveClientDigest** ppEnumClient);"]},{"entry":[{},"HRESULT RereadProfile("]},{"entry":[{},"\u2003\u2003[in] ULONG elems, [in, size is (elems), unique] DWORD*"]},{"entry":[{},"\u2003\u2003loginIDs);"]},{"entry":[{},"HRESULT SuspendDataCollection("]},{"entry":[{},"\u2003\u2003[in] ULONG elems, [in, size_is (elems), unique] DWORD*"]},{"entry":[{},"\u2003\u2003loginIDs);"]},{"entry":[{},"HRESULT ResumeDataCollection("]},{"entry":[{},"\u2003\u2003[in] ULONG elems, [in, size_is (elems), unique] DWORD*"]},{"entry":[{},"\u2003\u2003loginIDs);"]},{"entry":[{},"HRESULT SyncData("]},{"entry":[{},"\u2003\u2003[in] ULONG elems, [in, size_is (elems), unique] DWORD*"]},{"entry":[{},"\u2003\u2003loginIDs)"]},{"entry":[{},"HRESULT SyncEvents(void);"]},{"entry":[{},"HRESULT server moduleShutdown([in] DWORD delay);"]},{"entry":[{},"HRESULT GetNextDataPacket("]},{"entry":[{},"\u2003\u2003[in] DWORD Cookie, [in] LPCOLESTR pktName,"]},{"entry":[{},"\u2003\u2003[out] IDataPacket** pPacket);}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0188","num":"0231"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XI"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["ISageControlSink",{}]},{"entry":["Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["EnumActiveClientDigest( )","Used to retrieve a structure describing each user currently logged onto"]},{"entry":[{},"the client machine for which a client monitoring agent has been created."]},{"entry":["RereadProfile( )","Informs the server that those clients indicated in the argument list, or all"]},{"entry":[{},"clients if none, should reread their profiles."]},{"entry":["SuspendDataCollection( )","Called to suspend data collection by the server module's clients. The"]},{"entry":[{},"client service 50 need not release the IDataReport interface that it holds"]},{"entry":[{},"on the server module 22, and is not required to stop reporting data ready"]},{"entry":[{},"for transport."]},{"entry":[{},"Note that if a user on any client machine logs off during the time that"]},{"entry":[{},"data collection has been suspended there is no need for the"]},{"entry":[{},"corresponding ResumeDataCollection( ) notification, and none will be"]},{"entry":[{},"is delivered. The client service 50 will handle all future user log ins in"]},{"entry":[{},"the normal fashion."]},{"entry":["ResumeDataCollection( )","Called to inform the client service 50 that its clients should resume data"]},{"entry":[{},"collection. That is, once again its clients should begin collection"]},{"entry":[{},"monitoring data."]},{"entry":["SyncData( )","Called to request that the client monitoring agents immediately flush"]},{"entry":[{},"their current monitoring data cache to and notify the client service 50."]},{"entry":[{},"The client service 50 then informs the server module 22 of the ready"]},{"entry":[{},"data."]},{"entry":["SyncEvents( )","Informs the client service 50 to send any events in its log up to the"]},{"entry":[{},"assigned server module 22 which in turn incorporates them into the NT"]},{"entry":[{},"Event Log."]},{"entry":["server moduleShutdown( )","Called to direct all client service 50s that the server module 22 is going"]},{"entry":[{},"down and each client service 50 and client monitoring agent should"]},{"entry":[{},"immediately release all interface pointers on it. The method contains a"]},{"entry":[{},"single parameter to inform the client service 50 of the reconnection"]},{"entry":[{},"policy. The reconnection policy describes when the client service 50"]},{"entry":[{},"should attempt a re-connection. It could specify a periodic interval, or"]},{"entry":[{},"simply at the next login."]},{"entry":["GetNextDataPacket( )","Called by the server module 22 to get an IdataPacket interface on the"]},{"entry":[{},"indicated data packet. The server streams the packet from the client"]},{"entry":[{},"machine to the DBOB and then deletes the packet file."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Client Monitoring Agent","The client monitoring agent is a COM object supporting only one interface. A primary purpose of the client monitoring agent is to monitor a user's actions on a client machine and report the monitoring results to the server module . In a preferred implementation, one client monitoring agent is associated with each user logon. For a Windows95 or Windows NT workstation, there will typically be at most one client monitoring agent active on the client. In the case of a Window's Terminal server module in which many users may be logged on, there will generally be one client monitoring agent per active (logged on) user. When the user logs off, the client service  removes the client monitoring agent. Each client monitoring agent will typically be unaware of the applicable server module , and will be aware only of its associated client service .","Referring the , The client service  uses ISageserver module on the server module  to logon and logoff the server module  and request profiles for the user that has logged on. The logon to the server module  corresponds to the user logon to the client so that the monitoring is specific to the user on the particular client desktop. The client service  implements the ISageControlSink as the control interface for outgoing notifications from the server module . Using the ISageCallback interface of server module , the client service  registers its IsageControlSink interface to a \u201cSink\u201d COM object to receive these notifications from the server module . The control sink is created when the client service  first logs on to the server module .","The client service  uses the IClientMonitoringAgent interface of the client monitoring agent to initialize and control the monitoring agent. Commands received via the ISageControlSink are passed through to the client monitoring agent. These include Suspend\/Resume Data Collection and Profile Update commands. Also the client service  will synchronize the client monitoring agent before logging off to ensure that all data has been sent to the server module. When the client monitoring agent is initialized it is handed a pointer to the ICollectionStatusSink interface of the client service . The client monitoring agent uses this interface to provide feedback to the client service  regarding its state as well as to signal the client service  when data is ready for transmission to the server module .","In a preferred implementation the client service  run continuously on the applicable client computer  even when a user is not logged on. The client service  watches for certain events in order to initiate a conversation with the server module . Table XII below shows the events and the actions taken by the client service  for each:",{"@attributes":{"id":"p-0194","num":"0237"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Event","Actions Taken by the Client Service"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User Login","5. Connect to server module 22 telling it who logged in."]},{"entry":[{},"6. Retrieve from the server module 22 the appropriate monitoring profile."]},{"entry":[{},"7. Start up a client monitoring agent, passing the client the relevant"]},{"entry":[{},"profiling information and the ICollectionStatus sink of the client service"]},{"entry":[{},"50."]},{"entry":[{},"8. Sign up as a listener on the appropriate server module 22's"]},{"entry":[{},"outgoing interfaces."]},{"entry":[{},"Notice that prior to the user login, the client service 50 had no"]},{"entry":[{},"connection to the server module 22. An assumption of this model is that"]},{"entry":[{},"if there is no user logged in on a client, there is no information to be"]},{"entry":[{},"collected, thus no communication between client service 50 and server"]},{"entry":[{},"module 22."]},{"entry":[{},"For a multiuser terminal server where more than one user can log on,"]},{"entry":[{},"the above sequence is modified. If another user has logged on to the"]},{"entry":[{},"client such that a connection has already been made to the server, then"]},{"entry":[{},"the last step (4) is not necessary."]},{"entry":["User Logoff","5. Resign as a listener on all server module 22's outgoing interfaces."]},{"entry":[{},"6. Shutdown the client monitoring agent (if one is running). The"]},{"entry":[{},"client will pass any buffered information to the server module 22 as part"]},{"entry":[{},"of its shutdown sequence."]},{"entry":[{},"7. Disconnect from the server module 22. As part of the"]},{"entry":[{},"disconnection the client service 50 will tell the server module 22 of the"]},{"entry":[{},"logoff event."]},{"entry":[{},"8. Watch for the next login event."]},{"entry":[{},"Again this sequence assumes that only one user has logged on and is"]},{"entry":[{},"now logging off. In multiuser client environments, steps 1 and 3 are"]},{"entry":[{},"performed only when the last user has logged off."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In addition to watching for system events (in order to notify the server module ), the client service  is listening to the outgoing commands of server module  via the callback registry. The notifications possible, along with the response of the client service  are shown in Table XIII below. These notifications only occur while the client service  is listening to the server module , which implies that at least one user has logged on.",{"@attributes":{"id":"p-0196","num":"0239"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XIII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Server Module to",{}]},{"entry":["Client Service","Notification Meaning And Actions Taken by the Client"]},{"entry":["Notification","Service"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Reread Profile","This informs the client service 50 that the profile currently in use by the"]},{"entry":[{},"client monitoring agent has been updated, and must be re-read from the"]},{"entry":[{},"server module 22."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"3. Request an updated profile from the server module 22."]},{"entry":[{},"4. Pass the updated profile to the client monitoring agent."]},{"entry":["Suspend Data Reporting","This informs the client service 50 that the server module 22 has"]},{"entry":[{},"determined that it would like the client monitoring agent associated with"]},{"entry":[{},"this client service 50 to stop reporting data for the time being."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"2. Tell the client monitoring agent to stop reporting, and furthermore to"]},{"entry":[{},"stop all data collection. The client monitoring agent will stop all"]},{"entry":[{},"monitoring and collection activities."]},{"entry":["Resume Data Reporting","This informs the client service 50 that the server module 22 would like to"]},{"entry":[{},"resume data reporting. This notification only makes sense when paired"]},{"entry":[{},"with a Suspend Data Reporting notification."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"2. Tell the client monitoring agent to resume reporting."]},{"entry":["Synchronize","This informs the client service 50 to flush cached monitoring data to the"]},{"entry":[{},"server."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"2. Tell the client monitoring agent to immediately flush any cached data"]},{"entry":[{},"to the server module 22."]},{"entry":["Server","This informs the client service 50 that the server module 22 is planning to"]},{"entry":["Module Shutdown","do a complete shutdown and all connections to the server should be"]},{"entry":[{},"dropped."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"Shutdown the client monitoring agent (no reconnect delay is given)"]},{"entry":[{},"Resign as a listener to the server module 22's outgoing interfaces."]},{"entry":[{},"Release all interface pointers on the server module."]},{"entry":[{},"As part of the notification, the client service 50 will also receive a"]},{"entry":[{},"DWORD argument known as a ReconnectionAttemptPolicy that"]},{"entry":[{},"determines when the client service 50 should attempt a re-"]},{"entry":[{},"connection. The possibilities for reconnection are:"]},{"entry":[{},"At the next logon event, and all successive logon events until one"]},{"entry":[{},"succeeds."]},{"entry":[{},"At some periodic interval after a delay of n seconds. This instructs the"]},{"entry":[{},"client service 50 to periodically attempt to re-connect to the server"]},{"entry":[{},"module 22 until success. The client service 50 only attempts re-"]},{"entry":[{},"connections if a user is currently logged on. When a user logs off, the"]},{"entry":[{},"client service 50 suspends re-connection attempts until a user logs back"]},{"entry":[{},"on."]},{"entry":[{},"Once a server ModuleShutdown notification has been given, along with the"]},{"entry":[{},"re-connection policy, the client service 50 will continue to use the re-"]},{"entry":[{},"connection policy until the next successful connection. After success, the"]},{"entry":[{},"re-connection policy is discarded."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The notifications described in Table XIII can be targeted to all or to specific users managed by the client service . The server module Shutdown notification results in disconnecting all client monitoring agents as well as the client service  itself. When reconnected, all current client monitoring agents are re-initialized and connected to the server module. It should be understood that the client service  controls the client monitoring agent via the IClientMonitoringAgent interface, but that the client monitoring agent does not interface with the client service .","Relationship of Client Monitoring Agent to Client Service","The IClientMonitoringAgent interface is used to control the client monitoring, and is described below and in Table XIV:",{"@attributes":{"id":"p-0200","num":"0243"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"interface IClientMonitoringAgent : IUnknown"]},{"entry":[{},"{"]},{"entry":[{},"HRESULT Initialize([in]) TActiveClientDigest* userInfo,"]},{"entry":[{},"\u2003\u2003[in] ICollectionStatusSink* pCollectionStatusSink,"]},{"entry":[{},"\u2003\u2003[in] IProfileInfo* pProfile,"]},{"entry":[{},"\u2003\u2003(out) DWORD* pid);"]},{"entry":[{},"HRESULT ProfileUpdate([in] IProfileInfo* pProfile);"]},{"entry":[{},"HRESULT SuspendDataCollection( );"]},{"entry":[{},"HRESULT ResumeDataCollection( );"]},{"entry":[{},"HRESULT Synchronize( );};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0201","num":"0244"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XIV"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IClientMonitoringAgent",{}]},{"entry":["Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Initialize( )","Called by the client service 50 to pass the ClientMonitoringAgent the"]},{"entry":[{},"Monitoring Profile to use. The client digest is also passed so identifying"]},{"entry":[{},"information about the client can be included in the data packets."]},{"entry":["ProfileUpdate( )","Called by the client service 50 to instruct the client monitoring agent to"]},{"entry":[{},"use an updated profile."]},{"entry":["SuspendDataCollection( )","Called by the client service 50 to inform the client that it should suspend"]},{"entry":[{},"data collection. After receiving this message the client monitoring"]},{"entry":[{},"agent should flush its cached buffer of monitoring data, then stop all"]},{"entry":[{},"collection and reporting until a ResumDataCollection( ) call."]},{"entry":["ResumeDataCollection( )","Called by the client service 50 to inform the client that it should resume"]},{"entry":[{},"data collection. This is called after a call to SuspendDataCollection. If"]},{"entry":[{},"the client monitoring agent is not already in the suspended state this call"]},{"entry":[{},"is ignored."]},{"entry":["Synchronize( )","Called by the client service 50 to request that the client monitoring"]},{"entry":[{},"agent immediately flush its current monitoring data cache. The client"]},{"entry":[{},"monitoring agent should respond by calling"]},{"entry":[{},"ICollectionStatusSink::Synchronize( ) to notify the client service 50 of"]},{"entry":[{},"the new data packet."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Data Packet","Each data packet is fetched from the client service  by the server module , but is built by the client monitoring agent. When the size of the packet being currently assembled by the client monitoring agent exceeds the maximum size specified in the Monitoring Profile, or the reporting interval specified in the Monitoring Profile is exceeded, the current packet is streamed to a file and the client service  signaled with ICollectionStatusSink::Synchronize( ). The client service  will report the presence of ready data to the server module  via IdataReport::SignalPacketReady( ). The data packet object (an implementor of IdataPacket) shown in the argument list of the server module's ISageControlSink::GetNextDataPacket( ) is defined as:",{"@attributes":{"id":"p-0204","num":"0247"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"interface IDataPacket: IContentSource"},{"entry":"{"},{"entry":"HRESULT EnumDataItems([out] IEnumDataItem** \u2002ppEnumDataItems);"},{"entry":"HRESULT GetHeader([out] IDataHeader** \u2003ppDataHeader);"},{"entry":"HRESULT AddDataItem([in] TPersistentDataItem* \u2002pltem,"},{"entry":"\u2003\u2003(out]DWORD* retId);"},{"entry":"HRESULT GetPacketFileName([in] LPOLESTR* lazyFile);"},{"entry":"HRESULT DeletePacketFile(void) ; }"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0205","num":"0248"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XV"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IDataPacket",{}]},{"entry":["Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["EnumerateDataItems( )","Enumerates the instances of TPersistentDataItem contained in the"]},{"entry":[{},"packet by reading the data items from the body of the packet. The"]},{"entry":[{},"enumeration retrieves the actual data items."]},{"entry":["GetHeader ( )","Returns an IDataHeader interface pointer that can be used to read the"]},{"entry":[{},"RFC 822 style name value pairs contained in the header. This is only a"]},{"entry":[{},"pointer to an interface and not the contents of the header."]},{"entry":["AddDataItem( )","Adds a single TPersistentDataItem to the body of the packet. This is"]},{"entry":[{},"one single piece of collected monitoring data. This method is used by"]},{"entry":[{},"the client monitoring agent to insert data items into the packet."]},{"entry":["GetPacketFileName( )","Fetches the name of the file (if any) from which the state of the data"]},{"entry":[{},"packet was loaded."]},{"entry":["DeletePacketFile( )","Called by the server module 22 to delete the data packet residing on the"]},{"entry":[{},"client after its contents have been streamed to the DBOB and"]},{"entry":[{},"successfully entered into the DBMS."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"An IDataPacket contains between zero and \u201ck\u201d TPersistentDataItems. The structure TPersistentDataItem provides a means to operate on an individual DataItem (a record of some desktop event), as an object.","The role of the IDataHeader is to tag the IDataPacket with an RFC822 style header containing name value pairs that serve to identify the data. Information such as sample time, sample sequence number, software version, userid, client IP address, etc. should be included here, along with the content-type label of application\/x-sagedata. Ultimately, security related information such as a certificate could also be placed here.",{"@attributes":{"id":"p-0208","num":"0251"},"figref":"FIG. 30","ul":{"@attributes":{"id":"ul0021","list-style":"none"},"li":{"@attributes":{"id":"ul0021-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0022","list-style":"none"},"li":"HRESULT GetContentStream([out) IStream** ppStrm);"}}}},"This method enables the caller to get a stream to which the serialized state of the packet has been written. Each DataItem contained in the DataPacket represents an occurrence on the desktop, specified for collection by the Monitoring Profile loaded by the client monitoring agent. The DataItem is reported as a Meta-Event instead of as the raw information generated by the Accessibility Callback or Win32 Hook Filter Procedure which trapped the message. Condensing raw events into meta events advantageously allows the volume of data to be reduced and facilitates a simplified data base schema.","Data Header",{"@attributes":{"id":"p-0211","num":"0255"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003interface IDataHeader : IContentSource"},{"entry":"{"},{"entry":"\u2003\u2003HRESULT EnumProperties( [out) IEnumString** \u2003ppEnumProps);"},{"entry":"\u2003\u2003HRESULT EnumValues( [out) IEnumString** \u2003ppEnumValues);"},{"entry":"\u2003\u2003HRESULT SetValue( [in] LPCOLESTR element, [in] LPCOLESTR"},{"entry":"\u2003\u2003value);"},{"entry":"\u2003\u2003HRESULT GetValue( [in] LPCOLESTR element, [out] LPOLESTR*"},{"entry":"\u2003\u2003value);"},{"entry":"\u2003\u2003HRESULT Remove( [in] LPCOLESTR property);"},{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0212","num":"0256"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XVI"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IDataHeader Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["EnumProperties( )","Enumerates the properties (value names) held in the header. This pulls"]},{"entry":[{},"all of the names to the server module from the client agent."]},{"entry":["EnumValues( )","Enumerates the values for all of the properties held in the header. This"]},{"entry":[{},"enumeration corresponds one-to-one to the enumerated properties from"]},{"entry":[{},"the above EnumProperties method."]},{"entry":["SetValue( )","This inserts a name (property) value pair into the data packet header."]},{"entry":[{},"Both the name and value are strings."]},{"entry":["GetValue( )","Gets the value corresponding to the named property."]},{"entry":["Remove( )","Removes the named property value pair from the header."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The server module  calls ISageControlSink::GetNextDataPacket( ) on the client service  to pick up the next ready data packet. From IDataPacket the server module  gets a content stream and streams the packet from the Client to the DBOB . The DBOB  enters the DataItems into the DBMS  and then returns. On a successful return the server module  will call IDataPacket::DeleteFile( ). TPersistentDataItem is defined in the IEnumDataItems interface as follows:",{"@attributes":{"id":"p-0214","num":"0258"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"typedef struct tagTPersistentDataltem"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003\/\/ Type of object stored"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003DWORD","\u2003\u2003\u2003\u2003type;"]},{"entry":[{},"\u2003\u2003\/\/Data and data size"]},{"entry":[{},"\u2003\u2003DWORD","\u2003\u2003dataSize;"]},{"entry":[{},"\u2003\u2003[size_is(dataSize),unique] byte*","data;"]},{"entry":[{},"} \u2002TPersistentDataItem;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Note that the DataItem is a container for an opaque object. Each occurrence on the desktop that is recorded has a definition known only to the client monitoring agent and the DBOB . The modules which handle the data before it is actually entered in the DBMS (client service  & server module ) are aware only of the TPersistentDataItem. The actual type of data item is indicated by the type member and used by the DBOB  to cast the data member to the appropriate final type. The dataSize member is used only for marshalling the structure. Use of an opaque data type keeps the Interface Definition Language simple and the source code extensible without violating COM conventions for interface versioning.","Server Module","The primary functions of the server module  are:\n\n","The server module  typically runs on a central NT server as part of the Monitoring Subsystem. Although the server module  appears to connecting clients as if it were always running, server module  may be implemented as a COM object and therefore only needs to be executing if at least one client monitoring agent or client service  is currently connected. COM will arrange to re-start the server module  at upon each attempt to establish such a connection. The server module  maintains the following state information:\n\n","By \u201cmaintain\u201d it is meant that applicable information persists regardless of whether or not the server module  is active or not. In addition to serving the needs of its clients, the server module  also functions as a node in an ordered network of cooperating server modules. In order to keep network bandwidth use to acceptable levels and manage database transactions, cooperation among the server modules on the network with a minimum of negotiation and communications is desirable. The need to provide centralized and effective management of the network also dictates that the servers have limited awareness of one another.","These considerations have lead to development of the hierarchical network of . In  it is assumed that each server module has between zero and \u201cn\u201d clients, a single superior, and between zero and \u201cm\u201d subordinates. Though network topology is fixed during system operations, changing superior and subordinate connections can be used to easily realign node connections.","Referring to , an Admin Console serves as the user interface (\u201cUI\u201d) for any given server module . There need not be, and typically is not, a one-to-one relationship between instances of Admin Consoles and server modules. With appropriate permission any Admin Console installation may connect to an arbitrary instance of server module . Through the use of the Iserver moduleAdmin interface implemented by server module , a user of the Admin Console configures and maintains the server module  installation. The Admin Console UI also provides access to features of the server module  reserved exclusively for use by the administrator. Operations such as start\/stop monitoring, client list, etc. are performed directly, or facilitated by, the server module  to which the Admin Console is currently connected.","Relationship of Server Module to DBOB",{"@attributes":{"id":"p-0223","num":"0274"},"figref":"FIG. 33","b":["22","74","22","74","22","22","22","74","74"]},"Access Method to Profile Service",{"@attributes":{"id":"p-0225","num":"0276"},"figref":"FIG. 34","b":["22","12","50","22"]},"This is in essence an indirect profile request as the monitoring profile to be applied is one of the arguments returned by the Login method. The server module  consults the Profile Service, which replies with the defined profile most specific to the requester.","Access Method to Monitoring Data",{"@attributes":{"id":"p-0228","num":"0279"},"figref":"FIG. 35","b":["22","22","50","50","22","50","22","74"]},"Handling of Monitoring Data","Like profile information, monitoring data is modeled on the network as an instance of an object. The object implements IDataPacket and is NOT passed by value. The packet contains a set of data items, each of which describes an event that occurred on the desktop. Access to the data items as well as the header information carried by a data packet is provided through the IDataPacket interface.","Because data packets may be streamed (the packet object extends IContentSource) they can also be easily saved to a file (serialized). Serialized data packets existing outside the DBMS should be saved with a unique file type, * .pkt. Files of type .pkt shall be given the MIME Type application\/x-sagedata and be associated with the Data Analysis Toolkit (DAT) in the registry.","When a client monitoring agent has a read packet of data it serializes the packet to a file and signals its client service  (ICollectionStatusSink::Synchronize( )). The client service  in turn signals the server module  (IDataReport::SignalPacketReady( )). The SignalPacketReady( ) method places the packet information on the packet queue and signals the thread which services the FIFO queue.","Upon being signaled the packet processing thread services the packet queue until it is empty at which time the thread returns to a dormant state. For each entry in the queue, the packet processing thread will call back to the appropriate instance of the client service  and get the next ready packets IDataPacket interface via ISageControlSink::GetNextDataPacket( ). The server module  treats the packet as an opaque object and streams it to the DBOB. The DBOB inflates the packet instance using the serialzed state from the stream. The DBOB then enumerates the Data Items and enters them into the appropriate DBMS tables. When control is returned the server module  the return code indicates whether or not all Data Items were successfully entered in the DBMS, if so the server module  commands the Data Packet to delete itself. If packet processing failed or was only paritally successful the packet will be requeued at a later time by the client service .","Note that the server module pulls data from each client rather than each client \u201cpushing\u201d data to the applicable server module. This architecture advantageously provides for improved data throughput by distributing the tasks of data processing across all cooperating objects.","Threading of Monitoring Data","The server module's need to efficiently handle the data reporting transactions initiated by its many clients, requires that the process of loading the monitoring data into the DBMS be as streamlined as possible. Getting the data into the DBMS represents the biggest factor controlling performance, heavily influencing the number of clients that a given server can handle.","Streamlining the data reporting process begins with the client service , which employs an asynchronous data signaling scheme. In accordance with this scheme, a data packet is not passed by value from the client service to the server module . The monitoring agent passes information identifying the ready packet to the server module  via IDataReport. This method simply places the packet informat on a queue managed by another thread, signals the thread, and then returns. The server module is then free to accept the next client connection. The main \u201cpacket manager\u201d thread of the server module services each packet streaming the packet from the client service  to the DBOB. This asynchronous reporting scheme with data \u201cpull\u201d prevents the server from being overloaded by many clients attempting to report data concurrently.","Relationship to Client Service",{"@attributes":{"id":"p-0239","num":"0290"},"figref":["FIG. 36","FIG. 37"],"b":["22","50","50","22","22","50","22","50"]},{"@attributes":{"id":"p-0240","num":"0291"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XVII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Event","Actions Taken by the Client Service"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User Login","1. Connect to server module 22 telling it who logged in."]},{"entry":[{},"2. Retrieve from the server module 22 the appropriate monitoring profile."]},{"entry":[{},"3. Based on the profile, start up a client monitoring agent, passing the"]},{"entry":[{},"\u2002\u2009 client the relevant profiling information, and an interface pointer to"]},{"entry":[{},"\u2002\u2009 the server module 22."]},{"entry":[{},"4. Sign up as a listener on the appropriate server module 22's outgoing"]},{"entry":[{},"\u2002\u2009 interfaces."]},{"entry":[{},"Notice that prior to the user login, the client service 50 had no"]},{"entry":[{},"connection to the server module 22. An assumption of this model is that"]},{"entry":[{},"if there is no user logged in on a client, there is no information to be"]},{"entry":[{},"collected, thus no communication between client service 50 and server"]},{"entry":[{},"module 22."]},{"entry":["User Logoff","1. Resign as a listener on all server module 22's outgoing interfaces."]},{"entry":[{},"2. Shutdown the client monitoring agent (if one is running). The"]},{"entry":[{},"\u2002\u2009 client will pass any buffered information to the server module 22 as"]},{"entry":[{},"\u2002\u2009 part of its shutdown sequence."]},{"entry":[{},"3. Disconnect from the server module 22. As part of the"]},{"entry":[{},"\u2002\u2009 disconnection the client service 50 will tell the server module 22 of"]},{"entry":[{},"\u2002\u2009 the logoff event."]},{"entry":[{},"4. Watch for the next login event."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In addition to watching for system events (in order to provide notification to the server module), the client service  is listening on the outgoing notification interface of the applicable server module . An outgoing interface may be realized similarly to a JAVA listener interface, except the source and sink (listener) objects can be on remote machines. The notifications, along with the action taken by the client service  are described in Table XVIII below. In a preferred implementation these notifications can only occur while the client service  is listening on the outgoing interface of the applicable server module . In addition, the client service  is configured to listen only during the time a user is actually logged in.",{"@attributes":{"id":"p-0242","num":"0293"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XVIII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Server Module to Client",{}]},{"entry":["Service Notification","Notification Meaning And Actions Taken by the Client Service"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Reread Profile","This informs the client service 50 that the profile currently in"]},{"entry":[{},"use by the client monitoring agent has been updated, and must"]},{"entry":[{},"be re-read from the server module 22."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"1. Request an updated profile from the server module 22."]},{"entry":[{},"2. Pass the updated profile to the client monitoring agent."]},{"entry":["Suspend Data Reporting","This informs the client service 50 that the server module 22"]},{"entry":[{},"has determined that it would like the client monitoring agent"]},{"entry":[{},"associated with this client service 50 to stop reporting data for"]},{"entry":[{},"the time being."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"1. Tell the client monitoring agent to stop reporting, and furthermore"]},{"entry":[{},"to stop all data collection. The client monitoring agent will stop all"]},{"entry":[{},"monitoring and collection activities."]},{"entry":["Resume Data Reporting","This informs the client service 50 that the server module 22"]},{"entry":[{},"would like it to resume data reporting. This notification only"]},{"entry":[{},"makes sense when paired with a Suspend Data Reporting"]},{"entry":[{},"notification."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"1. Tell the client monitoring agent to resume reporting."]},{"entry":["Synchronize Data","This informs the client service 50 that the server module 22"]},{"entry":[{},"would like to have any client side cached monitoring data"]},{"entry":[{},"flushed to the server module."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"1. Tell the client monitoring agent to immediately flush any cached"]},{"entry":[{},"data to the server module 22."]},{"entry":["Synchronize Events","This informs the client service 50 that the server module 22"]},{"entry":[{},"would like to have any client side cached monitoring data"]},{"entry":[{},"flushed to the server module."]},{"entry":[{},"In response to this notification, the client service 50 must immediately"]},{"entry":[{},"send any events in the client side log to the server."]},{"entry":["Server","This informs the client service 50 that the server module 22 is"]},{"entry":["ModuleShutdown","planning to do a complete shutdown and all connections to the"]},{"entry":[{},"server should be dropped."]},{"entry":[{},"In response to this notification, the client service 50 must:"]},{"entry":[{},"Shutdown the client monitoring agent."]},{"entry":[{},"Resign as a listener to the server module 22's outgoing interfaces."]},{"entry":[{},"Release all interface pointers on the server module."]},{"entry":[{},"As part of the notification, the client service 50 will also"]},{"entry":[{},"receive a packet of data, known as a"]},{"entry":[{},"ReconnectionAttemptPolicy, which determines when the"]},{"entry":[{},"client service 50 should attempt a re-connection. The"]},{"entry":[{},"possibilities for reconnection are:"]},{"entry":[{},"At the next logon event, and all successive logon events until one"]},{"entry":[{},"succeeds."]},{"entry":[{},"At some periodic interval. This instructs the client service 50 to"]},{"entry":[{},"periodically attempt to re-connect to the server module 22 until"]},{"entry":[{},"success. The client service 50 only attempts re-connections if a"]},{"entry":[{},"user is currently logged on. When a user logs off, the client service"]},{"entry":[{},"50 suspends re-connection attempts until a user logs back on."]},{"entry":[{},"Once a server ModuleShutdown notification has been given, along with"]},{"entry":[{},"the re-connection policy, the client service 50 will continue to use the"]},{"entry":[{},"re-connection policy until the next successful connection. After"]},{"entry":[{},"success, the re-connection policy is discarded."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0243","num":"0294"},"figref":["FIG. 38","FIG. 38"],"b":["22","52","22"]},{"@attributes":{"id":"p-0244","num":"0295"},"figref":["FIG. 39","FIG. 31"]},"Networked server modules collaborate through use of the ISageControlSink interface described above (the same callback interface implemented by the client service ). The UI of the Admin Console provides a means to configure the server modules to repeat commands to all subordinate server modules. From any arbitrary server connection, the Admin Console can propagate commands up to the root server module, which then propagates notifications down the hierarchy to the clients via the ISageControlSink interface. This feature provides a means to centrally and concurrently administer sets of server modules. In a large deployment, the ability to map the network of servers and delegate management of certain areas to sub-administrators eases administration.","Interfaces",{"@attributes":{"id":"p-0247","num":"0298"},"figref":"FIG. 40","b":"22"},"Data Reporting Interface (IDataReport)","The client service  has exclusive use of the IDataReport interface. Through this interface a client service  notifies the server module  of ready data collected by its Monitoring. The data items contained within a report packet are then inserted into the database via the DBOB .",{"@attributes":{"id":"p-0250","num":"0301"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"interface IDataReport : IUnknown"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003HRESULT SignalPacketReady( [in] DWORD CBCookie,"]},{"entry":[{},"\u2003\u2003[in] LPOLESTR pktName);"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0251","num":"0302"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XIX"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IDataReport Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["SignalPacketReady( )","Called by the client service 50 to notify the server"]},{"entry":[{},"of data ready for archival in the database."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Servicing the Clients (ISageserver Module)","Interface ISageserver module is used by instances of the client service  to contact their assigned server module .",{"@attributes":{"id":"p-0254","num":"0305"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"interface ISageserver module : IUnknown"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003HRESULT Logon([in] OLECHAR"]},{"entry":[{},"\u2003\u2003wszUserName[MAX_SAGE_NAME],"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003wszClntHostName[MAX_SAGE_NAME],"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR wszIPMatch[MAX_SAGE_NAME],"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD \u2003\u2002CallbackID,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003[in] \u2003REFIID riid,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD logonTime,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003[out,iid_is(riid)] \u2002void** \u2002ppv, \/\/ profile"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003[out] DWORD* \u2002logonID);"]},{"entry":[{},"\u2003\u2003HRESULT Logoff( [in] DWORD CallbackID, \u2002[in] \u2002DWORD"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003LogonID, [in] DWORD logoffTime);"]},{"entry":[{},"\u2003\u2003HRESULT GetProfile( [in] DWORD CallbackID,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003[in] \u2002DWORD \u2002LogonID, [in] REFIID riid,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003[out,iid_is(riid)] void** \u2002ppv) ;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0255","num":"0306"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XX"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["ISageserver",{}]},{"entry":"module"},{"entry":["Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Logon( )","Called by the client service 50 when a user logs in at the"]},{"entry":[{},"client host. The parameters returned are used to initialize"]},{"entry":[{},"the client monitoring agent."]},{"entry":["Logoff( )","The Logoff method is called by the client service 50 when"]},{"entry":[{},"the user logs off the client host. The client shuts down the"]},{"entry":[{},"client monitoring agent, resigns as a listener of the server"]},{"entry":[{},"module 22's outgoing interface and is removed from the"]},{"entry":[{},"list of active clients maintained by the server module 22."]},{"entry":["GetProfile( )","A convenience method provided to directly fetch a"]},{"entry":[{},"Monitoring Profile."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Administration\/Configuration (Iserver moduleAdmin)","Used primarily by the implementation of the Admin Console and other servers modules, the Iserver moduleAdmin interface is used to configure and control a server module  and certain behaviors of its clients. The interface also provides generalized features such as:\n\n",{"@attributes":{"id":"p-0258","num":"0314"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"interface Iserver moduleAdmin: IUnknown"},{"entry":"{"},{"entry":"\u2003\u2003\u2003typedef struct tagserver moduleStatus"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003DWORD upSince; \/\/ a time_t"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003DWORD numActiveClients;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003BOOL \u2003repeatsCommands;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003DWORD packetsQueued;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003DWORD packetsProcessed;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003DWORD dataItemsProcessed;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003DWORD dataTransmitErrors;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003DWORD packetQueueHighWater;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003DWORD packetQueueHighWaterTime; \/\/ a time_t"},{"entry":"\u2003\u2003} Tserver moduleStatus;"},{"entry":"\u2003\u2003HRESULT EnumClients( [out] IEnumString**"},{"entry":"\u2003\u2003ppEnumClient);"},{"entry":"\u2003\u2003HRESULT EnumActiveClients( [out] IEnumString**"},{"entry":"\u2003\u2003ppEnumClient);"},{"entry":"\u2003\u2003HRESULT EnumSubordinateserver modules"},{"entry":"\u2003\u2002( [out] IEnumString** \u2002ppEnumserver module);"},{"entry":"\u2003\u2003HRESULT EnumActiveClientDigest ("},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003[out] IEnumActiveClientDigest** \u2002ppEnumClient);"},{"entry":"\u2003\u2003HRESULT RegisterAsSubordinate( [in] LPOLESTR subordinate);"},{"entry":"\u2003\u2003HRESULT DeRegisterAsSubordinate( [in] LPOLESTR subordinate);"},{"entry":"\u2003\u2003HRESULT GetSuperiorserver module( [out] LPOLESTR* \u2002superior);"},{"entry":"\u2003\u2003HRESULT SetSuperiorserver module( [in] LPOLESTR superior);"},{"entry":"\u2003\u2003HRESULT Getserver moduleStatus( [out] Tserver moduleStatus*"},{"entry":"\u2003\u2003status);"},{"entry":"\u2003\u2003HRESULT RepeatCommands( in] boolean bRepeat );"},{"entry":"\u2003\u2003HRESULT SetDBObjectBroker( [in] LPOLESTR"},{"entry":"\u2003\u2003dbObjectBrokerHost);"},{"entry":"\u2003\u2003HRESULT GetDBObjectBroker( [out] LPOLESTR*"},{"entry":"\u2003\u2003dbObjectBrokerHost);"},{"entry":"\u2003\u2003HRESULT GetDBOBAdmin( [out] IDBOBAdmin** \u2002ppAdmin);"},{"entry":"\u2003\u2003HRESULT Syncserver moduleState(void);"},{"entry":"\u2003\u2003HRESULT GetEventLogEnumerator( [in] LPOLESTR hostname,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003[in] TEventSource source,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003[out] \u2003IEnumNTEventLog** \u2002enumEvents) ;"},{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0259","num":"0315"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXI"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["ISage moduleAdmin",{}]},{"entry":["Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["EnumClients( )","Enumerates the clients that have historically reported their"]},{"entry":[{},"monitoring data to this server."]},{"entry":["EnumActiveClients( )","Enumerates the clients currently reporting monitoring data to this"]},{"entry":[{},"server."]},{"entry":["EnumSubordinatserver modules( )","Enumerates the servers which are subordinate to this server."]},{"entry":["EnumActiveClientDigest( )","Enumerates the active clients in more detail than EnumClients( )."]},{"entry":["RegisterAsSubordinate( )","Called by another server module 22 to register itself as a"]},{"entry":[{},"subordinate of the implementing server module."]},{"entry":["DeRegisterAsSubordinate( )","Called by another server module 22 to DE-register itself as a"]},{"entry":[{},"subordinate of the implementing server module."]},{"entry":["GetSuperiorserver module( )","Returns the an Iserver moduleAdmin interface pointer for the"]},{"entry":[{},"article confusion superior server of this server."]},{"entry":["SetSuperiorserver","Deregisters this server as a subordinate of its current superior (if"]},{"entry":["module( )","any) and registers it as a subordinate of the specified server."]},{"entry":["Getserver","Returns information outlining the state and general health of the"]},{"entry":["moduleStatus( )","server module 22."]},{"entry":["RepeatCommands( )","True of False, specifying whether or not to repeat commands or"]},{"entry":[{},"relayed by a superior server."]},{"entry":["SetDBObjectBroker( )","Configures the server module to use the indicated Data Base Object"]},{"entry":[{},"broker when reporting data."]},{"entry":["GetDBObjectBroker( )","Returns the hostname where the Data Base Object broker currently"]},{"entry":[{},"in use resides."]},{"entry":["GetDBOBAdmin( )","Fetches the interface used to administer the DBOB associated with"]},{"entry":[{},"this server."]},{"entry":["Syncserver","Forces the server to enumerate the active clients and update its"]},{"entry":["moduleState( )","internal state. Unresponsive clients are removed from the active"]},{"entry":[{},"client list"]},{"entry":["GetNTEventLogEnumerator( )","Fetches an enumerator which allows the client to fetch all events"]},{"entry":[{},"relative to the SAGE System. This is used to fill the log page of the"]},{"entry":[{},"Admin Console."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Subordinate Server Control (ISageControISink)","The server module  also implements the ISageControlSink implemented by the client service . This interface introduces a level of polymorphic behavior shared by all objects that populate the distribution tree. Iserver moduleAdmin provides navigational capability while ISageControlSink allows actions to be applied to any object (client or server) in a homogeneous fashion. Though the interface is the same, the behavior for the server module is subtly different from that of the client service  implementation. Typically the events received via this interface are propagated to the subordinate servers and the appropriate client services designated in the callback. Whether or not the commands are propagated to subordinate servers is controlled by the ISageAdmin interface from an instance of the Admin Console.","Register Server Control (ISageCall\/back)","ISageCallback is implemented by the server module  to allow clients to sign up as listeners on the outgoing interface of the server module . ISageCallback provides essentially the same semantics as the standard OLE interface IConnectionPointContainer, but can be more efficiently implemented. This same interface is used to register subordinate servers to receive the same callbacks.",{"@attributes":{"id":"p-0264","num":"0320"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"interface ISageCallback: IUnknown"]},{"entry":[{},"{"]},{"entry":[{},"\u2003HRESULT SetupCallback( [in] REFIID riid,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in,iid_is(riid)] IUnknown* \u2009pUnk,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] LPOLESTR pszMachineName,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] \u2002boolean bAdvise,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out] \u2009DWORD* \u2009pCookie);"]},{"entry":[{},"\u2003\u2003HRESULT Advise( [in] DWORD cookie);"]},{"entry":[{},"\u2003\u2003HRESULT UnAdvise( [in] DWORD cookie);"]},{"entry":[{},"\u2003\u2003HRESULT ShutdownCallBack( [in] DWORD cookie) ;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0265","num":"0321"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["ISageCallback Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["SetupCallback( )","Sign up the client REFIID as the listener for"]},{"entry":[{},"callbacks and direct all callbacks to pUnk. The"]},{"entry":[{},"machine name of the client is given for the"]},{"entry":[{},"callback connection. The advise flag indicates"]},{"entry":[{},"that the client should be notified when an event"]},{"entry":[{},"occurs (true) or temporarily suspend reports"]},{"entry":[{},"(false). The method responds with a cookie that"]},{"entry":[{},"identifies the client in subsequent calls to the"]},{"entry":[{},"server."]},{"entry":["Advise( )","Sets the advise flag."]},{"entry":["UnAdvice( )","Unsets the advise flag."]},{"entry":["ShutdownCallback( )","Unregister the client as a listener for server"]},{"entry":[{},"callbacks. The server permanently removes the"]},{"entry":[{},"client from its listener list."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Data Analysis Toolkit","The Data Analysis Toolkit (DAT) provides the means to view and compare the data collected by the client monitoring agents. The DAT is independent of the rest of the system components (except for the DBOB) and may be installed separately. The DAT packages a set of database queries and resulting reports and graphs into a unified user interface that is easy to use. As is indicated by , a reporting engine (e.g., a Crystal Reports Engine) is embedded in the DAT. This is to enable easy construction of robust reporting capabilities. The DAT is primarily a wrapper for the reports engine functioning to enable the selection, customization and use of a set of reports templates. The DAT may use one of two paths to the monitoring data database; namely, via the DBOB or using ODBC.","Graphical Presentations by User","The monitoring system of the invention enables analysts to view a history of activity by a single user. This includes the following presentations:\n\n","Graphical Presentations of User Comparisons","The analyst can view a comparison of multiple users to each other, and to the \u201caverage user\u201d. In an exemplary \u201chistogram comparison\u201d, the histograms of two or more users are overlapped in order to compare the activities of the users. Information such as the type of applications used, and for what duration of time, may be compared. One of the histograms can represent an average of many users.","Graphical Presentations by Application","The user can view a history of activity by a specific application. This includes the following presentations:\n\n","Computed Fields","The DAT can be used to review significant information items calculated from the raw data contained in the monitoring data database, such as:\n\n","In addition to the metrics described above, the DAT should provide a means to allow the user to construct a query against the DBMS. This feature allows the person responsible for evaluating the reported data to generate custom reports and graphics.","Integration with the Reports Engine","As explained in previous sections, the DAT is primarily a wrapper for the Reports Engine (Engine). The Engine is responsible for querying the database  and displaying the formatted results. The DAT functions only to provide a means to select and customize reports and manage the Engine. In a preferred implementation a Crystal Reports Designer, not the Engine, constructs report templates.","Each report template can be used by the DAT to create a report instance. Various template \u201cparameters\u201d can be used to customize each report instance. Perhaps the most important customization is the range or volume of data to be included in the report. This is done by manipulation of the \u201cwhere\u201d clause of the query that is part of the report. In addition, the Engine allows setting of various attributes of a report. Text items such as titles, chart types, header and footer items can be customized. However, the template and the associated query determine the basic layout and data schema of a report and cannot be changed within the DAT.","Handling of Data Analysis Reports","A significant aspect of the DAT architecture is that all report templates, report template parameters, and report property page specifications are held within the database  and read by the DAT. This makes it possible to extend the reports supported by the DAT simply by adding report specifications to the database . Table XXIII lists the components included within a report specification:",{"@attributes":{"id":"p-0282","num":"0348"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXIII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Component","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Report","A Crystal reports \u201c.rpt\u201d file (represented as a BLOB) in the"]},{"entry":["Template","database. The .rpt files are created using the Crystal Reports"]},{"entry":[{},"Report Designer Tool."]},{"entry":["Report","Information stored in the database that defines the settable"]},{"entry":["Params","aspects of the associated report template. Settable aspects"]},{"entry":[{},"include report title, report query conditions, chart types, etc."]},{"entry":[{},"The Report Param information also defines a mapping"]},{"entry":[{},"between parameters and property pages."]},{"entry":["Report","The Report Property pages are represented in the database"]},{"entry":["Property","as CLSID's. Each CLSID indicates a registered instance"]},{"entry":["Pages","of an OLE property page."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0283","num":"0349"},"figref":"FIG. 41","b":"80","ul":{"@attributes":{"id":"ul0035","list-style":"none"},"li":{"@attributes":{"id":"ul0035-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0036","list-style":"none"},"li":["1. Create a new report template the access the database  using the Crystal Reports Designer and add the report template to the database as a BLOB.","2. Determine the Property Pages that are necessary to set the Report Parameters. In many cases, the necessary property pages can be re-used from the pool of property pages already available. However, in some cases it will be necessary to create a new property page or set of pages for the report. Each property page is an OLE property page utilizing predefined interfaces to communicate with the DAT.","3. Add the Property Page CLSID's to the database and distribute the COM objects for the property pages to the client machines utilizing the DAT.","4. Set up the Parameter Description for the new report. This creates a mapping between the report template's settable aspect and the property page from which each parameter can be set."]}}}},"Exceptions and Error Handling","Table XXIV below describes the default responses to error results from COM interface methods used by the Data Analysis Toolkit. Any exceptions to these responses are described on a per method basis in the Tables that follow.",{"@attributes":{"id":"p-0286","num":"0356"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE XXIV"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"HRESULT Classes","Default Error Response"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"E_FAIL",{}]},{"entry":[{},"E_NOCOM"]},{"entry":[{},"E_FAULT"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"On the server side, the DBOB provides access to the Data Analysis Report objects that help to define the reports to be generated from the monitored data. Access to the actual monitor data is by direct access to the Monitoring Database via the Reports Engine.",{"@attributes":{"id":"p-0288","num":"0358"},"figref":["FIG. 42","FIG. 42"]},{"@attributes":{"id":"p-0289","num":"0359"},"figref":"FIG. 43"},"DBOB","The DBOB functions as a gateway to the Profile, Monitoring Data, and Report Template Databases. The DBOB represents data in each of these databases as independent objects. The DBOB provides a set of interfaces that support access and manipulation of these objects. The DBOB is ultimately responsible for the consistency of the objects relative to the data in these databases. The interfaces of the DBOB completely define how the data within the databases may be manipulated.","In providing access to, and managing databases, the DBOB isolates the low-level storage and methods used to access these from its clients. Clients of the DBOB see the data objects in a way that is natural to the client, rather than as database rows and columns.","Because the Profile builder requires read\/write access to the Profile database, and multiple instance of the Profile builder may exist, the DBOB supports multiple simultaneous writers using a mechanism such as transactions or record locking.","Relationship to ODBC Data Base Management Systems",{"@attributes":{"id":"p-0295","num":"0365"},"figref":"FIGS. 44 and 45"},"The DBOB isolates the use of ODBC to a single module and exposes the profile management interfaces as well as the data reporting IDataRepository interface. The DBOB is a public service available through the server module . The primary users are the server module  itself and the Admin Console. The Profile builder and Data Analysis Tool each make direct connection to the DBOB for access to the Profile and Report Template Databases.","The DBOB is primarily useful in connection with profile management, organization of data entry, and management of archived data. Queries are carried out via ODBC, using standard SQL queries serviced by the SQL server of the DBMS of choice. The DBOB is not involved in query operations. This makes it possible to employ commercially available graphing and analysis tools in the design of the Data Analysis Toolkit (DAT).","Relationship to Admin Console","Referring to , the DBOB is managed via the Admin Console. The main tasks involved in managing the DBOB are shown below:\n\n","Relationship to Server Module","Referring to , the server module  is a client of the DBOB. A server module  makes two basic demands on the DBOB:\n\n","Relationship to Profile Builder","Referring to , the Profile builder makes use of the DBOB to manipulate profile database objects. Various interfaces of the DBOB are used as shown below. The profile builder requires close control over the manipulation of objects contained in the Profile Database. In fact, most of the interfaces of the DBOB are expressly designed to support the profile builder. The Profile builder requires support for all the following:\n\n","To support these requirements, the profile builder requires read-write access to data served by the DBOB. Furthermore, the DBOB is preferably prepared to handle multiple simultaneous profile builder clients as shown in .","Relationship to Data Analysis Toolkit","Referring to , one function of the DBOB is to construct and hold COM objects for data represented in the reports analysis database. The DBOB supports the definition of report templates, parameter descriptions, and property page definitions. It does not perform the querying of data for display (reporting) purposes. Data Analysis Toolkit (DAT) queries are preferably carried out via standard SQL as supported by the DBMS of choice. Not involving the DBOB in DATA query operations makes it possible to employ commercially available graphing and analysis tools in the design of the DAT.","Interfaces",{"@attributes":{"id":"p-0308","num":"0384"},"figref":"FIG. 51","ul":{"@attributes":{"id":"ul0043","list-style":"none"},"li":{"@attributes":{"id":"ul0043-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0044","list-style":"none"},"li":["IDataRepository","IProfileObjects","IProfileserver moduleEdit","IProfileserver module","IDataManagement","IDBOBObjects","IDBOBObjectEdit"]}}}},"The DBOB also uses the Iserver moduleAdmin interface of the server module . The interfaces are explained in the following sections.","IDataRepository","The IDataRepository is used put data items collected from client monitoring agents. It is defined as follows:",{"@attributes":{"id":"p-0312","num":"0395"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"interface IDataRepository: Iunknown"},{"entry":"{"},{"entry":"\u2003\u2003\/\/ Give a data packet (streamed) to the data repository for processing"},{"entry":"\u2003\u2003HRESULT PutDataPacket([in) IStream* pDataStream);"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0313","num":"0396"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXV"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IDataRepository Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PutDataPacket ( )","Called by the server module 22 to pass a stream"]},{"entry":[{},"of monitoring data to the DBOB for archival in"]},{"entry":[{},"the database. The data records in the packet are"]},{"entry":[{},"loaded into the DBMS."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"IProfileserver module","The IProfileserver module interface is used to retrieve a user's monitoring profile info. The definition is a follows:",{"@attributes":{"id":"p-0316","num":"0399"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["interface IProfileserver module :","IUnknown"]},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HRESULT GetUserProfileInfo(",{},{}]},{"entry":[{},"[in]","OLECHAR wszUserName[MAX_SAGE_NAME],"]},{"entry":[{},"[in]","OLE CHAR wszClntHostName[MAX_SAGE_NAME],"]},{"entry":[{},"[in]","OLECHAR wszIPMatch[MAX_SAGE_NAME),"]},{"entry":[{},"[in]","REFIID riid, [out,iidis(riid)] void** ppv,"]},{"entry":[{},"[out]","DWORD* UserID);"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0317","num":"0400"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXVI"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["IProfileserver",{},{}]},{"entry":["Method","module","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["GetUserProfileInfo ( )",{},"Retrieve the complete Monitoring"]},{"entry":[{},{},"Profile for a user. The name and IP"]},{"entry":[{},{},"match uniquely identify the user. The"]},{"entry":[{},{},"reference interface ID indicates the"]},{"entry":[{},{},"desired interface to be returned"]},{"entry":[{},{},"by the method."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The method, IProfileserver module::GetUserProfileInfo( ), is specifically designed to provide the server module  a means to retrieve the complete Monitoring Profile for a user. The DBOB resolves any profile assignment conflicts using the monitoring profile precedence hierarchy. It also merges any application profiles so that the features to be monitored are unambiguously defined. The resulting user profile info retrieved is current only for the time of retrieval. Subsequent changes to the user profile will require another fetch of the user's monitoring profile info. In other words, the retrieved COM object held by the DBOB is not synchronized with the Monitoring Profile database.","IProfileObjects","The IProfileObjects interface gives clients the ability to enumerate all the possible objects in the Profile Database. It is defined as follows:",{"@attributes":{"id":"p-0321","num":"0404"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"interface IProfileObjects : Unknown"},{"entry":"{"},{"entry":"\/\/ Enumerators using the standard TProfileObjectDigest"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HRESULT","EnumUsers ( [out] IEnumProfileObjects** \u2009ppEnumUsers);"]},{"entry":["HRESULT","EnumGroups ( [out] IEnumProfileObjects**"]},{"entry":[{},"ppEnumGroups);"]},{"entry":["HRESULT","EnumMonProfiles ( [out] IEnumProfileObjects**"]},{"entry":[{},"ppEnumMPs);"]},{"entry":["HRESULT","EnumAppprofiles ( [out] IEnumProfileObjects**"]},{"entry":[{},"ppEnumAPs);"]},{"entry":["HRESULT","EnumProductVersionGroups("]},{"entry":[{},"[out] IEnumProfileObjects** ppEnumPVGs);"]},{"entry":["HRESULT","EnumApps ( [out] IEnumProfileObjects** \u2002ppEnumApps);"]},{"entry":["HRESULT","EnumMonitoringSchedules("]},{"entry":[{},"[out] IEnumProfileObjects** \u2003ppEnumMonScheds);"]},{"entry":["HRESULT","EnumHolidaySchedules("]},{"entry":[{},"[out] IEnumProfileObjects** \u2003ppEnumHolScheds);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\\\\ Enumerators using enhanced digest per object type"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HRESULT","EnumAppsEx ( [out] IEnumApps** \u2003ppEnumApps);"]},{"entry":["HRESULT","EnumUsersEx ( [out] IEnumUsers**\u2002ppEnumUsers);"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0322","num":"0405"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXVII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IProfileObjects Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["EnumUsers( )","Enumerate the users in the monitoring profile database."]},{"entry":["EnumGroups( )","Enumerate the groups in the monitoring profile database."]},{"entry":["EnumMonProfiles( )","Enumerate the monitoring profiles in the monitoring profile"]},{"entry":[{},"database."]},{"entry":["EnumAppProfiles( )","Enumerate the application profiles in the monitoring profile"]},{"entry":[{},"database."]},{"entry":["EnumProductVersionGroups( )","Enumerate the PVGs in the monitoring profile database."]},{"entry":["EnumApps( )","Enumerate the Applications in the database."]},{"entry":["EnumMonitoringSchedules( )","Enumerate the monitoring schedules in the database. These"]},{"entry":[{},"control when monitoring occurs on the client."]},{"entry":["EnumHolidaySchedules","Enumerate the holiday schedules in the database. These control"]},{"entry":[{},"when monitoring occurs on the client."]},{"entry":["EnumAppsEx( )","Enumerate the Applications in the database returning additional"]},{"entry":[{},"info not provided by EnumApps( )."]},{"entry":["EnumUsersEx( )","Enumerate the Applications in the database returning additional"]},{"entry":[{},"info not provided by EnumUsers( )."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The enumeration methods, IProfileObjects::EnumXXXs( ), each provide an enumerator the client can use to enumerate over each of the primary object types stored in the Profile Database. In each case, the type returned by the method is the same. It is an enumerator that delivers object IDs and Object Names for the object type being enumerated. The full declaration of IEnumProfileObjects is shown below.",{"@attributes":{"id":"p-0324","num":"0407"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"interface IEnumProfileObjects : IUnknown"},{"entry":"{"},{"entry":"\u2003\u2003typedef [v1_enum] enum \u2002tagTProfileObjectType"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003PO_USER = 0, PO_GROUP, PO_MON_PROFILE,"},{"entry":"\u2003\u2003\u2003\u2003PO_APP_PROFILE, PO_APP, PO_PRODVERGROUP,"},{"entry":"\u2003\u2003\u2003\u2003PO_MON_SCHED, PO_HOLIDAY_SCHED,"},{"entry":"\u2003\u2003\u2003\u2003PO_INVALID"},{"entry":"\u2003\u2003} TProfileObjectType;"},{"entry":"\u2003\u2003typedef struct tagTProfileObjectDigest"},{"entry":"\u2003\u2003{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003TProfileObjectType","dwObjectType;"]},{"entry":["\u2003\u2003\u2003\u2003DWORD","dwObjectID;"]},{"entry":["\u2003\u2003\u2003\u2003OLECHAR","szObjectName[MAX_SAGE_NAME)"]},{"entry":"\u2003\u2003\u2003\u2003OLECHAR"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003szObjectDesc[MAX_SAGE_DESCRIPTION];"},{"entry":"\u2003\u2003} TProfileObjectDigest;"},{"entry":"\u2003\u2003[local]"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003HRESULT Next(","[in] ULONG celt,"]},{"entry":[{},"[out] TProfileObjectDigest *rgelt,"]},{"entry":[{},"[out] ULONG *pceltFetched);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003[call_as (Next)]",{}]},{"entry":["\u2003\u2003HRESULT RemoteNext(","[in] ULONG celt,"]},{"entry":[{},"[out, size_is (celt),"]},{"entry":[{},"length_is(*pceltFetched)]"]},{"entry":[{},"TProfileObjectDigest \u2003*rgelt,"]},{"entry":[{},"[out] ULONG \u2003*pceltFetched);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003\u2003HRESULT Skip ( [in] ULONG celt);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003HRESULT Reset ( );",{}]},{"entry":["\u2003\u2003HRESULT Clone ( [out]","IEnumProfileObjects **ppenum);"]},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"As indicated by IEnumProfileObjects::Next( ), this enumerator allows the client to enumerate a series of structures, TProfileObjectDigest, that contain an ObjectType, ObjectID, and ObjectName and ObjectDescription. The ObjectType is an enumeration designating the type of profile object. The ObjectID is a unique number that identifies the object. It cannot change for the lifetime of the object. The ObjectName is a unique display name shown to human users. Although unique, the ObjectName can be changed during the lifetime of the object. ObjectDescription is a brief description of the object displayed to human users.","Profile Database Object Interfaces","Objects within the Profile Database are exposed to clients of the DBOB as COM objects. The profile database objects, and their interfaces are depicted in . Each of the profile database objects is exposed as a COM object to DBOB Clients. Each supports a single, primary interface containing all possible operations.","IProfileDatabaseObject","All Profile Database objects have a name and ID. The name is intended to be displayed to users. Although the names are required to be unique within each object type, object names can change during the lifetime of the object. An Object's ID is a system-assigned, immutable, unique (within each type), identifier for the object. The interface below is the base interface for all profile database objects. It allows retrieval of the object ID and object name. It also allows the name to be changed.",{"@attributes":{"id":"p-0330","num":"0413"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"interface IProfileDatabaseObject : IUnknown"]},{"entry":[{},"{"]},{"entry":[{},"\u2003HRESULT GetDigest ( [out] TProfileObjectDigest* pdigest);"]},{"entry":[{},"\u2003HRESULT SetName ( [in] OLECHAR \u2002wszName"]},{"entry":[{},"\u2003[MAX_SAGE_NAME] ) ;"]},{"entry":[{},"\u2003HRESULT SetDescription ( [in] OLECHAR"]},{"entry":[{},"\u2003wszDesc [MAX_SAGE_DESCRIPTION] ) ;"]},{"entry":[{},"\u2003HRESULT Persist ( [out] DWORD* \u2009objectID);"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0331","num":"0414"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXVIII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IProfileDatabaseObject",{}]},{"entry":["Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["GetDigest ( )","Retrieve the name and id of the object."]},{"entry":["SetName ( )","Set the name of the object. This will fail"]},{"entry":[{},"if the new name is not unique among the object's"]},{"entry":[{},"type."]},{"entry":["SetDescription( )","Set the description of the object."]},{"entry":["Persist ( )","Saves the current state of the object to the DBMS."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0332","num":"0415"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"IUser"},{"entry":"interface IUser : IProfileDatabaseObject"},{"entry":"{"},{"entry":"\u2003HRESULT GetGroup ( [out] TProfileObjectDigest* \u2003\u2003\u2003ppGroup);"},{"entry":"\u2003HRESULT SetGroup ( [in] DWORD dwGroupID);"},{"entry":"\u2003HRESULT GetMonitoringProfile ( [out] TProfileObjectDigest*"},{"entry":"\u2003pMProfile);"},{"entry":"\u2003HRESULT SetMonitoringProfile ( [in] DWORD dwMPID);"},{"entry":"\u2003HRESULT GetFullNarne ( [out] OLECHAR"},{"entry":"\u2003desc[MAX_SAGE_NAME] );"},{"entry":"\u2003HRESULT SetFullNarne ( [in] OLECHAR"},{"entry":"\u2003desc[MAX_SAGE_NAME] );"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0333","num":"0416"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXIX"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IUser Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["GetGroup( )","Get the user's group. A user object is required, at all times, to"]},{"entry":[{},"have a group."]},{"entry":["SetGroup( )","Modify the user's group. This method will remove the user's"]},{"entry":[{},"current group association and add the user to a different group."]},{"entry":["GetMonitoringprofile( )","Retrieve the monitoring profile that has been specifically assigned"]},{"entry":[{},"to this user, if one exists. It is possible that no monitoring profile"]},{"entry":[{},"has been assigned."]},{"entry":["SetMonitoringProfile( )","Assign a specific monitoring profile for this user. When set, this"]},{"entry":[{},"overrides the monitoring profile the user has by virtue of the"]},{"entry":[{},"user's group association."]},{"entry":["GetFullNarne( )","Used to retrieve the full user name(Ken W. Smith). In contrast"]},{"entry":[{},"the GetName( ) method inherited via IprofileDatabaseObject"]},{"entry":[{},"would return the username(kenw)."]},{"entry":["SetFullName( )","Sets the full username. See above."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0334","num":"0417"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Igroup interface IGroup: IProjileDatabaseObject"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003HRESULT EnurnUsers ( [out] IEnurnProfileObjects**"]},{"entry":[{},"\u2003\u2003ppEnumUsers);"]},{"entry":[{},"\u2003\u2003HRESULT GetMonitoringProfile ( [out] TProfileObjectDigest*"]},{"entry":[{},"\u2003\u2003pMProfile);"]},{"entry":[{},"\u2003\u2003HRESULT SetMonitoringprofile ( [in] DWORD dwMPID);"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0335","num":"0418"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXX"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IGroup Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["EnumUsers( )","Enumerate the users that are a member"]},{"entry":[{},"of this group."]},{"entry":["GetMonitoringprofile( )","Get the monitoring profile that this group is"]},{"entry":[{},"associated with. Groups are required to have an"]},{"entry":[{},"associated monitoring profile at"]},{"entry":[{},"all times."]},{"entry":["SetMonitoringProfile( )","Change the monitoring profile used by this"]},{"entry":[{},"group."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0336","num":"0419"},"tables":{"@attributes":{"id":"TABLE-US-00052","num":"00052"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"interface IMonitoringProfile: IProfileDatabaseObject"},{"entry":"{"},{"entry":"\u2003\u2003HRESULT EnumAssignedUsers ( [out]"},{"entry":"\u2003\u2003IEnumProfileObjects** ppEnumUsers);"},{"entry":"\u2003\u2003HRESULT EnumUsingGroups ( [out]"},{"entry":"\u2003\u2003IEnumProfileObjects** ppEnumGroups);"},{"entry":"\u2003\u2003HRESULT EnumAppProfiles ( [out] IEnumProfileObjects**"},{"entry":"\u2003\u2003ppAppProfiles);"},{"entry":"\u2003\u2003HRESULT AddAppProfile ( [in] DWORD APID);"},{"entry":"\u2003\u2003HRESULT RemoveAppprofile ( [in] DWORD APID);"},{"entry":"\u2003\u2003HRESULT GetSuspendCollectionFlag ( [out] BOOL*"},{"entry":"\u2003\u2003pbSuspended);"},{"entry":"\u2003\u2003HRESULT SetSuspendCollectionFlag ( [in] BOOL bSuspended);"},{"entry":"\u2003\u2003HRESULT GetMonitoringBufferLimit ( [out] DWORD*"},{"entry":"\u2003\u2003pdwNumBytes);"},{"entry":"\u2003\u2003HRESULT SetMonitoringBufferLimit ( [in] DWORD dwNumBytes);"},{"entry":"\u2003\u2003HRESULT GetMinReportingInterval ( [out] DWORD* pdwInterval);"},{"entry":"\u2003\u2003HRESULT SetMinReportingInterval ( [in] DWORD dwInterval);"},{"entry":"\u2003\u2003HRESULT GetInputSummaryTime ( [out] DWORD* dwInterval);"},{"entry":"\u2003\u2003HRESULT SetInputSummaryTime ( [in] DWORD dwInterval);"},{"entry":"\u2003\u2003HRESULT GetMonitoringScheduleID ( [out] DWORD*"},{"entry":"\u2003\u2003dwSchedID);"},{"entry":"\u2003\u2003HRESULT SetMonitoringScheduleID ( [in] DWORD dwSchedID);"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0337","num":"0420"},"tables":{"@attributes":{"id":"TABLE-US-00053","num":"00053"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXI"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IMonitoringProfile",{}]},{"entry":["Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["EnumAssignedUsers( )","Enumerate the users assigned to this monitoring profile."]},{"entry":["EnumUsingGroups( )","Enumerate the groups using this monitoring profile."]},{"entry":["EnumAppProfiles( )","Enumerate the application profiles that this monitoring profile is"]},{"entry":[{},"using."]},{"entry":["AddAppProfile( )","Add an application profile to the current monitoring profile."]},{"entry":["RemoveAppProfile( )","Remove an application from the current monitoring profile."]},{"entry":["GetSuspendedCollectionFlag( )","Gets the flag which determines whether or not data collection is"]},{"entry":[{},"suspended for this Monitoring Profile."]},{"entry":["SetSuspendedCollectionFlag( )","Sets the collection suspended flag. See above."]},{"entry":["GetMonitoringBufferLimit( )","Get the monitoring buffer limit. The monitoring buffer limit is"]},{"entry":[{},"used by the client monitoring agent in limiting its event data"]},{"entry":[{},"cache size."]},{"entry":["SetMonitoringBufferLimit( )","Set the monitoring buffer limit."]},{"entry":["GetMinReportingInterval( )","Get the minimum reporting interval."]},{"entry":["SetMinReportingInterval( )","Set the minimum reporting interval."]},{"entry":["GetInputSummaryTime( )","Get the interval at which input events(mouse & kbd) are"]},{"entry":[{},"summarized."]},{"entry":["SetInputSummaryTime( )","Set the input summary interval."]},{"entry":["GetMonitoringScheduleID( )","Get the ID of the monitoring schedule in use by the profile."]},{"entry":["SetMonitoringScheduleID( )","Set the ID of the monitoring schedule in use by the profile"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"IAppProfile","The IAppProfile interface provides access to application and feature information for a specific application profile.",{"@attributes":{"id":"p-0340","num":"0423"},"tables":{"@attributes":{"id":"TABLE-US-00054","num":"00054"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"interface IAppprofile: IProfileDatabaseObject"},{"entry":"{"},{"entry":"\u2003\u2003\/\/ The product version group this profile is based upon"},{"entry":"\u2003\u2003HRESULT GetproductVersionGroupID ( [out] DWORD* pPVGID);"},{"entry":"\u2003\u2003HRESULT SetproductVersionGroupID ( [in] DWORD PVGID);"},{"entry":"\u2003\u2003\/\/ Enum all features associated with this profile"},{"entry":"\u2003\u2003HRESULT EnumFeatures ( [out] IEnumFeatures**"},{"entry":"\u2003\u2003ppEnumFeatures);"},{"entry":"\u2003\u2003\/\/ Add or Remove a specific feature from the profile"},{"entry":"\u2003\u2003HRESULT AddFeature ( [in] DWORD featureID,"},{"entry":"\u2003\u2003[in] BOOL bRestricted);"},{"entry":"\u2003\u2003HRESULT RemoveFeature ( [in] DWORD featureID);"},{"entry":"\u2003\u2003\/\/ Set the restricted flag (veto) a feature"},{"entry":"\u2003\u2003HRESULT SetFeatureRestrictedFlag ( [in] DWORD featureID,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] BOOL bRestricted);"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0341","num":"0424"},"tables":{"@attributes":{"id":"TABLE-US-00055","num":"00055"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IAppProfile Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["GetproductVersionGroupID( )","Retrieve the ID of the PVG with which the"]},{"entry":[{},"App Profile is associated."]},{"entry":["SetproductVersionGroupID( )","Set the ID of the PVG with which the"]},{"entry":[{},"App Profile is associated."]},{"entry":["EnumFeatures( )","Enumerate the features tracked by this"]},{"entry":[{},"App Profile. This will be a subset of the"]},{"entry":[{},"features available through the associated"]},{"entry":[{},"PVG."]},{"entry":["AddFeature( )","Add a Feature to this App Profile from"]},{"entry":[{},"the set of features maintained by the"]},{"entry":[{},"associated PVG."]},{"entry":["RemoveFeature( )","Remove a Feature from the App Profile."]},{"entry":["SetFeatureRestrictedFlag( )","Flag the feature as being Restricted."]},{"entry":[{},"This means that it will be made"]},{"entry":[{},"unavailable to the user."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The enumeration method, Enum Features( ), provides an enumerator to access all features associated with the application profile. The full declaration of IEnumFeatures is shown below.",{"@attributes":{"id":"p-0343","num":"0426"},"tables":{"@attributes":{"id":"TABLE-US-00056","num":"00056"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"interface IEnumFeatures\u2003:\u2003IUnknown"},{"entry":"{"},{"entry":"\u2003\/\/ Enum to describe the type of feature"},{"entry":"\u2003\u2009typedef [v1_enum) enum tagTFeatureType"},{"entry":"\u2003\u2009{"},{"entry":"\u2003\u2003\u2003\u2003FEATURE_ACCESSIBLE = 0,"},{"entry":"\u2003\u2003\u2003\u2003FEATURE_ACCELERATOR"},{"entry":"\u2003\u2009} FeatureType;"},{"entry":"\u2003typedef struct tagFeatureDigest"},{"entry":"\u2003{"},{"entry":"\u2003\u2003\u2003\u2003DWORD \u2003featureID;"},{"entry":"\u2003\u2003\u2003\u2003FeatureType type;"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003OLECHAR","name [MAX_SAGE_NAME];"]},{"entry":["\u2003\u2003\u2003\u2003OLECHAR","description [MAX_SAGE_DESCRIPTION"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003\u2003\u2003\u2003DWORD \u2003roleID;"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003OLECHAR","role[MAX_ROLE_TEXT];"]},{"entry":["\u2003\u2003\u2003\u2003boolean","restrict;"]},{"entry":["\u2003\u2003\u2003\u2003boolean","canRestrict;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"} TFeatureDigest;"},{"entry":"[local]"},{"entry":"HRESULT Next ( [in] \u2003\u2009ULONG celt,"},{"entry":"\u2003\u2002\u2003\u2003\u2003\u2003\u2003\u2003[out] \u2003TFeatureDigest *rgelt,"},{"entry":"\u2003\u2002\u2003\u2003\u2003\u2003\u2003\u2003[out] \u2003[out] ULONG *pceltFetched);"},{"entry":"[call_as (Next)]"},{"entry":"HRESULT RemoteNext( [in] ULONG celt,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002[out, size_is(celt), length_is (*pceltFetched) ]"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002TFeatureDigest *rgelt,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002[out] ULONG *pceltFetched);"},{"entry":"HRESULT Skip ( [in] ULONG celt);"},{"entry":"HRESULT Reset( );"},{"entry":"HRESULT Clone ( [out] IEnumFeatures **ppenum);"},{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"As indicated by IEnumFeatures::Next( ), the enumerator fills a structure, TFeatureDigest, that contains general information relating to the specific feature. Detailed information for the feature is obtained through the IFeature interface, as described in the next section.","IFeature","The IFeature interface provides access to information obtained through Active Accessibility.",{"@attributes":{"id":"p-0347","num":"0430"},"tables":{"@attributes":{"id":"TABLE-US-00057","num":"00057"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"interface IFeature : IUnknown"},{"entry":"{"},{"entry":"\u2003\u2003\/\/Not a ProfileDatabaseObject.."},{"entry":"\u2003\u2003\/\/Features are persisted by the parent ProdVerGroup"},{"entry":"\u2003\u2003\/\/Methods common to all feature types"},{"entry":"\u2003\u2003HRESULT GetDigest ( [out] TFeatureDigest* pdigest);"},{"entry":"\u2003\u2003HRESULT SetName ( [in] OLECHAR wszName [MAX_SAGE_NAME] );"},{"entry":"\u2003\u2003HRESULT SetDescription ( [in] OLECHAR descr[MAX_SAGE_DESCRIPTION] );"},{"entry":"\u2003\u2003HRESULT GetDescription ( [out] OLECHAR descr[MAX_SAGE_DESCRIPTION] );"},{"entry":"\u2003\u2003\/\/Feature restriction"},{"entry":"\u2003\u2003HRESULT SetRestrictionCapability ( [in] BOOL bCanRestrict);"},{"entry":"\u2003\u2003HRESULT GetRestrictionCapability ( [out] BOOL* pbCanRestrict);"},{"entry":"\u2003\u2003\/\/Type of feature: FEATURE_ACCESSIBLE or FEATURE_ACCELERATOR"},{"entry":"\u2003\u2003HRESULT SetType ( [in] FeatureType type);"},{"entry":"\u2003\u2003HRESULT GetType ( [out] FeatureType* pType);"},{"entry":"\u2003\u2003\/\/Accessible object methods"},{"entry":"\u2003\u2003HRESULT SetAccDescription("},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR accDescription[MAX_SAGE_DESCRIPTION] );"},{"entry":"\u2003\u2003HRESULT GetAccDescription("},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003[out] OLECHAR accDescription[MAX_SAGE_DESCRIPTION] );"},{"entry":"\u2003\u2003HRESULT SetAccName ( [in] OLECHAR Name[MAX_SAGE_NAME] );"},{"entry":"\u2003\u2003HRESULT GetAccName ( [out) OLECHAR Name[MAX_SAGE_NAME] );"},{"entry":"\u2003\u2003HRESULT SetAccSearchName ( [in] TAccSearchCode searchCode,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR srchName [MAX_SAGE_NAME] );"},{"entry":"\u2003\u2003HRESULT GetAccSearchName ( [out] TAccSearchCode* pSearchCode,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003[out] OLECHAR srchName [MAX_SAGE_NAME] );"},{"entry":"\u2003\u2003HRESULT SetUseAccName ( [in] BOOL bUse);"},{"entry":"\u2003\u2003HRESULT GetUseAccName ( [out] BOOL* bUse);"},{"entry":"\u2003\u2003HRESULT SetAccRole ( [in] DWORD roleID,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR accRole[MAX_ROLE_TEXT] );"},{"entry":"\u2003\u2003HRESULT GetAccRole ( [out] DWORD* roleID,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003[out] OLECHAR accRole[MAX_ROLE_TEXT] );"},{"entry":"\u2003\u2003HRESULT SetUseAccRole ( [in] BOOL bUse);"},{"entry":"\u2003\u2003HRESULT GetUseAccRole ( [out] BOOL* bUse);"},{"entry":"\u2003\u2003HRESULT SetAccWindowClass ( [in] OLECHAR accWindowClass [MAX_SAGE NAME] );"},{"entry":"\u2003\u2003HRESULT GetAccWindowClass("},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003[out] OLECHAR accwindowClass[MAX_SAGE_NAME] );"},{"entry":"\u2003\u2003HRESULT SetUseAccWindowClass ( [in] BOOL bUse);"},{"entry":"\u2003\u2003HRESULT GetUseAccWindowClass ( [out) BOOL* bUse);"},{"entry":"\u2003\u2003HRESULT SetPosition ( [in] long xpos, [in] long ypos);"},{"entry":"\u2003\u2003HRESULT GetPosition ( [out] long* pxpos, [out] long* pypos);"},{"entry":"\u2003\u2003HRESULT SetUsePosition ( [in] BOOL bUse);"},{"entry":"\u2003\u2003HRESULT GetUsePosition ( [out] BOOL* bUse);"},{"entry":"\u2003\u2003HRESULT SetSize ( [in] long width, [in] long height);"},{"entry":"\u2003\u2003HRESULT GetSize ( [out] long* pwidth, [out] long* pheight);"},{"entry":"\u2003\u2003HRESULT SetUseSize ( [in] BOOL bUse);"},{"entry":"\u2003\u2003HRESULT GetUseSize ( [out] BOOL* bUse);"},{"entry":"\u2003\u2003HRESULT SetControlID ( [in] long controlID);"},{"entry":"\u2003\u2003HRESULT GetControlID ( [out] long* pcontrolID);"},{"entry":"\u2003\u2003HRESULT SetUseControlID ( [in] BOOL bUse);"},{"entry":"\u2003\u2003HRESULT GetUseControlID ( [out] BOOL* bUse);"},{"entry":"\u2003\u2003HRESULT SetAccessibleID ( [in] long accID);"},{"entry":"\u2003\u2003HRESULT GetAccessibleID ( [out] long* paccID);"},{"entry":"\u2003\u2003HRESULT SetUseAccessibleID ( [in] BOOL bUse);"},{"entry":"\u2003\u2003HRESULT GetUseAccessibleID ( [out] BOOL* bUse);"},{"entry":"\u2003\u2003\/\/Which accessible attrs are valid for this feature"},{"entry":"\u2003\u2003\/\/uses the type \u201cTAccUsageFlag\u201d"},{"entry":"\u2003\u2003HRESULT SetValidAccAttrFlag ( [in] DWORD validFlag);"},{"entry":"\u2003\u2003HRESULT GetValidAccAttrFlag ( [out] DWORD* pvalidFlag);"},{"entry":"\u2003\u2003\/\/ accelerator methods"},{"entry":"\u2003\u2003HRESULT SetVirtualKeyCode ( [in] byte vkCode);"},{"entry":"\u2003\u2003HRESULT GetVirtualKeyCode ( [out] byte* pVkCode);"},{"entry":"\u2003\u2003HRESULT SetUseShiftKey ( [in] BOOL bUse);"},{"entry":"\u2003\u2003HRESULT GetUseShiftKey ( [out] BOOL* pbUse);"},{"entry":"\u2003\u2003HRESULT SetUseControlKey ( [in] BOOL bUse);"},{"entry":"\u2003\u2003HRESULT GetUseControlKey ( [out] BOOL* pbUse);"},{"entry":"\u2003\u2003HRESULT SetUseAltKey ( [in] BOOL bUse);"},{"entry":"\u2003\u2003HRESULT GetUseAltKey ( [out] BOOL* pbUse);"},{"entry":"\u2003\u2003\/\/Feature Ancestor methods"},{"entry":"\u2003\u2003HRESULT EnumFeatureAncestors ( [out] IEnumFeatureAncestor** ppEnum);"},{"entry":"\u2003\u2003HRESULT AddAncestor ( [in] TFeatureAncestor* ancestor);"},{"entry":"\u2003\u2003HRESULT UpdateAncestor ( [in] TFeatureAncestor* ancestor);"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0348","num":"0431"},"tables":{"@attributes":{"id":"TABLE-US-00058","num":"00058"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXIII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IFeature Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["GetDigest( )","Retrieve the associated TFeatureDigest"]},{"entry":[{},"structure."]},{"entry":["SetName( )","Set the name for the feature."]},{"entry":["SetDescription( )","Set the human readable description"]},{"entry":[{},"for the feature."]},{"entry":["GetDescription( )","Set the human readable description"]},{"entry":[{},"for the feature."]},{"entry":["SetRestrictionCapability","Specify whether or not the feature can"]},{"entry":[{},"be restricted."]},{"entry":["GetRestrictionCapability","Determine whether or not the feature can"]},{"entry":[{},"be restricted."]},{"entry":"SetType( )"},{"entry":"GetType( )"},{"entry":"SetAccDescription( )"},{"entry":"GetAccDescription( )"},{"entry":"SetAccName( )"},{"entry":"GetAccName( )"},{"entry":"SetAccSearchName( )"},{"entry":"GetAccSearchName( )"},{"entry":"SetUseAccName( )"},{"entry":"GetUseAccName( )"},{"entry":"SetAccRole( )"},{"entry":"GetAccRole( )"},{"entry":"SetUseAccRole( )"},{"entry":"GetUseAccRole( )"},{"entry":"SetAccWindowClass( )"},{"entry":"GetAccWindowClass( )"},{"entry":"SetUseAccWindowClass( )"},{"entry":"GetUseAccWindowClass( )"},{"entry":"SetPosition( )"},{"entry":"GetPosition( )"},{"entry":"SetUsePosition( )"},{"entry":"GetUsePosition( )"},{"entry":"SetSize( )"},{"entry":"GetSize( )"},{"entry":"SetUseSize( )"},{"entry":"GetUseSize( )"},{"entry":"SetControlID( )"},{"entry":"GetControlID( )"},{"entry":"SetUseControlID( )"},{"entry":"GetUseControlID( )"},{"entry":"SetAccessibleID( )"},{"entry":"GetAccessibleID( )"},{"entry":"SetUseAccessibleID( )"},{"entry":"GetUseAccessibleID( )"},{"entry":"SetValidAccAttrFlag( )"},{"entry":"GetValidAccAttrFlag( )"},{"entry":"SetVirtualKeyCode( )"},{"entry":"GetVirtualKeyCode( )"},{"entry":"SetUseShiftKey( )"},{"entry":"GetUseShiftKey( )"},{"entry":"SetUseControlKey( )"},{"entry":"GetUseControlKey( )"},{"entry":"SetUseAltKey( )"},{"entry":"GetUseAltKey( )"},{"entry":"EnumFeatureAncestors( )"},{"entry":"AddAncestor( )"},{"entry":"UpdateAncestor( )"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The enumeration method, EnumFeatureAncestors( ), provides an enumerator to access all ancestors associated with the feature. Ancestry information defines a hierarchy of user interface windows related to a specific feature. The full declaration of IEnumFeatureAncestor is shown below.",{"@attributes":{"id":"p-0350","num":"0433"},"tables":{"@attributes":{"id":"TABLE-US-00059","num":"00059"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"interface IEnumFeatureAncestor : IUnknown"},{"entry":"{"},{"entry":"\u2003typedef [v1_enum] enum tagTAccUseFlags"},{"entry":"\u2003{"},{"entry":"\u2003\u2003\u2003\u2003ACC_USE_NONE\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003= 0x0,"},{"entry":"\u2003\u2003\u2003\u2003ACC_USE_NAME\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003= 0x1,"},{"entry":"\u2003\u2003\u2003\u2003ACC_USE_WINCLASS\u2003\u2003= 0x2,"},{"entry":"\u2003\u2003\u2003\u2003ACC_USE_ROLE \u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003= 0x4,"},{"entry":"\u2003\u2003\u2003\u2003ACC_USE_POSITION \u2003\u2003=0x8,\u2003\/\/ Use parent-relative position"},{"entry":"\u2003\u2003\u2003\u2003ACC_USE_SIZE \u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009= 0x10, \u2003\/\/ Use accessible object size"},{"entry":"\u2003\u2003\u2003\u2003ACC_USE_CONTROLID \u2003= 0x20, \u2003\u2003\/\/ Use HWND control ID value"},{"entry":"\u2003\u2003\u2003\u2003ACC_USE_ACCESSIBLEID \u2009= \u20090x40 \u2003\u2003\/\/ Use accessible ID value"},{"entry":"\u2003} TAccUsageFlag;"},{"entry":"\u2003\/\/ Enurn to describe the search method used in feature names"},{"entry":"\u2003typedef [v1_enum] enum tagTAccSearch Code"},{"entry":"\u2003{"},{"entry":"\u2003\u2003\u2003\u2003ACC_SEARCH_EXACT = 0,"},{"entry":"\u2003\u2003\u2003\u2003ACC_SEARCH_SUBSTR,"},{"entry":"\u2003\u2003\u2003\u2003ACC_SEARCH_STARTSWITH,"},{"entry":"\u2003\u2003\u2003\u2003ACC_SEARCH_INVALID"},{"entry":"\u2003} \u2003TAccSearchCode;"},{"entry":"\u2003typedef struct tagFeatureAncestor"},{"entry":"\u2003{"},{"entry":"\u2003\u2003\u2003\u2003DWORD dwUsageFlags; \u2003\u2003\u2003\u2003\u2003\/\/ Which identity attrs to use"},{"entry":"\u2003\u2003\u2003\u2003DWORD dwValidAccFlags;\u2003\u2003\u2003\u2003\/\/ Which identity attrs are valid"},{"entry":"\u2003\u2003\u2003\u2003DWORD dwLevel;"},{"entry":"\u2003\u2003\u2003\u2003OLECHAR wszAccRole[MAX_ROLE_TEXT];"},{"entry":"\u2003\u2003\u2003\u2003DWORD dwAccRoleID;"},{"entry":"\u2003\u2003\u2003\u2003OLECHAR \u2003\u2003wszAccName[MAX_SAGE_NAME];"},{"entry":"\u2003\u2003\u2003\u2003OLECHAR \u2003\u2003wszAccWinClass[MAX_SAGE_NAME];"},{"entry":"\u2003\u2003\u2003\u2003OLECHAR \u2003\u2003wszAccSearchName[MAX_SAGE_NAME];"},{"entry":"\u2003\u2003\u2003\u2003TAccSearchCode\u2003\u2003nameSearchCode;"},{"entry":"\u2003\u2003\u2003\u2003long xpos;"},{"entry":"\u2003\u2003\u2003\u2003long ypos;"},{"entry":"\u2003\u2003\u2003\u2003long width;"},{"entry":"\u2003\u2003\u2003\u2003long height;"},{"entry":"\u2003\u2003\u2003\u2003long controlID;"},{"entry":"\u2003\u2003\u2003\u2003long accessibleID;"},{"entry":"\u2003} TFeatureAncestor;"},{"entry":"\u2003[(local]"},{"entry":"\u2003HRESULT Next ( [in] ULONG celt,"},{"entry":"\u2003\u2003\u2002\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out] TFeatureAncestor *rgelt,"},{"entry":"\u2003\u2003\u2003\u2003\u2002\u2003\u2003\u2003\u2003\u2003[out] ULONG *pceltFetched);"},{"entry":"\u2003[call_as (Next) ]"},{"entry":"\u2003HRESULT RemoteNext ( [in] ULONG celt,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, size_is(celt), length_is (*pceltFetched)]"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003TFeatureAncestor *rgelt,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out] ULONG *pceltFetched);"},{"entry":"\u2003HRESULT Skip ([in] ULONG celt);"},{"entry":"\u2003HRESULT Reset( );"},{"entry":"\u2003HRESULT Clone([out] IEnumFeatureAncestor **ppenum);"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"As indicated by IEnumFeatureAncestor::Next( ), the enumerator fills a structure, TFeatureAncestor, that contains information relating to the specific feature ancestor.","IProfileserver moduleEdit","IProfileserver moduleEdit allows creation, deletion and editing of all profile database objects. The complete interface is shown below:",{"@attributes":{"id":"p-0354","num":"0437"},"tables":{"@attributes":{"id":"TABLE-US-00060","num":"00060"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"interface IProfileserver moduleEdit : \u2003IUnknown"},{"entry":"{"},{"entry":"\u2003\u2003\/\/ \u2003monitoring profile"},{"entry":"\u2003\u2003HRESULT NewMonitoringProfile("},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003wszMPName[MAX_SAGE_NAME],"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] REFIID"},{"entry":"\u2003\u2003riid,"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, iid_is(riid)]","\u2003void**","ppv);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003\u2003HRESULT EditMonitoringProfile("}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD",{},"MPID,"]},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] REFIID"},{"entry":"\u2003\u2003riid,"},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, iid_is (riid) ]","void**","ppv);"]},{"entry":"\u2003\u2003HRESULT DeleteMonitoringProfile("},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD","\u2003MPID"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] BOOL","\u2003\u2003\u2003bReassignGroups);"]},{"entry":"\u2003\u2003\/\/ app profile"},{"entry":"\u2003\u2003HRESULT NewApplicationProfile("},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003wszAPPName [MAX_SAGE_NAME],"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] REFIID"},{"entry":"\u2003\u2003riid,"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, iid_is(riid) ]","\u2003void**","ppv);"]},{"entry":"\u2003\u2003HRESULT EditApplicationprofile("},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD",{},"APID,"]},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] REFIID"},{"entry":"\u2003\u2003riid,"},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, \u2003iid_is(riid) ]","void**","ppv);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003HRESULT DeleteApplicationprofile ( [in] DWORD \u2003\u2003\u2003APID);"},{"entry":"\u2003\u2003\/\/group"},{"entry":"\u2003\u2003HRESULT NewGroup ( [in] OLECHAR"},{"entry":"\u2003\u2003wszGroupName[MAX_SAGE_NAME],"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] \u2003DWORD"},{"entry":"\u2003\u2003MPID,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002\u2009[in] \u2003REFIID"},{"entry":"\u2003\u2003riid,"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, iid_is(riid) ]","void**","ppv);"]},{"entry":"\u2003\u2003HRESULT EditGroup("},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD",{},"GroupID,"]},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] REFIID"},{"entry":"\u2003\u2003riid,"},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, iid_is(riid) ]","\u2003void**","ppv);"]},{"entry":"\u2003\u2003HRESULT DeleteGroup("},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD",{},"GroupID,"]},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] BOOL"},{"entry":"\u2003\u2003bReassignUsers);"},{"entry":"\u2003\u2003\/\/User"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003HRESULT NewUser ( [in] \u2003OLECHAR"},{"entry":"\u2003\u2003wszUserName[MAX_SAGE_NAME],"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD",{},"GroupID,"]},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] REFIID"},{"entry":"\u2003\u2003riid,"},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, \u2003iid_is(riid) ]","\u2003void**","ppv);"]},{"entry":"\u2003\u2003HRESULT EditUser("},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD",{},"UserID,"]},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] REFIID"},{"entry":"\u2003\u2003riid,"},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, \u2003iid_is(riid) ]","\u2003void**","ppv);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003HRESULT DeleteUser ( [in] DWORD \u2003GroupID);"},{"entry":"\u2003\u2003\/\/Applications"},{"entry":"\u2003\u2003HRESULT NewApp("},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003fingerprint[MAX_SAGE_APP_FINGERPRINT],"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] REFIID","\u2003\u2003\u2003riid,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, iid_is(riid)] \u2003\u2003\u2003void**","ppv);"]},{"entry":"\u2003\u2003HRESULT EditApp("}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD",{},"appID,"]},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] REFIID",{},"riid,"]},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, iid_is(riid)]","\u2003void**","ppv);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003HRESULT DeleteApp ( [in] DWORD appID);"},{"entry":"\u2003\u2003HRESULT GetAppIDByFingerprint("},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009[in] OLECHAR"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009fingerprint[MAX_SAGE_APP_FINGERPRINT],"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009[out] DWORD*",{},"appID);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\/\/ Product Version Groups"},{"entry":"\u2003\u2003HRESULT NewProductVersionGroup("},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR name [MAX_SAGE NAME],"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] REFIID",{},"riid,"]},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, iid_is(riid) ]","\u2003void**","ppv);"]},{"entry":"\u2003\u2003HRESULT EditProductVersionGroup("},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD",{},"PVGID,"]},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] REFIID",{},"riid"]},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, iid_is(riid) ]","\u2003void**","ppv);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003HRESULT DeleteProductVersionGroup ( [in] DWORD PVGID);"},{"entry":"\u2003\u2003\/\/Monitoring Schedules"},{"entry":"\u2003\u2003HRESULT NewMonitoringSchedule ("},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] \u2003\u2003OLECHAR name[MAX_SAGE_NAME],"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] \u2003\u2003REFIID",{},"riid,"]},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, iid_is(riid)]","\u2003\u2003void**","ppv);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003\u2003HRESULT EditMonitoringSchedule("}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] \u2003\u2003\u2009DWORD",{},"schedID,"]},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] \u2003\u2003REFIID",{},"riid,"]},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, iid_is(riid) ]","\u2003\u2003void**","ppv);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003HRESULT DeleteMonitoringSchedule ( [in] DWORDschedID);"},{"entry":"\u2003\u2003\/\/ Holiday Schedules"},{"entry":"\u2003\u2003HRESULT NewHolidaySchedule("},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] \u2003\u2003OLECHAR name[MAX_SAGE_NAME],"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] \u2003\u2003REFIID",{},"riid,"]},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, iid_is(riid)]","\u2003\u2003void**","ppv);"]},{"entry":"\u2003\u2003HRESULT EditHolidaySchedule("},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] \u2003\u2003\u2009DWORD",{},"schedID,"]},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] \u2003\u2003REFIID",{},"riid,"]},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, iid_is(riid)]","\u2003\u2003void**","ppv);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003HRESULT DeleteHolidaySchedule ( [in] DWORD schedID);"},{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0355","num":"0438"},"tables":{"@attributes":{"id":"TABLE-US-00061","num":"00061"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXIV"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IProfileserver moduleEdit",{}]},{"entry":["Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["NewMonitoringProfile( )","Creates a new monitoring profile with the specified name and"]},{"entry":[{},"adds it to the database. The interface pointer for the monitoring"]},{"entry":[{},"profile is retrieved."]},{"entry":["EditMonitoringProfile( )","Retrieve an interface pointer on a specified monitoring profile,"]},{"entry":[{},"for direct manipulation of the monitoring profile."]},{"entry":["DeleteMonitoringProfile( )","Deletes an existing monitoring profile. When calling this"]},{"entry":[{},"method, the caller must specify what is to be done with groups"]},{"entry":[{},"that are currently using the profile. If bReassignGroups is set to"]},{"entry":[{},"TRUE, then groups currently using this profile will be"]},{"entry":[{},"reassigned to the \u201cDefault\u201d profile. Otherwise the deletion of"]},{"entry":[{},"the monitoring profile will be cascaded to any Groups using"]},{"entry":[{},"this profile"]},{"entry":["NewApplicationProfile( )","Create a new application profile. The Application profile"]},{"entry":[{},"initially has no relationships to other objects in the profile"]},{"entry":[{},"database, The interface pointer for the application profile is"]},{"entry":[{},"retrieved."]},{"entry":["EditApplicationProfile( )","Retrieve an interface pointer on a specified application profile"]},{"entry":[{},"for direct manipulation of the application profile object."]},{"entry":["DeleteApplicationProfile( )","Delete an application profile. If any monitoring profiles are"]},{"entry":[{},"currently using this application profile, the relationship is"]},{"entry":[{},"deleted."]},{"entry":["NewGroup( )","Create a new group. Since groups are required to have an"]},{"entry":[{},"associated monitoring profile, an initial monitoring profile for"]},{"entry":[{},"the group must be specified. If the initial monitoring profile is"]},{"entry":[{},"specified as NULL, the group will use the \u201cDefault\u201d monitoring"]},{"entry":[{},"profile. The interface pointer for the group is retrieved."]},{"entry":["EditGroup( )","Retrieve an interface pointer on a group for direct manipulation"]},{"entry":[{},"of the group object."]},{"entry":["DeleteGroup( )","Delete a Group. If bReassignUsers is TRUE, all users"]},{"entry":[{},"associated with the group will be re-assigned to the \u201cDefault\u201d"]},{"entry":[{},"Group. If bReassignUsers is FALSE, all users associated with"]},{"entry":[{},"the group will be deleted."]},{"entry":["NewUser( )","Create a new user. Since users are required to have an"]},{"entry":[{},"associated group, and initial group for the user can be specified."]},{"entry":[{},"If the initial group is specified as NULL, then the user will be"]},{"entry":[{},"added to the \u201cDefault\u201d group. The interface pointer for the user"]},{"entry":[{},"is retrieved."]},{"entry":["EditUser( )","Retrieve an interface pointer on a user for direct manipulation"]},{"entry":[{},"of the user object."]},{"entry":["DeleteUser( )","Delete a user. The relationship with the User's group, and an"]},{"entry":[{},"assigned monitoring profile (if one is assigned) will be deleted."]},{"entry":["NewApp( )","Create a new Application."]},{"entry":["EditApp( )","Edit an existing Application."]},{"entry":["DeleteApp( )","Delete an Application. When an application is delete all"]},{"entry":[{},"recorded events and features for that app are also deleted."]},{"entry":["GetAppIDByFingerPrint( )","Get the ID of an Application using the unique Application"]},{"entry":[{},"Fingerprint String."]},{"entry":"NewProductVersionGroup( )"},{"entry":"EditProductVersionGroup( )"},{"entry":"DeleteProductVersionGroup( )"},{"entry":"NewMonitoringSchedule( )"},{"entry":"EditMonitoringSchedule( )"},{"entry":"DeleteMonitoringSchedule( )"},{"entry":"NewHolidaySchedule( )"},{"entry":"EditHolidaySchedule( )"},{"entry":"DeleteHolidaySchedule( )"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Report Database Object Interfaces","Objects within the Report Database are exposed to clients of the DBOB as COM objects. The report database objects, and their interfaces are depicted in .","IReport","To access a specific report object for a report digest enumerated above, the following interface is used:",{"@attributes":{"id":"p-0360","num":"0443"},"tables":{"@attributes":{"id":"TABLE-US-00062","num":"00062"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"interface IReport: IUnknown"]},{"entry":[{},"{"]},{"entry":[{},"HRESULT GetDigest ( [out] TReportDigest* \u2003\u2003\u2003pDigest);"]},{"entry":[{},"\u2003HRESULT Persist ( [out] TReportDigest* \u2003\u2003pDigest);"]},{"entry":[{},"HRESULT SetName ( [in] OLECHAR wszName[MAX_SAGE_NAME] );"]},{"entry":[{},"\u2002\u2009HRESULT GetName ( [out] OLECHAR wszName[MAX_SAGE_NAME] );"]},{"entry":[{},"\u2003HRESULT SetCategory ( [in] DWORD\u2003dwCategoryID);"]},{"entry":[{},"\u2003HRESULT GetCategory ( [out] DWORD* \u2003pdwCategoryID);"]},{"entry":[{},"\u2003HRESULT GetCategoryName ( [out] OLECHAR"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"wszCategoryName[MAX_SAGE_NAME] );"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003HRESULT SetDescription("]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR wszDescription[MAX_SAGE_DESCRIPTION] );"]},{"entry":[{},"\u2003HRESULT GetDescription("]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out] OLECHAR wszDescription[MAX_SAGE_DESCRIPTION] );"]},{"entry":[{},"\u2003HRESULT SetReportFile ([in] \u2003IStream* pStream);"]},{"entry":[{},"\u2003HRESULT GetReportFile([out] \u2003IStream** pStream);"]},{"entry":[{},"\u2003\/\/Report Parameters"]},{"entry":[{},"\u2003HRESULT EnumParams([out] \u2003IEnumParams** \u2003ppEnumParams); \u2003\u2003\u2003\/\/ r"]},{"entry":[{},"\u2003HRESULT ModifyParam("]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD \u2003dwParamNumber,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR \u2003szDefaultValue[MAX_REPORT_PARAM_LEN],"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR \u2003szCaption[MAX_REPORT_PARAM_LEN],"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD \u2003dwPropertyID,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD \u2003dwpropertyPageNumber);"]},{"entry":[{},"\u2003\/\/Report property Page Instances"]},{"entry":[{},"\u2003HRESULT EnumReportPropPages("]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out] IEnumReportPages** ppEnum ReportPages);"]},{"entry":[{},"\u2003HRESULT NewReportPropPage("]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD pageID,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR \u2003wszCaption[MAX_SAGE_NAME],"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out] DWORD* \u2003pdwPageNumber);"]},{"entry":[{},"\u2003HRESULT ModifyReportpage("]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD dwPageNumber,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] OLECHAR wszCaption[MAX_SAGE NAME]);"]},{"entry":[{},"\u2003HRESULT DeleteReportPageInstance("]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] DWORD dwPageNumber);"]},{"entry":[{},"};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0361","num":"0444"},"tables":{"@attributes":{"id":"TABLE-US-00063","num":"00063"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE XXXV"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"IReport Method","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GetDigest( )"]},{"entry":[{},"Persist( )"]},{"entry":[{},"GetName( )"]},{"entry":[{},"SetName( )"]},{"entry":[{},"GetCategory( )"]},{"entry":[{},"SetCategory( )"]},{"entry":[{},"GetCategoryName( )"]},{"entry":[{},"GetDescription( )"]},{"entry":[{},"SetDescription( )"]},{"entry":[{},"GetReportFile( )"]},{"entry":[{},"SetReportFile( )"]},{"entry":[{},"EnumParams( )"]},{"entry":[{},"Modifyparam( )"]},{"entry":[{},"EnumReportProppages"]},{"entry":[{},"NewReportPropPage"]},{"entry":[{},"ModifyReportpage"]},{"entry":[{},"DeleteReportPagelnstanc"]},{"entry":[{},"e( )"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0362","num":"0445"},"tables":{"@attributes":{"id":"TABLE-US-00064","num":"00064"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003IEnumAppsinteiface IEnumApps : IUnknown"},{"entry":"interface IEnumAppS : IUnknown"},{"entry":"\u2009{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003typedef struct","tagAppDigest"]},{"entry":"\u2003{"},{"entry":["\u2003\u2003DWORD","\u2003appID;"]},{"entry":["\u2003\u2003OLECHAR","\u2003\u2003appName[MAX_SAGE_NAME];"]},{"entry":["\u2003\u2003OLECHAR","\u2003\u2003appExeName[MAX_SAGE_NAME];"]},{"entry":["\u2003\u2003OLECHAR","\u2003\u2003appversion[MAX_SAGE_APP_VERSION];"]},{"entry":["\u2003\u2003BOOL","\u2003\u2003appReviewed;"]},{"entry":"} TAppDigest;"},{"entry":"[local]"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"HRESULT Next ( [in] ULONG celt,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[out] TAppDigest *rgelt,"]},{"entry":[{},"[out] ULONG \u2003*pceltFetched);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003[call_as (Next) ]"},{"entry":"\u2003HRESULT RemoteNext ( [in] ULONG celt,"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[out, size_is(celt), \u2003length_is(*pceltFetched) ]"]},{"entry":[{},"TAppDigest *rgelt,"]},{"entry":[{},"[out] ULONG *pceltFetched);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003HRESULT Skip([in] ULONG celt);"},{"entry":"\u2003HRESULT Reset( );"},{"entry":"\u2003HRESULT Clone ( [out] IEnumApps **ppenum);"},{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0363","num":"0446"},"tables":{"@attributes":{"id":"TABLE-US-00065","num":"00065"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXVI"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IEnumApps Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Next( )","Retrieve the next AppDigest record from the"]},{"entry":[{},"enumeration. Returns the record celt id to be used to"]},{"entry":[{},"mark the seek for the next record."]},{"entry":["RemoteNext( )","Retrieve the next AppDigest record from the"]},{"entry":[{},"remote server. This is mapped to Next( ) to support"]},{"entry":[{},"general retrieval of records from local and"]},{"entry":[{},"remote enumerations."]},{"entry":["Skip( )","Skip the next AppDigest record."]},{"entry":["Reset( )","Reset the enumeration to the beginning."]},{"entry":["Clone( )","Copy the enumeration"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0364","num":"0447"},"tables":{"@attributes":{"id":"TABLE-US-00066","num":"00066"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"IEnumReports"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"interface IEnumReports :\u2003IUnknown"},{"entry":"{"},{"entry":"\u2003typedef struct tagReportDigest"},{"entry":"\u2003{"},{"entry":"\u2003\u2003DWORD\u2003\u2003reportID;"},{"entry":"\u2003\u2003OLECHAR\u2003\u2003reportName[MAX_SAGE_NAME];"},{"entry":"\u2003\u2003DWORD\u2003\u2003reportCategoryID;"},{"entry":"\u2003\u2003OLECHAR\u2003\u2003reportDescription[MAX_SAGE_DESCRIPTION];"},{"entry":"}\u2002TReportDigest;"},{"entry":"[local]"},{"entry":"HRESULT Next ( [in]\u2003\u2003ULONG celt,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out]\u2003\u2003TReportDigest *rgelt,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out]\u2003\u2003ULONG *pceltFetched);"},{"entry":"[call_as (Next)]"},{"entry":"HRESULT RemoteNext ( [in] ULONG celt ,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out, size_is (celt) , length_is(*pceltFetched) ]"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003TReportDigest *rgelt,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out] ULONG *pceltFetched);"},{"entry":"HRESULT Skip ( [in] ULONG celt);"},{"entry":"HRESULT Reset( );"},{"entry":"HRESULT Clone ( [out] IEnumReports **ppenum);"},{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0365","num":"0448"},"tables":{"@attributes":{"id":"TABLE-US-00067","num":"00067"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXVII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IEnumReports Method","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Next( )","Retrieve the next ReportDigest record from"]},{"entry":[{},"the enumeration. Returns the record celt id to be"]},{"entry":[{},"used to mark the seek for the next record."]},{"entry":["RemoteNext( )","Retrieve the next ReportDigest record from"]},{"entry":[{},"the remote server. This is mapped to Next( ) to"]},{"entry":[{},"support general retrieval of records from local"]},{"entry":[{},"and remote enumerations."]},{"entry":["Skip( )","Skip the next ReportDigest record."]},{"entry":["Reset( )","Reset the enumeration to the beginning."]},{"entry":["Clone( )","Copy the enumeration"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0366","num":"0449"},"tables":{"@attributes":{"id":"TABLE-US-00068","num":"00068"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"IEnumCategories"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"interface IEnumCategories : IUnknown"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"typedef struct\u2003tagCategory"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DWORD","categoryID;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"OLECHAR","categoryName[MAX_SAGE_NAME];"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}\u2003\u2003TCategory:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[local]"]},{"entry":[{},"HRESULT Next ( [in] ULONG celt,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[out] TCategory *rgelt,"]},{"entry":[{},"[out] ULONG *pceltFetched);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[call_as (Next) ]"]},{"entry":[{},"HRESULT RemoteNext( [in] ULONG celt,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[out, size_is (celt), length_is (*pceltFetched) ]"]},{"entry":[{},"\u2003\u2003TCategory *rgelt,"]},{"entry":[{},"[out] ULONG *pceltFetched);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT Skip ( [in] ULONG celt);"]},{"entry":[{},"HRESULT Reset( );"]},{"entry":[{},"HRESULT Clone([out] IEnumCategories\u2003\u2003**ppenum);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0367","num":"0450"},"tables":{"@attributes":{"id":"TABLE-US-00069","num":"00069"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE XXXVIII"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"IEnumCategories Method","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Next( )"]},{"entry":[{},"RemoteNext( )"]},{"entry":[{},"Skip( )"]},{"entry":[{},"Reset( )"]},{"entry":[{},"Clone( )"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"IDataManagement","The definition of the server module 's IDataManagement interface is shown below:",{"@attributes":{"id":"p-0370","num":"0453"},"tables":{"@attributes":{"id":"TABLE-US-00070","num":"00070"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"interface IDataManagement: IUnknown"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003\/\/\u2003Used to manage the active data management tasks"]},{"entry":[{},"\u2003\u2003\/\/\u2003performed by the DBOB"]},{"entry":[{},"\u2003\u2003HRESULT GetTruncateModel([in]\u2003REFIID riid,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out,\u2003iid_is(riid)\u2003void**\u2003ppv);"]},{"entry":[{},"\u2003\u2003HRESULT GetCondenseModel([in]\u2003REFIID riid,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out,\u2003iid_is(riid)\u2003\u2002void**\u2002ppv);"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The GetModel methods of IDataManagement allow the model dictating how and when data is condensed (archived) or truncated to be fetched and configured. The DBOB associated with a given server module  implements these interfaces but applies active data management only to data collected by the server's clients. In this way concurrency problems that arise when multiple threads attempt to groom the data are avoided.","Use of Iserver moduleAdmin","When a Profile changes, the DBOB may be instructed to (optionally) notify the root server module  installation in order to inform it of the users who have been affected by the profile change. The root server module  can then instruct all other server module in the system of the profile change.","In order to notify the root server module  of a Profile change, the DBOB will use the Iserver moduleAdmin::GetSuperiorserver module( ) method of its corresponding server module  to navigate to the root server module . Once at the root server module , the DBOB will use the root server module 's Iserver moduleAdmin::RereadProfile( ) method to inform the server module  of the profile changes. It is then left to the root server module  to inform all subordinate server module of the change.","Exceptions and Error Handling","Table XXXIX describes the Database Object Broker responses to error results from the server implementation of the Iserver moduleAdmin interface.",{"@attributes":{"id":"p-0377","num":"0460"},"tables":{"@attributes":{"id":"TABLE-US-00071","num":"00071"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE XXXIX"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Iserver moduleAdmin",{}]},{"entry":[{},"Method","Error Response"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RepeatCommands ( )","E_FAIL-"]},{"entry":[{},{},"E-NOCOM-"]},{"entry":[{},{},"E_FAULT-]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"System Administration Client Side Components",{"@attributes":{"id":"p-0379","num":"0462"},"figref":"FIG. 54"},"Admin Console","The Admin Console is a tool typically used by system administrators. Through the Admin Console, the administrator sets up and configures the network of server modules that collectively make up the monitoring system. Through the Admin Console the administrator can determine whether a specific system is running, and if so, if it is running a client service\/client monitoring agent. This feature allows the administrator to identify when the monitoring process has been circumvented, and also enables debugging of configuration problems. As was discussed above, a server module is aware of its subordinate servers and it's superior. With appropriate permission, the administrator may traverse the tree of server modules and perform administrative tasks at any node.","Relationship Between Server Module and Admin Console",{"@attributes":{"id":"p-0383","num":"0466"},"figref":"FIG. 55","b":["22","22","22","22","22","22","22"]},"To ease the problems associated with administering a large network of servers, certain operations performed on a server via the Admin Console may optionally be repeated to all subordinates of the server to which the command was issued. The means to traverse the server tree, repeating a given command, is provided by the navigation methods of Iserver moduleAdmin. Such propagation of administrative commands through a server tree is illustratively represented by .",{"@attributes":{"id":"p-0385","num":"0468"},"tables":{"@attributes":{"id":"TABLE-US-00072","num":"00072"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"interface Iserver moduleAdmin: IUnknown"},{"entry":"{"},{"entry":"\u2003\u2003\u2003typedef struct tagserver moduleStatus"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003DWORD upSince;\u2003\/\/ a time_t"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003DWORD numActiveClients;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003BOOL repeatsCommands;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003DWORD packetsQueued;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003DWORD packetsProcessed;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003DWORD dataItemsProcessed;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003DWORD dataTransmitErrors;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003DWORD packetQueueHighWater;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003DWORD packetQueueHighWaterTime;\u2003\/\/ a time_t"},{"entry":"\u2003\u2003\u2003}\u2002Tserver moduleStatus;"},{"entry":"\u2003\u2003\u2003\u2003HRESULT EnumClients ( [out] IEnumString** ppEnumClient);"},{"entry":"\u2003\u2003\u2003\u2003HRESULT EnumActiveClients ( [out] IEnumString** ppEnumClient);"},{"entry":"\u2003\u2003\u2003\u2003HRESULT EnumSubordinateserver modules ( [out] IEnumString**"},{"entry":"\u2003\u2003\u2003\u2002ppEnumserver module);"},{"entry":"\u2003\u2003\u2003\u2003HRESULT EnumActiveClientDigest("},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out] IEnumActiveClientDigest**\u2003ppEnumClient);"},{"entry":"\u2003\u2003\u2003\u2003HRESULT RegisterAsSubordinate ( [in] LPOLESTR subordinate);"},{"entry":"\u2003\u2003\u2003\u2003HRESULT DeRegisterAsSubordinate ( [in] LPOLESTR subordinate);"},{"entry":"\u2003\u2003\u2003\u2003HRESULT GetSuperiorserver module ( [out] LPOLESTR* superior);"},{"entry":"\u2003\u2003\u2003\u2003HRESULT SetSuperiorserver module ( [in] LPOLESTR superior);"},{"entry":"\u2003\u2003\u2003\u2003HRESULT Getserver moduleStatus ( [out] Tserver moduleStatus* status);"},{"entry":"\u2003\u2003\u2003\u2003HRESULT RepeatCommands ( [in] boolean bRepeat );"},{"entry":"\u2003\u2003\u2003\u2003HRESULT SetDBObjectBroker ( [in] LPOLESTR dbObjectBrokerHost);"},{"entry":"\u2003\u2003\u2003\u2003HRESULT GetDBObjectBroker ( [out] LPOLESTR* dbObjectBrokerHost);"},{"entry":"\u2003\u2003\u2003\u2003HRESULT GetDBOBAdmin ( [out] IDBOBAdmin** ppAdmin);"},{"entry":"\u2003\u2003\u2003\u2003HRESULT Syncserver moduleState (void);"},{"entry":"\u2003\u2003\u2003\u2003HRESULT GetEventLogEnumerator([in] LPOLESTR hostname,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003[in] TEventSource source,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003[out] IEnumNTEventLog** enumEvents);"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Referring again to , the use of ISageControlSink by the Admin Consolea allows commands to be repeated not only to each subordinate server but also to each of the server's clients. This simple feature allows a large system to be effectively managed and also permits management of sub-sections of the installation tree to be delegated. A command may be applied to the entire installed client base by traversing the server tree until a node is reached which has no superior (the master node), and by then applying the command to this master node and specifying that the command is to be repeated. To prevent widely applied commands from becoming a source of confusion, especially in the case of multiple administrators, commands travel down the server tree only. A server may optionally be configured to repeat only those commands originating from an instance of the Admin Console (an original command), and not those repeated by a superior server.","Pinging Client Service to Determine Status","Periodically, an administrator may wish to dynamically inquire about the status of the client service  on a remote client machine . The client ping feature of the Admin Console does not use an ICMP ping packet, which would verify only the presence of the target machine on the network. Instead, the Admin Console implements a ping which verifies not only that the client machine  is up and running but also that the client side monitoring software is installed and running as well.","Referring to , the Admin Console pings a client service  by making all call to CoGetClassObject( ) for a Class ID (CLSID) which is present in the target machines registry only when the monitoring software is running. Recall that the client service  is typically not implemented as a COM object that can be activated, but the service is nonetheless COM-enabled. This means that the client service  CLSID is not found in the Windows registry, which precludes activation of the client service  via COM. When the client service  initiates operation, it makes a call to CoRegisterClassObject( ) in order to register its CLSID (implements only IClientService). The presence of this object indicates the presence of the monitoring software on the applicable client machine . If a remote process can successfully contact the client service  with CoGetClassObject( ), then the result is a positive client ping.","Relationship to DBOB",{"@attributes":{"id":"p-0391","num":"0474"},"figref":"FIG. 58","b":["74","22","22"]},"UI Design","Through the Admin Console UI, the administrator manages the server modules and their associated DBOBs. The administrative tasks are divided among the following functional areas:\n\n","In a preferred implementation the Admin Console UI has a single top level window divided into two panes (side by side). A tree view is presented on the left, which is always visible. The right hand pane is occupied by a tab box, which allows the user to choose between the functional areas identified above. The data presented in each tab is a function of the server to which the Admin Console is currently connected.",{"@attributes":{"id":"p-0395","num":"0482"},"figref":"FIG. 59","b":"22","ul":{"@attributes":{"id":"ul0047","list-style":"none"},"li":{"@attributes":{"id":"ul0047-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0048","list-style":"none"},"li":["Double click on a server\u2014The selected server is now the current server and all UI views update themselves.","Right mouse click\u2014Posts a context menu containing the tab options appropriate for the object.","Left mouse click\u2014Selects the object and adds it to an operation target list if one is visible on the current tab."]}}}},"Server Module Tab","Referring to , selection of the server tab presents information descriptive of the server to which the Admin Console is currently connected. The view consists of:\n\n","From within this tab the administrator may perform the following administrative operations:\n\n","Whether or not operations are applied recursively to the subordinate servers of the current server is a function of the \u201cRepeats Operations on Subordinates\u201d check box.","Data Management Dialog",{"@attributes":{"id":"p-0401","num":"0503"},"figref":"FIG. 61"},"Client Tab",{"@attributes":{"id":"p-0403","num":"0505"},"figref":"FIG. 62","ul":{"@attributes":{"id":"ul0053","list-style":"none"},"li":{"@attributes":{"id":"ul0053-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0054","list-style":"none"},"li":["Force all clients to re-read their monitoring profiles.","Suspend data collection by the clients.","Resume data collection by the clients.","Flush client data to the server.","Flush client events to the server","Ping a historic or currently active client."]}}}},"Event Log Tab",{"@attributes":{"id":"p-0405","num":"0513"},"figref":["FIG. 63","FIG. 63"],"ul":{"@attributes":{"id":"ul0055","list-style":"none"},"li":{"@attributes":{"id":"ul0055-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0056","list-style":"none"},"li":["Client connection failure.","Corrupt data sent from client.","Unable to access database.","Error in database transaction.","Out of memory error."]}}}},"Status information such as commands repeated by the applicable server module, as well as restart information and the like, may also be shown. The log depicted in  may serve as both as an audit trail and a debugging tool.","Overview","A primary goal of the web-based monitoring system of the present invention, hereinafter \u201cNetEchoes\u2122\u201d, is to produce a system capable of monitoring user interaction with the world wide web. While the implementation of NetEchoes\u2122 may be different from the implementation described above, a similar level of monitoring detail may be effected in each case. In comparison with the server log file analysis tools widely used today, both NetEchoes\u2122 and other implementations of the present invention facilitate collection of data in greater detail and production of entirely new categories of data metrics.","By implementing web-based monitoring in a language used to construct web-delivered applications, the monitoring system itself can be embedded in any web page. This negates the need for a separate installation step on the client and allows the sample of users monitored to grow almost without bound. Whenever a user loads a page containing the embedded monitoring, the browser responds by initializing the monitoring system (subject to the security settings of the browser).","The producer's web pages are modified at the server to include a JavaScript that gathers the events and desired measures while the web page is active within the browser. During the time the page is active and when it is unloaded, the JavaScript sends information about the users behavior and experience with the web page being viewed back to a data collection web server farm. JavaScript is preferably used as the web-centric language in which to implement the monitoring for the following reasons:\n\n","The monitoring of web pages via an embedded JavaScript module is extremely valuable for e-commerce and e-business web sites. It allows for instant (realtime) feedback on how visitors are interacting with the site.","Questions such as:\n\n","This monitoring technology could also be applied to a sample of users who have intentionally elected to permit the monitoring system to monitor all web activity. The data collected could be used to produce ratings of web sites similar to the Nielsen system currently applied to select television viewers. This data would not be anonymous. The demographics of the users would be well known. This type of information is very valuable to advertisers. An internet service where advertisers could enter a description of their target audience and receive a list of the top ten recommended sites to place their add would likely be an enormous success.","User Monitoring vs. Server Module Monitoring","There are two general sources of web usage data; user data and server log file data. User data contains very detailed information regarding every site the user has visited and the type of actions performed by the user at those sites. Server module logs contain very granular information regarding activity of all users of a single site.","Many products exist to perform analysis of server log file data. The data is generated automatically by the server making it essentially free and the tools themselves are relatively inexpensive. The information in the logs is relatively easy to interpret and provides valuable information to the operator of a web site. For example, a web site operator can use server log data to:\n\n","An example of the contents of an HTTP server log is shown below. Each entry shows various information such as the requester, the time, the protocol operation (GET, HEAD, POST, etc.) the page requested and information regarding the browser which issued the request.\n\n","The server log contains a great deal of data about what requests (hits) were made of the web server, but does not contain any data about the users' experiences with the pages viewed. Analysis of the data can yield the answers to many important questions about the performance and page volume handled by a server but it can never provide much information about the users interaction with each page.","Data collection performed at the client within the browser yields all of the server-collected information, but can also yield a much richer stream of data that includes details of the user's interaction with a page. These details serve to fill in the gaps in the information offered by a server log and can be more accurate. One reason client side monitoring is more accurate is the ability of web browsers to \u201ccache\u201d pages so that a second, or subsequent visit to a page does not generate a \u201chit\u201d to the remote server, but rather the browser simply pulls the page from its local disk cache. There are actually two kinds of page caching, caching by the browser and caching by a proxy server. The goal of both schemes is to improve performance from the perspective of the user. Caching has the effect of hiding page load activity from the server. Recent figures suggest that server log file analysis fails to show as much as 20 to 40 percent of a sites real traffic. Many ISPs such as America Online (AOL) operate massive caching schemes in order to deliver higher performance to their subscribers.","For many web site, tracking page view data is essential. Many sites generate revenue on advertising banner \u201cimpressions.\u201d More accurate page view data tracking both cached and non-cached pages may result in additional revenue.","If an ad is placed at the bottom of a page there is a high likelihood that it will not be initially visible when the page is loaded and many users will not bother to scroll down to expose it. Data which could prove that an ad was actually viewed would be help the seller of ad space price their page \u201creal estate\u201d appropriately and assure a buyer that their money is not being wasted.","Web Documents","The producer of Web content develops a site using combinations of HTML, JavaScript, and embedded objects such as applets, Active-X controls, and plug-ins. The development of sites has continued to progress and advance with introduction of new technologies and techniques. These technologies on the client side have been packaged into what is now called Dynamic HTML or DHTML.","The following briefly defines the technologies used to build web content and their utilization in connection with NetEchoes\u2122.","Hyper Text Markup Language","Hyper Text Markup Language or HTML provides hypertext links that allow the user to move to different pages. Originally, HTML allowed combinations of rich text and images to be viewed with a Web Browser with the content being retrieved from locations anywhere on the Internet, forming a World Wide Web. HTML has since progressed to provide a number of different ways that content can be presented. A plethora of new mark up tags have been introduced that control not only the content but also every aspect of content; presentation, location, indentation, font type, font size, font style, etc.","Besides anchors, two aspects of HTML presentation may be particularly useful in the context of NetEchoes\u2122\u2014frames and forms. Frames allow content from different locations to be presented at the same time. Various issues surrounding the implementation of frames are described below.","Forms allow users to provide information via input elements such as buttons and text fields capable of being tracked by the web-based monitoring system. These are the items that must be observed and measured, and depending upon the browser, are presented as different window objects.","JavaScript","JavaScript can be included in an HTML document using the <SCRIPT> tag. It can perform functions on the client side without having to connect with the server. For example, forms can be verified to contain the correct entries before they are submitted to the server. Also with JavaScript, the page can respond to the user actions, such as changing the button image when the mouse pointer moves over the button, or the button is pressed.","JavaScript acts on objects that make up a Document Object Model. The DOM identifies what objects within a document can be observed by a script and what actions can be performed on these objects. Therefore, the actions that can be performed using JavaScript depend greatly on the DOM.","Applets","Applets are written in a platform independent language\u2014Java. In particular, they can be included within the content on an HTML document without user interaction and in most cases without user notification. Applets operate with security restrictions that limit their scope to an HTML page and limits their communications to the originating server of the page. With JavaScript, using Netscape's LiveWire or Microsoft's Active-X technologies, scripts can interact with applets and vice versa. Therefore the scope of the applet has been extended to cover the document in which it is embedded and even allows applets within the same page to communicate.","Like other embedded objects, the challenge to NetEchoes\u2122 is observing and tracking the activity the takes place within the applet. The implementation of Java's Graphical User Interface objects can be different depending upon the operating system and browser.","If the applets have been developed using Netscape's LiveWire or Microsoft's Active-X enabled JDKs, then the applet is open to full interaction with JavaScript. In fact, Java packages can be used to extend JavaScript functionality. Therefore Java and Applets become an enabling technologies for embedding NetEchoes\u2122 functions within HTML documents.","Plug-ins and Active-X Controls","Like applets, Netscape Plug-ins and Microsoft Active-X Controls, are embedded objects within an HTML document that allow the user to extend the functionality of the document. Unlike applets, these components must be installed on the client prior to their activation within a Web page. They require user consent and action. Active-X controls can more or less be installed automatically after the user has given consent, and under certain circumstances, the user's consent is not necessary. Netscape plug-ins usually require restart of the browser before they can be used, and require considerably more interaction by the user.","Once installed, the plug-in or Active-X control is activated by an <EMBED> or <OBJECT> tag within the document, typically to handle a MIME type not handled by the browser itself. The embedded object is deactivated when the user moves to another page. Once activated, they have full run of the computer system, i.e. there is no security context around the object like that of a Java applet.","Like applets, Plug-ins and Active-X controls are open to full interaction with JavaScript and are enabling technologies for NetEchoes\u2122.","Dynamic HTML","Dynamic HTML (DHTML) is an attempt to extend the document object model and separate once again style from content markup through Cascading Style Sheets (CSS). The DOM standardizes and extends the number of objects that can be observed and manipulated by a script, such as Java Script, JScript, even Perl.","CSS greatly extends the control of style aspects of presenting the content, while removing a number of tag attributes in current HTML. The cascading refers to the context of a style sheet\u2014embedded specific to an instance, global effecting the entire document, user preference defined by a user, etc.","DHTML extends the effect of JavaScript even further, hence extending what NetEchoes\u2122 can observe. On the other hand, it still developing like the original HTML with different DOMs and capabilities for both Netscape and Microsoft browsers. There is however a possibility to implement DHTML documents the operate across both models or allow the same functionality with different implementations.","Document Object Model (DOM)","All scripts embedded within an HTML document operate upon a Document Object Model (DOM). The W3C is attempting to develop a standard model with both Netscape and Microsoft. This standard DOM would allow scripting languages to be embedded in HTML documents and have access to the same document objects. Currently each browser exposes both window and document objects that can vary from one browser to the next. These objects are referred to as the Web Browser Object Model (WBOM).","Because both Netscape and Microsoft support JavaScript there is a common set of objects accessible in both browsers. As the Browser Wars have moved into Dynamic HTML, there has been a divergence in the events and objects observable within each browser. For the purpose of this document we will concentrate on the common Web BOM for JavaScript.","The JavaScript objects are listed in Table XXXX. Associated with each object are properties or attributes that can be accessed and events that can be observed for each object. The properties of browser object can be accessed by simply including a script within the HTML or via a Java Applet or Active-X Control. To capture the events requires adding specific attributes to HTML tags to tell the browser what JavaScript function should be called. Event handling within the DOM is discussed in detail in the following section.",{"@attributes":{"id":"p-0444","num":"0592"},"tables":{"@attributes":{"id":"TABLE-US-00073","num":"00073"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXX"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"JavaScript Web Object Model"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Web Object","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["window","The actual content area of the browser displaying the current document."]},{"entry":["location","The properties associated with the current document URL."]},{"entry":["history","A list of previous pages visited during this browser session."]},{"entry":["document","The root of the tree of objects that make up the content of the window."]},{"entry":["link, area","The <A> or <AREA> tag object within a document containing a HREF"]},{"entry":[{},"attribute."]},{"entry":["Anchor","The <A> tag object within a document containing a NAME attribute."]},{"entry":["form","The <FORM> object within a document includes access to form elements."]},{"entry":["image","The <IMG> object within a document."]},{"entry":["frame","A window object contained within a document."]},{"entry":["applets, plugins,","The <APPELET>, <EMBED>, and <OBJECT> objects within a"]},{"entry":["objects","document."]},{"entry":["mime Types","The list of helper applications and plug-ins to handle each mime type."]},{"entry":["options","The <OPTION> tab objects within a document."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"The insertion of attributes to capture events for NetEchoes\u2122 is referred to as instrumenting the HTML. Before addressing instnnnentation the objects that populate the DOM are presented. The following summarizes each object and the attributes and events associated with each object.","Window Object","The Window object represents the object itself and in particular, the content area of the document. From the highest or Top window, the browser state can be determined, and some aspects of the browser controlled. For example, new windows can be opened and the scrollbars controlled. For frames, the window object provides links to the parent window and to sibling windows.",{"@attributes":{"id":"p-0447","num":"0595"},"tables":{"@attributes":{"id":"TABLE-US-00074","num":"00074"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXI"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Window Object Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Properties","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["closed","boolean","Specifies whether a window has been closed"]},{"entry":[{},{},"(Boolean)."]},{"entry":["defaultStatus","string","The default message that appears in the status"]},{"entry":[{},{},"line of the Web Browser window."]},{"entry":["length","integer","The number of frames in the current window."]},{"entry":["name","string","The name of a window."]},{"entry":["opener","string","The window that opened this window or frame."]},{"entry":["parent","object","The window that contains the frame."]},{"entry":["self or top","object","Refers to the current window."]},{"entry":["status","string","The contents of the Web browser's status line."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0448","num":"0596"},"tables":{"@attributes":{"id":"TABLE-US-00075","num":"00075"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXII"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Window Object Events associated with the <BODY> or"},{"entry":"<FRAMESET> tags of the document."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Name","Triggered when"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"onBlur","The focus is removed from the window."]},{"entry":[{},"onError","An error occurs in the window."]},{"entry":[{},"onFocus","The focus is applied to the window."]},{"entry":[{},"onLoad","The Web browser finishes loading a document into the"]},{"entry":[{},{},"window."]},{"entry":[{},"onUnload","The user exists from the document within the window."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Though windows can be created and their content scrolled, the ability to know what content is being display is curiously missing. DHTML does provide extensions in the window object allowing measurement of mouse position within an HTML page and the size of the viewing area.","The event model has been expanded in both Netscape 4.0 and Internet Explorer 4.0 to measure mouse events and keystroke events relative to targets objects within the page. Thus window events in general can be monitored from <BODY> or <FRAMESET> tags without having to instrument all tags within an HTML page. This greatly simplifies the instrumentation having only to append attributes to the <BODY> or <FRAMESET> tags. An example of this instrumentation technique is presented in the section entitled \u201cInstrumentation of Web Documents\u201d.","Location Object",{"@attributes":{"id":"p-0451","num":"0599"},"tables":{"@attributes":{"id":"TABLE-US-00076","num":"00076"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXIII"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Location Object Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Properties","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["href","string","The entire URL, including all the subparts."]},{"entry":["protocol","string","The protocol field of the URL including the"]},{"entry":[{},{},"first colon."]},{"entry":["host","string","The hostname and port number."]},{"entry":["hostname","string","The hostname of the URL."]},{"entry":["port","integer","The port number of the URL."]},{"entry":["path","string","The path to the actual document."]},{"entry":["hash","string","Any CGI arguments after the first # in the"]},{"entry":[{},{},"URL."]},{"entry":["search","string","Any CGI arguments after the first ? in the"]},{"entry":[{},{},"URL."]},{"entry":["name","string","The name attribute of the anchor."]},{"entry":["assign(string)","Method","Set the href to the value you specify."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"The properties of a location object can be changed as well as observed. This provides a mechanism for navigating via JavaScript as well as passing content back to the server.","History Object",{"@attributes":{"id":"p-0453","num":"0601"},"tables":{"@attributes":{"id":"TABLE-US-00077","num":"00077"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXIV"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"History Object Properties and Methods"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Properties","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["current","string","Contains the URL of the current history entry."]},{"entry":["length","integer","Contains the number of entries in the history list."]},{"entry":["previous","string","Contains the URL of the previous history stock"]},{"entry":[{},{},"entry."]},{"entry":["next","string","Contains the URL of the next history stack entry."]},{"entry":["back( )","method","Goes back one entry in the history list."]},{"entry":["forward( )","method","Goes forward one entry in the history list."]},{"entry":["go(num)","method","Goes forward num entries in the history stack"]},{"entry":[{},{},"if num > 0 otherwise it goes backward-num entries."]},{"entry":["go(string)","Method","Goes to the newest history entry whose title or"]},{"entry":[{},{},"URL contains the string as a substring."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"The history is a protected or trusted object in Netscape requiring signed scripts and HTML to allow permissions to be granted by the client. With Universal Browser Read privilege, the script can access the entire list of sites visited during this session. With Universal Browser Mail privilege, used to generate a form letter to filled and sent from the client, the script can access the email address.","Document Object","The document object is the central or root object for accessing all the objects within an HTML page. Associated with the document are a number of methods that allow content to dynamically written to the browser.",{"@attributes":{"id":"p-0456","num":"0604"},"tables":{"@attributes":{"id":"TABLE-US-00078","num":"00078"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXV"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Document Object Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Properties","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["AlinkColor","string","The color of the document's active link."]},{"entry":["BgColor","string","The background color of the document."]},{"entry":["Cookie","string","The document's cookie."]},{"entry":["domain","string","Domain name of the server that served the document."]},{"entry":["FgColor","string","The foreground color of the document."]},{"entry":["LastModified","date","The date the document was last modified."]},{"entry":["LinkColor","string","The color of the document's links."]},{"entry":["Referrer","string","The URL of the document from which this document was called."]},{"entry":["Title","string","The contents of the <TITLE> tag."]},{"entry":["URL","string","The complete URL of the document."]},{"entry":["VlinkColor","string","The color of the document's visited links."]},{"entry":["close( )","method","Closes the specified document."]},{"entry":["eval( )","method","Evaluates string as JavaScript code and returns the result."]},{"entry":["open( )","method","Opens a stream for a new document. This document is meant to"]},{"entry":[{},{},"be filed with the output of calls to the document write( ) method."]},{"entry":["write(expression)","method","Writes one or more HTML expressions to the document."]},{"entry":["WriteIn(expression)","method","Identical to write( ) except appends a newline."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Typically attributes are read only. The document's location is read only. However the window's location, which has essentially the same information, can be set causing the browser to load the new URL.",{"@attributes":{"id":"p-0458","num":"0606"},"tables":{"@attributes":{"id":"TABLE-US-00079","num":"00079"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXVI"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Document Object Arrays"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Objects","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["anchors","One for each of the <A> tags containing the NAME"]},{"entry":[{},"attribute."]},{"entry":["applets","One for each <APPLE I> tag."]},{"entry":["arguments","One for each argument of a JavaScript function."]},{"entry":["elements","One to reach element in an HTML form."]},{"entry":["embeds","One for each <EMBED> tag."]},{"entry":["frames","One for each <FRAME> tag in a window containing"]},{"entry":[{},"a <FRAMESET>."]},{"entry":["forms","Refers to the current window."]},{"entry":["history","One for each entry in the history list for a window."]},{"entry":["images","One for each of the <IMG> tag."]},{"entry":["links","One for each of the <A> or <AREA tags containing the"]},{"entry":[{},"HREF attribute."]},{"entry":["mimeTypes","One for each MIME type supported by the client Web"]},{"entry":[{},"browser, its helper applications, plug-ins, and (for Internet"]},{"entry":[{},"Explorer) ActiveX Controls."]},{"entry":["options","One for each of the <OPTION> tags."]},{"entry":["plugins","One for each plug-in installed on the client Web browser."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Note that in the list above, one gets a fairly complete view of the document including all tags or elements if necessary. Accordingly, the NetEchoes\u2122 implementation does not require objects to be probed for using Microsoft Active Accessibility (MSAA). Link, Area, Anchor Objects",{"@attributes":{"id":"p-0460","num":"0608"},"tables":{"@attributes":{"id":"TABLE-US-00080","num":"00080"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXVII"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Link, Area, Anchor Object Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Properties","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["href","string","The entire URL, including all the subparts."]},{"entry":["protocol","string","The protocol field of the URL including the"]},{"entry":[{},{},"first colon."]},{"entry":["host","string","The hostname and port number."]},{"entry":["hostname","string","The hostname of the URL."]},{"entry":["port","integer","The port number of the URL."]},{"entry":["path","string","The path to the actual document."]},{"entry":["hash","string","Any CGI arguments after the first # in the"]},{"entry":[{},{},"URL."]},{"entry":["search","string","Any CGI arguments after the first ? in the"]},{"entry":[{},{},"URL."]},{"entry":["name","string","The name attribute of the anchor."]},{"entry":["assign(string)","Method","Set the href to the value you specify."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0461","num":"0609"},"tables":{"@attributes":{"id":"TABLE-US-00081","num":"00081"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXVIII"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Link, Area, Anchor Object Events associated"},{"entry":"with <A> or <AREA> tags"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Name","Triggered when"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"onClick","A link object is clicked."]},{"entry":[{},"onMouseOver","The mouse passes over a link or area object."]},{"entry":[{},"onMouseOut","The mouse passes out of a link or area object."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Note that the Link and Area objects are implemented as Location Objects allowing links to be manipulated.","Form Object","The form object is important since it represents, aside from the link, the most user action intensive aspect of an HTML page. From the Form object the user entries for each element and the submit and reset buttons are observed.",{"@attributes":{"id":"p-0464","num":"0612"},"tables":{"@attributes":{"id":"TABLE-US-00082","num":"00082"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXIX"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Form Object Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Properties","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["name","string","The value of the form's NAME attribute."]},{"entry":["method","string","The value of the form's METHOD attribute."]},{"entry":["action","string","The value of the form's ACTION attribute."]},{"entry":["elements","array","The elements array of the form."]},{"entry":["length","integer","The number of elements in the form."]},{"entry":["encoding","string","The value of the form's ENCODING attribute."]},{"entry":["target","string","Window targeted after submit for the form response."]},{"entry":["reset( )","method","Reset all the elements within the form."]},{"entry":["submit( )","method","Submit the form."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0465","num":"0613"},"tables":{"@attributes":{"id":"TABLE-US-00083","num":"00083"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXX"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Form Object Events associated with <FORM> tag"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Name","Triggered when"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["onreset","The <RESET> button is clicked or the reset( ) method is"]},{"entry":[{},"called."]},{"entry":["onsubmit","The <SUBMIT> button is clicked or the submit( )"]},{"entry":[{},"method is called."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"The form elements are listed with the form object and the following gives the properties and events that can be observed for each element.",{"@attributes":{"id":"p-0467","num":"0615"},"tables":{"@attributes":{"id":"TABLE-US-00084","num":"00084"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXXI"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Form Element Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Properties","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["name","string","The entire URL, including all the subparts."]},{"entry":["value","string","The protocol field of the URL including the first"]},{"entry":[{},{},"colon."]},{"entry":["defaultValue","string","The hostname and port number."]},{"entry":["focus( )","method","Moves the input focus to the specified object."]},{"entry":["blurr( )","method","Moves the input focus away from the specified"]},{"entry":[{},{},"object."]},{"entry":["select( )","method","Selects the specified object."]},{"entry":["sumbit( )","method","Submits the form according to its ACTION and"]},{"entry":[{},{},"METHOD attributes."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0468","num":"0616"},"tables":{"@attributes":{"id":"TABLE-US-00085","num":"00085"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXXII"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Form Element Events"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Name","Triggered when"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["onFocus","The user moves the input focus to the field, either via the"]},{"entry":[{},"Tab or a mouse click."]},{"entry":["onBlur","The user moves the input focus out of this field."]},{"entry":["onSelect","The user selects text in the field."]},{"entry":["onSubmit","The form is submitted."]},{"entry":["onChange","The form loses focus and the user has modified its text"]},{"entry":[{},"typically used to validate data in a field."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0469","num":"0617"},"tables":{"@attributes":{"id":"TABLE-US-00086","num":"00086"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXXIII"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Image Object Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Properties","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["border","string","The value of the image's BORDER attribute."]},{"entry":["complete","boolean","Indicates whether the image has been completely"]},{"entry":[{},{},"loaded."]},{"entry":["height","integer","The value of the image's HEIGHT attribute."]},{"entry":["hspace","integer","The value of the image's HSPACE attribute."]},{"entry":["lowsrc","integer","The value of the image's LOWSRC attribute."]},{"entry":["name","string","The value of the image's NAME attribute."]},{"entry":["src","string","The value of the image's SRC attribute."]},{"entry":["vspace","integer","The value of the image's VSPACE attribute."]},{"entry":["width","integer","The value of the image's WIDTH attribute."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0470","num":"0618"},"tables":{"@attributes":{"id":"TABLE-US-00087","num":"00087"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXXIV"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Image Object Events associated with <IMG> tag"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Name","Triggered when"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"onAbort","The user aborts the loading of an image, such as by"]},{"entry":[{},{},"clicking the Stop button."]},{"entry":[{},"onError","An error occurs when an image is being loaded."]},{"entry":[{},"onLoad","An image is completely loaded."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"With DHTML, every HTML element and its attributes can be accessed. What can be done with these objects varies between Netscape4 and IE4. In both cases, the Style using <STYLE> tags can be applied to these objects to effect any aspect of the element style\u2014including fonts-type, font-size, borders, padding spaces, etc. JavaScript supporting the generating of the <STYLE> tags on the run and also changing the presentation of the element during runtime.","Embedded Objects","Applets, plug-ins and ActiveX Controls as embedded objects are accessible via the Browser Object Model. As can be seen in Table XXXXVI, these objects can be accessed via the document object. With JavaScript the methods of the embedded object can be accessed directly. In fact, the JavaScript functionality can be extended by direct calls to singleton methods within a package, such as the system object, or the methods of the instance of an applet.","Likewise, Java applets and plug-ins that have Java APIs can have full access to the DOM and JavaScript functions. This is done by importing the Netscape package that defines the JSObject and JSExcepton classes. ActiveX Controls operate as extensions of the browser window and are directly integrated into the browser such that JavaScript calls are direct via the name for the embedded object and likewise the control has direct access to the WBOM and JavaScript.","In a cooperative environment, where the producer desires specific measures to be performed, the embedded objects that must be monitored can be instrumented to provide the measures such that the monitoring and measurement can be integrated via JavaScript and other embedded controls.","For example, suppose a producer wants to measure whether or not specific places within his web site are viewed by a customer. By inserting a \u201ccooperative\u201d applet that reports number of paints, one can determine whether an area is exposed and for how long, and by measuring mouseovers, one can determine if the user even anticipated following a link. For Java applets, additional instrumentation can be added to measure activity within the applet either through instrumented packages for observables, an \u201caccessibility\u201d API, or even \u201cwrapping\u201d existing Java objects.","If the producer wishes to encourage and extend monitoring of its content, a more direct means of measurement can be incorporated. If the presentation of the content depends upon popular plug-ins or ActiveX Controls that have already been installed by the customer, then via JavaScript and Java wrappers, the functions of these embedded controls can be monitored as well.","NetEchoes\u2122 Overview",{"@attributes":{"id":"p-0478","num":"0626"},"figref":"FIG. 64","b":["100","104","110","114","118","110"]},"Steps involved in Producer\/Browser\/NetEchoes\u2122 server module relationship.\n\n","NetEchoes\u2122 Client","This section describes the technology employed on a NetEchoes\u2122 client within and HTML page loaded by a browser.","Event Handling within the DOM","JavaScript programs use the event handling feature of the DOM to activate web pages and build web apps that respond to user input. Like the DOM itself, the event handling model of the DOM varies significantly between JavaScript implementations, however there is a set of least common denominator events that are similar across all JavaScript implementations.","In the previous sections tables were presented identifying event handlers like onmouseover as properties of an object of the DOM. These properties may be assigned by a script or they may be expressed as the values of HTML attributes belonging to an object in the DOM. For example, the onload event handler can be specified with the onload attribute of the <BODY> tag and the on Reset event handler can be specified with the on Reset attribute of the <FORM> tag. This synergy between the HTML markup language and JavaScript reflect the integration of scripting with the DOM. The value of an event handler may be set to an arbitrary string of JavaScript code but typically a function is defined and the handler assigned to the function definition.","Table XXXXXV presents the least common denominator events that exist between the Netscape and IE implementations of JavaScript. The third column indicates the object or objects which support the event type.",{"@attributes":{"id":"p-0485","num":"0638"},"tables":{"@attributes":{"id":"TABLE-US-00088","num":"00088"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXXXV"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Handler","Triggered when","Supported by"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["onAbort","Loading Interrupted","Image"]},{"entry":["onBlur","Element loses input focus","Text Elements, Window, all other"]},{"entry":[{},{},"elements"]},{"entry":["onChange","User selects or deselects an item or","Select, text input elements1"]},{"entry":[{},"enters text and moves input focus to"]},{"entry":[{},"another element"]},{"entry":["onClick","User clicks once. Return false to cancel","Link, Button elements"]},{"entry":[{},"default action (i.e., follow link, reset,"]},{"entry":[{},"submit)"]},{"entry":["onDblClick","User clicks twice.","Document, Link, Image, button elements"]},{"entry":["onError","Error occurs while loading an image.","Image"]},{"entry":["onFocus","Element given input focus.","Text elements, Windox, all other form"]},{"entry":[{},{},"elements"]},{"entry":["onKeyDown","Key pressed by user. Return false to","Document, Image, Link, text elements"]},{"entry":[{},"cancel."]},{"entry":["onKeyPress","Key pressed by user; a combination of","Document, Image, Link, text elements"]},{"entry":[{},"onKeyDown and onKeyUp. Return false"]},{"entry":[{},"to cancel."]},{"entry":["onKeyUp","Key released by user.","Document, Image, Link, text elements"]},{"entry":["onLoad","Document or image finishes loading.","Window, Image"]},{"entry":["onMouseDown","User presses mouse button. Return false","Document, Image, Link, button elements"]},{"entry":[{},"to cancel."]},{"entry":["onMouseOut","Mouse moves off element.","Link, Image, Layer"]},{"entry":["onMouseOver","Mouse moves over element. For links","Link, Image, Layer"]},{"entry":[{},"return true to prevent URL from"]},{"entry":[{},"appearing in the status bar."]},{"entry":["onMouseUp","User releases mouse button. Return","Document, Image, Link, button elements"]},{"entry":[{},"false to cancel."]},{"entry":["onReset","Form reset requested. Return false to","Form"]},{"entry":[{},"prevent reset."]},{"entry":["onResize","Window is resized.","Window"]},{"entry":["onSubmit","Form submission requested. Return","Form"]},{"entry":[{},"false to prevent submission"]},{"entry":["onUnload","Document is unloaded.","Window"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"In addition to the event handlers discussed above a more generalized event processing exists in both the IE and Netscape versions of JavaScript. Both Netscape and IE have the concept of an extension to the core client-side event model commonly referred to as the \u201cfourth generation\u201d event model. This name refers to the appearance of an Event object in IE 4 and Navigator 4.","Netscape and IE implement the concept of the event object with distinct differences and as yet no clear standard has emerged, however the two models can be reconciled easily with the addition of JavaScript code that determines the browser platform and reacts accordingly.","Table XXXXXVI outlines the properties of the Event object and the differences in the object's properties between IE and Netscape.",{"@attributes":{"id":"p-0489","num":"0642"},"tables":{"@attributes":{"id":"TABLE-US-00089","num":"00089"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXXXVI"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Feature","Navigator 4+","Internet Explorer 4+"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event type","type property, a string that contains the","type property, a string that contains the"]},{"entry":[{},"event type name","event type name"]},{"entry":["Event source","target property","srcElement property"]},{"entry":["Mouse button","which proeprety: 1, 2 or 3","button property: 1, 2 or 3."]},{"entry":["Key","which property holds Unicode character","keyCode property holds Unicode"]},{"entry":[{},"code (not a string)","character code (not a string)."]},{"entry":["Modifier keys","modifiers property is a bitmask","altKey, ctrlKey, and shiftKey properties"]},{"entry":[{},"containing the Event.ALT_MASK,","contain individual Boolean values"]},{"entry":[{},"Event.CONTROL_MASK,"]},{"entry":[{},"Event.META_MASK and"]},{"entry":[{},"Event.SHIFT_MASK flags"]},{"entry":["Mouse position","pageX and pageY properties specify the","clientX and clientY properties specify"]},{"entry":[{},"coordinates relative to the web page;","coordinates relative to the web page;"]},{"entry":[{},"screenX, screenY specify coordinates","screenX screenY specify coordinates"]},{"entry":[{},"relative to the screen","relative to the screen"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Access to the Event object in Netscape is via an argument passed to the event handler. In IE the Event object is available via the global variable event.","As mentioned previously, reconciling these two different event models is not difficult; it requires some code to detect the browser and take different action depending on it. An example of an event handler which functions equally well in both the Netscape and IE environments is show below:",{"@attributes":{"id":"p-0492","num":"0645"},"tables":{"@attributes":{"id":"TABLE-US-00090","num":"00090"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"function myHandler(e)"]},{"entry":[{},"{"]},{"entry":[{},"\u2003if (navigator. appName. indexOf (\u201cMicrosoft\u201d) != \u22121)"]},{"entry":[{},"\u2003\u2003\u2003e = window.event;"]},{"entry":[{},"\u2003\/\/ common processing using the local variable e to reference"]},{"entry":[{},"\u2003\/\/the Event object"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The last major difference between the Netscape and IE event handling models is how events propagate through the hierarchy of objects occupying the DOM. Netscape uses an event \u201ccapture\u201d model while IE uses an event \u201cbubbling\u201d scheme.","The Netscape model introduces new methods on the Window and Document objects to allow specified events to be captured, giving the script a chance to process an event before the object which actually generated it. When handled, the event can be inspected and then either discarded, forwarded to the source object, or rerouted to another object or handler.","Because IE 4 includes all HTML elements in its DOM event handlers exists on all the elements. The presence of consistent event handlers on all objects in the DOM allows events to be generated and then propagate up through all containing HTML elements to the Document and Window object. At any point during this process the propagation of the event through the DOM can be halted by setting the Event's cancelBubble property.","Instrumentation","The richness of the JavaScript event model and the synergy between JavaScript and the objects occupying the DOM, allows for the creation of a script which can interrogate the DOM for its constituents and then set handlers which provide feedback on the user's interaction with the document. This process is referred to as instrumentation.","All of the properties of any element within a page are available and can be modified regardless of how the page was generated or customized. This means that the instrumentation can be performed during and after download on the client. No server instrumentation is required except the incorporation of the NetEchoes\u2122 script in the page somewhere in the <BODY> of the document to be instrumented.","NetEchoes\u2122 \u201cTag\u201d","An HTML document is instrumented by the placement of a <SCRIPT> tag (indicating the presence of a JavaScript) within the body of the document. One of the important aspects of this tag is that the JavaScript referenced can be delivered from an alternate web server\u2014it need not be the one that delivered the other document content. The HTML fragment below illustrates the general pattern of the tag and its placement within the document:",{"@attributes":{"id":"p-0499","num":"0652"},"tables":{"@attributes":{"id":"TABLE-US-00091","num":"00091"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<BODY BGCOLOR=blanchedalmond topMargin=50>"]},{"entry":[{},"<SCRIPT SRC=\u201chttp:\/\/stats.klsoft.com\/script\/Instrumentation.js\u201d>"]},{"entry":[{},"<\/SCRIPT>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In this fashion, the script is delivered from an alternate web server (distinct from the content server), potentially by a partner the producer works with.","Instrumentation of SSL-Delivered Pages and NetEchoes\u2122 \u201cSmart Tag\u201d","Most commonly used web pages are delivered using the HTTP protocol. By default the NetEchoes\u2122 instrumentation script and collected data are sent using HTTP. However, frequently data is deemed sensitive and transmission using a Secure Sockets Layer (SSL) is commonly used. SSL transmission sends only encryption data across the internet. It the primary method used to deliver sensitive information such as credit card numbers and user passwords across the internet. In the case of SSL delivered pages, the NetEchoes\u2122 tag embedded on the page must reference the instrumentation script using SSL and the script must deliver the data using SSL. To simplify this process a \u201csmart\u201d NetEchoes\u2122 Tag has been developed which is suitable for use on both secure (SSL-delivered) pages and unsecure pages. The general pattern of the tag is illustrated below:",{"@attributes":{"id":"p-0502","num":"0655"},"tables":{"@attributes":{"id":"TABLE-US-00092","num":"00092"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<SCRIPT LANGUAGE=\u2033JavaScriptl.2\u2033>"]},{"entry":[{},"var kl_siteID = \u2033PUT_SITE_ID_HERE\u2033;"]},{"entry":[{},"var kl_tagProtocol = \u2033\u2033;"]},{"entry":[{},"if (location.protocol == \u2033https:\u2033)"]},{"entry":[{},"\u2003\u2003kl_tagProtocol = \u2033s\u2033;"]},{"entry":[{},"var kl_tag = \u2033<SCR\u2033 + \u2033IPT LANGUAGE=\u2018JavaScriptl.2\u2019 \u2033 +"]},{"entry":[{},"\u2003\u2003\u201cSRC=http\u2033 + kl_tagProtocol +"]},{"entry":[{},"\u2003\u2003\u2033:\/\/stats.klsoft.com\/script\/site_\u2033 + kl siteID + kl_tagProtocol"]},{"entry":[{},"+ \u2033_ePulse.js\u2033 +"]},{"entry":[{},"\u2003\u2033><\/SCR\u2033 + \u2033IPT>\u2033;"]},{"entry":[{},"document.write(kl_tag);"]},{"entry":[{},"<\/SCRIPT>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"This smart tag detects the protocol of the page upon which it is embedded: either secure (https) or unsecure (http) and adjusts the URL and script delivered appropriately.","Instrumentation of the Document","Instrumentation requires that the JavaScript \u201chook into\u201d the event model for the document. This is challenging, because the document may already have JavaScript event handlers in place. The instrumentation script must be able to dynamically insert JavaScript handlers for the necessary events that it wishes to track without disrupting existing handlers. This is one of the most technically challenging aspects of instrumentation. Described below is a technique that allows instrumentation without disruption referred to as \u201cDynamic Augmentation of Existing Event Handlers.\u201d","Dynamic Augmentation of Existing Event Handlers","In the following, we use the \u201conload\u201d event of a document to illustrate to concept of Dynamic Augmentation of Existing Event Handlers, but the concept applies to dynamically augmenting the handler for any event.","The event handlers of a page can be set up by the producer in one of two patterns. The first is as a attribute of an HTML tag, the second is as the setting for a JavaScript property. These are illustrated in .","Event handlers are commonly specified in commercial web pages using both of these methods. In dynamically augmenting these handlers, NetEchoes\u2122 must replace the existing handler (in this case on LoadHandler( )) with a new event handling method that both preserves existing behavior and adds the necessary NetEchoes\u2122 behavior.","Assume for the moment that NetEchoes\u2122 behavior is embodied in the JavaScript method netEchoesOnLoadHandler( ). Then, in the augmented case, the onload event must execute both the existing on LoadHandler( ) and the new netEchoesOnLoadHander( ).","The Dynamic augmentation arranges for this to occur by dynamically creating a third, anonymous function according to the following pattern:",{"@attributes":{"id":"p-0511","num":"0664"},"tables":{"@attributes":{"id":"TABLE-US-00093","num":"00093"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"function anonymous( )"]},{"entry":[{},"{"]},{"entry":[{},"\u2003onLoadHandler( );"]},{"entry":[{},"\u2003netEchoesOnLoadHanlder( );"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"This new function replaces the original handler (on LoadHandler( )) as the new handler by setting the appropriate JavaScript property:","Window.onload=anonymous;","This example is a simplification of the dynamic augmentation process. Other aspects that must be addressed include:\n\n","The JavaScript source for the complete handler augmentation is listed below.",{"@attributes":{"id":"p-0516","num":"0673"},"tables":{"@attributes":{"id":"TABLE-US-00094","num":"00094"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"0pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\/\/ Install an event handler, If one already exists, replace it with",{}]},{"entry":"\/\/ an anonymous function that calls both the original code and the"},{"entry":"\/\/ iEchoes handler."},{"entry":"function kl_setHandler(kl_method, kl_newFunc, kl_oldFunc) \/\/ nf is newFunc, of is oldFunc"},{"entry":"{"},{"entry":"\u2003\/\/ look to see if there is any existing handler in place"},{"entry":"\u2003\u2002if (kl_oldFunc)"},{"entry":"\u2003{"},{"entry":"\u2003\u2003var kl_ofuncBody = kl_oldFunc.toString( );"},{"entry":"\u2003\u2003\/\/ a stands for arg"},{"entry":"\u2003\u2003\/\/ The regular expression pulls out the argument list of the old"},{"entry":"\u2003\u2003\/\/ function, for example if the function string is \u2033f(a, b, c) {var i ... }\u2033,"},{"entry":"\u2003\u2003\u2009\/\/ then the match rule pulls out \u2033a, b, c\u2033 in a[1]"},{"entry":"\u2003\u2003var a = kl_ofuncBody.match(new RegExp(\u2033\\\\(([{circumflex over (\u2009)}\\\\)]*)\\\\)\u2033));"},{"entry":"\u2003\/\/ if there were no arguments, manufacture as single argument e, which will"},{"entry":"\u2003\/\/ become the event argument. The event argument is used by Keylime's code"},{"entry":"\u2003\/\/ only when the browser is Netscape, but it doesn't hurt to create the argument"},{"entry":"\u2003\/\/ in all cases."},{"entry":"\u2003\u2002a = (a[1].length >0 ? a[1]: \u2033e\u2033);"},{"entry":"\u2003\u2003\/\/ replace the arguments in the new event handler to match"},{"entry":"\u2003\u2003\/\/ the original event handler the user set in place."},{"entry":"\u2003\u2003if (kl_isNav)"},{"entry":"\u2003\u2003\u2003\/\/ The reg expression below matches the argument list and the replace"},{"entry":"\u2003\u2003\u2003\/\/ replaces it with the new arg list."},{"entry":"\u2003\u2003\u2003kl_method = kl_method.replace(new RegExp(\u2033\\\\([{circumflex over (\u2009)}\\\\)]*\\\\)\u2033,\u2033g\u2033) , \u2033(\u2033+a+\u2033)\u2033);"},{"entry":"\u2003\u2003if (kl_ofuncBody.indexOf(kl_method) < 0)"},{"entry":"{"},{"entry":"\u2003\u2003\u2003\/\/ b is bracket character index"},{"entry":"\u2003\u2003\u2003\u2002var b = kl_ofuncBody.indexOf(\u2033{\u2033);"},{"entry":"\u2003\u2003\u2003if ((kl_isNav || kl_ofuncBody.indexOf(\u2033anonymous\u2033) > 0) && b > 0)"},{"entry":"\u2003\u2003\u2003\u2003\u2003kl_ofuncBody = kl_ofuncBody.substring(b, kl_ofuncBody.length);"},{"entry":"\u2003\u2003\u2003else if (kl_ofuncBody.indexOf(\u2033function\u2033) >= 0 && b > 0)"},{"entry":"\u2003\u2003\u2003\u2003\u2003kl_funcBody= kl_ofuncBody.substring(kl_ofuncBody.indexOf"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003(\u201cfunction\u201d) + 9, b);"},{"entry":"\u2003\u2003\/\/ escape any newline chars in the old function body,"},{"entry":"\u2003\u2003\/\/ to escaped newlines"},{"entry":"\u2003\u2003kl_ofuncBody = kl_ofuncBody.replace(new RegExp(\u2033\\\\n\u2033, \u2033g\u2033), \u2033\\\\n\u2033);"},{"entry":"\u2003\u2003\/\/replace any occurences of the this pointer to kl_this. The newly defined"},{"entry":"\u2003\u2003\/\/ user function will be passed the original this pointer as kl_this."},{"entry":"\u2003\u2003\/\/ This is"},{"entry":"\u2003\u2003\/\/ necessary since the scope of the original code is being replaced."},{"entry":"\u2003\u2003kl ofuncBody ="},{"entry":"\u2003\u2003kl_ofuncBody.replace("},{"entry":"\u2003\u2003\u2003new RegExp"},{"entry":"\u2003\u2003\u2003\u2003(\u2033 ([{circumflex over (\u2009)}a-zA-Z0-9$_])this([{circumflex over (\u2009)}a-zA-Z0-9$_])\u2033, \u2033g\u2033), \u2033$1k11_this$2\u2033);"},{"entry":"\u2003\u2003\/\/kl_ofuncBody = kl_ofuncBody. replace (\/\\n\/g, \u2033 ; \u2033);"},{"entry":"\u2003\u2003\u2009\/\/ Escape all \u2018 characters"},{"entry":"\u2003\u2003kl_ofuncBody= kl_ofuncBody.replace(new RegExp(\u2033 \u2018 \u2033, \u2033g\u2033). \u2033\\\\\u2019 \u2033);"},{"entry":"\u2003\u2003\u2009\/\/ escape all \u2033 characters"},{"entry":"\u2003\u2003kl_ofuncBody = kl_ofuncBody.replace(new RegExp(\u2018 \u2033 \u2019, \u2033g\u2033). \u2018\\\\\u2033 \u2019);"},{"entry":"\u2003\u2003\/\/ create then function body for the new event handler."},{"entry":"\u2003\u2003var kl_newFuncBody ="},{"entry":"\u2003\u2003\u2033{\u2033 +"},{"entry":"\u2003\u2003\u2003\u2033var a0 = \u2018 \u2033 + a + \u2033 \u2019; \u2033 +"},{"entry":"\u2003\u2003\u2003\u2033var ofb = \u2018 \u2033 + kl_ofuncBody + \u2033 \u2019 ; \u2033 +"},{"entry":"\u2003\u2003\u2003\u2033var f = new Function( a0 , \u2018kll_this\u2019, ofb);\u2033 +"},{"entry":"\u2003\u2003\u2003\u2033var rv = f(\u2033 + a + \u2033,this);\u2033 +"},{"entry":"\u2003\u2003\u2003\u2003\u2003kl_method + \u2033 ; \u2033 +"},{"entry":"\u2003\u2003\u2003\u2003\u2033return rv; \u2033 +"},{"entry":"\u2003\u2003\u2003\u2003\u2033}\u2033;"},{"entry":"\u2003\u2003\u2003return new Function (a, kl_newFuncBody);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003else"},{"entry":"\u2003\u2003\u2003return kl_oldFunc;"},{"entry":"\u2003}"},{"entry":"\u2003return kl_newFunc;"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0517","num":"0674"},"figref":"FIG. 66"},"In a preferred implementation NetEchoes\u2122 is designed to accommodate users of phone modems with speeds as low as 28.8 kbps. Accordingly, the size of profiles downloaded to clients from the server module need to selected appropriately. In addition, the HTTP protocol is \u201cconnectionless\u201d, and thus requires that a new connection to the remote HTTPD server be made for each request. A request for a user profile therefore requires a new connection across the internet and the download of a potentially large document. Note that the instrumentation of the document takes place immediately after the document is loaded. From the user's perspective, any additional data transfer at this point would have a noticeable effect on the response time of the browser. In light of these issues, the NetEchoes\u2122 product either collects all features and organizes them through post processing or performs a variation on profiling by using a custom instrumentation script that instruments only the portions of the document that are of interest.","Instrumentation of Applets, Plug-ins and ActiveX Controls","The instrumentation of applets, plug-ins and ActiveX Controls is not as straightforward. For Netscape browsers, applets and plug-ins are accessed via Netscape's LiveConnect technology. The plug-ins must be wrapped by a Java API. For Microsoft's Internet Explorer, applets and controls are accessed via ActiveX technology. All ActiveX controls can be accessed directly from JavaScript without modification.","Regardless of the JavaScript implementation, embedded objects such as ActiveX controls and applets are accessible via the document object arrays. The document object has array properties which contain references to applets, embedded objects (ActiveX controls) and in the case of Nets cape, plugins.","Feature Tracking","Within HTML pages, features (UI controls) can only appear within the context of HTML forms. Tracking features then, is the same tracking controls on forms. In general, the controls generate JavaScript events when they are used. This makes is especially easy for NetEchoes\u2122 to track the details of what goes on in forms. Table XXXXXVII presents the possible form controls along with the properties and events available from within JavaScript.",{"@attributes":{"id":"p-0522","num":"0679"},"tables":{"@attributes":{"id":"TABLE-US-00095","num":"00095"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"49pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE XXXXXVII"},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Control","Checked","Defaultchecked","DefaultValue","Form","Length","Name","Options","SelectedIndex"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}},{"entry":["Button",{},{},{},"Y",{},"Y"]},{"entry":["CheckBox","Y","Y",{},"Y",{},"Y"]},{"entry":["Radio",{},{},{},"Y",{},"Y"]},{"entry":["Reset",{},{},{},"Y",{},"Y"]},{"entry":["Submit",{},{},{},"Y",{},"Y"]},{"entry":["Text",{},{},"Y","Y",{},"Y"]},{"entry":["Textarea",{},{},"Y","Y",{},"Y"]},{"entry":["Password",{},{},"Y","Y",{},"Y"]},{"entry":["FileUpload",{},{},"Y","Y",{},"Y"]},{"entry":["Select",{},{},{},"Y","Y","Y","Y","Y"]},{"entry":["Hidden",{},{},{},"Y",{},"Y"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Control","Type","Value","OnBlur( )","Onchange( )","Onclick( )","OnFocus","onSelect"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"8","align":"center","rowsep":"1"}}]},{"entry":[{},"Button","Y","Y","Y",{},"Y","Y"]},{"entry":[{},"CheckBox","Y","Y","Y",{},"Y","Y"]},{"entry":[{},"Radio","Y","Y","Y",{},"Y","Y"]},{"entry":[{},"Reset","Y","Y","Y",{},"Y","Y"]},{"entry":[{},"Submit","Y","Y","Y",{},"Y","Y"]},{"entry":[{},"Text","Y","Y","Y","Y",{},"Y","Y"]},{"entry":[{},"Textarea","Y","Y","Y",{},{},"Y","Y"]},{"entry":[{},"Password","Y","Y","Y","Y",{},"Y","Y"]},{"entry":[{},"FileUpload","Y","Y","Y",{},{},"Y","Y"]},{"entry":[{},"Select","Y",{},"Y","Y",{},"Y","Y"]},{"entry":[{},"Hidden","Y","Y"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"8","align":"center","rowsep":"1"}}]}]}}]}}},"As Table XXXXXVII illustrates, most controls have a value and name, plus events such as onclick( ) or onchange( ) that make the use of them inherently trackable.","Standard Data Collection","Table XXXXXVIII below lists the client-side data that is collected by the standard instrumentation script.",{"@attributes":{"id":"p-0525","num":"0682"},"tables":{"@attributes":{"id":"TABLE-US-00096","num":"00096"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"center"}},"thead":{"row":{"entry":"TABLE XXXXXVIII"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"NetEchoes\u2009\u2122 Records and Field Descriptions"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Record",{},{},{}]},{"entry":["Type","Field Name","Qualifier","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["TSTAMP",{},"First in log","The first record of a log entry giving the start"]},{"entry":[{},{},"entry","time from to which all other records for a page"]},{"entry":[{},{},{},"will be relative. The event time for each"]},{"entry":[{},{},{},"subsequent log record will be the start time in"]},{"entry":[{},{},{},"this record plus a delta time in the event record."]},{"entry":[{},"start time",{},"The start time for the entry. This is in GMT"]},{"entry":[{},{},{},"time. Note there is a possibility of inaccuracy if"]},{"entry":[{},{},{},"the client's clock is set incorrectly."]},{"entry":[{},"time zone",{},"+\/\u2212 minutes from GMT. Time zone of the client"]},{"entry":[{},{},{},"as reported by the client."]},{"entry":[{},"company",{},"Company identifier for the site."]},{"entry":[{},"identifier"]},{"entry":[{},"site identifier",{},"Site identifier for the page."]},{"entry":[{},"session",{},"Session identifier for the site domain set for"]},{"entry":[{},"identifier",{},"duration of the browser session or time interval"]},{"entry":[{},{},{},"(30 min). Different sites will have different"]},{"entry":[{},{},{},"reported session identifiers. The start of a"]},{"entry":[{},{},{},"session is indicated by a + appended to the id."]},{"entry":["PAGE",{},"Second in log","Description of the page being viewed. This"]},{"entry":[{},{},"entry","record always follows immediately the time"]},{"entry":[{},{},{},"stamp record and does not have a delta time. Its"]},{"entry":[{},{},{},"fields are relevant to all subsequent event"]},{"entry":[{},{},{},"records within the log entry."]},{"entry":[{},"location",{},"Document URL giving the location of the file"]},{"entry":[{},{},{},"for the page."]},{"entry":[{},"parent window","Window","If present, gives the document URL that holds"]},{"entry":[{},{},"INFRAME","the frame for this document."]},{"entry":[{},"document href","HREF !=","If present, the URL that was used initially to"]},{"entry":[{},{},"Location","retrieve this document. This would include the"]},{"entry":[{},{},{},"query for example."]},{"entry":[{},"referrer","via LINK","If present, the URL that loaded this document."]},{"entry":[{},"page view num",{},"A sequence number for each page view. Starts"]},{"entry":[{},{},{},"at 0 for the first page view of the session and"]},{"entry":[{},{},{},"increments by 1 for each successive page view."]},{"entry":[{},{},{},"Restarts at 0 for each session."]},{"entry":["LOAD",{},"LOAD Event","After timestamp & page records, typically the"]},{"entry":[{},{},{},"first event record indicating the start of viewing"]},{"entry":[{},{},{},"for the page. Exceptions are scripting errors,"]},{"entry":[{},{},{},"image aborts and click throughs that occur"]},{"entry":[{},{},{},"before the loading has completed."]},{"entry":[{},"delta time",{},"The delta time in milliseconds from the start"]},{"entry":[{},{},{},"time for the record."]},{"entry":[{},"load time",{},"Time in milliseconds to load the page."]},{"entry":[{},"last loaded","NAV ONLY","If present, the last loaded image during page"]},{"entry":[{},{},{},"load."]},{"entry":["GOTO",{},"LINK Event","Generated whenever a link is pressed within the"]},{"entry":[{},{},"after LOAD","document. If this record is not present, then"]},{"entry":[{},{},{},"another means was used to go to next"]},{"entry":[{},{},{},"document. Click throughs on the page before"]},{"entry":[{},{},{},"the document loaded are not recorded."]},{"entry":[{},"delta time",{},"The delta time in milliseconds from the start"]},{"entry":[{},{},{},"time for the record."]},{"entry":[{},"link",{},"Go to link giving the next document to be"]},{"entry":[{},{},{},"loaded."]},{"entry":[{},"advertisement","IE ONLY","Image used to activate link assumed to be an ad."]},{"entry":["FORM",{},"Focus Time > 0","Generated whenever forms are present in the"]},{"entry":[{},{},{},"document. This is generated only when the"]},{"entry":[{},{},{},"focus time is greater than zero."]},{"entry":[{},"delta time",{},"The delta time in milliseconds from the start"]},{"entry":[{},{},{},"time for the record."]},{"entry":[{},"reason =",{},"Reason the record was generated for the form."]},{"entry":[{},"SUBMIT,",{},"For abandoned forms the form index number is"]},{"entry":[{},"RESET,",{},"given and the abandon form report is generated"]},{"entry":[{},"ABANDON[i]",{},"only if the focus time is greater than 0."]},{"entry":[{},"name","Has Name","If present, the name for the form."]},{"entry":[{},"number",{},"Number of elements in the form."]},{"entry":[{},"elements"]},{"entry":[{},"number",{},"Number of elements the user set in the form"]},{"entry":[{},"elements set",{},"before this record was generated."]},{"entry":[{},"last element",{},"Last element entered before form was"]},{"entry":[{},{},{},"abandoned."]},{"entry":[{},"focus time",{},"Accumulated time in millisecs spent by user in"]},{"entry":[{},{},{},"the form."]},{"entry":[{},"Site-specific","Optional. Only","User defined info fields 0 thru 9 for a form"]},{"entry":[{},"form info","delivered when","submission. These fields contain string values"]},{"entry":[{},"fields 0 thru 9.","reason is","that are the values of input fields on the form."]},{"entry":[{},{},"SUBMIT and","The values are interpreted by the DataMining"]},{"entry":[{},{},"this information","servers, usually for the purpose of page-view"]},{"entry":[{},{},"is tracked by the","filters. These values are set only for certain"]},{"entry":[{},{},"form code.","forms. They can be set either by a special site-"]},{"entry":[{},{},{},"specific instrumentation script or by end-user"]},{"entry":[{},{},{},"code the modifies the k1_InfoAry[n] property"]},{"entry":[{},{},{},"on the submitted form."]},{"entry":["UNLOAD",{},"UNLOAD","Last record in entry."]},{"entry":[{},{},"Event"]},{"entry":[{},"delta time",{},"The delta time from document load that the"]},{"entry":[{},{},{},"document was viewed."]},{"entry":[{},"active time","NA","Accumulated time the document had focus."]},{"entry":[{},"aborted images",{},"If present, the number of aborted images at time"]},{"entry":[{},{},{},"of document unload. This would occur if the"]},{"entry":[{},{},{},"user licked through the page before it"]},{"entry":[{},{},{},"completely loaded."]},{"entry":[{},"Page specific",{},"Page specific info. Usually meaningful only"]},{"entry":[{},"info",{},"when taken in context with the URL for the"]},{"entry":[{},{},{},"page. Most common use is for \u201cbag oftags\u201d"]},{"entry":[{},{},{},"whereby the client sets the value"]},{"entry":[{},{},{},"\u201cwindow.epulse_info\u201d on an instrumented page."]},{"entry":[{},{},{},"That value is picked up by the script and placed"]},{"entry":[{},{},{},"in this field. Occasionally, a client-side"]},{"entry":[{},{},{},"javascript that has been customized for a client"]},{"entry":[{},{},{},"will use this field as well."]},{"entry":["ABORT",{},"First 5 images","Generated whenever an image has been aborted"]},{"entry":[{},{},{},"such as the user pressing the stop button or"]},{"entry":[{},{},{},"changing a page before loading has completed."]},{"entry":[{},"delta time",{},"The delta time in milliseconds from the start"]},{"entry":[{},{},{},"time for the record."]},{"entry":[{},"image",{},"href for the image aborted image."]},{"entry":[{},"link","IE Only","If present, the link associated with the aborted"]},{"entry":[{},{},{},"image."]},{"entry":["ERROR",{},{},"Generated whenever a error within the"]},{"entry":[{},{},{},"document (image loading and scripting errors)"]},{"entry":[{},{},{},"has occurred. In some cases, scripting errors"]},{"entry":[{},{},{},"cause the script to be abandoned, and prevent"]},{"entry":[{},{},{},"the page from being instrumented."]},{"entry":[{},"delta time",{},"The delta time in milliseconds from the start"]},{"entry":[{},{},{},"time for the record."]},{"entry":[{},"reason",{},"The reason the error occurred in free text."]},{"entry":[{},"document.href","JScript error","The URL of the document that generated the"]},{"entry":[{},{},{},"error if different from current document. For"]},{"entry":[{},{},{},"image errors this is the image source."]},{"entry":[{},"line number","JScript error","The line number where the error occurred."]},{"entry":["SYSTEM",{},{},"Generated when session id is first created to"]},{"entry":[{},{},{},"summarize session environment. Should be"]},{"entry":[{},{},{},"used with other header data included in request"]},{"entry":[{},{},{},"or post. Will be always the first event record"]},{"entry":[{},{},{},"reported from a session."]},{"entry":[{},"delta time",{},"The delta time in milliseconds from the start"]},{"entry":[{},{},{},"time for the record."]},{"entry":[{},"screen",{},"Screen dimensions and color depth"]},{"entry":[{},{},{},"(<width> \u00d7 <height> \u00d7 <pixel-depth>)."]},{"entry":[{},"window",{},"Window dimensions (<width> \u00d7 <height>)."]},{"entry":[{},"plug-ins","Nav Only","List of client plug-ins and helpers giving mime-"]},{"entry":[{},{},{},"types and plug-ins for each mime-type."]},{"entry":[{},{},{},"(NAVIGATOR ONLY)."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"From these collected measures, all the questions first proposed can be answered:\n\n","Transmitting the data collected by the instrumentation script back to a remote server elsewhere on the internet poses several problems. First, in order to pass through the intervening appliances on the net such as firewalls and routers, the connection must be made on an open port. The solution to this problem is to use port , the HTTP protocol port. It is on this port that the user fetched the instrumented page in the first place. It is therefore the logical means to send the collected data back.",{"@attributes":{"id":"p-0528","num":"0710"},"figref":"FIG. 67","b":"80","ul":{"@attributes":{"id":"ul0070","list-style":"none"},"li":{"@attributes":{"id":"ul0070-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0071","list-style":"none"},"li":["Data transmittal using 1\u00d71 pixel image request","Data transmittal with cookies","Data transmittal using hidden form fields"]}}}},"These three alternatives are described below. The most promising of these is the data transmittal by 1\u00d71 pixel image request. This method is currently in use for NetEchoes\u2122","Data Transmittal by 1\u00d71 Pixel Image Request","Generally speaking, a JavaScript operating within an HTML page has very little networking privileges. It cannot arbitrarily send data across the network. In fact, the only networking capabilities available to JavaScript is the ability to request an image from a remote server. A JavaScript fragment illustrating this capability is shown below:",{"@attributes":{"id":"p-0531","num":"0716"},"tables":{"@attributes":{"id":"TABLE-US-00097","num":"00097"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"..."]},{"entry":[{},"var picture =\u2003\u2003new Image( );\u2003\u2003\u2003\/\/\u2003constructs an image object"]},{"entry":[{},"\/\/\u2003the following gets the Keylime logo from the remote"]},{"entry":[{},"\/\/\u2003Keylime web server"]},{"entry":[{},"picture.src = http:\/\/www.keylimesoftware.com\/logo.gif\u201d;"]},{"entry":[{},"..."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The above fragment makes network request of the http server at www.keylimesoftware.com to obtain the image file logo.gif.","Interestingly enough, an inherent capability of URL requests is that they can be accompanied by a parameter specification also known as a \u201cquery string\u201d within the URL. The query string is set off in the URL by the use of a \u2018?\u2019 character and is of unlimited length. (The details of a URL format can be found in the W3C committee HTTP 1.1 protocol specification.) Therefore, the JavaScript request for an image file can be accompanied by an arbitrary data payload disguised as a query string.","Using this technique, the previous JavaScript fragment used to request an image can be adjusted to deliver a data payload.",{"@attributes":{"id":"p-0535","num":"0720"},"tables":{"@attributes":{"id":"TABLE-US-00098","num":"00098"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"..."},{"entry":"var picture\u2003\u2003=\u2003\u2003new Image( );\u2003\u2003\u2003\/\/ constructs an image object"},{"entry":"var payload\u2003=\u2003\u2003\u201cAny payload string you wish to send\u201d;"},{"entry":"payload\u2003=\u2003\u2003escape(payload);\u2003\u2003\/\/ encode payload string to abide"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\/\/ by http conventions."},{"entry":"\/\/\u2003The following requests a 1\u00d71 pixel image, but also"},{"entry":"\/\/\u2003encodes as part of the request, an arbitrary data"},{"entry":"\/\/\u2003payload."},{"entry":"\/\/\u2003Collection.gif is a 1\u00d71 pixel image served up by"},{"entry":"\/\/\u2003the stats.klsoft.com web server"},{"entry":"picture.src\u2003\u2003="},{"entry":"\u2003\u2003\u201chttp:\/\/stats.klsoft.com\/Collection.qif\u201d +\u2003\u2033?\u2033\u2003+ payload;"},{"entry":"..."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The web server at stats.klsoft.com can be adjusted in a number of ways to record the data payload sent along with the image request. The easiest way is to configure the web server to create logfiles containing the complete text for every URL requested. In this way, the payload data sent as part of the URL will appear in the server log files.","Data Transmittal with Cookies","Cookies are often used to give the illusion of persistence over the connectionless and stateless HTTP protocol. They were originally created to support CGI programming and are implemented as 30 an extension to the HTTP protocol. The data in cookies is automatically transmitted between the browser and the HTTP server without the knowledge of the user.","A cookie consists of a named value, plus four optional properties which control the lifetime, visibility and security of the cookie. The lifetime parameters are defined below:\n\n","The cookies associated with a particular page are made available to JavaScript through the cookie property of the document object.","Using cookies as a means to transmit data to the server requires that the data be sent in chunks with a size of 4 k bytes or less. The maximum size of a cookie, including the NAME of the cookie, is 4 k. Note also that the visibility of the cookie will have to be adjusted such that the value of the cookie is transmitted when a request is made for any document at the source site.","When the user leaves the site where the instrumented page was encountered, the last block of data must have the Expires property set in order to persist the value of the cookie on the client until the next time the user connects to the source site.","To avoid overflowing the 4 kb limit on cookie size, the instrumentation script could take advantage of compression as well as the use of multiple cookies. The maximum number of cookies that a browser is required to manage is 300, more than enough for the purposes of NetEchoes\u2122.","Data Transmittal with Hidden FORM Fields","Transmittal of monitoring data can also be performed using what is commonly referred to as a hidden FORM. Elements of a FORM defined with <INPUT TYPE=hidden> are not visible to the user. A FORM containing a single hidden element can be used to transmit data to a server without altering the appearance of the HTML page in which it is embedded.","A simple example of a hidden FORM is shown below:",{"@attributes":{"id":"p-0545","num":"0733"},"tables":{"@attributes":{"id":"TABLE-US-00099","num":"00099"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<FORM NAME=myform ACTION=\u201c\/cgi-binJinputdata.pl\u201d"]},{"entry":[{},"METHOD=GET>"]},{"entry":[{},"<INPUT TYPE=hidden NAME=\u201cmydata\u201d>"]},{"entry":[{},"<\/FORM>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"A script may refer to the data item as myform.mydata and set the value to a string containing a compressed stream of monitoring data.","The METHOD tag in the form definition controls whether the data is sent to the server appended to the ACTION URL (GET) or sent in the body of the HTTP request (POST).","Examples are provided blow expressed in HTTP protocol notation.",{"@attributes":{"id":"p-0549","num":"0737"},"tables":{"@attributes":{"id":"TABLE-US-00100","num":"00100"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GET http:\/\/www.limesoft.com\/cgi-bin\/inputdata.pl?mydata=<data>"]},{"entry":[{},"HTTP\/1.1"]},{"entry":[{},"POST http:\/\/www.limesoft.com\/cgi-bin\/inputdata.pl HTTP\/1.1"]},{"entry":[{},".... [additional header entries here]"]},{"entry":[{},"\u2002mydata=<data>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The hidden FORM approach to data transmission has an advantage over the cookie method in that the instrumenting script has control over when the data is sent. The data may be sent to the server at any time by invoking the submit( ) method of the FORM.","Controlling when data is sent is possibly more important than how. The script embedded in the instrumented page must strive to send monitoring data to the server at a time when the user is not initiating any other server requests otherwise the user has the impression of degraded performance. Ideally the data should be sent during periods of inactivity such as when the user pauses after a document has loaded to view text or images.","Customizing Data Collection","In addition to the standard metrics collected, the instrumentation script can be customized to collect any additional information (visible to JavaScript) for the page view.","Bag Of Tags","In addition to customization of the JavaScript, the basic script itself provides a way for producers to adjust the information delivered by interacting with the script on the page. Simply by setting a property, the client can deliver \u201cfree-format\u201d data to the NetEchoes\u2122 server. More specifically, the producer can embed JavaScript like that shown below onto the page:",{"@attributes":{"id":"p-0555","num":"0743"},"tables":{"@attributes":{"id":"TABLE-US-00101","num":"00101"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Window.epulse_info= Window.epulse_info + purchaseprice.toString( ) +"},{"entry":"\u2003qtyOrdered.toString( );"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Statements such as these, give the \u201cepulse-info\u201d property values that are transmitted back to the NetEchoes\u2122 server module. The NetEchoes\u2122 server module can then take special, site-appropriate action with this data.","Segmenting Users Based on Behavior","Because the session model for contains all the details of the users segment, the DataMining server can include custom logic for each site that scans user sessions to identify desirable user behavior. Those quality behaviors can then be permanently associated with the user in question. In this way, when the user returns for successive sessions, the user's history (in terms of his quality behavior) can be queried from the DB. There is a variety of use for such information, including incorporation into personalization systems, reports, etc.","Complete NetEchoes\u2122 Instrumentation Script","Appendix A includes the complete Netlichoes\u2122 instrumentation script. Although potentially customized to collect additional data, all other scripts are derived from the basic pattern set forth in Appendix A.","NetEchoes\u2122 Server","The NetEchoes\u2122 server components are independent from both the Producer Web Site and the Browser. They are typically housed in a separate data operations center. The data operations center houses computer hardware that provides the NetEchoes\u2122 server capabilities. NetEchoes\u2122 server components provide a wide variety of capabilities, including serving up the instrumentation script, receiving the collected data, publishing reports showing real-time user activity, etc. However, a significant aspect of the NetEchoes\u2122 server is real-time modeling of user sessions:","Real-Time Modeling of User Sessions","As collected data is received from the Instrumentation Script, it is immediately loaded into the memory of the DataMining server (a NetEchoes\u2122 server sub-component). The purpose of the DataMining server is to take collected page view data and construct an in-memory model of each in progress user-session on the instrumented site. The in-memory model includes all of 3 the relevant information about the session including:\n\n","The information for all active (in-progress) user sessions is kept in-memory for as long as the session is active. However, as the session state changes (new information pours in from the client) the session state is also persisted to a relational data store. In this way, all the information modeled in-memory is also reflected in relational tables. Just as the in-memory session information is updated in real-time, so is the relational database. This is done so that all reporting functionality of the NetEchoes\u2122 server can run reports of the relational database and still reflect real-time producer site statistics.","Handling the session in-memory by active objects enables a variety of capabilities:\n\n","Although the above application has been described primarily in the context of a system in which client computers are linked to a server computer through a local area network or the internet, one skilled in the art can readily appreciate that the present invention is equally applicable to the monitoring of usage of other types of electronic devices (e.g., cellular phones, personal digital assistants) in wireless and other environments. Thus the application is meant only to be limited by the scope of the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In the accompanying drawings:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3(","i":"a"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3(","i":"b"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 5 and 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 29","b":"50"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 39"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 40"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 41"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 42"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 43"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIGS. 44 and 45"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 46"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 47"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 48"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 49"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 50"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 51"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 52"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 53"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 54"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 55"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 56"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 57"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 58"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 59"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 60"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 61"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 62"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 63"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 64"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIGS. 65A and 65B"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 66"},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 67"}]},"DETDESC":[{},{}]}
