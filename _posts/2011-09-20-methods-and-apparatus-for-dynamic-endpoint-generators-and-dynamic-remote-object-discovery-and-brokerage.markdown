---
title: Methods and apparatus for dynamic endpoint generators and dynamic remote object discovery and brokerage
abstract: The system and method disclosed herein is a dynamic endpoint generator that enables a client device or application to consume business objects. The business objects are dynamic business objects whose definitions can be changed by either adding or removing data or actions without the need to involve technical or development resources to reconfigure or recompile the actual objects. The endpoint generator provides updated endpoint information automatically without the need for manual generation of endpoint or contract data. If a business object is modified or newly added, the endpoint generator is automatically notified and publishes information about the modified or newly added object. The client device that is accessing the business object is notified about the modified or newly added object. Or, an endpoint is generated when a client device requests a business object.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08832175&OS=08832175&RS=08832175
owner: SourceCode Technology Holdings, Inc.
number: 08832175
owner_city: Redmond
owner_country: US
publication_date: 20110920
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority to U.S. Patent Application Ser. No. 61\/384,879, entitled \u201cMethods and Apparatus for Dynamic Endpoint Generators and Dynamic Remote Object Discovery and Brokerage.\u201d","The present application relates in general to dynamic endpoint generators, and more specifically to methods and apparatus for dynamic endpoint generators that automatically publish an endpoint for business objects so that remote client devices can easily discover and access business objects.","As the number of information sources in organizations are growing, it is becoming increasingly difficult for consumers of the information to access it in a logical and structured way that relates to the traditional business objects they find familiar within their organizations (e.g., customers, assets, vendors, staff, etc). Data from existing systems is typically made available in a very technical way that requires significant technical and development skills to surface it to non-technical users in the organization. Non-technical users need to be able to add information within a logical business object definition without involving technical or development skills. Both technical and non-technical users of data need to be able to access their information from multiple data\/information sources in a structured business object like way, while still maintaining the flexibility to add additional information definitions to the existing business objects or to create new business objects from existing or new data sources without the need for complex solution development.","Existing Enterprise Application Integration (EAI) systems combined with development tools can be used to custom develop solutions which make data and information more accessible, but these solutions are typically hard-coded and require significant technical and development skill to maintain and change over time. In addition, information workers are limited by the static business forms and information presented to them by the solution applications or custom developed applications they use on a day to day basis. Still further, existing process automation tools do not provide the necessary level of modeling tools and concepts to allow both technical and non-technical users to author a completed business process solution in a single modeling\/automation tooling environment.","These problems can be solved by using Enterprise Application Integration (EAI) sources (e.g., EAI software, Web Services, Application API) to provide a higher level framework (e.g., runtime broker and adapter services) with relating solution components (e.g., user interfaces and tooling) which empowers technical and non-technical users to author logical business objects which includes data definitions (e.g., customer name, surname, etc) and actions or methods (e.g., save, load, delete) from existing or new data sources. Users can combine data from multiple sources into one single business object definition, including data and method\/actions definitions. The logical business object is a smart object that exposes a single logical data structure and view of the business object as well as a single set of logical methods that are associated with the business object. The business object is dynamic, and its definition can be changed by either adding or removing data or actions without the need to involve technical or development resources to reconfigure or recompile the actual business objects.","However, once a dynamic business object has been created, it cannot be easily accessed and consumed by remote client devices. Today's technologies require that before the business object can be consumed through existing web service technologies, an endpoint must be defined. An endpoint is used to specify the interaction requirements between the client device and the business object. For example, the client device sends a message to the business object's endpoint when it wants to use the business object, and the message is formatted according to information specified by the endpoint. A business object may have multiple endpoints that allow different ways for clients to consume that business object.","Typically, an endpoint is defined by an address, a binding, and a contract. An address is the location where the endpoint resides. A binding specifies how a business object can be consumed, such as, for example, protocol or encoding information. A contract for each object lists the operations exposed by the business object. All of this information must be specified before a business object can be used by a remote client device.","This approach presents several problems. The contract must be manually generated for each object. Because the endpoint includes the contract, the endpoint is also manually generated for each object. Manual generation of a contract (and thus the endpoint) can be expensive and time-consuming and is susceptible to user error. Further, the endpoint can become stale if it is not updated as soon as the business object is updated and the user may rely on endpoint information that does not accurately represent the business object.","Accordingly, there is a need in the art for a more efficient, cost-effective, and accurate way to allow client devices to access and consume remote business objects.","The method and apparatus disclosed herein allow technical and non-technical users to enable clients to discover, access and consume objects without the need to manually generate an endpoint for each object. An endpoint may be any information that a client device needs before the client device can communicate with a business object. The client can request to consume or use a business object, and the endpoint information, such as the contract, is automatically constructed and published. To the client, it appears as though an endpoint already existed in place, even though it was generated when the client requested the business object. Or, the endpoint is automatically constructed and published when the business object is created.","This entire process takes place without the existence of actual typed address, binding, or contract information that represents the remote object. The endpoint information is dynamic and accurately represents the most current information about the business object. In this manner, a client device can easily discover and request an endpoint for a business object.","Additional features and advantages are described herein, and will be apparent from the following Detailed Description and the figures.","The present system is most readily realized in a network communications system. A high level block diagram of an exemplary network communications system  is illustrated in . The illustrated system  includes one or more client devices , one or more routers , and a plurality of different data sources  including database servers  and\/or databases . Data transferred to\/from the client devices  from\/to the data sources  is managed by one or more object broker servers . Each of these devices may communicate with each other via a connection to one or more communications channels  such as the Internet and\/or some other data network, including, but not limited to, any suitable wide area network or local area network. It will be appreciated that any of the devices described herein may be directly connected to each other instead of over a network.","The data sources  store a plurality of files, programs, and\/or web pages in one or more databases  for use by the client devices . For example, a data source may store customer information. The data sources  may be connected directly to a database server  and\/or via one or more network connections.","One data source  and\/or one object broker server  may interact with a large number of other devices. Accordingly, each data source  and\/or one object broker server  is typically a high end computer with a large storage capacity, one or more fast microprocessors, and one or more high speed network connections. Conversely, relative to a typical server, each client device  typically includes less storage capacity, a single microprocessor, and a single network connection.","A more detailed block diagram of the electrical systems of a computing device (e.g., handheld client device , personal computer client device , router , database server , and\/or object broker server ) is illustrated in . Although the electrical systems of these computing devices may be similar, the structural differences between these devices are well known. For example, a typical handheld client device  is small and lightweight compared to a typical database server .","The example computing device , , ,  includes a main unit  which preferably includes one or more processors  electrically coupled by an address\/data bus  to one or more memory devices , other computer circuitry , and one or more interface circuits . The processor  may be any suitable processor, such as a microprocessor from the INTEL PENTIUM\u00ae family of microprocessors. The memory  preferably includes volatile memory and non-volatile memory. Preferably, the memory  stores a software program that interacts with the other devices in the system  as described below. This program may be executed by the processor  in any suitable manner. The memory  may also store digital data indicative of documents, files, programs, web pages, etc. retrieved from another computing device and\/or loaded via an input device .","The interface circuit  may be implemented using any suitable interface standard, such as an Ethernet interface and\/or a Universal Serial Bus (USB) interface. One or more input devices  may be connected to the interface circuit  for entering data and commands into the main unit . For example, the input device  may be a keyboard, mouse, touch screen, track pad, track ball, isopoint, and\/or a voice recognition system.","One or more displays, printers, speakers, and\/or other output devices  may also be connected to the main unit  via the interface circuit . The display  may be a cathode ray tube (CRTs), liquid crystal displays (LCDs), or any other type of display. The display  generates visual displays of data generated during operation of the computing device , , , . For example, the display  may be used to display web pages received from the object broker server  including data from multiple data sources . The visual displays may include prompts for human input, run time statistics, calculated values, data, etc.","One or more storage devices  may also be connected to the main unit  via the interface circuit . For example, a hard drive, CD drive, DVD drive, and\/or other storage devices may be connected to the main unit . The storage devices  may store any type of suitable data.","The computing device ,  may also exchange data with other network devices  via a connection to the network . The network connection may be any type of network connection, such as an Ethernet connection, digital subscriber line (DSL), telephone line, coaxial cable, etc. Users of the system  may be required to register with one or more of the computing devices , , , . In such an instance, each user may choose a user identifier (e.g., e-mail address) and a password which may be required for the activation of services. The user identifier and password may be passed across the network  using encryption built into the user's web browser. Alternatively, the user identifier and\/or password may be assigned by the computing device , , , .","In one embodiment, a user at a client device  views and\/or modifies data from a plurality of different data sources  via an interactive electronic form. An example block diagram showing connections between a plurality of data sources  and an electronic form  via an object broker process  is illustrated in . In general, the object broker process  (described in detail below with reference to ) compiles data in a variety of different native formats from the different data sources  (e.g., different legacy database systems) into standardized business objects ,  (e.g., in a declarative format such as Extensible Markup Language (XML)). A user may then view the data using one or more electronic forms , , . In addition, the user may manipulate the data and\/or add data via the electronic forms , , . In such instance, the object broker process  accepts the data via the business objects ,  and stores the data back to the data sources  in the correct native format.","In this example, the data sources  include an enterprise resource planning (ERP) data source , a customer relationship management (CRM) data source , a custom data source , an add-on data source , and a function data source . In addition, a role service  and an object data store  are included in the system. Typically, an ERP data source  stores data related to accounts receivable, accounts payable, inventory, etc. Typically, a CRM data source  stores data related to leads, quotes, orders, etc. A custom data source  is a data source  that is not considered a standard commercial product. For example, a business may have a custom data source that stores real-time manufacturing information. Some data sources  may use an intermediary server for communications. For example, the ERP data source  uses a BizTalk server .","The add-on data source  stores data associated with form fields added by the user that are not supported by one of the other data sources . For example, a business may start up a frequent shopper card program and need to store a card number for each participant. Accordingly, a user may add a frequent buyer number field to an existing form containing legacy data. Because the existing data sources  in this example do not include a frequent buyer number field, the frequent buyer number field and associated data are stored by the add-on data source .","In order to manipulate data in a particular data source , the object broker process  preferably calls methods built into the associated data source . For example, each data source  typically includes methods to store\/retrieve data to\/from the data source  (e.g., the CRM data source may support a \u201cLoadContact\u201d method as described in detail below). In addition, the system  allows a user to author their own functions. For example, a user may need to apply a discount to certain customers. However, the existing data sources  may not include a method to calculate the discount. Accordingly, the user may author a \u201cCalcDiscount\u201d function as described below. User defined functions may use data from more than one data source . The definitions for these user defined functions is then stored in the function data source .","User defined functions may be created using a graphical user interface tool. For example, parameters for a user defined function may be defined by selecting a graphical representation of the parameter associated with a business object. Preferably, user defined functions are stored as snippets. Snippets include a structure portion that defines the function and a user interface portion that provides the user a way to test the function. For example, the structure portion may be stored as XML, and the user interface portion may be stored as HTML in the same file.","Some user defined functions may be executed by the client devices  thereby reducing communication with the server , . Other user defined functions may require server side execution. Preferably, a determination is made if a particular function is to be executed on the client side or the server side, and an indicator of this determination is stored with the function snippet. For example, user defined functions built from certain predefined primitives (e.g., add, multiply, loop, less than, etc.) may be determined to be executable by the client device , while other user defined functions that include database lookups (e.g., SQL statements) may be determined to be executable by a server , .","From a user's perspective, the data from the data sources  (as well as data calculated from data in the data sources  e.g., a discount) is viewed using one or more electronic forms , , . In addition, the user may manipulate the data and\/or add data via the electronic forms , , . Forms , ,  may be combined into pages  and one form may use data from more than one data source . For example, the customer orders page  combines the customer contact form  and the order list form  (as described in detail below with reference to ). In addition, portions of forms and\/or entire forms that are part of a larger page, may be locked so that only certain users can modify that portion of the form or page.","In order to facilitate forms , ,  that combine data from different data sources , the system  employs an object broker process  (described in detail below with reference to ) and a form process  (described in detail below with reference to ). In one embodiment, the object broker process  is ASP code running on the object broker server  and the form process  is JavaScript running on a client device . The object broker process  compiles data in a variety of different native formats from the different data sources  into standardized business objects ,  (e.g., XML files). In addition, the object broker process  accepts the data via the business objects ,  and stores the data back to the data sources  in the correct native format.","More specifically, the object broker process  uses a plurality of broker services to communicate with the data sources . Preferably, one broker service is used for each data source . In this example, the object broker process  includes an ERP broker service , a CRM broker service , a custom broker service , an add-on broker service , and a function broker service . Each broker service , , , ,  is designed to communicate with the associated data source  using the data source's native formats and protocols.","Each broker service , , , ,  then automatically exposes the properties and methods of the associated data source  as standardized properties and methods  for use by the business objects , . For example, the ERP broker service  communicates with the ERP data source  via the BizTalk server  and exposes the ERP data source  properties and methods to the customer business object  and the order business object  as XML files. If new properties and\/or methods become available from a data source , the associated broker service preferably detects these new properties and\/or methods and automatically exposes the new properties and\/or methods for use by the business objects , . The business objects ,  may include some or all of the exposed properties and methods . Each business object ,  then exposes its included properties and methods  to the form process .","The form process  calls business object methods  in response to form events and populates the forms , ,  with data from the business object properties . For example, a user may press a \u201cLoad\u201d button on the customer orders page , which causes the form process  to call one or more methods  exposed by the business objects , . This, in turn, causes the object broker process  to retrieve the appropriate data from one or more data sources . The data is then returned as properties of the business objects , , and the form process  uses the data to populate the forms , .","In addition, the form process  may store values to the business object properties , and call methods to have the new\/modified data stored back to the appropriate data source  via the object broker process . For example, a form may accept a new value for a customer's address and call an UpdateContact method to have the new address stored to the appropriate data source .","A more detailed block diagram showing these connections between the example data sources  and the example business objects ,  is illustrated in . In this example, the customer business object  is connected to the ERP data source  and the CRM data source . The order business object  is connected to the ERP data source , the add-on data source , and the function data source . These logical connections may be defined in any suitable manner. For example, a graphical user interface may be used to allow a user to draw connection lines between graphical representations of the data sources  and graphical representations of the business objects , .","These logical connections are maintained by the object broker process . For example, data to populate the customer contact form  and the order list form  is brought into the customer business object  and the order business object  from the data sources  by the object broker process . Similarly, new and modified data from the customer contact form  and the order list form  is sent from the customer business object  and the order business object  to the data sources  by the object broker process . In addition, the role service  may generate a reduced object definition based on these full object definitions. For example, the role service  may retrieve a role associated with a particular user and a plurality of authorized properties and\/or methods associated with that role. Unauthorized properties and\/or methods are then removed from the business object definition (e.g., a user is not allowed to write to the customer business object, therefore the UpdateBalance and UpdateContact methods are removed).","The example customer business object  includes a customer ID property, a name property, an address property, an outstanding balance property, a load balance method, an update balance method, a load contact method, and an update contact method. The customer ID property in the customer business object  is connected to the customer ID property in the ERP data source  and\/or the customer ID property in the CRM data source . The name property and the address property in the customer business object  are connected to the name property and the address property in the CRM data source . The outstanding balance property in the customer business object  is connected to the outstanding balance property in the ERP data source . The load balance method and the update balance method in the customer business object  are connected to the load balance method and the update balance method in the ERP data source . The load contact method and the update contact method in the customer business object  are connected to the load contact method and the update contact method in the CRM data source .","The example order business object  includes an order number property, a customer ID property, a delivery date property, a tax property, a total property, a status property, a create order method, a load orders method, an update order method, a delete order method, a calc discount method, and a calc tax method. The order number property and the status property in the order business object  are connected to the order number property and the status property in the ERP data source . The customer ID property in the order business object  is connected to the customer ID property in the ERP data source  and\/or the customer ID property in the add-on data source . The delivery date property, tax property, and total property in the order business object  are connected to the delivery date property, tax property, and total property in the add-on data source . The create order method, load orders method, update orders method, and delete order method in the order business object  are connected to the create order method, load orders method, update orders method, and delete order method in the ERP data source . The calc discount method and the calc tax method in the order business object  are connected to the calc discount method and the calc tax method in the function data source . It will be appreciated that the names of the properties and\/or methods in the data sources  need not be the same as the corresponding names of the properties and\/or methods in the business objects , .","A more detailed view of the customer orders page  and the associated connections to the customer business object  and the order business object  are illustrated in . In this example, if the user presses a load button , binder software associated with the form process  calls the load contact method of the customer business object  and the load orders method of the order business object . For both method calls, the form process  supplies the value of the customer number field  from the customer contact form . Alternatively, the form process  may obtain the value of the customer number field  from the customer ID property of the customer business object  and\/or the order business object . These logical connections may be defined in any suitable manner. For example, a graphical user interface may be used to allow a user to draw connection lines between the forms , ,  and graphical representations of the business objects , . Preferably, the user may design forms using only a web browser. For example, an asynchronous Java and XML (AJAX) interface may be used.","When the form process  calls the load contact method of the customer business object  with the value of the customer number field  as a parameter (e.g., using AJAX), the object broker process  translates the method call into the native language of the associated data source  and retrieves the associated data from the data source  in its native format. Specifically, the CRM broker service  invokes the native load contact method of the CRM data source  and receives the contact's name and address back from the CRM data source . The CRM broker service  then stores the name and contact data to the customer business object . For example, the CRM broker service  may be ASP code running on the object broker server  that sends an XML file (or another standardized file) to the form process , which is JavaScript code running on the client device  that is displaying the customer contact form . Once the customer business object  is updated with the new name and address data, the form process  populates the name field  and the address field  of the customer contact form . Using this method, an HTML form may be updated without posting the entire form to a server and re-rendering the entire HTML form.","Similarly, when the form process  calls the load orders method of the order business object  with the value of the customer number field  as a parameter, the object broker process  translates the method call into the native language of the associated data source  and retrieves the associated data from the data source  in its native format. Specifically, the ERP broker service  invokes the native load orders method of the ERP data source  and receives a list of order numbers, an associated list of totals, and an associated list of statuses back from the ERP data source . For example, the data may be returned as a database table. These values will eventually be used to fill out the order number column , the amount column , and the status column  of the order table  in the order list form . However, in this example, the delivery date column  cannot be supplied by the ERP data source , because the ERP data source  does not have this information.","The delivery date data is stored in the add-on data source  (i.e., the delivery date field was added later by the user). Accordingly, when the form process  calls the load orders method of the order business object  with the value of the customer number field  as a parameter, the add-on broker service  invokes the load delivery date method of the add-on data source  and receives a list of delivery dates and associated order numbers back from the add-on data source . The object broker process  and\/or the form process  correlate the delivery dates with the amount data and status data received from the ERP data source  using the order number data that is common to both lists.","The object broker process  then stores the list of order numbers, the associated list of delivery dates, the associated list of totals, and the associated list of statuses to the order business object . For example, the ERP broker service , the add-on broker service , and\/or other software (e.g., ASP code running on the object broker server ) may send an XML file (or another standardized file) to the form process  (e.g., JavaScript running on the client device ). Once the order business object  is updated with the new data, the form process  populates the order table  in the order list form .","A flowchart of an example object broker process  is illustrated in . Preferably, the object broker process  is embodied in one or more software programs which is stored in one or more memories and executed by one or more processors. For example, the object broker process  may be ASP code (or any other type of software) running on the object broker server . Although the object broker process  is described with reference to the flowchart illustrated in , it will be appreciated that many other methods of performing the acts associated with object broker process  may be used. For example, the order of many of the steps may be changed, and some of the steps described may be optional.","Generally, the object broker process  receives standardized method calls from the form process  and converts the standardized method calls into native method calls. The object broker process  then sends the native method calls to the associated data source(s)  and receives one or more native responses from the data source(s) . The object broker process  then converts the native response(s) to standardized response(s) and sends the standardized response(s) to the calling form process .","More specifically, the object broker process  receives a method call from the form process  using a standardized protocol (block ). The standardized method call is associated with a business object and includes any property values (i.e., parameters) needed for this method. For example, a client device  may be displaying the customer orders page  as an HTML document. Using an onBlur event trigger, the client device  may run JavaScript code that sends an XML file  representing \u201cLoadContact(1234567)\u201d over the Internet  via an HTTP request to an ASP script running on the object broker server . It will be appreciated that any suitable protocols may be used instead of HTML, JavaScript, XML, HTTP, and\/or ASP. For example, VBScript may be used instead of JavaScript, and Perl may used instead of ASP.","The example XML request  includes the \u201cLoadContact\u201d method call  delimited by an opening \u201cMethod\u201d tag  and a closing \u201cMethod\u201d tag . In addition, the example XML request  includes the \u201cCustomerID\u201d property value  delimited by an opening \u201cCustomerID\u201d tag  and a closing \u201cCustomerID\u201d tag .","The object broker process  then passes the standardized method call to the broker service associated with the method call (block ). For example, the object broker process  may send the XML file  containing the LoadContact method  call to the CRM broker service .","The broker service associated with the method call then translates the method call from the standardized protocol to the native protocol for the associated data source  (block ). For example, the CRM broker service  may form a native request  for the CRM data source  from the received XML file . The native request  may use any protocol. For example, the native request  may be a SQL query that knows the CRM data source  holds the customer contact data in a \u201cFullName\u201d field  and a \u201cHomeAddress\u201d field  of a \u201cContactsTable\u201d  indexed by a \u201cCustNum\u201d field .","The broker service associated with the method call then sends the native query to the associated data source  and receives a native response from the data source  (block ). For example, the CRM broker service  may be an ASP script running on the object broker server  that sends the native request  to the CRM data source  as a SQL query and receives a native response  in the form of a comma-delimited list. In this example, the native response  includes the name value  and the address value  of the contact associated with the \u201cCustomerID\u201d property value .","The broker service then converts the native response back to the standardized protocol (block ). For example, the CRM broker service  may wait for a SQL response from the CRM data source  and generate an associated XML response . In this example, the XML response  includes all of the information from the original XML request  (i.e., the \u201cLoadContact\u201d method call  delimited by an opening \u201cMethod\u201d tag  and a closing \u201cMethod\u201d tag  and the \u201cCustomerID\u201d property value  delimited by an opening \u201cCustomerID\u201d tag  and a closing \u201cCustomerID\u201d tag ). In addition, the XML response  includes the name value  delimited by an opening \u201cName\u201d tag  and a closing \u201cName\u201d tag , as well as the address value  delimited by an opening \u201cAddress\u201d tag  and a closing \u201cAddress\u201d tag .","The broker service then sends the standardized response to the calling function in the form process  (block ). For example, the CRM broker service  may send the XML response  to a JavaScript associated with the customer orders page  on a client device . As described below, the form process  may then use the XML response  to populate the HTML based customer orders page .","A flowchart of an example form process  is illustrated in . Preferably, the form process  is embodied in one or more software programs which is stored in one or more memories and executed by one or more processors. For example, the form process  may be JavaScript code (or any other type of software) running on a client device . Although the form process  is described with reference to the flowchart illustrated in , it will be appreciated that many other methods of performing the acts associated with form process  may be used. For example, the order of many of the steps may be changed, and some of the steps described may be optional.","Generally, the form process  detects events associated with a form (e.g., the HTML customer orders page ) and sends standardized method calls (e.g., XML request ) to the object broker process . When the form process  receives the standardized response(s) (e.g., XML response ) back from the object broker process , the form process  may then use the standardized response(s) to populate the form (e.g., the HTML customer orders page ).","More specifically, the form process  detects an event that requires a form and\/or page to be updated (block ). For example, the form process  may be JavaScript code running on a client device  in association with the customer orders page . When a user presses the load button  on the customer contact form , the form process  detects the onClick event associated with the load button  and executes a portion of the JavaScript code associated with this onClick event (i.e., the event handler).","When the event handler is executed, the form process  generates a suitable method call in the standard protocol (block ). For example, the client device  may run JavaScript code that generates the XML file  representing \u201cLoadContact(1234567)\u201d. As described above, the example XML request  includes the \u201cLoadContact\u201d method call  delimited by an opening \u201cMethod\u201d tag  and a closing \u201cMethod\u201d tag . In addition, the example XML request  includes the \u201cCustomerID\u201d property value  delimited by an opening \u201cCustomerID\u201d tag  and a closing \u201cCustomerID\u201d tag .","The form process  then sends the standardized method call to the object broker process  (block ). For example, the client device  may send the XML request  over the Internet  via an HTTP request to an ASP script running on the object broker server . The object broker process  then communicates with the associated data sources  using the native protocols and sends the form process  a standardized response (block ). For example, the client side JavaScript associated with the form process  may receive the XML response  from the server side ASP script associated with the object broker process .","As described above, the example XML response  includes all of the information from the original XML request  (i.e., the \u201cLoadContact\u201d method call  delimited by an opening \u201cMethod\u201d tag  and a closing \u201cMethod\u201d tag  and the \u201cCustomerID\u201d property value  delimited by an opening \u201cCustomerID\u201d tag  and a closing \u201cCustomerID\u201d tag ). In addition, the XML response  includes the name value  delimited by an opening \u201cName\u201d tag  and a closing \u201cName\u201d tag , as well as the address value  delimited by an opening \u201cAddress\u201d tag  and a closing \u201cAddress\u201d tag . The form process  may then use the standardized response to populate the client's form (block ). For example, the client side JavaScript may populate the name field  and the address field  of the HTML based customer contact form .","A workflow design tool  that allows a user to define a resource map  is illustrated in . In this example, the workflow design tool  includes a file explorer section  and a design canvas . The file explorer section  allows the user to find and organize a plurality of files associated with the work flow. The design canvas  allows the user to draw a graphical representation of the resource map . In this example, a resource map  is shown that includes a staff object  and a customer object . The staff object  and the customer object  each include one or more input nodes  and one or more output nodes . Input nodes  are connected to output nodes  by process arrows . In this example, a support process and a sales process each come out of the staff object  and into the customer object . Similarly, an order process comes out of the customer object  and into the staff object .","By defining workflows in terms of known resources (e.g., the staff object  and the customer object ) and the interactions between those resources (e.g., the customer object  needs support from the staff object ), the workflow designer can discover and design each process by starting at a high level and drilling down to underlying processes and automated workflows.","The resource maps  also allow for business object inheritance to show classes of a business object and that business object's child objects. Child objects may be associated with parent objects by modifying properties associated with the parent object and\/or adding properties to the parent object. A single parent\/child object combination might have a unique link definition within another resource on the canvas. For example, the parent customer object  may include a government customer child object and a commercial customer child object. The sales process between the staff object  and the customer object  may be different depending on the type of customer object  (i.e., one sales process for government customer's  and another sales process for commercial customers ). Similarly, the staff object  may be a parent object with sales staff and support staff as two child resources.","Another view of the workflow design tool  is illustrated in . In this view, the workflow design tool  is used to create a process map . In this example, the support process is being defined. The example support process includes a start step , a rejected step , and an approved step . In this example, only one of these steps , ,  is to be performed. Accordingly, a new step  is being placed to select one of the three steps , , . The new step  includes a plurality of actions  and a plurality of corresponding output nodes . In this example, the new step  includes an approve action , a reject action , and a redirect action . The user connects the rejected output node to the input node of the rejected step  by dragging the process connector . The associated line logic is automatically configured for the user.","Another process map  is illustrated in . In this example process map , a portion  of the process map  is highlighted. Specifically, an approved step  and a notification step  are included in a highlighted portion . This portion  may define a localized region of the process map  while other portions of the process map  (e.g., the rest of the process map  in this example) are considered global regions. Using process inheritance, this localization of certain process regions allows a process owner to stay in control of the global process and still allow other users to customize certain portions . For example, the global process may determine when something is approved and where the notification is routed, but one office in an organization may perform one set of actions in response to the approval and another office in the organization may perform another set of actions in response to the approval. Local processes may even include additional process steps that are specific to the localized region. The process  is maintained under a single process definition such that changes to the global portion are automatically applied to all instances of the process  and changes to the local portion  are only applied to the associated localities.","In addition, individual process steps and\/or portions  may be locked. In this example, an approval step  is individually locked, and the local portion  is also locked. Each locked step and each locked portion includes a lock icon  to indicate a locked status. By locking a process step  and\/or a process portion , process designers can limit another user's ability to change certain configuration settings, add or remove dependencies, etc. from the defined and locked logic. The locking attributes can also be manipulated by wizards and templates in a programmatic way, allowing lower level building blocks to hide or lock their implementation logic.","A collaborative framework allows any process designer working within the workflow design tool  to visually share his design canvas  with another user across the network . A process designer can also initiate a voice or text conversation with the other parties to discuss the process currently being designed. In this manner, the process designer may involve other users in the process design using collaboration and application sharing tools. For example, by right clicking on the design canvas , the process designer may contact a particular person in the accounting department to ask that person who should be notified when a purchase is approved. Text messages and\/or voice recordings between collaborators may also be saved to a database for later review. For example, when a process is being evaluated for redesign, the process designer may listen to a collaboration conversation to determine why a particular step was implemented the current way.","Each step in the graphical representation of process preferably includes an activity strip. An example activity strip  is illustrated in . In this example, the activity strip  includes one or more event icons  that represent the events associated with the process step. For example, the user may drag a send e-mail event into a process step. In such an instance, an e-mail event icon  is added to the activity strip . If the number of event icons  exceeds the width of the activity strip , the user may scroll through event icons using arrow buttons .","When a particular event icon  is selected, the user is shown a setup wizard to configure that portion of the process. Preferably, each step in a process is presented as a cube to the user, and the setup wizard is swiveled into view to create an effect of a single entity that the user is working on. For example, when a user presses the e-mail event icon , the activity strip  rotates into an e-mail event setup wizard . A partially rotated view of an example e-mail event setup wizard  is illustrated in . A fully rotated view of the same setup wizard  is illustrated in . The e-mail setup wizard  may be used to design dynamically constructed e-mails used by one or more workflow processes. For example, the notification step  of the approval process  illustrated in  includes an output  that may be an automatic e-mail message. The e-mail setup wizard  may be used to design how that e-mail message is constructed.","The e-mail setup wizard may use a reference wizard, which allows a user to use a process while designing another process. For example, a reference wizard may allow a user to call any method in any .NET assembly, Web service or WCF service as part designing a process.","Preferably, the setup wizard  includes a main display portion  and a next button . The main display portion  displays one page of the setup wizard . The next button  advances the main display portion  to the next page of the setup wizard . A previous button (not shown) changes the main display portion  to display the previous page of the setup wizard .","The setup wizard  also includes a page palette . The page palette  includes a plurality of thumbnails  to . Each of the thumbnails  to  represents one of the pages in the setup wizard . The user may quickly jump to any page in the setup wizard  by clicking the associated thumbnail. When a user jumps to a particular page in the setup wizard , the main display portion  is redrawn to reflect that page.","In addition, the user may quickly view a popup of any page in the setup wizard  without jumping to that page (i.e., without drawing the page contents in the main display portion ) by hovering a cursor over the associated thumbnail. For example, the third page  of the example e-mail setup wizard  is displayed as a popup in . In this example, the third page  of the setup wizard  includes a subject input box  and a body input box . The subject input box  of the e-mail setup wizard  is used to define the subject line of the automatic e-mail. The body input box  of the e-mail setup wizard  is used to define the body of the automatic e-mail. Any values entered into a page of the process setup wizard  are visible in the popup view. For example, if the user had entered \u201cApproval Report\u201d in the subject input box  of the third page  of the e-mail setup wizard , \u201cApproval Report\u201d would be visible in the subject input box  of the popup window. In this manner, the user can enter values on different pages of the setup wizard  that are consistent with other entries without the need to remember those other entries and\/or leave the current page.","A flowchart of an example setup wizard process  is illustrated in . Preferably, the setup wizard process  is embodied in one or more software programs which is stored in one or more memories and executed by one or more processors. Although the setup wizard process  is described with reference to the flowchart illustrated in , it will be appreciated that many other methods of performing the acts associated with setup wizard process  may be used. For example, the order of many of the steps may be changed, and some of the steps described may be optional.","The process  begins when a client device  detects an event associated with a graphical representation of a process step  (block ). For example, the user may click on a setup button in the activity strip . In response, the client device  causes an animated sequence to be displayed (block ). For example, the client device may display the activity strip rotating in three dimensions to show an e-mail setup wizard \u201cside\u201d of a cube. In this manner, the user is given visual feedback that the two objects (e.g., the activity strip  and the e-mail setup wizard ) are related.","The setup wizard includes a plurality of setup pages in a thumbnail palette  and a current setup page in a main display portion  (block ). For example, the first page of an e-mail setup wizard may ask the user to enter the e-mail address of the recipient and the subject of the e-mail message. While the client device  is displaying setup wizard pages and receiving setup information from the user, the client device  is also looking for a plurality of events such as mouse movements and mouse clicks.","If a first type of event associated with one of the thumbnail images - is detected (block ), the client device  preferably displays a larger version of the associated thumbnail image (block ). For example, if the user moves the mouse cursor over a particular thumbnail image -, a popup window  showing a larger version of that thumbnail image may be displayed. Preferably, the larger version of the thumbnail image is a separate window  that is smaller than the main display portion  (see ). However, any type of suitable image may be used. For example, the larger version of the thumbnail image may \u201ctemporarily\u201d replace the main display portion .","If a second type of event associated with one of the thumbnail images - is detected (block ), the client device  preferably removes the larger version of the associated thumbnail image (block ). For example, if the user moves the mouse cursor out of a particular thumbnail image, the popup window showing the larger version of that thumbnail image may be removed. If the larger version of the thumbnail image is a separate window, that window is removed from the display and the content \u201cbeneath\u201d the removed window is redrawn. If the larger version of the thumbnail image replaced the main display portion , then the previous contents of the main display portion  (e.g., the current setup page) is redrawn in the main display portion .","The larger version of the thumbnail image also shows any setup information previously entered by the user. For example, if the user entered the recipients e-mail address on the first page of the setup wizard, moved to another page of the setup wizard, and then wanted to recall the entered e-mail address without scrolling all the way back to the first page, the user may simply roll the mouse over the first thumbnail to recall the entered information.","If a third type of event associated with one of the thumbnail images - is detected (block ), the client device  preferably replaces the main display image with a full size version of the associated thumbnail image (block ). For example, if the user clicks the mouse on a particular thumbnail image, the main display portion  preferably jumps to that page in the setup wizard. Unlike the mouse over example, removing the mouse from the thumbnail does not revert the main display portion  to the previous page (i.e., the user has moved to that setup page as opposed to just temporally reviewing that setup page).","At any time, the user may enter one or more setup options (block ), and the setup options are stored (block ). If the user exits the setup wizard (block ), the process - of checking for user actions and setup options repeats.","Even though the dynamic business object can be a useful tool in today's organizations, once a dynamic business object has been created, it cannot be easily accessed and consumed by remote client devices. Some existing technologies require that before the business object can be consumed through existing web service technologies, an endpoint must be defined. An endpoint is used to specify the interaction requirements between the client device and the business object. For example, the client device sends a message to the business object's endpoint when it wants to use the business object, and the message is formatted according to information specified by the endpoint. A business object may have multiple endpoints that allow different ways for clients to consume that object. Other existing technologies may provide a default endpoint where the user cannot configure any of the parameters or settings of the endpoint.","Typically, an endpoint is defined by an address, a binding, and a contract. An address is the location where the endpoint resides. A binding specifies how a business object can be consumed, such as, for example, protocol or encoding information. A contract for each object lists the operations exposed by the business object. All of this information must be specified before a business object can be used by a remote client device.","Today's existing approaches present several problems. In some cases, the contract must be manually generated for each object. Because the endpoint includes the contract, the endpoint is also manually generated for each object. Manual generation of a contract (and thus the endpoint) can be expensive and time-consuming and is susceptible to user error. Further, the endpoint can become stale if it is not updated as soon as the business object is updated and the user may rely on endpoint information that does not accurately represent the business object.","The present system makes business objects available to clients through endpoints, where the endpoints are dynamically generated. Thus, there is no need to manually generate an endpoint. The endpoints may be stored on a server. Endpoints associated with objects are automatically generated when the business objects are created, or the endpoints may be created when the business object is requested. In one embodiment, the endpoints are generated based on configuration criteria that allows the user to apply various levels of isolation to the endpoints as explained below. Whether or not configuration criteria is used, there is no need to manually generate endpoint information because the endpoint is automatically generated when the business object is requested by a client device or created. Client devices can communicate with the dynamic endpoint and use contracts associated with the business objects as though the contracts had been generated manually. The business object properties may be exposed through data contracts and business object methods may be exposed through operation contracts.","The present system frees resources and improves efficiency because new objects can be designed, deployed and consumed without the need to generate endpoints. Client devices are only required to know about and connect to the dynamic endpoint. Client devices can thus use objects without any prerequisite contract generation, construction, or publication. The endpoint information, such as a contract, is generated by the same service that created the business objects. Thus, the endpoint information is complete and compatible with the business object, and requires no additional involvement by a programmer or programming tools. Further, because the endpoint is generated when the business object is created or requested, the endpoint can allow integration with new environments that did not exist when the business object was designed.","In one embodiment, a business object may be periodically updated to create new versions. With static contracts, each new version of the business object would require updating the contract on the server so that clients may consume the business object. Otherwise, the contract (or the endpoint information) becomes stale and the client no longer has the most recent or accurate contract to consume the business object. This problem is avoided in the present system through the use of contracts that are dynamically generated. Because the present system uses dynamic contracts, the contract is never stale. If the business objects are modified, the contract is automatically modified or updated. The client device or consumer continues to point to the single known entity\u2014the dynamic endpoint\u2014and the dynamic endpoint maintains information and knowledge about the system's business objects, processes, and resources. The dynamic endpoint continues to generate contracts for the other objects in the system even as new objects are added or existing objects are modified.","In one embodiment, previous versions of endpoints are maintained even as new endpoints are generated. This can be useful when a client device chooses or requires using a specific version of a contract or endpoint, even after a new contract or endpoint has been generated.","In one embodiment, the server constructs and publishes contracts for all objects that are maintained or stored on the server. In one embodiment, the server constructs and publishes contracts for only for a subset of the business objects stored on the server by excluding some of the business objects. The subset may be determined based on configuration criteria.","Alternatively, the criteria may be determined at the same time that the server constructs and publishes contracts. This allows a user to exercise granular control over the dynamic nature of the system.","For example, the dynamic endpoint generator may implement a category system. In one embodiment, every object has a unique endpoint. In one embodiment, every business object is placed in a category, and every category has a unique endpoint. When multiple business objects share the same category (and thus the same endpoint), those business objects can be selected or deselected by the dynamic endpoint generator. This allows a user to dynamically update only certain categories of business objects.","For example, a user working on a project may place all business objects relating to that project under one category. The user may only select that category (and thus endpoint) and the dynamic endpoint generator will dynamically update the contracts for the business objects belonging to that category. Other business objects in other categories are excluded by the dynamic endpoint generator, reducing the number of business objects that are dynamically updated and thus reducing memory footprint, regeneration time, and startup time. Users can create subcategories and choose to dynamically generate contracts for objects belonging to certain subcategories. Thus, users can control with precision which business objects are to be dynamically updated.",{"@attributes":{"id":"p-0130","num":"0129"},"figref":"FIG. 16","b":["1600","1602","1604","1606","1606","1608","1610","1612","1614","1616","1618"]},"In one embodiment, the system has not generated any contracts for any of the business objects, and only generates endpoints when the businesses objects are requested. For example, an organization may need to store the first name, the last name, and the social security number of its customers. A user specifies these fields when defining the Customer Business Object .","The Business Object Application  may need to interact with the Customer Business Object . For example, the Business Object Application  wishes to create a new customer by using the Customer Business Object . However, the Business Object Application  does not have the endpoint information for the Customer Business Object . When the Business Object Application  requests a communication with or desires to consume the Customer Business Object , it sends a request to the Dynamic Endpoint Generator . The Dynamic Endpoint Generator  automatically constructs and publishes endpoint information, including a data contract, for the Customer Business Object . Thus, the Business Object Application  can now consume the Customer Business Object  even though the Customer Business Object  did not previously have an endpoint. In one embodiment, the Dynamic Endpoint Generator  generates an endpoint when a business object is created.","In one embodiment, after the Business Object Application  consumes the Customer Business Object , the definition of the Customer Business Object  is modified. For example, the organization may now require storing the address of its customers in addition to the first name, the last name, and the social security number of its customers. The address information may be retrieved from a different database than the databases holding the first name, last name and social security number. A user modifies the definition of the Customer Business Object . When the Customer Business Object  is updated, the new property of the Customer Business Object  is republished and the Dynamic Endpoint Generator  is automatically notified of the modification to the Customer Business Object . The Dynamic Endpoint Generator  updates its own information and publishes an updated endpoint for the Customer Business Object . Thus, the Business Object Application  always has the most current endpoint information for the Customer Business Object .","In one embodiment, the business objects are exposed to a client device through a web infrastructure such as Windows Communication Foundation (WCF), which is part of the .NET framework. The client device may use standard WCF mechanisms. In one example, the contract or endpoint is generated in declarative format. The declarative format may be XML. In one embodiment, the contracts are published in the form of standard Web Service Definition Language (WSDL) models. Or, the endpoints or contracts may be published using representational state transfer (REST), such as, for example, implementing XML, the Atom Syndication Format and\/or Publishing Protocol (Atom), or JavaScript Object Notation (JSON). The endpoints can include Secure Sockets Layer (SSL) or Transport Layer Security (TSL) support.",{"@attributes":{"id":"p-0135","num":"0134"},"figref":["FIG. 17","FIG. 17"],"b":["1700","1700","1700","102","1700","1700"]},"Generally, a new business object is created, the dynamic endpoint generator automatically generates endpoint information for the business object, and a client device can consume the business object without the need to manually generate a contract or other endpoint information, such as a contract, for the business object.","More specifically, a design tool may be used to create a new Products business object, and the business object is then deployed and published on a server 192.168.1.38:7. A dynamic endpoint \u201chttp:\/\/dlx.denallix.com:8000\/Demo\u201d for the business object is generated. A remote client device ProductsSvcClient can communicate with the endpoint so that the endpoint provides binding information, metadata, data and method contracts to the client device. The client device can use methods such as ProductsSvc_Create, ProductsSvc_Save, ProductsSvc_Delete, ProductsSvc_Load, and ProductsSvc_GetList that may be associated with the Products business object. The client device ProductsSvcClient consumes the Products business object, and using one or all of the methods, creates product records ACME Widgets and ACME Gadgets.","As shown in , the user can use a design tool  to create a new business object. The tool includes templates  to create projects, processes or business objects. If the user wants to create a new blank business object, the user selects the business object template . Or, the user can access and reuse other recently used business objects such as Customer  and Employee . Then, the user hits the Create button to create the new business object named Products .","Each business object is typically associated with properties and methods.  illustrates that in one example the Products business object  has five default methods  that the user may call when using the Products business object . The methods are part of a SmartBox service  that is available to the user. Other services may also be available to the user, and user may use and combine services from multiple sources. The new Products business object  does not have any properties  associated with it yet.","The user can add properties that define the business object.  illustrates that the Product Business object  is defined by the ProductID , Name , and Category  properties. Other properties may also be available to the user, and user may use and combine properties from multiple sources. The ProductID  is listed as the key property because the ProductID value is unique for every Product. Once the Products business object's methods  and properties  are defined, the business object  can be deployed to a server as shown in .","Once a business object is deployed, it must be published. Publishing a business object makes the business object discoverable to clients that may wish to use the business object.  is a screenshot of an example of publishing the Products business object  on the 192.168.1.38:7 server . Once the business object is available on the server, a dynamic endpoint is automatically generated so that the business object can be consumed by a client.","In one embodiment, the user may have the option of configuring various settings related to an endpoint, such as, for example, whether an endpoint is enabled for a business object, whether the business object is excluded from having endpoints, whether isolation is used for the endpoint, and whether custom bindings are used for the endpoint.",{"@attributes":{"id":"p-0143","num":"0142"},"figref":"FIG. 23","b":["2300","2302","2304","2306","2308","2310","2312"]},"To generate an endpoint, the dynamic endpoint generator, in one embodiment, loads the definition of the business object and maps the data types to endpoint supported data types in step . In step , the dynamic endpoint generator generates data contracts for every business object data type. In step , the dynamic endpoint generator generates operation contracts and\/or bindings for every business object method. In step , the dynamic endpoint generator generates a service contract for every category in the category system. For example, the dynamic endpoint generator generates endpoints not only for the business object published at step , but all business objects belonging to the same category as the business object or all categories recognized by the dynamic endpoint generator.","In step , a user can configure whether isolation should be used for the endpoint. If isolation is not to be used, then the shared memory\/application domain is unloaded in step . A user can configure whether custom bindings should be used in step . If custom bindings should be used, then an endpoint is created in shared memory with custom security bindings in step . If custom bindings should not be used, then an endpoint is created in shared memory with shared security bindings in step .","If isolation is to be used in step , then an isolated memory\/application domain is created in step . In step , a user can configure whether custom bindings should be used. If custom bindings should be used, then an endpoint is created in isolated memory with custom security bindings in step . If custom bindings should not be used, then an endpoint is created in isolated memory with shared security bindings in step .","The configuration criteria may be predetermined or they may be specified when the endpoint is created. Configuration may be performed at various different levels. For example, a user may be able to configure at the services level, at a WCF\/REST protocol level, or at a managed level. Using these three levels of configuration, a user can granularly control exactly where and how an endpoint is generated.","Services configuration controls the default functionality of services, including whether services are enabled to run or not, or whether the endpoint generator will listen for certain events, such as, for example, the creation of a new business object. WCF\/REST configuration allows a user to override the default services capability and specify an endpoint address per endpoint type, e.g., WCF or REST.","Table 1 provides an example of exemplary code for a default configuration with endpoints enabled.",{"@attributes":{"id":"p-0150","num":"0149"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<smoServices enableEndpoints=\u201ctrue\u201d enableEvents=\u201ctrue\u201d"},{"entry":"enableCrossDomainPolicy=\u201ctrue\u201d enableMetadata=\u201ctrue\u201d scheme=\u201chttp\u201d"},{"entry":"server=\u201capi.denallix.com\u201d port=\u201c8888\u201d"},{"entry":"serviceRoot=\u201cSmartObjectServices\u201d specialCharacterReplacement=\u201c_\u201d"},{"entry":"defaultSecurityLabel=\u201cK2\u201d individualSmartObjects=\u201ctrue\u201d>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<wcf binding=\u201cwsHttpBinding\u201d"]},{"entry":[{},"bindingConfiguration=\u201cwsHttpBinding+Windows\u201d \/>"]},{"entry":[{},"<rest binding=\u201cwebHttpBinding\u201d"]},{"entry":[{},"bindingConfiguration=\u201cwebHttpBinding+Windows\u201d \/>"]},{"entry":[{},"<managedEndpoints>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<excluded all=\u201cfalse\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/managedEndpoints>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/smoServices>"},{"entry":"<system.serviceModel>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<bindings>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<basicHttpBinding>0"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<binding name=\u201cbasicHttpBinding+Windows+HTTPS\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<security mode=\u201cTransport\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<transport clientCredentialType=\u201cWindows\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/security>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/binding>"]},{"entry":[{},"<binding name=\u201cbasicHttpBinding+Basic+HTTPS\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<security mode=\u201cTransport\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<transport clientCredentialType=\u201cBasic\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/security>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/binding>"]},{"entry":[{},"<binding name=\u201cbasicHttpBinding+Windows\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<security mode=\u201cTransportCredentialOnly\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<transport clientCredentialType=\u201cWindows\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/security>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/binding>"]},{"entry":[{},"<binding name=\u201cbasicHttpBinding+Basic\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<security mode=\u201cTransportCredentialOnly\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<transport clientCredentialType=\u201cBasic\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/security>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/binding>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/basicHttpBinding>"]},{"entry":[{},"<wsHttpBinding>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<binding name=\u201cwsHttpBinding+Windows\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<security mode=\u201cMessage\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/binding>"]},{"entry":[{},"<binding name=\u201cwsHttpBinding+TWMC+HTTPS\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<security mode=\u201cTransportWithMessageCredential\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<message clientCredentialType=\u201cWindows\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/security>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/binding>"]},{"entry":[{},"<binding name=\u201cwsHttpBinding+HTTPS\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<security mode=\u201cTransport\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<transport clientCredentialType=\u201cWindows\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/security>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/binding>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/wsHttpBinding>"]},{"entry":[{},"<webHttpBinding>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<binding name=\u201cwebHttpBinding+Basic\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<security mode=\u201cTransportCredentialOnly\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<transport clientCredentialType=\u201cBasic\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/security>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/binding>"]},{"entry":[{},"<binding name=\u201cwebHttpBinding+Windows\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<security mode=\u201cTransportCredentialOnly\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<transport clientCredentialType=\u201cWindows\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/security>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/binding>"]},{"entry":[{},"<binding name=\u201cwebHttpBinding+Basic+HTTPS\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<security mode=\u201cTransport\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<transport clientCredentialType=\u201cBasic\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/security>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/binding>"]},{"entry":[{},"<binding name=\u201cwebHttpBinding+Windows+HTTPS\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<security mode=\u201cTransport\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<transport clientCredentialType=\u201cWindows\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/security>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/binding>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/webHttpBinding>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/bindings>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/system.serviceModel>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Managed endpoint configuration allows a user to not only specify a static endpoint for a specific business object or a category of business objects, but to also generate an isolated endpoint with its own address. Without the managed endpoint configuration, all generated endpoints would be stored at a single address, e.g., http:\/\/dlx.denallix.com:8000\/Demo, and the location of each business object would be appended to that address. With managed endpoint configuration, a user can specify addresses for certain endpoints, allowing such endpoints to be isolated.","An endpoint may be isolated in at least three ways: when it is stored in a different memory space from other endpoints, when it is located at a different Uniform Resource Identifier (URI) than other endpoints, and when the security bindings are different at the WCF\/REST protocol level.","Isolating endpoints in a different memory space allows implementing a security boundary around critical endpoints, and also allows isolated endpoints to be individually refreshed, or excluded from being refreshed when other endpoints are being refreshed. Isolating endpoints from being refreshed may be useful when the associated object is being frequently modified. Or, a user may only want to refresh a specific endpoint, as may be the case when associated objects are being developed or implemented. In one embodiment, only one endpoint is isolated for dynamic generation.","A second type of isolation made possible by managed endpoint configuration is URI isolation, which allows access of an endpoint to be isolated. For example, a user may be able to host all public endpoints at a common URI, but be able to host certain private endpoints at a different URI. To access these private endpoints, a client device must know the specific URI. Thus, the discovery and access of endpoints can be isolated.","A third type of isolation made possible by managed endpoint configuration is security binding isolation, which allows access of an endpoint to be isolated based on the binding configuration. For example, a user may be able to host all public WCF and REST endpoints using a common security binding for WCF and REST protocols, but be able to host certain private endpoints using a unique security binding configuration for WCF or REST protocols.","In one embodiment, the various levels of configuration settings allow for inheritance of configuration parameters. In one embodiment, services configuration overrides default settings, WCF\/REST configuration overrides services configuration settings (so that a user can configure all the endpoints that match WCF\/REST-type endpoints), and managed endpoint configuration overrides WCF\/REST configuration settings (so that a user can configure individual business objects or categories of business objects). Each subsequent level of configuration\u2014going from service configuration to WCF\/REST configuration to managed endpoint configuration\u2014applies stronger logic that increases conditions on the endpoints as they are being generated.","Table 2 provides an example of exemplary pseudo-code for setting configuration options in one embodiment.",{"@attributes":{"id":"p-0158","num":"0157"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Services"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"enableEndpoints (Boolean) - determine if the K2 SmartObject Services service will be"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"started"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"True - start K2 SmartObject Services and load the configured endpoints"]},{"entry":[{},{},"False (default\/omitted) - do not start K2 SmartObject Services or load any"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"endpoints"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"enableEvents (Boolean) - determines if changes to SmartObjects will be reflected"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"dynamically without restarting K2 Server"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"True (default\/omitted) - when SmartObjects are created\/changed\/deleted the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"service will dynamically reload the AppDomain containing the affected"]},{"entry":[{},"SmartObjects"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"False - when SmartObjects are created\/updated\/deleted the service will not"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"reflect the changes without restarting K2 Server"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"enableCrossDomainPolicy (Boolean) - determines if the service endpoints will have cross"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"domain support"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"True - enable cross-domain support allowing browser-based applications, such"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"as Silverlight, to make calls to the service endpoint from a different domain"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Files - the files that control the level of cross-domain support are"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"crossdomain.xml and clientaccesspolicy.xml. These files can be found"]},{"entry":[{},"and edited in the [Installation Directory]\\Host Server\\Bin\\SmOServices"]},{"entry":[{},"directory."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"NOTE: the server value must be a DNS name or fully qualified machine"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"name for cross-domain support to work properly."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"False (default\/omitted) - disable cross-domain support disallowing browser-based"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"applications, such as Silverlight, to make calls to the service endpoint from a"]},{"entry":[{},"different domain"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"enableMetadata (Boolean) - determine if a Service Metadata Document (aka, WSDL) will"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"be generated for the endpoint via ?wsdl"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"True (default\/omitted) - a Service Metadata Document will be created for the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"endpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"False - a Service Metadata Document will not be created for the endpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"scheme (String, required) - the default scheme (http or https if SSL is enabled) for the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"endpoints."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Default: http"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"server (String, required) - the DNS or fully qualified domain name of the server hosting"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"the endpoints"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Default: {Fully Qualified Machine Name}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"port (String) - the default port for the endpoints"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Default: 8888"]},{"entry":[{},{},"Omitted: 80"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"serviceRoot (String) - the default service root for the endpoints"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Default: SmartObjectServices"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"specialCharacterReplacement (String) - allows administrators to control what character is"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"used in place of disallowed generated characters such as spaces"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Default\/Omitted: "]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"defaultSecurityLabel (String) - sets the default security label to prepend to the user name"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"for basic authentication methods"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Default: K2"]},{"entry":[{},{},"Omitted: no security label will be prepended, the user name must contain the label"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"as well"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"WCF"},{"entry":"The <wcf> section contains the default binding configuration for the"},{"entry":"WCF endpoints and optional WCF specific Service URI components."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"binding (String, required) - sets the default binding type for the WCF endpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Support for basicHttpBinding, wsHttpBinding"]},{"entry":[{},{},"Default: wsHttpBinding"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"bindingConfiguration (String, required) - sets the configuration in the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<system.serviceModel> section which contains the binding details for the endpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Default: wsHttpBinding+Windows"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"bindingConfiguration (String, required) - sets the configuration in the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<system.serviceModel> section which contains the binding details for the endpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"scheme (String) - if present, overrides the default scheme and requires server"]},{"entry":[{},{},"server (String) - if present, overrides the default server and requires scheme"]},{"entry":[{},{},"port (String) - if present, overrides the default port"]},{"entry":[{},{},"serviceRoot (String) - if present, overrides the default service root"]},{"entry":[{},{},"defaultSecurityLabel (String) - if present, overrides the default security label"]},{"entry":[{},{},"individualSmartObjects (Boolean) - if present, will generate an endpoint for each"]},{"entry":[{},{},"individual SmartObject in addition to the endpoint at the category level"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Default: false"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"REST"},{"entry":"The <rest> section contains the default binding configuration for the REST"},{"entry":"endpoints and optional REST specific Service URI components."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"binding (String, required) - sets the default binding type for the REST endpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Support for webHttpBinding"]},{"entry":[{},{},"Default: webHttpBinding"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"bindingConfiguration (String, required) - sets the configuration in the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<system.serviceModel> section which contains the binding details for the endpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Default: webHttpBinding+Windows"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"scheme (String) - if present, overrides the default scheme and requires server"]},{"entry":[{},{},"server (String) - if present, overrides the default server and requires scheme"]},{"entry":[{},{},"port (String) - if present, overrides the default port"]},{"entry":[{},{},"serviceRoot (String) - if present, overrides the default service root"]},{"entry":[{},{},"defaultSecurityLabel (String) - if present, overrides the default security label"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Managed Endpoints"},{"entry":"The category is the default high-level object that is bound to the endpoint via the URI. For"},{"entry":"example, if a category and SmartObject exist at the same level, the endpoint will be bound to the"},{"entry":"category. In addition to the default binding of SmartObjects methods within a category endpoint,"},{"entry":"SmartObjects can be configured to also have their own endpoints (direct URI navigation to the"},{"entry":"SmartObject). In the case where a category and a SmartObject end up having the same endpoint,"},{"entry":"the category will win and be bound to the endpoint and an error will be logged for the collision."},{"entry":"Managing the endpoints allows the administrator to control which categories and SmartObjects"},{"entry":"are available via WCF and REST services. There are two main sections: Excluded and Static."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Excluded means the category path and the SmartObjects in that category are excluded."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Each subcategory is not automatically excluded and will require a separate entry."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Static means the specific category and, depending on the scenario, a specific"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"SmartObject is included."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Excluded"},{"entry":"Configure excluded endpoints to prevent a category or subcategory, and the SmartObject"},{"entry":"methods in that category\/subcategory, from having an endpoint generated."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"all (Boolean, required) - determine if all categories will be excluded"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"True (default) - exclude all categories from endpoint generation. This"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"allows for only static endpoints to be available."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"False - generate endpoints for all categories not explicitly excluded"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"the <endpoints> section contains an <endpoint> for each category path to explicitly"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"exclude"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"categoryPath (String, required) - the path to the category\/subcategory"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Example 1: Exclude the Task Allocation category from endpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"generation. All subcategories would still be included."]},{"entry":[{},"<endpoint categoryPath=\u201cTask Allocation\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Example 2: Exclude the Workflow Reports\/Workflow General subcategory"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"from endpoint generation. The parent category, Workflow Reports, and"]},{"entry":[{},"any subcategories would still be included."]},{"entry":[{},"<endpoint categoryPath=\u201cWorkflow Reports\/Workflow General\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"excludeSubCategories (Boolean, optional) - the path to the category\/subcategory"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"True - exclude the parent category and all subcategories from endpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"generation."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"False (default) - generate endpoints for all subcategories not explicitly"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"excluded"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Example 1: Exclude the Task Allocation category and all its subcategories"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"from endpoint generation."]},{"entry":[{},"<endpoint categoryPath=\u201cTask Allocation\u201d"]},{"entry":[{},"excludeSubCategories=\u201ctrue\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Static"},{"entry":"Configure static endpoints to enable a one-to-one mapping of a SmartObject to an endpoint,"},{"entry":"aliasing of the SmartObject URI, creation of a custom AppDomain, changing of the default binding"},{"entry":"type and selection of a specific SmartObject definition version."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"categoryPath (String) (required) - the path to the category\/subcategory"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Example 1: Including all SmartObjects in a category."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<endpoint categoryPath=\u201cMyCategory\/MyProject\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"When specified without a specific SmartObject name in the smartobjectName"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"attribute or individualSmartObjects=true, then all SmartObjects in this category"]},{"entry":[{},"path will be generated. Additionally, if a category path specified does not exist, it"]},{"entry":[{},"will still be monitored so that when a SmartObject is deployed to this category"]},{"entry":[{},"path at a later stage then the endpoint will be generated."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"smartobjectName (String, optional) - the name of the specific SmartObject"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"specified - when specified, the SmartObject will get an endpoint generated"]},{"entry":[{},{},"missing - when not specified, all SmartObjects present in the category path"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"specified will be generated"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"alias (String, optional) - the new path to be used for navigating to the endpoint for this"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SmartObject or Category. NOTE: path search will use the display name while the binding"]},{"entry":[{},"that is generated will still use system name."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"If there is a collision with an existing Category or SmartObject, then the last one"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"will win. For example, if you configure two static endpoints with exactly the same"]},{"entry":[{},"alias, the second one in the list will overwrite the first and there will only be one"]},{"entry":[{},"endpoint."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Example: alias=\u201cMySmartObjectAlias\u201d will generate a SmartObject endpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"binding at http:\/\/api.denallix.com:8888\/SmartObjectServices\/MySmartObject"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"isolationLevel (String, optional) - used to specify the AppDomain the endpoint should use"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"shared (default\/omitted) - by default all endpoints will utilize a single AppDomain."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Not setting isolationLevel or specifying isolationLevel=\u201cshared\u201d has the same"]},{"entry":[{},"effect which is to utilize the AppDomain of the service."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"single - setting the isolationLevel=\u201csingle\u201d will ensure that the endpoint for this"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SmartObject has its own AppDomain allowing for isolation from all other"]},{"entry":[{},"endpoints. This is useful when the SmartObject is changing often as the reload of"]},{"entry":[{},"the endpoint will not affect other endpoints"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"smartobjectVersion (String, optional) - used to specify a specific version of the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SmartObject definition to bind to the endpoint. The latest version of the SmartObject"]},{"entry":[{},"definition will be bound by default."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Example: 5"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"The <wcf> or <rest> section, if present, overrides the WCF and\/or REST configuration for"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"the service for this static endpoint."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"binding (String) - if present, overrides the default binding type configured for the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"WCF or REST service"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Support for basicHttpBinding, wsHttpBinding, webHttpBinding"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"bindingConfiguration (String) - if present, overrides the default binding"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"configuration for the WCF\/REST service"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"scheme (String) - if present, overrides the default scheme and requires server"]},{"entry":[{},{},"server (String) - if present, overrides the default server and requires scheme"]},{"entry":[{},{},"port (String) - if present, overrides the default port"]},{"entry":[{},{},"serviceRoot (String) - if present, overrides the default service root"]},{"entry":[{},{},"defaultSecurityLabel (String) - if present, overrides the default security label"]},{"entry":[{},{},"individualSmartObjects (Boolean) - if present, will generate an endpoint for each"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"individual SmartObject in addition to the endpoint at the category level"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Default: false"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Table 3 illustrates an example of using the endpoint configuration options, where WCF endpoints inherit a default service level configuration, REST endpoints override the default service level configuration, and managed endpoints also override the default service level configuration.",{"@attributes":{"id":"p-0160","num":"0159"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"322pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<smoServices enableEndpoints=\u201ctrue\u201d enableEvents=\u201ctrue\u201d enableCrossDomainPolicy=\u201cfalse\u201d"},{"entry":"enableMetadata=\u201ctrue\u201d scheme=\u201chttp\u201d server=\u201capi.denallix.com\u201d port=\u201c8888\u201d"},{"entry":"serviceRoot=\u201cSmartObjectServices\u201d specialCharacterReplacement=\u201c_\u201d"},{"entry":"defaultSecurityLabel=\u201cK2\u201d>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"308pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<wcf binding=\u201cbasicHttpBinding+Basic\u201d bindingConfiguration=\u201cwsHttpBinding+Basic\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"322pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"defaultSecurityLabel=\u201cK2SQL\u201d \/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"308pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rest binding=\u201cwebHttpBinding\u201d bindingConfiguration=\u201cwebHttpBinding+Windows+HTTPS\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"322pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"scheme=\u201chttps\u201d server=\u201capi.denallix.com\u201d port=\u201c8890\u201d serviceRoot=\u201cSmartObjectServices\u201d \/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"308pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<managedEndpoints>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<excluded all=\u201cfalse\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<endpoints>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<endpoint categoryPath=\u201cTask Allocation\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"322pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"excludeSubCategories=\u201ctrue\u201d\/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<endpoint categoryPath=\u201cWorkflow Reports\/Workflow General\u201d\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/endpoints>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/excluded>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<static>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<endpoints>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<endpoint categoryPath=\u201cK2 Examples\/Employee\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<rest binding=\u201cwebHttpBinding\u201d bindingConfiguration=\u201cwebHttpBinding+Windows\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"322pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"scheme=\u201chttp\u201d server=\u201cdenallix.denallix.com\u201d port=\u201c8889\u201d serviceRoot=\u201cSmartObjects\u201d"},{"entry":"defaultSecurityLabel=\u201cK2SQL\u201d\/>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/endpoint>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/endpoints>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/static>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"308pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/managedEndpoints>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"322pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/smoServices>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In one embodiment, the dynamic endpoint generator automatically generates an endpoint for a business object as soon as the business object is created. The dynamic endpoint generator loads a definition of the business object and iterates through the definition. The business object definition may include properties and methods. The object definition is mapped to each type of endpoint that is supported, such as WCF or REST, properties are mapped to data contracts, and methods are mapped to operation contracts. The methods may have signatures that describe the method. For example, method signatures may define a minimum set of information needed for a method to function properly, such as the input and output data types of a method.","The dynamic endpoint generator ensures that the signatures for the business object methods contain inputs and outputs supported by each type of endpoint. If not, the dynamic endpoint generator creates such signatures for each business object method.",{"@attributes":{"id":"p-0163","num":"0162"},"figref":"FIGS. 24 to 27"},{"@attributes":{"id":"p-0164","num":"0163"},"figref":"FIG. 24","b":["2402","2404","2406","2408","2410","2412","2414","1810"]},{"@attributes":{"id":"p-0165","num":"0164"},"figref":"FIG. 25","b":["2500","2500"]},{"@attributes":{"id":"p-0166","num":"0165"},"figref":["FIG. 26","FIG. 27","FIG. 27"],"b":["2602","2604","2404","2404","1810","1902","1810","2702","2704","2706","2404","1810","1810"]},{"@attributes":{"id":"p-0167","num":"0166"},"figref":"FIG. 28","b":["2800","2802","2804","2806"]},"In one embodiment, the client  subscribes to a service associated with the Products business object  before it can consume the Products business object .  is a screenshot of an example of the client  adding a service reference .",{"@attributes":{"id":"p-0169","num":"0168"},"figref":"FIG. 30","b":["2800","1810","2404","2800","2406","2408","2410","2412","2414","1810","2800","3002"]},"In , once the client  adds the service ProductsSvc  at endpoint \u201chttp:\/\/dlx.denallix.com:8000\/Demo\u201d , the client  can use all the operations ProductsSvc_Create , ProductsSvc_Save , ProductsSvc_Delete , ProductsSvc_Load , and ProductsSvc_GetList  that are associated with the Products business object .",{"@attributes":{"id":"p-0171","num":"0170"},"figref":"FIG. 31","b":["2604","3102"]},{"@attributes":{"id":"p-0172","num":"0171"},"figref":"FIG. 32","b":["2604","3202","1902"]},{"@attributes":{"id":"p-0173","num":"0172"},"figref":["FIGS. 33 to 35","FIG. 33","FIG. 34"],"b":["3302","1810","3304","3306"]},{"@attributes":{"id":"p-0174","num":"0173"},"figref":["FIG. 34","FIG. 35"],"b":["3302","3304","3302","1810","3502","3304","3302","3502","3302","3502"]},{"@attributes":{"id":"p-0175","num":"0174"},"figref":["FIGS. 36 to 39","FIG. 36"],"b":["2414","2414","1810","2414","3302"]},{"@attributes":{"id":"p-0176","num":"0175"},"figref":["FIG. 37","FIG. 37"],"b":["1810","2406","3502"]},{"@attributes":{"id":"p-0177","num":"0176"},"figref":["FIG. 38","FIG. 38"],"b":["2414","3502","2414","3302","3502"]},{"@attributes":{"id":"p-0178","num":"0177"},"figref":["FIG. 39","FIG. 39"],"b":["2414","2414"]},"In an embodiment, any business resource may be made available to a client through a dynamic endpoint. For example, business objects, processes or worklists may be exposed through a dynamic endpoint.","Using the disclosed systems, developers have platform free, instant dynamic access to any business object. In one embodiment, standardized backend systems such as SAP, Siebel, Oracle DB, Oracle EBS, and SQL are exposed through the dynamic endpoint. In an embodiment, proprietary backend systems may be exposed, for example, by using adapters. Adapters make it easier to expose objects that are stored on proprietary systems.","In summary, persons of ordinary skill in the art will readily appreciate that methods and apparatus for dynamically generating, discovering, accessing and consuming business objects have been disclosed. The foregoing description has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the exemplary embodiments disclosed. Many modifications and variations are possible in light of the above teachings. It is intended that the scope of the invention be limited not by this detailed description of examples, but rather by the claims appended hereto."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 39"}]},"DETDESC":[{},{}]}
