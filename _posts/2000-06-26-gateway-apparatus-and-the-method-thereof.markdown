---
title: Gateway apparatus and the method thereof
abstract: A gateway realizes a connection between a network where HAVi devices are hooked up and another network in accordance with a Play-and-Plug spec. (e.g. the internet protocol (IP)) other than the HAVi spec. An HAVi plug-in detector detects a plug-in of a device to the HAVi network. A virtual device functions as a gateway for accessing from a device plugged-in the IP network to the device plugged-in the HAVi network. A virtual device controller provides the virtual device with an IP identifier for accessing to the virtual device from the IP network, and turns the virtual device to a standby status waiting for connection. A pseudo address generator generates a pseudo address for the virtual device to communicate with the device in the HAVi network, and provides the virtual device with the pseudo address. An address-correspondence-controller controls the correspondence between an HAVi address and the IP identifier both provided to the virtual device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06963925&OS=06963925&RS=06963925
owner: Matsushita Electric Industrial Co., Ltd.
number: 06963925
owner_city: Osaka
owner_country: JP
publication_date: 20000626
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The present invention relates to a gateway (GW) device which realizes communications between a plurality of electronic devices hooked up to a network (HAVi network)\u2014the devices being in accordance with the specification of the Home Audio\/Video (HAVi) architecture\u2014and other devices hooked up to another network, e.g. the internet. The present invention also relates to a method of the gateway.","HAVi is a middle ware\u2014a software disposed between an application and an OS\u2014and allows home-use audio\/video devices (AV devices) to be controlled. The controlling targets of HAVi are the audio\/video devices in accordance with IEEE 1394. The HAVi specification has disclosed an inter-operation by linking AV devices with each other as well as a Plug-and-Play function that allows users to operate AV devices just by hooking up the devices to the HAVi network.","The HAVi specification in detail is introduced in the HAVi Specification-Specification of the Home Audio Video Interoperability (HAVi) Architecture, Version 1.0 beta, available from HAVi, Inc. of San Ramon, Calif., USA. Meanwhile, various network-services in accordance with the internet protocol (IP) are available outside the homes, and an art realizing the Plug-and-Play among the devices hooked up to the internet has been already disclosed.","In order to realize a communication between the device on HAVi network and the device on the internet, the following problems should be overcome.","1. A gateway (GW) apparatus accommodating differences in physical specifications and network protocols is required. Because in these two factors, the HAVi devices following the communication protocol of HAVi specification and the devices (IP devices) on the internet following the internet protocol (IP) differ with each other.","To realize the \u201cPlug-and-Play\u201d, in particular, between the HAVi devices and the IP devices, the following two problems, i.e. items 2 and 3, should be overcome.","2. In order to manipulate a device plugged in the IP network (second network) from the HAVi network (first network), a user should firstly be informed that the device in the IP network is plugged in. Next, a target address such as a Uniform Resource Locator (URL) and an appropriate communication protocol should be obtained. Then the user accesses to the IP device following a process required.","3. When a user wants to manipulate the HAVi device from the IP network, the user should firstly be informed that the HAVi device is plugged in. Next, the user should obtain a target address for accessing to the HAVi device and a connecting process.","4. A stream transfer of audio and video information is assumed in the HAVi specification, and the transfer is limited within the HAVi network. A method of transferring stream information between IP devices and HAVi devices is required.","5. The HAVi specification provides the users with a graphical user interface (GUI) for improving operability of the HAVi devices. Therefore, a method of utilizing the GUI from the outside of the HAVi network is required.","6. When a GW function is prepared for overcoming the first problem discussed above, the information available in a GW apparatus may be not enough for creating a reciprocal-conversion protocol between the HAVi network and another network.","The present invention addresses the problems discussed above and aims to provide a gateway (GW) apparatus and a GW method for allowing the HAVi devices and devices hooked up to another network, e.g. the internet, to communicate with each other.","The GW apparatus of the present invention comprises the following elements:\n\n","The structure discussed above allows the communication between the devices hooked up to the first and second networks.","Exemplary Embodiment 1","A gateway (GW) apparatus in accordance with the first exemplary embodiment of the present invention is hereinafter demonstrated with reference to the accompanying drawings. All the descriptions in this embodiment are in accordance with the specification of HAVi 1.0 beta; however, the present invention is not limited to an edition of HAVi.","In , HAVi devices  include AV devices such as a digital television receiver (DTV), a video tape recorder (VTR) and the like. The AV devices are in accordance with the HAVi specification, and are connected to HAVi network (first network) . GW apparatus  is disposed between the IP network (second network)  and the HAVi network , and functions to allow the devices hooked up to the first and second networks to communicate with each other. GW apparatus is also equipped with a function corresponding to Full AV device (FAV) specified by the HAVi specification. The IP devices , i.e. the devices hooked up to the second network, include a network printer and other network devices.","HAVi plug-in detector  monitors an event broadcast to the HAVi network. When detector  detects a plug-in of an HAVi device, the detector informs virtual-device-controller  of the detection. Controller  prepares an address which allows the GW function using a virtual device to be valid, and makes the virtual device be on standby.","Pseudo address generator  generates addresses of the HAVi devices and IP devices for network entities to communicate with the virtual device. Address correspondence controller  controls the connections between the HAVi devices and IP devices as well as the correspondences of pseudo addresses supplied to respective devices. HAVi message input\/output means  (first message input\/output means) functions as an interface between the GW apparatus and the HAVi devices.","Virtual device  functions as a GW converting a communication protocol, thereby manipulating either the HAVi devices from the IP network or the IP devices from the HAVi network. IP netwok input\/output means  (second network input\/output means) functions as an interface between the virtual device and the IP network.","The following description is referred to FIG. . Connection controller  controls the correspondences between the devices communicating over the GW. Command converter  converts commands supplied from the HAVi network and IP network into commands the targets can comprehend. The corresponding commands which command converter  refers to are controlled by command-correspondence-controller . The corresponding information to the commands may be controlled as a database stored outside the virtual device. If the corresponding information has been standardized in advance, general-purpose devices can be used as the virtual devices. Address converter  converts a target address and a source address, so that a message the GW receives can be transferred to another network. Interface  functions as an interface between the GW apparatus and IP network input\/output means . Interface  functions as an interface between the GW apparatus and HAVi network input\/output means .","An address structure of HAVi is described with reference to FIG. . HAVi address  comprises the following elements:","identifier (ID)  assigned to respective HAVi devices; and","ID  assigned for distinguishing HAVi software elements in the devices, and ID  is thus called a software element ID (SEID). The HAVi software element communicates with other software elements using the SEID. ID  assigned to an HAVi device is called a global unique ID (GUID) and is a 64-bit identifier specified by the global identifier (EU164) defined by IEEE. A Sw-Handle assigned for distinguishing a software element in a device is a 16-bit identifier. The SEID thus forms an 80-bit stream. In this first embodiment, the SEID of a combined GUID with Sw-Handle is described \u201cGUID-Sw-Handle\u201d in order to avoid a long description.","In a command-corresponding table of , HAVi command  corresponds to internet service command  on the same line. This information may be stored in an independent database, and this correspondence may be programmed.","In the table shown in FIG. \u2014the table controlling the address-correspondence between the HAVi and the internet\u2014column  stores a connection between the GW apparatus and IP devices communicating with the virtual HAVi device. The connection of column  on the same line indicates a corresponding address (SEID) of the HAVi side. Further, the same line of column  indicates an access identifier to the internet. In this example, it is assumed that the HAVi GUID of the GW apparatus is \u201c10\u201d and an identifier on the IP side is \u201c192.0.0.1\u201d.",{"@attributes":{"id":"p-0058","num":"0064"},"figref":"FIG. 6","b":["1","5"]},"Based on the flowchart in , an operation of the GW apparatus when an HAVi device is plugged in the HAVi network is demonstrated with reference to .","The HAVi device plugged in the HAVi network broadcasts the plug-in to the HAVi network and an event noticeable to the other HAVi devices, e.g. a new software element in HAVi 1.0 beta.","Plug-in detector  monitors this event, and when detector  detects the plug-in event, the detector obtains the HAVi address (SEID) of the plug-in device, the address being additional information to the event (step ).","After obtaining the SEID, the detector searches an HAVi registry with a key of SEID (step ).","The detector then obtains information attributive to the plugged-in device such as a type of device, a device ID, a maker ID (step ).","Virtual device controller  prepares virtual device  appropriate to a GW for accessing to the plug-in device from the IP network, then makes device  being on standby (step ).","The following methods are available for preparing the virtual device:","1. Select an appropriate device from GW programs prepared for various devices in advance.","2. Produce a virtual device dynamically based on the device information.","3. Inform a general-purpose GW program of the information about the plugged-in device, thereby operating the program appropriately.",{"@attributes":{"id":"p-0069","num":"0075"},"figref":"FIG. 2","b":"111"},"Virtual device controller  provides virtual device  with an identifier, i.e. an IP address, to start receiving an access from the IP side upon virtual device  turning to a standby status (step ).","Then, the identifier is registered to address-correspondence-table  (step ).","The GW apparatus is on standby waiting for a connection from the IP device (step ).","The steps discussed above describe an operation-stream shown in FIG. .","An operation of GW after the GW apparatus received a connection request from the IP device is described based on the flowchart of  with reference to FIG.  through FIG. .","When an access requirement is sent from the IP side (step ), virtual device controller  requests pseudo-address-generator  to generate a virtual HAVi address in order to reply from the HAVi side via the GW to the requirement from the IP client.","The HAVi address comprises a Global Unique ID (GUID) and a Software Handle (SwHandle) as shown in FIG. . The GUID is to distinguish all the HAVi devices uniquely, and the SwHandle is an identifier for distinguishing the software element in an identical HAVi device from other software elements. The SwHandle is controlled in each HAVi device independently. This address system requires a pseudo address of the virtual device receiving the reply as a representative of the IP clients to be embodied the GUID as an HAVi compatible device of the GW apparatus including virtual device .","Therefore, pseudo-address-generator  obtains the GUID of the GW apparatus (step ), and calculates and provides a SwHandle so that the HAVi address in the device is unique to the device (step ).","Here, the SwHandle is calculated as follows:","1) Acquire pseudo addresses already used from the Address correspondence controller.","2) Then take the last 16 bit from each pseudo address acquired. They are SW-Handles already used.","3) Select the smallest positive integer excluding \u201cSW-Handle\u201ds reserved for HAVi system components and SW-Handles took out in 2) above.","4) HAVi pseudo address is generated by putting a device's own GUID on the first 64 bit and the \u201cSW-Handle\u201d on the last 16 bit selected in 3) above in HAVi address format as shown in FIG. .","This newly generated HAVi address is supplied to virtual device controller . In the same manner as shown in the address-corresponding-talbe in , controller  registers a combination of HAVi address , address  for accessing from the IP side, and a pair of the target devices  (HAVi device and an IP client) on address-corresponding-means  (step ).","In this embodiment, the HAVi address is supplied to the virtual device at the access from the IP side; however, the address can be assigned to the device prior to the access from the IP side.","In an example shown in , the GUID of GW is assumed \u201c10\u201d, the IP address is assumed \u201c192. 0.0.1\u201d, and the HAVi device accessed by an IP client is assumed a VTR. In the GW apparatus, a plurality of virtual devices may sometimes wait for connections, therefore, a port ID number of the virtual VTR device is set at \u201c8080\u201d for distinguishing the present connections from possible connections. However, the connections are not necessarily controlled by a set of an IP address and a port number.","The virtual device obtains a message from the IP side after registering a correspondence between a connection and an address (step ).","The virtual device converts the HAVi command corresponding to a command called from the IP side into HAVi command referring to the command-corresponding-table shown in  (step ).","For instance, when an IP client calls a command of RPCPlay( ), the virtual device calls an HAVi command of VTR::Play( ) corresponding thereto.","When completing the command conversion, the virtual device drafts an HAVi message whose source HAVi address is the pseudo address assigned to the virtual device, and whose target is the HAVi address of the VTR to communicate with. Then the virtual device sends the message to the target HAVi device  using HAVi message input\/output means  (step ).","Device  (VTR) performs a designated operation upon receiving the message, and sends a reply-message to the virtual device of the GW if necessary.","The communication is forwarded in the same manner until the connection is discontinued (step -step ).","When either one of the HAVi devices or IP devices requires the connection be discontinued, the virtual device realizes the requirement (step ) and closes the connections on the HAVi side and IP side respectively (step ).","At the same time, address-correspondence-controller  deletes the entry from the address-correspondence-control-table (step ).","Finally, the virtual device returns to the standby status if other connections to be dealt with do not exist.","In this first embodiment, the access from the IP network to the HAVi device is demonstrated; however, the access in the reverse order can be done in the same manner.","The GW apparatus in accordance with the first exemplary embodiment allows the IP devices and HAVi devices to communicate with each other.","Exemplary Embodiment 2","The second exemplary embodiment of the present invention is demonstrated with reference to FIG. -FIG. .","In GW apparatus  shown in , IP plug-in detector  obtains plug-in information of IP devices supplied from IP directory , and requests virtual device controller  to start an operation described below. Controller  has the following additional function to controller  described in the first embodiment.","The operation requested to controller  is this: Upon receiving a notice from detector , the virtual device requests HAVi registry registering means  to register a newly added IP device to HAVi registry  so that the newly added IP device can be recognized from the HAVi network.","HAVi registry  supplies device-directory within the HAVi network corresponding to the registry in the HAVi specification. Registry  also realizes a search with an HAVi address (SEID) and the information attributive to devices such as a type of devices, a maker, available functions, a nickname by a user. For instance, search the HAVi registry for a digital TV and the SEID of the digital TV hooked up to the HAVi network. The communication can be then started with this SEID.","IP directory  supplies interface information on the IP network for searching services and for utilizing the services.","The IP directory is not always controlled by one specific device intensively, but it may be controlled in the following manner.","1. Each device broadcasts its own plug-in information within the network.","2. When a device is searched, the device corresponding to the plug-in information replies.","Other elements including HAVi device , HAVi network , GW apparatus , IP network , IP device , address-correspondence-controller , psseudo-address-generator , HAVi message input\/output means , virtual device  and. IP network  function in the same manner as those in the first embodiment.",{"@attributes":{"id":"p-0106","num":"0112"},"figref":"FIG. 13"},"An operation of GW apparatus  is demonstrated based on the flowcharts shown in  with reference to , FIG.  and FIG. . First, an operation of IP plug-in detector is demonstrated hereinafter with reference to FIG. .","IP plug-in detector  requests IP directory \u2014functioning as a directory server for searching services on the IP side\u2014to notify an event about plug-in and plug-out of an IP device (step ). Necessity of requesting a notice depends on he specification of Plug-and-Play.","After the request, detector  turns to standby status waiting for a notice (step ).","IP device  requests IP directory  to plug-in using a protocol for plug-in the IP directory, and registers necessary data such as device data, interface data and a service identification.","IP directory  determines whether or not the notified content meets the IP device , and notifies detector  of the plug-in event when directory  determines the event notice is necessary (step ).","In this second embodiment, a network printer is taken as an example and is plugged in IP network .","IP plug-in detector  analyzes the notice and determines the content (step ).","When the notice introduces a plug-in of a new service, detector  detects that the network printer has been plugged-in according to information additional to the event notice (step ).","Further, detector  requests virtual device controller  to prepare a virtual device which is supposed to provide a plugged-in device with a GW process (step ).","In this second embodiment, information about a type of a plugged-in device is obtained from additional information to the event notice; however, the HAVi devices can request for searching a registry, thereby triggering the IP side to search the registry for the directory information.","An operation of controller  when a new IP device is plugged in is demonstrated with reference to FIG. ().","Upon receiving a request from detector , virtual device controller  inquires of IP directory  to obtain the interface information of the plugged-in device (step ).","The interface information can be obtained when a HAVi device searches for IP devices, or when the HAVi device receives a connection request via the GW apparatus.","The interface information includes device-dependent-information for controlling the device, i.e. the information written by script languages such as Hyper Text Makeup Language (HTML), Extensible Makeup Language (XML), or JAVAScript (Java and JavaScript are trademarks of Sun Microsystems, Inc.), programs supplying a user interface, and application programming interface (API) of device-control-method.","Virtual device controller  prepares virtual device  appropriate as GW based on the device information obtained as discussed above (step ).","The virtual device can be also prepared in this way: If a standard is available for inter-operations of HAVi devices and the like in different Plug-and-Play specifications, the virtual devices according to this standard for the inter-operations could be prepared, and then appropriate devices could be selected responsive to a type of devices.","For instance, when a network printer is plugged in the IP side, a virtual device of network printer according to the inter-operation standard is selected. This inter-operations standard allows the network printer according to Jini spec. (Jini is the trademark of Sun Microsystems, Inc.) to be manipulated from the HAVi side.","Controller  obtains the HAVi address of the virtual device, i.e. SEID and HAVi Unique ID (HUID), using pseudo-address-generator  (step ). This is the same step as the one in the first embodiment.","The HAVi address obtained, i.e. SEID and HUID, are registered together with additional data of the devices to HAVi registry  (step ).","The HUID functions as an identifier of an eternal Software Element being not subjected to the influence from a network reset.","Next, HAVi registry  broadcasts a NewSoftwareElement global event which notifies the HAVi network of a newly plugged-in virtual HAVi device. This broadcasting saves the HAVi network a process of obtaining an IP address for manipulating a newly plugged-in IP devices.","Virtual device controller  registers a set of the HAVi address already supplied and ID information on the IP side to the address-correspondence-table via address-correspondence-controller  described in the first embodiment, then turns the virtual device to the standby status (step ).",{"@attributes":{"id":"p-0129","num":"0135"},"figref":["FIG. 12","FIG. 13"]},"Upon receiving a command from the HAVi device, e.g. an output from an image printer, the virtual device converts the command and then sends the converted command to the IP network via IP network input\/output means.","An operation at plugging-out an IP device is demonstrated with reference to the flowcharts shown in .","When the event notice on step  indicates a service-out, detector  requests controller  to carry out the service-out.","As illustrated in the flowchart in , the virtual device controller searches the service-correspondence-table shown in  (step ). Then the controller determines whether or not the service-out is still plugged-in (step ), and when the service is still plugged-in, the controller deletes the entry from the address-correspondence-table (step ). The controller also deletes the entry of HAVi registry  (step ), and stops the virtual device (step ). Then the controller broadcasts the GoneSoftwareElement global event which notifies the HAVi network of going out of SoftwareElement, thereby notifying the HAVi network of going out of the IP device (step ).","When the IP service is gone out (a device is removed from the network in this embodiment) through these steps, GW apparatus  follows this result and is deleted from the HAVi registry, thereby avoiding a mismatch.","The GW apparatus in accordance with the second embodiment as discussed above allows the HAVi devices to detect a device newly plugged-in the IP network as well as to obtain the interface information via the HAVi registry.","Exemplary Embodiment 3","A gateway (GW) apparatus of the present invention in accordance with another exemplary embodiment is demonstrated with reference to .",{"@attributes":{"id":"p-0137","num":"0143"},"figref":"FIG. 14","b":["1406","1407","1407","907","1407","1407","1414","1415","1415","1413","1401","1402","1403","1404","1405","1409","1408","1410","1411","1412"]},"Based on the flowcharts shown in , an operation of the GW apparatus of the present invention is demonstrated with reference to , FIG.  and FIG. .","First, an operation of HAVi plug-in detector  is demonstrated with reference to FIG. .","Detector  requests an event controller of HAVi middle wear to monitor and notify an event to be broadcast to the HAVi network (step ).","In the HAVi specification, if an event is registered to EventManager of HAVi System Software Element which controls an input\/output of HAVi events, the HAVi middle wear monitors a message travelling through the network, and notifies the SoftwearElement (the HAVi plug-in detector in this embodiment) of the target event when it is broadcast.","After the request, detector  is turned to a standby status waiting for a notice (step ).","Upon being plugged-in, HAVi device  registers its own information to \u201cRegistry\u201d\u2014a database of directory information of a device to be a host\u2014as specified in the HAVi specification. The Registry broadcasts an event (NewSoftwareElement global event) all over the network to notify a new plug-in.","As described previously, detector  obtains the event (NewSoftwareElement event) notifying the new plug-in via the HAVi middle wear (step ).","In this embodiment, a video-tape-recorder (VTR) is plugged-in to HAVi network , for instance. Detector  obtains information of a plug-in of the VTR from additional information of the notified event (step ).","Detector , further, requests virtual-device-controller  to prepare a virtual device in order to provide the plugged-in device with a GW process (step ).","Next, an operation of controller  when an HAVi device is newly plugged-in is demonstrated with reference to FIG. .","Upon receiving the request from detector , controller  inquires HAVi registry  to obtain the information about the plugged-in device such as a type of the device, HUID, a maker and the like. This information is not be always obtained at the same time as the plug-in.","Based on the device information obtained, controller  prepares virtual device  appropriate to the GW (step ).","The virtual device can be also prepared in this way: If a standard is available for inter-operations of HAVi and Jini, the virtual devices according to this standard for the inter-operations could be prepared, and then appropriate devices could be selected responsive to a type of devices.","For instance, when a VTR is plugged in the HAVi side, a virtual device of VTR according to the inter-operation standard is selected. This interoperations standard allows the VTR to be manipulated from the IP side.","Controller  obtains an identifier, e.g. an IP address, a port number of the virtual device using pseudo-address-generator  (step ). This is the same step as the one in the first embodiment.","Controller  generates interface information using the IP identifier obtained and additional information about the device (step ).","The interface information includes device-dependent-information for controlling the device, i.e. the information written by script languages such as Hyper Text Makeup Language (HTML), Extensible Makeup Language (XML), or JavaScript (Java and JavaScript are trademarks of Sun Microsystems, Inc.), programs including a user interface such as Java applet, and objects including application programming interface (API) of device-control-method.","Next, virtual-device-controller  registers the interface information previously generated to IP directory  following a protocol specified in respective Plug-and-Play specifications (step ).","As a result, the IP network can manipulate a newly plug-in HAVi device without searching for an access identifier or an access method.","Virtual device controller  registers a set of the HAVi address already supplied and ID information on the IP side to the address-correspondence-table via address-correspondence-controller  described in the first embodiment, then turns the virtual device to the standby status (step ).","As shown in , controller  controls the correspondence between the identifier of a service on the internet (the VTR in this embodiment) and an identifier to be viewed from the IP side. The VTR's identifier has been obtained on step . The identifier to be viewed from the internet side is specified in the specifications of respective Plug-and-Play.","Upon receiving a command (e.g. Record a program with the VTR.) from an IP device, the virtual device converts the command as same as in the first embodiment, and sends the converted command to the HAVi network via the HAVi network input\/output means.","An operation at plugging-out an HAVi device is demonstrated with reference to the flowcharts shown in .","When the event notice on step  indicates a service-out (GoneSoftwareElement global event in the HAVi specification), HAVi plug-in detector  requests controller  to delete the service. Controller  searches HAVi registry  with a key of HAVi address (SEID)-additional information to the event, thereby obtaining HUIDs of the remained devices. Next, controller  searches the service-correspondence-control-table shown in  (step ) following the steps shown in , then determines whether or not the service-out is still plugged-in (step ).","Controller  deletes the entry from the address-correspondence-table and service-correspondence-table via address-correspondence-controller  (step  and step ).","Controller  also notifies IP directory  of the service-out (step ), then stops the virtual device (step ).","When the HAVi service is out (a device is removed from the network in this embodiment) through these steps, the service is deleted also from the IP directory, so that the service-out can be recognized from the IP network.","The GW apparatus in accordance with the third embodiment as discussed above allows the IP devices to detect a device newly plugged-in the HAVi network as well as to obtain the interface information via the IP registry.","Exemplary Embodiment 4","A gateway (GW) apparatus in accordance with the fourth embodiment is demonstrated hereinafter with reference to FIG.  through FIG. .",{"@attributes":{"id":"p-0167","num":"0173"},"figref":"FIG. 17"},"HAVi stream controller  allows HAVi devices in compliance with the HAVi spec. to carry out a stream-transfer among the devices. Virtual device  has additional functions to those described in the first embodiment, i.e. (1) establishing a connection to the IP devices, and (2) keeps a band when necessary. Stream-port-correspondence-controller  controls the correspondence between HAVi Functional Component Module Plug (FCM Plug)\u2014a control unit of stream in compliance with the HAVi spec. on the GW apparatus\u2014and IP stream ports. Stream-packet-converter  converts HAVi-stream-packet to IP-stream-packet and vice versa, then sends out them. Other elements function as same as those described in the first through third embodiments.",{"@attributes":{"id":"p-0169","num":"0175"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0170","num":"0176"},"figref":"FIG. 19","b":"18"},"In , stream-port-correspondence-table \u2014indicating the correspondence between the stream ports\u2014includes, e.g. an ID  of HAVi FCM (HAVi Unique ID) which can handle the stream, FCM flag No.  of HAVi stream includes Plug control Register (PCR)NO.  specified by IEC 61833 and IP port No.  for producing a stream connection on the IP side.","Based on the sequence shown in , a process of producing the stream connection between the HAVi device and IP device is described with reference to FIG.  and FIG. .","When IP device  capable of receiving videos is plugged-in, the device is registered in HAVi registry  of GW apparatus  together with in IP directory . At this moment, the GW apparatus collects and stores the following device-information:","(1) Is this device capable of handling a stream?","(2) What kind of data-rate does this device handle?","Next, based on the sequence shown in , the process that the HAVi device sends a stream to the plugged-in IP device is demonstrated with reference to FIG.  and FIG. .","HAVi device  searches the HAVi registry for video-receivable devices (step ).","Since IP device  has been registered as a video-receivable device, GW apparatus  returns the SEID\u2014the HAVi address of virtual device \u2014to the HAVi device (step ).","The HAVi device starts a negotiation for producing a stream following the steps specified by the HAVi spec. The HAVi spec. specifies to make the following inquiries as a pre-process to the producing of stream connection (step ):\n\n","The virtual device of GW apparatus  in this embodiment acts for the IP device, therefore, the virtual device inquiries an actual status of the network and holds the band necessary for transmission between the GW apparatus and the IP device (step ).","Next, the virtual device detects a physically vacant plug in the GW apparatus per se, and registers it in a plug-control-table using stream-port-controller  (step ).","In the plug-control-table, following items are recorded as shwon In FIG. : HUID of the virtual device, FCM plug No. which is used as an identifier for stream transmittance\/receipt used in a protocol, a physical Plug Control Register's (PCR) No. specified by IEC 61883, and a port No. used on the IP side.","After these processes, the GW apparatus replies to the HAVi device inquiring about the stream production via HAVi-stream-controller  (step ).","When the stream is ready for transmission, the HAVi device instructs the HAVi middle wear to transmit the stream. At this time, an event notice (ConnectionAdded global event) of the stream transmission is sent out (step ).","When the stream arrives at the GW apparatus, an IEC 61883 packet is converted to an IP packet for transmitting thereof to the IP device. For instance, a DV format is converted to MPEG appropriate data-format on the IP if necessary. The GW apparatus sends the converted stream to the IP device.","In this embodiment, the stream-transfer from the HAVi device to the IP device is described. The transfer on the other way around can be achieved in the same manner.","Based on the sequence shown in , an operation of cutting the stream-connection is demonstrated with reference to FIG.  and FIG. .","When the HAVi device issues an instruction of cutting the stream, the HAVi middle wear sends an event notice (Connection Dropped) of stream-stop to the HAVi network. Stream controller  of GW apparatus  detects this event and searches HUID of the source of additional information to the event for the plug-control-table shown in  to find the connection cut (step ).","The GW apparatus specifies the IP connection to be cut from the table, and carries out the cut-process (step ).","The entry having been cut out is detected from the plug-control-table (step ).","In this embodiment, the cut process of the stream-connection carried out by the HAVi device is described. The cut process by the IP device can be done in the same manner.","The GW apparatus of the present invention realizes the stream-transfer between the HAVi device and IP device.","Exemplary Embodiment 5","A gateway (GW) apparatus in accordance with the fifth exemplary embodiment is demonstrated with reference to Fig. FIG. -FIG. .",{"@attributes":{"id":"p-0194","num":"0202"},"figref":"FIG. 21"},"Data Driven Interaction (DDI) data acquirer  carries out a communication using an HAVi device supplying DDI function, and DDI protocol, so that acquirer  collects and stores information necessary for forming a GUI which manipulates the HAVi device. User interface (UI) generator  converts the DDI information to the GUI format (such as HTML, Java applet) which is used in general on the internet. UI generator  has information of correspondence between DDI Element\u2014elements of HAVi GUI\u2014and components (Java Abstract Window Toolkit (AWT)) of GUI used in general on the internet. UI provider  accepts a request of a communication application (WWW browser, etc.) from client-IP-device  on the internet, and transmits the converted GUI to client-IP-device . Virtual device  has the following additional functions to those described in the first embodiment: Device  accepts a request from IP device  via the GUI, and communicates to the HAVi device with the DDI protocol. In other words, Device  functions as DDI controller in the HAVi spec. Other elements operate as same as those described in the first, second and third embodiments.",{"@attributes":{"id":"p-0196","num":"0204"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0197","num":"0205"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0198","num":"0206"},"figref":["FIG. 24","FIG. 25","FIG. 26","FIG. 25"],"b":"2116"},"The flow from acquiring the DDI information to generating the GUI for the IP is described with reference to the sequence shown in FIG. .","When HAVi device  is plugged-in HAVi network , plug-in detector  detects the event (step ), then GW apparatus  searches HAVi registry  with SEID as a key for the information about the plugged-in HAVi device (step ).","In the device information, an attributive value (GUI_Requirement) reserved in the HAVi spec, i.e. whether or not supporting DDI, is registered.","When GW apparatus  determines that DDI is supported, apparatus  collects the DDI information from HAVi device  with DDI protocol (step ).","GW apparatus  stores the DDI element acquired by DDI acquirer  as the information shown in  (step ).","Next, based on the DDI information stored, UI converter  produces definition information of GUI utilizing the knowledge corresponding to components of the GUI on the IP side (step ).",{"@attributes":{"id":"p-0205","num":"0213"},"figref":["FIG. 26","FIG. 25","FIG. 24","FIG. 25"],"b":"25"},{"@attributes":{"id":"p-0206","num":"0214"},"figref":"FIG. 23"},"First client-IP-device  sends a request of acquiring a GUI from a general UI such as WWW browser (step ).","In the GW apparatus, UI provider  receives this request and starts a communication session with a target HAVi device using a DDI protocol (step ), and transfers the GUI produced (step ).","IP device  displays components (e.g. button) of GUI acquired, and controls HAVi device  following a user's manipulation. At this time, a method of virtual device  in GW apparatus  is called up by an event process indicated by the code described in FIG. . The information about which GUI component is how manipulated is conveyed to virtual device . For instance, Element ID=1 of the GUI component and an action (Pressed) are conveyed (step ).","Based on this information, virtual device  sends a User Action method of the DDI protocol to the target HAVi device with the DDI protocol (step ).","HAVi device  receives this command, then operates as specified by the command, and notifies a change of status when necessary (step ).","The server interprets this reply and, if necessary, transfers it to IP device . After this, every time IP device  is manipulated by the GUI, the process from step  to step  is repeated.","If some change occurs on the HAVi device (e.g. a tape comes to end) and this change is necessary to be notified to the IP device, HAVi device  issues NotifyDdiChange of DDI protocol (step ), the GW apparatus transfers it to notify the client of the change (step ).","When the client notifies the end of manipulation (step ), virtual device  issues \u201cUNSubscribe ( )method\u201d of DDI protocol to the target HAVi device, then closes the manipulation session (step ).","The GW apparatus in accordance with this fifth embodiment allows an IP device to display UI for manipulating an HAVi device.","Exemplary Embodiment 6","A gateway (GW) apparatus in accordance with the sixth embodiment is demonstrated hereinafter with reference to .","In , virtual-device-provider-site  provides a virtual device functioning as a GW on the internet outside. Device-manufactures and www-sites operated by providers are the examples of this site.","Downloader  accesses to site  and downloads the information about the virtual device into the device . Downloader  has the information as shown in  about the device to be downloaded. Virtual-device-controller  has the following additional functions to that described in the third embodiment:","At the plug-in of the HAVi device, if a virtual device supposed to function as a GW between this HAVi device and an IP device is not included in virtual device , this particular virtual device should be downloaded to device  from site  by downloader . The downloader also can download a virtual device of a version different from the now-using device for replacing. Other elements function as same as those described in embodiments 1-3.","Based on the flowchart in , a flow of operations of the GW apparatus is described with reference to FIG.  and  illustrating a table to which the virtual device is downloaded.","When a new HAVi device  is plugged-in HAVi network , HAVi plug-in detector  receives an event, so that the plug-in is notified to virtual-device-controller  (step ).","Next, controller  searches HAVi registry  for the information about the plugged-in device (step ).","Controller  prepares a virtual device for accessing to the HAVi device from the internet (step ).","The process discussed above is the same as that in the third embodiment.","Controller  checks whether or not a virtual device for the HAVi device plugged-in on step  exists in provider-site , and also checks, if necessary, a version of the virtual device and determines to update the version (step ).","When the virtual device exists in site  and the version does not need a version-up, the process onward is the same as that described in the third embodiment (step ).","When the virtual device is not available or the version should be updated, controller  searches the information about provider-sites as shown in  with the key of device information (device No. a type of device, a maker) acquired from HAVi registry , so that controller  acquires the information (URL in this case) about a virtual-device-provider outside the GW (step ).","Based on this provider's information, downloader  downloads the virtual device into site  via IP network input\/output means  (step ).","Controller  assigns a pseudo address to the virtual device downloaded in the same way as in the third embodiment, and registers the virtual device to IP directory , then turns the virtual device into standby status (step ).","The GW apparatus in accordance with the sixth embodiment keeps functioning as a GW by acquiring necessary information from the network when the information held by the GW apparatus cannot allow the GW apparatus to function as a GW.","In conclusion, the gateway (GW) apparatus and the method of the present invention realizes the following functions:","1. The GW apparatus and the method realize communications between IP devices and HAVi devices.","2. The GW apparatus and the method allow a HAVi device to detect a device plugged in the IP network and acquire the interface information.","3. The GW apparatus and the method allow an IP device to detect a device plugged in the HAVi network and acquire the interface information.","4. The GW apparatus and the method realize a stream transfer between HAVi devices and IP devices.","5. The GW apparatus and the method allow an IP device to display UI for manipulating an HAVi device.","6. The GW apparatus and the method can maintain functioning as a gateway by acquiring necessary information from the network when the information locally held by the GW apparatus is not enough for itself to function as the gateway."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0022"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0023"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0024"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0025"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0026"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0027"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0028"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0029"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0030"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0031"},"figref":"FIG. 10"},"FIG. () is a flowchart illustrating an operation of a virtual device controller at plug-in in accordance with the second exemplary embodiment of the present invention.","FIG. () is a flowchart illustrating an operation of the virtual device controller at removing a device in accordance with the second exemplary embodiment of the present invention.",{"@attributes":{"id":"p-0028","num":"0034"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0029","num":"0035"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0030","num":"0036"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0031","num":"0037"},"figref":"FIG. 15"},"FIG. () is a flowchart illustrating an operation of a virtual device controller at plug-in in accordance with the third exemplary embodiment of the present invention.","FIG. () is a flowchart illustrating an operation of the virtual device controller at removing a device in accordance with the third exemplary embodiment of the present invention.",{"@attributes":{"id":"p-0034","num":"0040"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0035","num":"0041"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0036","num":"0042"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0037","num":"0043"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0038","num":"0044"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0039","num":"0045"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0040","num":"0046"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0041","num":"0047"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0042","num":"0048"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0043","num":"0049"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0044","num":"0050"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0045","num":"0051"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0046","num":"0052"},"figref":"FIG. 29"}]},"DETDESC":[{},{}]}
