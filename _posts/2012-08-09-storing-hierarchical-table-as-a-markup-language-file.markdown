---
title: Storing hierarchical table as a markup language file
abstract: Various embodiments of systems and methods for storing a hierarchical table as a markup language file are described herein. Initially the position of the cells included in the hierarchical table may be identified. The position of the plurality of cells includes a first dimension coordinate and a second dimension coordinate. The first dimension coordinate is inserted as a markup tag in the markup language file. The second dimension coordinate is inserted as a markup attribute corresponding to the markup language file. One or more cells, corresponding to a first dimension of the hierarchical table is selected. Data included in the selected cells is identified and stored in the markup attribute inserted in the markup language file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08706783&OS=08706783&RS=08706783
owner: SAP AG
number: 08706783
owner_city: Walldorf
owner_country: DE
publication_date: 20120809
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["Embodiments generally relate to computer systems, and more particularly to methods and systems for storing hierarchical data.","Markup language files (e.g., XML files) are commonly used for distributing data in a rapid and reliable manner. Typically, these markup language files also store the structure of the data along with the data to be transmitted. The structure of the data may be stored by organizing the elements of the markup language file according to the structure of the data. For example, a markup language file may store a structure of a hierarchical structure by arranging parent elements and child elements, of a hierarchical data, such that child elements are contained in the related parent elements.","In certain cases, the structure of the data, to be transmitted may be complex. For example a hierarchical data having multiple levels of hierarchies has a complex structure. Transmitting and parsing markup language file storing such complex structure may be cumbersome and time consuming.","Embodiments of techniques for storing a hierarchical table as a markup language file are described herein. In the following description, numerous specific details are set forth to provide a thorough understanding of the embodiments. One skilled in the relevant art will recognize, however, that the embodiments can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one of the one or more embodiments. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":"100"},"In one embodiment, the rows are included in a row dimension of the hierarchical table. Similarly, the columns are included in a column dimension of the hierarchical table. A dimension is a line in a real or abstract space. An example of a real space dimension is a pair of antiparallel cardinal points on a compass, e.g., North and South, North-northwest and South-southeast. Another real dimension is time. An example of an abstract space dimension is a list of stores. Examples of dimensions include region, store, year, customer, employee, product line, and the like. In one embodiment, each row of the hierarchical table may be one unit of the row dimension. Similarly, each column of the hierarchical table may be one unit of the column dimension. In the above example, the sales hierarchical table includes a row dimension and a column dimension. The row dimension includes the four rows of the sales hierarchical table. Each of the four rows in the sales hierarchical table represents one unit of the row dimension. Similarly, the column dimension includes the four columns of the hierarchical table.","Initially at block , the position of the cells in the hierarchical table may be identified. The position of a cell in the hierarchical table may be identified based on the row dimension and the column dimension of the hierarchical table. In one embodiment, the unit of the row dimension and the unit of the column dimension corresponding to the cell together identify the position of the cell in the hierarchical table. In the above example, row 1 and column 1 together identify the position of the first cell, which is at the top left corner in the hierarchical table, as the unit of the row dimension and the unit of the column dimension corresponding to the first cell is row 1 and column 1, respectively. Similarly the identified position of a second cell, adjacent to the first cell in the first row, is row 1 and column 2.","Next at block , the position of the cells, identified at block , may be inserted in a markup language file. According to one embodiment, a markup language is a system for annotating a document in a way that is syntactically distinguishable from the text. A markup language file may include markup tags, which identify the data stored in the markup language file. The markup language file may also include markup attributes corresponding to markup tags, which may store the data identified by the markup tag. As discussed above, the position of a cell in a hierarchical table includes the unit of row dimension and the unit of column dimension corresponding to the cell. In one embodiment, the unit of one of the dimensions, row dimension or column dimension, included in the position of cell may be inserted as a markup tag in the markup language file. Further, the unit of the other dimension, column dimension or row dimension, included in the position of the cell may be inserted as a markup attribute corresponding to the markup tag. In the above example, the unit of the row dimension (row 1) included in the identified position of the first cell may be inserted as a first markup tag in the hierarchical table. Further, the unit of the column dimension (column 1) included in the position of the first cell may be inserted as a first markup attribute corresponding to the first markup tag. The markup tags and attributes, inserted in the markup language file, may together represent the position of the cells in the hierarchical table.","Finally at block , the data included in the cells of the hierarchical table are stored in the markup attribute, inserted at block , of the markup language file. In the above example, assume that the first cell of the sales hierarchical table stored the data \u201csales table\u201d. The data \u201csales table\u201d, stored in the first cell, may be stored in the first attribute, inserted in the markup language file at block . A markup language file storing the hierarchical table may be obtained after the data in each cell of the hierarchical table is stored in the markup attributes inserted in the markup language file.","In one embodiment, a parser may parse the markup language file to obtain the hierarchical table. As the markup language file stores the position and the data of each cell in the hierarchical table, a parser may easily obtain the hierarchical table from the markup language file without any knowledge of the hierarchical information in the hierarchical table. Further, since the position of the cells in the hierarchical table is inserted as markup tags and attributes in the markup language file, the parser does not need knowledge about user defined tags and attribute names for parsing the markup language file. This may considerably reduce the time required by the parser, for obtaining the hierarchical table from the markup language file.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2","b":"200"},{"@attributes":{"id":"p-0023","num":"0022"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"28pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00001","he":"1.78mm","wi":"1.44mm","file":"US08706783-20140422-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}},{},{},{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00002","he":"2.12mm","wi":"1.02mm","file":"US08706783-20140422-P00002.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}}]},{"entry":[{},{},{},{},{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00003","he":"2.12mm","wi":"1.02mm","file":"US08706783-20140422-P00002.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}},{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00004","he":"2.12mm","wi":"1.02mm","file":"US08706783-20140422-P00002.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}},{}]},{"entry":[{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00005","he":"1.78mm","wi":"1.44mm","file":"US08706783-20140422-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}},{},{},"150M","75M","75M","200M"]},{"entry":["AGES",{},{},{},{},{},{}]},{"entry":[{},{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00006","he":"1.78mm","wi":"1.44mm","file":"US08706783-20140422-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}},{},"100M","50M","50M","150M"]},{"entry":[{},"50",{},{},{},{},{}]},{"entry":[{},{},{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00007","he":"2.12mm","wi":"1.02mm","file":"US08706783-20140422-P00002.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}},"\u200250M","25M","25M","100M"]},{"entry":[{},{},"25"]},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}}]}}}}},"For storing the hierarchical table as a markup language file, initially at block , the plurality of cells in the hierarchical table may be parsed. A cell is a unit of the table where a column and row of the table intersect. For example, the 5\u00d77 population hierarchical table has 35 cells as there are 35 intersections between the 5 rows and the 7 columns of the hierarchical table. In one embodiment, parsing is the process of analyzing the cells of the hierarchical table to identify information related to the cells. The parsing of the cells in the hierarchical table may be performed one by one in a sequential order. In the population hierarchical table, each of the 35 cells may be parsed to identify the information related to the 35 cells.","Next at block , based on the parsing of the cells performed at block , position of the cells in the hierarchical table may be identified. Position refers to the spatial location of an entity. In one embodiment, the position of each cell in the hierarchical table may be identified with respect to the other cells in the hierarchical table. The identified position of each cell in the hierarchical table may be a combination of a first dimension coordinate and a second dimension coordinate of the cell. A first dimension of the hierarchical table may either be a row dimension or a column dimension of the hierarchical table. Similarly, a second dimension of the hierarchical table may be a dimension, column dimension or a row dimension, other than the first dimension, of the hierarchical table. In one embodiment, the first dimension and the second dimension of the hierarchical table may be along one of the axes of a two-dimensional Cartesian coordinate system. A typical Cartesian coordinate system specifies each point uniquely in a plane by a pair of numerical coordinates, which are the distances of the point from two fixed perpendicular directed lines, measured in the same unit of length. A reference line may be referred to as a coordinate axis or an axis of the system. An axis is a reference line from which distances or angles are measured in a coordinate system. The axis may be the X-axis, which is a reference line in horizontal direction, or a Y-axis, which is a reference line in vertical direction. The axis corresponding to the first dimension and the second dimension may be referred to as the first dimension axis and the second dimension axis, respectively. In one embodiment, identifying the position of the cells in the hierarchical table may include identifying the first dimension axis and the second dimension axis of the hierarchical table. In the above example, assume that the row dimension is the first dimension and the column dimension is the second dimension of the population hierarchical table. As the first dimension (row dimension) of the population hierarchical table is in a horizontal direction, the first dimension axis (row dimension axis) of the hierarchical table may be the X-axis. Similarly, as the second dimension (column dimension) of the population hierarchical table is in the vertical direction, the second dimension axis (column dimension axis) may be the Y-axis.","In one embodiment, the first dimension coordinate and the second dimension coordinate of a cell is measured with respect to the first dimension axis and the second dimension axis, respectively, of the hierarchical table. A coordinate is a value that defines the position of a point, line, or the like, with reference to a fixed figure, system of lines, etc. The reference for identifying the first dimension coordinate and the second dimension coordinate may be the first dimension axis and the second dimension axis, respectively. In one embodiment, the first dimension coordinate is a combination of the first dimension axis and a unique identifier that identifies the position of the cell with respect to the first dimension. For example, if the first dimension is the row dimension then the unique identifier may be a row number of the unit of row dimension corresponding to the cell. Similarly, the second dimension coordinate is a combination of the second dimension axis and a unique identifier that identifies the position of the cell with respect to a unit of the second dimension. In the above example, the first dimension coordinate of the cell at the intersection of row 1 and column 1 in the population hierarchical table may be X1, which is a combination of the first dimension axis (X) and the unique identifier (1) that identifies the position of the first cell with respect to the first (row) dimension. In this case, the unique identifier 1 is the row number of the unit of row dimension (first row) corresponding to the first cell. Similarly, the second dimension coordinate of the first cell may be Y1, which is a combination of the second dimension axis (Y) and the unique identifier (1) that identifies the position of the first cell with respect to the second (column) dimension. The unique identifier is the column number of the unit of column dimension (column 1) corresponding to the first cell.","In one embodiment, the first dimension coordinate and the second dimension coordinate of the cell together represent the position of the cell in the hierarchical table. For example, the first dimension coordinate and the second dimension coordinate, X1 Y1, together identify the position of the first cell at the intersection of the first row and the first column of the population hierarchical table.","Next at block , the first dimension coordinate is inserted as a markup tag in a markup language file. A markup language is used for annotating a document in a way that is syntactically distinguishable from the text. Examples of markup language include extensible markup language (XML), hypertext markup language (HTML), etc. The markup language file may include markup tags, which identify the data stored in the markup language file. In one embodiment the first dimension coordinate, included in the identified position of the cell at block , is inserted as a markup tag, such as XML tag, in the markup language file. Each markup tag in the hierarchical table may represent one unit of the first dimension of the hierarchical table. In the above example, one unit of the first dimension coordinate X1, included in the identified position X1Y1 of the cell at the intersection of row 1 and column 1 in the population hierarchical table, may be inserted as a markup tag in the markup language file. Five markup tags X1, X2, X3, X4, and X5, which are the first dimension coordinate corresponding to each unit of the row dimension may be inserted in the markup language file.","In one embodiment, a first dimension axis, corresponding to each unit of the first dimension, may be inserted as a markup tag in the markup language file. In the above example, five markup tags X, X, X, X, and X, which are the first dimension axis corresponding to each unit of the first (row) dimension may be inserted in the markup language file.","Next at block , the second dimension coordinate, included in the position of the cell identified at block , is inserted as a markup attribute in the markup language file. The markup attribute, being inserted in the markup language file, may be corresponding to the markup tag inserted in the markup language file at block . Markup attributes may be associated with the markup tag to further define the tags. In one embodiment, the syntax of a markup tag and markup attributes corresponding to the markup tag may be: <markup_tag markup_attribute1=\u201cdata\u201d markup_attribute2=\u201cdata\u201d . . . >. In one embodiment, one markup attribute may be inserted, in the markup language file, for each cell of the hierarchical table. As the markup attributes inserted in the markup language file has a 1:1 relationship with the number of cells in the hierarchical table, there is no duplication of markup tag names and markup attribute names, of the markup attributes, corresponding to the markup tags. In the above example, the second (column) dimension coordinates, included in the positions of the cells identified at block , may be Y1-Y7, which is a combination of the column dimension axis (Y-axis) and a unique identifier that identifies the unit of the column dimension corresponding to the cells. The second dimensions coordinates Y1-Y7 may be inserted as markup attributes in the markup language file. As the population hierarchical table includes thirty five cells, thirty five markup attributes may be inserted in the markup language file corresponding to the thirty five cells in the population hierarchical table. The markup tags and the markup attributes inserted in the markup language file together identify the position of each cell in the hierarchical table. Table 2 illustrates the markup language file obtained after inserting the markup tags and the markup attributes corresponding to the cells in the population hierarchical table. Each of the tag-attribute pair X1 Y1, X1 Y2 . . . in the table 2 is a position of a cell in the population hierarchical table.",{"@attributes":{"id":"p-0031","num":"0030"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"8","colwidth":"28pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"8","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<X1","Y1","Y2","Y3","Y4","Y5","Y6","Y7 \/>"]},{"entry":[{},"<X2","Y1","Y2","Y3","Y4","Y5","Y6","Y7 \/>"]},{"entry":[{},"<X3","Y1","Y2","Y3","Y4","Y5","Y6","Y7 \/> "]},{"entry":[{},"<X4","Y1","Y2","Y3","Y4","Y5","Y6","Y7 \/> "]},{"entry":[{},"<X5","Y1","Y2","Y3","Y4","Y5 ","Y6","Y7 \/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"8","align":"center","rowsep":"1"}}]}]}}}}},"In one embodiment, the markup attributes may be inserted, in the markup language file, corresponding to only those cells of the hierarchical table that include data. In the above example, for the first row of the population hierarchical table only two markup attributes Y4 and Y7 may be inserted in the markup language file, as only the fourth cell and the seventh cell in the first row, of the population hierarchical table, store data. In this case, the first line of the markup language may include <X1 Y4 Y7 \/>. In one embodiment, the markup language file, storing the hierarchical table, is a flat markup language file. A flat markup language file may include markup elements for storing the hierarchical table. Each markup element, in the flat markup language file, represents cells corresponding to a single unit of the first dimension. A markup element includes a markup tag and markup attributes corresponding to the markup tag for storing data. In the markup language file, shown in table 2, each line of the markup language file is a markup element that includes markup tag and attributes representing position of the cells corresponding to one unit of the rows dimension (first dimension). For example, the first line <X1 Y1 Y2 Y3 Y4 Y5 Y6 Y7 \/> is a markup element representing the position of the cells included in one unit (first row) of the row dimension corresponding to the population hierarchical table shown in Table 1.","Next at block , the cells corresponding to the first dimension, of the hierarchical table, may be sequentially selected from the hierarchical table. The first dimension of the hierarchical table may be the row dimension or the column dimension of the hierarchical table. In one embodiment, the first dimension may be the dimension corresponding to the first dimension coordinate that has been inserted as a markup tag in the markup language file at block . In one embodiment, cells corresponding to one unit of the first dimension may be sequentially selected from the hierarchical table. In the above example, the cells corresponding to each unit of the row dimension (e.g., first dimension) of the population hierarchical table may be selected, one at a time. Initially the cells corresponding to the first row, which is one unit of the first (row) dimension, of the hierarchical table may be selected. Next, the cells corresponding to the second row, which is another unit of the first (row) dimension, of the hierarchical table may be selected.","Next at block  the data stored in the cells, selected at block , of the hierarchical table may be identified. In one embodiment, the metadata of the data stored in the selected cells may also be identified along with the data. The metadata is data about data. Metadata may describe information about when, or by whom a particular set of data was collected, or whether data can be edited, or any other additional information related to the data. In the above example, the data identified for the selected cells in the first row of the population hierarchical table is \u201cEUROPE\u201d and \u201cUSA\u201d. The metadata related to the data \u201cEUROPE\u201d is \u201c\u2207\u201d, which indicates that the data \u201cEUROPE\u201d can be expanded and the metadata for the data \u201cUSA\u201d is \u201c\u201d, which indicates that the data \u201cUSA\u201d can be collapsed.","In one embodiment, the hierarchical information of the selected cells may also be identified. Hierarchical information may include information related to the different parent\/child relationships in the hierarchical table. In the above example, the hierarchical information related to the cells 5 and 6, in row 2 of the population hierarchical table, which stores \u201cGERMANY\u201d and \u201cFRANCE\u201d may be that cells 5 and 6, in row 2, are child of the cell 4, in row 1, which stores the data \u201cEUROPE\u201d.","Finally at block  the data, identified at block , included in the selected cells of the hierarchical table may be stored in the markup attributes inserted in the markup language file at block . In one embodiment, the identified data and metadata of a selected cell may be stored in the inserted markup attribute, which is the second dimension coordinate of the selected cell, corresponding to the selected cell of the hierarchical table. The data and the metadata of the cell stored in the markup attribute may be separated by a delimiter, for example a \u201c|\u201d. In the above example, the first line of the markup language file after storing the data and metadata of the selected cells of the first row may include <X1 Y1=\u201d \u201c \u201d Y2=\u201c \u201d Y3=\u201c \u201d Y4=\u201cEUROPE|E\u201d Y5=\u201c \u201d Y6=\u201c \u201d Y7=\u201cUSA|C\u201d\/>, where \u201cE\u201d and \u201cC\u201d represent the metadata expand and collapse, respectively, corresponding to the data \u201cEUROPE\u201d and \u201cUSA\u201d included in the fourth cell and the seventh cell, respectively, of the hierarchical table. Table 3 illustrates the markup language file obtained after storing the data and metadata, of all the cells in the hierarchical table, in the markup attributes of the markup language file. The markup language file shown in Table 3 stores the hierarchical table shown in Table 1, in a two dimensional representation, and does not require the markup language file to use hierarchical structure to store the structure of hierarchical table shown in Table 1.",{"@attributes":{"id":"p-0037","num":"0036"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<X1 Y1 = \u201c\u201d Y2 = \u201c\u201d Y3 = \u201c\u201d Y4 = \u201cEUROPE | E\u201d Y5 = \u201c\u201d Y6 = \u201c\u201d Y7 = \u201cUSA | C\u201d \/>"},{"entry":"<X2 Y1 = \u201c\u201d Y2 = \u201c\u201d Y3 = \u201c\u201d Y4 = \u201c\u201d Y5 = \u201cGERMANY | C\u201d Y6 = \u201cFRANCE | C\u201d Y7 = \u201c\u201d \/>"},{"entry":"<X3 Y1 = \u201cALL AGES | E\u201d Y2 = \u201c\u201d Y3 = \u201c\u201d Y4 = \u201c150 | M\u201d Y5 = \u201c75 | M\u201d Y6 = \u201c75 |"},{"entry":"M\u201d Y7 = \u201c200 | M\u201d \/>"},{"entry":"<X4 Y1 = \u201c\u201d Y2 = \u201cAGES < 50 | E\u201d Y3 = \u201c\u201d Y4 = \u201c100 | M\u201d Y5 = \u201c50 | M \u201d Y6 = \u201c50 |"},{"entry":"M\u201d Y7 = \u201c150 | M\u201d \/>"},{"entry":"<X5 Y1 = \u201c\u201d Y2 = \u201c\u201d Y3 = \u201cAGES < 25 | C\u2019 Y4 = \u201c50 | M\u201d Y5 = \u201c25 | M\u201d Y6 = \u201c25 |"},{"entry":"M\u201d Y7 = \u201c100 | M\u201d \/>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In another embodiment, the hierarchical information related to the selected cells, of the hierarchical table, may also be stored in the markup attribute along with the data and the metadata stored in the markup attributes. In this case, the hierarchical information of the hierarchical table may not be stored by organizing the structure of the markup language file in the hierarchical order of the table. Rather, the hierarchical information is concatenated with the data and the metadata of the cell and stored in the markup attribute corresponding to the cell. In one embodiment, the hierarchical information, parent-child relationship, of the hierarchical table may be stored by storing attributes names of the parent attribute, storing parent data, in the child attribute, storing child data. In the above example, the hierarchical information of the selected cells in the markup language file may be that data \u201cEUROPE\u201d stored in cell 4 of the first row is a parent of the data \u201cGERMANY\u201d and \u201cFRANCE\u201d stored in cells 5 and 6 of the second row in the hierarchical table. In this case, the attribute name Y4 of the attribute storing parent data \u201cEUROPE\u201d may be stored in the attributes Y5 and Y6 of the markup language file storing the child data \u201cGERMANY\u201d and \u201cFRANCE\u201d. In this case, the first line of the markup language file may include <X1 Y1=\u201c \u201d Y2=\u201c \u201d Y3=\u201c \u201d Y4=\u201cEUROPE|E\u201d Y5=\u201cGERMANY|C|Y4\u201d Y6=\u201cFRANCE|C|Y4\u201d Y7=\u201cUSA|C\u201d \/>. A parser parsing this line of the markup language file will understand that the data stored in the markup attributes Y5 and Y6 are child elements of the data stored in the markup attribute Y4 and therefore has to be placed in the fifth and sixth cell of the second row in the hierarchical table.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 3","b":["300","302","304"]},"In the above example, the first line of the markup language file, shown in table 3, may be parsed to identify the position for placing data (\u201c \u201d) stored in the markup attribute Y1 corresponding to markup tag X1. Based on the parsing, the first cell, of the hierarchical table, having dimension coordinates X1 Y1 is identified as the position for placing the data (\u201c \u201d).","As discussed above the first dimension axis may also be inserted as a markup tag in the markup language file. In this case, the markup language parser may identify the first dimension coordinate, of the cell positions in the hierarchical table, based on the parsing count of the parser. As discussed above, the markup language parser parses one line at a time. Therefore, the parsing count of the parser may be incremented by 1 for each line in the markup language file. The markup language file may identify the first dimension coordinate, of the cell positions in the hierarchical table, based on the first dimension axis, inserted as markup tag in the markup language file, and the parsing count of the parser. For example, consider a hierarchical table that has a first dimension axis as the X-axis. The parser may initially parse the first line of the markup language file that may include <X Y1=\u201c \u201d Y2=\u201c \u201d\/>. The parser may then identify the first dimension coordinate, of the cell positions represented by the markup tag X, as X1, based on the first dimension axis (X) and the parsing count of the parser, which is 1. Similarly the markup language parser may identify the first dimension coordinate for the cells represented by the attributes in the second line of the markup language file as X2, because the first dimension axis, inserted as markup tag in the markup language file, is X and the parsing count of the parser is 2.","Finally at block  the data stored in the markup attribute, included in the markup language file, may be placed at the positions, determined at block , of the hierarchical table. In the above example, the data (\u201c \u201d) stored in the markup attribute Y1 may be stored at the position X1Y1 of the hierarchical table. Similarly, the parser may determine the positions, in the hierarchical table, to place the other data items stored in the markup attributes, inserted in the markup language file, to obtain the hierarchical table. As the parser does not require any hierarchical information (parent-child relationship) of the hierarchical table, during the parsing, it is able to quickly parse the markup language file to obtain the hierarchical table.","In another embodiment, the parser may determine the hierarchical information stored in the markup attributes, along with the data and the metadata, stored in the markup attribute, and obtain the hierarchical table based on the hierarchical information stored in the markup language file. In the above example, the parser may parse the first line of the hierarchical table that includes <X1 Y1=\u201c \u201d Y2=\u201c \u201d Y3=\u201c \u201d Y4=\u201cEUROPE|E\u201d Y5=\u201cGERMANY|C|Y4\u201d Y6=\u201cFRANCE|C|Y4\u201d Y7=\u201cUSA|C\u201d \/> to identify that the data \u201cGERMANY\u201d and \u201cFRANCE\u201d stored at attributes Y5 and Y6, respectively, are children of the data \u201cEUROPE\u201d stored in the attribute Y4, which is the parent. In this case, the parser may position the children data \u201cGERMANY\u201d and \u201cFRANCE\u201d at positions having a first dimension coordinates as X2 instead of X1 to show the hierarchical (parent-child) relationship between the children data \u201cGERMANY\u201d and \u201cFRANCE\u201d and the parent data \u201cEUROPE\u201d, which is stored at a position, X1 Y4, having a first dimension coordinate as X1.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 4","b":["400","400","400","400","400","400","400","400"]},"Initially, for storing the hierarchical table as a markup language file, the 54 cells of the hierarchical table  may be parsed, one by one, to identify the first dimension coordinate and the second dimension coordinate of each of the 54 cells in the hierarchical table. In this case, the row dimension and the column dimension are assumed to be the first dimension and the second dimension, respectively, of the hierarchical table . The row dimension of the hierarchical table  is along the X-axis. Therefore, the X-axis is the first dimension axis of the hierarchical table . Similarly, the column dimension of the hierarchical table  is along the Y-axis, which is the second dimension axis of the hierarchical table . The first dimension coordinate (row dimension coordinate) and the second dimension coordinate (column dimension coordinate) of each of the cell in the hierarchical table  may be determined with reference to the X-axis and the Y-axis, respectively.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 5","FIG. 4","FIG. 4","FIG. 4","FIG. 4","FIG. 4","FIG. 4"],"b":["500","400","500","400","500","500","400","400","500","400","500","400","500"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 6","FIG. 4","FIG. 4","FIG. 4","FIG. 4","FIG. 4"],"b":["400","600","400","400","600","400","400"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 7","FIG. 4","FIG. 4","FIG. 4","FIG. 4","FIG. 7","FIG. 4"],"b":["700","400","700","400","700","400","400","700","700","400","700","700"]},"Some embodiments may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by a client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments may include remote procedure calls or web services being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer readable storage media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 8","b":["800","800","802","822","800","816","822","804","806","804","806","802","806","800","810","812","800","810","812","800","814","800","820","820","800","818","800","808","824","824","824","820","824"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transactional, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transactional data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system (e.g., ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","In the above description, numerous specific details are set forth to provide a thorough understanding of embodiments. One skilled in the relevant art will recognize, however that the embodiments can be practiced without the specific details or with other methods, components, techniques, etc. In other instances, well-known operations or structures are not shown or described in details.","Although the processes illustrated and described herein include series of steps, it will be appreciated that the different embodiments are not limited by the illustrated ordering of steps, as some steps may occur in different orders, some concurrently with other steps apart from that shown and described herein. In addition, not all illustrated steps may be required to implement a methodology in accordance with the one or more embodiments. Moreover, it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.","The above descriptions and illustrations of embodiments, including what is described in the Abstract, is not intended to be exhaustive or to limit the one or more embodiments to the precise forms disclosed. While specific embodiments are described herein for illustrative purposes, various equivalent modifications are possible, as those skilled in the relevant art will recognize. These modifications can be made in light of the above detailed description. Rather, the scope is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments with particularity. The embodiments are illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 6","FIG. 4"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 7","FIG. 4"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
