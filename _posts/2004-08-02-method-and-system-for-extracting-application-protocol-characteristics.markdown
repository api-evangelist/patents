---
title: Method and system for extracting application protocol characteristics
abstract: A method and computer program for automatically and continually extracting application protocols (i.e., defining a set of allowable or authorized actions) for any application. The method involves receiving a message from a server before it is sent or in parallel with sending to a client. The message may be in response to a specific request for it from the client. The program then extracts the application protocol data from the server message. Working with a copy of the message, the program strips off the communications protocol(s) from the message and parses the remaining message to identify user-selectable options contained in the message such as commands, fields, etc. These items represent the set of allowable or authorized user actions for the particular “stage” of the current version of the application as set forth in the message. The set of allowable user actions is then stored by the extraction program in a protocol database accessible to a gateway or filter module.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07774835&OS=07774835&RS=07774835
owner: F5 Networks, Inc.
number: 07774835
owner_city: Seattle
owner_country: US
publication_date: 20040802
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application is a continuation of U.S. application Ser. No. 09\/974,214, filed Sep. 14, 2001, now abandoned, which is a continuation of U.S. application Ser. No. 09\/345,920, filed Jul. 1, 1999, now U.S. Pat. No. 6,311,278, which is a continuation-in-part of U.S. application Ser. No. 09\/149,911, filed Sep. 9, 1998, now U.S. Pat. No. 6,321,337.","A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent files or records, but otherwise reserves all copyright rights whatsoever.","This application is related to pending application Ser. No. 09\/149,911 titled METHOD AND SYSTEM FOR PROTECTING OPERATIONS OF TRUSTED INTERNAL NETWORKS, filed Sep. 9, 1998, and application Ser. No. 09\/150,112 titled METHOD AND SYSTEM FOR MAINTAINING RESTRICTED OPERATING ENVIRONMENTS FOR APPLICATION PROGRAMS OR OPERATING SYSTEMS, filed Sep. 9, 1998, both of which applications are hereby incorporated by reference into this application.","The present invention relates generally to network security and privacy systems, and more particularly to a method and system for continuously and automatically or semi-automatically defining and updating actions which may be taken in an application program operating on a server.","One way in which the security or privacy of data or an application program residing on a server computer may be compromised is through an unauthorized command. That is, a client computer connectable to the server, such as via the Internet, may transmit a request for the retrieval of data or for the execution of an instruction to which the client is not entitled. For example, a web server accessible over the Internet on which goods are available for sale may allow actions such as the selection of an item to purchase, the input of personal and payment data, or even the execution of an application program to retrieve data previously entered. However, the web server should not allow a given client to change price data or retrieve other data intended to be kept private, and these types of requests should be considered unauthorized or disallowable for that client. Currently, many applications do not include safeguards against clients making these kinds of requests.","Presently, service provider networks (e.g., commercial sites, government institutes, e-commerce sites, etc.) are often protected by firewall security devices or routers. These tools provide a good level of security against attacks based on the weaknesses of low level protocols (such as TCP or UDP) and of generic Internet applications like FTP or TELNET. However, these tools cannot guard implementations of specific application protocols, such as a specific banking application, billing application, insurance application, etc., nor can they account for changes or updates to application protocols.","To prevent clients from performing disallowable actions, a gateway or filter mechanism may be interposed between the client and server to identify and eliminate disallowable requests. As shown in , a filter module  is positioned between a server  and clients, only one of which is shown in  as client . The filter module  receives requests from the client , eliminates any disallowable actions requested by the client  to the server , and passes the remaining, allowable parts of requests to the server . The filter module  determines which requests are allowable by querying a protocol database . The protocol database  stores an application protocol for the application program residing on the server. As used herein, an application protocol represents some or all of the allowable actions for the application program.","An example of a gateway system and related components is described in the aforementioned applications, Ser. Nos. 09\/149,911 and 09\/150,112, which are incorporated by reference into this application.","In order to create the protocol database , a developer must know all the protocols of the application and the authorized or allowable actions. However, for applications which utilize complex protocols, the process of specifying the precise protocol can be long and tedious. In addition, the application developer is often not even aware of the complete protocol specification, as implicit assumptions made by the programmer are usually extremely difficult to identify. Furthermore, the developer must monitor changes in the application protocol and update the protocol database accordingly. Failure to have a complete and accurate protocol database could prevent clients from making full use of the application program residing on the server. An ineffective database could alternatively allow clients to take actions which are disallowed in the current version of the application program.","There is therefore a need for a method and system for at least semi-automatically defining application protocols for applications residing on servers on an on-line, real-time basis.","It is an object of the present invention to solve the problems described above with security and privacy systems.","It is another object of the present invention to define allowable actions which may be requested by clients of servers.","It is another object of the present invention to provide a mechanism for extracting application protocols on an on-line, real-time basis.","These and other objects are achieved by a method implemented by an extraction computer program for extracting application protocols thereby defining a set of allowable or authorized actions. The method involves receiving a message from a server before it is sent or in parallel with sending to a client. The message may be in response to a specific request for it from the client. In the case of the world wide web, for example, in which clients typically request web documents or pages through browser programs, the requested web page would be intercepted before or in parallel with transmission to the client.","The extraction program then extracts the application protocol data from the server message. The server message typically contains data for one or more communication protocols required for transmission to the client, such as TCP\/IP in the case of Internet communications. Working with a copy of the message, the program parses the communications data from the message and saves or discards this information. Then, the program strips off the communications protocol(s) from the message. The program next parses the remaining message to identify commands, fields, or other user-selectable options contained in the message. These items represent the set of allowable or authorized user actions for the application as set forth in the message.","The set of allowable user actions is then stored by the extraction program in a protocol database accessible to a gateway or filter module. The protocol data may be stored on a session by session basis, in which case it is used by the filter module to enforce a protocol policy for each individual client\/server session and even for each portion or segment of an application program. When used this way, the protocol data may be continuously updated and changed to represent actions which are allowable at any given point. Alternatively, the protocol data may be collected from many sessions over a period of time and stored to create a larger and more complex protocol database.","In any event, the ability to capture an application protocol from a server message provides for a protocol database which may be continuously updated on an ongoing, real-time basis and which more accurately reflects the set of allowable actions.","Preferred embodiments of the present invention are now described in detail with reference to the drawings in the figures.","Referring to , a computer network such as the Internet, an intranet or any other private network, connects clients  and servers , of which only one of each is shown. Associated with the server is a security gateway system consisting of a filter module , a protocol database , and a protocol extraction module . These modules and database may be stored on the server , on a computer separate from and connectable to the server , or on a number of separate but connectable computers, each of which include a computer-readable storage medium for storing instructions and data.","The filter module  intercepts messages such as requests from the client  and queries the protocol database  to determine whether the actions or commands in the request are authorized or allowed for the client . The protocol database  contains a list of the allowable actions, either for a given client\/server session, for a \u201cstage\u201d or segment of the application program, or as a static list of actions allowable for a given application program.","In some embodiments, the filter module  consists of two or more components as described in application Ser. No. 09\/149,911, through which commands and other data in the client communication is converted to a simplified protocol for added security. As shown in , the gateway contains two separate and distinct processing entities , , referred to herein as robots, connected via a dedicated, secure communication bus . The internal robot  is connected to the server , and the external robot  is connected to clients  via the Internet or other external computing environment. Each robot is capable of translating or reducing a communication or message received from the respective environment to a simplified message using a simplified protocol format referred to herein as a clear inter-protocol or CIP, transmitting the CIP message to the other robot using the inter-robot bus  using an inter-robot transfer protocol or IRP, and translating such CIP messages received from the other robot into messages formatted for the respective environment. Together, these three elements , ,  implement the protection provided by the gateway for the protected internal server . The robots ,  are two separate and independent logical processes that execute routines defined by respective security gateway software packages. The robots ,  may be installed on two separate processing devices or one a single processing device operating the one or both of the robots ,  in protected mode.","Each of the robots ,  contains or has access to a protocol manager (not shown) which reduces a message received by the robot for the respective environment to a CIP message for transmission to the other robot, and which also retranslates a message received from the other robot in CIP format into the protocol for the respective native environment. The protocol manager thus uses a database of CIP codes for this reduction and retranslation. As shown in , the protocol extraction module , which resides in the internal robot , extracts protocols in messages received by the internal robot  from the server , extracts the protocols as described herein, and provides the application protocol data to robot .","In accordance with the invention, the protocol extraction module  intercepts server messages and extracts application protocol data for addition to the protocol database . The operation of the extraction module  in accordance with one embodiment is described with reference to . The server  transmits a message directed to the client, step , the message containing information relating to the application residing and running on the server  or a computer connected thereto. The message may be a response to a request previously received from the client. Using a copy of the server message or the message itself, the application protocol data is extracted from the server message, step . As described in more detail below, this extraction process may be performed in a number of ways, including through the use of known techniques to identify a low level or communication protocol, such as TCP\/IP, stripping such protocol while retaining required data such as IP source data, and searching the remainder of the message for allowed commands or other authorized user actions.","Once extracted, the application protocol data is stored in the protocol database , step . The protocol data may be added to a permanent file relating to the current version of the application, to a temporary, session-based file used for a particular client\/server session only, or to a temporary file used only for a particular server message and then overwritten. All of these options allow for the automatic adaptation to changes in an application and for the continuous modification of the protocol database to account for allowable actions in different segments or stages of an application. These options differ to the extent that protocols from prior messages remain relevant for future messages.","The server message is transmitted to the client, step . The client then transmits a request directed to the server, step . The client's request may be a proper response to the server message or may be an attempt to cause the application to execute an unauthorized command. The filter module  intercepts the client request, reads it, and queries the protocol database, step . Depending upon the security and privacy desired, the query may need to identify the client, the server, the particular application and\/or the particular session.","The request is compared to the application protocol database to determine whether the request is allowable, step . If the request is allowable, the filter module  passes the request along to the server, step . If the request does not match any of the actions in the application protocol in the protocol database  and is thus considered disallowable, the request is denied access to the server, step , and the client  and\/or server  may be notified of the attempted unauthorized request.","An embodiment of the protocol extraction method used for web-based communications is shown in . The extraction module receives the server message, which is a web document or HTML page, step . The TCP\/IP protocol data is extracted from the document, step , and saved to help identify the source IP address to, for example, maintain a session with the client to whom the message was addressed. Other communication data such as HTTP is further stripped from the document until the module reads the HTML data, step .","From this data, the module collects information about the design of the particular application. This is accomplished by parsing the HTML document data and locating all the tags, step . For tags such as anchors which define links to other web documents, step , the link with URL is added to the protocol database, step . This applies, for example, with home pages of a web server containing links to many other pages on the server, or with links embedded within certain types of multimedia files such as those contained in Shockwave, RealAudio or RealVideo files. The extraction module also locates any input fields in the web document, step , which may be positioned, for example, within an HTML form. The identity and nature of the field data for such fields, including the type and length of the field, is then added to the protocol database, step . If no field length is specified, a default field length is used. For example, a \u201cname\u201d field is listed in the protocol database as requiring alphanumeric data of a given length in the client request, a date field is listed as requiring date formatted alphanumeric data, and an \u201cemail address\u201d field requires email formatted data, e.g., a@b.c.","Using similar steps, the protocol extraction module will also check for forms, fields, fixed fields, hidden fields, menu options, DOM components, etc. For each of these elements, the protocol database will be updated as to their nature and any limitations thereon. For example, for all hidden fields identified, the database will be updated as to their nature and that the client may not change their content.","The extraction module further identifies any other actions available in the web document, step . These include, for example, a \u201csubmit\u201d command on an HTML form, a \u201csearch\u201d command, or other application-level protocols. These additional actions within the web document are also extracted and stored in the protocol database, step .","Once the gateway or filter receives a client request, step , it compares each link, data, command, or other action in the request with the corresponding entities now stored in the protocol database, step . If no such disallowed actions are in the request, the request is transmitted to the server, step . Otherwise, any link, data, or command not contained in the protocol database is deleted from the request or, alternatively, the entire request is denied, step .","Referring now to , in some embodiments the protocol extraction module contains a protocol dispatcher  which coordinates and manages the extraction process. As shown in , the dispatcher  extracts one protocol  at a time, starting for example, with TCP\/IP, HTTP, HTML, and any other protocols. In the web environment, upon receiving a message the dispatcher  initializes a variable current_protocol to TCP\/IP, step  in . Data is then extracted from the current protocol, step , and the current protocol is then stripped out of the message, step . The current protocol is then stored in the protocol database, step , or alternatively, the dispatcher  may proceed through all the protocols before updating the protocol database.","The variable current_protocol is then incremented or otherwise set to a new protocol, step . If the current_protocol is now NULL, step , meaning that no additional protocols remain to be extracted, the process is complete. Otherwise, the data if any in the message relating to the new current protocol is extracted, step , and the process repeated until complete.","While the invention has been described and illustrated in connection with preferred embodiments, many variations and modifications as will be evident to those skilled in this art may be made without departing from the spirit and scope of the invention, and the invention is thus not to be limited to the precise details of methodology or construction set forth above as such variations and modification are intended to be included within the scope of the invention."],"BRFSUM":[{},{}],"heading":["COPYRIGHT NOTICE","RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2A","FIG. 2"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 5","FIG. 2"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 6","FIG. 5"]}]},"DETDESC":[{},{}]}
