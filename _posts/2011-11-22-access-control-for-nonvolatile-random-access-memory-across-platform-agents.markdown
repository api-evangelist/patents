---
title: Access control for non-volatile random access memory across platform agents
abstract: A controller is used in a computer system to control access to an NVRAM. The computer system includes a processor coupled to a non-volatile random access memory (NVRAM). The NVRAM is byte-rewritable and byte-erasable. The NVRAM stores data to be used by a set of agents including in-band agents and an out-of-band agent. The in-band agents run on a processor having one or more cores, and the out-of-band agent that runs on a non-host processing element. When the controller receives an access request from the out-of-band agent, the controller determines, based on attributes associated with the out-of-band agent, whether a region in the NVRAM is shareable by the out-of-band agent and at least one of the in-band agents.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09298607&OS=09298607&RS=09298607
owner: Intel Corporation
number: 09298607
owner_city: Santa Clara
owner_country: US
publication_date: 20111122
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND","DETAILED DESCRIPTION"],"p":["This patent application is a U.S. National Phase Application under 35 U.S.C. \u00a7371 of International Application No. PCT\/US2011\/061921, filed Nov. 22, 2011, entitled ACCESS CONTROL FOR NON-VOLATILE RANDOM ACCESS MEMORY ACROSS PLATFORM AGENTS.","1. Field of the Invention","Embodiments of the invention relate generally to the field of computer systems. More particularly, embodiments of the invention relate to an access control mechanism for non-volatile random access memory in a computer system.","2. Description of the Related Art","In conventional computer systems, system memory (also known as main memory, primary memory, executable memory) is typically implemented by dynamic random access memory (DRAM). DRAM-based memory consumes power even when no memory reads or writes occur because it constantly recharges internal capacitors. DRAM-based memory is volatile, which means data stored in DRAM memory is lost once the power is removed. For many computer systems, especially mobile platforms, power utilization is a critical issue in terms of cost and performance.","Phase-change memory (PCM), also sometimes referred to as phase change random access memory (PRAM or PCRAM), PCME, Ovonic Unified Memory, or Chalcogenide RAM (C-RAM), is a type of non-volatile computer memory which exploits the unique behavior of chalcogenide glass. As a result of heat produced by the passage of an electric current, chalcogenide glass can be switched between two states: crystalline and amorphous. Recent versions of PCM can achieve two additional distinct states. As a result, storage density and capacity are significantly increased.","PCM provides higher performance than flash memory (also referred to as \u201cflash\u201d) because the memory element of PCM can be switched more quickly, writing (changing individual bits to either 1 or 0) can be done without the need to first erase an entire block of cells, and degradation from writes is slower (a PCM device may survive approximately 100 million write cycles; PCM degradation is due to thermal expansion during programming, metal (and other material) migration, and other mechanisms).","In the following description, numerous specific details such as logic implementations, opcodes, means to specify operands, resource partitioning\/sharing\/duplication implementations, types and interrelationships of system components, and logic partitioning\/integration choices are set forth in order to provide a more thorough understanding of the present invention. It will be appreciated, however, by one skilled in the art that the invention may be practiced without such specific details. In other instances, control structures, gate level circuits and full software instruction sequences have not been shown in detail in order not to obscure the invention. Those of ordinary skill in the art, with the included descriptions, will be able to implement appropriate functionality without undue experimentation.","References in the specification to \u201cone embodiment,\u201d \u201can embodiment,\u201d \u201can example embodiment,\u201d etc., indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the art to effect such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.","In the following description and claims, the terms \u201ccoupled\u201d and \u201cconnected,\u201d along with their derivatives, may be used. It should be understood that these terms are not intended as synonyms for each other. \u201cCoupled\u201d is used to indicate that two or more elements, which may or may not be in direct physical or electrical contact with each other, co-operate or interact with each other. \u201cConnected\u201d is used to indicate the establishment of communication between two or more elements that are coupled with each other.","Bracketed text and blocks with dashed borders (e.g., large dashes, small dashes, dot-dash, dots) are sometimes used herein to illustrate optional operations\/components that add additional features to embodiments of the invention. However, such notation should not be taken to mean that these are the only options or optional operations\/components, and\/or that blocks with solid borders are not optional in certain embodiments of the invention.","Embodiments of the invention protect crucial data stored in a memory device while allowing multiple different agents to access the same memory device. In some embodiments, this memory device is implemented by non-volatile random access memory (NVRAM), such as Phase Change memory (PCM), PCM with switch (PCMS), or related memory technologies. Embodiments of the invention provide agent-specific access control, such that a designated NVRAM region is made accessible to an agent based on the agent's identity. For example, a high-privileged agent (e.g., the core microcode that runs on the processor) can access the entire NVRAM, while a low-privileged agent (e.g., an application that runs on the processor) can only access a portion of the NVRAM. Based on a configurable access control vector (ACV), an agent can have exclusive or shared access to a designated NVRAM region. An NVRAM region which is accessible by an agent is referred to as a region \u201cowned\u201d by that agent. Exclusive access allows an agent to safeguard the data in the region that it owns, preventing another agent (which may be a third party agent) from modifying the data stored in that region. For example, the data stored in a microcode-owned region can be microcode patches, which contains proprietary information that a microcode developer would want to protect from third parties. By designating the region storing the microcode patches as not-shareable, other agents (e.g., the operating system (OS)) would be unable to access the proprietary information.","In a conventional computer system, exclusive access is typically enforced by using separate memory devices for different agents; e.g., the Basic Input\/Output System (BIOS) uses a flash memory device, management engine (ME) uses another flash memory device, and the OS uses a dynamic random access memory (DRAM). For system integration and cost reduction, it is beneficial for these agents to use the same memory device that has sufficient capacity to accommodate all of the agents' data. However, in a typical computer system, the core microcode can be developed by the processor manufacturer, while some of the boot firmware, OS, and applications, etc., can be provided by one or more third party vendors. For them to use the same memory device can create data security issues. To isolate platform code from third party extension code, embodiments of the invention provide an access control mechanism for controlling access to this common memory device. In one embodiment, this common memory device is NVRAM (e.g., PCMS), and the access control mechanism is performed by a controller coupled to the NVRAM. The computer system can be a server computer or a mobile computing system.","Embodiments of the invention also allow shared access to an NVRAM region, such that critical data stored by one agent in an NVRAM region can be shared by another agent. The shared access can be beneficial for diagnostics and error recovery. For example, an NVRAM region can be used to store the data that is used by the core microcode in the system boot process. This NVRAM region can be designated as \u201cshareable\u201d between the core microcode and the ME. In one embodiment, the ME is a microcontroller that can operate even when the processor cores are inoperable. If the content of this shared region is compromised such that the core microcode is rendered inoperable, the ME can access the compromised content and update or recover the content. As another example, a baseboard management controller (BMC) and the BIOS can share access to the same NVRAM region that stores BIOS image updates used for booting the platform. If the BIOS image updates are compromised or otherwise rendered inoperable, the BMC can remotely update the compromised image to resolve any erroneous conditions and allow the platform to boot.","The term \u201cagent\u201d herein refers to a hardware, software, or firmware entity that is capable of accessing the data stored in an NVRAM of a computer system. An agent can be an in-band agent or an out-of-band agent. An in-band agent runs on the processor cores (\u201ccores\u201d). An out-of-band agent runs on a non-host processing element (e.g., a microcontroller that is not one of the cores and can operate independently of the cores), and can communicate through a network interface with a system administrator or a remote server. In the description above, the OS, core microcode, and BIOS are examples of in-band agents; the ME and the BMC are examples of out-of-band agents. Embodiments of the invention allow an NVRAM region to be shared by two or more agents; e.g., an in-band agent and an out-of-band agent, such that errors in an NVRAM region owned by the in-band agent can be resolved by the out-of-band agent, since the microcontroller running the out-of-band agent can operate independently of the cores that run the in-band agent.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1","b":["100","100","118","118"]},"In one embodiment, agents  are coupled to an NVRAM controller  that performs an access control function for an NVRAM . NVRAM  can be partitioned into a number of regions, with each region accessible by one or more of agents . Some of the regions (e.g., region  and the other regions) can be overlapping and some (e.g., region  and region ) are not. In the example of , region  may be accessible by Agent A, region  by Agent B, region  by Agent C, etc. In one embodiment, NVRAM  is coupled to a range mapping logic . When one of agents  attempts to access data in NVRAM , the agent asserts an agent identity to NVRAM controller . Range mapping logic  decodes the agent identity to determine which NVRAM region is accessible to the requesting agent.","In one embodiment, range mapping logic  performs range mapping by consulting an access control vector (ACV) table . In one embodiment, ACV table  is stored in an internal memory of NVRAM controller . Alternatively, ACV table  may be stored outside of NVRAM controller  and accessible by the NVRAM controller . Each entry in ACV table  is an N-tuple vector (referred to as an ACV) that describes the attributes associated with an agent identity. For example, an ACV can include (Agent identity, Read (Y\/N), Write (Y\/N), Executable (Y\/N), Range Base, Range Length, Encryption (Y\/N), Shareable (Y\/N), Lock (YIN)). Alternative embodiments of the ACV may include more or fewer attributes. For example, an ACV having the attributes of (Agent A, Y, N, Y, Addr, Len, Y, Y, Y) indicates that the NVRAM region in the address range (Addr, Addr+Len) is read-only and executable by Agent A, requires encryption prior to storing data therein, is shareable with other agents (e.g., an out-of-band agent such as the BMC or ME), and is locked from write access by other agents.","In one embodiment, the agent identity is a unique identifier that identifies an agent. For in-band agents, this unique identifier can be the agent's type (e.g., Agent A-E). For an out-of-band agent, this unique identifier can be a bus address (e.g., a serial peripheral interface (SPI) bus), which can be passed to NVRAM controller  with the agent's access request by a platform controller hub (PCH) (not shown) in the I\/O subsystem of computer system . In one embodiment, the attribute \u201cshareable\u201d can further indicate whether it is read shareable, write shareable, or a combination of both. In one embodiment, the attribute \u201cLock\u201d can further indicate whether an NVRAM region can be permanently locked or non-permanently locked. A permanent lock, once locked, stays locked across power cycles. A non-permanent lock can be reset (i.e., unlocked) whenever the system is reset.","In one embodiment, NVRAM controller  is also coupled to an encryption logic  that encrypts data before being stored into NVRAM . Encryption prevents unauthorized access by malicious parties. For example, a malicious party may lift the lid off an NVRAM package integrated on the processor package, de-solder the NVRAM package from a system board, or remove the NVRAM dual inline memory module (DIMM) from the system. Encrypting the NVRAM contents prevents malicious parties from launching a Cyber 9-1-1 or day-0 attack on the platform hardware. In one embodiment, encryption can be optional. The attribute \u201cEncryption\u201d in an ACV indicates whether the data stored in an NVRAM region is encrypted.","In one embodiment, ACV table  can be implemented by RAM or other high-speed programmable memory. Agents  can have different privilege levels. An agent with a high privilege (e.g., the core microcode) can configure ACV table  when computer system  starts up for the first time. To configure ACV table , an agent needs to prove its identity to NVRAM controller  by providing its credential. The credential can be a secret key, such as a private key, which can be verified by NVRAM controller  using a corresponding public key. If the agent's credential is verified, NVRAM controller  performs administrative actions to populate ACV table . In an alternative embodiment, ACV table  can be implemented by re-programmable ROM (e.g., electrically-erasable programmable ROM (EEPROM)), or other programmable hardware, and can be remotely programmed by an authorized server at system startup time. The authorized server may be controlled or owned by a manufacturer of computer system , a third-party authority, or any authority that holds the rights to configure ACV table . In one embodiment, a microcontroller (e.g., the ME) can send the credentials of the system to the authorized server via a network connection, and receive configuration data upon successful authentication. When computer system  boots for the first time, its BIOS can program ACV table  using the configuration data received from the authorized server.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 2","FIG. 2"],"b":["221","222","200","200","220","110","130","250","221","110","221","200","222","270","110","222","222","230","250","135","110","222","110","222","240","260"]},"In the embodiment of , NVRAM controller  is shown to be located on processor . In alternative embodiments, NVRAM controller  can be co-located with NVRAM  on a card\/riser\/mezzanine, as shown in .",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIGS. 3A and 3B","FIG. 3A"],"b":["132","132","131","201","110","132","130","132","130","132","130"]},"In an alternative embodiment shown in , NVRAM controller  may be located off-die or off-CPU package, coupled to processor  or CPU package  over a bus such as a memory bus (like a DDR bus (e.g., a DDR3, DDR4, etc)), a PCI express bus, a desktop management interface (DMI) bus, or any other type of bus. In one embodiment, NVRAM controller  can be located on the same physical modules (e.g., cards, risers, mezzanines, dual-in-line memory modules (DIMM), etc.) as NVRAM . In both embodiments, all access requests from in-band agents and out-of-band agents go through NVRAM controller  before a request for accessing NVRAM  can be granted. In some embodiment, NVRAM  can be coupled to processor  via a high-speed link that follows the same protocol as the inter-processor protocol (e.g., HyperTransport 3.0, Quick-Path Interconnect (QPI) 1.1 and its variants, and the like). In these embodiments, NVRAM controller  can communicate with NVRAM  using the protocols defined for these high-speed links.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 4","b":["400","132","401","132","158","402","158","407","132","403","407","132","404","407","132","132","132","405","132","406","400","401"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 5","b":["500","130","500","500","130","130","130"]},"In one embodiment, NVRAM  can be configured to implement the roles in a typical platform storage hierarchy as one or more of the following: cache, system memory (also known as main memory, primary memory, executable memory), storage (also known as secondary storage and mass storage), and firmware memory (such as boot memory (also known as BIOS flash), Trusted Platform Module (TPM) memory, and the like). Platform storage hierarchies with different roles are also contemplated and the application of NVRAM  is not limited to the roles described above.","NVRAM  is distinguishable from other instruction and data memory\/storage technologies in terms of its characteristics and\/or its application in the platform storage hierarchy. For example, NVRAM  is different from:","1) static random access memory (SRAM) applied as a cache dedicated to a processor core or shared by multiple processor cores;","2) higher speed memory (e.g., dynamic random access memory (DRAM)) applied as one or more caches internal to the processor (e.g., on the same die as the processor) and\/or external to processor (e.g., on the same or a different package from the processor);","3) flash memory\/magnetic disk\/optical disc applied as drive storage; and memory such as flash memory or read only memory (ROM) applied as boot ROM.","NVRAM (e.g., NVRAM ) in one embodiment of the invention has the following characteristics:","1) non-volatile (it maintains its content even if power is removed, similar to flash memory used in solid state disks (SSD), and different from SRAM and DRAM which are volatile);","2) lower power consumption than volatile memories such as SRAM and DRAM;","3) random access (also known as randomly addressable);","4) rewritable and erasable at a lower level of granularity (e.g., byte level) than flash found in SSDs (which can only be rewritten and erased a \u201cblock\u201d at a time\u2014minimally 64 Kbyte in size for NOR flash and 16 Kbyte for NAND flash);","5) usable as a system memory and allocated all or a portion of the system address space;","6) capable of being coupled to the processor over a bus using a transactional protocol (a protocol that supports transaction identifiers (IDs) to distinguish different transactions so that those transactions can complete out-of-order) and allowing access at a level of granularity small enough to support operation of the NVRAM as system memory (e.g., cache line size such as 64 or 128 byte). For example, the bus may be a memory bus (e.g., a DDR bus such as DDR3. DDR4, etc.) over which is run a transactional protocol as opposed to the non-transactional protocol that is normally used. As another example, the bus may one over which is normally run a transactional protocol (a native transactional protocol), such as a PCI express (PCIE) bus, desktop management interface (DMI) bus, or any other type of bus utilizing a transactional protocol and a small enough transaction payload size (e.g., cache line size such as 64 or 128 byte); and\n\n7) one or more of the following:\n","(a) faster write speed than current non-volatile memory\/storage technologies (such as flash);","(b) very high read speeds (faster than flash and near or equivalent to DRAM read speeds);","(c) directly writable (rather than requiring erasing (overwriting with 1s) before writing data like flash memory used in SSDs); and\/or","(d) orders of magnitude (e.g., 2 or 3) higher write endurance before failure (more than boot ROM and flash used in SSDs).","As mentioned above, in contrast to flash memory, which must be rewritten and erased a complete \u201cblock\u201d at a time, the level of granularity at which NVRAM is accessed in any given implementation may depend on the particular memory controller and the particular memory bus or other type of bus to which the NVRAM is coupled. For example, in some implementations where NVRAM  is used as system memory, NVRAM may be accessed at the granularity of a cache line (e.g., a 64-byte or 128-byte cache line), notwithstanding an inherent ability to be accessed at the granularity of a byte, because cache line is the level at which the memory subsystem accesses memory. Thus, when NVRAM is deployed within a memory subsystem, it may be accessed at the same level of granularity as the DRAM (e.g., the \u201cnear memory\u201d) used in the same memory subsystem. Even so, the level of granularity of access to the NVRAM by the memory controller and memory bus or other type of bus is smaller than that of the block size used by flash and the access size of the I\/O subsystem's controller and bus.","NVRAM  may be used as instruction and data storage that has sufficiently short access time requirements to cause little impact on the processors. Here, program instructions and data may be loaded into NVRAM  from deeper, flash\/magnetic\/optical mass storage  prior to being executed by the processors. Moreover, as described in detail below, NVRAM  may be placed on a memory bus and may communicate directly with a memory controller that, in turn, communicates directly with the processors.","The presence of the new memory technology for NVRAM  provides for a wealth of new possibilities. Although discussed at much greater length further below, some of these possibilities are quickly highlighted immediately below.","According to one possible implementation, NVRAM  acts as a total replacement or supplement for traditional DRAM technology in system memory. In one embodiment, NVRAM  represents the introduction of a second-level system memory (e.g., system memory is as a combination of DRAM  and some or all of NVRAM ). As such, the system memory may be viewed as having a near memory part NM A and a far memory part FM . It is appreciated that in different embodiments, a near memory can serve as a memory-side cache (e.g., near memory B acting as cache), a scratch pad, and other roles that are different from the system memory.","According to some embodiments, NVRAM  provides NVRAM storage , which acts as a total replacement or supplement for traditional mass storage, e.g., flash\/magnetic\/optical mass storage . The term \u201ctraditional mass storage\u201d in the application refers to mass storage that is based on optical, magnetic and\/or flash technology, such as disk and flash memory. For simplicity of the discussion, flash\/magnetic\/optical mass storage  is also referred to as traditional mass storage . Thus, the non-volatile mass storage for computing system  may be implemented using NVRAM, flash memory, magnetic storage, or any combination thereof. In an embodiment where NVRAM storage  acts as a total replacement for traditional mass storage , it is not necessary to use storage drivers for block-addressable storage access. The removal of storage driver overhead from storage access can increase access speed and save power. In alternative embodiments where it is desired that NVRAM storage  appears to the OS and\/or applications as block-accessible and indistinguishable from traditional mass storage , emulated storage drivers can be used to expose block-accessible interfaces (e.g., Universal Serial Bus (USB) Bulk-Only Transfer (BOT) 1.0, Serial Advanced Technology Attachment (SATA) 3.0, and the like) to the software for accessing NVRAM storage . That is, the byte addressability of NVRAM  can be used by the storage driver to move blocks of NVRAM storage  and emulate block accessible mass storage without incurring the cost of I\/O interfaces in these alternative embodiments.","According to some embodiments, NVRAM  provides firmware memory  (e.g., firmware memory for the BIOS, TPM , ME , etc.). Firmware memory  can act as a total replacement or supplement for firmware memory such as BIOS flash  and TPM flash . Firmware memory  is commonly implemented with flash technology and commonly stores the initial instructions (e.g., BIOS) executed by a processor to initialize key system components during a boot process. Firmware memory can also store system persistent states used by TPM  to protect sensitive system information (e.g., encryption keys). In one embodiment, the use of NVRAM  for firmware memory  removes the need for third party flash parts to store code and data that are critical to the system operations.","It should be understood that NVRAM  can include more or fewer partitions than what is shown in . The choice of memory and storage devices may depend on the type of platform on which the devices are used. For example, in a personal computer, tablet computer, notebook computer, mobile device (e.g., smartphone or PDA), the non-volatile mass storage may be implemented using NVRAM storage  alone, or using NVRAM storage  in combination with flash\/magnetic storage. In other implementations (e.g., large-scale servers), the non-volatile mass storage may be implemented using magnetic storage (e.g., hard drives) or any combination of magnetic storage, flash, and NVRAM storage . In such a case, computer system hardware and\/or software responsible for storage may implement various intelligent persistent storage allocation techniques to allocate blocks of persistent program code and data between the FM \/NVRAM storage  and traditional mass storage  in an efficient or otherwise useful manner. In some embodiments, NVRAM  may become the sole memory\/storage device off chip (i.e., off the processor chip). In some embodiments, instead of or in addition to the off-chip DRAM , DRAM  may be provided on chip as near memory; for example, as NM B acting as cache. These embodiments can be specifically relevant to very small platforms (e.g., smartphone or PDA), where multiple memory classes\/technologies may be cost prohibitive and more transistors (including storage) can be placed on chip.","The NVRAM  may incorporate \u201cwear leveling\u201d algorithms to account for the fact that the storage cells at the far memory level begin to wear out after too many write accesses. Since high cycle count blocks are most likely to wear out in this manner, wear leveling spreads writes across the far memory cells by swapping addresses of high cycle count blocks with low cycle count blocks. Note that most address swapping is typically transparent to the end user because it is handled by hardware, software (e.g., a low level driver or operating system), or a combination.","In one embodiment, NVRAM  can be implemented with a non-volatile random access memory such as PCM or, more specifically, PCMS (also known as (PRAM or PCRAM), Ovonic Unified Memory (OUM), (CRAM). Other possible technology choices for far memory include, but are not limited to byte-addressable persistent memory (BPRAM), storage class memory (SCM), universal memory, Ge2Sb2Te5, Programmable metallization cell (PMC), Resistive memory (RRAM), RESET (amorphous) cell, SET (crystalline) cell, PCME, Ovshinsky, ferroelectric memory (also known as polymer memory and poly(N-vinylcarbazole)), ferromagnetic memory (also known as Spintronics, SPRAM (spin-transfer torque RAM), STRAM (spin tunneling RAM), Magnetoresistive, Magnetic memory, and Magnetic random access memory (MRAM)), and Semiconductor-oxide-nitride-oxide-semiconductor (SONOS, also know dielectric memory).","For convenience of explanation, the description herein sometimes refers to \u201cPCM\u201d or \u201cPCMS\u201d as the technology selection for NVRAM . As such, the terms NVRAM, PCM and PCMS may be used interchangeably. However it should be realized, as discussed above, that different technologies may also be utilized for NVRAM .","Continuing then with a discussion of the system of , in some embodiments, the architecture of computer system  may include multiple processors, although a single processor  is illustrated in  for simplicity. Processor  may be any type of data processor including a general purpose or special purpose central processing unit (CPU), an application-specific integrated circuit (ASIC) or a digital signal processor (DSP). For example, processor  may be a general-purpose processor, such as a Core\u2122 i3, i5, i7, 2 Duo and Quad, Xeon\u2122, or Itanium\u2122 processor, all of which are available from Intel Corporation, of Santa Clara, Calif. Alternatively, processor  may be from another company, such as ARM Holdings, Ltd, of Sunnyvale, Calif., MIPS Technologies of Sunnyvale, Calif., etc. Processor  may be a special-purpose processor, such as, for example, a network or communication processor, compression engine, graphics processor, co-processor, embedded processor, or the like. Processor  may be implemented on one or more chips included within one or more packages. Processor  may be a part of and\/or may be implemented on one or more substrates using any of a number of process technologies, such as, for example, BiCMOS, CMOS, or NMOS.","In one embodiment, the processor  includes an integrated graphics unit  which includes logic for executing graphics commands such as 3D or 2D graphics commands. While the embodiments of the invention are not limited to any particular integrated graphics unit , in one embodiment, the graphics unit  is capable of executing industry standard graphics commands such as those specified by the Open GL and\/or Direct X application programming interfaces (APIs) (e.g., OpenGL 4.1 and Direct X 11).","Processor  may also include one or more cores , although a single core  is illustrated in , again, for the sake of clarity. In many embodiments, core  includes internal functional blocks such as one or more execution units, retirement units, a set of general purpose and specific registers, etc. If core  is multi-threaded or hyper-threaded, then each hardware thread may be considered as a \u201clogical\u201d core as well. The cores  may be homogenous or heterogeneous in terms of architecture and\/or instruction set. For example, some of the cores may be in order while others are out-of-order. As another example, two or more of the cores may be capable of executing the same instruction set, while others may be capable of executing only a subset of that instruction set or a different instruction set.","Processor  may also include one or more caches, such as cache  which may be implemented as a SRAM and\/or a DRAM. In many embodiments that are not shown, additional caches other than cache  are implemented so that multiple levels of cache exist between the execution units in the core(s)  and memory devices A and . For example, the set of shared cache units may include an upper-level cache, such as a level 1 (L1) cache, mid-level caches, such as level 2 (L2), level 3 (L3), level 4 (L4), or other levels of cache, a last level cache (LLC), and\/or different combinations thereof. In different embodiments, cache  may be apportioned in different ways and may be one of many different sizes in different embodiments. For example, cache  may be an 8 megabyte (MB) cache, a 16 MB cache, etc. Additionally, in different embodiments the cache may be a direct mapped cache, a fully associative cache, a multi-way set-associative cache, or a cache with another type of mapping. In other embodiments that include multiple cores, cache  may include one large portion shared among all cores or may be divided into several separately functional slices (e.g., one slice for each core). Cache  may also include one portion shared among all cores and several other portions that are separate functional slices per core. In one embodiment, cache  may include a DRAM NM B acting as cache.","Processor  may also include a home agent  which includes those components coordinating and operating core(s) . The home agent unit  may include, for example, a power control unit (PCU) and a display unit. The PCU may be or include logic and components needed for regulating the power state of the core(s)  and the integrated graphics unit . The display unit is for driving one or more externally connected displays.","In some embodiments, processor  includes integrated memory controller (IMC)  to provide an interface for communicating with a memory and storage subsystem . More specifically, in one embodiment, IMC  contains logic necessary for reading from, writing to and refreshing DRAM . IMC  can be on the same chip as processor , or on a separate chip and\/or package connected to processor .","In some embodiments, processor  is coupled to an I\/O subsystem . I\/O subsystem  enables communication between processor  and the following serial or parallel I\/O devices: one or more networks  (such as a Local Area Network, Wide Area Network or the Internet), storage I\/O device (such as flash\/magnetic\/optical mass storage , BIOS flash , TPM flash ) and one or more non-storage I\/O devices  (such as display, keyboard, speaker, baseboard management controller (BMC), and the like). I\/O subsystem  may include a platform controller hub (PCH) (not shown) that further includes several I\/O adapters  and other I\/O circuitry to provide access to the storage and non-storage I\/O devices and networks. To accomplish this, I\/O subsystem  may have at least one integrated I\/O adapter  for each I\/O protocol utilized. I\/O subsystem  can be on the same chip as processor , or on a separate chip\/package connected to processor .","I\/O adapters  translate a host communication protocol utilized within the processor  to a protocol compatible with particular I\/O devices. For traditional mass storage , some of the protocols that I\/O adapters  may translate include Peripheral Component Interconnect (PCI)-Express 3.0, Universal Serial Bus (USB) 3.0, Serial Advanced Technology Attachment (SATA) 3.0, Small Computer System Interface (SCSI), Redundant Array of Inexpensive Disks (RAID) and 1394 \u201cFirewire,\u201d among others. For BIOS flash , some of the protocols that I\/O adapters  may translate include Serial Peripheral Interface (SPI), Microwire, among others. Additionally, there may be one or more wireless protocol I\/O adapters. Examples of wireless protocols are Bluetooth 4.0, IEEE 802.11-based wireless protocols, and cellular protocols, among others.","In some embodiments, I\/O subsystem  also includes a Management Engine (ME) , which is a microprocessor (equivalently, a microcontroller) that allows a system administrator to monitor, maintain, update, upgrade, and repair computer system . In one embodiment, a system administrator can remotely configure computer system  through ME  via networks . In one embodiment, the configuration can be stored in a decode table  within processor . Decode table  can be read by IMC  and I\/O subsystem , which then decide where a data access request from cores  should be directed.","In some embodiments, computer system  includes a Trusted Platform Module (TPM)  to control access to system persistent states, such as secure data, encryption keys, platform configuration information and the like. In one embodiment, these system persistent states can be stored in NVRAM firmware , which can be implemented with PCM-based memory such as PCMS.","In one embodiment, TPM  is a secure microcontroller with cryptographic functionalities. TPM  has a number of trust-related capabilities; e.g., a \u201cseal\u201d capability for ensuring that data protected by a TPM is only available for the same TPM. TPM  can protect data and keys (e.g., secrets) using its encryption capabilities. In one embodiment. TPM  has a unique and secret RSA key (which is generated based on the RSA algorithm developed by Ron Rivest, Adi Shamir and Leonard Adleman), which allows it to authenticate hardware devices and platforms. For example, TPM  can verify that a system seeking access to data stored in computer system  is the expected system. TPM  is also capable of reporting the integrity of the platform (e.g., computer system ). This allows an external resource (e.g., a server on a network) to determine the trustworthiness of the platform but does not prevent access to the platform by the user.","In one embodiment, ME  and TPM  can be located on one or more chipsets off processor die but on the same CPU package (as shown with a dotted line separating I\/O subsystem  from processor ). This chipset configuration can be suitable for server platforms. In alternative embodiments, ME  and TPM  can be located within the processor die in a system-on-a-chip (SOC) configuration. The SOC configuration is suitable for mobile platforms and other portable systems.","It should be understood that a computer system can utilize NVRAM  for system memory, mass storage, firmware memory and\/or other memory and storage purposes even though its processor does not have all of the above-described components of processor , or has more components than processor .","In one embodiment, computer system  includes NVRAM controller  to control data access to NVRAM , as described above in . NVRAM controller  is coupled to IMC  and I\/O subsystem . NVRAM controller  can read the configuration data from decode table , or alternatively, can rely on the decoding results passed from IMC  and I\/O subsystem . In an embodiment where NVRAM  is implemented with PCMS, NVRAM controller  is a PCMS controller that performs byte-level access with protocols consistent with the PCMS technology.","Although IMC  and NVRAM controller  can be two discrete controllers (as shown in  with a dotted line separating the two controllers), in some embodiments these two controllers can be implemented as one combined controller to control the access to memory and storage. In alternative embodiments, NVRAM controller  can be co-located with NVRAM  (as shown in ) to control the access to the NVRAM memory cells. In these alternative embodiments, an NVRAM interface (not shown) can be provided on processor  to interface with NVRAM .","In some embodiments, NVRAM  may be the sole memory\/storage device off chip (i.e., off the processor chip). In some embodiments, instead of the off-chip DRAM , DRAM may be used to provide an on-chip cache (e.g., NM B acting as cache). These embodiments can be specifically relevant to very small platforms (e.g., smartphone or PDA), where multiple memory classes\/technologies may be cost prohibitive and more transistors (including storage) can be placed on chip.","It should be understood that the operations of the flow diagram  can be performed by the embodiment of , as well as embodiments other than those shown in these figures. Additionally, the embodiments discussed with reference to  and  can perform different operations than those discussed with reference to the flow diagram of .","The techniques shown in the flow diagrams of  can be implemented using instructions and data stored on non-transitory machine-readable or computer-readable media, such as non-transitory machine-readable or computer-readable storage media (e.g., magnetic disks; optical disks; random access memory; read-only memory; flash memory devices; and phase-change memory).","Embodiments of the invention may also be provided as a computer program product which may include a non-transitory machine-readable medium having stored thereon instructions which may be used to program a computer (or other electronic device) to perform a process. The non-transitory machine-readable medium may include, but is not limited to, floppy diskettes, optical disks, CD-ROMs, and magneto-optical disks, ROMs, RAMs, EPROMs, EEPROMs, magnet or optical cards, propagation media or other type of media\/machine-readable medium suitable for storing electronic instructions. Embodiments of the invention may also be downloaded as a computer program product, wherein the program may be transferred from a remote computer (e.g., a server) to a requesting computer (e.g., a client) by way of data signals embodied in a carrier wave or other propagation medium via a communication link (e.g., a modem or network connection).","While the invention has been described in terms of several embodiments, those skilled in the art will recognize that the invention is not limited to the embodiments described, can be practiced with modification and alteration within the spirit and scope of the appended claims. The description is thus to be regarded as illustrative instead of limiting."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The following description and accompanying drawings are used to illustrate embodiments of the invention. In the drawings:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
