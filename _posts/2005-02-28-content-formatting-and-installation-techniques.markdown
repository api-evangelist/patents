---
title: Content formatting and installation techniques
abstract: Content formatting and installation techniques are described. In an implementation, a method includes receiving one or more inputs for initiating an installation process of one or more content items and performing the installation process without user intervention. The performing of the installation process includes obtaining a content package, from over a network, which includes a manifest which describes a content type for each of the content items. Each of the content items is installed for use by an application module based on a respective content type.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08341531&OS=08341531&RS=08341531
owner: Microsoft Corporation
number: 08341531
owner_city: Redmond
owner_country: US
publication_date: 20050228
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","CONCLUSION"],"p":["The present application claims priority under 35 U.S.C. \u00a7119(e) to U.S. Provisional Patent Application No. 60\/614,821, filed Sep. 30, 2004, the disclosure of which is hereby incorporated by reference in its entirety.","The present invention generally relates to the field of content and more particularly relates to systems, methods, apparatus, and computer-readable media for content formatting and installation techniques.","Users have access to a wide range of application modules that can provide a wide variety of functionality. For example, the user may utilize one or more application modules to play audio content, browse the Internet, instant message another user, send and receive email, take notes, draft a document, create a presentation, and so on. Thus, the user may interact with a wide variety of application modules during a given day.","To make interaction with the application modules more appealing, one or more of the application modules may be \u201cpersonalized\u201d by the user, such as by including content which is selected by the user for use during execution of the application module. For example, a user may choose a graphic for display in a background of a user interface, an emoticon for use in an instant messaging session, and so on. However, obtaining personalized content (i.e., the content selected by the user) for use by the application module and configuring the application module to use the content may be cumbersome. For example, multiple steps may be performed by a user to import a picture from a web site, such as by selecting and saving the picture from the web site, locating where the picture is saved, importing the picture into the application module, and so on. Additionally, the steps needed to be performed may be different for each type of application module available to the user. Further, the user may be exposed to \u201cuntrustworthy\u201d content which may adversely affect the execution of the application module. Therefore, because of this complexity and the potential harm that may be caused, the user may often forgo adding personalized content altogether, thereby diminishing the user's experience with the application modules.","Therefore, there is a continuing need for techniques that may be employed for content formatting and installation.","Content formatting and installation techniques are described. In an implementation, a method includes receiving one or more inputs for initiating an installation process of one or more content items and performing the installation process without user intervention. The performing of the installation process includes obtaining a content package, from over a network, which includes a manifest which describes a content type for each of the content items. Each of the content items is installed for use by an application module based on a respective content type.","In another implementation, a method includes initiating an installation process for installing content items on a client without user intervention. The initiating includes determining whether a content provider of the content items is trusted through comparison with a content provider list. If the content provider is trusted, a content package is obtained from over a network which includes the one or more content items and a manifest which describes a content type for each of the content items. Each of the content items is installed based on a respective said content type for use by an application module on the client.","The same numbers are used in instances in the disclosure and figures to reference like components and features.","Overview","Content formatting and installation techniques are described. Users may desire to add a variety of content to \u201cpersonalize\u201d interaction with an application module. For instance, the application module may be configured as a messenger module that, when executed, provides an instant messaging session with another user. The messenger module may provide a variety of customization and personalization features, such as images that may be selected by the user for display during an instant messaging session. However, traditional processes utilized to install images may be cumbersome in that the processes may involve a great deal of user interaction. For example, a traditional technique utilized to import an image from a web site required the user to right-click the picture, save the image to a hard disk of a computing device, remember the location, select the messenger module, open a display image dialog box, select a \u201cbrowse\u201d button, browse to the correct location of the image on the hard disk, import the image, select the image, and then acknowledge that importation of the image is desired by selecting an \u201cok\u201d button. Thus, this process may be so cumbersome that even a user that is \u201csavvy\u201d to the operation of the computing device may decide that it is not worth the perceived complications required by each manual step to install the content.","In an implementation, techniques are described which provide for installation of content into an application module, such as pictures, background images, emoticons (e.g., \u201csmileys\u201d), themes, and so on. The architecture may be configured in a variety of ways to provide this functionality. For example, the architecture may include two components that work together: (1) a standardized format for representing content which is referred to in the following discussion as a \u201ccontent package\u201d; and (2) a control which is installable as a part of the application module to install the represented content which is referred to in the following discussion as a \u201ccontent manager module\u201d.","The content package may be utilized to provide a variety of functionality. For example, the content package may support arbitrary content types through use of multiple namespaces; may include different types of content for simultaneous installation from a single content package; may support nesting such that multiple content packages can be nested to support aggregation of content; and so on. Further discussion of the generation of a content package and installation of content from the content package may be found in relation to ,  and .","The content manager module may also be utilized to provide a wide variety of functionality. For example, the content manager module may be executed to install content directly from a link on a webpage into an application module that is being executed without further interaction from a user. For instance, a content provider may purchase rights to \u201cskin\u201d clients with a particular theme for a period of time. Therefore, each client which logs on to the content manager module during that period of time may be \u201cskinned\u201d with the particular theme, such as wallpaper, emoticons, and so on. Thus, the content manager module may provide a revenue stream by selling installation rights to this content. Additionally, the content manager module may limit which content may be obtained for installation in the application module through use of a content provider list which references \u201ctrusted\u201d content providers. Further discussion of management of the content provider list and an installation process that is performed utilized the content provider list may be found in relation to ,  and .","The architecture may be implemented for use in a variety of environments, an example of which is an instant messaging environment. The architecture in this example provides an infrastructure to enable efficient download and importation of content for use during an instant messaging session. For example, the architecture may support installation of a content package which may include an individual image, a plurality of content items, or even another content package. The architecture may also provide an extensible design to support new content types without requiring update of the content manager module itself, provide digital rights management (DRM), and may be optimized to reduce the amount of interaction (e.g., number of \u201cclicks\u201d) which are performed by the user to complete the installation.","A user, for example, may sign onto an instant messenger service and see a promotion for a theme, e.g., a new movie release. The user may then \u201cclick\u201d a link which causes content that is configured to reflect the theme (e.g., pictures of actors, scenes, and so on) to be automatically installed without further user intervention, further discussion of which may be found in relation to . In another example, a user may participate in an instant messaging session, open a dropdown menu, and select a link to obtain additional content (e.g., emoticons) which are downloaded automatically in response to selection of the link. In a further example, a user may browse to a web site, notice a particular image, and select (i.e., \u201cclick\u201d) a link to download and import the particular image.","By providing an efficient technique to install content, users are more likely to avail themselves of personalized content, thereby providing a large potential market for the sale and distribution of content by content providers. For instance, provision of personalized content may be monetized, such as by downloading themes from a content provider relating to an upcoming movie. Although this architecture is described in relation to an instant messaging environment, this architecture may be employed in a wide variety of other environments without departing from the spirit and scope thereof, further discussion of which may be found in relation to . In the following discussion, an exemplary environment which is operable to employ the content formatting and installation techniques is described. Exemplary procedures are then described which may be implemented in the exemplary environment, as well as in a variety of other environments.","Exemplary Environment",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1","b":["100","100","102","104","1","104","104","106","104","1","104","106","104","1","104","104","1","104","104","1","104","104","1","104"],"i":["m","n"]},"Although the network  is illustrated as the Internet, the network may assume a wide variety of configurations. For example, the network  may include a wide area network (WAN), a local area network (LAN), a wireless network, a public telephone network, an intranet, and so on. Further, although a single network  is shown, the network  may be configured to include multiple networks. For instance, client () and client (N) may be communicatively coupled, one to another, via a peer-to-peer network. Additionally, each of the plurality of clients ()-(N) may be communicatively coupled to the content provider () over the Internet. A wide variety of other instances are also contemplated.","Each of the plurality of clients (), (), (N) is illustrated as including a respective one of a plurality of application modules (), (), (N). The application modules ()-(N) may be configured in a variety of ways. For example, one or more of the application modules ()-(N) may be configured to provide functionality directly to a user, such as to play audio content, instant message another user, send and receive email, take notes, generate a document (e.g., a word processor) or a spreadsheet, create a presentation, browse the Internet, and so on. Additionally, one or more of the application modules ()-(N) may be configured to provide content for another client, such as a web application that is executed on one client (e.g., client ()) to provide content to another client (e.g., client (N)). Further, one or more of the application modules ()-(N) may be configured to provide a software \u201cinfrastructure\u201d of the clients (), such as an operating system","Each application module (), (), (N) is also illustrated as including a respective content manager module (), (), (N). The content manager modules ()-(N) are executable to provide a bridge between the content provider () and the respective application module ()-(N). For example, the content manager module () may be installed with the application module () and instantiated by the content providers (). Additionally, the content manager module () may support a method (which may be referred to as \u201cInstallContent\u201d) which communicates with the application module (). The content manager module (), for instance, communicates a uniform resource locator (URL) to the application module () to download one or more of a plurality of content (), where \u201cj\u201d can be any integer from one to \u201cJ\u201d. The application module () is executable to download content from the URL, parse the content, and install each item of content for utilization by the application module ().","The plurality of content () may be configured in a variety of ways for communication to the clients ()-(N). For example, one or more items of content () may be formatted in one of a plurality of content packages (), where \u201ck\u201d can be any integer from one to \u201cK\u201d. Each content package () includes a manifest () which describes content that is available in that content package (), (e.g., such as metadata associated with individual files in the content package (), metadata associated with a plurality of files in the content package (), and so on), as well as other () information. The content package () may employ a namespace to reference different content types. Additionally, the namespace employed by the content package () may be extended, such as to include future content types. Content () included in the content package () may be formatted as one or more files, which may be self-describing or \u201cpoint to\u201d another resource. Further discussion of exemplary formatting which may be employed for the content package () may be found in relation to .","To protect against the use of \u201cuntrustworthy\u201d content by the clients ()-(N), each client (), (), (N) may include a respective one of a plurality of content provider lists (), (), (N). Content provider list (), for example, may describe whether one or more of the plurality of content providers () is \u201ctrusted\u201d. Therefore, the client (), through use of the content provider list (), may determine whether desired content is from a trusted source. For example, the application module () may compare a URL of a content provider () selected by a user with the content provider list () to determine if the content provider () is trustworthy. If so, the application module () may be executed to obtain the content (), such as one or more content packages () and\/or content that is not formatted in a content package ().","The content provider lists ()-(N) may be obtained in a variety of different ways. For example, client () may generate the content provider list () based on observed interaction of the client () with the plurality of content providers (). In another example, the content provider list () may be communicated from a list provider . The list provider , for instance, may be accessible over the network  and function as a centralized repository for the plurality of content provider lists (), where \u201cg\u201d can be any integer from one to \u201cG\u201d. Therefore, the list provider  may dynamically update the content provider lists () and communicate a result of this update to the plurality of clients ()-(N).","Additionally, although each of the plurality of content provider lists ()-(N) is illustrated as stored locally on a respective one of the plurality of clients ()-(N), the content provider lists ()-(N) may be maintained on the list provider . For instance, the client () may communicate a request to the list provider  which includes a URL of the content provider (), from which, the client () wishes to obtain content. The list provider  may then process the request utilizing the plurality of content provider lists () and return a result to the client () which indicates whether the content provider () is \u201ctrusted\u201d. It should be noted that by maintaining a list of acceptable content providers separately (e.g., either locally on the client () and\/or remotely on the list provider ), the content provider lists ()-(N) may be updated without interfering with the content manager modules ()-(N) or the application modules ()-(N) themselves.","Generally, any of the functions described herein can be implemented using software, firmware (e.g., fixed logic circuitry), manual processing, or a combination of these implementations. The terms \u201cmodule,\u201d \u201cfunctionality,\u201d and \u201clogic\u201d as used herein generally represent software, firmware, or a combination of software and firmware. In the case of a software implementation, the module, functionality, or logic represents program code that performs specified tasks when executed on a processor (e.g., CPU or CPUs). The program code can be stored in one or more computer readable memory devices, further description of which may be found in relation to . The features of the formatting and installation techniques described below are platform-independent, meaning that the techniques may be implemented on a variety of commercial computing platforms having a variety of processors.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 2","FIG. 1"],"b":["200","104","102","104","104"],"i":["n","m","n","n"]},"In the illustrated system , the plurality of application modules () of  are configured as a plurality of messaging modules (). The messaging modules ()-(N) are executable to communicate with each other through use of a messaging server . The messaging server , for instance, may include a messaging manager module  (hereinafter \u201cmanager module\u201d) which is executable thereon to route instant messages between the messaging modules (). For instance, the client () may execute the messaging module () to form an instant message for communication to another client () of . The messaging module () is executed to communicate the instant message to the messaging server , which then executes the manager module  to route the instant message to the client () over the network . The client () receives the instant message and executes a corresponding messaging module (e.g., application module () configured as a messaging module) to display the instant message. In another instance, when the clients (), () are communicatively coupled directly, one to another (e.g., via a peer-to-peer network), the instant messages are communicated without utilizing the messaging server .","The client (), content provider (), and the messaging server  are each illustrated as being implemented by a respective computing device. For example, content provider () is illustrated as implemented via a content server () and the client () is illustrated as a client device. The content server (), the client (), and the messaging server  each include a respective processor (), (),  and a respective memory (), (), . Processors are not limited by the materials from which they are formed or the processing mechanisms employed therein. For example, processors may be comprised of semiconductor(s) and\/or transistors (e.g., electronic integrated circuits (ICs)). In such a context, processor-executable instructions may be electronically-executable instructions. Alternatively, the mechanisms of or for processors, and thus of or for a computing device, may include, but are not limited to, quantum computing, optical computing, mechanical computing (e.g., using nanotechnology), and so forth. Additionally, although a single memory (), (),  is shown, respectively, for the content server (), the client (), and the messaging server , a wide variety of types and combinations of memory may be employed, such as random access memory (RAM), hard disk memory, removable medium memory, and so forth.","The messaging module () is illustrated as including the content manager module (). The content manager module () may be implemented in a variety of ways. For example, the content manager module () may be configured as an \u201cActiveX control\u201d that can be accessed from a web site of the content provider (). An ActiveX control is a software component based on a component object model (COM) and is configured for reuse by different application modules. The ActiveX control may be created in a variety of programming languages, such as Visual Basic, Visual C++, Java, and so on. Therefore, a content provider () which desires use of the content manager module () to install content on the client () may instantiate the control to be able to call methods exposed by the control. The content manager module () may expose a variety of methods, examples of which are discussed below.","HRESULT InstallContent([in] BSTR bstrURL)","This function may be called to download the content package () from a URL specified in the \u201cbstrURL\u201d parameter. The content manager module () may initiate an HTTP download to the given URL, and once the download has completed, the content package () may be unpacked and installed, further discussion of which may be found in relation to .","HRESULT InstallContentItem([in] BSTR bstrXMLDerscription)","This function may install a single piece of content in the messaging module (). The \u201cbstrXMLDescription\u201d may contain a piece of XML that describes the item, including the URL from which the content may be downloaded. The content manager module () may parse the XML, download the item and install it. In an implementation, the content file is not a content package () file, but the exact file type for the given content type (e.g., for backgrounds it may be an image file).","Event: void OnContentInstalled([in] long hrResult)","This event may be executed when content has been downloaded and installed. The \u201chrResult\u201d indicates if the download\/install was successful. Various error codes may be defined to identify different error cases.","The control (i.e., the content manager module ()) may be instantiated in a variety of ways. For example, a web site may include an object tag in the body as follows:",{"@attributes":{"id":"p-0051","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<OBJECT id=\u201cMessengerContentInstaller\u201d height=\u201c0\u201d width=\u201c0\u201d"},{"entry":"\u2003\u2003classid=\u201cclsid:F06608C7-1874-4EEA-B3B2-DF99EBB144B8\u201d"},{"entry":"\u2003\u2003codeType=\u201capplication\/x-oleobject\u201d VIEWASTEXT>"},{"entry":"<\/OBJECT>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<script language=\u201cjscript\u201d>"]},{"entry":[{},"\u2003\u2003function InstallContent( strURL )"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003\u2003MessengerContentInstaller.InstallContent(strURL);"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"<\/script>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{},"b":"114","i":"k"},{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<A href=\u201cjavascript:InstallContent(\u2018http:\/\/[domainname]\/[name of content"},{"entry":"file].CAB\u2019)\u201d>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{},"b":["110","114","112","114"],"i":["n","k","j","k"]},"In an implementation, the instantiation of the content manager module () is limited to \u201ctrustworthy\u201d content providers (). To enforce this, the content provider list () may include a list of a plurality of URLs (), where \u201ch\u201d can be any integer from one to \u201cH\u201d. For example, when the content manager module () is loaded (e.g., in a browser), it may identify the URL of the content provider () and send the identified URL to the messaging module () for validation. In this implementation, if the content manager module () is not instantiated for a valid URL, the application programming interface (API) methods of the content manager module () are disabled. For example, a valid URL may be defined as coming from the same domain. For instance, to install content from \u201cwww.example.com\u201d, the client may check to see if \u201chttp:\/\/www.example.com\/\u201d is included on the \u201callow\u201d list. A variety of other examples are also contemplated, such as digitally signed content based on a certification path, use of certificates, and so on.","As previously described, the content may be configured in a variety of ways, one of which is the content package (). One example of a content package () may be implemented utilizing a \u201ccabinet\u201d (CAB) format, which is supported by Windows platforms and provides an efficient way to form a single file from a group of files. The content package () may include the plurality of content () and the manifest () which describes properties of the content (). The manifest () may be configured in a variety of ways, such as an XML file which conforms to a schema\/format of having a <package> root tag with zero or more <item> tags inside it. The XML format is advantageous in that it is extensible and allows different attributes to be specified for different content types. Additionally, XML parsers and validation tools are available on a variety of operating system platforms. A particular file extension may be utilized to identify the content package () such that the purpose of the content package () is readily identifiable and may be registered, such as to allow the content package () to be \u201cdouble clicked\u201d for opening.","The <item> tags of the manifest () may be configured in a variety of ways. For example, each <item> tag may contain: (1) a \u201ctype\u201d attribute, which specifies a content type; (2) a \u201cmimetype\u201d attribute, which specifies a multipurpose internet mail extension (MIME) type of the item to distinguish between content types that can have more than one MIME type, (e.g., JPEG images vs. PNG images); and (3) a file attribute, which specifies a name of a related file for an item stored within the content package (). Some <item> and <package> tags may contain more than this base data. Therefore, XML namespaces may be utilized to extend the basic schema. For example, an emoticon namespace may extend the base namespace to support a display name of an emoticon, a key sequence to cause the emoticon to be sent, as well as a namespace prefix to resolve ambiguities with other emoticons.","Additionally, some <item> tags may point to another content package () nested within the content package. This may be used for dynamic display pictures and winks (which are described in greater detail later in the discussion), which may both use the content package () format themselves to include their content. For example, a wink may be formatted as a content package which includes a flash animation, a thumbnail, and metadata. More than one wink content package may then be embedded in another content package (e.g., to form a content package having emoticons which correspond to a particular theme), thereby allowing the client () to install more than one wink using a single content package.","The content package () that is downloaded from the content provider () may contain binaries of the content () as well as the manifest () configured as an XML file for describing the content (). The following sections describe in greater detail exemplary information which may be included in the content package (), and the behavior of the messaging module () once installation of the content () has been completed. It should be noted that some content types, e.g. display pictures, can have an image specified as a \u201cdefault\u201d. If default is equal to \u201ctrue\u201d for more than one image, the last one in the list is utilized. Further discussion of \u201cdefault\u201d content may be found in relation to the following section.","Display Picture ","A display picture  may be utilized as a graphical representation (e.g., an image) of the client () in an instant messaging session, and is commonly referred to as an \u201cavatar\u201d. When downloading a single image or a pack of images, each image may be checked until one of them which has been marked as the \u201cdefault\u201d image is found. If so, this marked image may become the client's () display picture for use during an instant messaging session. If no image has been specified, all images may be downloaded, with the \u201clast\u201d image being specified as the avatar.","In an implementation, if the client () has not selected an option in the messaging module () which specifies that the display picture  is to be output, the messaging module () may be reconfigured automatically to select the option. The assumption in this implementation is that when the client () navigates to a web site to download display pictures , it is likely that the client () wants to use them. The same behavior may apply if the display picture is part of a theme as described below. An example of XML content for the display picture  is as follows:",{"@attributes":{"id":"p-0062","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<package xmlns=\u201chttp:\/\/messenger.msn.com\/messengercontent\/1.0\u201d"},{"entry":"version=\u201c1.0\u201d type=\u201ctheme\u201d partnerid=\u201cCP\u201d>"},{"entry":"\u2003\u2003<item xmlns:usertile=http:\/\/messenger.msn.com\/usertile\/1.0"},{"entry":"\u2003\u2003contenttype=\u201cP\u201d contentid=\u201dAG34567\u201dusertile:version=\u201c1.0\u201d"},{"entry":"\u2003\u2003type=\u201cusertile\u201d mimetype=\u201cimage\/png\u201d file=\u201cusertile.png\u201d"},{"entry":"\u2003\u2003usertile:default=\u201ctrue\u201d usertile:displayname=\u201cPaul Joe\u201d \/>"},{"entry":"<\/package>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Dynamic Display Picture ","Dynamic display pictures may also be used as an \u201cavatar\u201d. However, in this instance the display picture is dynamic (e.g., animated), such as to indicate a change in mood depending on what text is entered on the client (). Since a dynamic display picture includes multiple elements, the dynamic display picture may be shipped as a content package. If the dynamic display picture is included as a part of a \u201ctheme\u201d, it may be transferred as a content package nested inside of another content package. The following is exemplary XML content having separate files for different moods:",{"@attributes":{"id":"p-0065","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<package xmlns=\u201chttp:\/\/messenger.msn.com\/messengercontent\/1.0\u201d"},{"entry":"version=\u201c1.0\u201d type=\u201cdynamicpicture\u201d"},{"entry":"xmlns:dynamicpicture=\u201chttp:\/\/mssenger.msn.com\/dynamicpicture\/1.0\u201d"},{"entry":"dynamicpicture:version=\u201c1.0\u201d dynamicpicture:displayname=\u201cBlack Cat\u201d"},{"entry":"partnerid=\u201dCP\u201d>"},{"entry":"\u2003\u2003<item type=\u201cdownlevel\u201d mimetype=\u201cimage\/png\u201d"},{"entry":"\u2003\u2003file=\u201cblackcat.png\u201d \/>"},{"entry":"\u2003\u2003<item dynamicpicture:default=\u201dtrue\u201d type=\u201cmood\u201d"},{"entry":"\u2003\u2003mimetype=\u201capplication\/x-shockwave-flash\u201d file=\u201chappycat.swf\u201d"},{"entry":"\u2003\u2003dynamicpicture:name=\u201cHappy\u201d dynamicpicture:emoticon=\u201c:)\u201d"},{"entry":"\u2003\u2003contenttype=\u201cP\u201d \/>"},{"entry":"\u2003\u2003<item type=\u201cmood\u201d mimetype=\u201capplication\/x-shockwave-flash\u201d"},{"entry":"\u2003\u2003file=\u201csadcat.swf\u201d dynamicpicture:name =\u201cSad\u201d"},{"entry":"\u2003\u2003dynamicpicture:keysequence=\u201c:(\u201d dynamicpicture:keysequence2=\u201c:-"},{"entry":"\u2003\u2003(\u201d contenttype=\u201cP\u201d \/>"},{"entry":"<\/package>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The following is another exemplary XML content with a single flash file having parameters for providing different moods:",{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<package xmlns=\u201chttp:\/\/messenger.msn.com\/messengercontent\/1.0\u201d"},{"entry":"version=\u201c1.0\u201d type=\u201cdynamicpicture\u201d"},{"entry":"xmlns:dynamicpicture=\u201chttp:\/\/mssenger.msn.com\/dynamicpicture\/1.0\u201d"},{"entry":"dynamicpicture:version=\u201c1.0\u201d dynamicpicture:displayname=\u201cBlack Cat\u201d"},{"entry":"partnerid=\u201dCP\u201d>"},{"entry":"\u2003\u2003<item type=\u201cdownlevel\u201d mimetype=\u201cimage\/png\u201d"},{"entry":"\u2003\u2003file=\u201cblackcat.png\u201d \/>"},{"entry":"\u2003\u2003<item dynamicpicture:default=\u201dtrue\u201d type=\u201cmood\u201d"},{"entry":"\u2003\u2003mimetype=\u201capplication\/x-shockwave-flash\u201d file=\u201ccat.swf\u201d"},{"entry":"\u2003\u2003dynamicpicture:parameter=\u201dhappymoodparameter\u201d"},{"entry":"\u2003\u2003dynamicpicture:name=\u201cHappy\u201d dynamicpicture:emoticon=\u201c:)\u201d"},{"entry":"\u2003\u2003contenttype=\u201cP\u201d \/>"},{"entry":"\u2003\u2003<item type=\u201cmood\u201d mimetype=\u201capplication\/x-shockwave-flash\u201d"},{"entry":"\u2003\u2003file=\u201ccat.swf\u201d parameter=\u201dhappymoodparameter\u201d"},{"entry":"\u2003\u2003dynamicpicture:name =\u201cSad\u201d dynamicpicture:keysequence=\u201c:(\u201d"},{"entry":"\u2003\u2003dynamicpicture:keysequence2=\u201c:-(\u201d contenttype=\u201cP\u201d \/>"},{"entry":"<\/package>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Background Pictures ","Background pictures  may be utilized in a background of a user interface provided by the messaging module (). For background pictures, there is existing client functionality that may be considered, examples of which are described as follows:\n\n",{"@attributes":{"id":"p-0070","num":"0072"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<package xmlns=\u201chttp:\/\/messenger.msn.com\/messengercontent\/1.0\u201d"},{"entry":"version=\u201c1.0\u201d"},{"entry":"type=\u201ctheme\u201d partnerid=\u201cCP\u201d>"},{"entry":"\u2003\u2003<!-- Background -->"},{"entry":"\u2003\u2003<item"},{"entry":"\u2003\u2003xmlns:background=\u201chttp:\/\/messenger.msn.com\/background\/1.0\u201d"},{"entry":"\u2003\u2003contentid=\u201cAG45678\u201d contenttype=\u201cP\u201d background:version=\u201c1.0\u201d"},{"entry":"\u2003\u2003type=\u201cbackground\u201d mimetype=\u201cimage\/jpg\u201d"},{"entry":"\u2003\u2003file=\u201czebra_MANIA.jpg\u201d background:displayname=\u201cZebra"},{"entry":"\u2003\u2003MANIA\u201d \/>"},{"entry":"\u2003\u2003<!-- Background -->"},{"entry":"\u2003\u2003<item"},{"entry":"\u2003\u2003xmlns:background=\u201chttp:\/\/messenger.msn.com\/background\/1.0\u201d"},{"entry":"\u2003\u2003contentid=\u201cAG74523\u201d contenttype=\u201cP\u201d background:version=\u201c1.0\u201d"},{"entry":"\u2003\u2003type=\u201cbackground\u201d mimetype=\u201cimage\/jpg\u201d file=\u201cisland.jpg\u201d"},{"entry":"\u2003\u2003background:displayname=\u201cPacific Island\u201d background:text=\u201dClick"},{"entry":"\u2003\u2003here to win a trip to Hawaii\u201d"},{"entry":"\u2003\u2003background:url=\u201dhttp:\/\/www.3dparty.com\/backpromo.htm\u201d"},{"entry":"\u2003\u2003background:imptrackurl=\u201chttp:\/\/server\/track\u201d\/>"},{"entry":"<\/package>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Emoticon ","Similar to the other content types, emoticons (e.g., also known as \u201csmileys\u201d, an example of which is represented between the following quotes \u201c:)\u201d) can be downloaded and imported into the messaging module (). In an implementation, the content provider () may specify shortcuts for each emoticon in the content and\/or the content metadata, such as to type \u201c:)\u201d to output a graphic of a smiley face. In a scenario in which there is a conflict, such as when a content provider () specifies a shortcut that is already used by the client (), a new shortcut is automatically generated. A dialog box may be utilized to modify keyboard shortcuts to be more meaningful to the user. An example of sample XML content for an emoticon is as follows:",{"@attributes":{"id":"p-0073","num":"0075"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<package xmlns=\u201chttp:\/\/messenger.msn.com\/messengercontent\/1.0\u201d"},{"entry":"version=\u201c1.0\u201d"},{"entry":"type=\u201ctheme\u201d partnerid=\u201cCP\u201d>"},{"entry":"\u2003\u2003<item contentid=\u201cAG43987\u201d contenttype=\u201cP\u201d"},{"entry":"\u2003\u2003xmlns:emoticon=\u201chttp:\/\/messenger.msn.com\/emoticon\/1.0\u201d"},{"entry":"\u2003\u2003type=\u201cemoticon\u201d emoticon: namespaceprefix =\u201ccoke\u201d"},{"entry":"\u2003\u2003mimetype=\u201cimage\/gif\u201d file=\u201cemoticon2.gif\u201d"},{"entry":"\u2003\u2003emoticon:displayname=\u201cRed Heart\u201d emoticon:keysequence=\u201c(L)\u201d\/>"},{"entry":"<\/package>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Wink ","A wink  may be considered a \u201cfull-screen\u201d emoticon which may include a display of motion. In an implementation, a default wink is not provided. Since the wink  may include multiple elements, each wink may be formatted as a content package. Therefore, if the wink is included in a content package () (e.g. a theme), the wink may be included as a content package that is nested within another content package. An example of exemplary XML content of a wink is as follows:",{"@attributes":{"id":"p-0076","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<package xmlns=\u201chttp:\/\/messenger.msn.com\/messengercontent\/1.0\u201d"},{"entry":"version=\u201c1.0\u201d"},{"entry":"\u2003\u2003type=\u201cwink\u201d xmlns:wink=\u201chttp:\/\/messenger.msn.com\/winks\/1.0\u201d"},{"entry":"\u2003\u2003wink:version=\u201c1.0\u201d partnerid=\u201cCP\u201d>"},{"entry":"\u2003\u2003<item contentid=\u201dAG45099\u201d type=\u201canimation\u201d"},{"entry":"\u2003\u2003mimetype=\u201capplication\/x-shockwave-flash\u201d file=\u201cheartkey.swf\u201d"},{"entry":"\u2003\u2003wink:sizex=\u201c200\u201d wink:sizey=\u201c200\u201d contenttype=\u201cP\u201d \/>"},{"entry":"\u2003\u2003<item type=\u201cthumbnail\u201d mimetype=\u201cimage\/png\u201d"},{"entry":"file=\u201cbeerchug.jpg\u201d"},{"entry":"\u2003\u2003contenttype=\u201cP\u201d \/>"},{"entry":"<\/package>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Dynamic Menu ","Content menus provided by the messaging module () may be configured to show dynamic content. For instance, content for display of a dynamic menu may include an image, a \u201cclick through\u201d URL, a description of the menu item, and so on. Following is an exemplary schema for a dynamic menu item:",{"@attributes":{"id":"p-0079","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d ?>"]},{"entry":[{},"<msnmenuitem version=\u201c1.0\u201d>"]},{"entry":[{},"\u2002<thumburl>http:\/\/server\/image_thumb.gif<\/thumburl>"]},{"entry":[{},"\u2002<displaytext>Tool tip<\/displaytext>"]},{"entry":[{},"\u2002<clickurl>http:\/\/server<\/clickurl>"]},{"entry":[{},"\u2002<clicktrackurl>http:\/\/server\/track.gif<\/clicktrackurl>"]},{"entry":[{},"\u2002<siteid>12365<\/siteid>"]},{"entry":[{},"<\/msnmenuitem>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Theme ","A theme  may be configured a collection of some or all of the individual content items listed above, as well as other  content items. For example, a theme XML file may be configured to include display pictures, a wink, a background, a dynamic display picture, and a plurality of emoticons as follows:",{"@attributes":{"id":"p-0082","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<package xmlns=\u201chttp:\/\/messenger.msn.com\/messengercontent\/1.0\u201d"},{"entry":"version=\u201c1.0\u201d type=\u201ctheme\u201d partnerid=\u201cCP\u201d>"},{"entry":"<!-- Wink stored in a separate CAB file -->"},{"entry":"<item contentid=\u201dAG12365\u201d type=\u201ccontent\u201d contenttype=\u201cP\u201d"},{"entry":"mimetype=\u201capplication\/messengercontent\u201d file=\u201cwink.mct\u201d \/>"},{"entry":"<!-- Usertile -->"},{"entry":"<item xmlns:usertile=\u201chttp:\/\/messenger.msn.com\/usertile\/1.0\u201d"},{"entry":"contenttype=\u201cP\u201d contentid=\u201dAG34567\u201dusertile:version=\u201c1.0\u201d"},{"entry":"type=\u201cusertile\u201d mimetype=\u201cimage\/png\u201d file=\u201cusertile.png\u201d"},{"entry":"usertile:default=\u201ctrue\u201d usertile:displayname=\u201cPaul Joe\u201d \/>"},{"entry":"<!-- Usertile -->"},{"entry":"<item xmlns:usertile=\u201chttp:\/\/messenger.msn.com\/usertile\/1.0\u201d"},{"entry":"contentid=\u201cAG09876\u201d contenttype=\u201cP\u201d usertile:version=\u201c1.0\u201d"},{"entry":"type=\u201cusertile\u201d mimetype=\u201cimage\/jpg\u201d file=\u201cusertile2.jpg\u201d"},{"entry":"usertile:displayname=\u201cPaul WeeMee\u201d \/>"},{"entry":"<!-- Background -->"},{"entry":"<item xmlns:background=\u201chttp:\/\/messenger.msn.com\/background\/1.0\u201d"},{"entry":"contentid=\u201cAG45678\u201d contenttype=\u201cP\u201d background:version=\u201c1.0\u201d"},{"entry":"type=\u201cbackground\u201d mimetype=\u201cimage\/jpg\u201d file=\u201czebra_MANIA.jpg\u201d"},{"entry":"background:displayname=\u201cZebra MANIA\u201d \/>"},{"entry":"<!-- Background -->"},{"entry":"<item xmlns:background=\u201chttp:\/\/messenger.msn.com\/background\/1.0\u201d"},{"entry":"contentid=\u201cAG74523\u201d contenttype=\u201cP\u201d background:version=\u201c1.0\u201d"},{"entry":"type=\u201cbackground\u201d mimetype=\u201cimage\/jpg\u201d file=\u201cisland.jpg\u201d"},{"entry":"background:displayname=\u201cPacific Island\u201d background:alttext=\u201dClick here"},{"entry":"to win a trip to Hawaii\u201d"},{"entry":"background:alturl=\u201dhttp:\/\/www.3dparty.com\/backpromo.htm\u201d \/>"},{"entry":"<!-Dynamic Display Picture - stored in a separate CAB file -->"},{"entry":"<item contentid=\u201cAG98712\u201d contenttype=\u201cP\u201d type=\u201cmessengercontent\u201d"},{"entry":"mimetype=\u201capplication\/messengercontent\u201d"},{"entry":"file=\u201cdynamicdisplaypic.mct\u201d\/>"},{"entry":"<!-Emoticon -->"},{"entry":"<item contentid=\u201cAG34567\u201d contenttype=\u201cP\u201d"},{"entry":"xmlns:emoticon=\u201chttp:\/\/messenger.msn.com\/emoticon\/1.0\u201d"},{"entry":"type=\u201cemoticon\u201d emoticon:namespaceprefix=\u201ccoke\u201d"},{"entry":"mimetype=\u201cimage\/png\u201d file=\u201cemoticon1.png\u201d"},{"entry":"emoticon:displayname=\u201cSmiley\u201d emoticon:keysequence=\u201c:)\u201d\/>"},{"entry":"<!-Emoticon -->"},{"entry":"<item contentid=\u201cAG43987\u201d contenttype=\u201cP\u201d"},{"entry":"xmlns:emoticon=\u201chttp:\/\/messenger.msn.com\/emoticon\/1.0\u201d"},{"entry":"type=\u201cemoticon\u201d emoticon: namespaceprefix =\u201ccoke\u201d"},{"entry":"mimetype=\u201cimage\/gif\u201d file=\u201cemoticon2.gif\u201d emoticon:displayname=\u201cRed"},{"entry":"Heart\u201d emoticon:keysequence=\u201c(L)\u201d\/>"},{"entry":"<\/package>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Other ","A variety of other content may also be included in the content package (). For example, the content package () may include another content package as previously described. Additionally, other audio and\/or video content may also be included.","Descriptions of various tags that may be utilized in the XML schema for the content package are described in the following table. The XML tags may be encoded according to the 8-bit Unicode Transformation Format (UTF-8) specification.","XML Description",{"@attributes":{"id":"p-0087","num":"0089"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["XML",{},{}]},{"entry":["tags","Attributes","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Package","Version","Version of the content package. Package version"]},{"entry":[{},{},"can change in the future when new item types"]},{"entry":[{},{},"are added."]},{"entry":[{},"xmlns","XML name space, contains the name space"]},{"entry":[{},{},"name and the schema version number at the end"]},{"entry":[{},{},"of the string. This allows the XML schema to be"]},{"entry":[{},{},"changed for future version of messaging module"]},{"entry":[{},{},"without affecting older clients."]},{"entry":[{},"type","The type describes the content the XML"]},{"entry":[{},{},"represents. This is used to identify the installer"]},{"entry":[{},{},"of a given content type. This also allows new"]},{"entry":[{},{},"types to be added in the future without changing"]},{"entry":[{},{},"the XML schema."]},{"entry":[{},"partnerid","String value that represents the parent"]},{"entry":[{},{},"identification. This may be set by the content"]},{"entry":[{},{},"provider."]},{"entry":["Item","xmlns","XML name space contains the name space name"]},{"entry":[{},{},"and the schema version number at the end of the"]},{"entry":[{},{},"string. This allows the XML schema to be"]},{"entry":[{},{},"changed for future version of messenger without"]},{"entry":[{},{},"affecting older messaging modules. The name"]},{"entry":[{},{},"space also allows new attributes and elements to"]},{"entry":[{},{},"be added that are specific to the given"]},{"entry":[{},{},"namespace"]},{"entry":[{},"type","The type describes the content the XML"]},{"entry":[{},{},"represents. This is used to identify the installer"]},{"entry":[{},{},"of a given content type. This also allows new"]},{"entry":[{},{},"types to be added in the future without changing"]},{"entry":[{},{},"the XML schema."]},{"entry":[{},"mimetype","Describes a file type, such as image, text, flash,"]},{"entry":[{},{},"and so forth."]},{"entry":[{},"File","File name in the content package for the given"]},{"entry":[{},{},"content item"]},{"entry":[{},"contentid","A unique identifier for the given content item."]},{"entry":[{},{},"This is set by the content creator and may be"]},{"entry":[{},{},"used for tracking. It may also be used to upsell"]},{"entry":[{},{},"premium content to users that see the content"]},{"entry":[{},{},"being used by their friends. This attribute is"]},{"entry":[{},{},"optional."]},{"entry":[{},"contenttype","Identify the content. In an implementation, it"]},{"entry":[{},{},"can have three possible values: M = Merchant,"]},{"entry":[{},{},"P = Premium, D = Default. This value is optional,"]},{"entry":[{},{},"if it is not there, Messenger may treat the content"]},{"entry":[{},{},"as the Merchant type."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The following table describes exemplary \u201ctype\u201d XML descriptions for content.",{"@attributes":{"id":"p-0089","num":"0091"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Type","Attributes","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Usertile","default","Out of a collection of usertiles, this one may be"]},{"entry":[{},{},"set as the user's display picture"]},{"entry":[{},"displayname","Name used in the display picture dialog box to"]},{"entry":[{},{},"describe the image"]},{"entry":["Back-","displayname","Name used in the Backgrounds dialog box to"]},{"entry":["ground",{},"describe the image. This text is also used in the"]},{"entry":[{},{},"emoticons menu item tooltip"]},{"entry":[{},"url","Click through URL to be displayed on the ad"]},{"entry":[{},{},"section of the messaging module user interface"]},{"entry":[{},{},"(UI). In an implementation, this only applies to"]},{"entry":[{},{},"merchant content"]},{"entry":[{},"text","Text to be display on the ad section of the UI"]},{"entry":[{},{},"of the messaging module. In an"]},{"entry":[{},{},"implementation, this only applies to merchant"]},{"entry":[{},{},"content"]},{"entry":[{},"imptrackurl","impression track url, this URL may be hit every"]},{"entry":[{},{},"time a UI with this background is opened."]},{"entry":["Emoticon","resolvetext","The collision resolution string, basically is a"]},{"entry":[{},{},"string the provider set to prefix the emoticon"]},{"entry":[{},{},"string in the case the user already is using the"]},{"entry":[{},{},"same emoticon string. If after appending the"]},{"entry":[{},{},"resolution string there is still a collision, an"]},{"entry":[{},{},"increasing number may be appended until the"]},{"entry":[{},{},"collision is resolved."]},{"entry":[{},"displayname","This is the name used in the emoticons dialog"]},{"entry":[{},{},"box to describe the image. This text is also"]},{"entry":[{},{},"used in the emoticons menu item tooltip. In an"]},{"entry":[{},{},"implementation, this attribute is optional"]},{"entry":[{},"keysequence","Sequence of characters that resolve into the"]},{"entry":[{},{},"given emoticon image when typed in the UI"]},{"entry":["Content",{},"No attributes. This type represents a theme"]},{"entry":[{},{},"content package. This type can be used by a"]},{"entry":[{},{},"content provider to include a theme content"]},{"entry":[{},{},"package within a theme content package."]},{"entry":["wink",{},"No attributes. This type represents a wink"]},{"entry":[{},{},"content package."]},{"entry":["Animation","Sizex","Wink width"]},{"entry":[{},"SizeY","Wink height"]},{"entry":"Thumbnail"},{"entry":"Downlevel"},{"entry":["Mood","Name","Mood name"]},{"entry":[{},"keysequence","emoticon string that triggers the given mood"]},{"entry":[{},{},"change"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The following table describes exemplary \u201cpackage\u201d descriptions which may be utilized.",{"@attributes":{"id":"p-0091","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Package","Attributes","Description","Valid types"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["theme",{},"Same as Package","usertile,"]},{"entry":[{},{},{},"background,"]},{"entry":[{},{},{},"emoticon, content"]},{"entry":["Wink",{},"Same as Package","animation,"]},{"entry":[{},{},{},"thumbnail"]},{"entry":["dynamicpicture","displayname","Name used to display","downlevel, mood"]},{"entry":[{},{},"the dynamicpicture"]},{"entry":[{},{},"in the display"]},{"entry":[{},{},"picture dialog box"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The application module () may also incorporate digital rights management (DRM) functionality, such as to prevent unauthorized reuse of content. For example, the application module () may store the content () in memory () of the client () such that it is not easily identified. This can be accomplished by using an object store of the messaging module (). For instance, content () may be stored in a hidden folder on the client (), may be stored with a different name and file extension (e.g., \u201cfamilypicture.png\u201d may become \u201cTRF2FA.dat\u201d), the stored file name may be a U.S. Secure Hash Algorithm Version 1.0 hash value of the original file name, and so on. In another instance, certain functionality may be disabled for purchased content. In a further technique, additional information may be added to the object store name which may indicate if a feature has been successfully purchased. This information can be used to disable certain functionality, e.g. right-clicking on a received emoticon that the sender has purchased may not show a \u201ccopy emoticon\u201d menu entry.","Exemplary Procedures","The following discussion describes formatting and installation techniques that may be implemented utilizing the previously described systems and devices. Aspects of each of the procedures may be implemented in hardware, firmware, or software, or a combination thereof. The procedures are shown as a set of blocks that specify operations performed by one or more devices and are not necessarily limited to the orders shown for performing the operations by the respective blocks. In portions of the following discussion, reference will be made to the environment  of  and the system  of .",{"@attributes":{"id":"p-0095","num":"0097"},"figref":"FIG. 3","b":["300","102","112","112","302"],"i":["m","j","j"]},"The content provider () then forms a content package to include the one or more content items and a manifest which describes the one or more content items (block ). For example, the content package may conform to a schema\/format of having a <package> root tag with zero or more <item> tags inside it in an XML file, which is extensible and therefore allows different attributes to be specified for different content types. The manifest may mimic this XML format, and therefore also have a <package> root tag with zero or more <item> tags inside it which correspond to the tags of the content package format. For example, as previously described, each <item> tag may contain: (1) a \u201ctype\u201d attribute, which specifies a content type; (2) a \u201cmimetype\u201d attribute, which specifies a multipurpose internet mail extension (MIME) type of the item; and (3) a file attribute, which specifies a name of a related file for an item stored within the content package (). Further, some <item> tags may point to another content package nested within the content package. The content may be stored in the content package in a variety of ways, such as binaries and so on.","A module is configured to provide for automatic download of the content package in response to selection by a user (block ). For example, the content provider () may configure the package module () to call methods exposed on the content manager module () for installation of the content package () on the client () for use by the application module () (e.g., the messaging module ()). The content provider (), for instance, instantiates the content manager module () to call methods exposed by the content manager module (). The content manager module ()) may be instantiated in a variety of ways. As previously described, a web site of the content provider () may include an object tag in the body as follows:",{"@attributes":{"id":"p-0098","num":"0100"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<OBJECT id=\u201cMessengerContentInstaller\u201d height=\u201c0\u201d width=\u201c0\u201d"},{"entry":"\u2003\u2003classid=\u201cclsid:F06608C7-1874-4EEA-B3B2-DF99EBB144B8\u201d"},{"entry":"\u2003\u2003codeType=\u201capplication\/x-oleobject\u201d VIEWASTEXT>"},{"entry":"<\/OBJECT>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0099","num":"0101"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<script language=\u201cjscript\u201d>"]},{"entry":[{},"\u2003\u2003function InstallContent( strURL )"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003\u2003MessengerContentInstaller.InstallContent(strURL);"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"<\/script>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{},"b":"114","i":"k"},{"@attributes":{"id":"p-0100","num":"0102"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<A href=\u201cjavascript:InstallContent(\u2018http:\/\/[domainname]\/[name of content"},{"entry":"file].CAB\u2019)\u201d>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{},"b":"240","i":"m"},"The module is then exposed for access over a network (block ). For example, a web page having the download link may be made available via a web site for access by the client () over the network . Therefore, the client () may then interact with the content provider () to automatically install the content package (), further discussion of which may be found in relation to the following figure.",{"@attributes":{"id":"p-0102","num":"0104"},"figref":["FIG. 4","FIG. 3","FIG. 2"],"b":["400","114","300","104","402","404","104","104"],"i":["k","n","n","n"]},"In response to the selection, for instance, the content provider () instantiates the content manager module and passes a URL of where the desired content is located (block ). For example, the content manager module () may be configured as an ActiveX control, which is software component based on a component object model (COM) and is configured for reuse by different application modules.","The content manager module () communicates the URL to the application module to begin download (block ). In this implementation, the content manager module () is located within the application module (), and relies on the application module () to perform the download. In another implementation, however, the content manager module () may be configured as a \u201cstand-alone\u201d module that is separate from the application module () and is configured to install content for the application module ().","During the download, the application module output a UI showing a status of the download (block ). The UI, for instance, may include a status bar which indicates a relative amount of the content package that is downloaded and remains to be downloaded, an estimated time to perform the download, and so on. The downloaded content package is then unpacked, and each file located in the content package is saved as a corresponding temporary file (block ). A collection is then created which maps a temporary file name with a corresponding content file name as utilized in the content package (block ). The collection is then examined to locate a manifest () which describes the content () (block ). For example, each manifest () may be given a universal name to ease location.","The manifest is then parsed and each content item is installed based on a content type defined in the manifest (block ). For example, as previously described the content package may comply with an XML schema which utilizes a tag to identify each content item included in the content package. Therefore, the tags may be utilized to identify the content type, and accordingly where and how the content item should be written to memory of the client for use by the application module. Once installed, the application module may utilize the content as intended. In this way, the procedure  of  describes an exemplary implementation in which content is automatically installed for use by an application module in response to a single \u201cclick\u201d performed by a user of the client (), without requiring further interaction by the user beyond the initial selection. In another exemplary procedure, a confirmation may be output before installation is begun. For example, the confirmation may be output to comply with ad policies that prevent downloading and installing content directly from an ad. Thus, in this instance selection of the confirmation provides the automatic installation.",{"@attributes":{"id":"p-0107","num":"0109"},"figref":"FIG. 5","b":["500","502","122","122","102","122","122","102","112","108"],"i":["m","m","j","n"]},"One or more lists referencing the trustworthy content providers are then formed (block ) from the collected data. For example, the content provider list () may be formed as a collection of URLs () of trustworthy content providers ().","An interface is exposed for use of the one or more lists (block ). For example, the list provider  may process requests from the application module () for determining whether the content provider () is trustworthy. In another example, the list provider  may provide an application programming interface (API) for retrieval of the content provider list () by the client (), an example of which is described in greater detail in relation to the following figure.",{"@attributes":{"id":"p-0110","num":"0112"},"figref":["FIG. 6","FIG. 5"],"b":["600","500","602","604"]},"In response to the selection, the content provider instantiates the content manager module and passes a URL of where the desired content is located (block ). The content manager module communicates the URL to the application module to begin download (block ). Before beginning the download, the application module compares the URL with one with one or more URLs in a content provider list (block ). Based on the comparison (block ), the application module determines whether the content provider is trustworthy (block ). If the content provider is trustworthy, the automatic installation process continues (block ). For example, the procedure  of  may be performed. Once the installation process is completed, the application module is executed to utilize the installed content (block ).",{"@attributes":{"id":"p-0112","num":"0114"},"figref":["FIG. 7","FIG. 7","FIGS. 8-12"],"b":["700","700","800","1200","700"]},"An instant messaging session is initiated between first and second clients over a network (block ). , for instance, is an illustration of a system  which includes a first client (illustrated as client ()) and a second client (illustrated as client ()) which participate in an instant messaging session over a network . The first client () is illustrated as being utilized by a first user () having the name \u201cAdam\u201d and the second client () is illustrated as being utilized by a second user () having the name \u201cBob\u201d. Text associated with instant messaging session is rendered for viewing by the first user () in a first user interface () through use of the corresponding client (). Similarly, text associated with instant messaging session is rendered for viewing by the second user () in the second user interface () through use of the corresponding second client (). Parentheticals in the reference numbers of  are utilized to depict correlations, such as between the first client (), the first user (), and the first user interface ().","Messages that are exchanged are transmitted between the first client () and the second client () via the network , which as previously stated may be implemented over the Internet, a peer-to-peer network connection, and so on. Although  is illustrated and described in relation to a plurality of users (), () participating in an instant messaging session, it is recognized that the techniques described herein may also be applied to scenarios in which three or more users are participating in an instant messaging session.","During the session, the first client () causes a particular item of content to be output by the second client () (block ).  illustrates an exemplary system  in which the first client () of  initiates output of a content item for the second client () during the instant messaging session initiated in . In the illustrated instant messaging session, the first and second users have exchanged text messages which are displayed for viewing by the users in the respective user interfaces (), (). To initiate a content item illustrated as a \u201cwink\u201d, the first user () (i.e., Adam) selects a launch site menu item , which causes a drop-down menu  of available activities to be displayed. The first user () selects a wink menu item , which causes content associated with the wink to be sent from the first client () to the second client (). In an exemplary implementation, if the instant messaging session includes three or more individuals, the content may be sent to each of the client. In another exemplary implementation, the first user () may specify one or more particular instant messaging session participants to receive the content. Although the wink is shown as being initiated via a drop-down menu, the wink may be imitated in a variety of ways, such as through a keystroke combination, a button displayed in a menu bar, and so on.",{"@attributes":{"id":"p-0116","num":"0118"},"figref":["FIG. 10","FIG. 9"],"b":["1000","900","1000","1002","1","1002","2","804","1","804","2","1002","1","1002","2","804","1","804","2"]},"Upon viewing the output of the wink, the second user () may wish to acquire the wink for future output. Therefore, the second client selects the particular content item (e.g., the wink) (block ). However, the wink may be configured for \u201cone time\u201d output. For example, the content which forms the wink may be communicated during the instant messaging session such that the second client () may only output the wink when initiated by the first client (). Rather than force the second client () to manually locate the wink, however, the particular content item (e.g., the wink) may provide a display in the user interface () of how to obtain the particular content item (block ).",{"@attributes":{"id":"p-0118","num":"0120"},"figref":["FIG. 11","FIG. 4"],"b":["1100","1102","104","2","1102","1100","1102","1104","1106","1104","104","2","710"]},{"@attributes":{"id":"p-0119","num":"0121"},"figref":["FIG. 12","FIG. 11"],"b":["1200","1202","1104","104","2","104","2","104","1"]},"Although the invention has been described in language specific to structural features and\/or methodological acts, it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or acts described. Rather, the specific features and acts are disclosed as exemplary forms of implementing the claimed invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3","b":"300"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 4","FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 8","FIG. 2"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 9","FIG. 8","FIG. 8"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 10","FIG. 9"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 11","FIG. 10"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 12","FIG. 11"]}]},"DETDESC":[{},{}]}
