---
title: Value-based positioning for outer join queries
abstract: Enterprise systems, methods and computer program products are disclosed for providing value-based positioning for outer join database queries in an enterprise resource planning system operating on a specially programmed computer server. The computer implemented method comprises; receiving a query at a server and processing the query for inner join and then evaluating a returned value for Order by direction and whether the current row returns NULL. Depending on forward paging and reverse paging for outer join, the process involves changing an inequality operator depending on the evaluated Order by direction and whether the current row is NULL. The process for inner join and outer join queries is implemented on an application object server including a kernel instance, a query framework and query generation model and a data access layer engine to a database of the enterprise resource planning system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08880503&OS=08880503&RS=08880503
owner: Microsoft Corporation
number: 08880503
owner_city: Redmond
owner_country: US
publication_date: 20110621
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Forward Paging","Backward Paging"],"p":["The present invention generally relates to enterprise computer systems and methods and more particularly to systems, methods and computer program products for facilitating value-based positioning for outer join database queries in an enterprise resource planning system operating on a specially programmed computer server.","In today's technological environment, it is common for enterprises such as business organizations, schools, charitable organizations and government organizations to deploy private computer networks\u2014intranets\u2014to securely share such organization's information or network operating system within that organization. The term \u201cintranet\u201d is used in contrast to \u201cinternet\u201d, which is a network between and among individuals and organizations, the most common of which is the global, public Internet. That is, an intranet is a network within an enterprise which sometimes refers only to an internal (private) website, but may be a more extensive part of the enterprise's information technology (IT) infrastructure. For example, in many enterprises, an employee may work from home and gain access to the enterprise via a portal requiring additional security hurdles such as synchronous keys for entry. An enterprise intranet may host multiple private websites and constitute an important component and focal point of internal communication with, and collaboration among, individual computer users associated\/affiliated with the enterprise (e.g., students within a university, co-workers within a company, members of a governmental department or the like).","As individual computer users associated\/affiliated with the enterprise perform various computer-based activities while logged into the intranet, these users may utilize enterprise resource planning (ERP) client\/server systems as provided by the enterprise. One such system known as the Dynamics\u00ae AX 2009 ERP system available from Microsoft Corporation of Redmond, Wash. provides a database query server and associated application object server among other features. These are routinely accessed by a client, for example, to query the database for data contained in tables. Data that may populate a given field of a business document or form and may be recorded in several different database tables. The database may, thus, comprise a plurality of related tables of data, for example, related to everyday activities of the enterprise and related by the data recorded in the table.","A member of the enterprise may perform a query of the database known as a join query in which, for example, in the structured query language (SQL), a join query relates to a query in which two (or more) tables of data of a database are temporarily joined in order to select data of the tables. To perform a join query, information in the query may comprise at least one table, a column or row and a condition to make the join temporarily occur. A join query may involve selection of data for update. An example follows:",{"@attributes":{"id":"p-0006","num":"0005"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UPDATE a"]},{"entry":[{},"SET a.[updated_column] ="]},{"entry":[{},"updatevalue"]},{"entry":[{},"FROM tableb"]},{"entry":[{},"JOIN tablec"]},{"entry":[{},"ON ..."]},{"entry":[{},"WHERE ..."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"In the known Dynamics AX 2009 ERP system, a join query may be processed at the database each time the join is executed. A join query typically involves paging. Paging obtains its name from accessing pages of data of a database. Paging may begin, for example, with a structured query language (SQL) SELECT. For example, given a SQL and a selected row in the result of the query, one may generate two separate queries such that a \u201cforward\u201d query results in all subsequent rows and a \u201cbackward\u201d query results in all previous rows of the result query. In a known process, upon receipt of an outer join query and based on the values of a particular row from a query result, a query result may fetch all forward and backward rows of the query by generating separate queries from the original query. One is for forward paging or a forward cursor and one is for backward paging or a reverse cursor, both of which directions being used to create a filter.","An exemplary process for processing an inner join may be taken from a Microsoft Business Framework (MBF) Persistent block reading design comprising generation of a where tree, This exemplary process described below is specific only for a value-based paging for an inner join. A problem may be defined as follows for providing for forward and backward paging: given an SQL SELECT query and a selected row in the result of that query, generate two separate queries such that a forward query and a backward query yield all subsequent and previous rows of the query. In particular, given a plurality of n Order By Segments (OBS) present in an Order By and the Values (V) for each segment in the current row and an operator (op), a where expression may be generated of the form:\n\n(((OBS)&&(OBS) . . . && (OBS))\u2225\n\n((OBS)&& (OBS) . . . && (OBS))\u2225\n\n((OBS)&& (OBS))\u2225\n\n(OBS))\n\nIf the original query Order By does not cover any unique key fields, then, remaining unique key fields are explicitly added. The operator opis determined by the type of cursor or paging direction and the sort order for the nsegment according to the following table:\n",{"@attributes":{"id":"p-0009","num":"0008"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Sort Order","Forward Paging","Reverse Paging"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Ascending",">","<"]},{"entry":[{},"Descending","<",">"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"A comparison operator such as > or < compares values for greater than or less than. As used herein, a comparison operator may be an inequality operator which may be defined as an operator which does not involve equality or =. Since there may be no value entered in a row of a table with a NULL, then, an inequality operator is ineffective for outer join.","Fundamentally, then, there is a need in the art for performing outer joins in addition to inner joins, for example, by value-based positioning and so be able to perform both inner and outer joins for, for example, a query statement of joined tables of an enterprise database.","Thus, while it may be known to provide for inner joins for forward and backward paging where tables have completed values, however, what are needed are systems, methods and computer program products for adapting these existing processes for performing outer join queries in an enterprise resource planning system.","This summary is provided to introduce a selection of concepts. These concepts are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter, nor is this summary intended as an aid in determining the scope of the claimed subject matter.","The present invention meets the above-identified needs by setting up and providing run-time systems, methods and computer program products for adapting existing processes for inner join processes to perform value-based positioning for outer join queries in an enterprise resource planning system, for example, to process NULL value results in joined tables of an enterprise database.","In an embodiment, an application object server comprises a kernel associated with a query framework and a query generation model which, in turn may utilize structured query language (SQL) or alternative language for access to a data access layer and engine and so to a record ID generator. In a method of processing an outer join for forward and reverse paging, a preliminary process comprises determining the number of Order By clauses in a received query in order to form processing loops based on the number of Order By's in the query N. A further process may take into account whether a given query involves NULL records in an outer-joined Cursor. If a current record returns a NULL record for a joined cursor, i.e., in query A outer join B . . . B is a joined cursor which is outerjoined and can potentially fetch NULL data, a where condition for the joined table may not be appended because, due to the NULL record, there is no value to use in forming a condition such as >, <, = or a combination thereof. Consequently, instead, one may create a condition on the right side of the outer join such as an \u201cOR\u201d condition to include recognition of a NULL record such as field name of a table is NULL in one direction or the other.","In a specific embodiment, upon receipt of an outer join query and based on the values of a particular row from a query result, a query result may fetch all forward and backward rows of the query by generating separate queries from the original query. One is for forward paging or a forward cursor and one is for backward paging or a reverse cursor, both of which directions being used to create a filter. For example, for forward paging for the Order By direction Ascending and the current row is NULL, then, an inequality operation for NULL may be IS NOT NULL and for Descending and the current row is not NULL, then the inequality operator may be changed to Original Operator OR FIELD IS NULL. Also, for forward paging, the Order By direction being Ascending and the current row is not NULL, then the inequality operator is changed to Original Operator. And for the Order By direction being Descending and the current row is NULL, then the Inequality operator is changed to Ignored.","For backward paging or a reverse cursor, the conditions are reversed. For the Order By direction being Ascending and when the current row is not NULL, then, an inequality operator may be changed to Original Operator OR FIELD IS NULL and for Descending and when the current row is NULL, then, the inequality operator may be changed to FIELD IS NOT NULL. For the order by direction Ascending and when the current row is NULL, then, the inequality condition may be changed to Ignored while for the order by direction Descending and the current row is not Null, then the inequality operator may be Original Operator. This summary of the algorithm for outer join will be further described and justified herein by way of a plurality of case scenarios. Furthermore, a paging flow summary is provided below in flowchart form.","Further features and advantages of the present invention, as well as the structure and operation of various embodiments of the present invention, are described in detail below with reference to the accompanying drawings.","The present invention is directed to systems, methods and computer program products for facilitating value-based positioning for outer join queries in an enterprise resource planning (ERP) system to supplement existing processes for inner join queries. Firstly, enterprise system architecture figures: ,  and  will be introduced within this discussion and will be separately discussed for introducing a system architecture and an application object server and database and database server for receiving inner and outer join queries.","Then, we will provide an overview of a predicate generation algorithm and of inner join as known from Microsoft Business Framework (MBF) persistence block reading from Microsoft Dynamics AX 2009. This discussion will set the stage for generation of where trees for forward and reverse cursor for paging to achieve inner join.","Then, we will provide a discussion of join queries and outer join in particular with emphasis on an algorithm in tabular form and per  to provide value-based positioning surrounding the recognition of a NULL value in a retrieval of a current row of a table in response to a database query. Moreover, a discussion of an exemplary paging flow will be discussed as depicted in .","Referring now to , a block diagram illustrating an exemplary intranet enterprise resource planning (ERP) system  for an enterprise, according to an embodiment of the present invention, is shown. A client  may make a query of database server and database  via an application object server .","Intranet enterprise queries and database system  includes a plurality of users  (shown as users -in ) of an enterprise accessing, via a respective computing device  (also, shown as devices -in ), an organization's intranet (i.e., private network)  via wired or wireless communication links , ,  and . Computing device  may be described herein as an organizational or enterprise member client. As will be appreciated by those skilled in the relevant art(s) after reading the description herein, Intranet  may be a private network deployed by an organization or enterprise such as a business enterprise for use by its employees. An enterprise system may, by way of example, be one for a university for use by its students and faculty, one for a government agency for its workers, and the like. As will also be appreciated by those skilled in the relevant art(s) after reading the description herein, system  may be deployed across one or more jurisdictions as, for example, a multinational business enterprise makes its intranet  available to its employees around the world. Such detail is not shown in .","In various embodiments, device  may be configured as a desktop , a laptop , a PDA , a tablet or mobile computer , an intelligent communications device or the like. Device , in order to access private network  may typically have to identify a user name and password, if not, enter further security information such as a secret key or fingerprint data to access network . In accordance with an embodiment of a method of dynamically querying an enterprise database, a user may access a database  by user name and password, the user name and password being utilized by any of servers ,  and  to access an application object server  or application object server  may be obtained directly by a client for in turn structuring the query to database  as will be briefly described with reference to .",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 1","b":["122","124","126","128","100","130","132","134","136","138","140","142","144"]},"As users  log into an organizational\/enterprise intranet , they perform various computer-based tasks while logged into the organization\/enterprise's intranet . All these data may be categorized into categories, for example: data and commands associated with setting up a process for inventory control or other activity involving updating data in tables joined by conditions or as objects in an inheritance table hierarchy. With reference to , an enterprise server herein referred to as an application object server  may comprise a Dynamics AX server running software available from Microsoft Corporation of Redmond, Wash.","Referring now to , a client  may output queries, requests for database data retrievals, insertions, updates, deletions and the like of database  received as, for example, an X++ statement. X++ is a special programming language, similar to C#, used with Dynamics AX known as an object-oriented language. (Other programming languages may be used as well, for example, C++ and related languages, wherein X++ is described herein by way of example).","In an alternate embodiment to , application object servers  may employ a web interface server  (e.g., the SHAREPOINT\u00ae web platform available from Microsoft Corporation of Redmond, Wash.), a host server  or a report server  to allow intranet administrators and clients to manage an enterprise database . For example, such a web platform  can be used as a base and can allow for complete configuration and monitoring of system  such as the location of log files, data filtering and the like.","In an alternate embodiment, an intranet administrator would have access to configuration, status and data retrieval servers  via a web service-based application programming interface (API) (e.g., Simple Object Access Protocol (SOAP) or RESTful). In such an embodiment, the intranet administrator may enforce privacy laws and business rules based on access credentials. For example, an unprivileged user might be allowed to retrieve some data being accessed within intranet , while an authorized user (a manager or director or owner of a work queue) may retrieve more detailed data and have additional authority for record management.","An example of a computer system  is shown in  which may either represent any client  or any server such as application object server  of .","Computer system  includes one or more processors, such as processor . The processor  may be connected to a communication infrastructure  (e.g., a communications bus or network). Various software aspects are described in terms of this exemplary computer system. After reading this description, it will become apparent to a person skilled in the relevant art(s) how to implement the invention using other computer systems and\/or architectures. Computer system  may represent a client device  operated by an organization\/enterprise member. Computer system  may similarly represent a server , , ,  or  or database\/database server  as introduced in  and components thereof.","Database server  may be an SQL or other database server responsible for maintaining for example documents, organization charts, inventory data and the like for an enterprise. As such, as a document is processed such as a purchase requisition, filters, rules and parameters and conditions and the like may be retrieved by application object server  using a record caching system. As will be discussed further herein, application object server  may comprise a data access layer engine  () for querying database  in accordance with a query generation model  and a query framework  () in response to a kernel instance .","Computer system  can include a display interface  that forwards graphics, text and other data from the communication infrastructure  (or from a frame buffer not shown) for display on the display unit . A display interface may be what a user  sees on any one of devices . A user may type or click or use other form of data or command entry to input data\/commands to a dynamic enterprise resource planning system of the present invention including inner and outer join queries.","Computer system  also includes a main memory , preferably random access memory (RAM) and may also include a secondary memory . The secondary memory  may include, for example, a hard disk drive  and\/or a removable storage drive , representing a floppy disk drive, a magnetic tape drive, an optical disk drive, etc. The removable storage drive  reads from and\/or writes to a removable storage unit  in a well known manner. Removable storage unit  represents a floppy disk, magnetic tape, optical disk, etc. which is read by and written to by removable storage drive . As will be appreciated, the removable storage unit  includes a computer usable storage medium having stored therein computer software and\/or data.","In alternative aspects, secondary memory  may include other similar devices for allowing computer programs or other instructions to be loaded into computer system . Such devices may include, for example, a removable storage unit  and an interface . Examples of such may include a program cartridge and cartridge interface (such as that found in video game devices), a removable memory chip (such as an erasable programmable read only memory (EPROM), or programmable read only memory (PROM)) and associated socket and other removable storage units  and interfaces , which allow software and data to be transferred from the removable storage unit  to computer system .","Computer system  may also include a communications interface . Communications interface  allows software and data to be transferred between computer system  and external devices. Examples of communications interface  may include a modem, a network interface (such as an Ethernet card), a communications port, a Personal Computer Memory Card International Association (PCMCIA) slot and card, etc. Software and data transferred via communications interface  are in the form of non-transitory signals  that flow over communications media , , , ,  and so on which may be electronic, electromagnetic, optical or other signals capable of being received by communications interface . These signals  are provided to communications interface  via a communications path (e.g., channel) . This channel  carries signals  and may be implemented using wire or cable, fiber optics, a telephone line, a cellular link, an radio frequency (RF) link and other communications channels as explained above.","In this document, the terms \u201ccomputer program medium\u201d and \u201ccomputer usable medium\u201d are used to generally refer to media such as removable storage drive , a hard disk installed in hard disk drive  and signals . These computer program products provide software to computer system . The invention may be directed to such computer program products.","Computer programs (also referred to as computer control logic) are stored in main memory  and\/or secondary memory . Computer programs may also be received via communications interface . Such computer programs, when executed, enable the computer system  to perform the features of the present invention, as discussed herein. In particular, the computer programs, when executed, enable the processor  to perform the features of the present invention. Accordingly, such computer programs represent controllers of the computer system .","In an embodiment where the invention is implemented using software, the software may be stored in a computer program product and loaded into computer system  using removable storage drive , hard drive  or communications interface . The control logic (software), when executed by the processor , causes the processor  to perform the functions of the invention as described herein.","Referring now to , there is shown a system architecture for an application object server  () which supports data caching. Incoming communications are received from clients and other servers per  which may comprise database related communications. There are shown the following elements of application object server  (, server ): a server session manager  which may provide overall session management, server API's for various functions and features identified , and a kernel instance  and, within kernel instance , there is cursors . A cursor may represent an instance of a table in a join statement. The kernel instance  may be coupled to a data access layer  or engine via a query framework  and a query generation model . Within the data access layer  may be a data cache  and a record ID generator .","Now, an algorithm for inner join will be described which may be the basis for performing value-based outer join processing. An algorithm for generating predicates generally and where predicates in particular in the Dynamics AX ERP system comprises determining key fields. These key fields comprise a primary key field, if a table of a database has a Primary Key, else, a record index RecId field, if the table has a RecIdIndex field, else, if a table has a Unique Index or Indexes, else, an exception is raised and the process terminates. So assuming that one of these key fields is present, key values are appended to an end of an Order By, if the appendages do not already exist for the value. Appending key values to the end of an Order By ensures that values are returned in a consistent order and records are not missed in a join query. The key field unique index or indexes may have more than one field and some of these may be already processed. With the appending process, we are making sure that remaining indexes are appended and it is not necessary to append fields already appended. Next, we create a reverse cursor or paging as a clone of a current cursor or paging. Then, a forward where condition is built, and the forward where condition may be AND'ed to the current forward cursor or paging direction. Similarly, a reverse where condition may then be built, and the reverse where condition may AND'ed to the reverse cursor or paging direction. For shared tables, RecId (form Record ID generator ) may be unique in the table; (they do not, for example, have a Data Area identifier field). Not satisfying this assertion may result in an error condition.","To generate a where tree for forward and reverse where conditions, the query is examined for Order By's. In particular, given a plurality of n Order By Segments (OBS) present in an Order By and the Values (V) for each segment in the current row and an operator (op), a where expression may be generated of the form:\n\n(((OBS)&& (OBS) . . . && (OBS))\u2225\n\n((OBS)&& (OBS)&& (OBS))\u2225\n\n((OBS)&& (OBS))\u2225\n\n(OBS))\n\nIf the original query Order By does not cover any unique key fields, then, remaining unique key fields are explicitly added. The operator opis determined by the type of cursor or paging direction and the sort order for the nsegment according to the following table:\n",{"@attributes":{"id":"p-0048","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Sort Order","Forward Paging","Reverse Paging"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Ascending",">","<"]},{"entry":[{},"Descending","<",">"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"This algorithm, however, does not process outer joins successfully. The algorithm uses a comparison operator, for example, one of >, <, or = (or possibly a combination of these) to construct a where tree. The where tree will fetch forward and backward (reverse) pages. However, since an outer join may involve the presence of NULLable records, (records with NULL value entries), processing outer join cannot presently be supported by the above algorithm. The comparison operators will provide inaccurate results or no results with NULL values.","Processing Outer Joins with Value-Based Paging","Processing outer joins with value-based paging will now be discussed with reference to  and forward and reverse paging tables provided below. The outer join process  of  begins at start process  on receipt of an incoming query typically from a client  (). At process , the incoming query is received at an application object server  () in accordance with a query framework  and a query generation model  (). At process , the algorithm described above is called for join queries having no NULL values in the pulled results of the query. More importantly, value-based outer join query processing begins at processes  and .","Given an outer join query and all values of a particular row from the query result being examined iteratively, two separate queries may result for fetching forward and backward rows of the original query in order to generate appropriate filter conditions. The following table summarizes a process for generating exemplary filter conditions for a given Order by field to expand into an appropriate filter for forward paging or forward cursor process .",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Order By","Is current row",{}]},{"entry":["direction","NULL?","Inequality operator changed to"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ASC","Yes","IS NOT NULL"]},{"entry":["ASC","No","Original Operator"]},{"entry":["DESC","Yes","Ignored"]},{"entry":["DESC","No","Original Operator OR FIELD IS NULL"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"It may be appreciated that the above table for Forward Paging or a forward cursor may be easily derived for backward paging process  () as follows:",{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Order By","Is current row",{}]},{"entry":["direction","NULL?","Inequality operator changed to"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ASC","Yes","Ignored"]},{"entry":["ASC","No","Original Operator OR FIELD IS NULL"]},{"entry":["DESC","Yes","FIELD IS NOT NULL"]},{"entry":["DESC","No","Original Operator"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"When described in words, these tables may be described as follows. First, forward paging process  will be described where ASC refers to an ascending Order By direction and DESC refers to a descending Order By direction. For forward paging or a forward cursor for the Order By direction Ascending and the current row is NULL, then, an inequality operation for NULL may be IS NOT NULL. For Order By direction Descending and the current row is not NULL, then the inequality operator may be changed to Original Operator OR FIELD IS NULL. Also, for forward paging, the Order By direction being Ascending and the current row is not NULL, then the inequality operator is changed to Original Operator. And for the Order By direction being Descending and the current row is NULL, then the Inequality operator is changed to Ignored.","For backward paging or a reverse cursor process , according to the above table, the conditions are practically reversed. For the Order By direction being Ascending and when the current row is not NULL, then, an inequality operator may be changed to Original Operator OR FIELD IS NULL and for Descending and when the current row is NULL, then, the inequality operator may be changed to FIELD IS NOT NULL. For the order by direction Ascending and when the current row is NULL, then, the inequality condition may be changed to Ignored while for the order by direction Descending and the current row is not Null, then the inequality operator may be Original Operator.","Thus, value-based positioning for outer join comprises iterative steps associated with evaluating a current row for a NULL value and creating a where predicate according to the returned value and whether the order by direction is forward or reverse (backward).","Demonstration of Tabular Summary","The following section further elaborates of the explanation for forward paging process . A similar discussion fir backward paging  will not be provided to as backward paging follows from forward paging in reverse manner.","The following is a fictitious query provided as if coming from a client  to an application object server  () or server  () for sales data:",{"@attributes":{"id":"p-0060","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SELECT SalesID, ItemID"]},{"entry":[{},"FROM SalesTable LEFT OUTER JOIN SalesLine ON"]},{"entry":[{},"SalesTable.SalesID = SalesLine.SalesID"]},{"entry":[{},"ORDER BY SalesLine.ItemID ASC, SalesTable.SalesID ASC"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":"Case 1: With Order By ASC and a current row has a NULL value, the query result will look like that below.\n\nWith selected record as (2, NULL) tuple as indicated in BOLD below.\n"}},{"@attributes":{"id":"p-0061","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"SalesTable.SalesID","SalesLine.ItemID"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"2"},{"b":"NULL"}]},{"entry":[{},"3","NULL"]},{"entry":[{},"1","1000"]},{"entry":[{},"4","4000"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{}]},{"@attributes":{"id":"p-0062","num":"0062"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["(SalesLine.ItemID IS NULL AND SalesTable.SalesID >= 2)","\/\/fetches row number 1 to 2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"OR"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{"b":"(SalesLine.ItemID IS NOT NULL)"},"\/\/fetches row number 3 to 4"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Now, we provide a second case, by way of example:\n\n",{"@attributes":{"id":"p-0064","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"SalesTable.SalesID","SalesLine.ItemID"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"2","NULL"]},{"entry":[{},"3","NULL"]},{"entry":[{},{"b":"1"},{"b":"1000"}]},{"entry":[{},"4","4000"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{}]},{"@attributes":{"id":"p-0065","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["(SalesLine.ItemID = 1000 AND SalesTable.SalesID >= 1)","\/\/fetches row number 3"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"OR"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["(SalesLine.ItemID > 1000)","\/\/fetches row number 4"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Now, a third case will be discussed.\n\n",{"@attributes":{"id":"p-0067","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SELECT SalesID, ItemID"]},{"entry":[{},"FROM SalesTable LEFT OUTER JOIN SalesLine ON"]},{"entry":[{},"SalesTable.SalesID = SalesLine.SalesID"]},{"entry":[{},"ORDER BY SalesLine.ItemID DESC, SalesTable.SalesID ASC"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0068","num":"0070"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"SalesTable.SalesID","SalesLine.ItemID"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"4","4000"]},{"entry":[{},"1","1000"]},{"entry":[{},{"b":"2"},{"b":"NULL"}]},{"entry":[{},"3","NULL"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":"(SalesLine.ItemID IS NULL AND SalesTable.SalesID>=2)\/\/fetches row numbers 3 to 4"}},"Now a fourth case will be discussed.\n\n",{"@attributes":{"id":"p-0070","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"SalesTable.SalesID","SalesLine.ItemID"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"4"},{"b":"4000"}]},{"entry":[{},"1","1000"]},{"entry":[{},"2","NULL"]},{"entry":[{},"3","NULL"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{}]},{"@attributes":{"id":"p-0071","num":"0075"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["(SalesLine.ItemID = 4000 AND SalesTable.SalesID >= 4)","\/\/fetches row number 1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"OR"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["( SalesLine.ItemID < 4000 )","\/\/fetches rows 2 to 4"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"As explained above, reverse paging may be handled in reverse per the tables provided above. Now,  will be discussed which provides an overall paging flow  where a preliminary process is determining the number N of Order By clauses in a given received query. In process , N is set equal to the number of Order By clauses in the given query.","The process  then proceeds with process  in which a FinalWhere value is set equal to NULL. As will be explained below, a decrementing process  return arrow is shown returning to the connection of processes  and  and process  follows. Process  comprises setting CurrentWhere to equal NULL. Once process  is completed, decision process  comprises determining whether the value of N is currently equal to 0. If Yes, then, process  is completed at Stop process . Otherwise, the process  continues to process  where a parameter value I is set to a value of 1. Between process  and process , as will be described below, incrementing process  joins the output of process  as it follows to decision process  asking whether I is greater than N.","Following the No path from process , process  follows in which the CurrentField value is set equal to a Field value participating in the Ith Order By clause. Decision process  follows CurrentField setting process  determining whether I is ==N. If the answer is No, then, at process , one appends an AND'ed WHERE predicate (CurrentField=Lookup Value (CurrentField) to CurrentWHERE. If the answer is Yes, then process  follows process  and one appends an ANDed WHERE predicate (CurrentField OP LookupValue (CurrentField)) to Current WHERE. Both processes  and  lead to process  which comprises incrementing I by 1 or I=I+1.","Now, we return to process  with a Yes result of IS I>N? If Yes, then, process  follows. At decision process , the process determines IS FinalWhere=NULL?. If the result is No, then, process  follows. Process  comprises setting FinalWHERE=FinalWhere OR CurrentWhere. If the result of process  is Yes, then, process  results. Process  comprises setting FinalWHERE=CurrentWhere.","Processes  and  both lead to a decrementing process . Decrementing process  comprises setting N=N\u22121. Process  leads to process  as described above. All of the Order By's N finally being processed, then the process  terminates at process .","As will be apparent to one skilled in the relevant art(s) after reading the description herein, the computer architectures shown in ,  and  may be configured as a desktop, a laptop, a server, a tablet computer, a PDA, a mobile computer, an intelligent communications device or the like. The X programming language is one of many programming languages that may be used known in the art of enterprise resource planning systems, for example, C# is one alternative. Any of these architectures may be under the personal control of a user client  and may be operated transparent to other database processes, for example, for data entry\/retrieval of inventory data, purchase order data, request for proposal data, marketing and sales data and related organizational hierarchy data as well as other data relevant to the querying for data to improve overall system efficiency according to inner join and outer join conditions as described above.","In yet another embodiment, the invention is implemented using a combination of both hardware and software and communications media may be wireless, wired or other form of communication recognizing any need for security of data of the enterprise.","While various aspects of the present invention have been described above, it should be understood that they have been presented by way of example and not limitation. It will be apparent to persons skilled in the relevant art(s) that various changes in form and detail can be made therein without departing from the spirit and scope of the present invention. Thus, the present invention should not be limited by any of the above described exemplary aspects, but should be defined only in accordance with the following claims and their equivalents.","In addition, it should be understood that the figures in the attachments, which highlight the structure, methodology, functionality and advantages of the present invention, are presented for example purposes only. The present invention is sufficiently flexible and configurable, such that it may be implemented in ways other than that shown in the accompanying figures. For example, the systems, methods and computer program products for facilitating the querying of data of a database in an intranet environment may be also applicable to other networks such as internets.","Further, the purpose of the foregoing Abstract is to enable the U.S. Patent and Trademark Office and the public generally and especially the scientists, engineers and practitioners in the relevant art(s) who are not familiar with patent or legal terms or phraseology, to determine quickly from a cursory inspection the nature and essence of this technical disclosure. The Abstract is not intended to be limiting as to the scope of the present invention in any way."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The features and advantages of the present invention will become more apparent from the detailed description set forth below when taken in conjunction with the drawings in which like reference numbers indicate identical or functionally similar elements.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2A","FIG. 2B"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 3","FIG. 1","FIG. 1","FIG. 4"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 4","FIG. 1","FIG. 1"],"sub":"++"}]},"DETDESC":[{},{}]}
