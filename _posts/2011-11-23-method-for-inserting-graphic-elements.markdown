---
title: Method for inserting graphic elements
abstract: Disclosed herein are methods and systems for injecting an existing graphic element into a target application. A sizing configuration of an existing graphic element displayed in a target application may be intercepted from a target application. A sizing configuration of the graphic elements which are to be injected may then be determined. Using the sizing configuration of the graphic elements to be injected and the intercepted sizing configuration of the existing graphic elements displayed in the target application, a resultant sizing configuration may be determined so that both the displayed existing graphic elements and the graphic elements to be injected may be displayed in the target application. The graphic elements which are to be injected may then be injected into the application so that both the graphic elements to be injected and the existing graphic elements are displayed in the target application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08395641&OS=08395641&RS=08395641
owner: Google Inc.
number: 08395641
owner_city: Mountain View
owner_country: US
publication_date: 20111123
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field","Embodiments relate to graphical user interfaces.","2. Background","Software applications often have an accompanying graphical user interface (GUI) that allows a user to interact with the application in a visual manner. This often manifests itself as a series of windows, boxes, buttons, toolbars, and status bars displayed to the user. Generally these are programmed by a manufacturer or a developer in a manner that does not provide an interface that allows for the insertion of additional graphic elements. However, some software applications provide such an interface, which is referred to as plugin system.","A plugin or extension extends the functionality through the use of the plugin system. For example, several web browsers have plugin systems which allow for the creation of plugins. However, these plugin systems have a defined interface and often only allow limited modification of a web browser's GUI. For example, a plugin system might provide an interface to add a button to a toolbar, but might not permit for the creation of a status bar. Moreover, software applications that don't provide plugin systems may have no defined interface for extending functionality at all.","Embodiments include methods and systems for injecting graphic elements into a target application. In an embodiment, an existing graphic element sizing configuration of one or more existing graphic elements displayed in a target application is intercepted. An injectable graphic element sizing configuration of one or more injectable graphic elements is determined. A resultant sizing configuration is determined based upon the existing graphic element sizing configuration and the injectable graphic element sizing configuration, wherein the resultant sizing configuration permits the display of the one or more injectable graphic elements and the one or more existing graphic elements in the target application. The resultant sizing configuration is applied to the one or more existing graphic elements. The one or more injectable graphic elements are injected into the target application, wherein the one or more injectable graphic elements are displayed in the target application.","Further embodiments, features, and advantages of the invention, as well as the structure and operation of the various embodiments of the invention are described in detail below with reference to accompanying drawings.","While the present invention is described herein with reference to the illustrative embodiments for particular applications, it should be understood that the invention is not limited thereto. Those skilled in the art with access to the teachings provided herein will recognize additional modifications, applications, and embodiments within the scope thereof and additional fields in which the invention would be of significant utility.","In the detailed description of embodiments that follows, references to \u201cone embodiment\u201d, \u201can embodiment\u201d, \u201can example embodiment\u201d, etc., indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the art to effect such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1A","b":["100","102","104","102","102","104"]},"Target application  may also include a coordinate-based positioning system for GUI . In a coordinate-based positioning system, graphical user interfaces may position individual existing graphic elements using a plurality of (x,y) coordinate pairs, wherein the x-value corresponds to a horizontal position and the y-value corresponds to a vertical position. These coordinate pairs may represent positions of individual pixels on a display.","In an example, target application  provides that the top left corner of existing graphic element  is positioned at coordinate pair (0, 0) and the bottom left corner is positioned at coordinate pair (0, 200). Thus, the height of existing graphic element  is 200 pixels. The top right corner of existing graphic element  is positioned at coordinate pair (100, 0) and the bottom right corner of existing graphic element  is positioned at coordinate pair (100, 200). Thus, the width of existing graphic element  is 100 pixels. In this example, existing graphic element  occupies the entirety of GUI . However, existing graphic element  may only partially occupy GUI , or a plurality of existing graphic elements may in totality occupy the entirety of GUI .","In either such a case, if an additional graphic element were to be inserted or injected in GUI , there may be no room to display the additional graphic element and existing graphic element . For example, if a graphic element such as a toolbar is inserted into GUI  in a conventional system, the inserted graphic element may have to be overlayed on top of existing graphic element , thereby blocking part of existing graphic element .","However, according to an embodiment an injectable graphic element may be inserted into a GUI which may not have additional space for the inserted element.  is a diagram of a target application after an injectable graphic element has been inserted, according to an embodiment.","In the example of , injectable graphic element  is located above existing graphic element . However, injectable graphic element  may be located anywhere. For example, injectable graphic element  may be located above or below existing graphic element , or to the left or right of existing graphic element . Injectable graphic element  may also be injected at any point during target application's  execution. In the example of , injectable graphic element  may be described by coordinates (0, 0) at the top left, (0, 50) at the bottom left, (100, 0) at the top right, and (100, 50) at the bottom right. Therefore, injectable graphic element  may have a height of 50 pixels and a width of 100 pixels. Thus, in order to insert injectable graphic element  into GUI , such that it is not overlayed, existing graphic element  may need to be resized.","For example, if injectable graphic element  is to be inserted above existing graphic element , existing graphic element's  height may need to be reduced, such that injectable graphic element  and existing graphic element  may be displayed concurrently. Thus, in order to insert injectable graphic element  above existing graphic element , existing graphic element's  height may be reduced from 200 pixels in height (depicted in ) to 150 pixels in height (depicted in ). This may permit injectable graphic element  and existing graphic element  to be displayed in target application .",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2","b":["200","210","200"]},"A sizing configuration may describe the size and position of any type of graphic element. In particular, the existing graphic element sizing configuration may describe the size and position of an existing graphic element. An injectable graphic element sizing configuration may describe the size and position of an injectable graphic element. A sizing configuration may be fixed statically by a developer during the programming of the application, calculated based upon a variety of factors, or both. For example, a developer may fix the existing graphic element sizing configuration of an existing graphic element, such that the existing graphic element has a width of 100 and a height of 200 (as depicted in ). The developer may further fix the existing graphic element sizing configuration such that the top left corner of the existing graphic element is set to the coordinate of (0,0). However, in other cases, a sizing configuration may instead set the width and height of a graphic element dynamically based upon a variety of factors, such as whether a particular window is maximized or based upon other sizing configurations. A sizing configuration may also be fixed initially and then change subsequently based upon a variety of factors, such as whether a particular window is maximized. However, at any given time a particular sizing configuration describes the current size of its associated graphic element. A sizing configuration may also include coordinate points describing the size and position of a graphic element. However, a person having skill in the art would recognize a sizing configuration may also be described in other ways. For example, the sizing configuration may be described by a height and width, or a series of equations.","The existing graphic element sizing configuration may be intercepted in a variety of ways. For example, the existing graphic element sizing configuration may be intercepted by placing a hook at the operating system level through the use of an application-programming interface (API). A hook is a technique in which one piece of software is notified when another piece of software performs some event. However, despite whether a target application may provide for the placement of hooks, the operating system may provide for the placement of hooks in any application, for example target application  of . This may allow for the placement of hooks such that the hooks may receive events from any existing graphic element of any target application in the operating system. For example, a hook may be placed to intercept any combination of application resize events, initialization events, or destruction events. Additionally, prior to the insertion of an injectable graphic element, an event may be triggered causing the existing graphic element sizing configuration to be intercepted. This may allow for existing graphic element sizing configurations to be intercepted any time an injectable graphic element is to be inserted into the target application, as well as upon resize, initialization, and destruction of the target application.","The existing graphic element may be located in the target application by using a number of criteria or predicates that may be predefined or dynamically determined. For example, the existing graphic element may be located based upon searching for a graphic element that has a certain color and a certain size. However, the criteria may be based on any property that may be ascertained or calculated from a graphic element. The existing graphic element may also be located based upon dynamic criteria, such as actions taken by a user, a series of equations, conditions, or parameters. If an existing graphic element is not found based upon the criteria, one or more hooks may be placed in the target application to receive graphic element creation events. In such a case, once a graphic element is created that matches the criteria, that graphic element may be used as the existing graphic element. Additionally, if at any time, a destruction event from the existing graphic element is intercepted, another existing graphic element may be located that matches the predefined or dynamically determined criteria. In such a case, the newly matched existing graphic element may then be resized accordingly.","At block , an injectable graphic element sizing configuration of an injectable graphic element is determined. The sizing configuration of the injectable graphic element may be determined dynamically based upon the intended position of the injectable graphic element. For example, the injectable graphic element may be placed to the left or right of the existing graphic element. In such a case, the height of the injectable graphic element sizing configuration may equal the height of the existing graphic element, and the width may equal the current width of the injectable graphic element. However, the injectable graphic element may instead be placed to the top or bottom of the existing graphic element. In that case, the width of the injectable graphic element sizing configuration may equal the width of the existing graphic element, and the height may equal the current height of the injectable graphic element. Similar to the existing graphic element sizing configuration, the injectable graphic element sizing configuration may include coordinate points describing the size and position of the injectable graphic element. However, a person having ordinary skill in the art would recognize that the existing graphic element sizing configuration may also be described in other ways. A person having ordinary skill in the art would also recognize that neither the height nor the width of the injectable graphic element sizing configuration needs to match the respective sizes of the existing graphic element, but instead that the existing graphic element may surround in part or in whole the injectable graphic element.","At block , a resultant sizing configuration may be determined based upon the existing graphic element sizing configuration and the injectable graphic element sizing configuration, such that both the existing graphic element and the injectable graphic element are displayed in the target application. The resultant sizing configuration may be determined based upon the intended position of the injected element. For example, the injectable graphic element may be inserted above or below the existing graphic element. In such a case, the resultant sizing configuration may be determined by subtracting the injectable graphic element sizing configuration's height from the existing graphic element's sizing configuration's height. The width may be determined by the current width of the existing graphic element. As discussed above, the height of the existing graphic element and the injectable graphic element may be determined from coordinates which are stored in the existing graphic element sizing configuration and the injectable graphic element sizing configuration. However, the height may also be determined by a height value directly stored in the injectable graphic element sizing configuration, the existing graphic element sizing configuration, or both. The injectable graphic element may instead be inserted to the left or right of the existing graphic element. In such a case, the resultant element sizing configuration's width may be determined by subtracting the injected graphic element sizing configuration's width from the existing graphic element's sizing configuration's width. The width may be determined by the current sizing of the existing graphic element. The height of the existing graphic element and the injectable graphic element may be determined from coordinates which may be stored in the existing graphic element sizing configuration and the injectable graphic element sizing configuration. The height of the existing graphic element and the injectable graphic element may also be determined by a height value stored directly in the injectable graphic element sizing configuration, or the existing graphic element sizing configuration, or both.","In some cases, the height or the width of the target application's GUI may not be able to support the display of the injectable graphic element and the existing graphic element. For example, the existing graphic element may not be able to be resized beyond a certain point or at all, without being clipped. In such a case, the injectable graphic element is injected and the existing graphic element may be clipped in order to display the injectable graphic element. In another case, the target application's GUI may not be large enough to support the display of the entire injectable graphic element. In such a case, the injectable graphic element may be clipped in order to be displayed in the target application.","At block , the resultant sizing configuration is applied to the existing graphic element. This may occur by setting the sizing configuration of the existing graphic element to the resultant sizing configuration, thereby permitting the existing graphic element and the injectable graphic element to be displayed in the application. For example, in the case of the injectable graphic element being inserted above or below an existing graphic element, the resultant sizing configuration when applied to the existing graphic element may reduce the height of existing graphic element. If the injectable graphic element were to be inserted to the right or left of an existing graphic element, the resultant sizing configuration when applied to the existing graphic element, may reduce the width of existing graphic element.","At block , the injectable graphic element is injected into the application so that both the injectable graphic element and the existing graphic element may be displayed. Injection may occur by utilizing an operating system level API. Similar to the placement of hooks, despite whether a target application may provide for the addition of graphic elements, the operating system API may also allow for modification of any GUI of any target application. The GUI of the target application may be arranged in a hierarchical graphical user interface system. Under such an arrangement, the graphic elements may be stored in a parent-child or tree-like relationship. For example, if the existing graphic element contained further graphic subelements, those subelements would be children to the existing graphic element. An operating system level API may provide access to such a hierarchical tree, wherein the addition of elements may be permitted. Thus, the injectable graphic element may be injected by finding a parent existing graphic element of which the injectable graphic element is intended to be a child and inserting the injectable graphic element. This may then have the effect of displaying the injectable graphic element in a GUI of a target application, for example GUI .",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 3","FIGS. 1A-1B","FIG. 1B"],"b":["300","302","304","302","102","302","304","106","302","304","300","200","304","302","302","200"]},"Status bar  contains additional graphic elements. In particular, status bar  includes a message , an information link , an enable button , and an ignore button . Message  may be displayed as text on status bar . However, message  may also be displayed as graphics or a combination of graphics and text on status bar . Accordingly, message  may include an informational message, which further explains the available actions a user may take. For example the informational message of message  may be \u201cwould you like to enable this software?\u201d Information link  may be a link to further information regarding the actions a user may take. For example, information link  may be a link to a website further explaining the software that may be enabled by enable button . The website may be displayed in browser window . Enable button , when pressed, may enable a particular software component. For example, enable button , when pressed, may enable a plugin. Ignore button , when pressed, may hide status bar , such that browser window  may be displayed in its original position and size.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4","b":["400","400","402","404","406","408","406","410","408","406","400","402","404"]},"Interceptor  may be configured to intercept existing graphic element sizing configurations from existing graphic element . This may occur by placing hooks to intercept sizing, resizing, or destruction events from existing graphic element  using an operating system API. For example, upon initialization of GUI , existing graphic element  may be configured with a particular size. Interceptor  may intercept this particular size upon the initialization. Additionally, the size of existing graphic element  may change due to actions of a user. For example, the user may maximize the target application or resize the window. This may cause GUI  to automatically resize existing graphic element  to a new size. Accordingly, interceptor  may intercept the new existing graphic element sizing configuration of existing graphic element . Once the size of existing graphic element  has been intercepted, the injection manager may determine the appropriate size of injectable graphic element  and existing graphic element .","Injection manager  may be configured to locate existing graphic element  in GUI . Injection manager  may locate existing graphic element  by using a number of criteria or predicates that may be predefined or dynamically determined. For example, injection manager  may be preconfigured to look for an existing graphic element that has a certain color and a certain size. However, the criteria may be based on any property that may be ascertained or calculated from a graphic element. Injection manager  may then search the hierarchical graphic tree of GUI  until injection manager  finds a suitable graphic element. Injection manager  may also be configured to locate existing graphic element  based upon dynamic criteria, such as actions taken by a user, a series of equations, or conditions.","In some cases, a suitable graphic element may not be located. In such cases, one or more hooks may be installed in the parent graphic element, in which the injectable graphic element  may injected, which receive events related to the creation of child elements in the parent graphic element. Once a child graphic element is created that may be suitable based upon the criteria, the newly created child element may be used as the existing graphic element. Additionally, if at any time, a destruction event from existing graphic element  is received by interceptor , injection manager  may search for another existing graphic element that matches the predefined or dynamically determined criteria. In such a case, the newly matched existing graphic element may then be resized accordingly.","Injection manager  may also be configured to determine the appropriate size of injectable graphic element  and existing graphic element  in order to permit them both to be displayed in GUI . This may be accomplished in accordance with block  and block  of method . Thus, depending on the intended placement of injectable graphic element  and the position of existing graphic element , an appropriate size may be determined for injectable graphic element . Moreover, a resultant sizing configuration may be determined for existing graphic element  based upon the existing graphic element sizing configuration intercepted by interceptor  and the intended position of injectable graphic element . This resultant sizing configuration may then be applied to existing graphic element .","In some cases, the resultant sizing configuration may result in existing graphic element  being clipped. For example, in certain configurations, existing graphic element  may only permit resizing to a certain point, or not at all. In such a case, existing graphic element  may be clipped when injectable graphic element  is inserted. Injectable graphic element  may also be clipped in certain cases. For example, injectable graphic element  may be clipped, if GUI's  size is not large enough to support the display of injectable graphic element .","Additionally, injection manager  may be configured to inject an injectable graphic element  into GUI . The injection may occur by using an operating system level API in a hierarchical GUI system, in accordance with block , of method . Injection may occur at any time during the execution of GUI . Injection manager may also be configured to trigger an event causing interceptor  to receive an existing graphic element sizing configuration in response to a request to inject injectable graphic element . However, depending on the type of target application, the injection may also occur through the use of a plugin system or an extension.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 5","FIGS. 1-4"],"b":["500","400","300","500"]},"One of ordinary skill in the art may appreciate that embodiments of the disclosed subject matter can be practiced with various computer system configurations, including multi-core multiprocessor systems, minicomputers, mainframe computers, computers linked or clustered with distributed functions, as well as pervasive or miniature computers that may be embedded into virtually any device.","For instance, a computing device having at least one processor device and a memory may be used to implement the above-described embodiments. A processor device may be a single processor, a plurality of processors, or combinations thereof. Processor devices may have one or more processor \u201ccores.\u201d","Various embodiments of the invention are described in terms of this example computer system . After reading this description, it will become apparent to a person skilled in the relevant art how to implement embodiments using other computer systems and\/or computer architectures. Although operations may be described as a sequential process, some of the operations may in fact be performed in parallel, concurrently, and\/or in a distributed environment, and with program code stored locally or remotely for access by single or multi-processor machines. In addition, in some embodiments the order of operations may be rearranged without departing from the spirit of the disclosed subject matter.","As will be appreciated by persons skilled in the relevant art, processor device  may also be a single processor in a multi-core\/multiprocessor system, such system operating alone, or in a cluster of computing devices operating in a cluster or server farm. Processor device  is connected to a communication infrastructure , for example, a bus, message queue, network, or multi-core message-passing scheme.","Computer system  also includes a main memory , for example, random access memory (RAM), and may also include a secondary memory . Secondary memory  may include, for example, a hard disk drive  and removable storage drive . Removable storage drive  may include a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash memory, or the like. The removable storage drive  reads from and\/or writes to a removable storage unit  in a well-known manner. Removable storage unit  may include a floppy disk, magnetic tape, optical disk, etc. which is read by and written to by removable storage drive . As will be appreciated by persons skilled in the relevant art, removable storage unit  includes a computer readable storage medium having stored thereon computer software and\/or data.","Computer system  (optionally) includes a display interface  (which can include input and output devices such as keyboards, mice, etc.) that forwards graphics, text, and other data from communication infrastructure  (or from a frame buffer not shown) for display on display unit .","In alternative implementations, secondary memory  may include other similar means for allowing computer programs or other instructions to be loaded into computer system . Such means may include, for example, a removable storage unit  and an interface . Examples of such means may include a program cartridge and cartridge interface (such as that found in video game devices), a removable memory chip (such as an EPROM, or PROM) and associated socket, and other removable storage units  and interfaces  which allow software and data to be transferred from the removable storage unit  to computer system .","Computer system  may also include a communications interface . Communications interface  allows software and data to be transferred between computer system  and external devices. Communications interface  may include a modem, a network interface (such as an Ethernet card), a communications port, a PCMCIA slot and card, or the like. Software and data transferred via communications interface  may be in the form of signals, which may be electronic, electromagnetic, optical, or other signals capable of being received by communications interface . These signals may be provided to communications interface  via a communications path . Communications path  carries signals and may be implemented using wire or cable, fiber optics, a phone line, a cellular phone link, an RF link or other communications channels.","Some embodiments may be directed to computer products comprising software stored on any computer readable medium. Such software, when executed in one or more data processing devices, causes a data processing device(s) to operate as described herein.","Certain embodiments may be implemented in hardware, software, firmware, or a combination thereof. Some embodiments may be implemented via a set of programs running in parallel on multiple machines.","The summary and abstract sections may set forth one or more but not all exemplary embodiments of the present invention as contemplated by the inventor(s), and thus, are not intended to limit the present invention and the appended claims in any way.","Embodiments of the present invention have been described above with the aid of functional building blocks illustrating the implementation of specified functions and relationships thereof. The boundaries of these functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternate boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed.","The foregoing description of the specific embodiments will so fully reveal the general nature of the invention that others can, by applying knowledge within the skill of the art, readily modify and\/or adapt for various applications such specific embodiments, without undue experimentation, without departing from the general concept of the present invention. Therefore, such adaptations and modifications are intended to be within the meaning and range of equivalents of the disclosed embodiments, based on the teaching and guidance presented herein. It is to be understood that the phraseology or terminology herein is for the purpose of description and not of limitation, such that the terminology or phraseology of the present specification is to be interpreted by the skilled artisan in light of the teachings and guidance.","The breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS\/FIGURES","p":["Embodiments of the invention are described with reference to the accompanying drawings. In the drawings, like reference numbers may indicate identical or functionally similar elements. The drawing in which an element first appears is generally indicated by the left-most digit in the corresponding reference number.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
