---
title: System and method for using an editable lifecycle event distribution list with a service metadata repository
abstract: A system and method for creating an editable service metadata asset lifecycle event notification distribution list in a service metadata repository. The system provides the capability for a distribution list owner to create a distribution list of one or more distribution recipients. A sender can send a service metadata asset lifecycle event notification to the distribution list owner, and the members of the distribution list will also receive the service metadata asset lifecycle event notification. The system further provides the capability for the sender to edit the distribution list, prior to sending the message to the distribution list owner and the members of the distribution list.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08145680&OS=08145680&RS=08145680
owner: Oracle International Corporation
number: 08145680
owner_city: Redwood Shores
owner_country: US
publication_date: 20090202
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CLAIM OF PRIORITY","COPYRIGHT NOTICE","FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present application claims the benefit of priority under 35 U.S.C. \u00a7119(e) to U.S. Provisional Patent Application No. 61\/093,211 entitled \u201cSYSTEM AND METHOD FOR USING AN EDITABLE LIFECYCLE EVENT DISTRIBUTION LIST WITH A SERVICE METADATA REPOSITORY,\u201d filed on Aug. 29, 2008, which application is incorporated herein by reference.","A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document of the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","The invention is related to Service-Oriented Architecture in general, and particularly to an editable service metadata asset lifecycle event distribution list in a service metadata repository.","Service-Oriented Architecture (SOA) is based on the deconstruction of yesterday's monolithic applications and information technology infrastructure into a matrix of discrete, standards-based, network-accessible services. The process of transformation requires the organization, identification, and repurposing of applications and business processes of the existing information technology infrastructure. The transformation to SOA begins with an analysis of the IT infrastructure to identify applications, business processes, and other software assets that become services, or otherwise support the SOA.","A Service-Oriented Architecture implements the delivery of software services to clients over a network. SOA differentiates itself from other systems by these features: system resources are made available as loosely-coupled, independent services; services are made available through platform-independent and programming language-independent interfaces that are defined in a standardized way; and services are available both to clients and other services.","Described herein are embodiments that include systems and methods for creating an editable service metadata asset lifecycle event notification distribution list in a service metadata repository. The system provides the capability for a distribution list owner to create a distribution list of one or more distribution recipients. A sender can send a service metadata asset lifecycle event notification to the distribution list owner, and the members of the distribution list will also receive the service metadata asset lifecycle event notification. The system further provides the capability for the sender to edit the distribution list, prior to sending the message to the distribution list owner and the members of the distribution list.","Service-Oriented Architecture (SOA) is a new approach to information technology that connects people, process, and technology in a dynamic, distributed environment. Although SOA provides the agility required to innovate and compete in today's economy, it also increases system complexity. To mitigate this risk, organizations control and track information technology investments to ensure alignment with corporate objectives. A service metadata repository enables SOA governance that provides comprehensive insight into the business impact of SOA. A service metadata repository can enable SOA governance to span the SOA lifecycle and unite resources from across divisions and geographies in a collaborative holistic approach to corporate decision-making and compliance by providing the automated exchange of metadata and service information among service consumers, providers, policy decision points, and other governance tools.","In accordance with an embodiment, a service metadata repository provides role-based visibility into all SOA assets, regardless of source, through a centralized repository for SOA assets, such as business processes, services, applications, components, models, frameworks, policies, and data services. Visibility into assets under development minimizes redundancy and promotes service collaboration and reuse. A service metadata repository could also graphically display and navigate asset-to-asset and asset-to-project relationships and interdependencies to simplify impact analysis and ensure business alignment by enabling users to organize and link SOA assets to associated business processes.","Metadata is data about data, or more specifically, information about the content of the data; service metadata is information about the services in an SOA. Service producers use service metadata to describe what service consumers need to know to interact with the service, service producers, and service providers. Service metadata is stored in a metadata repository by service producers and then accessed by service consumers. In accordance with an embodiment, a service metadata repository provides visibility into the portfolio of assets, the traceability of the assets within that portfolio, the relationships and interdependencies that connect the assets to each other, the policies that govern use of the assets, and the projects that produce the assets and consume the assets.","Service metadata is data or other information that is produced by a service producer and used by a service consumer. Service producers and service consumers access the service metadata which can be provided in the form of files on a file system or stored in a database. Service artifacts include data service (.ds) files; XML Schema files; or Web Service Description Language (\u201cWSDL\u201d) files. The service metadata provides useful information about a service. Examples include a name, version, last modified timestamp, URL, or other properties. An asset is a representation of service metadata, or a part of service metadata in the service metadata repository. Service metadata assets can be stored in a service metadata repository. The data service files, XML Schema files, and WSDL files themselves can be stored in the repository but are assumed to be stored external to the repository, for example in a source configuration management (SCM) system.","It is not sufficient to simply store design time service metadata assets in a service metadata repository in order to allow reuse of service metadata assets and to promote SOA governance. There are additional problems with service metadata reuse. Determining whether the service assets have a sufficient quality is one problem. A further problem is how to ensure that the right people and the right business processes receive or have access to the right service metadata assets and whether the service metadata assets have been approved by the proper authorities.","Previously, service metadata repositories relied upon the skill of human users (administrators or registrars) to review the asset for quality and to determine that the right people see the right assets. The human user reviewed the asset manually, assigned the asset to a domain expert for review of the content, and after approval by a domain expert, the asset was moved to registered status. Users could then access the registered asset. In some cases, half a dozen different domain experts might be involved in the approval decisions at different stages. For example, an architect might need to approve a WSDL asset before a subsequent approval by a documentation expert. This potentially results in a large number of manual steps in the review and approval process for service metadata assets that must be performed by the administrator or registrar.","What is needed is a way to automatically ensure that the appropriate people and business processes are notified when a relevant service metadata lifecycle event is generated. One approach to this problem is to permit potential recipients of service metadata asset lifecycle event notifications to create their own notification distribution list so that when a distribution list owner is notified of a service metadata lifecycle event, the members of the distribution list are also notified of the service metadata lifecycle event. Although the notification distribution list is created by the distribution list owner, the sender can edit the distribution list for a specific notification prior to sending a notification to remove specific distribution list members, to avoid exposure of sensitive information and\/or materials.","An embodiment of a system for creating an editable service metadata asset lifecycle event notification distribution list is shown in . A service metadata repository  contains service metadata assets . Examples of service metadata repository  include Oracle\u00ae Enterprise Repository or AquaLogic\u00ae Enterprise Repository.","A distribution list owner , using  a browser , creates a list of distribution recipients which is stored  in a table  associating the distribution recipients with the distribution list owner. In accordance with one embodiment, the table is a link table in a database; other alternatives are contemplated. In one embodiment, the distribution list owner is assigned to a service metadata asset as a submitter, approver, or reviewer of the service metadata asset. The distribution list owner may also be a user who submitted the service metadata asset, the system registrar, an administrator, or any other user who is registered with the asset.","The browser  and\/or the browser  can be a web browser, a client-side application, a thin client application executing inside of a browser, a browser on a mobile device, a dynamically generated web page downloaded from a server into a browser, and other alternatives are contemplated. In accordance with one embodiment, the browser interacts with the metadata service repository through a plug-in on the browser and an application programming interface (API) on the metadata service repository.","A sender , using  a browser , generates an event  associated with a service metadata asset , such as by making a change to the service metadata asset . In one embodiment, the sender has approved, reviewed, made a change, or generated another event associated with the service metadata asset. The sender may also be an approver, a reviewer, the system registrar, an administrator, or any other user who is registered with the asset. An event such as a change to the service metadata asset  causes  an asset lifecycle event notification template  to automatically generate an electronic message to be sent  to queue component  for delivery to recipients who are associated with the service metadata asset . The asset lifecycle event could be generated automatically, or as the result of a discretionary action by the sender. In one embodiment, the sender generates an electronic message to be sent to queue component  for delivery to recipients who are associated with the service metadata asset . The queue component  then adds  the distribution recipients associated with the distribution list owner in the link table  as additional recipients of the event notification.","In accordance with one embodiment, the service metadata repository  then prompts  the sender  to edit the list of distribution recipients , providing the opportunity for the sender to remove distribution recipients from the event notification.","The queue component can be specialized for certain protocols for sending event notifications such as SMTP or can be generalized for sending different types of event notifications. In one embodiment, the queue component  is part of the service metadata repository. In alternative embodiments, the queue component  is a plug-in to an email server, email client, an integrated development environment, or browser . Other alternatives are contemplated.","In an alternative embodiment, a client-side application such as browser , an email client, or another application prompts  the sender to edit the list of distribution recipients , providing the opportunity for the sender to remove distribution recipients from the event notification.","As further shown in , the sender  sends  the edited list of distribution recipients back to the queue component . The queue component  then sends  the service metadata asset lifecycle event notification to the distribution list owner  and sends  the service metadata asset lifecycle event notification to the edited list of distribution recipients . In an embodiment for which the queue component  is a plug-in to an email client, the sender  uses the queue component  to send the service metadata asset lifecycle event notification via email to the distribution list owner  and the edited list of distribution recipients .",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 2","FIG. 1"],"b":["200","202","204","206","208","210"]},"Although described as a series of steps, other alternatives are contemplated, and the steps do not need to be executed in the order described above. Furthermore, the system and methods described above can take place as a single process and\/or a single system, or in a distributed environment involving many different processes and\/or many different systems. In some embodiments, email or other messaging systems are used for the event notifications.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 3","FIG. 3","FIG. 4"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 4","FIG. 5"],"b":["400","402","404","406"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 5","b":["500","502","504","506","500","508","502","504","506","508"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 6","FIG. 6"],"b":["600","602","604","606"]},"In accordance with one embodiment, asset event notifications may include both discretionary event notifications and automated event notifications. Discretionary event notifications vary depending on circumstance and can be customized by the sender. Automated event notifications are processed by the workflow without involving customization.","In accordance with one embodiment, alternative events that can generate automated notifications include Asset Accepted, Asset Active, Asset Deletion, Asset Inactive, Asset Registered, Asset Retired, Asset Unaccepted, Asset Unregistered, Asset Unsubmitted, Asset Used, Asset Submission Rejection, Asset Editor submission, Asset Assigned, Asset Tab Approved, Asset Tab Unapproved, Asset Unassigned, Compliance Template Applied, New Asset Version under development, New Version Registered, Repository submission, Usage Reassigned, and other alternatives are contemplated. Different notifications can be sent to different users depending upon the specific event.","In an alternative embodiment, the distribution list can include email addresses that are not associated with a user. In one alternative, the service metadata repository only supports the system registrar as a distribution list owner if the system registrar is a user. Another alternative embodiment enables the system registrar to own a distribution list without being a user.","In accordance with an embodiment, the sender of a service metadata lifecycle event notification is prompted with the opportunity to edit the recipient's service metadata lifecycle event notification distribution list in order to remove specific distribution list members to avoid exposure of sensitive information and\/or materials. Examples of specific distribution list members to remove include (a) employees who do not have access to a specific project, (b) members of other companies, and\/or (c) foreign nationals.","In an embodiment that uses object-oriented programming, classes can be used to save and load the distribution lists. In a specific embodiment, an SMTP Queue component in the service metadata repository provides the distribution list to the sender.","Service metadata asset distribution lists can be created so that list members are automatically copied on certain notifications that are generated as part of the asset registration process. Service metadata asset distribution lists can help automate the asset registration workflow as members of the distribution list are notified about asset registration events that the list owner is involved in as an asset reviewer or approver. For example, if a list owner is expecting to be absent, the list owner can delegate asset review and approval responsibility by adding other authorized users to their email distribution list.","An advantage of this system is the ability for a user to specify a distribution list of email addresses and users which will be copied on any workflow interaction that the user is involved in. This provides the ability for users to manage their distribution lists and for workflow email notifications to abide by and use the distribution lists in sending email.","In one embodiment, service metadata asset distribution lists are created on a user's MyStuff page using the My Email Notifications page, as described above. Existing users can be selected for a distribution list. In one embodiment, external email addresses can also be selected for a distribution list. In one embodiment, an administrator can configure and control the types of recipients that can be placed on a distribution list, for example, disallowing email addresses that are not associated with users.","In some embodiments, the distribution list can be automatically populated by a lifecycle event notification message, and the sender is provided the discretion to remove distribution recipients. In one embodiment, the sender removes distribution recipients one-by-one on a message-by-message basis. In an alternative contemplated embodiment, the sender can create customized rules to modify a distribution list, thereby not requiring the sender to remove distribution recipients one-by-one on a message basis (i.e., rules for a particular sender would not send certain event notifications outside a company, etc.).","In some embodiments, the distribution list owner creates a list of recipients, including users, email addresses, and other distribution lists.","In one embodiment, the event notification message includes a link to the service metadata asset. Users on an event notification distribution list still only have their normal security access to the service metadata repository, so the distribution recipient may not have access to the service metadata asset, or even to view the service metadata asset in the service metadata repository.","In one embodiment, the distribution list owner uses an asset editor feature to click on icons, such as approved by, registered by, submitted by, etc., which generate an email to approvers and reviewers registered with an asset and to the distribution lists associated with the registered approvers and reviewers.","In one embodiment, a system includes a service metadata repository, a table, one or more service metadata assets stored in the service metadata repository, and an email client. The service metadata repository receives from a distribution list owner one or more distribution recipients. The table associates the one or more distribution recipients with the distribution list owner. The service metadata repository receives from a sender a service metadata asset lifecycle event notification to send to the distribution list owner. The email client presents the sender with the one or more selected distribution recipients associated with the distribution list owner in the table, wherein the email client receives an edited list of distribution recipients; and wherein the email client sends the metadata asset lifecycle event notification to the distribution owner and the edited list of distribution recipients.","An example use case is described below:","1. A first user logs into the application (acting as a distribution list owner).","2. The first user creates a new distribution list in a My Stuff page.","3. The first user adds users and additional emails to the distribution list.","4. A second user logs into the asset editor (acting as a sender) and loads an asset associated with the first user.","5. The second user clicks on the envelopes on an administration tab and ensures that the distribution list for the asset reflects the first user's distribution list in the notification. In one embodiment, distribution list recipients who do not have access to view this asset will not have their email show up in the notification even though they are listed on the first user's distribution list.","6. The second user edits the distribution list to remove distribution recipients who should not receive the notification.","7. The notification is sent to the first user and the edited list of distribution recipients.","An alternative use case is described below:","1. Users are added to a system registrar's distribution list.","2. Users are added to a first user's distribution list.","3. A first user submits an asset via a quick submit feature, and a registrar submits an asset via an asset editor.","4. Users in the system registrar's distribution list receive notification messages for the \u201cAsset Editor Submission\u201d event and users in the first user's distribution list receive notification messages for the \u201cRepository Submission\u201d event.","5. The registrar accepts the quick submitted asset from the first user. Notification messages for the \u201cAsset Accepted\u201d event are sent to all users in the first user's distribution list.","6. The registrar assigns the asset to a second user and a third user. Notification messages for the \u201cAsset Assign\u201d event are received by all users in the distribution lists for the second and third users.","7. The second and third users approve all of their assigned tabs. Notification messages for the \u201cAsset Tab Approved\u201d event are sent to the registrar and all users in the registrar's distribution list. Notification messages for the \u201cAll Asset Tabs Approved\u201d event are sent to all users in the registrar's distribution list (in addition to previously-assigned user's distribution lists).","8. The second and third users unapprove each of their assigned tabs. Notification messages for the \u201cAsset Tab Unapproved\u201d event are sent to all users in the registrar's distribution list. Notification messages for the \u201cAsset Tab Unapproved\u201d event are sent to all users in the User 1's distribution list.","9. Registrar registers the quick submitted asset. Notification messages for the \u201cRegistration\u201d event are sent to the recipient and all users in the recipient's distribution list.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 7","FIG. 1","FIG. 1"],"b":"700"},"Computing system  comprises components coupled via one or more communication channels (e.g., bus ) including one or more general or special purpose processors , such as a Pentium\u00ae, Centrino\u00ae, Power PC\u00ae, digital signal processor (\u201cDSP\u201d), and so on. System  components also include one or more input devices  (such as a mouse, keyboard, microphone, pen, and so on), and one or more output devices , such as a suitable display, speakers, actuators, and so on, in accordance with a particular application. (It can be appreciated that input or output devices can also similarly include more specialized devices or hardware\/software device enhancements suitable for use by the mentally or physically challenged.)","System  also includes a computer readable storage media reader  coupled to a computer readable storage medium , such as a storage\/memory device or hard or removable storage\/memory media; such devices or media are further indicated separately as storage  and memory , which may include hard disk variants, floppy\/compact disk variants, digital versatile disk (\u201cDVD\u201d) variants, smart cards, read-only memory, random access memory, cache memory, and so on, in accordance with the requirements of a particular application. One or more suitable communication interfaces  may also be included, such as a modem, DSL, infrared, RF or other suitable transceiver, and so on for providing inter-device communication directly or via one or more suitable private or public networks or other components that may include but are not limited to those already discussed.","Working memory  further includes operating system (\u201cOS\u201d)  elements and other programs , such as one or more of application programs, mobile code, data, and so on for implementing system  components that might be stored or loaded therein during use. The particular OS or OSs may vary in accordance with a particular device, features or other aspects in accordance with a particular application (e.g. Windows\u00ae, WindowsCE\u2122, Mac\u2122, Linux, Unix or Palm\u2122 OS variants, a cell phone OS, a proprietary OS, Symbian\u2122, and so on). Various programming languages or other tools can also be utilized, such as those compatible with C variants (e.g., C++, C#), the Java\u2122 2 Platform, Enterprise Edition (\u201cJ2EE\u201d) or other programming languages in accordance with the requirements of a particular application. Other programs  may further, for example, include one or more of activity systems, education managers, education integrators, or interface, security, other synchronization, other browser or groupware code, and so on, including but not limited to those discussed elsewhere herein.","When implemented in software (e.g. as an application program, object, agent, downloadable, servlet, and so on in whole or part), a component may be communicated transitionally or more persistently from local or remote storage to memory (SRAM, cache memory, etc.) for execution, or another suitable mechanism can be utilized, and components may be implemented in compiled or interpretive form. Input, intermediate or resulting data or functional elements may further reside more transitionally or more persistently in a storage media, cache or other volatile or non-volatile memory (e.g., storage device  or memory ), in accordance with a particular application. Embodiments can include computer-based methods and systems which may be implemented using a conventional general purpose computer(s) or a specialized digital computer(s) or microprocessor(s) or virtual machine(s), programmed according to the teachings of the present disclosure. Appropriate software coding can readily be prepared by programmers based on the teachings of the present disclosure.","Embodiments can include a computer readable medium, such as a computer readable storage medium. The computer readable storage medium can have stored instructions which can be used to program a computer to perform any of the features present herein. The storage medium can include, but is not limited to, any type of disk including floppy disks, optical discs, DVD, CD-ROMs, micro drive, and magneto-optical disks, ROMs, RAMs, EPROMs, EEPROMs, DRAMs, flash memory or any media or device suitable for storing instructions and\/or data. The present invention can include software for controlling the hardware of a computer, such as a general purpose\/specialized computer(s) or microprocessor(s), and for enabling them to interact with a human user or other mechanism utilizing the results of the present invention. Such software may include, but is not limited to, device drivers, operating systems, virtual machines, virtual operating systems, execution environments\/containers, and user applications.","Embodiments can include providing code for implementing processes. The providing can include providing code to a user in any manner. For example, the providing can include providing the code on a physical media to a user; or any other method of making the code available.","Embodiments can include a computer-implemented method for transmitting the code which can be executed at a computer or a virtual machine to perform any of the processes of embodiments. The transmitting can include transfer through any portion of a network, such as the Internet; through wires; or any other type of transmission. The transmitting can include initiating a transmission of code; or causing the code to pass into any region or country from another region or country. A transmission to a user can include any transmission received by the user in any region or country, regardless of the location from which the transmission is sent.","The foregoing description of embodiments has been provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations will be apparent to one of ordinary skill in the relevant arts. For example, steps performed in the embodiments of the invention disclosed can be performed in alternate orders, certain steps can be omitted, and additional steps can be added. The embodiments were chosen and described in order to best explain the principles of the invention and its practical application, thereby enabling others skilled in the art to understand the invention for various embodiments and with various modifications that are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the claims and their equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Preferred embodiments of the present invention will be described in detail based on the following figures, wherein:",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
