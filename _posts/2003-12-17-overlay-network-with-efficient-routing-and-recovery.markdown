---
title: Overlay network with efficient routing and recovery
abstract: A network having a plurality of nodes interconnected by links (virtual communication channels) is disclosed. In one embodiment, the nodes may communicate with each other in a decentralized or peer-to-peer manner. A method for establishing the links among the nodes is disclosed. The links may be established such that the system is able to operate efficiently. In particular, the manner in which the nodes are interconnected by links may enable the system to efficiently route messages and efficiently recover from network failures.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07570600&OS=07570600&RS=07570600
owner: Symantec Operating Corporation
number: 07570600
owner_city: Cupertino
owner_country: US
publication_date: 20031217
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","This invention relates to computer networks and, more particularly, to an overlay network comprising a plurality of nodes that are interconnected in a manner that enables message routing and failure recovery to be performed efficiently.","2. Description of the Related Art","Computer networks are important for many different applications. One important type of networking is referred to as peer-to-peer or P2P networking. As used herein, a peer-to-peer network is generally used to describe a decentralized network of peer nodes where each node may have similar capabilities and\/or responsibilities. Participating peer nodes in a P2P network may communicate directly with each other. Work may be done and information may be shared through interaction among the peers. In addition, in a P2P network, a given peer node may be equally capable of serving as either a client or a server for another peer node.","A peer-to-peer network may be created to fulfill some specific need, or it may be created as a general-purpose network. Some P2P networks are created to deliver one type of service and thus typically run one application. For example, Napster was created to enable users to share music files. Other P2P networks are intended as general purpose networks which may support a large variety of applications. Any of various kinds of distributed applications may execute on a P2P network. Exemplary peer-to-peer applications include file sharing, messaging applications, distributed data storage, distributed processing, etc.","In a typical P2P network, peer nodes communicate with each other via links or virtual communication channels built on top of lower level network connections, such as local area network (LAN) or wide area network (WAN) connections. The set of nodes interconnected by these links is also referred to herein as an overlay network. Any given node in the P2P network may have links to only a small number of nodes relative to the total number of nodes in the system. For example, in a system with 1000 nodes, perhaps each node may have links to only 10 other nodes.","Nodes may send messages to other nodes via the links. For example, various nodes may store routing information that indicates which links to traverse to send messages to particular destinations. The manner in which the nodes are interconnected with links may affect efficiency of the system. Thus, it is desirable to establish the links in such a way that the system is able to operate efficiently. In particular, in many applications it is desirable to establish the links in such a way that the system is able to efficiently route messages and efficiently recover from network failures.","A plurality of links may be established among a plurality of N nodes. Each link between two nodes may comprise a virtual communication channel between the two nodes. According to one embodiment of a method for establishing the links, an ordering for the plurality of N nodes may be determined such that the nodes are circularly ordered as nodes D, D, D, D. In one embodiment, the ordering may be based on node IDs of the nodes.","Each node Din the plurality of nodes may establish a link to X other nodes chosen as nodes D, D, . . . D, wrapping to Dif necessary. For at least a subset of the plurality of nodes, each node Din the subset may establish a link with one or more additional chosen nodes not in the set D, D, . . . D, D, D, . . . D. In one embodiment, for each node Din the subset, each node in the set D, D, . . . D, D, D, . . . Dmay also establish a link with the one or more additional nodes chosen by the node D.","In one embodiment, each node Din the subset may choose the additional node(s) not in the set D, D, . . . D, D, D, . . . Dby randomly choosing the additional node(s) and may establish a link to the randomly chosen node(s).","In various embodiments, the links formed as described above may be utilized to perform network communication of any kind. In one embodiment, the nodes may utilize the links to communicate with one another in a decentralized or peer-to-peer manner. In one embodiment, routes for sending messages among the nodes may be constructed as a mapping to the links, and messages may be sent over these routes.","While the invention is susceptible to various modifications and alternative forms, specific embodiments thereof are shown by way of example in the drawings and are described in detail. It should be understood, however, that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed, but on the contrary, the intention is to cover all modifications, equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1","b":["100","110","100","110","110","110","110","110"]},"As shown, nodes A-E may be coupled through a network . In various embodiments, the network  may include any type of network or combination of networks. For example, the network  may include any type or combination of local area network (LAN), a wide area network (WAN), an Intranet, the Internet, etc. Exemplary local area networks include Ethernet networks, Fiber Distributed Data Interface (FDDI) networks, and token ring networks. Also, each node  may be coupled to the network  using any type of wired or wireless connection medium. For example, wired mediums may include a modem connected to plain old telephone service (POTS), Ethernet, fiber channel, etc. Wireless connection mediums may include a satellite link, a modem link through a cellular service, a wireless link such as Wi-Fi\u2122, a wireless connection using a wireless communication protocol such as IEEE 802.11 (wireless Ethernet), Bluetooth, etc.","In one embodiment, the nodes  may form a peer-to-peer network. For example, the system  may comprise a decentralized network of nodes  where each node  may have similar capabilities and\/or responsibilities. As described below, each node  may communicate directly with at least a subset of the other nodes . In one embodiment, messages may be propagated through the system  in a decentralized manner. For example, in one embodiment each node  in the system  may effectively act as a message router.","In another embodiment, the nodes  in the system  may be organized or may communicate using a centralized networking methodology, or the system  may utilize a combination of centralized and decentralized networking methodologies. For example, some functions of the system  may be performed by using various nodes  as centralized servers, whereas other functions of the system  may be performed in a peer-to-peer manner.","In one embodiment, each node  may have an identifier (ID). The ID of a node  may comprise any kind of information usable to identify the node , such as numeric or textual information. In one embodiment, a node ID may comprise a 128-bit (or other length) Universally Unique IUD (UUID). Universally Unique IDs or UUIDs may be allocated based on known art that ensures that the UUIDs are unique.","Referring now to , a diagram of one embodiment of a node  in the system  is illustrated. Generally speaking, a node  may include any of various hardware and software components. In the illustrated embodiment, the node  includes a processor  coupled to a memory , which is in turn coupled to a storage device . The node  may also include a network connection  through which the node  couples to the network . The network connection  may include any type of hardware for coupling the node  to the network , e.g., depending on the type of node  and type of network .","The processor  may be configured to execute instructions and to operate on data stored within the memory . In one embodiment, the processor  may operate in conjunction with the memory  in a paged mode, such that frequently used pages of memory may be paged in and out of the memory  from the storage  according to conventional techniques. It is noted that the processor  is representative of any type of processor. For example, in one embodiment, the processor  may be compatible with the x86 architecture, while in another embodiment the processor  may be compatible with the SPARC\u2122 family of processors. Also, in one embodiment the node  may include multiple processors .","The memory  may be configured to store instructions and\/or data. In one embodiment, the memory  may include one or more forms of random access memory (RAM) such as dynamic RAM (DRAM) or synchronous DRAM (SDRAM). However, in other embodiments, the memory  may include any other type of memory instead or in addition.","The storage  may be configured to store instructions and\/or data, e.g., may be configured to store instructions and\/or data in a persistent or non-volatile manner. In one embodiment, the storage  may include non-volatile memory, such as magnetic media, e.g., one or more hard drives, or optical storage. In one embodiment, the storage  may include a mass storage device or system. For example, in one embodiment, the storage  may be implemented as one or more hard disks configured independently or as a disk storage system. In one embodiment, the disk storage system may be an example of a redundant array of inexpensive disks (RAID) system. In an alternative embodiment, the disk storage system may be a disk array, or Just a Bunch Of Disks (JBOD), (used to refer to disks that are not configured according to RAID). In yet other embodiments, the storage  may include tape drives, optical storage devices or RAM disks, for example.","As shown in , in one embodiment the storage  may store one or more storage objects . As used herein, the term \u201cstorage object\u201d may comprise any kind of data structure or entity used to store or represent data or information. In one embodiment, each storage object  may comprise a file. The storage objects  may include data or information of any kind, where the data is organized or structured in any way. In various embodiments, the storage objects  may be utilized within the system  in any application or to perform any function. Any number of storage objects  may be stored in the storage  of a given node .","In another embodiment, one or more of the storage objects  associated with the node  may be stored in the memory  instead of or in addition to the storage . For example, various storage objects  or portions of storage objects  may be transferred in and out of memory  from storage  as necessary, e.g., as required by other software executing on the node .","In one embodiment, each storage object  may have an identifier (ID). The ID of a storage object  may comprise any kind of information usable to identify the storage object , such as numeric or textual information. In one embodiment, a storage object ID may comprise a 128-bit Universally Unique ID (UUID). In one embodiment, various storage objects  may be replicated on different nodes . Multiple replicas of a storage object  may be linked together, e.g., so that data can be kept consistent across the replicas.","In one embodiment, the memory  may store lower level network software . The lower level network software  (also referred to as link layer software) may be executable by the processor  to interact with or control the network connection , e.g., to send and receive data via the network connection . The lower level network software  may also be responsible for discovering other nodes  or establishing communication links from the node  to other nodes . The memory  may also store topology and routing (T&R) layer software  which utilizes the lower level network software . Memory  may also store client application software  that utilizes the T&R layer software .","In one embodiment, the T&R layer software  may be executable by the processor  to create and manage data structures allowing client application software  to communicate with other nodes  in the system , e.g., to communicate with other client application software  executing on other nodes . In one embodiment, the client application software  may utilize the T&R layer software  to send messages to other nodes  via links established by the link layer software. Similarly, the T&R layer software  may pass messages received from other nodes  to the client application software , e.g., messages which originate from client application software  executing on other nodes . The T&R layer software  may also be involved in forwarding messages routed through the local node , where the messages originate from another node  and are addressed to another node  in the system .","In one embodiment the functionality of the T&R layer software  may be modularized into builder functionality and router functionality. For example, a builder component or engine  may be responsible for creating and managing data structures or routing information  representing topology of the system . A router component or message routing engine  may utilize the data structures or routing information  to send or forward messages to other nodes  in the system . The builder  and router  may interface with each other as necessary. For example, in the event of a network failure that invalidates existing routing information, the router  may request the builder  to recover or rebuild routing information  so that the router  can send or forward a message using a different route.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 3","b":["140","100","110","100","110","142","110","100","142","110","142","142","142","142","142"]},"In one embodiment, the lower level network software  executing on a given node  may be responsible for performing a node discovery process and creating links  with other nodes  as the node  comes online in the system . For example, in one embodiment, the lower level network software  may include a link layer that invokes a node discovery layer and then builds virtual node-to-node communication channels or links  to one or more of the discovered nodes . The nodes  with which a given node  establishes links are also referred to herein as neighbor nodes, or simply neighbors.","The resulting set of connected nodes  is referred to herein as a link mesh . In , each hexagon represents a node , and each line represents a link  between two nodes . It is noted that  is exemplary only, and in various embodiments, any number of nodes  may be connected together by the link mesh , and each node  may establish links  to any number of neighbor nodes . One embodiment of a method for establishing links  among the nodes  is described in detail below.","The nodes  interconnected by virtual links  effectively comprise an overlay network in which nodes communicate by routing messages to each other over the established links . In various embodiments, each virtual link  may be implemented using any of various networking methodologies or protocols. For example, in one embodiment, each virtual link  may be implemented using a network protocol such as TCP or UDP. Although a virtual link  may directly connect two nodes  with respect to the overlay network, the virtual link  or direct connection may be implemented as a network connection that passes through one or more intermediate devices or computer systems. For example, a virtual link  may be implemented as a network connection that passes through one or more devices such as routers, hubs, etc. However, when a first node  establishes a virtual link  to a second node , the first node  may pass messages to the second node  (and vice versa) via the virtual link  without the message being seen as a message on the overlay network by any intermediate nodes .","In one embodiment, nodes  in the system  may be organized or divided into multiple realms. As used herein, a realm refers to a group of nodes  that communicate with each other in a low-latency, reliable manner and\/or physically reside in the same geographic region. In one embodiment, each realm may comprise a local area network (LAN). As used herein, a LAN may include a network that connects nodes within a geographically limited area. For example, one embodiment of a LAN may connect nodes within a 1 km radius. LANs are often used to connect nodes within a building or within adjacent buildings. Because of the limited geographic area of a LAN, network signal protocols that permit fast data transfer rates may be utilized. Thus, communication among nodes  within a LAN (or within a realm) may be relatively efficient. An exemplary LAN may include an Ethernet network, Fiber Distributed Data Interface (FDDI) network, token ring network, etc. A LAN may also connect one or more nodes via wireless connections, such as wireless Ethernet or other types of wireless connections.","In one embodiment, each realm or LAN may have an identifier (ID). The ID of a realm may comprise any kind of information usable to identify the realm, such as numeric or textual information. In one embodiment, a realm ID may comprise a 128-bit Universally Unique ID (UUID).","For any given node  in a given realm, links  may be established from the node  to other nodes  in the same realm and\/or to nodes  in other realms (remote realms). The term \u201cnear neighbors\u201d may be used to refer to nodes  to which the given node  is connected in the same realm. The term \u201cremote neighbors\u201d may be used to refer to nodes  to which the given node  is connected in a different realm. As various messages are sent from a given node  in a given realm to other nodes , the messages may be sent to near neighbors and\/or remote neighbors. In one embodiment, send operations may be restricted to the local realm where possible. This may be useful, for example, to avoid the overhead of a wide area network (WAN) transfer. In one embodiment, an application programming interface (API) for sending a message may allow the client application software  executing on a node  to specify whether or how to restrict the send operation in this manner.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 4","b":["100","104","104","110","110","104","110","110","104","110","110","110","104","114"]},"As used herein, a \u201cwide area network (WAN) connection\u201d may comprise a network connection between two nodes in different realms or LANs . As shown in , WAN connections  may be utilized to interconnect the various realms, e.g., LANs , within the system . A WAN connection may allow two nodes  that are separated by a relatively long distance to communicate with each other. For example, in one embodiment a WAN connection  may connect two nodes  that are separated by 1 km or more. (WAN connections  may also be used to interconnect two nodes  in different realms or LANs, where the two nodes  are separated by a distance of less than 1 km.) In one embodiment, the data transfer rate via a WAN connection  may be relatively slower than the data transfer rate via a LAN connection . In various embodiments, a WAN connection  may be implemented in various ways. A typical WAN connection may be implemented using bridges, routers, telephony equipment, or other devices.","It is noted that  illustrates a simple exemplary system . In various embodiments, the system  may include any number of realms or LANs , and each realm or LAN  may include any number of nodes . Also, although  illustrates an example in which a single node from each realm is connected to a single node of each of the other realms, in various embodiments, various numbers of WAN connections  may be utilized to interconnect two realms or LANs. For example, a first node in a first realm may be connected to both a second node and a third node in a second realm. As another example, a first node in a first realm may be connected to a second node in a second realm, as well as a third node in the first realm being connected to a fourth node in the second realm.","As described above, each node  in the system  may be connected by links  to one or more other nodes . In various embodiments, any desired method may be utilized to determine how to link together the various nodes . The manner in which the nodes  are interconnected with links  may affect various properties of the system , such as its efficiency in routing messages and recovering from network failures.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 5","FIG. 5","FIG. 4","FIG. 5"],"b":["142","110","110","100","110","142","110"]},"In , an ordering for the plurality of N nodes may be determined such that the nodes are circularly ordered as nodes D, D, D, . . . D. Thus, node Dmay be first in the ordering, followed by D, D, etc., up to D. Since the ordering is circular, node Dfollows node D. In other words, the ordering wraps from Dback to D.","In various embodiments, any desired technique may be utilized to determine the ordering for the N nodes. In one embodiment, the ordering may be based on information regarding the nodes. As noted above, each node may have a node ID. In one embodiment, the ordering may be based on the node IDs. For example, the node IDs may simply be ordered from lowest to highest in numerical (or other) order and node Do may be designated as the node with the lowest node ID and node Dmay be designated as the node with the highest node ID.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 6","FIG. 6"],"b":["3","3","5","5","88","88"],"sub":["0","1","N\u22121"]},"It is noted that in other embodiments the nodes may be ordered in other ways, e.g., based on other information regarding the nodes besides node IDs. For example, in one embodiment the nodes may be ordered based on their geographical locations with respect to each other. As another example, in another embodiment the nodes may be ordered based on their respective computing resources or processing capabilities.","In , each node Din the plurality of nodes may establish a link to X (where X is a numeric constant) other nodes chosen as nodes D, D, . . . D, wrapping to Dif necessary. Thus, each node may be operable to establish X links to other nodes in . For example, node Dmay establish links to nodes D, D, . . . D. Similarly, node Dmay establish links to nodes D, D, . . . D, and node Dmay establish links to nodes D, D, . . . D. In choosing the nodes to which to establish links, nodes higher in the ordering may wrap back to node D. For example, node Dmay establish links to nodes D, D, . . . D, and node Dmay establish links to nodes D, D, . . . D.","Thus, for any given node in the plurality of nodes, the node may establish links to X other nodes, and X other nodes may establish links to that node. For example, node Dmay establish links to nodes D, D, . . . D, and nodes D, D, . . . Dmay establish links to node D. Thus, after all links are established in this manner, each node in the plurality of nodes may have links to 2X other nodes. As described above, the links may be bi-directional so that, for example, node Dcan use the link established to node Dto communicate information to node D, as well as node Dusing the link to communicate information to node D.","In various embodiments, the number X may vary. For example, X may be set based on considerations such as the number of nodes (N) within the realm, the type of network that connects nodes within the realm, the computing resources available on the nodes, etc.","As an example, suppose that X is 2. Thus, node Dmay establish links to two other nodes chosen as Dand D. Thus, in the example of , node \u201c\u201d (designated as node D) may establish a link to node \u201c\u201d (designated as node D) and may establish a link to node \u201c\u201d (designated as node D), as shown in . Similarly, node Dmay establish links to two other nodes chosen as Dand D. Thus, continuing the example, node \u201c\u201d (designated as node D) may establish a link to node \u201c\u201d (designated as node D) and may establish a link to node \u201c\u201d (designated as node D), as shown in . Similarly, node \u201c\u201d (designated as node D) may establish a link to node \u201c\u201d (designated as node D) and may establish a link to node \u201c\u201d (designated as node D), as shown in .  also illustrates links established by node \u201c\u201d (designated as node D) to node \u201c\u201d (designated as node D) and node \u201c\u201d (designated as node D), where the selection wrapped back to node \u201c\u201d (node D) as described above. (For clarity, links established by nodes between node \u201c\u201d and node \u201c\u201d are not shown on the diagram.)  illustrates links established by node \u201c\u201d (designated as node D) to node \u201c\u201d (designated as node D) and node \u201c\u201d (designated as node D).","As described above, after the links have been established in accordance with  of , each node Dhas links to 2X nodes, i.e., the nodes in the set D, D, . . . D, D, D, . . . D. In one embodiment, in addition to these links, one or more nodes in the plurality of N nodes may establish additional links. In various embodiments, the nodes which establish additional links may be chosen in any of various ways, and the nodes to which these nodes establish links may also be chosen in any of various ways.  illustrates a representative embodiment in which additional links are established in .","In , for at least a subset of the plurality of nodes, each node Din the subset may establish a link with one or more randomly chosen nodes not in the set D, D, . . . D, D, D, . . . D. (In other words, Dmay establish a link with one or more randomly chosen nodes not in the set of nodes that Dis already linked to.) In one embodiment, each node Din the subset may only choose one other node to which to establish a link. In addition, in one embodiment, each node in the set D, D, . . . D, D, D, . . . Dmay also establish a link with the one or more nodes randomly chosen by the node D. (In other words, each node to which Dwas already linked may also establish a link with the one or more nodes randomly chosen by D.) For example, node Dmay inform each of these nodes of the one or more randomly chosen nodes and may request each of them to establish a link to the randomly chosen node(s).","For example,  continues the example of . Solid lines illustrate links already established as described above and shown in . Dashed lines illustrate additional links established in accordance with . In this example, node D, i.e., node \u201c\u201d randomly chose node \u201c\u201d as an additional node to which to establish a link. In addition, each node in the set of nodes to which node \u201c\u201d was already linked (i.e., nodes \u201c\u201d, \u201c\u201d, \u201c\u201d, and \u201c\u201d) also established a link to node \u201c\u201d.","In various embodiments, the subset of nodes that randomly choose other nodes to which to establish links may be determined in various ways. In one embodiment, this subset of nodes may include each node whose position in the ordering determined in  is a multiple of 2X. For example, if X is 2, then in the exemplary plurality of 28 nodes discussed above with reference to , nodes D(node \u201c\u201d), D(node \u201c\u201d), D(node \u201c\u201d), D(node \u201c\u201d), D(node \u201c\u201d), D(node \u201c\u201d), and D(node \u201c\u201d) may be included in the subset of nodes that randomly choose other nodes to which to establish links.","As noted above, the manner in which nodes  are interconnected with links  may affect various properties of the system . In some applications, interconnecting a plurality of nodes according to the method described above may confer efficiency benefits. In particular, the method may enable efficient routing of messages within the plurality of nodes (e.g., within nodes in a realm).","The links that interconnect the plurality of nodes may be used to route or send messages among the nodes. In one embodiment, routes or routing data structures for sending messages among the nodes may be constructed (e.g., by T&R layer software ) as a mapping to the links. For example, where a node A is connected to a node B by a first link, and the node B is connected to a node C by a second link, a route to send a message from node A to node C may map to the first link and the second link. For example, constructing the route from node A to node C may include storing routing information in a routing table on node A, where the routing information specifies that messages addressed to node C or addressed to a location-independent address associated with node C should be sent over the first link. Similarly, node B may maintain a routing table that includes routing information specifying that messages addressed to node C or addressed to a location-independent address associated with node C should be sent over the second link. Thus the message may first be sent over the first link from node A to node B, and node B may then forward the message over the second link to node C.","It is noted that the method described above for establishing links  among the nodes may enable the creation of efficient routes for sending messages among the nodes. Specifically, the method may enable the routing of a message sent from any given first node to any given second node to be performed with an average efficiency on the order of log(N) message hops (i.e., \u201cO(log N)\u201d, using the order notation commonly utilized in the art), where N is the number of nodes in the plurality of nodes. (Each time a message is propagated from one node to another, a message \u201chop\u201d is said to occur.)","In some embodiments of the system, the above-described method for establishing links among a plurality of nodes may also enable the system to efficiently recover from network failures or node failures. When a link between two nodes becomes invalid, e.g., because one of the nodes failed, routes that utilized that link can no longer be used to send or forward messages. In one embodiment, a node that discovers an invalid link may initiate a recovery operation to find an alternate route to the destination node.","For example, suppose that a node Dstores routing information that specifies to send messages addressed to an address R over a link to a node A. Also, suppose that node A stores routing information that specifies to send messages addressed to the address R over a link to a node B. Similarly, node B may store routing information specifying how to forward the message to yet another node, and so on, until the message eventually reaches the node (or set of nodes) with which the address R is associated.","Now suppose that node A fails. Thus, the portion of the route that maps to the link from node Dto node A and to the link from node A to node B is no longer valid. However, the portion of the route from node B onward is still valid (assuming that no other nodes or links have failed).","When node Dattempts to send the message over its route to node A and discovers that its link to node A is no longer valid, node Dmay initiate a route recovery operation. In one embodiment, this may comprise broadcasting a route recovery request message from node Dover its other links that are still valid. The recovery request message may be propagated from nodes that receive the recovery message from node Dto other nodes in a cascading fashion until the recovery request message reaches the node(s) that have the address R. These nodes may then reply to the recovery request message, and the reply may be propagated backwards to eventually reach node Dvia the path that the recovery request message originally traveled over. Each node that receives the reply may store routing information indicating that messages addressed to address R should be routed over the link by which the reply was received. In this manner, the route to address R may be built in a backward manner from the node that originally issued the reply until node Dfinally receives the reply and stores new routing information specifying which link (i.e, the link by which node Dreceived the reply) to send messages over to get to the address R.","As noted above, node B still has valid routing information for address R. Thus, to build new routing information from node Dto address R, it is sufficient for the recovery request message to reach node B. Because of the manner in which the nodes are linked together as described above with reference to , the recovery request message may travel from node Dto node B in either one hop or two hops. Since node B is a neighbor of a neighbor of node D, node B is in the range: D, D, . . . D, D, D, . . . D. Thus, in some cases node B is also a neighbor of node Dand the recovery request message can be sent directly from node Dto node B in a single hop. In other cases the recovery request message may arrive at node B in two hops, via another of node D's neighbor nodes. Furthermore, even if multiple neighbors of node Dhave failed, there are, in many cases, multiple two-hop paths that can be taken to reach node B. Thus, establishing links among the nodes using the method described above may allow for very efficient recovery characteristics.","For purposes of clarity, the above description refers to cases where node A is not a node randomly linked to by node Dand node B is not a node randomly linked to by node A. However, because of the redundancy established by having a node's neighbors also link to the node(s) randomly chosen by a given node, the recovery characteristics may remain efficient as described above in these cases as well.","In one embodiment, an algorithm that utilizes a \u201cspew hops\u201d setting may be utilized to propagate the recovery request message. In one embodiment, the number of spew hops to propagate the recovery request message may be set to 2. In another embodiment, the number of spew hops to propagate the recovery request message may be set to 3. Limiting the number of spew hops to  instead of 2 may enable the recovery operation to better deal with the corner cases when node B is the node Dor D. There is only one possible 2-hop path from node Dto these nodes. Thus if multiple nodes have failed, this path may not be available. In contrast, there are at least X 3-hop paths from node Dto node B, no matter what node B may be. Additional information regarding one embodiment of an algorithm for propagating the recovery request message is disclosed in U.S. patent application Ser. No. 10\/403,557, titled, \u201cSystem And Method For Sending Messages In A Computer Network\u201d, which is hereby incorporated by reference.","To further handle cases where multiple nodes have failed, the recovery algorithm may keep the remaining hop count set to 3 whenever the recovery request message is received on a node that has been explicitly marked as not having valid routing information for address R (i.e., the recovery request message may be propagated three hops from this node as well, and thus may eventually travel more than three hops from node D).","It is noted that the link creation method described above represents one particular embodiment of the method, and numerous alternative embodiments are contemplated. In particular, the general method described above may be tailored to account for various corner cases. Various alternative embodiments may still confer efficient routing and recovery properties to the system.","In some embodiments, one or more of the nodes in the plurality of nodes may establish one or more additional links other than those described above. For example, in one embodiment it may be desirable to enable all or a large proportion of the nodes in the plurality of nodes to establish links to a particular node A. As another example, in one embodiment a node B may establish links to more than X neighbor nodes in . In other embodiments, one or more nodes may not establish links as described above.","As discussed above, in , each node Din a subset of nodes may establish a link with one or more randomly chosen nodes not in the set of nodes that Dis already linked to. In one embodiment, the subset may include each node whose position in the ordering determined in  is a multiple of 2X. In other embodiments, a greater or lesser proportion of the plurality of nodes may be included in the subset, and\/or the nodes in the subset may be determined using other techniques. Also, in one embodiment, techniques other than random selection may be utilized to select the additional node(s) that each node Dlinks to. For example, each node Din the subset may select one or more additional nodes based on the ordering determined in , e.g., by selecting one or more nodes that are \u201cfar away\u201d from node Din the ordering. For example, node Dmay select a node A such that half of the other nodes fall above node Dand below node A in the ordering and the other half fall above node A and below node Din the ordering. In another embodiment, random selection may still be utilized, but the set of nodes from which the selection is made may be restricted to a certain range, e.g., where the range is determined based on node D's position within the ordering.","In various embodiments, links may be established at various times during operation of the system . Also, the links may be established in any order with respect to each other. In one embodiment, multiple nodes may simultaneously establish links to other nodes.","In one embodiment, as each node comes online in a realm, the node may perform a node discovery process to discover other nodes in the realm. Each node may contact a subset of the other nodes in the realm to establish links, e.g., where the subset of nodes is determined based on the node IDs and\/or based on random selection, as described above. In one embodiment, when many nodes are coming online at once, nodes may begin to establish links before all nodes are online. Thus, for example, a node Dmay select nodes D, D, . . . Dbased on the node IDs that node Dcurrently knows about, but new nodes may later come online that fall between these nodes in the ordering. When this occurs, one or more links that node Dpreviously established may be discarded, and new links may be established with the new nodes now online so that the desired link interconnections are eventually formed. In one embodiment, each node may be configured to accept a request to form a link with another node each time such a request is received. In other words, link connections may not be refused. Thus, when many nodes in the system are coming online, nodes may at first have many links, but after this startup period, the system may stabilize, and extra links may be discarded so that each node eventually has the desired number of links to the desired subset of other nodes. In one embodiment, an extra link may only be discarded by the node that initiated the establishment of the link. For example, if node A establishes a link to node B, then node A may later discard the link if it determines that the link should not exist, rather than node B discarding the link.","Also, even after the system has stabilized, a new node may come online, e.g., after being re-started after a failure. The new node may contact other nodes to establish links to them, as described above. Also, the other nodes may discover or may be informed of the new node, and certain nodes may discard an existing link and form a new link to the new node, e.g., if the new node is next to them in the ordering. Thus, in one embodiment the process of establishing links may be a dynamic process so that links are updated to reflect the topology of the system.","In various embodiments, the links formed as described above may be utilized to perform network communication of any kind. In one embodiment, the nodes may utilize the links to communicate with one another in a decentralized or peer-to-peer manner. As described above, in one embodiment, routes for sending messages among the nodes may be constructed as a mapping to the links, and messages may be sent over these routes. The nodes may communicate with such messages to perform any desired function or application. In one embodiment, the message communication may be utilized to perform distributed data storage. For example, storage objects may be stored on various nodes, as discussed above, and message communication may be utilized to update storage objects, move or replicate storage objects to different nodes, cache storage objects, obtain data from storage objects, etc.","In various embodiments, any of various kinds of messaging or addressing schemes may be utilized to send messages. In one embodiment, the system may utilize location-independent addresses so that messages can be sent from a sender node to one or more destination nodes without the sender node being required to know which specific nodes are the destination nodes. For example, a location-independent address may simply specify a property or entity that is associated with the destination nodes, and the message addressed to this address may be routed to each node that has the associated property or entity. One example of a location-independent address is a \u201crole\u201d. Role-based addressing is described below.","Role-Based Addressing","Most message-based protocols require some addressing scheme to name a destination endpoint as the target of a message. IP-based protocols for example, use an IP address to name a node on a network.","According to one embodiment, message addressing is based on the concept of a \u201crole\u201d. As used herein, a role may refer to a location-independent address for a computer network. A location-independent address may comprise information usable to address a message without specifying where the message recipient is located in the network, e.g., without specifying a particular node in the network.","The T&R layer software  discussed above with reference to  may include an interface allowing client application software to create a role on one or more nodes on a tree (more specifically, the client application software may create an instance of the role on each of the one or more nodes). Each node on which an instance of the role is created is said to have the role or host the role (or host an instance of the role). In one embodiment, each role may be identified using a string, e.g., the name of the role. In other embodiments, roles may be identified in other ways, e.g., using integers.","Thus, a complete network address for sending a message may comprise information identifying a tree and a role on the tree. For example, in one embodiment the tree may be identified using a tree ID, such as a 128-bit Universally Unique ID (UUID), and a role may be identified using a variable length string.","In another embodiment, a network address for sending a message may also include information identifying a portion of client application software to receive the message. For example, the network address may also include information identifying a protocol ID associated with a client application that utilizes the T&R layer. Multiple protocols may utilize the same tree. Thus, each message may be sent on a particular tree and, more particularly, to a particular set of nodes on the tree, i.e., the nodes having the specified role. As the message arrives to each node on the specified tree and having the specified role, the protocol ID may be used to determine which protocol on the node or which portion of client application software receives the message. In another embodiment there may not be multiple protocols, or a message may be sent without specifying a particular protocol ID. If no protocol ID is specified, the message may be delivered to all protocols bound to the tree.","Any semantic meaning associated with a role may be done so by the client application and not by the T&R layer. For example, roles such as \u201cowner\u201d or \u201cinstrumentation-manager\u201d may appear to the T&R layer as just two different strings that each designate a separate target on a tree for message transfers. The T&R layer may treat client application messages simply as a set of bytes.","Sending messages to roles instead of directly to nodes may have a number of advantages. For example, a given role may be assigned to any tree vertex (node), and the role may move from node to node dynamically. Also, a single role may be assigned to multiple tree nodes. Thus, a message addressed to the role may reach each of the nodes which have the role.","Role-based addressing may also allow distributed software to run in a peer-to-peer manner. Nodes do not need to keep track of global state, such as knowing which other nodes are present on the network or which roles are bound to which nodes. A node may simply accomplish an operation by routing a message to a particular role, without needing to know which particular node or nodes have the role.","A role which is restricted to a single node is referred to herein as an exclusive role. A role which is associated with multiple nodes is referred to herein as a non-exclusive or shared role. (It is noted that a non-exclusive role may be associated with a single node.) Each instance of a shared role may have an associated role instance ID, such as a 128-bit UUID.","Each node may maintain a list of role instances which are associated with that node for each tree, i.e., a list of local role instances hosted by that node. The node may also maintain routing information that allows messages to be routed from the node to remote instances of the role, i.e., role instances associated with or hosted by other nodes. For example, the routing information may define one or more edges for the node. Each edge may be mapped to one of the node's links and may be used to route a message to one or more remote instances of a role. Each link may support many mapped tree edges. Thus, at each node along the message path from a sender node to the target node(s), the node may deliver the message to a local instance of the role (if there is one) and may forward the message to other role instances using the respective edge or edges.","In one embodiment, at each node, the routing information for a given role may include information directly specifying how to route a message to every instance of the role. For example, for each node, the node may have an edge associated with each instance of the role, where each edge points to another node to which or via which the message can be sent to the respective role instance. The role name and the instance ID for the respective instance of the role may be associated with each edge, allowing the edges to be disambiguated for shared roles.","In another embodiment, the routing information at one or more nodes may include information directly specifying how to route a message to only a subset of the role instances. Thus, if there are N instances of the role, a given node may have knowledge of less than N instances of the role. As one example, a first node may have knowledge of only a single instance of the role. For example, the first node may have an edge associated with a particular instance of the role, such that messages addressed to the role are routed to a second node to which the edge points. The second node may in turn have two or more edges, each associated with different role instances, such that messages addressed to the role and received from the first node are forwarded by the second node to multiple nodes, and continuing in this manner until each instance of the role receives the message.","The embodiment in which nodes can have routing information regarding only a subset of the role instances may allow nodes to leverage each other's knowledge. Thus, routing data may be localized, i.e., the routing data does not have to be published to every node on the tree. This may increase efficiency of the system. Allowing nodes to leverage each other's routing information may also enable recovery operations to operate more efficiently to rebuild routing information after a link failure.","One example of a technique for allowing a given node to maintain routing information for less than all N instances of a role is to utilize scoped roles. In a system employing scoped roles, each node that does not host an instance of the role must know how to reach only one node that has the role (if there is one). Each node that does host an instance of the role must be able to eventually reach all other nodes that host an instance of the role.","It is noted that various embodiments may further include receiving, sending or storing instructions and\/or data implemented in accordance with the foregoing description upon a carrier medium. Generally speaking, a carrier medium may include storage media or memory media such as magnetic or optical media, e.g., disk or CD-ROM, volatile or non-volatile media such as RAM (e.g., SDRAM, DDR SDRAM, RDRAM, SRAM, etc.), ROM, etc.","Although the embodiments above have been described in considerable detail, numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A better understanding of the invention can be obtained when the following detailed description is considered in conjunction with the following drawings, in which:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIGS. 7-11"}]},"DETDESC":[{},{}]}
