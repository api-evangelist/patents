---
title: Proactive information technology infrastructure management
abstract: Disclosed herein is a computer implemented method and system for analyzing load responsive behavior of infrastructure components in an electronic environment for proactive management of the infrastructure components. Transaction data on multiple application transactions is collected. Load patterns are identified from the collected transaction data for generating load profiles. Data on infrastructure behavior in response to the application transactions is collected. Infrastructure behavior patterns are identified from the infrastructure behavior data for generating behavior profiles. The generated load profiles and the generated behavior profiles are correlated to create a load responsive behavior model. The created load responsive behavior model predicts behavior of the infrastructure components for different load patterns. A live data stream from current application transactions is analyzed using the load responsive behavior model to determine current load responsive behavior. Deviations of the current load responsive behavior from the predicted behavior are detected using the load responsive behavior model.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08903757&OS=08903757&RS=08903757
owner: Appnomic Systems Private Limited
number: 08903757
owner_city: Bangalore
owner_country: IN
publication_date: 20090128
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application claims the benefit of non-provisional patent application number 3120\/CHE\/2008 titled \u201cProactive Information Technology Infrastructure Management\u201d, filed on Dec. 12, 2008 in the Indian Patent Office.","This invention, in general, relates to information technology infrastructure management. More particularly, this invention relates to proactive management of information technology infrastructure components based on an analysis of load responsive behavior of the infrastructure components in an electronic environment.","Electronic environments typically comprise many infrastructure components. The infrastructure components may be hardware components or software components. Different applications and application transactions generate different load conditions on the infrastructure components. The infrastructure components may behave differently under each of the load conditions. Managers and administrators in the electronic environment may not always know the behavior of the infrastructure components under different load conditions. Moreover, managers and administrators may not be able to manually detect load patterns and behavior patterns from historical load and behavior data. Furthermore, correlation between the load conditions and the behavior of the infrastructure components may be difficult, if done manually. At present, prediction of the behavior of the infrastructure components under given load conditions and prediction of load conditions for a given infrastructure behavior is difficult or problematic to ascertain.","Hence, there is a need for analyzing load responsive behavior of infrastructure components in an electronic environment for proactive management of the infrastructure components.","This summary is provided to introduce a selection of concepts in a simplified form that are further described in the detailed description of the invention. This summary is not intended to identify key or essential inventive concepts of the claimed subject matter, nor is it intended for determining the scope of the claimed subject matter.","The computer implemented method and system disclosed herein address the above stated need for analyzing load responsive behavior of infrastructure components in an electronic environment for proactive management of the infrastructure components. Transaction data on multiple application transactions is collected in the electronic environment. Load patterns are identified from the collected transaction data for generating load profiles. The load patterns may be identified using normalization, clustering, and pattern sequencing techniques. Data on infrastructure behavior in response to the application transactions is collected. Infrastructure behavior patterns are identified from the collected infrastructure behavior data for generating behavior profiles. The generated load profiles and the generated behavior profiles are correlated to create a load responsive behavior model. The created load responsive behavior model predicts behavior of the infrastructure components for different load patterns. Distribution of the load profiles and the behavior profiles for a predefined period of time may be displayed.","Transaction data on multiple transactions of an application may be collected from each of multiple layers of deployment of the application for identifying load patterns to generate load profiles for each of the layers. Data on infrastructure behavior in response to application transactions from each of the layers may be collected for identifying the infrastructure behavior patterns to generate the behavior profiles for each of the layers. The generated load profiles of a first layer from the layers and the generated behavior profiles of a second layer from the layers adjacent to the first layer may be correlated to create the load responsive behavior model.","A live data stream from current application transactions is analyzed using the load responsive behavior model to determine a current load responsive behavior. Deviations of the current load responsive behavior from the predicted behavior are detected using the load responsive behavior model. Effects of modifications made to the infrastructure components may be predicted using the load responsive behavior model. The load responsive behavior model may be optimized using regression analysis. The detected deviations may be reported if the detected deviations exceed a dynamic threshold. The dynamic threshold may be determined from the collected transaction data.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":"101"},"Granular transaction data on the application transactions may be collected using an application code embeddable instrumentation library. The application code embeddable instrumentation library may be included within a transaction code of an application to collect data on different parameters, for example, response time, associated with the transaction code. The data collected by the application code embeddable instrumentation library is herein referred to as the \u201cgranular transaction data\u201d. For example, for a balance inquiry transaction in a banking application, the granular transaction data may comprise response times for account lookup, balance amount calculation, etc.","Transaction data on multiple application transactions may be collected from each of multiple layers of deployment of the application. As used herein, the term \u201cdeployment\u201d of an application refers to an aggregation of processes involved in making the application ready and available for use. The application may be deployed in different layers. As used herein, the term \u201clayer\u201d refers to each of multiple conceptually stacked modules of hardware, software, or a combination thereof. Key performance indicator (KPI) data may be collected from different layers of deployment of an application. KPI data from software layers and hardware layers in the application stack may also be collected from existing monitoring systems using an integration application programming interface (API). The integration API enables communication with the existing monitoring systems that may already be collecting the KPI data from the different layers of deployment of the application. An appropriate mode of communication may be determined for each of the existing monitoring systems. The KPI data may then be collected from the existing monitoring systems.","Load patterns are identified  from the collected transaction data for generating load profiles. As used herein, the term \u201cload pattern\u201d refers to a recurring scheme of load on an application determined by observation of the load on the application over a period of time. The term \u201cload profile\u201d refers to a representative description of the load on the application determined by, for example, mathematical, logical, or graphical manipulation of the load pattern. The term \u201cload\u201d refers to amount of work done by an infrastructure component in the electronic environment. The term \u201cinfrastructure components\u201d refers to hardware components, software components, or hardware and software hybrid components that compose the electronic environment and do work. Load patterns may be identified for each of the layers of deployment of the application. Load profiles for each of the layers of deployment of the application are then generated.","The load patterns may be identified using normalization, clustering, and pattern sequencing techniques. The collected transaction data may be preprocessed before the step of identification of the load patterns. The collected transaction data are normalized by normalizing multiple parameters of the collected transaction data. The parameters may, for example, be KPI metrics, for example, transaction type, transaction volume for the application layer, open tables, slow queries, table locks, and connections for database layers. Each of the parameters is normalized by computing mean and standard deviation of the parameter, and computing a normalized score for each unit of the collected transaction data by dividing the numerical value of the transaction data by the computed standard deviation.","Each normalized unit of the collected transaction data is then plotted in a parameter space spanned by multiple parameters by representing the normalized unit of the collected data as a point in the parameter space. The plotted points in the parameter space are then clustered to create the load profiles. The plotted points may be clustered using different clustering strategies, for example, k-mean clustering, BIRCH, hierarchical clustering, model based clustering, spectral clustering, etc. The plotted points are clustered based on the similarity between the plotted points. The similarity may be determined using a distance measure.","Data on infrastructure behavior in response to the application transactions is collected  and monitored. The behavior of the infrastructure may be collected and monitored using different probes. For example, a software agent installed on a server in the electronic environment may collect data on operating system behavior, for example, central processing unit (CPU) utilization, memory utilization, and disk input and output operations per second. Software agents may also be installed on web servers in the electronic environment to collect data on, for example, total active sessions, sessions created, total requests, total bytes sent, total bytes received, etc. Infrastructure behavior data in response to application transactions from each of the layers may also be collected.","Infrastructure behavior patterns are identified  from the collected infrastructure behavior data for generating behavior profiles. As used herein, the term \u201cbehavior profile\u201d refers to a representative description of the behavior of the infrastructure components in response to load exerted on the infrastructure components determined by, for example, mathematical, logical, or graphical manipulation of the behavior patterns. The infrastructure behavior patterns may be identified for each of the layers to generate behavior profiles for each of the layers. Distribution of the load profiles and the behavior profiles for a predefined period of time may be displayed. The distribution of the load profiles and the behavior profiles for a period of time, for example, from few minutes to a few hours may be displayed.","The generated load profiles and the generated behavior profiles are correlated  to create a load responsive behavior model. The load responsive behavior model is a predictive behavioral model that plots instantaneous units of load from the load profiles against corresponding behavior profiles of the infrastructure components for the instantaneous units of load. The created load responsive behavior model predicts behavior of the infrastructure components for different load patterns. The process involved in creating the load responsive behavior model is exemplarily illustrated in . As illustrated in , the transaction data is collected , and then taken through the steps of normalization , clustering , load pattern discovery , and correlation  with infrastructure behavior to create the load responsive behavior model. The load responsive behavior model may be used to predict an expected behavior of the infrastructure components under given load conditions. Conversely, the load responsive behavior model may also be used to compute optimal load conditions for a particular behavior of the infrastructure components.","The generated load profiles of a first layer from the layers and the generated behavior profiles of a second layer from the layers adjacent to the first layer may be correlated to create the load responsive behavior model. For example, the correlation may be performed across a pair of the layers comprising a lower layer and an upper layer to understand how the lower layer responds to load exerted by the upper layer.","The creation of the load responsive behavior model is exemplarily illustrated in . Historical load profiles are correlated with the generated behavior profiles. Each of the load profiles may be correlated for creating the load responsive behavior model. In , clustering output for each layer \u201cL\u201d is assigned  to a \u201cClusterID[n]\u201d variable array. The behavior of each infrastructure component is represented  as a string of profile identifiers. For each of the layers , the clustering is performed . After clustering  is completed for each of the layers, the process is terminated.","The load profiles are then correlated with the infrastructure component behavior using the Birch clustering algorithm and sequential association rules, as exemplarily illustrated in . Variables N, ULC, and LLC are used to represent  the number of observations, cluster ids of upper layers, and cluster ids of lower layers respectively. ULC and LLC may be variable arrays. ULC and LLC are associated  with each other. A \u201cLength\u201d variable is initialized to 0. For each observation \u201ci\u201d , the cluster ids are checked . If each of the cluster ids of the upper layer and the lower layer is equal to a preceding cluster id, Length is incremented . If each of the cluster ids is not equal to a preceding cluster id, the cluster ids are further checked . If each of the cluster ids for the upper layer is not equal to a preceding cluster id or each of the cluster ids for the lower layer is not equal to a preceding cluster id, the output of the association between ULC and LLC and Length is printed . ULC and LLC are further associated  and Length is reset to 0. After the cluster ids are checked for each observation \u201ci\u201d, the process is terminated. A pseudocode segment for performing the process illustrated in  is exemplarily illustrated in .","A live data stream comprising real time transaction data from current application transactions is analyzed  using the load responsive behavior model to determine a current load responsive behavior. The live data stream may be part of one of the load profiles. The analysis may comprise identification of the load profile which is a part of the live data stream. Data on current behavior of the infrastructure components under the load of the live data stream is monitored and collected. The collected data on the behavior is then analyzed to identify a behavior profile that the collected behavior data is a part of. The current load responsive behavior is determined based on the analysis of the identified load profile and the identified behavior profile.","Although the load responsive behavior model enables prediction of the infrastructure behavior under any given load conditions, the current load responsive behavior may not necessarily conform to the predicted infrastructure behavior. The current load responsive behavior may deviate from the behavior predicted by the load responsive behavior model. The deviations of the current load responsive behavior from the predicted behavior are detected  using the load responsive behavior model. The current load responsive behavior may be compared with the predicted behavior to detect the deviations. Furthermore, variance of the current load responsive behavior may be computed and compared with variance of the predicted behavior. Variance of a variable is a statistical measure obtained by averaging a squared distance of possible values from a mean value of the variable. Herein, the variables are load units of the predicted behavior and the current load responsive behavior.","The detected deviations may be reported to an administrator in the electronic environment if the detected deviations exceed a dynamic threshold based on mean and standard deviation values within the load response behavior model. The dynamic threshold may be determined from the collected transaction data. Predictive alerts may be generated for reporting the detected deviations exceeding the dynamic threshold. The dynamic threshold may change based on input data, for example, the live data stream. Reporting of the deviations may, for example, enable the administrator of the electronic environment to diagnose erroneous or unexpected behavior of the infrastructure components under given load conditions.","The load responsive behavior model may be optimized using regression analysis. The optimization may be performed based on the comparison of the variance. Optimization of the load responsive behavior model ensures that the load responsive behavior model models the infrastructure behavior with maximal accuracy. Effects of modifications made to the infrastructure components may be predicted using on the load responsive behavior model. For example, if the random access memory (RAM) of a computing system is upgraded, the behavior of the computing system under different load conditions may be predicted. Conversely, the load responsive behavior model may be used to determine modifications to the infrastructure necessary to achieve a predefined infrastructure behavior under given load conditions.","The load responsive behavior model may be used for capacity planning. A \u201cwhat if\u201d analysis may be performed for capacity planning. The \u201cwhat if\u201d analysis may comprise the steps of dependency analysis and regression modeling. Dependency analysis may be performed for understanding dependencies between different parameters. For example, in a transaction mix comprising different types of application transactions, the application transactions are independent of each other. The load on a central processing unit (CPU) processing the application transactions is dependent on the transaction mix. Objects and threads may be created during the processing of the application transactions. The created objects and threads generates load on a database storing the created objects and threads, wherein the generated load may be in terms of number of connections required to the database. Dependencies between pairs of parameters may be analyzed using regression analysis.","For each dependent parameter pair, a regression model is constructed. Regression models may not be built for independent parameters. The regression analysis may be performed using linear regression, logistic regression, and non linear regression. Linear regression is a form of regression analysis wherein a relationship between one or more independent variables and a dependent variable is modeled using a linear regression equation. The linear regression equation is a linear combination of one or more model parameters, also referred to as \u201cregression coefficients\u201d.","Logistic regression is a model used for predicting the probability of occurrence of an event by fitting data into a logistic curve. Logistic regression makes use of different predictor variables that may be numerical or categorical. Non-linear regression is a form of regression analysis wherein observational data is modeled using a function which is a non linear combination of the model parameters and depends on one or more independent variables. The data may be fitted by a successive approximation method. Multiple regression models may be maintained for capacity planning using the \u201cwhat if\u201d analysis.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 2","b":["200","200","201","202","203","204","205","206","207","208","209","210","211"]},"The transaction data collection module  collects transaction data on multiple application transactions in the electronic environment. The load pattern analysis module  identifies load patterns from the collected transaction data for generating load profiles. The load pattern analysis module  may identify the load patterns using normalization, clustering, and pattern sequencing techniques. The behavior data collection module  collects data on infrastructure behavior in response to the application transactions. The behavior pattern analysis module  identifies behavior patterns from the collected infrastructure behavior data for generating behavior profiles.","The transaction data collection module  collects transaction data on multiple transactions of an application from each of multiple layers of deployment of an application. The load pattern analysis module  identifies load patterns for generating load profiles for each of the layers. The behavior data collection module  collects data on infrastructure behavior in response to transactions of an application from each of multiple layers of deployment of an application. The behavior pattern analysis module  identifies infrastructure behavior patterns for generating behavior profiles for each of the layers.","The correlation module  correlates the generated load profiles and the generated behavior profiles to create a load responsive behavior model. The created load responsive behavior model predicts behavior of the infrastructure components for different load patterns. The correlation module  correlates the generated load profiles of a first layer from multiple layers of deployment of an application and the generated behavior profiles of a second layer from the layers adjacent to the first layer to create the load responsive behavior model. The data analysis module  analyzes a live data stream from current application transactions using the load responsive behavior model to determine a current load responsive behavior from the predicted behavior using the load responsive behavior model.","The deviation detection module  detects deviations of the current load responsive behavior from the predicted behavior using the load responsive behavior model and generates predictive alerts. The reporting module  reports the detected deviations if the detected deviations exceed a dynamic threshold. The reporting module  determines the dynamic threshold from the collected transaction data. The reporting module  also provides reports on different trends in the load profiles and the behavior profiles. The prediction module  predicts effects of modifications made to the infrastructure components using the load responsive behavior model.","The prediction module  may be used for capacity planning. The optimization module  optimizes the load responsive behavior model. The optimization module  may optimize the load responsive behavior model using regression analysis. The display module  displays distribution of the load profiles and the behavior profiles for a predefined period of time.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIGS. 4A-4B","b":["401","402","403","403","403","403","403","404","404","404","404","404","405","405","405"],"i":["a ","b","c ","d ","a ","b","c ","d ","a ","b "]},"Each of the computed values of the each of the parameters is then converted into a z-score or a normalized value based on a predefined formula. The historical data is converted into normalized data. The normalized data is clustered . Clustering performed by classifying the normalized data into different groups, thereby partitioning of normalized data into subsets wherein data in each of the subsets share one or more common properties. The subsets may be referred to as clusters. Each reading of the normalized data is plotted as a point in the k-dimensional parameter space. The distance between the points in k-dimensional space is computed . Close-by points are grouped in clusters. Birch clustering algorithm may be used to identify the load patterns from the normalized historical data. Each of the clusters may be assigned a cluster identifier (id). Once the load profiles and the behavior profiles are identified using clustering, the readings of the normalized historical data are represented  with the respective cluster identifiers (ids), thereby forming a string of clusters. Continuous occurrences of cluster ids are extracted  to generate  the load profiles and the behavior profiles.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 6","b":["601","602","603","604","605","606","607","608","606"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 7","b":["701","702","703","704","705","706","703"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 8","b":["200","200","801","802","803","804","805","806","807","808","809","810","811","812"]},"The monitoring tool  monitors and collects infrastructure behavior data. The configuration management console  further collects the infrastructure behavior data. The instrumentation library  and the network transaction probe  collect transaction data on the application transactions. The data processor node  processes the collected transaction data for analysis. The data aggregator  aggregates the processed data for determining the load patterns and the behavior patterns. The analytics unit  analyzes and correlates the aggregated data for creating the load responsive behavior model. The predictive analyzer  analyzes the current load responsive behavior using the load responsive behavior model to detect deviations. The live dashboard  enables configuration of the components. The visualization front end  provides a visual interface for the configuration of the components. The capacity planner  performs capacity planning using the load responsive behavior model. The what-if analyzer  predicts effects of modifications made to the components based on the load responsive behavior model.","Consider an example of a monitoring tool for an online banking portal. An application load layer of the online banking portal is monitored using the transaction data collection module  to capture data on volume and type of transactions being executed. Simultaneously, the response time for each of the transactions is also captured. The behavior data collection module  captures, for example, the 10 most popular queries executing in a database layer of the online banking portal along with the response time, query parameters, central processing unit (CPU) usage, and disk input and output (I\/O) operations for each of the queries.","The load pattern analysis module  identifies patterns in the load, for example, \u201cend of month statement lookup\u201d, wherein users of the online banking portal log in at the end of each month to check bank statements on receiving a notification. The behavior pattern analysis module  also identifies patterns in the 10 most popular queries executing in the database layer. The correlation module  determines an expected database behavior pattern for the identified \u201cend of month statement lookup\u201d load and builds an \u201cend of month statement lookup\u201d load responsive behavior model.","In subsequent months, the \u201cend of month statement lookup\u201d load responsive behavior model is compared in real time with actual database behavior. The actual database behavior may be identified by capturing the 10 most popular queries with the response time, query parameters, CPU usage, and disk I\/O operations in real time for each of the queries. Deviations, for example, spikes in disk I\/O operations, are detected. A database administrator is alerted of the deviation and possible causes for the deviation. For example, a cause for the deviation may be faulty disk I\/O operations for a one among the 10 most popular queries.","The database administrator may further analyze actual and average disk I\/O values, and an execution pattern of the query causing the deviations. The database administrator may come to a conclusion on the reason for the deviations and corrective actions to be taken. The deviations in the behavior may be predicted in advance of any impact being felt by a user of the online banking portal. The database administrator is warned in advance about the deviations before they actually occur. By taking corrective action, the database administrator may avert a situation where the users of the online banking portal trying to access the monthly statements experience slow response times to queries.","It will be readily apparent that the various methods and algorithms described herein may be implemented in a computer readable medium appropriately programmed for general purpose computers and computing devices. Typically a processor, for e.g., one or more microprocessors will receive instructions from a memory or like device, and execute those instructions, thereby performing one or more processes defined by those instructions. Further, programs that implement such methods and algorithms may be stored and transmitted using a variety of media, for e.g., computer readable media in a number of manners. In one embodiment, hard-wired circuitry or custom hardware may be used in place of, or in combination with, software instructions for implementation of the processes of various embodiments. Thus, embodiments are not limited to any specific combination of hardware and software. A \u201cprocessor\u201d means any one or more microprocessors, Central Processing Unit (CPU) devices, computing devices, microcontrollers, digital signal processors or like devices. The term \u201ccomputer-readable medium\u201d refers to any medium that participates in providing data, for example instructions that may be read by a computer, a processor or a like device. Such a medium may take many forms, including but not limited to, non-volatile media, volatile media, and transmission media. Non-volatile media include, for example, optical or magnetic disks and other persistent memory volatile media include Dynamic Random Access Memory (DRAM), which typically constitutes the main memory. Transmission media include coaxial cables, copper wire and fiber optics, including the wires that comprise a system bus coupled to the processor. Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, any other magnetic medium, a Compact Disc-Read Only Memory (CD-ROM), Digital Versatile Disc (DVD), any other optical medium, punch cards, paper tape, any other physical medium with patterns of holes, a Random Access Memory (RAM), a Programmable Read Only Memory (PROM), an Erasable Programmable Read Only Memory (EPROM), an Electrically Erasable Programmable Read Only Memory (EEPROM), a flash memory, any other memory chip or cartridge, a carrier wave as described hereinafter, or any other medium from which a computer can read. In general, the computer-readable programs may be implemented in any programming language. Some examples of languages that can be used include C, C++, C#, or JAVA. The software programs may be stored on or in one or more mediums as an object code. A computer program product comprising computer executable instructions embodied in a computer-readable medium comprises computer parsable codes for the implementation of the processes of various embodiments.","Where databases are described, it will be understood by one of ordinary skill in the art that (i) alternative database structures to those described may be readily employed, and (ii) other memory structures besides databases may be readily employed. Any illustrations or descriptions of any sample databases presented herein are illustrative arrangements for stored representations of information. Any number of other arrangements may be employed besides those suggested by, e.g., tables illustrated in drawings or elsewhere. Similarly, any illustrated entries of the databases represent exemplary information only; one of ordinary skill in the art will understand that the number and content of the entries can be different from those described herein. Further, despite any depiction of the databases as tables, other formats including relational databases, object-based models and\/or distributed databases could be used to store and manipulate the data types described herein. Likewise, object methods or behaviors of a database can be used to implement various processes, such as the described herein. In addition, the databases may, in a known manner, be stored locally or remotely from a device that accesses data in such a database.","The present invention can be configured to work in a network environment including a computer that is in communication, via a communications network, with one or more devices. The computer may communicate with the devices directly or indirectly, via a wired or wireless medium such as the Internet, Local Area Network (LAN), Wide Area Network (WAN) or Ethernet, Token Ring, or via any appropriate communications means or combination of communications means. Each of the devices may comprise computers, such as those based on the Intel\u00ae processors, AMD\u00ae processors, Sun\u00ae processors, IBM\u00ae processors etc., that are adapted to communicate with the computer. Any number and type of machines may be in communication with the computer.","The foregoing examples have been provided merely for the purpose of explanation and are in no way to be construed as limiting of the present invention. While the invention has been described with reference to various embodiments, it is understood that the words, which have been used herein, are words of description and illustration, rather than words of limitation. Further, although the invention has been described herein with reference to particular means, materials and embodiments, the invention is not intended to be limited to the particulars disclosed herein; rather, the invention extends to all functionally equivalent structures, methods and uses, such as are within the scope of the appended claims. Those skilled in the art, having the benefit of the teachings of this specification, may effect numerous modifications thereto and changes may be made without departing from the scope and spirit of the invention in its aspects."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing summary, as well as the following detailed description of the invention, is better understood when read in conjunction with the appended drawings. For the purpose of illustrating the invention, exemplary constructions of the invention are shown in the drawings. However, the invention is not limited to the specific methods and instrumentalities disclosed herein.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 4A-4B"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIGS. 5A-5C"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
