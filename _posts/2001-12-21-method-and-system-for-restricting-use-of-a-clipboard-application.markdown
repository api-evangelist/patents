---
title: Method and system for restricting use of a clipboard application
abstract: Techniques and mechanisms for controlling copying of content from a secured file or secured document are disclosed. In one embodiment, the techniques or mechanisms operate to control clipboard usage such that content from a secured document of one application is not able to be copied to another application or a different document of another application by way of a clipboard. According to another embodiment, alternate content is copied to another application or a different document of another application instead of the content from the secured document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07950066&OS=07950066&RS=07950066
owner: Guardian Data Storage, LLC
number: 07950066
owner_city: Wilmington
owner_country: US
publication_date: 20011221
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","The present invention relates generally to restricting access to documents on computers. More particularly, the present invention relates to a method and system for preventing unauthorized copying of content from a secured document in one application program to another application program.","2. Description of the Related Art","The Internet is the fastest growing telecommunications medium in history. The growth and the easy access it affords have significantly enhanced the opportunity to use advanced information technology for both the public and private sectors. The Internet also provides unprecedented opportunities for interaction and data sharing among businesses and individuals.","Unfortunately, however, the advantages provided by the Internet come with a significantly greater element of risk to the ownership, copyright, piracy, security and integrity of information. For example, one can easily copy an article from a web site into his own computer, and then use the unauthorized copy for his own purposes. In particular, anyone using a web browser application to view an article posted at a web site on the Internet can easily copy some or all of the article by simply highlighting the desired portion of the article, and then selecting a \u201ccopy\u201d command made available by the web browser application. The copied text can thereafter be literally used for any purpose. Such unauthorized copying of information or content presents serious concerns for electronic publishers and others.","Furthermore, numerous proprietary and sensitive documents are created daily in a wide range of industries. Although measures may be taken to secure these documents, such as password protection or encryption, once these documents are displayed by a web browser or other application, one can normally perform a \u201ccopy\u201d command to copy some or all of a document being displayed into a designated region in memory referred to as a buffer. In Microsoft Windows applications, the buffer is referred to as a clipboard which is provided by a clipboard application that is part of the Windows operating system. A \u201ccopy\u201d command stores selected content to the clipboard and a \u201cpaste\u201d command retrieves content from the clipboard. Once content has been copied to the clipboard, it remains in the clipboard until replaced by a different set of content. Hence, content in the clipboard can be repeatedly copied to as many different documents as the user desires.","One of the features of the clipboard is that it can be accessed by most application program running on the computer. As a result, the user is not limited to inserting the copied content into the same document from which it was copied from. Rather, the content stored in the clipboard can be placed within any document displayed by the computer. For example, the user can select a portion of text from a document created with a word processing application and copy it to the clipboard, switch to another text document created with the same or different word processing program, and paste it into that document from the clipboard. In the same manner, the user can copy the content from the clipboard into a non-text document, such as a drawing document created with a graphics application.","Thus, there is a need for techniques or mechanisms to control clipboard usage when content from a secured document is being copied.","Broadly speaking, the invention relates to techniques or mechanisms for controlling copying of content from a secured file or secured document. In one embodiment, the techniques or mechanisms operate to control clipboard usage such that content from a secured document of one application is not able to be copied to another application or a different document of another application by way of a clipboard. According to another embodiment, alternate content can be copied to another application or a different document of another application instead of the content from the secured document.","The invention can be implemented in numerous ways including, a method, system, device, and a computer readable medium. Several embodiments of the invention are discussed below.","As a computer-implemented method for restricting use of a clipboard application in a multi-application computing environment, one embodiment of the invention includes at least the acts of: receiving a copy selection associated with designated content of a source file being displayed by a source application; determining whether the source file is a secured file; and preventing subsequent usage of the designated content in a destination application via the clipboard application when the determining determines that the source file is a secured file.","As a computer-implemented method for restricting use of a clipboard application in a multi-application computing environment, another embodiment of the invention includes at least the acts of: receiving a copy selection associated with designated content of a source file being displayed by a source application; determining whether the source file is a secured file; and preventing storage of the designated content to the clipboard application when the determining determines that the source file is a secured file.","As a computer-implemented method for restricting use of a clipboard application in a multi-application computing environment, still another embodiment of the invention includes at least the acts of: receiving a copy selection associated with designated content of a source file being displayed by a source application; initially storing the designated content to the clipboard application; subsequently determining whether the source file is a secured file; and replacing the designated content stored in the clipboard application with alternate content when the determining determines that the source file is a secured file.","As a computer-implemented method for restricting use of a clipboard application in a multi-application computing environment, yet another embodiment of the invention includes at least the acts of: launching a first application when a request to access a file is received; determining, in an operating system supporting the multi-application computing environment, whether the file being requested is secured; and loading the file in clear mode into the first application while activating a clipboard security monitor when the file is determined to be secured, wherein the clipboard security monitor ensures that no contents in the secured file can be copied into a second application.","As a computer readable medium including at least computer program code for restricting use of a clipboard application in a multi-application computing environment, one embodiment of the invention includes at least: computer program code for receiving a copy selection associated with designated content of a source file being displayed by a source application; computer program code for determining whether the source file is a secured file; and computer program code for preventing subsequent usage of the designated content in a destination application via the clipboard application when it is determined that the source file is a secured file.","Other aspects and advantages of the invention will become apparent from the following detailed description taken in conjunction with the accompanying drawings which illustrate, by way of example, the principles of the invention.","The invention relates to techniques or mechanisms for controlling copying of content from a secured file or secured document. In one embodiment, the techniques or mechanisms operate to control clipboard usage such that content from a secured document of one application is not able to be copied to another application or a different document of another application by way of a clipboard. According to another embodiment, alternate content can be copied to another application or a different document of another application instead of the content from the secured document.","As used herein, a secured file or secured document can be considered to be interchangeable, though a secured document is one type of secured file. Both secured file and secured document pertain to a type of electronic data that includes, but is not limited to, various types of documents, multimedia files, data, executable codes, images and texts. The secure nature of the files or documents is such that the data cannot be accessed without a priori knowledge. One example of the a priori knowledge is a password. Another example of the a priori knowledge is a file key available only to an authenticated user.","Embodiments of this aspect of the invention are discussed below with reference to . However, those skilled in the art will readily appreciate that the detailed description given herein with respect to these figures is for explanatory purposes as the invention extends beyond these limited embodiments.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 1","b":["100","100"]},"The copy control processing  initially selects  content to be copied. The content to be copied can be selected  in a variety of different ways. For example, in one embodiment, the content to be copied can be selected by using a pointing device to highlight the content to be copied. Typically, the selected content represents a portion of content being displayed on a display screen of a computing device. However, the selected content can also pertain to an entire document.","Next, a decision  determines whether the selected content is associated with a secured file. When the decision  determines that the selected content is associated with a secured file, then alternate content is stored  to the clipboard. Here, because the selected content is associated with a secured file, the selected content is not permitted to be copied to the clipboard. Alternatively, if the selected content was initially stored to the clipboard, the selected content would be removed from the clipboard. In either case, the alternate content is stored  to the clipboard.","The alternate content can take various forms and will typically vary with implementation. As one example, the alternate content can simply be blank (i.e., no content). As another example, the alternate content can be a predetermined message, such as a message that secured content cannot be copied. Still another example of alternate content is to scramble the selected content such that it is not user-discernable.","On the other hand, when the decision  determines that the selected content is not associated with a secured file, then the selected content is stored  to the clipboard. Here, the clipboard essentially operates in a conventional fashion, such that the selected content is stored to the clipboard and thus may be subsequently retrieved and utilized elsewhere. Following the operations  and , the copy control processing  is complete and ends.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 2","b":["200","200"]},"The clipboard copy processing  initially opens  a first application program. A source file is then retrieved and displayed  using the first application program. Next, at least a portion of the source file is selected . Here, the source file is displayed using the first application program and thus a user can interact with the first application program via its Graphical User Interface (GUI) to select at least a portion of the source file that is to be copied. Thereafter, the clipboard copy processing  determines  whether a copy command has been initiated.","When the decision  determines that a copy command has not been received, then other processing  can potentially be performed. The other processing  can perform a wide variety of other actions (e.g., commands supported by the first application program). Following the other processing , if any, the clipboard copy processing  returns to repeat the decision .","On the other hand, when the decision  determines that a copy command has been received, then a decision  determines whether the source file is a secured file. When the decision  determines that the source file is a secured file, then alternate content is stored  to a clipboard buffer. The clipboard buffer represents a storage area associated with a clipboard application. As noted above with respect to , the alternate content can take a variety of different forms. In addition, the clipboard copy processing  could support usage of a plurality of different alternate contents. In such case, the clipboard copy processing  could first identify or receive a selection pertaining to one of the available alternate contents, and then proceed to store the selected or identified alternate content to the clipboard buffer. Alternatively, when the decision  determines that the source file is not a secured file, then the selected portion of the source file is stored  to the clipboard buffer. Following the operations  and , the clipboard copy processing  is complete and ends.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 3","b":["300","300"]},"The clipboard copy processing  initially opens  a first application program. A source file is then retrieved and displayed  using the first application program. Next, at least a portion of the source file is selected . Here, the source file is displayed using the first application program and thus a user can interact with the first application program via its GUI to select at least a portion of the source file that is to be copied.","Next, a decision  determines whether a copy command has been received. At this point a user can interact with the operating system or the first application program to copy the selected portion of the source file. On the other hand, other commands, operations or actions can also be performed at this time. Hence, when the decision  determines that a copy command has not been received, then other processing  can potentially be performed. Following the other processing , if any, the clipboard copy processing  returns to repeat the decision .","Once the decision  determines that a copy command has been received, then the selected portion of the source file is stored  to a clipboard buffer. The clipboard buffer is a memory resource that is allocated to the clipboard application. Next, a decision  determines whether the source file is a secured file. When the decision  determines that the source file is a secured file, then the selected portion of the source file that has been stored in the clipboard buffer is replaced  with alternate content. As previously noted, the alternate content can take a variety of different forms or formats. Following the operation , as well as directly following the decision  when the source file is not a secured file, the clipboard copy processing  is complete and ends. Hence, the clipboard copy processing  serves to operate a clipboard application such that secured content is not able to be copied to unsecure applications or documents.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 4","FIG. 2","FIG. 3"],"b":["400","400","400","200","300"]},"The clipboard paste processing  initially opens  a second application program. The second application program can also be referred to as a destination application program. Next, a decision  determines whether a paste command has been received. When the decision  determines that a paste command has not yet been received, other processing  can potentially be performed. Following the other processing , if any, the clipboard paste processing  returns to repeat the decision  and subsequent blocks. On the other hand, when the decision  determines that a paste command has been received, then the content from the clipboard buffer is pasted  into the second application program.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 5","FIG. 2","FIG. 4"],"b":["500","500","200","400"]},"The procedures performed by the first representative copy operation  is as follows. First, a source application  is activated such that selected content  can be identified (e.g., selected). After the selected content  has been identified, a copy button  can be activated (e.g., by a button press). The copy button  is typically a GUI component displayed on a display screen that is \u201cpressed\u201d (i.e., clicked-on) through use of a pointing device. After the copy button  is activated, the selected content  is sent to a clipboard security monitor . At the clipboard security monitor , a determination is made as to whether or not the selected content is permitted to be stored to a clipboard buffer . In this regard, the clipboard security monitor  can examine information pertaining to the source application  or a source file having the selected content  therein. In any case, when the clipboard security monitor  determines that the source application or the source file is a secured item, then the selected content  is not permitted to be stored to the clipboard buffer . On the other hand, when the source application and the source file are not secured items, then the selected content  can be stored to the clipboard buffer . Further, in the case in which the selected content  is not permitted to be stored to the clipboard buffer , alternate content can instead be stored to the clipboard buffer .","Subsequently, at a destination application wherein the previously selected content is to be reused, a paste button  is activated (e.g., by a button press). Then, the destination application  requests and receives (i.e., retrieves) the content previously stored to the clipboard buffer . The destination application  can then insert the retrieved content into a document or file being displayed by the destination application . Hence, in the case in which alternate content was instead stored to the clipboard buffer , the retrieved content provided to the destination application  is merely the alternate content and not the selected content . Consequently, according to the first representative copy operation , secured items cannot be copied to and reused from a clipboard buffer.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 6","FIG. 3","FIG. 4"],"b":["600","600","300","400"]},"The procedures performed by the second representative copy operation  are as follows. A source application  initially displays a source file from which selected content  is identified (selected). Then, a copy button  can be activated to cause the selected content  to be delivered and stored in a clipboard buffer . Typically, the clipboard buffer is memory storage associated with a clipboard application. A clipboard security monitor  detects (or is notified of) the storage of the selected content  to the clipboard buffer . Thereafter, the clipboard security monitor  can interact with the source application  to obtain additional information about the source application, such as whether the source application or source file is a secured item. In any case, the clipboard security monitor  determines whether the selected content  is a secured item. When the clipboard security monitor  determines that the selected content  is a secured item, then the clipboard security monitor  operates to clear the selected content  from the clipboard buffer . In such case, alternate content can, if desired, be stored to the clipboard buffer . Hence, the second representative copy operation  retains the selected content  in the clipboard buffer  only when the source application and\/or source file are not secured items.","Then, the destination application  requests and receives (i.e., retrieves) the content previously stored to the clipboard buffer . The destination application  can then insert the retrieved content into a document or file being displayed by the destination application . Hence, in the case in which alternate content was instead stored to the clipboard buffer , the retrieved content provided to the destination application  is merely the alternate content and not the selected content . Consequently, according to the second representative copy operation , secured items cannot be reused from a clipboard buffer.","As noted above, copying content from one application to another typically involves a copy command and then a subsequent paste command. In the embodiments discussed above with respect to , and the representative examples provided in , the usage of the clipboard for secured content is controlled on the front end, that is, during or soon following the copy command. However, the control over the usage of the selected content can also be controlled on the back end, that is, during the paste command. Other such embodiments of the invention are discussed below with reference to , B and .",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 7A","b":["700","300"]},"The clipboard copy processing  initially opens  a first application program. A source file is then received and displayed  using the first application program. Then, at least a portion of the source file is selected . The operations - are similar to the operations - and - discussed above in , respectively.","Following the operation , a decision  determines whether a copy command has been received. When the decision  determines that a copy command has not been received, then other processing  is potentially performed. Once the other processing , if any, is performed, the clipboard copy processing  returns to repeat the decision . Once the decision  determines that a copy command has been received, then the selected portion of the source file is stored  to the clipboard buffer. Hence, in this embodiment, the clipboard copy processing  operates to store the selected portion of the source file to the clipboard buffer without regard to whether the source file or the first application program are of a secure nature. However, if desired, a flag or other indicator can also be stored in the clipboard buffer or elsewhere to indicate whether the selected content stored in the clipboard buffer is a secured item.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 7B","b":["750","750","750","700"]},"The clipboard paste processing  initially opens  a second application program. The second application program is also referred to as a destination application program. Next, a decision  determines whether a paste command has been received. When the decision  determines that a paste command has not been received, then other processing  is potentially performed. Following the other processing , if any, the clipboard paste processing  returns to repeat the decision .","Once the decision  determines that a paste command has been received, a decision  determines whether the source is secure. The source, for example, can refer to the first application program, the source file or the selected content. When the decision  determines that the source is secure, then a decision  determines whether the destination is secure. When the decision  determines that the destination is secure, then the content from the clipboard buffer can be pasted  into the second application program. Here, in the case in which both the source and the destination are deemed secure, the selected content is permitted to be pasted from the clipboard buffer into the second application program that has requested such content.","However, when the decision  determines that the destination is not secure, then alternate content can be pasted  into the second application program. As noted above, the alternate content can take a variety of different forms depending upon implementation. Still further, when the decision  determines that the source is not secure, then the decision  can be bypassed such that the content is pasted  from the clipboard buffer into the second application program. Following the operations  or , the clipboard paste processing  is complete and ends.","According to one implementation, the decision  can utilize a flag or other indicator that may have been stored by the clipboard copy processing  in determining whether the source is secure. The destination can be deemed secure if security is imposed, such as by a password or other authentication technique.","According to another implementation, the destination would be deemed unsecured unless it was the same application as the first application. As an example, a program handler returned from an operating system call (e.g. WIN32 APIs) to retrieve a source file can be compared to another program handler of a second application. If the program handlers match or they are the same program handler, then the source and destination are the same application, and thus the pasting of the selected content into the application program would be permitted. However, if the destination application was not the same as the source application, then, in this embodiment, the pasting of the content would be not permitted (instead, alternate content could be provided).","Alternatively, in Windows OS, the \u201cactive window\u201d or \u201cforeground window\u201d mechanism can be utilized to determine if the selected content in a secured source file is being copied into another application. Although several windows (assuming an application activating a window) may be visible on the screen simultaneously, there is only one window that is active or receives an input from the keyboard or the mouse. By calling an appropriate API (e.g. GetActiveWindowTitle), the clipboard security monitor can be informed if the selected content has been copied into the clipboard or a second application has been activated to retrieve the selected content from the clipboard.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 8","FIG. 7A","FIG. 7B"],"b":["800","800","700","750"]},"The procedures performed by the third representative copy and paste operation  are as follows. A source application  operates to display a source file for a user. The user can then interact with the source application  to select content (selected content) . Then, a copy button  can be activated to store the selected content  to a clipboard buffer . Typically, the clipboard buffer  is associated with a clipboard application.","Subsequently, at a destination application , the user activates a Paste button . In response, the destination application  requests the contents of the clipboard from the clipboard buffer . A clipboard security monitor  then (assuming the selected content is known or presumed to be secured) interacts with the clipboard buffer  and\/or the destination application  to determine whether the destination application  is a secure application. When the clipboard security monitor  determines that the destination application  is secure, then the selected content can be permitted to be retrieved from the clipboard buffer  and pasted (i.e., inserted) into the destination application  or a file therein. Additionally, if the clipboard security monitor  determines that the source application  is not a secure application, then the selected content stored in the clipboard buffer  could be supplied to the destination application  regardless of whether the destination application was secure or not.","Most application programs (e.g., Microsoft Word or Notepad) either generate or process data in one form or another. One can readily copy data between various applications using the clipboard provided by the clipboard application. Typically, one copies a portion of data from one application into the clipboard and then pastes the portion of data into other applications as many times as desirable as long as the clipboard has not been updated. The data or content being copied can be text, image, audio or other type data or content.","The clipboard application is initiated by a user and has a very simple protocol. When the user requests a \u201ccopy\u201d or \u201ccut\u201d operation to place data from a first application into the clipboard, the first application makes Application Programming Interface (API) calls to empty the clipboard and then to store the data to the clipboard. In one implementation, the first application provides the single item of data in multiple formats, so as to increase the likelihood that the eventual recipient application will understand one of them. Using this technique allows the first application to simply list the formats it supports for the data, but only has to render the data when another application actually tries to retrieve the data from the clipboard. In this way, data that is never going to be used never needs to be rendered. When the user makes a paste request, the receiving application enumerates the formats of the data in the clipboard and, having found one it likes, takes the data in that format.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 9","b":["900","900"]},"The clipboard usage control system  includes a document securing module (DSM)  that is configured to interface with an operating system (e.g., Microsoft Windows). When a secured document is requested, the document securing module  is activated without interaction or notification of the user. In one implementation, the document securing module  is similar to a device driver that essentially converts more general input\/output instructions of an operating system to messages that a device\/module being supported can understand. The device\/module enclosed in the document securing module  is a cipher having an encryption\/decryption process model  and a filter function . The encryption\/decryption process model  encrypts a document of secure nature and decrypts a secured document when the secured document is requested. Upon detecting a secured file being accessed, the filter  is activated and prevents the clipboard from being used to copy secure content to other applications, particularly other unsecure applications.","In operation, a user selects a secured document that is associated with an application  (e.g., Microsoft Word or PowerPoint). With Microsoft Windows, an operating system (OS) access known as the ProcessID property can be used to activate an application (as an argument to the AppActivate method). The parameter ProcessID identifies the application and an event handler takes necessary parameters to continue the OS access to an Installable File System (IFS) Manager . The IFS Manager  is responsible for arbitrating access to different file system components. In particular, the IFS Manager  is structured as an ordinary Dynamic Link Library (DLL) with entry points for opening, closing, reading, writing files and others. With one or more flags or parameters (e.g., a file key) passed along, the access activates the document securing module .","According to one embodiment, the document securing module  resides on a local disk in a file that is structured like a Dynamically Linked Library (DLL), typically with a SYS or IFS extension, and is loaded during system initialization. Once the document securing module  is installed and initialized, a kernel communicates with it in terms of logical requests for file opens, reads, writes, seeks, closes, and so on. Through the IFS Manager , a File System Device (FSD)  translates these requests\u2014using control structures and tables found on the volume itself\u2014into requests for sector reads and writes for which it can call special kernel entry points called File System Helpers (FsHlps). The kernel passes the demands for sector I\/O to an appropriate device driver and returns the results (e.g., the requested document) to the FSD .","Upon receiving the results from the FSD  indicating that the requested document is secured, document securing module  activates a cipher (e.g., an encryption\/decryption module ) included therein to decrypt the document. At the same time, the filter function  can be activated. According to one implementation, an API for the clipboard is called to virtually place a filter in front of (or in back of) the clipboard so that copied data can be restricted as to its use. The appropriate API is available from Microsoft Corporation, namely documentation pertaining to Platform Form Release, February, 2001, which is incorporated herein by reference.","On the source application side, the secured document is opened and perhaps the clear contents therein are displayed in the application. A portion of the clear contents may be selected (i.e., highlighted) for the purpose of copying into another application. When a \u201ccopy\u201d command is initiated, the selected contents are attempted to be saved into the clipboard. The filter imposed by the filter function  can become effective to void the selected contents. Depending on implementation, the filter may perform differently. In one case, the filter simply blocks any copied data from being placed into the clipboard. The result is that the clipboard is empty and a user cannot transport the copied contents into another application. In another case, the filter can be configured to include a message (e.g., unauthorized copy is not permitted). When a user attempts to copy a selected portion into another application, the result is that the message (not the selected portion) is copied. In still another case, the clipboard is copied into an illegible or scrambled content corresponding to the selected portion. This, for example, can be done through a simple logical operation on the selected portion.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 10","FIG. 10"],"b":["1000","1002","1000","1004","1006","1008","1004","1006","1008"]},"Alternatively, when the selected portion is copied into the clipboard, the selected portion may be modified invisibly to the user. According to one embodiment, one or more special marks may be inserted into the spaces of the selected portion. These special marks are ignorant to an application. For example, a pair of Hexadecimal numbers \u201cFF\u201d can be inserted into the spaces between words or replace the spaces (e.g. \u201c32\u201d in ASCII) while the newly inserted \u201cFF\u201d are neither visible on a display nor printable by a printer. Even if a user was successful in copying the selected portion into the clipboard and pasting the selected portion from the clipboard to a new application, these special marks would go along with the file under the new application with the special marks invisible to users or many utility applications (e.g. printing, display or audio). As a result, it is now possible to trace down where the copied portion in a new file is original from.","The \u201ccut\u201d command performs a copy command and then deletes the selected content from the source document. Hence, for purposes of storing selected content to a clipboard, a cut command operates in the same manner as the above-discussed copy command.","In one embodiment, a secured file or secured document can include two parts, an attachment, referred to as a header, and an encrypted document. The header may include information regarding a file key or the file key itself that can be used to decrypt the encrypted document. The invention is preferably implemented in software, but can be implemented in hardware or a combination of hardware and software. The invention can also be embodied as computer readable code on a computer readable medium. The computer readable medium is any data storage device that can store data which can thereafter be read by a computer system. Examples of the computer readable medium include read-only memory, random-access memory, CD-ROMs, magnetic tape, optical data storage devices, and carrier waves. The computer readable medium can also be distributed over network-coupled computer systems so that the computer readable code is stored and\/or executed in a distributed fashion.","The advantages of the invention are numerous. Different embodiments or implementations may yield one or more of the following advantages. One advantage of the invention is that secured documents or files being displayed are protected from having their content copied to other unsecure applications or documents. Another advantage of the invention is that a clipboard security monitor (or a document securing module) is embedded in an operating system as such the management of the clipboard is transparent to a user. Still another advantage of the invention is that a copy application is reliably managed such that secured content is not able to be copied to unsecure destinations. Still another advantage of the invention is that alternate content can be used in place of secure content that is not permitted to be copied to unsecure destinations.","The many features and advantages of the present invention are apparent from the written description and, thus, it is intended by the appended claims to cover all such features and advantages of the invention. Further, since numerous modifications and changes will readily occur to those skilled in the art, it is not desired to limit the invention to the exact construction and operation as illustrated and described. Hence, all suitable modifications and equivalents may be resorted to as falling within the scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention will be readily understood by the following detailed description in conjunction with the accompanying drawings, wherein like reference numerals designate like structural elements, and in which:",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 7B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
