---
title: System and method for transparently redirecting client requests for content using a front-end indicator to preserve the validity of local caching at the client system
abstract: Methods and computer program products for transparently redirecting a request for content such that a client system is unaware of the redirection. A client requests content through a front-end server that provides a single point of access for content stored on one or more back-end servers. The single point of access makes it so the client does not know and does not care which particular back-end server stores the requested content. When a back-end server provides a redirect response for content that the back-end server does not store, the front-end server receives the redirect response and reissues the request to a server identified in the redirect response. A front-end server indicator is added to requests so that the back-end server knows the request is from a front-end server. This allows the back-end server to provide a list of servers in the redirect response without causing errors in clients making direct requests to back-end servers when the clients are unable to process a list of servers contained in a redirect response.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06865605&OS=06865605&RS=06865605
owner: Microsoft Corporation
number: 06865605
owner_city: Redmond
owner_country: US
publication_date: 20001004
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CO-PENDING APPLICATIONS CONTAINING RELATED MATERIAL","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The following applications, which are filed the same day as this application, are hereby incorporated by reference: U.S. application Ser. No. 09\/680,120, entitled \u201cSelecting a Server to Service Client Requests,\u201d and U.S. application Ser. No. 09\/679,720, entitled \u201cRouting Client Requests to Back-End Servers.\u201d","1. The Field of the Invention","The present invention relates to redirecting requests for content that is stored on a server. More specifically, the present invention relates to methods and computer program products for using a front-end server in transparently redirecting a request for content such that a client system is unaware of the redirection.","2. The Prior State of the Art","At times, a server may need to redirect requests for content. Redirection may occur because (i) the content has moved, either temporarily or permanently, to another server, (ii) multiple representations of the content are available and the client should choose from them, (iii) the request should be made through a proxy, and etc. In the prior art, servers send redirect responses to the client system and the client system is responsible for reissuing the request for content to the server identified in the redirect response. However, sending redirect responses to a client may not provide any benefit in some systems.","For example, some systems include a proxy server that provides a single point of access to content stored on back end servers. The back end server is a server in the ordinary sense, storing content that clients may access. The proxy or front end server provides an access point for the content that is stored on one or more back end servers. From the client's perspective, it appears as if the front end server is the source for all of the content stored at the back end servers. However, clients are not necessarily precluded from accessing back end servers directly.","Making requests for content through front-end servers provides several benefits. From time to time, content stored on one back-end server may be moved to another. If a client has been accessing the moved content directly, the client must alter future requests to reflect the new location of the content. Although redirect responses from the old back-end server may help inform clients that the content has moved, redirection requires additional processing by the client and leads to slower response times for the requested content. Also, redirect responses from back-end servers may be provided on a temporary basis. Requests occurring after a certain time period may indicate simply that the requested content is not available.","Front-end servers also facilitate local caching at the client system. Frequently, content, such as email content, is cached at the client system to improve performance. Only changes made to the email content is exchanged between the client and back-end server. If email content is moved from one back-end server to another, the local caching is invalidated and the full email content must be exchanged. By using a front-end server, all content appears to come from a single source, regardless of the particular back-end server that actually stores the content. Any movement of content from one back-end server to another is transparent to the client. As a result, local caching remains valid even after content has been moved.","However, redirection, as taught in the prior art, introduces problems when practiced in a front-end server system. First, the front-end server is supposed to make the storage of content at back-end servers transparent to the client. In receiving a redirect response because content has moved from one back-end server to another, the client is made aware of back-end server storage details and transparent access to the content is eliminated. Furthermore, because the client made the request to the front-end server, a redirect response from a back-end server that is unknown to the client is likely to cause substantial confusion. Even more troublesome, certain back-end servers may require that all access occur through a front-end server. In these circumstances, the client would be redirected to a back-end server that the client is unable to access. Therefore, the prior art lacks methods and computer program products for using a front-end server in transparently redirecting a request for content such that a client system is unaware of the redirection.","These and other problems with the prior art are overcome by the present invention, which is directed toward transparently redirecting a request for content such that a client system is unaware of the redirection. A front-end server receives requests for content stored on one or more back-end servers. By making the requests through the front-end server, the client does not know and does not care which back-end server stores the content being requested. As far as the client is concerned, the front-end server is the source of the requested content.","Content may be stored on one or more back-end servers. Private content, such as email, calendars, tasks, etc., typically is stored at only one back-end server, whereas public content, like applications, discussion groups, etc., typically is stored on multiple servers. At times, a front-end server may request data from a back-end server that the back-end server does not store. For example, if private content is moved, the back-end server generates a redirect response that identifies the back-end server storing the moved content. Rather than pass the redirect response back to the client as is taught in the prior art, the front-end server reissues the content request to the back-end server identified in the redirect response. Upon receiving the requested content from the redirect back-end server, the front-end sends the content to the client system.","Public content is likely to be stored on multiple back-end servers. However, the prior art allows for only a single server to be identified in a redirect response. When the front-end server receives a request for content from a client, the request is modified to indicate that the front-end is making the request to the back-end server. The back-end server receiving the request for content examines the request to determine if the request includes the front-end indicator. If present, the back-end server identifies a list of back-end servers that store the requested content. By receiving a list of back-end servers, the front-end server is able to load balance requests for content among all the back-end servers that can satisfy the request. If the front-end indicator is not present, the back-end server identifies a single back-end server in the redirect response. In identifying only a single back-end server, the redirect response will be compatible with prior art clients making direct requests to back-end servers.","Because the front-end server processes redirections, rather than passing them to the client as taught in the prior art, the front-end server preserves the benefits of having transparent back-end server storage. Specifically, content can move from one back-end server to another without impacting the client.","Additional features and advantages of the invention will be set forth in the description which follows, and in part will be obvious from the description, or may be learned by the practice of the invention. The features and advantages of the invention may be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the present invention will become more fully apparent from the following description and appended claims, or may be learned by the practice of the invention as set forth hereinafter.","Client requests for data may be redirected from one server to another. Some redirections occur because data has been either temporarily or permanently moved to a new server. In the prior art, redirections are sent to the client system that initiated the request and the client reissues the request to the server indicated in the redirection. Where a proxy requests data for a client, the proxy returns redirection responses to the client for processing. However, redirection according to the prior art proves to be inadequate for certain systems. For example, U.S. application No. Ser. 09\/679,720, filed on the same day herewith, entitled \u201cRouting Client Requests to Back-End Servers,\u201d which is hereby incorporated by reference, describes the use of a front-end server to access content stored on one or more back-end servers. The specific back-end server storing requested content is unknown and transparent to the client.","One benefit of accessing content through a front-end server as described in the afore-referenced application is that the client system is insulated from having to identify the is specific server storing the data being requested. The client requests data from the front-end server and the front-end server determines which back-end server should satisfy the request. Use of the front-end server also insures that local caching on the client remains valid when content moves from one back-end server to another because it appears to the client that the front-end server is the source of content.","With all requests for content being directed to the front-end server, redirection presents a problem because it identifies specific back-end servers. For example, a redirect response may not provide any meaningful information. In some systems, clients may be allowed access to back-end servers only through a front-end server. This makes the redirection information of no use to the client because reissuing the request directly to the identified back-end server will result in the request being denied. Even if the back-end server is directly accessible to the client, a direct request to the back-end server prevents the client from receiving any of the benefits offered by the front-end server arrangement.","In a Microsoft Exchange\u00ae system, redirections may occur for a variety of reasons. For example, Exchange public folder trees may be replicated across multiple back-end servers to provide greater accessibility. However, the extent of content replication (in contrast to folder tree replication) is controlled on a folder-by-folder basis. As a result, a given back-end server may include the folder hierarchy, but not the folder contents. A folder is termed \u201cghosted\u201d when the folder is present in the public folder tree of a back-end server, but the contents are not replicated on the back-end server.","The front-end server may direct requests for content based on the public folder tree. If a request is for the contents of a folder that is ghosted, the back-end server issues a redirect response that identifies other back-end servers where the content is replicated. According to the present invention, the front-end server receives the redirect response from the back-end server and reissues the redirected request rather than passing the redirect response back to the client. When the front-end server receives the requested content from a back-end server identified in the redirect response, the content is sent to the client From the client's perspective, the content's source is the front-end server. The client has no indication that the redirection occurred.","Because replicated data may be stored on more than one server, the back-end server ghosting a folder is capable of identifying a list of back-end servers in a redirect response. However, prior art clients are unable to receive a list of servers in a redirect response. As a result, front-end servers add a front-end indicator to any requests they direct to back-end servers. If a back-end server receives a request with the front-end indicator, the back-end server knows that a list may be returned. Returning a list of servers allows the front-end server to load balance requests across all back-end servers capable of servicing a particular request. U.S. application Ser. No. 09\/680,120, filed on the same day herewith, entitled \u201cSelecting a Server to Service Client Requests,\u201d which is hereby incorporated by reference, describes how a particular back-end server may be identified to load balance requests. Otherwise, if the front-end indicator is not present, the back-end server returns a single back-end server in the redirect response. In one embodiment the front-end indicator is a string added to the standard HTTP \u201cUser-Agent\u201d header and the server list is returned in an extended HTTP 305 Use Proxy redirect response. However, the present invention is not limited to the use of any particular HTTP headers or responses.","In Exchange systems it is also possible that access to the mailbox storage of an email client will result in a redirect response. The front-end server accesses a global catalog to identify the specific back-end server that stores email for a particular user. However, there may be a short delay between the time an email storage is moved and the time that the move is reflected in the global catalog. A request for email content made to the old back-end server will result in a redirect response. As described above, the front-end server will process the redirect response and issue a request for the content to the back-end server identified in the redirection. As a general rule, email storage is located on only one back-end server at a time. Redirect responses for email content, therefore, typically will identify a single server rather than a list. Like email content, other types of private content (content that is specific to a single user), such as calendars, task data, etc., is stored ordinarily at only one back-end server.","By processing redirect responses, front-end servers allow clients to make requests for content without knowing or caring about which particular back-end server stores the requested content. The present invention extends to both methods and computer program products for transparently redirecting a request for content such that a client system is unaware of the redirection. The embodiments of the present invention may comprise a special purpose or general purpose computer including various computer hardware, as discussed in greater detail below.","Embodiments within the scope of the present invention also include computer-readable media for carrying or having computer-executable instructions or data structures stored thereon. Such computer-readable media can be any available media that can be accessed by a general purpose or special purpose computer. By way of example, and not limitation, such computer-readable media may comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to carry or store desired program code means in the form of computer-executable instructions or data structures and which can be accessed by a general purpose or special purpose computer. When information is transferred or provided over a network or another communications connection (either hardwired, wireless, or a combination of hardwired or wireless) to a computer, the computer properly views the connection as a computer-readable medium. Thus, any such a connection is properly termed a computer-readable medium. Combinations of the above should also be included within the scope of computer-readable media. Computer-executable instructions comprise, for example, instructions and data which cause a general purpose computer, special purpose computer, or special purpose processing device to perform a certain function or group of functions.","FIG.  and the following discussion are intended to provide a brief, general description of a suitable computing environment in which the invention may be implemented. Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by computers in network environments. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Computer-executable instructions, associated data structures, and program modules represent examples of the program code means for executing steps of the methods disclosed herein. The particular sequence of such executable instructions or associated data structures represent examples of corresponding acts for implementing the functions described in such steps.","Those skilled in the art will appreciate that the invention may be practiced in it network computing environments with many types of computer system configurations, including personal computers, hand-held devices, multi-processor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by local and remote processing devices that are linked (either by hardwired links, wireless links, or by a combination of hardwired or wireless links) through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","With reference to , an exemplary system for implementing the invention includes a general purpose computing device in the form of a conventional computer , including a processing unit , a system memory , and a system bus  that couples various system components including the system memory  to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system (BIOS) , containing the basic routines that help transfer information between elements within the computer , such as during start-up, may be stored in ROM .","The computer  may also include a magnetic hard disk drive  for reading from and writing to a magnetic hard disk , a magnetic disk drive  for reading from or writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to removable optical disk  such as a CD-ROM or other optical media. The magnetic hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , a magnetic disk drive-interface , and an optical drive interface , respectively. The drives and their associated computer-readable media provide nonvolatile storage of computer-executable instructions, data structures, program modules and other data for the computer . Although the exemplary environment described herein employs a magnetic hard disk , a removable magnetic disk  and a removable optical disk , other types of computer readable media for storing data can be used, including magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, RAMs, ROMs, and the like.","Program code means comprising one or more program modules may be stored on the hard disk , magnetic disk , optical disk , ROM  or RAM , including an operating system , one or more application programs , other program modules , and program data . A user may enter commands and information into the computer  through keyboard , pointing device , or other input devices (not shown), such as a microphone, joy stick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  coupled to system bus . Alternatively, the input devices may be connected by other interfaces, such as a parallel port, a game port, or a universal serial bus (USB). A monitor  or another display device is also connected to system bus  via an interface, such as video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown), such as speakers and printers.","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as remote computers and . Remote computers and may each be another personal computer, a server, a router, a network PC, a peer device or other common network node, and typically include many or all of the elements described above relative to the computer , although only memory storage devices and and their associated application programs and have been illustrated in FIG. . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN)  that are presented here by way of example and not limitation. Such networking environments are commonplace in office-wide or enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the local network  through a network interface or adapter . When used in a WAN networking environment, the computer  may include a modem , a wireless link, or other means for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing communications over wide area network  may be used.",{"@attributes":{"id":"P-00037","num":"00037"},"figref":"FIG. 2","b":["250","252","254","260","262","264","270","272","250","260","270","254","264","240","230","240","240"]},"Email client A  uses front-nd server  in accessing email content. Various protocols are available that allow front-end server  to route content requests on behalf of email client A . Internet message access protocol  (\u201cIMAP4\u201d), post office protocol version 3 (\u201cPOP3\u201d), and hypertext transfer protocol (\u201cHTTP\u201d) are all protocols that front-end server  can direct to a particular back-end server on behalf of email client A . The present invention, however, is not limited to any particular protocol. It is only necessary that the protocol allow for requests to be routed by a front-end server. For example, messaging application programming interface (\u201cMAPI\u201d) is a protocol that currently will not allow front-end server  to route requests for email client A .","Comparing requests for content by email client A  with and without front-end server  may be helpful in understanding the present invention. For simplicity, assume that all requests use HTTP as their email protocol. Without front-end server , a request by email client A  for the contents of the email client A old mailbox  might be entered as \u201chttp:\/\/serverB\/exchange\/clientA\u201d and a request by email client A  for the contents of the email client A new mailbox  might be entered as \u201chttp:\/\/serverA\/exchange\/clientA\u201d. Note that in each case, it was necessary to specify the server where the mailbox contents were stored. In contrast, if the front-end server  were named \u201cmail\u201d a request by email client A  for the contents of the email client A new mailbox  might be entered as \u201chttp:\/\/mail\/exchange\/clientA\u201d.","By using front-end server , email client A  does not know and does not care what back-end server stores the requested email content. When the email content is moved from email client A old mailbox  on server B  to email client A new mailbox  on server A , front-end server  will direct the request to the appropriate back-end server automatically. Nevertheless, there may be a short time delay between when email content is moved from server B  to server A  and when global catalog server  reflects the move. During this time delay, front-end server  continues to direct requests for the email content of email client A  to server B . Upon receiving a request, server B  generates a redirect response that indicates that the email content for email client A  now is located at server A .","In contrast to the prior art, when front-end server  receives the redirect response, front-end server  reissues the request for email content to server A  rather than passing the redirect response back to email client A . As shown in , email client A  may only access email content through front-end server . A redirect response indicating that server A  stores the email content from email client A  would be of no benefit to email client A  because server A  cannot be reached directly. Furthermore, such a redirect response may confuse email client A  because no request for content was made to server B , and therefore a redirect response from server B  is unexpected. Front-end server  overcomes these problems with prior art redirection by processing the redirect response without any indication to email client A  that any redirection has occurred. U.S. application Ser. No. 09\/679,720, filed on the same day herewith, entitled \u201cRouting Client Requests to Back-End Servers,\u201d which is hereby incorporated by reference, provides further details on the operation of front-end server  in requesting email content for email client A . The present invention should not be interpreted as requiring that back-end server only be accessible through a front-end server.","The present invention is not limited to any particular protocol and it is not limited to any particular content.  shows client system  using front-end server  to access content that is stored at various back-end servers. Back-end server  includes web store  containing App A  and Folder A  that stores Data A . Back-end server  includes web store  containing App B  and Folder A  that stores Data A . Back-end server  includes web store  containing App A  and Folder A . However, Folder A  is dashed in web store  to indicate that the storage hierarchy is present at back-end server , but the data (e.g., Data A ) is not.","App A , App B , and Folder A  are examples of public content stored at a back-end server. App A  is available in web stores  and , whereas App B  is only available in web store . Folder A  represents a storage hierarchy for organizing public content. Microsoft Exchange\u00ae products allow the determination of whether data corresponding to a folder will be stored on a particular server to be made on a folder-by-folder basis. Folder A  in web store  is set not to store any data. One reason for not storing the data for a folder is that the folder may be of minor significance for the users of a particular server. Because the folder is seldom if ever accessed, it is better to conserve the storage space that would otherwise be required for storing the folder's contents.","Nevertheless, by including the hierarchy on each server, it is possible to access the contents of each folder on any server. A request for the contents of Folder A  made to web store  will result in a redirect response that indicates where the contents of Folder A  may be accessed. Most likely, the access will be slower than would be provided by access to web store  because lower bandwidth communication links may be used, but this added burden is a minor imposition given the relative infrequency of access to Folder A  at back-end server . A folder within the storage hierarchy that does not include the folder's contents is said to be \u201cghosted.\u201d","When client system  requests App A  from front-end server , global catalog server  identifies a list of servers that includes back-end server  and back-end server . Front-end server  uses an authentication token associated with authentication credentials received from client system  as a key for performing a hashing operation over the list of servers. The hashing operation insures that requests for content are evenly distributed over the servers where the content is available and that a given request and authentication token will identify the same server each time the request is made (as long as the available servers do not change). By requesting data from the same back-end server each time a given request is made, any user-specific state information may be stored and recalled at the back-end server, such as a read\/unread state for messages in a public folder. Authentication tokens and authentication credentials may be stored in global catalog server  and\/or cached in front-end server .","Client system  requesting App B  from front-end server , identifies a single server, back-end server , from global catalog server . Like the mailbox examples from , no hashing operation occurs because the content only may be requested from one back-end server. Thus, for both public and private content, it is possible that the hashing operation will not be necessary to identify a particular back-end server where the content request is directed.","Global catalog server  identifies back-end server , back-end server , and back-end server , in response to a request for the contents of Folder A  from front-end server . If the hashing operation identifies back-end server  or back-end server , the request is directed to the identified back-end server as described above. But, if back-end server  is identified, front-end server  must perform additional work in order to direct the request to a back-end server that can satisfy the request because the requested content is ghosted. When front-end server  directs the request to back-end server , back-end server  generates a redirect response. The contents of the redirect response depend on whether or not front-end  has modified the request to indicate that the response is from a front-end server. If so, the redirect response includes a list of back-end servers that can satisfy the request for the ghosted folder. Otherwise, the redirect response includes a single back-end server capable of satisfying the request. U.S. application Ser. No. 09\/680,120, filed on the same day herewith, and entitled \u201cSelecting to Service Client Requests,\u201d which is hereby incorporated by reference, provides additional information on identifying a back-end server when public content is ghosted on a back-end server.",{"@attributes":{"id":"P-00048","num":"00048"},"figref":["FIGS. 4A and 4B","FIG. 4A","FIG. 4A"],"b":["442","452","4","412","420","422","424"]},"The front-end server adds a front-end indicator to the request () so that a back-end server receiving the request will know that it was sent by a front-end server rather than by a client. The step for querying (A and B of ) a back-end server for the content may include the acts of directing the request to a particular back-end server () and receiving a redirect response ( of ) from the particular back-end server. In generating the redirect response, the back-end server performs the following, acts. The back-end server receives the request for content () and, in decision block , examines the request for a front-end indicator. If no front-end indicator is present, the redirect response includes a single redirect back-end server (). With a front-end indicator present, decision block  determines if multiple back-end servers can satisfy the request for content. Here too, if only one back-end server is identified, the redirect response includes a single redirect back-end server (). However, if multiple back-end servers are able to satisfy the content request, the redirect response includes a list of redirect back-end servers (). After the one or more redirect back-end servers have been identified, the redirect response is sent to the front-end server ( of FIG. B).","As described earlier, as part of a step for querying the back-end server for requested content (A of FIGS. A and B), the front-end performs the act of receiving the redirect response from the back-end server. In decision block , the front-end server determines if the redirect response includes a list of back-end servers or a particular back-end server. If a list was received, the front-end server receives an authentication token () and hashes the list () with the authentication token as a key to identify a particular back-end server. The acts of receiving an authentication token () and hashing a list of back-end servers () may be included within a step for distributing a request for content to one of the back-end servers in the list. The authentication token may be identified during the step for authenticating the client ( of FIG. A).","Once a particular back-end server is identified, the front-end server redirects the request to the particular back-end server () and receives the requested content from the redirect back-end server (). The acts of redirecting the request () and receiving the requested content () are acts that may occur in a step for retrieving the requested content is from a particular redirect back-end server. After the content is received, the front-end server sends the requested content to the client system ().","The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is, therefore, indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.","What is claimed and desired to be secured by United States Letters Patent is:"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In order to describe the manner in which the above-recited and other advantages and features of the invention can be obtained, a more particular description of the invention briefly described above will be rendered by reference to specific embodiments thereof which are illustrated in the appended drawings. Understanding that these drawings depict only typical embodiments of the invention and are not therefore to be considered to be limiting of its scope, the invention will be described and explained with additional specificity and detail through the use of the accompanying drawings in which:",{"@attributes":{"id":"P-00017","num":"00017"},"figref":"FIG. 1"},{"@attributes":{"id":"P-00018","num":"00018"},"figref":"FIG. 2"},{"@attributes":{"id":"P-00019","num":"00019"},"figref":"FIG. 3"},{"@attributes":{"id":"P-00020","num":"00020"},"figref":"FIGS. 4A and 4B"}]},"DETDESC":[{},{}]}
