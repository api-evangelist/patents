---
title: Metadata to technical design review document process
abstract: A method includes receiving a user input in a design environment indicating at least one software component for which a technical design document is desired, identifying files in which information associated with the component is located, accessing the information, and formatting the information according to a technical design document template. A system has a design environment for development of software components, and a document generator to automatically generate documentation for the software components on demand. A method to design software components includes producing a design of a software component in a design environment residing upon a computer, selecting the software component for design review, and generating a design document according to a template from the design environment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08103701&OS=08103701&RS=08103701
owner: Oracle International Corporation
number: 08103701
owner_city: Redwood Shores
owner_country: US
publication_date: 20080508
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION OF THE EMBODIMENTS"],"p":["Software developers may document the control of the definition and structure of a technical design in a \u2018text program\u2019 such as Microsoft\u00ae Word\u00ae that provides a comfortable format for most parties involved in the design process. This text document then needs conversion from text to code.","Developers then generally have to code the design from the document, which can lead to errors because of mis-typing or the addition of incorrect information. Alternatively, the developers may have access to an auto code generator that can automatically code into whatever programming language used.","Once the developers complete the coding of the design, a painstaking review is required to ensure that the technical design was converted into code correctly. This process generally takes a relatively long time and requires a very high level of attention to detail. This process is contrary to the movement towards rapid application development in the software industry.","Another issue arises upon completion, or \u2018build,\u2019 of the software component. Generally, the build occurs in an integrated development environment (IDE), such as JDeveloper\u2122 created by Oracle\u00ae. The developer must then compare the technical design document in the text program to the built component, which may be represented by a collection of multiple source files. This makes tracking of changes caused by code fixes and other changes during the build process hard to identify. The task of ensuring that the built component matches the designed component requires more painstaking and time-consuming review.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["40","20","30","42","44"]},"An integrated development environment, as used here, generally exists in a computing system. IDEs typically present a suite of programs within an interface in which all development is done. This suite provides typically large numbers of features for authoring, modifying, compiling, deploying and debugging software\u2014the idea being that the IDE abstracts the configuration necessary to piece together command line utilities in a cohesive unit, which theoretically reduces the time to learn a language, and increases developer productivity. It is also thought that the tight integration of various development tasks can lead to further productivity increases. For example, code can be compiled while being written, providing instant feedback on syntax errors.","In some instances, a developer may also have an application framework  available. An application framework may include support programs, code libraries, a scripting language, or other software to help develop and glue together the different components of a software project. Various parts of the framework may be exposed through an application programming interface (API). Typically, an application framework has a specific programming language for which it has been adapted.","The application framework and integrated design environment are just examples of a design environment in which development is done. Similarly, the document generator  is part of the design environment. As will be discussed in more detail further, the document generator may merely comprise an interface to the converter  of the middle ware. The converter  and the document generator  may also be mutually exclusive locations at where the document production facility resides to allow developers to create technical design documents.","Examples used here may refer to the Java\u2122 2 Enterprise Edition (J2EE) and its successor Java\u2122 EE 5 as an integrated development environment. In addition, the examples may refer to Oracle's Application Development Framework (ADF) as an application framework. These are used to aid in understanding of the discussion and no limitation to these particular examples is intended, nor should one be implied.","Similarly, the applications discussed here are generally referred to as \u2018enterprise management applications,\u2019 typically banking, human resources, inventorying, e-commerce, etc., types of applications. However, any applications that result from a development process that may also include middleware may be used.","In the architecture of , the middleware may have other tools that adapt the code developed in  for particular applications in . One such example may be a converter or formatter  that may convert documents or other such items from the development tools to a format that is viewable in a structured format. This converter may be a custom designed and built tool, or may be an adaptation of an existing converter, such as Oracle's Business Intelligence (BI) Publisher. The converter  may be extensive enough to take information, generally in some sort of textual format although it may also include other file formats such as Binary file format, from several disparate places and create reports, graphs and other documentation useful to the customers using the enterprise management applications.","It is possible to employ the publisher, or a similar function, located in the middleware, or as an application, to alter the typical design, review, build process used in developing the software components that underlie applications. Currently, the publishers are adapted for and used to generate reports for the end users. By modifying the development tools available to software developers, one could provide a document generator  to be used in the design process.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2"},"In the current design and build cycle, a software component, such as an ADF component is designed is the design environment\/development tools  of . A technical design document is then created from the design environment. This design is then published by e-mail routing, printing, etc., and then undergoes technical design review at . Publication may also involve sending out a notification that the technical design document is available in the design environment for the recipients to review, rather than publishing the document itself. Changes to the design must be implemented in the technical design document, and possibly re-reviewed before ultimately receiving approval.","Upon receiving approval, the component is \u2018built,\u2019 at  meaning that it is coded, generally in the integrated development environment (IDE) or other design environment. During the course of building the component, changes may occur in the coding due to code fixes or additional information that comes to light during the build. These changes may result in design changes that render obsolete the technical design document produced at .","Upon completion and testing of the component at , the design document may require updating. The design document will generally be compared to the resulting component, to ensure that deviations from the approved design were necessary. This process generally involves a developer having to view several different files that interact to form the component, as well as the design document, simultaneously. The process has a high probability for error, resulting in the process taking great amounts of time and effort to accomplish it correctly.","As mentioned above, using a converter that can convert multiple codes files and\/or segments into a structured text document for review. As mentioned above, this converter could be a custom designed tool, or an adaptation to a previously-existing publication tool.  shows a flowchart of an embodiment of a design process using this converter at the development stage.","The process begins in the design environment at . The component to be built is designed in the design environment, rather than in a text document. Once the design is completed, including any changes necessary during preliminary reviews, a developer would access an interface to a publisher that would allow the publication of the technical design in a familiar document format, or provide a means to notify reviewers of the availability of the technical design document in the design environment.","Providing a converter that can take information from several different code files and\/or segments and generate a structured document, such as a technical design document is a capability that is not currently available. The technical design document may be generated for differing levels of code segments\/files.  show examples of a user interface for generation and routing of the technical design document and provide an example of a technical design document for one code segment identified from the integrated development environment.","This capability alters the design process discussed with regard to . In , the design occurs in the design environment and the design environment generates the necessary data for the necessary files related to the component at . This process may involve the use of a design document template that provides the document generator in the design environment to format the extracted text into an appropriate format prior to publication. The design document is then published for review.","The resulting text document undergoes review at  by reviewers who are used to reviewing technical designs in text format. If the reviewers make a change at , the process returns to the IDE for design changes and the process would repeat itself. An additional advantage here occurs with regard to changes. Generally, in software designs, changes may be documented in comment lines in the code, sometimes referred to as a change control section. When the text is extracted by the converter\/formatter at , the resulting document will have an automatically generated change control section, facilitating further reviews and assisting during the course of the build, which would occur after approval at .","Prior to discussing the changes this process brings to the building of the component, it may be useful to discuss in more detail a specific example of a document generation process.  shows a flowchart of an embodiment of the document generation process. At , the process identifies a component for review. This will generally occur at a user interface, such as where a developer selects a component from a directory of components that have been designed. The developer would then select \u2018generate document\u2019 or \u2018produce design review document,\u2019 or a similar selection to launch the document generation process.","The document generation process may then identify the files related to that component at . In the design environment, a component may have multiple files related to it, as well as the component itself distributed among several different files. The document generator could locate the files and provide them to the converter, or it could actually gather the information and provide the information to the converter at . This process may also include preformatting the file to allow the document generator to extract the information. The information would more than likely have to be formatted to a technical design review document format at , to facilitate publication\/distribution at . While using a pre-existing publisher, such as Oracle's BI Publisher, has been mentioned, it is also possible that the design environment would include its own converter utility.","Once the design environment and\/or publisher have produced the design document, it would then distribute it to reviewers automatically, such as by e-mail, fax, remote printing at the reviewer's networked printers, or merely by a notifying e-mail that the document is available for review. Returning briefly to , the review cycle could then commence within the design environment at , rather than outside the IDE and then have to enter into it after review as in .",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 5","FIGS. 6 and 7"]},"In , the component is identified at . This may involve the user making a selection from the design environment user interface, right-clicking on that component and then selecting \u2018TDD Generator\u2019 as shown in . The converter  of  then extracts metadata from necessary files into a single formatted file at , such as an XML file, AddressTemporary.xml. This file is temporary and stored in a predetermined private location for the converter.","The converter determines if there is more than one file that stores information about the shape and behavior of objects at . In the example above, the AddressEO.xml file stores the information about the shape of the object which includes Address, Street, Town, etc. The \u2018Address\u2019 entity object is also related to \u2018Person\u2019 entity object. This relationship is stored in another file PersonEOToAddressEO.xml. The converter would then merge these two files, AddressEO.xml and PersonEOToAddressEO.xml, at . This merged file, AddressTemporary.xml, is then used to populate a template at , which results in the technical design document being generated. If there is only one file that defines the shape and behavior of the object at , the merge process would be skipped. Examples of AddressEO.xml and PersonEOToAddressEO.xml, as well as the merged file AddressTemporary.xml are shown in the Appendix.","Generally, the template may be a rich text format (*.rtf) or other formatted text file. The information in the temporary file is used to populate the template. An example of a template is shown below (EOTemplate.rtf).",{"@attributes":{"id":"p-0039","num":"0038"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Physical Table Name","<Table Name added by TDD"]},{"entry":[{},"Generator>"]},{"entry":["Business Object Name","<BusinessObject added by TDD"]},{"entry":[{},"Generator>"]},{"entry":["Status <Changed|New|Obsolete>","<Text added by TDD Generator>"]},{"entry":"Package Name"},{"entry":"Description"},{"entry":["EO Base Class","\u2003\u2003\u2003\u2002<Class Name added by"]},{"entry":[{},"\u2003\u2003\u2003\u2002TDD Generator>"]},{"entry":["EO Properties","\u2003\u2003\u2003\u2002<Properties added by"]},{"entry":[{},"\u2003\u2003\u2003\u2002TDD Generator>"]},{"entry":["PL\/SQL based <Y\/N>","\u2003\u2003\u2003\u2002<Y\/N added by"]},{"entry":[{},"\u2003\u2003\u2003\u2002TDD Generator>"]},{"entry":["EO Primary Key Attribute","<Attributes added by TDD Generator>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In the templates the named place holders are created for storing information about object shape and behavior. The templates are created for each object using text structure agreed upon for documentation. The convertor uses the appropriate template depending upon the object in process.","Once the convertor creates the temporary XML file, such as AddressTemporary.xml, and identifies the template to be used, the information is copied from the XML file to the appropriate place holder attributes of the appropriate template, such as EOTemplate.rtf shown above. The copying can be done in several ways, include a proprietary coded document extraction utility or a pre-existing tool, such as BI Publisher mentioned earlier. In either case, the utility would provide interface for writing XML data to the place holders of the text document template, such as RTF or MS-Word.","An example of a generator is shown in . The convertor  extracts the metadata from the developer, such as JDeveloper for Java files. The metadata is then handed off to the metadata pre-processor  that determines if any merge files are necessary, and if so, prepares the merged files. The merged file is then passed to the publisher application program interface (API) , along with the document template . The converter then produces the formatted document at .","When the converter completes the generated text document, it can then copy it to the public area accessible to end user and also sends an e-mail if an address was provided during the TDD Generation request. In an embodiment, when the user highlights the TDD Generator in the design environment, the user is prompted for an e-mail address to which the resulting document can be sent.","By generating the technical design document from the development environment, the build process also becomes more efficient and less error-prone.  shows a flowchart of an embodiment of a build process using the technical design document from the IDE. At , the developer could \u2018check out\u2019 a selected component that has already undergone design and approval. Because the initial design and any changes occurred in the design environment, the developer only has to update any aspects of the component to prepare it for the build at .","As mentioned previously, as the developer is working directly on the design in the design environment, any code changes or additional information that comes into the process can be documented in the code itself. This could then be generated as an updated design document upon code completion at , avoiding the time-consuming and error-prone process of reconciling code changes to the original design document discussed earlier.","In addition, because the design elements are already entered into the design environment, and only have to be entered once, the previous step of having to \u2018enter\u2019 the information from the technical design document, either by manual or automatic coding, has been eliminated. This supports rapid application development and reduces the likelihood of entry errors.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 9"},"In , a computer system  is shown as being entirely self-contained, whereas it may be distributed across multiple computers. The computer system  will typically include a processor , a memory  and a user interface such as a display . A developer may employ the processor to operate the design environment and application framework in which the design is developed.","The network  to which the computer system  is attached may also have an applications server  and a middleware server  as part of the overall system architecture. All of these servers may be combined into one server, or matched up differently that as shown.","In one embodiment of operation of the overall system in , a developer designates a software component on the system  for which a design document is desired through the user interface . This designation would occur within the design environment or application framework. The processor may access the middleware server  to launch the publisher\/converter , or the processor may locate the document generation capability within the system . The document generator  would then extract the information necessary from the appropriate files, which may be distributed anywhere in the architecture, and format the information into the template  for publication. As mentioned previously, publication may involve distribution by e-mail, possible employing mail server  on the network.","Regardless of how the computing resources are distributed, embodiments of the methods described here may be contained as instructions on a computer-readable medium. When accessed by a processor, such as , the instructions would cause the computer to execute the processes discussed above within the scope of the invention.","In this manner, the design, review and build cycle has been altered because of a document generation capability having been provided from within a design environment, whether that environment involves an application framework or not.","Thus, although there has been described to this point a particular embodiment for generation of a design document from within an integrated development environment, it is not intended that such specific references be considered as limitations upon the scope of this invention except in-so-far as set forth in the following claims.",{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"322pt","align":"left"}},"thead":{"row":[{"entry":"APPENDIX"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"AddressEO.xml"},{"entry":"<AccessorAttribute"},{"entry":"\u2002Name=\u201cPerson\u201d"},{"entry":"\u2002Association=\u201coracle.apps.hcm.people.core.model.entity.association.PersonEOToAddressEO\u201d"},{"entry":"\u2002AssociationEnd=\u201coracle.apps.hcm.people.core.model.entity.association.PersonEOToAddressEO.Person\u201d"},{"entry":"AssociationOtherEnd=\u201coracle.apps.hcm.people.core.model.entity.association.PersonEOToAddressEO.Address\u201d"},{"entry":"\u2003Type=\u201coracle.apps.fnd.applcore.oaext.model.OAEntityImpl\u201d"},{"entry":"\u2003IsUpdateable=\u201ctrue\u201d\/>"},{"entry":"PersonEOToAddressEO.xml"},{"entry":"\u2002<AssociationEnd"},{"entry":"\u2003\u2002Name=\u201cPerson\u201d"},{"entry":"\u2003\u2002Cardinality=\u201c1\u201d"},{"entry":"\u2003\u2002Source=\u201ctrue\u201d"},{"entry":"\u2003\u2002Owner=\u201coracle.apps.hcm.people.core.model.entity.PersonEO\u201d"},{"entry":"\u2003\u2002LockLevel=\u201cNONE\u201d>"},{"entry":"\u2003\u2002<AttrArray Name=\u201cAttributes\u201d>"},{"entry":"\u2003\u2003\u2002<Item Value=\u201coracle.apps.hcm.people.core.model.entity.PersonEO.PersonId\u201d\/>"},{"entry":"\u2003\u2002<\/AttrArray>"},{"entry":"\u2003\u2002<DesignTime>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_minCardinality\u201d Value=\u201c1\u201d\/>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_isUpdateable\u201d Value=\u201ctrue\u201d\/>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_finderName\u201d Value=\u201cPerson\u201d\/>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_aggregation\u201d Value=\u201c0\u201d\/>"},{"entry":"\u2003\u2002<\/DesignTime>"},{"entry":"\u2002<\/AssociationEnd>"},{"entry":"\u2002<AssociationEnd"},{"entry":"\u2003\u2002Name=\u201cAddress\u201d"},{"entry":"\u2003\u2002Cardinality=\u201c\u22121\u201d"},{"entry":"\u2003\u2002Owner=\u201coracle.apps.hcm.people.core.model.entity.AddressEO\u201d"},{"entry":"\u2003\u2002HasOwner=\u201ctrue\u201d"},{"entry":"\u2003\u2002UpdateHistoryColumn=\u201ctrue\u201d>"},{"entry":"\u2003\u2002<AttrArray Name=\u201cAttributes\u201d>"},{"entry":"\u2003\u2003<Item"},{"entry":"\u2003\u2003\u2002Value=\u201coracle.apps.hcm.people.core.model.entity.AddressEO.PersonId\u201d\/>"},{"entry":"\u2003\u2003<\/AttrArray>"},{"entry":"\u2003\u2003<DesignTime>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_isUpdateable\u201d Value=\u201ctrue\u201d\/>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_finderName\u201d Value=\u201cAddress\u201d\/>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_aggregation\u201d Value=\u201c0\u201d\/>"},{"entry":"\u2003\u2003<\/DesignTime>"},{"entry":"\u2002<\/AssociationEnd>"},{"entry":"AddressTemporary.xml"},{"entry":"\u2002<AccessorAttribute"},{"entry":"\u2003Name=\u201cPerson\u201d"},{"entry":"\u2003Association=\u201coracle.apps.hcm.people.core.model.entity.association.PersanEOToAddressEO\u201d"},{"entry":"\u2003AssociationEnd=\u201coracle.apps.hcm.people.core.model.entity.association.PersonEOToAddressEO.Person\u201d"},{"entry":"\u2002<AssociationEnd"},{"entry":"\u2003\u2002Name=\u201cPerson\u201d"},{"entry":"\u2003\u2002Cardinality=\u201c1\u201d"},{"entry":"\u2003\u2002Source=\u201ctrue\u201d"},{"entry":"\u2003\u2002Owner=\u201coracle.apps.hcm.people.core.model.entity.PersonEO\u201d"},{"entry":"\u2003\u2002LockLevel=\u201cNONE\u201d>"},{"entry":"\u2003\u2002<AttrArray Name=\u201cAttributes\u201d>"},{"entry":"\u2003\u2003\u2002<Item Value=\u201coracle.apps.hcm.people.core.model.entity.PersonEO.PersonId\u201d\/>"},{"entry":"\u2003\u2002<\/AttrArray>"},{"entry":"\u2003\u2002<DesignTime>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_minCardinality\u201d Value=\u201c1\u201d\/>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_isUpdateable\u201d Value=\u201ctrue\u201d\/>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_finderName\u201d Value=\u201cPerson\u201d\/>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_aggregation\u201d Value=\u201c0\u201d\/>"},{"entry":"\u2003\u2002<\/DesignTime>"},{"entry":"<\/AssociationEnd>"},{"entry":"AssociationOtherEnd=\u201coracle.apps.hcm.people.core.model.entity.association.PersonEOToAddressEO.Address\u201d"},{"entry":"<AssociationEnd"},{"entry":"\u2003\u2002Name=\u201cAddress\u201d"},{"entry":"\u2003\u2002Cardinality=\u201c\u22121\u201d"},{"entry":"\u2003\u2002Owner=\u201coracle.apps.hcm.people.core.model.entity.AddressEO\u201d"},{"entry":"\u2003\u2002HasOwner=\u201ctrue\u201d"},{"entry":"\u2003\u2002UpdateHistoryColumn=\u201ctrue\u201d>"},{"entry":"\u2003\u2002<AttrArray Name=\u201cAttributes\u201d>"},{"entry":"\u2003\u2003<Item"},{"entry":"\u2003\u2003\u2003Value=\u201coracle.apps.hcm.people.core.model.entity.AddressEO.PersonId\u201d\/>"},{"entry":"\u2003\u2003<\/AttrArray>"},{"entry":"\u2003\u2003<DesignTime>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_isUpdateable\u201d Value=\u201ctrue\u201d\/>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_finderName\u201d Value=\u201cAddress\u201d\/>"},{"entry":"\u2003\u2003\u2002<Attr Name=\u201c_aggregation\u201d Value=\u201c0\u201d\/>"},{"entry":"\u2003\u2003<\/DesignTime>"},{"entry":"\u2002<\/AssociationEnd>"},{"entry":"\u2003Type=\u201coracle.apps.fnd.applcore.oaext.model.OAEntityImpl\u201d"},{"entry":"\u2003IsUpdateable=\u201ctrue\u201d\/>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
