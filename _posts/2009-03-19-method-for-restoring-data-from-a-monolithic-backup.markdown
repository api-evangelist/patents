---
title: Method for restoring data from a monolithic backup
abstract: A computer system and methods for restoring data from a copy of a database file. The method includes receiving a request to restore an item from the copy of the database file. The item includes a file and associated context information describing the file in a first intranet portal application environment. The method further includes retrieving a schema including the item from the copy of the database file and generating an item file comprising a copy of the file. The item file is independent of the context information. The method further includes generating a metadata file based on the context information, associating the metadata file with the item file, storing the item file and associated metadata file in a file system, and restoring the item to a second intranet portal application or to a third application via the file system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08386438&OS=08386438&RS=08386438
owner: Symantec Corporation
number: 08386438
owner_city: Mountain View
owner_country: US
publication_date: 20090319
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","This invention relates to the field of computer processing and, more particularly, to restoring electronic documents.","2. Description of the Related Art","As computer memory storage and data bandwidth increase, so does the amount and complexity of data that business and industry manage each day. A large portion of the data that must be managed in an enterprise involves content managed for a company or workgroup by a dedicated server, such as an enterprise information portal, which provides employees and customers the ability to search and access corporate information, including electronic documents, announcements, task, discussion topic, etc., that may be organized as lists of items. The enterprise information portal can serve as the single gateway to log into the corporate network and retrieve electronic documents. It is noted that enterprise information portals are typically secure and private (also known as intranet portals), but also may include external gateways for wider or even public access.","An enterprise information portal often includes a back-end database system, which may server as a document management system. The back-end database system can store data in the form of electronic documents, metadata and other content associated with the portal, such as web pages. The back-end database in an enterprise information portal can be a variant of a stand-alone database system, which has been configured for document and content management.","Because electronic documents frequently contain crucial information, the contents of electronic document servers (e.g., an enterprise information portal along with its back-end database) may be archived, or backed up, to an archival storage to prevent loss or corruption of data. In particular, a back-end database is often backed up as a single, monolithic database file, which contains all the tables, records, and indexing information for the database.","When a user wants to restore one or more items or lists to the portal, the single database file may be reinstalled as a target of the portal. Unfortunately, reinstallation of a large, monolithic database may be time-consuming and inefficient when restoration of only a small number of items or lists is desired. There may also be occasions when a user desires the portal to be able to access an item in a raw file format rather than as a portal item or list. In addition, there may be occasions when a user desires to have an application other than the portal access an electronic document, announcement, task, discussion topic, etc.","Thus it would be desirable to restore individual data objects from an archived database file without having to reinstall the database system and in a format that is accessible to either an enterprise information portal or another application.","Various embodiments of a computer system and methods for restoring data from an archived copy of a database file are disclosed. In one embodiment, the method includes receiving a request to restore an item from the archived copy of the database file. The item comprises a file and associated context information describing the file in an environment that is specific to a first intranet portal application. The method further includes retrieving a schema including the item from the archived copy of the database file and generating an item file comprising a copy of the file. The item file is independent of the context information. The method further includes generating a metadata file based on the context information, associating the metadata file with the item file, and storing the item file and the associated metadata file in a file system. The method further includes restoring the item to a second intranet portal application via the file system.","In a further embodiment, the first and second intranet portal applications are the same application. In another embodiment, the method further includes redirecting the file to a third application directly through the file system without accessing the context information. In this and other embodiments, the third application is different from the first and the second applications.","In a still further embodiment, the context information comprises one or more file attributes. For each file attribute, the metadata file includes a corresponding tagged element. In some embodiments, the element tags conform to the Collaborative Application Markup Language (CAML). In yet another embodiment, the item comprises an electronic document.","In yet another embodiment, the method further includes receiving a request to restore a list comprising two or more items from the archived copy of the database file. The list includes files all having the same file type. Each file is associated with context information describing the file in an environment that is specific to the first intranet portal application. The method further includes retrieving a list schema that includes the items from the archived copy of the database file. For each item in the list, the method further includes generating an item file comprising a copy of the file. The item file is independent of the context information. For each item in the list, the method further includes generating a metadata file based on the context information, associating the metadata file with the item file, and storing the item file and the associated metadata file in a file system. The method further includes restoring the list to a second intranet portal application via the file system.","While the invention is susceptible to various modifications and alternative forms, specific embodiments are shown by way of example in the drawings and are herein described in detail. It should be understood, however, that drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed, but on the contrary, the invention is to cover all modifications, equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["100","100","160","110","160","110","150","155","151","152","153","100"]},"Processor  is representative of any of various types of processors such as an x86 processor, a PowerPC processor or a SPARC processor. Similarly, main memory  is representative of any of various types of memory, including DRAM, SRAM, EDO RAM, Rambus RAM, etc.","I\/O interface  is operational to transfer data between processor  and\/or main memory  and one or more internal or external components such as hard disk drive , network interface  and removable storage , as desired. For example, I\/O interface  may embody a PCI bridge operable to transfer data from processor  and\/or main memory  to one or more PCI devices. I\/O interface  may additionally or alternatively provide an interface to devices of other types, such as SCSI devices and\/or Fibre channel devices.","Hard disk drive  may be a non-volatile memory such as a magnetic media. Network interface  may be any type of network adapter, such as Ethernet, fiber optic, or coaxial adapters. Removable storage  is representative of a disk drive, optical media drive, tape drive, or other type of storage media, as desired.","In addition to the depicted hardware components, computer system  may additionally include various software components. For example,  illustrates an operating system  stored in main memory . Operating system  is representative of any of a variety of specific operating systems, such as, for example, Microsoft Windows, Linux, or Sun Solaris. As such, operating system  may be operable to provide various services to the end user and provide a software framework operable to support the execution of various programs such as an Intranet Portal application , a backup application  or any of a variety of other applications represented in the illustrated embodiment by application . It is noted that the depicted software components of  may be paged in and out of main memory  in a conventional manner from a storage medium such as hard drive .","In various embodiments, intranet portal  is operable to manage and maintain a plurality of electronic documents for a plurality of system users. In one particular implementation, intranet portal  is embodied by a Microsoft SharePoint Server or a similar enterprise information portal program.","Turning now to , a block diagram of one embodiment of a backup system  is illustrated. Backup system  includes intranet portal , application , and backup application  that may be included in computer system  of . Backup system  also includes a file system  that may be stored within hard drive , removable storage , or otherwise employed by computer system  for data storage. As referred to herein, a \u201cfile system\u201d shall mean an information system which references and stores data, hierarchically organized in files and directories, in a volume created on a storage medium. The file system provides access to the data on the storage medium. Backup system  may further include a backup medium  coupled to backup application  that may be used by backup application  to store backup datasets.","In one embodiment, intranet portal  may manage and organize electronic content as items within lists. As referred to herein, an \u201citem\u201d shall mean a document, announcement, task, discussion topic, or other electronic content that is managed by an intranet portal and a \u201clist\u201d shall mean a logical group of items. In the illustrated embodiment, intranet portal  includes lists  and . List  includes items - and list  includes items -. In the illustrated embodiment, intranet portal  may also include an encapsulated version of a database  for storing lists and items. In one embodiment, intranet portal  may be configured to be the \u2018user\u2019 of database . In one specific implementation, database  is embodied by Microsoft SQL Server or a similar database server system. It is further noted that one or more client computers (not shown in ) may be coupled via network to computer system . The client systems may access the intranet portal  centrally via one or more web pages, including access to database .","Database  represents both a database program and one or more actual databases implemented therein (not shown in ). The database program refers to the executable commands, user interfaces and other program code for operating database . The databases included in database  may further include various tables, indexes, relationships, queries, stored procedures, file systems, security layers, networking interfaces, etc., which are configured to operate on a plurality of data records, also referred to as records or entries, that constitute the \u201cdatabase.\u201d In one embodiment in which database  is a relational database, the records are arranged in tables (row and column arrangement). The term \u201crecord\u201d as used herein shall refer to an entry in a database. A collection of associated records may be collectively described as a \u201ctable\u201d in the database. A record may consist of one or more fields, which may serve as indexes (or keys) to other records in other tables. For example, in a document management database, each record in a document table may represent a document (or data object) stored in the database. In one embodiment, the document (data object) may be stored in the fields of the record itself. In some embodiments, the document (data object) is represented in a record by a reference to the document, such as a memory location. In addition, database  may create and modify a mounted database file (not shown in ) for storing and accessing any given implementation of a relational database. In some embodiments, database  executes on a dedicated computing system that is configured for access by other server and client computers via a communications network.","In particular, database  is shown in  to include two functions, query  and add . These functions are shown as an example of functionality included within a relational database. In various embodiments, other kinds of functions, store procedures, or programs may be executed in a relational database. The query function  represents a function used to retrieve information from database , whereas the add function  represents a function to store information in database . It is noted that the query  and  functions may operate on data related to the relational database program or on data from any of the databases implemented therewith in a given instance of database . The query function  may be accessed via interface , while the add function is shown with access via interface . For example, as shown intranet portal  may query database  via interface  to retrieve one or more of items - in list . Further, intranet portal  may access add function  via interface  to store in database  one or more of items - of list . The interfaces  and  may include a local or remote network interface, and may also include network and\/or software driver layers for communicating with database . In one embodiment, interfaces  and  provide access to database  using SQL (Structured Query Language).","Backup system  is operable to perform a backup of content managed by intranet portal  and stored in database . In particular, backup application  may include a backup function  that may communicate with database  via interface  for selecting and retrieving content for archiving. Backup function  may generate a schema of table and index information along with the backed up contents of a database and store the generated schema to a database copy  on backup medium  via interface . As used herein, \u201cschema\u201d refers to the data structure of a database file. It is noted that the database copy  may be an identical instance of a database file (not shown in ) previously created by database . In one embodiment, database copy  is a binary file that is sequentially accessed, using standard file I\/O calls to the file system of the storage medium on which the binary file is stored. It is further noted that database copy  may be structured in block units of memory, also referred to as pages or allocation units. The schema may then be used to access or restore the contents of database copy , without using database . Backup medium  represents any of a variety of storage media including removable media, network attached storage, etc. (or any other type of archive storage). In various embodiments, interfaces  and  may include a network connection along with the necessary network and software drivers, as previously mentioned.","Additionally, backup application  may include a restore function  that can read specific documents from database copy  via interface  and add them to file system  via interface . Various embodiments of methods for restoring documents from a database file are described in a U.S. patent application Ser. No. 11\/551,018, entitled \u201cMETHOD FOR RESTORING DOCUMENTS FROM A DATABASE FILE,\u201d the entirety of which is incorporated herein by reference. The restore function may also include a means for selecting one or more documents for restoration. In one embodiment, a user interface for selecting and restoring documents is provided with the restore function  as described further below. In various embodiments, backup system  is further operable to direct specific documents that have been restored to file system  either to database  via interface  or to application  via interface  according to a process that is described further below. Backup application  may also be configured to provide other known archiving functionality, as desired, such as various features provided by the Enterprise Vault\u2122 or Backup Exec\u2122 products from Veritas.","Turning now to , one embodiment of user interface  that may be presented by backup application  for selecting specific lists or items to be restored is illustrated. Interface  may include features such as drop-down menus, a navigation bar, an address field, and so on. Within interface  are shown a \u201cLists\u201d pane  and a \u201cRestore Items\u201d pane . Within Lists pane , a hierarchy of lists and items may be seen and navigated. The illustrated hierarchy includes lists , , , , and . List  includes items -. List  includes items -. Lists and items may be selected as indicated by a highlighted background and added to Restore Items pane  via an Add button. Restore Items pane  includes a restore folder  that includes items  and  to be restored. Lists and items may be selected and removed from Restore Items pane  via a Remove button. Restore Items pane  also includes a Restore button and a Clear button. Once a set of restore items has been selected, restoration may proceed. If the Restore button is selected, the items listed in Restore Items pane  may be added to a file system where they may be accessed by various applications. If the Clear button is selected, the items listed in the Restore Items pane are removed from the pane.","It is noted that the naming conventions depicted in  (e.g., \u201cList \u201d, \u201cItem \u201d, etc.) are provided for ease of discussion. In a typical embodiment, names reflective of those used in ordinary business or other environments (e.g., Documents, Spreadsheets, Tasks, Discussion Topics, as well as user-defined list and\/or items names, etc.) may be used, as desired.","Once a set of items and\/or lists has been selected to be restored to the file system, restore function  may perform retrieval and formatting operations that enable various applications to access the retrieved lists\/items.  is a block diagram illustrating the operation of one embodiment of restore function . In the illustrated embodiment, restore function  includes a metadata generator  that is coupled to and operable to retrieve records from database copy  via interface . Metadata generator  is further coupled to and operable to store files within file system  via interface .","In the example shown, database copy  includes records , , and  that represent any number of stored database records. Each record may include one or more data objects. In the example shown, record  includes data objects -, record  includes data objects -, and record  includes data objects -. For each item that it stores in file system , metadata generator  may store an item file and a corresponding metadata file. For example, in the illustrated example, file system  includes item files , , and  and associated metadata files , , and , respectively.","In one embodiment, metadata files generated by metadata generator  may be formatted in Collaborative Application Markup Language (CAML). CAML, as used herein, refers to an XML-based markup language that includes specific groups of tags that may be used by intranet portal applications to both define and display data objects. More particularly, during operation, metadata generator may use interface  to retrieve a record that corresponds to a requested item, identifying attributes of the item that are also stored in the record. Metadata generator  may extract the item from the record and generate an item file comprising the item stored in a raw or well-known file format that may be commonly understood by various software programs such as a .txt text file, a .jpg or .gif image file, etc. In addition, metadata generator  may generate an associated CAML element with appropriate tags for each item attribute that is found. Metadata generator  may store the tagged attributes in a metadata file that is associated with the item file. Metadata generator  may then use interface  to store the item or list and associated metadata as associated files in file system .","Once an item file and an associated metadata file have been stored in file system , they may be accessed by intranet portal application , application , or another application as follows. Since the attributes that are described in an item's associated metadata file originated from an intranet portal application, they describe the intranet portal environment sufficiently to enable restoration of the item to a similar environment in an intranet portal. Thus, intranet portal  may retrieve items from file system  via interface  including accessing an item's associated metadata file to retrieve sufficient environmental information to restore the item to the intranet portal environment. Alternatively, another application such as application  may ignore an item's associated metadata file and access the file item directly via interface  in a raw or well-known file format. Accordingly, by providing an item file for each item, various types of items may be redirected from there original environment in a copy of a database used by an intranet portal to any other application environment that can access files in a file system.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 5","FIG. 3"],"b":["500","500","510","520","530","535","540","550","560","565","570","580","500","570","590","500"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 6","FIG. 3"],"b":["550","500","550","610","620","630","640","650","660","550"]},"It is noted that the foregoing flow charts are for purposes of discussion only. In alternative embodiments, the elements depicted in the flow charts may occur in a different order, or in some cases concurrently. Additionally, some of the flow chart elements may not be present in various embodiments, or may be combined with other elements. All such alternatives are contemplated.","It is further noted that the above-described embodiments may comprise software. In such an embodiment, the program instructions that implement the methods and\/or mechanisms may be conveyed or stored on a computer readable medium. Numerous types of media which are configured to store program instructions are available and include hard disks, floppy disks, CD-ROM, DVD, flash memory, Programmable ROMs (PROM), random access memory (RAM), and various other forms of volatile or non-volatile storage.","Although the embodiments above have been described in considerable detail, numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
