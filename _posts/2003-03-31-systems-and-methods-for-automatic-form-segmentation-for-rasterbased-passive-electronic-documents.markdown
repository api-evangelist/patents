---
title: Systems and methods for automatic form segmentation for raster-based passive electronic documents
abstract: Systems and methods for automatically extracting form information (document structure, elements, format, etc.) from electronic documents such as raster-based passive documents, and storing such form information in a file in accordance with a predetermined DTD (document type definition).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07305612&OS=07305612&RS=07305612
owner: Siemens Corporate Research, Inc.
number: 07305612
owner_city: Princeton
owner_country: US
publication_date: 20030331
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["The present invention generally relates systems and methods for processing electronic documents. In particular, the invention relates to systems and methods for automatically extracting form information (document structure, elements, format, etc.) from electronic documents such as raster-based passive documents, and storing such form information in a file in accordance with a predetermined DTD (document type definition). This file may be used in applications such as content cross-referencing of related multimedia documents within an electronic document publishing environment.","Document processing and understanding is important for a variety of applications such as office automation, creation of electronic manuals, online documentation and annotation etc. One of the most commonly used document formats on the WWW (World Wide Web) and otherwise is the well-known PDF (Portable Document Format) standard. In fact, a large amount of legacy documents are now available \u201conline\u201d because of scanning devices that enable scanning of legacy documents to generate electronic copies (e.g., bit map images) of such documents.","For instance, the Acrobat suite of applications from Adobe allows a user to capture a document and generate a PDF file of the document. The user can then view the PDF file with the Acrobat viewer, for example, and view the document in its original format and appearance. The Acrobat application includes a toolkit that allows a user to scan in legacy documents, or otherwise capture documents created with various desktop publishing products. This enables a user to make such documents available \u201conline\u201d as a PDF file.","Electronic documents such as scanned legacy forms, however, are typically stored in formats (e.g., bitmap representations, GIF, TIFF, etc.) that do not include important structure or format information. Without extracting and saving structure\/format information for the electronic document, however, the file can be unusable for various applications. Further, electronic files such as bit map images can be extremely large in size, which can cause problems with respect to storage and transmission bandwidth, for example, for use of such files in a networked environment.","There have been methods proposed for generating formatting information for electronic documents. For instance, one method proposed by Pavlidis, et al, in \u201c,\u201d Computer Vision, Graphics and Image Processing, 54:375-390, 1991, includes analyzing scanned bitmap images to perform classification of the document using a priori knowledge associated with the document's class. It is noteworthy that to date, there has been virtually no research performed in using postscript as a starting point for document analysis. Certainly, if a postscript file is designed for maximum raster efficiency, it can be a daunting task even to reconstruct the reading order for the document. The previous researchers may have assumed that a well structured source text would always be available to match postscript output and, consequently, working bottom-up from postscript would seldom be necessary. However, PDF documents, for example, can be generated in a variety of ways including using OCR (optical character recognition) on bit-mapped pages. It should be appreciated that the additional structure in PDF, over and above that in postscript, can be utilized towards the goal of document understanding. As explained below, the present invention utilizes knowledge of PDF structure to provide efficient methods for extracting relevant form information from PDF files.","Many conventional methods for generating formatting information relate to understanding raster images. However, being an inverse problem by definition, such task can not be performed completely without making broad assumptions (see Kasturi, et al., \u201c,\u201d, IEEE Transaction on Pattern Analysis and Machine Intelligence). Direct application of such methods on PDF documents would make little sense because such methods are not designed to make best use of the underlying structure of PDF files and would thus produce unacceptable results.","In contrast to conventional methods based on geometric layout analysis, conventional methods based on logical layout analysis have received very little attention. Some methods that use logical layout analysis perform region identification or classification in the derived geometric layout. These approaches, however, are primarily rule based (see, e.g., Krishnamoorthy, et al., \u201c,\u201d IEEE Transaction on pattern Analysis and Machine Intelligence, 15:743-747, 1993), and consequently, the final outcome depends on the dependability of the prior information and how well that is represented within the rules.","The present invention relates to systems and methods for automatically extracting form information (document structure, elements, format, etc.) from electronic documents such as raster-based passive documents, and storing such form information in a file in accordance with a predetermined DTD (document type definition).","In general, according to one aspect of the invention, an automated method is provided for extracting form information from PDF files that are created by scanning legacy documents or otherwise. Preferably, PDF document analysis comprises performing document understanding and extracting form information from text portions and\/or non-text portions (e.g., figures) that are located within the PDF document.","The extracted form information is then saved in a structured manner that follows a predefined syntax and grammar. Preferably, the extracted form information is stored as an XML (extensible Markup Language) file that follows a predefined DTD (document type definition). These XML files are referred to herein as Anchorable Information Unit (AIU) files.","Advantageously, AIU files according to the invention contain all relevant information regarding the structure, format, content, etc, of the corresponding electronic documents and, thereby significantly increase the usability of such electronic documents in various applications. For instance, AIU files make the electronic documents more intelligent for content cross-referencing between related multimedia documents within an electronic document publishing environment. The AIU files can be used to deliver customized information in a networked environment based on the requirements of the application and the user. The AIU files can be used as references to the extracted information to create automatic hyperlinks between different documents and media types.","These and other aspects, objects, features and advantages of the present invention will be described or become apparent from the following detailed description of the preferred embodiments, which is to be read in connection with the accompanying drawings.","The present invention generally relates systems and methods for processing electronic documents. In particular, the invention relates to systems and methods for extracting form information from raster-based passive documents, for example, and using such form information for applications such as content cross-referencing between related multimedia documents within an electronic document publishing environment. In general, a form information extraction process according to an embodiment of the invention comprises analyzing an electronic document (e.g., a PDF document) which is created in any fashion (e.g., scan, OCR, etc.) to perform document understanding (e.g., segment text and images) and then extract form information associated with text portion and\/or non-text portions (e.g., images) within the electronic document. The extracted form information is stored in a structured format that follows a predefined syntax and grammar (e.g., an XML or SGML file with a prespecified DTD).","It is to be understood that the systems and methods described herein in accordance with the present invention may be implemented in various forms of hardware, software, firmware, special purpose processors, or a combination thereof. Preferably, the present invention is implemented in software as an application comprising program instructions that are tangibly embodied on one or more program storage devices (e.g., magnetic floppy disk, RAM, CD Rom, ROM and flash memory), and executable by any device or machine comprising suitable architecture.","It is to be further understood that because the constituent system modules and method steps depicted in the accompanying Figures are preferably implemented in software, the actual connections between the system components (or the flow of the process steps) may differ depending upon the manner in which the application is programmed. Given the teachings herein, one of ordinary skill in the related art will be able to contemplate these and similar implementations or configurations of the present invention.","Referring now to , a block diagram illustrates a form information extraction system according to an embodiment of the invention.  further depicts a high-level flow diagram of a method for extracting form information according to one aspect of the invention. In general, an electronic document (), such as a PDF file, or any raster-based passive document, etc., is processed by a form extraction system () to generate an output file () which comprises form information (e.g., formatting, structure, fields, etc.) associated with the input document ().","In one preferred embodiment, the extracted form information is stored in an XML (eXtensible Markup Language) file that follows a predefined DTD (Document Type Definition). Such XML files are alternatively referred to herein as AIU (Anchorable Information Unit) files. The AIU files can advantageously be used to deliver customized information of the electronic document according to the requirements of the application and the user.","In the exemplary embodiment of , the form extraction system () comprises a text differentiation module () which analyzes the input file to identify areas of text and areas of non-text (e.g., images). A segmentation module () then segments the identified text areas and non-text areas. The text segments are then processed by a text processing and pattern matching module () and a form information extraction module (), to extract relevant form information from the text segments.","In addition, the non-text segments are processed by an image processing and object recognition module () and a form information extraction module (), to extract relevant form information from the non-text segments.","The extracted form information for the text segments and non-text segments are then processed by an AIU file generation module (), which creates an AIU file that represents the extracted form information of the text and non-text segments. For example, the processing of the text and non-text segments results in the extraction of important form information within portions that have been properly recognized by the system in its vector form, e.g., lines as lines, text as text, etc., as well as form information that lies within images.","In a preferred embodiment of the invention, XML is used for generating the AIU file (), which enables versatility of the present invention as applied in various applications. It is to be appreciated that an AIU file according to the invention contains all relevant form information and enables delivery of customized information based on the requirements of the application and the user. The AIU file enables the associated form to be filled just like any other form, with no difference perceived by the end user. The user can input fields as appropriate and such information is stored in the associated AIU file.","By way of example, if the user happens to be a field engineer, then when the user has to relay the information back to a control station, it is not necessary for the user to transmit the entire electronic document (e.g., PDF file). Indeed, only the AIU file needs to be beamed back, which can be very small, containing a few lines of ASCII text, for example. This is especially advantageous when the user is communicating with a mobile device. By way of further example, vital data that must be selectively passed to a specialist who is remotely located on his\/her mobile device, can easily be done by simply rendering such data from an AIU file. In other applications, the AIU file can be used for creating appropriate hyperlinks to other parts of the same document or other documents or non-similar media types.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIGS. 2 and 3"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 2","FIG. 2","FIG. 2"]},"Referring now to , initially, an electronic document file (e.g., PDF file) is input to the system (step ). In general, as a first step, all text of the input file are extracted and location information is generated for such text (step ). More specifically, the text portions are processed to extract titles and fields along with their coordinates and their style. In a preferred embodiment, this process is performed by extracting all the words and then determining bounding box information for the extracted words and a corresponding page number. The parameters of a bounding box for the extracted words are determined from the extracted coordinates.","Next, based on the bounding box information, a determination is made as to whether a given text segment (e.g., word) is part of a regular paragraph (step ), part of a heading (step ) or part of a subheading (step ). For example, in a preferred embodiment, a determination as to whether a given word is part of a regular paragraph is made by using the bounding box information. More specifically, if the bounding box for a given word is aligned horizontally with bounding boxes of several other words (e.g., the bounding boxes all appear at similar heights and are part of a much larger group), then it is likely that the word is part of the regular text for the page (as opposed to a heading, for example).","Furthermore, in a preferred embodiment, a determination as to whether a given word is part of a heading (step ) or subheading (step ) is made by using the bounding box information. More specifically, a median font size is determined for the entire text document. Then, if the font size for a given text segment is larger than the median, and if the text group is small (e.g., group does not extend to more than a single line), the given text segment will be considered part of a heading or part of a form title or subheading.","Based on the results of steps -, the text segments are logically associated with their determined context (e.g., paragraph, heading, etc.) (step ).","Another preferred step is to extract form lines (which is how most fields in a form are) and determine the coordinates of such lines (step ). There are various methods known in the art that may be used to perform line extraction and a popular method is the well-known Hough Transform method","In addition, table boxes are extracted (step ). In particular, this extraction is preferably performed by finding table boxes that may be fields where a user of the form may insert text. It is to be appreciated that these table boxes are typically well defined by the bounding lines that make up the table rows and columns.","The images that constitute the non-text portion of the document (e.g., diagrams) are extracted along with the bounding boxes which are processed in the next phase.","Accordingly, the text processing described above preferably results in extracting the form titles and fields along with their coordinates and their style.","Then, using the extracted form information (e.g., text context, lines, table boxes, etc.), a partial AIU file is created (step ) to represent such extracted form information. As explained below, this partial AIU file is combined with another partial AIU file representing extracted form information for non-text (images) portions of the input file, to thereby create an AIU file representing form information for the entire input document.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIGS. 3A and 3B","FIGS. 3A and 3B"]},"Advantageously, the present invention provides novel methods for extracting form information for non-text segments of an electronic document. What makes this problem challenging is the inability to distinguish text from polylines which constitute the underlying line drawings. Although the development of an effective general purpose algorithm that would work for all kinds of form images is very difficult, solutions can be achieved by making use of underlying structures of the concerned documents such as PDF files.","Referring now to , a method for extracting form information for non-text segments includes an initial step of receiving as input an electronic document file (e.g., PDF file) (step ) and extracting all images and associated location information for such images (step ). By way of example, in PDF files, various types of images\/objects can be encoded as black and white, gray-level and colored images. For instance, black and white images primarily are used to encode CAD drawings and forms. For such images, objects of interest may include diagrams of certain predefined objects or text segments that might refer to important information such as machine parts.","A next step in the extraction process is to determine whether an extracted image is a sampled image or an image mask (step ) By way of example, in PDF, an image is denoted XObject whose subtype is Image. The Image subtype allows a content stream to specify a sampled image or image mask. The PDF format allows for image masks, 1-bit, 2-bit, 4-bit and 8-bit grayscale images, and color images with 1, 2, 4 or 8 bits per component.","If a given object (extracted image) is determined to be an image mask (step ), then the external image is loaded (step ). Typically, an external image is embedded within the PDF file. In such a case, the reference to that image is found and then based on the type of image and the file format, different decoding techniques are used to extract the image and process it.","If a given object is determined to be a sampled image (step ), then the image pixel values are obtained and stored directly within the PDF file in a certain encoded fashion (step ). In either case, the pixel values for the image are obtained and further processed.","A next step in the extraction process is to simplify the images. More specifically, a determination is made as to whether a given image is a black and white, grayscale or color image (step ). If the given image is a colored image, the colored image is converted to a grayscale image (step ) and then converted to a black and white image using a binarization process(step ), wherein the grayscale image is converted to a black and white image by simple thresholding. If the image is determined to be a grayscale image (step ), the grayscale image will be subjected to the binarization process (step ) to convert the image to black and white. In the exemplary embodiment, all non-black and white images are preferably converted to black and white because searching for text strings in black\/white images is fast and simple and form impressions are adequately represented in black and white.","Next, all black and white images are subjected to a smearing process (step ). For example, if the number of white pixels between two black pixels is less than a predetermined number, the white pixels are converted to black.","Next, a Hough Transform is preferably used to extract information regarding lines that exist in the image (step ) and output transform image information. Continuing with reference to , the transform image information generated by the transform process (step ) is then used to determine all lines in sections of interest within the given image (step ). More specifically, this process is performed to determine all horizontal and vertical lines in the image that may correspond to form fields or tables. Lines that have more than some predetermined slope from the x and y axes (e.g., +\/\u221210 degrees) will be discarded.","Preferably, the processing of vertical and horizontal lines is performed separately. For instance, processing with respect the vertical lines preferably comprises filtering the vertical lines to determine which vertical lines fall within a ROI (region of interest) (step ). More specifically, this process is performed by determining if the starting points and ending points of the vertical lines are within the ROI. All vertical lines whose start and end points are not within the ROI are discarded.","Next, a vertical skew compensation process is performed (step ) for vertical lines whose inclination with respect to a Y-axis are either greater than \u221210 degrees or less than +10 degrees. This will compensate for skew that may exist for vertical lines in the scanned file.","The vertical lines are then filtered (step ). Preferably, the filtering process comprises discarding all vertical lines that are smaller than a few characters and discarding all lines that are too long based on some criteria. For instance, the filtering process (step ) will discard vertical lines that are deemed artifacts which are generated as a result of scanning. The remaining vertical lines are then deemed candidates for tables.","It is to be appreciated that filtering may be performed manually via an associated user interface, whereby a user can remove vertical lines that are not actually part of tables, for instance.","Next, processing with respect the horizontal lines preferably comprises filtering the horizontal lines to determine which horizontal lines fall inside a region of interest (step ). Preferably, all horizontal lines whose start and end points are not within the ROI are discarded. Next, a horizontal skew compensation process is performed (step ) for horizontal lines whose inclination with respect to the X-axis is either greater than \u221210 degrees or less than +10 degrees, for example. This will compensate for skew that may exist for horizontal lines in the scanned file.","The horizontal lines are then filtered (step ). Preferably, the filtering process comprises discarding all horizontal lines that are smaller than a few characters and discarding all horizontal lines that are too long based on certain criteria. Again, this filtering process may be used to remove horizontal lines that are deemed artifacts that result from the scanning process. The remaining lines are then deemed candidates for form fields.","As noted above, filtering may be performed manually whereby a user can remove lines that are not actual fields via an associated user interface. In addition, the user interface would enable a user to add extra fields if such fields were not already detected.","Next, determinations are made as to whether the resulting horizontal lines are part of fields or tables (step ). For instance, if a given horizontal line intersects with any other line and is large enough, the horizontal line will not be considered part of a form field (negative determination in step ), but rather part of a table (in which case the horizontal line is processed with vertical lines to determine intersections (step ) and table entries (step )). On the other hand, a given horizontal line is deemed to be part of a form field (affirmative determination in step ) if, for instance, the line does not intersect with any other line. Another step involves determining intersections between horizontal and vertical line pairs (step ). Then, table entries are determined (step ) by identifying non-overlapping boxes from the determined intersection points. As noted above, the user has the option to add\/delete form fields\/table entries (step ) using an associated user interface.","Once the form information is extracted for the non-text portion of the input file, a partial AIU file is generated (step ) representing such information. The partial AIU files of the text and non-text portions are then combined (step ) to form the AIU file that represents all the extracted form information for the text and non-text portion of the input file (step ). After processing a PDF file, for example, using the methods described herein to extract form information and create an associated AIU file, the PDF file is associated with its AIU file.","In a preferred embodiment, the resulting AIU file is preferably created using the SGML (Standard Generalized Markup Language) syntax, which is a known standard. Details on the SGML syntax can be found, for example, in the Official document at ISO. SMGL, ISO8879:1986, Text and Office Systems -Standard generalized markup language, 1986. More specifically, in a preferred embodiment, the structure of an electronic document (e.g., PDF document) is preferably defined in SGML\/XML(or extensions thereof) to capture the extracted form information. As noted above, objects that are extracted from the electronic document are referred to herein as AIUs. The information extracted from an electronic document such as a PDF document is thus represented as an instance of PDF AIU Document Type Definition (DTD). Since AIUs according to the invention are well-structured, as explained below, the AIUs can be used to perform automatic hyperlinking between corresponding PDF documents and all other types of documents.","The following is an exemplary AIU specification according to one aspect of the invention. Preferably, an AIU file is defined in a hierarchical manner as follows. At the root, there is an AIUDoc definition which encompasses the header, footer and the extracted information within the pdfDocX field.",{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"center"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["<!ELEMENT","AIUDoc","--(DocHeader, pdfDocX, DocFooter)>"]},{"entry":["<!ATTLIST","AIUDoc"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Id","CDATA","#IMPLIED"]},{"entry":[{},"Type","CDATA","#IMPLIED"]},{"entry":[{},"Name","CDATA","#IMPLIED"]},{"entry":">"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0060","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<!ELEMENT","DocHeader","--(DocType, DocDesc)>",{}]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ATTLIST","DocHeader",{},{}]},{"entry":[{},{},"Id","CDATA","#IMPLIED"]},{"entry":[{},{},"Type","CDATA","#IMPLIED"]},{"entry":[{},{},"Name","CDATA","#IMPLIED"]},{"entry":[{},{},"File","CDATA","#IMPLIED"]},{"entry":[{},">"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"The fields in the pdfDocX are preferably given by:",{"@attributes":{"id":"p-0062","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<!ELEMENT","PdfDocX","--((PdfSeg | PdfAIU)*)>",{}]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ATTLIST","PdfDocX",{},{}]},{"entry":[{},{},"Id","CDATA","#IMPLIED"]},{"entry":[{},">"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"The PdfSeg field, which characterizes sub-documents (or sections) in the document is preferably defined as:",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<!ELEMENT","PdfSeg","--(PdfSeg2 | PdfAIU)*)>",{}]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ATTLIST","PdfSeg",{},{}]},{"entry":[{},{},"Id","CDATA","#IMPLIED"]},{"entry":[{},">"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"The PdfSeg fields, which are segments in the document are preferably defined by:",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"7pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<!ELEMENT","PdfSeg2","--(pdfAIU*)>",{}]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ATTLIST","PdfSeg2",{},{}]},{"entry":[{},{},"Id","CDATA","#IMPLIED"]},{"entry":[{},{},"StartLocation","CDATA","#IMPLIED"]},{"entry":[{},{},"EndLocation","CDATA","#IMPLIED"]},{"entry":[{},">"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["<!ELEMENT","PdfAIU","--((Link)*)>",{}]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["<!ATTLIST","PdfAIU",{},{}]},{"entry":[{},"Id","CDATA","#IMPLIED"]},{"entry":[{},"Type","CDATA","#IMPLIED"]},{"entry":[{},"Name","CDATA","#IMPLIED"]},{"entry":[{},"BoundaryCoords","CDATA","#IMPLIED"]},{"entry":[{},"Page","CDATA","#IMPLIED"]},{"entry":">"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"It is to be understood that while the above example lists important attributes that are relevant to PDF AIUs according to the invention, it is to be appreciated that there can be other optional attributes that are relevant for AIUs related to other media types.","In a preferred embodiment, the PDF document is structured in a hierarchical manner. With the above exemplary AIU specification, the root represents the entire document, which is then divided into \u201csub-documents\u201d or sections. The AIU file preferably begins with a description of the type of the underlying media type (which in the exemplary embodiment is PDF). The document header preferably comprises four different fields including the underlying PDF file name, a unique Id for the whole PDF file, document type definition (which explains the context of the PDF file) and a more specific document description (which explains the content of the PDF file).","Preferably, the information extracted from a PDF file is stored within the PdflDocX structure, which has an unique Id derived from the Id of the PDF file itself. As mentioned above, the PDF is preferably organized in a hierarchical manner using sub-documents (or sections) and segments. Preferably, as indicated above the segments have the following attributes: a unique Id for each segment, and start and end locations of the segments to define the extent of these sections. It is to be understood that based on the requirements and size of the document, further attributes can be used as well.","Further, the PDF AIU preferably has a unique Id, which can be any of the following types: rectangle, ellipse and polygon. Furthermore, each AIU has an unique name. In the exemplary illustration above, the BoundaryCoords field specifies the coordinates of the underlying object of interest. The Page field specifies the page location of the underlying document. The BoundaryCoords defines the bounding box. In case of rectangles and ellipses, only the upper left and lower right corners of the bounding box are preferably defined. In case of a polygon, all the nodes are preferably defined.","The following is an example of a PDF AIU file that is based on the above AIU specification, according to one aspect of the invention.",{"@attributes":{"id":"p-0073","num":"0072"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<AIUDoc Type=\u201cPdf\u201d>"},{"entry":"<DocHeader File=\u201ctest.pdf\u201d Id=\u201cNtest\u201d>"},{"entry":"<DocType> Training<\/DocType>"},{"entry":"<DocDesc> Overview of V94.2 Gas Turbine<\/ DocDesc>"},{"entry":"<\/DocHeader>"},{"entry":"<PdfDocX Id=\u201cIDV942\u201d <PdfSeg Id=\u201csection1\u201d>"},{"entry":"<pdfSeg2 Id=\u201cIDV942P1\u201d StartLocation=\u201c0\u201d EndLocation=\u201c20\u201d>"},{"entry":"<\/PdfSeg2>"},{"entry":"<pdfSeg2 Id=\u201cIDV942P2\u201d StartLocation=\u201c21\u201d EndLocation=\u201c50\u201d>"},{"entry":"<\/pdfSeg2>"},{"entry":"<\/pdfSeg>"},{"entry":"<pdfAIU Id=\u201cPAIU01\u201d Type=\u201crectangle\u201d Name=\u201cobject1\u201d Page=\u201c2\u201d"},{"entry":"\u2003\u2003BoundaryCoords=\u201c66 100 156 240\u201d>"},{"entry":"<\/pdfAIU>"},{"entry":"<pdfAIU Id=\u201cPAIU02\u201d Type=\u201cellipse\u201d Name=\u201cObject2\u201d Page=\u201c8\u201d"},{"entry":"\u2003BoundaryCoords=\u201c100 156 240 261\u201d>"},{"entry":"<\/pdfAIU>"},{"entry":"<pdfAIU Id=\u201cPAIU05\u201d Name=\u201cpolygon\u201d Name=\u201cobject1\u201d Page=\u201c22\u201d"},{"entry":"\u2003\u2003BoundaryCoords=\u201c438 81 411 88 397 102 383 138 406 185 480 175"},{"entry":"\u2003\u2003493 122 465 89 438 81\u201d <\/pdfAIU>"},{"entry":"<\/pdfDocX>"},{"entry":"<DocFooter><\/DocFooter>"},{"entry":"<\/AIUDoc>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Thus, from the above example, an AIU file according to one aspect of the invention simply comprises a sequence of one or more parsable character data, preferably containing a string of ASCII characters and numbers.","The following section will describe methods for hyperlinking PDF Documents using the AIU files according to the invention, which enables development of hypermedia applications. Because of the widespread use and popularity of global networks such as the WWW (World Wide Web), there has been significant attention to development of hypermedia applications that enable effective and automatic creation of hypermedia. Unfortunately, current methods that are used by hypermedia authors for creating hypermedia are typically laborious and manually intensive, and such methods render the task of referencing content in documents that are not just limited to text especially labor intensive. Typically, hypermedia authors must locate areas or keywords of particular significance (hotspots) which are then appropriately hyperlinked to relevant information. In an electronic document, the user can thus retrieve associated detailed information by mouse clicking on a hotspot as the system interprets the associated hyperlinks and fetches the corresponding information. Advantageously, the present invention provides methods for developing hypermedia applications, for example, using the well-structured AIU files (e.g., PDF AIU files).","In accordance with the present invention, hyperlinking for a PDF AIU can either be performed manually or in an automatic fashion. Manual links can be inserted during the AIU outlining phase as described above. Advantageously, since the information extracted from a PDF file is stored in well-structured AIU files, the invention enables the development of methods for automatic hyperlinking to automatically hyperlink PDF AIUs with other types of documents based on predefined Hyperlink specifications.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 4","FIG. 2"],"b":["60","61","62","11","62","63","64"]},"The system () further comprises an indexing system () (which is preferably a SGML indexer), which pre-indexes the SGML-based AIU files in database (). The indexing results in dictionaries () listing every SGML element in the order the elements appear in the documentation, as well as an indexes into the dictionaries.","A hyperlinking system () uses the dictionaries () a predefined link specification () to create links using pattern matching on the dictionary files (). This process enables links to be created between PDF AIUs in database (), for example. Any suitable hyperlinking system may be used and a preferred hyperlinker is described, for example, in the article by Liu et al, \u201c,\u201d Proc. IEEE Multimedia, pp. 23-212, 1994. It is to be appreciated that the hyperlinking system () can be used with an AIU authoring system of the invention by being able to structure the PDF information using the AIU specification language as explained above.","In addition, the hyperlink system () may comprise a manager that can be used to incrementally update link rules (). For example, link manager software can use the link database () to keep track of link rule changes by using time stamps. Then, incremental hyperlinking can performed either by changing existing link specifications or by adding some extra link specifications. When adding new link specifications, the hyperlinker executes the new link specification on all documents, adds new links without destroying the old ones. When a link becomes obsolete, based on the Id of the old link, the old links are removed. A similar procedure is adopted when adding new links.","The following example describes a link specification, wherein definition and fields for links are preferably as follows:",{"@attributes":{"id":"p-0082","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<!ELEMENT","Link","--((\\#PCDATA)+)>",{}]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ATTLIST","Link",{},{}]},{"entry":[{},{},"LinkId","CDATA","#IMPLIED"]},{"entry":[{},{},"Type","CDATA","#IMPLIED"]},{"entry":[{},{},"SubType","CDATA","#IMPLIED"]},{"entry":[{},{},"Linkend","CDATA","#IMPLIED"]},{"entry":[{},{},"Book","CDATA","#IMPLIED"]},{"entry":[{},{},"Focus","CDATA","#IMPLIED"]},{"entry":[{},{},"LinkRuleId","CDATA","#IMPLIED"]},{"entry":[{},{},"Labels","CDATA","#IMPLIED"]},{"entry":[{},{},"..."]},{"entry":[{},">"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"In the above exemplary link specification, Type defines the type of the destination, e.g., if it is text or image or PDF, etc. Focus defines the text that is highlighted at the link destination. Book represents the book that the destination is part of. In one exemplary application of the invention for a hyperlinked manual, they are organized as a hierarchical tree, where each manual is represented as a book. Linkend contains the destination information. LinkId is an index to a database, if the destination points to that. LinkruleId indicates what rule created the associated link. SubType is similar to the Type definition in the AIU specification above. Labels provide a description of the link destination. It is to be appreciated that other optional attributes may be used for a link specification according to the invention.","The following example provides an instance of a hyperlinked AIU file, wherein Link elements are manually or automatically added to PDF AIUs that are to be hyperlinked to their destinations during playback.",{"@attributes":{"id":"p-0085","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<AIUDoc Type=\u201cPdf\u201d>"},{"entry":"..."},{"entry":"<PdfDocX Id=\u201cIDV942\u201d"},{"entry":"<PdfSeg Id=\u201cDocument1\u201d>"},{"entry":"\u2002..."},{"entry":"\u2002<\/PdfSeg>"},{"entry":"..."},{"entry":"<PdfAIU Id=\u201cPAIU01\u201d Type=\u201crectangle\u201d Name=\u201cobject1\u201d Page=\u201c2\u201d"},{"entry":"\u2002\u2003BoundaryCoords=\u201c66 100 156 240\u201d>"},{"entry":"..."},{"entry":"<Link Type=\u201cText\u201d Subtype=\u201cID\u201d LinkId=\u201c7001\u201d"},{"entry":"Linkend=\u201cN13509426\u201d"},{"entry":"\u2002\u2003\u2003Book=\u201c31\u201d Labels=\u201cText Document in Vol 3.1\u201d>"},{"entry":"<\/Link>"},{"entry":"<\/pdfAIU>"},{"entry":"..."},{"entry":"<pdfAIU Id=\u201cPAIU04\u201d Type=\u201cellipse\u201d Name=\u201cObject2\u201d Page=\u201c8\u201d"},{"entry":"\u2002\u2003BoundaryCoords=\u201c270 320 373\u201d>"},{"entry":"..."},{"entry":"<Link Type=\u201cText\u201d Subtype=\u201cID\u201d LinkId=\u201c7002\u201d Linkend=\u201cHL133\u201d"},{"entry":"\u2002\u2003\u2003Book=\u201c31\u201d Labels=\u201cText Document in Vol 3.1\u201d>"},{"entry":"\u2002<\/Link>"},{"entry":"<\/pdfAIU>"},{"entry":"..."},{"entry":"<\/pdfDocX>"},{"entry":"<DocFooter> <\/DocFooter>"},{"entry":"<\/AIUDoc>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"After the hyperlinking has been performed using the system\/method of , for example, it is important to be able to obtain the desired functionality while viewing the documents. In a preferred embodiment, a viewer () comprises a conventional ADOBE reader that is extended by using special purpose software to achieve interprocess communication via a link manager. In accordance with one aspect of the invention, when the viewer () is given a command to load a certain PDF file from database (), while loading the PDF file, the viewer () determines if a corresponding AIU file is available for that file. If so, the AIU file is loaded along with the original PDF file.","Then, for each entry, in the AIU file, a boundary is drawn around the object of interest. If the user clicks on any of the objects, the viewer () communicates with the link manager with the appropriate Link Id. The link manager then executes the link destination. Often within a multimedia documentation environment, this means jumping to a particular point of the text or showing a detailed image of the object in question. In that case, the SGML browser jumps to that point in the SGML document.","In summary, the systems and methods described herein for extracting form information provide many advantages over conventional methods, and enable the development of useful application. For instance, the methods and systems described herein provides a unique and efficient method for extracting and storing form information from an unstructured PDF file into a structured format. In addition, methods are provided for efficiently extract form information from PDF files which are directly created from text editors and store the extracted information in a context sensitive hierarchically structured manner. Further, methods are provided to efficiently extract form information from PDF files that are scanned and contain primarily bitmap information. Moreover, the use of XML-based AIU files to store the extracted information using a predefined grammar, enables automatic hyperlinking and context sensitive searching by direct use of the AIU files.","Although illustrative embodiments have been described herein with reference to the accompanying drawings, it is to be understood that the invention is not limited to the precise system and method embodiments described herein, and that various other changes and modifications may be affected therein by one skilled in the art without departing form the scope or spirit of the invention. All such changes and modifications are intended to be included within the scope of the invention as defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 3","i":["a ","b "],"b":"3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
