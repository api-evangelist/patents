---
title: Feedback for downlink sensitivity
abstract: A method, system, and medium are provided for managing bandwidth associated with a communication session characterized by a plurality of data packets being transmitted from a sender to a receiver. The receiver can include functions that monitor communication sessions and determine bandwidth adjustments corresponding thereto for optimizing the user's experience. The receiver can communicate feedback messages to senders that include requests for bandwidth adjustments. According to embodiments, senders can include well-known feedback listening ports through which feedback messages are received, enabling out-of-band user experience optimization.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08169904&OS=08169904&RS=08169904
owner: Sprint Communications Company L.P.
number: 08169904
owner_city: Overland Park
owner_country: US
publication_date: 20090226
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["SUMMARY","DETAILED DESCRIPTION"],"p":["Embodiments of the invention are defined by the claims below, not this summary. An overview of embodiments of the invention is provided here for that reason.","In a first embodiment, a set of computer-executable instructions provides an illustrative method of managing bandwidth corresponding to one or more communication sessions associated with a receiver on a computing device. Embodiments of the illustrative method include referencing a plurality of active applications that correspond to communication sessions and determining that a first application has focus. Bandwidth requirement amounts and bandwidth usage amounts corresponding to a first communication session can be determined and compared. In an embodiment of the illustrative method, feedback is communicated to a sender associated with the first communication session. The feedback can include, for example, a request to adjust the bandwidth associated with the first communication session.","In a second embodiment, a set of computer-executable instructions provides an illustrative method of managing a plurality of communication sessions associated with a receiver. According to embodiments of the illustrative method, a user-experience manager on the receiver can identify a plurality of active applications, where each application is associated with a communication session. Embodiments of the illustrative method further include determining that a first application has focus and a second application does not have focus. Bandwidth usage and requirement amounts corresponding to the first and second sessions can be determined and an optimizing decision can be made regarding whether to adjust one of the bandwidths. In embodiments of the illustrative method, the receiver communicates feedback to one or more senders to request adjustments of bandwidth in accordance with the optimizing decision.","According to a third embodiment, a system for use in a data packet sender is provided, which facilitates managing a bandwidth associated with sending data packets to a receiver during a communication session. Embodiments of the illustrative system include a media out port through which the sender transmits data packets, a feedback listening port through which the sender receives feedback messages from the receiver, and a bandwidth manager that adjusts data packet transmission rates, packet sizes, or the like according to the feedback.","Throughout the description of embodiments of the invention, several acronyms and shorthand notations are used to aid the understanding of certain concepts pertaining to the associated system and services. These acronyms and shorthand notations are intended to help provide an easy methodology of communicating the ideas expressed herein and are not meant to limit the scope of the invention.","Embodiments of the invention may be described in the general context of computer code or machine-useable instructions, including computer-executable instructions such as program modules, being executed by a computer or other machine, such as a personal data assistant or other handheld device. Generally, program modules including routines, programs, objects, components, data structures, etc., refer to code that perform particular tasks or implement particular abstract data types. Embodiments of the invention may be practiced in a variety of system configurations, including handheld devices, consumer electronics, general-purpose computers, more specialty computing devices, and the like. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by remote-processing devices that are linked through a communications network. Computer-readable media include both volatile and nonvolatile media, removable and nonremovable media, and contemplates media readable by a database, a switch, and various other network devices, which are non-transitory in nature. By way of example, and not limitation, computer-readable media comprise media implemented in any method or technology for storing information. Examples of stored information include computer-useable instructions, data structures, program modules, and other data representations. Media examples include, but are not limited to, information-delivery media, random access memory (RAM), read-only memory (ROM), electrically erasable programmable read-only memory (EEPROM), flash memory or other memory technology, compact disc read-only memory (CD-ROM), digital versatile discs (DVD), holographic media or other optical disc storage, magnetic cassettes, magnetic tape, magnetic disk storage, and other magnetic storage devices. These technologies can store data momentarily, temporarily, or permanently.","An exemplary operating environment in which various embodiments of the invention may be implemented is described below in order to provide a general context. Referring initially to  in particular, an exemplary operating environment for implementing embodiments of the invention is shown and designated generally as computing device . Computing device  is but one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the invention. Neither should the computing device  be interpreted as having any dependency or requirement relating to any one or combination of components illustrated.","Computing device  includes a bus  that directly or indirectly couples the following devices: memory , one or more processors , one or more presentation components , input\/output (I\/O) ports , input\/output (I\/O) components , and an illustrative power supply . Bus  represents what may be one or more busses (such as an address bus, data bus, or combination thereof). Although the various blocks of  are shown with lines for the sake of clarity, in reality, delineating various components is not so clear, and metaphorically, the lines would more accurately be gray and fuzzy. For example, one may consider a presentation component such as a display device to be an I\/O component. Also, processors have memory. We recognize that such is the nature of the art and reiterate that the diagram of  is merely illustrative of an exemplary computing device that can be used in connection with one or more embodiments of the invention. Distinction is not made between such categories as \u201cworkstation,\u201d \u201cserver,\u201d \u201claptop,\u201d \u201chandheld device,\u201d etc., as all are contemplated within the scope of  and reference to \u201ccomputing device.\u201d","Memory  includes computer-storage media in the form of volatile and\/or nonvolatile memory. The memory  may be removable, nonremovable, or a combination thereof. Exemplary memory devices include solid-state memory, hard drives, optical-disc drives, etc. Computing device  includes one or more processors  that read data from various entities such as memory  or I\/O components . Presentation component(s)  present data indications to a user or other device. Exemplary presentation components include a display device, speaker, printing component, etc.","I\/O ports  allow computing device  to be logically coupled to other devices including I\/O components , some of which may be built in. Illustrative I\/O components include a microphone, joystick, game pad, satellite dish, scanner, printer, wireless device, keyboard, pen, voice-input device, touch-input device, touch-screen device, interactive display device, or a mouse.","Turning to , an exemplary network environment  for implementing embodiments of the invention is shown. Network environment  includes a sender  and receivers  and . Sender  is an entity, network component, software module, hardware device, or the like that sends data packets to receivers  and . Although not illustrated in , it will be understood that sender  can communicate with receivers  and  through one or more networks. The networks can be any kind of suitable network such as, for example, a local area network (LAN), a wide area network (WAN), the Internet, or a combination of networks. Network environment  is merely an example of one suitable network environment and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention. Neither should network environment  be interpreted as having any dependency or requirement related to any single component or combination of components illustrated therein.","Sender  can be any kind of device, server, or software module that is capable of sending data packets to receivers  and . For example, in an embodiment, sender  is a streaming server, often referred to simply as a \u201cstreamer,\u201d that provides data services to receivers  and . For instance, in some embodiments, sender  can be a server that provides media services such as multimedia, video, audio, or the like. In some embodiments, sender  is hosted by a single machine such as, for example, a computing device . In other embodiments, sender  can be distributed across a number of machines.","In an embodiment, sender  transmits data packets to receivers  and  according to a standard transport-layer protocol such as, for example, user datagram protocol (UDP). In other embodiments, sender  can communicate with receivers  and  using other types of connectionless protocols.","With continued reference to , receivers  and  can be any suitable entity that receives data packets from sender . For example, in an embodiment, receivers  and  are clients or software modules hosted by a user's computing device. In other embodiments, each receiver  and  is a computing device such as, for example, computing device , discussed above with reference to . That is, receivers  and  can be located on any number of types of devices such as, for example, a personal computer, a laptop computer, a wireless telephone, a personal digital assistant (PDA), a cellular phone, and the like. Additionally, neither sender  nor receivers  and  should be interpreted as having any dependency or requirement related to any single component or combination of components illustrated therein.","As depicted in , sender  includes codec , media out ports , , , and , session manager , bandwidth manager , and feedback listening port . Using any number of various types of codec , sender  encodes and transmits, via media out ports , , , and  streams of data packets to receivers  and . In some embodiments, sender  may transmit data packets to only one receiver  or , while in other embodiments, sender  transmits data packets to a number of receivers , . In some embodiments, sender  transmits the same or similar data packets to each of receivers  and  and in other embodiments, sender  can transmit unique data packets to each of receivers  and . Any combination of the above and other configurations are considered to be within the ambit of embodiments of the invention.","Codec  can include encoders, decoders, encoder\/decoders, and the like and can be adapted for generating various data according to any number of various standards such as, for example, standards developed by the Moving Picture Experts Group (MPEG), Joint Photographic Experts Group (JPEG), formats such as Windows Media Video (WMV), and the like. In some embodiments, as illustrated in , sender  can include a set of codecs  for each media out port , , , and . In other embodiments, sender  can include one set of codecs  that service all of the media out ports , , , and . In further embodiments, any number of layers of codecs, filters, and other functions and components can be used by sender  during communication sessions (e.g., UDP sessions) with receivers  and . Additionally, it should be understood that media out ports , , , and  can, in some embodiments, be integrated within a single port. In other embodiments, sender  can include a variety of media out ports , , , and . Also, media out ports , , , and  are not limited to physical port connections, but can also include logical ports such as, for example, identifiers that correspond to particular functions or types of media, logically addressable data communication destinations, and the like.","Session manager  can include servers, software modules, firmware, and other components and modules that perform various functions associated with codec  and media out ports , , , and . According to various embodiments of the invention, session manager  organizes and manages communication sessions in which sender  transmits data packets to, for example, receivers  and . For instance, in some embodiments, session manager  interfaces with codec  and media out ports , , , and  to coordinate the encoding and transmitting of streams of data packets to receivers  and . The data packets can embody various types of media such as data files, email service, video, multimedia, audio conferencing, streaming radio stations, and the like. Session manager  can facilitate the retrieval of content for transmission to receivers  and . In embodiments, sender  can include storage modules, databases, and the like for maintaining content to provide to receivers  and . In other embodiments, sender  can retrieve content from other sources such as, for example, content servers, other networks, other devices, application servers, and the like.","According to embodiments of the invention, session manager  maintains information associated with communication sessions in which sender  transmits data packets to a receiver , . In some embodiments, session manager  hosts a database, table, file, or other data storage component that contains various types of data. For example, in embodiments, session manager  can record information corresponding to a communication session. Such information can include addressing information, identification information, information about bandwidth usage amounts related to various communication sessions, and the like. In one embodiment, for example, sender  is a UDP streamer and session manager  maintains socket identifiers corresponding to each of the UDP sessions in which sender  is involved. Socket identifiers can include addressing information such as, for example, internet protocol (IP) addresses, port numbers, packet transmission rates, information about packet size, and the like.","In embodiments of the invention, session manager  identifies communication sessions according to identification information, addressing information, and the like. For example, in one embodiment, session manager  uses a socket identification (e.g., an IP address corresponding to the sender  and a port number corresponding to the media out port being used in the session) to identify a communication session. In other embodiments, session manager  can use other identifiers as well. According to some embodiments, session manager  identifies communication sessions using tuples. A tuple is a discrete set of data that includes addressing information associated with the parties involved in a communication session. In embodiments, a tuple can include a socket identification corresponding to sender  and a socket identification corresponding to receiver  or . That is, for example, a tuple might include an IP address and port number associated with sender  and an IP address and port number associated with receiver  or . In various embodiments of the invention, session manager  can differentiate between communication sessions using tuples because a different media out port , , ,  is used for each session. In other embodiments, sender  may use the same media out port , , , or  for all sessions, but differentiates between sessions, because the socket identification (e.g., IP address and port number) associated with each receiver  and  will be different.","With reference to , session manager  can receive feedback information by way of feedback listening port . Feedback information is communicated to sender  by receivers  and  in the form of feedback messages. The structure of feedback messages is described in more detail below, with reference to . In various embodiments of the invention, feedback messages include data packets that contain an instruction to increase or decrease a packet transmission rate, bandwidth, or packet size associated with a particular communication session. In embodiments, the communication session is identified according to its corresponding tuple. Additionally, feedback messages can include an identifier associated with the active application on the receiver  or  that is consuming the data packet stream. In this manner, receiver  or  can send feedback messages to sender  that include an identification of the tuple corresponding to the session with which the feedback message is associated so that the sender  can determine which data packet stream to adjust.","According to various embodiments of the invention, session manager  receives feedback messages communicated from receiver  or  via feedback listening port , parses the messages, and performs operations in response to the messages. For instance, in embodiments, a feedback message can include a request to decrease or increase a bandwidth associated with a communication session. Session manager  can cooperate with bandwidth manager  to adjust the bandwidth of the session accordingly. Bandwidth manager  can include independent logic for managing bandwidth associated with a number of communication sessions. In other embodiments, bandwidth manager  includes modules for adjusting the bandwidth based on logic processed by session manager . Bandwidth manager  can adjust bandwidth in any number of ways. For example, in one embodiment, bandwidth manager  can intercept and eliminate a certain number of data packets from a stream of data packets being passed from codec  to one of the media out ports , , , or , thereby reducing the number of data packets being sent during any given period of time. In other words, bandwidth manager  can adjust the rate of data packet transmission. In some embodiments, bandwidth manager  can increase the number of data packets being sent during any period of time by retrieving more data packets from codec , by copying selected data packets, and the like.","In further embodiments, bandwidth manager  can adjust the speed at which data packets are sent or the size of data packets. For example, in some embodiments, bandwidth manager  can independently, or upon instructions from session manager , select a codec  for use in a communication session among a number of available codecs . In this manner, sender  can change the data format and\/or data packet size to satisfy bandwidth adjustment requests. In other embodiments, bandwidth manager  can include codecs, filters, and the like for affecting various types of adjustments to bandwidth associated with communication sessions.","According to various embodiments of the invention, feedback listening port  is a generic, or \u201cwell-known\u201d port, that is configured to listen for feedback messages that include an identification of the feedback listening port  in their headers. A \u201cwell-known\u201d port is a port that is established for a particular purpose, and is generally usable by any device that attempts to communicate with the sender . That is, in embodiments, feedback listening port  is configured to listen for and receive feedback messages from a number of receivers  and . In some embodiments, any receiver that sends a feedback message to sender  sends the message to feedback listening port . In other embodiments, groups or classes of receivers ,  send feedback messages to assigned feedback listening ports . For example, in an embodiment, sender  might provide several services such as \u201creal-time\u201d multiplayer games, streaming video, and voice over IP (VoIP) to receivers  and . Sender  can have a feedback listening port  for each service, one feedback listening port  for all of the services, or any other combination or configuration suitable for facilitating receipt of feedback messages from receivers  and . In other embodiments, for example where sender  is a UDP streamer, feedback listening port  can be an assigned port number that is used by any sender  that is configured to receive feedback messages from receivers  and .","With continued reference to , receiver  includes media in port  and feedback port  and, similarly, receiver  includes media in port  and feedback port . Receivers  and  receive data packets transmitted from sender  by way of media in ports  and , respectively. Media in ports  and  refer to logical port designations and are addressable by sender . In embodiments of the invention, receiver ,  can include any number of media in ports , . In some embodiments, receiver ,  can include ports associated with various types of protocols, applications, media types, and the like. Each receiver  and  have corresponding IP addresses, which may be static or dynamically assigned, and the combination of a receiver's IP address and a port number is referred to as a socket identification. Thus, as mentioned above, a communication session can be identified by a pair of socket identifiers\u2014a source socket identifier (e.g., an IP address and media out port number associated with sender ) and a destination socket identifier (e.g., an IP address and media in port number associated with receiver ).","As  further illustrates, receivers  and  each include a feedback port  and , respectively. Receivers  and  can transmit feedback messages to sender  by way of feedback ports  and . In this manner, the feedback communications described herein can be borne \u201cout-of-band\u201d with respect to the streaming content. Thus, feedback systems and methods such as those described herein can be added to existing data packet streamers, servers, and the like without affecting the functionality of the data packet streaming technology. Additionally, feedback can be generated, transmitted, received, and processed without interruption in the content stream.","Turning now to , an exemplary receiver operating environment for implementing embodiments of the invention is illustrated. As shown in , receiver  includes applications , , and ; media in ports , , and ; a user interface (UI) ; a user-experience manager ; and a feedback port . As discussed above with reference to , receiver  can include any number of types of entities such as, for example, a client module on a computing device, a computing device, a wireless communications device, a client module on a wireless communications device, and the like. Receiver  is merely an example of one suitable receiver and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention. Neither should receiver  be interpreted as having any dependency or requirement related to any single component or combination of components illustrated therein.","According to various embodiments of the invention, applications , , and  can include applications, services, programs, program modules, scripts, application programming interfaces (APIs), drivers, hardware accelerators, and the like. In embodiments, applications , , and  process data packets received by way of media in ports , , and , respectively. Applications , , and  can work with UI  to present media to a user. Accordingly, applications , , and  can communicate with, or include, codecs, filters, digital rights management modules, descramblers, and the like. Compressed or encoded media can be received via media in ports , , and  and decompressed, decoded, processed, analyzed, rendered, displayed, stored, and the like by applications , , and  and UI . In various embodiments, an application , , or  can be configured to facilitate a service such as VoIP, online gaming, video streaming, instant messaging, and the like. Other modules and components not illustrated in  can also be included in receiver  for processing content.","As illustrated in , receiver  includes a user-experience manager  that organizes and manages the functionalities, services, and operations corresponding to applications , , and . User-experience manager  can be a software module, program, application, API, or the like and can include interfaces for providing a user with access to configuration options, service selections, and the like. In embodiments, user-experience manager  includes monitors for monitoring event stacks, communications, pings, and the like associated with media in ports , , and . In this manner, user-experience manager  can keep track of the type, quality, amount, and rate of incoming data packets from sender .","According to various embodiments of the invention, user-experience manager  includes modules and components that allow monitoring of applications , , and  and UI  so that user-experience manager  can determine which services the user is most likely using, or paying direct attention to, at any given time, thereby facilitating enhancement of the user's overall experience. For example, as illustrated in , user-experience manager  includes a focus detection module , an allocation module , and a feedback message module . User-experience manager  is merely an example of one suitable management module and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention. Neither should user-experience manager  be interpreted as having any dependency or requirement related to any single component or combination of components illustrated therein.","In embodiments of the invention, user-experience manager  keeps track of which applications , ,  are active and which applications have focus. An application has focus when it is the application corresponding to the media, content, service, or function with which the user is currently interacting, viewing, experiencing, and the like. In one embodiment, user-experience manager  identifies active applications by using an API, method call, or other type of process to discover that an application , ,  is currently running on receiver . In an embodiment, user-experience manager  determines that an application has focus by referencing applications , , and  by way of an API or other similar communication conduit. In another embodiment, user-experience manager  determines whether an application has focus by referencing UI .","According to various embodiments of the invention, user-experience manager  can communicate with UI  to determine which applications , , and  have focus and which do not. It should be understood that, in some embodiments, more than one application can have focus at a given time. In embodiments, an application has focus if the application corresponds to the immediate user experience. One way to identify which applications correspond to the immediate user experience is to reference the UI  to determine what is being presented on the display device associated with receiver .","In various embodiments, receiver  includes an operating system and\/or other system software that enables a windowing environment to be presented to a user by way of UI . Turning briefly to , there is illustrated an exemplary display  that includes a number of application windows, labeled \u201c1,\u201d \u201c2,\u201d and \u201c3.\u201d Display  is oriented in an X-Y plane of a 3-dimensional space. That is, the horizontal direction in  may be represented by an X-axis and the vertical direction may be represented by a Y-axis. Accordingly, a positive Z-axis would be directed orthogonally to the X- and Y-axes. It will be understood by those having knowledge in the art that application windows can be arranged on a display such that some windows overlap others. Generally, the window that is \u201con top\u201d is the window corresponding to the application that has focus\u2014this way a user can interact with the application having focus without the experience being obscured by other application windows. As used herein, the term \u201cz-value\u201d refers to the position of an application window along the Z-axis.","Thus, as illustrated in , application window \u201c\u201d has a highest z-value , and since application window \u201c\u201d is \u201cbehind\u201d application window \u201c,\u201d application window \u201c\u201d has a lower z-value  than the z-value  of application window \u201c.\u201d In embodiments, application window \u201c\u201d may have a z-value  that is equal to, higher than, or lower than the z-value  of application window \u201c.\u201d This may occur when a user is currently interacting with more than one application. Additionally, in various embodiments, z-values can be represented by scaled numerical values assigned based on a graphical representation of the display space. In other embodiments, z-values can be represented by ranks such that each z-value indicates the position of an application window along the Z-axis with respect to the positions of other application windows on a display. Thus, for example, in , application window \u201c\u201d might have a z-value of 1, whereas application window \u201c2\u201d might have a z-value of 2. In other embodiments, other identification schemes can be used for assigning and operating on z-values corresponding to application windows rendered on a display associated with receivers.","As illustrated in , application window \u201c1\u201d corresponds to an application that has focus. Additionally, in some embodiments, application window \u201c3\u201d may also correspond to an application that has focus. In response to an input from a user, an instruction from a program, or other device or entity, focus can be changed from one application window to another. Thus, as illustrated in , application window \u201c1\u201d no longer has focus. Focus has been shifted to application window \u201c.\u201d Additionally, application window \u201c\u201d is more clearly not in focus in  as it appears to be partially obscured by application windows \u201c\u201d and \u201c.\u201d This change in focus can be affected in response to, for example, a user clicking on application window \u201c.\u201d As users multitask and switch between different application windows, the corresponding demands upon the applications shift, often many times within a short period of time. Thus, in , application window \u201c\u201d has the highest z-value , application window \u201c\u201d has the next highest z-value , and application window \u201c\u201d has the lowest z-value . By determining z-values associated with application windows, and thus applications, the user-experience manager , illustrated in , can determine which application is in focus at any given time, and can thereby allocate bandwidth capabilities appropriately so that more bandwidth is dedicated to applications having focus, thereby enhancing the user's overall experience. Embodiments of the invention allow for dynamic assessment of bandwidth usage and requirement amounts, and dynamic provisioning of bandwidth to applications based on focus (e.g., based on what the user is experiencing).","Returning to , as illustrated, user-experience manager  includes focus detection module , which can identify active applications, and can determine which of the active applications have focus at a given instant of time. In embodiments, focus detection module  provides information regarding which applications are active and which applications have focus to allocation module . According to embodiments of the invention, allocation module  determines current bandwidth usage amounts associated with applications , , and . In embodiments, allocation module  references applications , , and  using an API or other conduit to determine bandwidth requirement amounts associated with the applications , , and . In embodiments, bandwidth requirement amounts can include packet transmission rates, bandwidth measurements, and the like that are necessary for a minimal level of functionality. In other embodiments, bandwidth requirement amounts can refer to optimum bandwidths for high-quality experiences. In further embodiments, bandwidth requirement amounts can refer to ranges within which bandwidths provide for acceptable, good, or exceptional functionality. Other particularities and nuances can be included within bandwidth requirement amounts, depending on the associated services and technology, and all are considered to be within the ambit of this disclosure.","Allocation module  also can determine bandwidth usage amounts corresponding to communication sessions and\/or associated applications , , and . In embodiments, allocation module  can reference applications , , and  to determine bandwidth usage amounts. In other embodiments, allocation module  can reference monitors of media in ports , , and  to obtain bandwidth usage amounts. In embodiments, bandwidth usage amounts can include measurements of packet receipt rates, packet size, and the like, and can include discrete measurements or ranges of measurements. By comparing bandwidth usage amounts and bandwidth requirement amounts associated with active applications having focus to similar attributes associated with active applications that do not have focus, allocation module  can determine optimum bandwidth adjustment amounts for enhancement of the user's experience. That is, if application  is active and has focus and requires a large amount of bandwidth for quality functionality, allocation module  might determine that the corresponding bandwidth should be increased, while bandwidths associated with applications that do not have focus, or that have lower requirements such as, for example, applications  and  may be reduced. In this manner, a receiving device  can better take advantage of the bandwidth capabilities inherent to the device, the networks, the content providers, and the like by provisioning bandwidth between communication sessions based on the user's experience.","As further illustrated in , user-experience manager  includes feedback message module . Feedback message module  generates feedback messages that can be provided to a sender to request adjustments to bandwidth based on decisions made in the allocation module . Thus, for example, focus detection module  might determine that an application  that previously did not have focus has just been given focus. Accordingly, allocation module  can determine a bandwidth increase appropriate for application  and, potentially, bandwidth decrease amounts appropriate for applications  and . The bandwidth adjustment amounts and an identification of the corresponding communication sessions are communicated to feedback message module , which generates a feedback message corresponding to each session to be transmitted via feedback port  to the associated sender.","Turning briefly to , a schematic block diagram is shown, which depicts an illustrative implementation of an embodiment of the invention. A sender  transmits a plurality of data packets  to a receiver . Although not illustrated in , a network or a number of networks can be disposed between sender  and receiver  and any number of other components, entities, devices, or the like can be included according to various embodiments of the invention. The illustrative implementation depicted in  is merely an example of one suitable implementation of the invention and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention. Neither should the illustrative implementation depicted in  be interpreted as having any dependency or requirement related to any single component or combination of components illustrated therein.","As illustrated in , the communication session characterized by the sending of data packets  to receiver  can be identified by socket identifications. Sender  includes a first socket , SOCKET-, which identifies an IP address and port number associated with sender  and corresponding to the transmission of data packets  to receiver . Similarly, receiver  includes a second socket , SOCKET-, which identifies an IP address and port number associated with receiver  and corresponding to the receipt of data packets  from sender . Thus, the data session can be identified by the first and second sockets ,  (i.e., SOCKET- and SOCKET-).","Receiver  can include software modules, clients, or the like that monitor the communication session identified by SOCKET- and SOCKET-. If there is some decrease in quality associated with the stream of data packets  or if there is a change in the application that has focus on receiver , as discussed above with reference to , receiver  can generate a feedback message  and communicate the feedback message  to sender . In various embodiments of the invention, the feedback message  can include an instruction or request to adjust the bandwidth, rate of packet transmission, packet size, packet format, and the like. The feedback message  includes an identification of the communication session to which the feedback corresponds, so that sender  can apply the requested adjustment to the correct data packet stream.","As depicted in , sender  includes a third socket , SOCKET-. SOCKET-  can correspond to a generic, or \u201cwell-known,\u201d port number that is established for the purpose of receiving feedback messages from receivers such as receiver . Similarly, receiver  can include a fourth socket , SOCKET-, through which receiver  transmits feedback messages  to sender . In various embodiments, feedback message  can also include identifications associated with the third and fourth sockets , . For example, as illustrated in , an exemplary feedback message  is depicted in accordance with embodiments of the invention.","As shown in , feedback message  may include an IP header , a UDP header , and a payload . In various embodiments, IP header  can be configured according to any number of versions of IP such as, for example, IP version 4 (IPv4) and IP version 6 (IPv6). Similarly, UDP header  can, in other embodiments, be a header associated with some connectionless protocol other than UDP. In various embodiments, feedback message  can also include extensions, tails, modifications, and the like. Additional headers can also be included in various embodiments of the invention. Feedback message  is an example of one suitable feedback message format and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention. Neither should feedback message  be interpreted as having any dependency or requirement related to any single component or combination of components illustrated therein.","As illustrated in , IP header  includes a source IP address  and a destination IP address . For example, according to embodiments of the invention, the feedback message  depicted in  includes a source IP address  associated with receiver , because receiver  is the source of feedback message . IP header  also includes an IP address  associated with sender  because sender  is the destination of feedback message . Similarly, the UDP header  includes a source port number , which is associated with the fourth socket , SOCKET-. UDP header  also includes a destination port number , which is associated with the third socket , SOCKET-. It should be evident then, that in some embodiments, feedback message  includes socket identifications corresponding to SOCKET- and SOCKET- in header fields. This information may also be referred to as addressing information because it includes the addresses necessary for routing the feedback message .","As further illustrated in , feedback message  includes a payload . Payload  includes an application header , which identifies an application associated with receiver  that is involved in or corresponds to the communication session identified, for example, by a pair of socket identifications , . In embodiments, application header  can include a code, a name, or some other indication related to the corresponding application. Payload  also includes a session identifier . Session identifier  can be used by a sender, such as sender  illustrated in , to identify the session to which the feedback message corresponds. As illustrated, session identifier  includes a first socket identification  and a second socket identification  (e.g., SOCKET- and SOCKET-). Together, the two socket identifiers  and  identify the corresponding communication session, which, as illustrated in , comprises the transmission of data packets  from sender  to receiver  via SOCKET- and SOCKET-. In various embodiments of the invention, other codes, numbers, addressing information, or the like can be included in payload  for identifying communications sessions and other facts.","Payload  further includes an instruction  (e.g., request) for an adjustment of bandwidth corresponding to the session identified by session identifier . The instruction can be generated in any number of types of code, pseudocode, Unicode, and the like and include any number of instructions related to adjustment of bandwidth. In one example, instruction  can include data that is assigned to a variable associated with the corresponding communication session, thereby adjusting an attribute thereof relating to packet transmission rate, bandwidth, packet size, choice of codec, or the like. Additional information, instructions, and\/or requests can be included in extensions, headers, tails, and the like.","To recapitulate, we have described systems for using feedback messages to manage bandwidth associated with packet streaming sessions. Turning to , a flow diagram is provided, showing an illustrative method of managing bandwidth corresponding to one or more communication sessions associated with a receiver on a computing device. At a first illustrative step, step , a user-experience manager in a receiver references a plurality of active applications. Each application can correspond to one or more communication sessions. Data sessions, as explained above, can be characterized by the transmission of data packets from a sender to the receiver.","As further illustrated in , the user-experience manager determines whether each of the active applications has focus. More particularly, in one embodiment, as shown at step , the user-experience manager determines that a first application has focus. The first application can correspond to a first communication session with a first sender. As shown at step , the user-experience manager determines a bandwidth requirement amount associated with the first session. In various embodiments, the bandwidth requirement amount can include rates of packet transmission, packet size, and the like corresponding to a minimal user experience. In other embodiments, bandwidth requirement amounts can correspond to higher-quality user experiences.","As illustrated at step , the user-experience manager determines a bandwidth usage amount associated with the first session and compares the amount with the bandwidth requirement amount. If, as shown at step , it is determined that the bandwidth usage amount is less than the bandwidth requirement amount, the user-experience manager can reference other active applications to determine corresponding bandwidth usage and requirement amounts and to determine whether the applications have focus. Based on all of the collected data, the user-experience manager can make optimizing decisions for allocating bandwidth capabilities associated with the receiver between the various communication sessions associated with the applications. To realize the goals of the decisions made, the user-experience manager can generate a feedback message for providing feedback, requests, and instructions for bandwidth adjustments to the sender. At a final illustrative step , the receiver can provide the feedback to the first sender to request an increase in the bandwidth of the first communication session (and possibly decreases in bandwidths associated with other sessions).","Turning now to , a flow diagram showing an illustrative method of dynamically managing a plurality of communication sessions associated with a receiver is illustrated. At a first illustrative step , a user-experience manager associated with a receiver identifies a plurality of active applications. Each active application can be associated with a communication session. For example, in an embodiment, a first application can be associated with a first communication session with a first sender, and a second application can be associated with a second communication session with a second sender. As shown at step , the user-experience manager determines that a first one of the plurality of active applications has focus. Additionally, the user-experience manager determines that a second application does not have focus, as shown at step .","With reference to step  of , the user-experience manager determines a first bandwidth usage amount corresponding to the first session and, at step , the user-experience manager determines a second bandwidth usage amount corresponding to the second communication session. A bandwidth requirement amount corresponding to the first session is determined at step . In various embodiments, bandwidth requirement amounts corresponding to any and\/or all of the other communication sessions can also be determined. As shown at step , the user-experience manager determines that the bandwidth requirement amount for the first session is greater than the bandwidth usage amount associated with the first session. Then, based on information about the various applications and communication sessions, the user-experience manager computes an appropriate bandwidth adjustment amount (e.g., an increase) corresponding to the first session, as shown at step . In a final illustrative step , the receiver communicates a feedback message to the first sender. The feedback message can include an identification of the first communication session and an instruction. For example, in an embodiment, the feedback message includes a request to adjust the first bandwidth according to the appropriate bandwidth adjustment amount computed by the user-experience manager.","Many different arrangements of the various components depicted, as well as components not shown, are possible without departing from the spirit and scope of the invention. For example, in some embodiments, user-experience managers may be configured to wait for a predetermined amount of time before communicating a feedback message in response to a focus status change in relation to an application. In this way, feedback messages will be less likely to be communicated based on accidental or very temporary shifts in focus. Furthermore, embodiments of the invention have been described with the intent to be illustrative rather than restrictive. It will be understood that certain features and subcombinations are of utility and may be employed without reference to other features and subcombinations and are contemplated within the scope of the claims. Not all steps listed in the various figures need be carried out in the specific order described, unless otherwise specified."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["Illustrative embodiments of the invention are described in detail below with reference to the attached drawing figures, which are incorporated by reference herein and wherein:",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
