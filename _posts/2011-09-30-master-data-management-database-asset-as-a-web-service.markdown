---
title: Master data management database asset as a web service
abstract: A method, system, apparatus, and article of manufacture is configured to expose a database asset as a web service. A relational database management system (RDBMS) that stores information is executed in a computer system. As part of a process and framework, a series of business rules and process workflows are maintained that manage data that resides in RDBMS tables. A rule is created that contains an application programming interface definition with predefined input and output for exposing the database asset as the web service. The rule is exposed as the web service. The web service is used to invoke a database operation based on the database asset, and to output a result.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09489437&OS=09489437&RS=09489437
owner: Teradata US, Inc.
number: 09489437
owner_city: Dayton
owner_country: US
publication_date: 20110930
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This application claims the benefit under 35 U.S.C. Section 119(e) of the following commonly-assigned U.S. provisional patent application(s), which is\/are incorporated by reference herein:","Provisional Application Ser. No. 61\/388,390, filed Sep. 30, 2010, by Neelesh V. Bansode, Thomas K. Ryan, and Shashank Shekhar, entitled \u201cMaster Data Management Database Asset as a Web Service.\u201d","1. Field of the Invention","This invention relates in general to managing business critical data in a computer, and in particular, to exposing and making database assets available as a web service.","2. Description of Related Art","Master Data Management\u2122 (MDM), available from the assignee of the present invention, is an application that allows users to manage their business critical data. This critical data can originate from a myriad of sources and external feeds, but ultimately, the goal is that all of this data be consolidated into a central business data warehouse. Master Data Management\u2122 is the process and framework for maintaining a series of business rules and process workflows that will manage this data as it feeds in from multiple sources. Master Data Management\u2122 then applies these business rules and process workflows to produce \u201cmaster\u201d data, which is then fed to all consuming business processes.","A common requirement for customers in a master data management and enterprise data warehouse (EDW) context is the ability to make database assets available as a web service. Such database assets could be tables, views, stored procedures, user defined functions (UDFs), etc. Exposing such assets as a web service assists customers and implementation teams to shorten the implementation cycle and minimizes the need for additional skill sets.","A description of queries, stored procedures, and user-defined functions may be useful to better understand the invention. Certain computer languages have been developed and utilized to interact with and manipulate the data. For example, SQL (Structured Query Language) is a language used to interrogate and process (i.e., query) data in a relational database (a database in which relationships are established between files and information stored in the database). Originally developed for mainframes, most database systems designed for client\/sever environments support SQL. SQL commands can be used to interactively work with a database or can be embedded within a programming language to interface to a database. Thus, methods and functions may embed and utilize SQL commands.","Users\/programmers often need to invoke the same set of commands (or the same set of commands with different parameters) at varying times and locations of a program. In such a situation, the query may be placed into a stored procedure. A stored procedure is a batch of SQL statements stored in a database\/on a server, that may be partially or fully processed\/compiled before it is stored (or upon its first invocation). Additionally, a stored procedure is a method or procedure written in any programming language that is partially or fully processed\/compiled before it is stored (or upon its first invocation).","In addition to stored procedures, various functions and methods (referred to as UDFs) may be written by a user independently from (and without knowledge of) the underlying DBMS. UDFs often contain embedded SQL commands and additionally may be invoked or used in expressions in SQL statements.","Thus, stored procedures allow a user to group a set of SQL commands, accept parameters, and execute the SQL statements depending on those parameters. However, a UDF may be used in expressions in SQL statements.","Prior art implementations fail to provide generic implementations that expose database assets including UDFs and stored procedures as web services.","One or more embodiments of the invention provide techniques to create a generic application programming interface (API) on an application layer of a master data management system. The generic API can interact with database objects and convert the APIs to web services that can be use to expose the database objects to customers\/users.","In the following description of the preferred embodiment, reference is made to the accompanying drawings, which form a part hereof, and in which is shown by way of illustration a specific embodiment in which the invention may be practiced. It is to be understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.","Framework\/Workflow Overview","In a Master Data Management (MDM) Framework, all the master data is accessed only by MDM sanctioned data processes, also called \u201cworkflows\u201d. These workflows are central to the concept of having master data, as they become the only means by which the underlying core data can be modified. Essentially, all inbound data passes through one or more workflows that can perform the following actions on the inbound data:\n\n","Master data (sometimes referred to as reference data) are facts that define a business entity, facts that may be used to model one or more definitions or view of an entity. Entity definitions based on master data provide business consistency and data integrity when multiple systems across an organization (or beyond) identify the same entity differently (e.g., in differing data models).","Business entities modeled via master data are usually customer, product, or finance. However, master data can define any entity, like employee, supplier, location, asset, claim, policy, patient, citizen, chart of accounts, etc.","A system of record is often created or selected (also referred to as a trusted source) as a central, authenticated master copy from which entity definitions (and physical data) are propagated among all systems integrated via a Master Data Management\u2122 (MDM) framework.","The system of record can take many forms. Many users build a central database (e.g. a data warehouse or operational data store) as a hub through which master data, metadata, and physical data are synchronized. Some hubs are simply master files or tables that collect and collate records.",{"@attributes":{"id":"p-0027","num":"0031"},"figref":"FIG. 1","b":["100","100","102","104","106","106","100"]},"In the preferred embodiment, the RDBMS  includes at least one parsing engine (PE)  and one or more access module processors (AMPs) A-E storing the relational database in one or more data storage devices A-E. The parsing engine  and access module processors  may be implemented in separate machines, or may be implemented as separate or related processes in a single machine. The RDBMS  used in the preferred embodiment comprises the Teradata\u00ae RDBMS sold by Teradata\u2122 US, Inc., the assignee of the present invention, although other DBMS's could be used. In this regard, Teradata\u00ae RDBMS is a hardware and software based data warehousing and analytic application\/database system.","Generally, clients  include a graphical user interface (GUI) for operators or users of the system , wherein requests are transmitted to the interface  to access data stored in the RDBMS , and responses are received therefrom. In response to the requests, the interface  performs the functions described below, including formulating queries for the RDBMS  and processing data retrieved from the RDBMS . Moreover, the results from the functions performed by the interface  may be provided directly to clients  or may be provided to the RDBMS  for storing into the relational database. Once stored in the relational database, the results from the functions performed by the interface  may be retrieved more expeditiously from the RDBMS  via the interface . Further, each client  may have other data models .","Note that clients , interface , and RDBMS  may be implemented in separate machines, or may be implemented as separate or related processes in a single machine. Moreover, in one or more embodiments, the system  may use any number of different parallelism mechanisms to take advantage of the parallelism offered by the multiple tier architecture, the client-server structure of the client , interface , and RDBMS , and the multiple access module processors  of the RDBMS . Further, data within the relational database may be partitioned across multiple data storage devices  to provide additional parallelism.","Generally, the clients , interface , RDBMS , parsing engine , and\/or access module processors A-E comprise logic and\/or data tangibly embodied in and\/or accessible from a device, media, carrier, or signal, such as RAM, ROM, one or more of the data storage devices A-E, and\/or a remote system or device communicating with the computer system  via one or more data communications devices. The above elements - and\/or operating instructions may also be tangibly embodied in memory and\/or data communications devices, thereby making a computer program product or article of manufacture according to the invention. As such, the terms \u201carticle of manufacture,\u201d \u201cprogram storage device\u201d and \u201ccomputer program product\u201d as used herein are intended to encompass a computer program accessible from any computer readable device or media. Accordingly, such articles of manufacture are readable by a computer and embody at least one program of instructions executable by a computer to perform various method steps of the invention.","However, those skilled in the art will recognize that the exemplary environment illustrated in  is not intended to limit the present invention. Indeed, those skilled in the art will recognize that other alternative environments may be used without departing from the scope of the present invention. In addition, it should be understood that the present invention may also apply to components other than those disclosed herein.","As described above with respect to , the master data is stored in RDBMS  and is accessed by clients  via interface . Such client  access through interface  is enabled by MDM sanctioned data processes referred to as workflows (e.g., provided in interface ). Rather than being provided via interface , such workflows may be provided as part of parsing engine  or be provided by the AMPs  (or other parts of RDBMS ). Consumer applications and processes may execute on clients  and may need to receive data from the RDBMS .","Database Asset Web Service Overview","The MDM framework\/system  provides an API infrastructure (referred to as xrules) that can invoke SQLs, stored procedures, UDFs, etc. Such xrules are part of the MDM  services and can be exposed as a web service via interface . Thus, the interface  to the data (within the RDBMS ) provides a framework for utilizing web services that exposes database assets in RDBMS  to clients .","To enable the use of database assets as web services, embodiments of the invention utilize two components, a design time component\/artifact and a run time component\/artifact. The design time component\/artifact captures information about how and what database asset needs to be exposed. The runtime component\/artifact is the xrule engine for processing the request and sending the response in the required format.","Design Time Component",{"@attributes":{"id":"p-0037","num":"0041"},"figref":["FIG. 2","FIG. 1"],"b":["202","104","202"]},"For xrules, embodiments of the invention create new generic xrules for exposing the database assets as web services. These xrules also contain the API definition with pre-defined input and output. Two generic xrules are described herein\u2014execute query  and execute stored procedure .","The execute query  xrule exposes tables, views and other database objects as a web service. It contains the input definition for a query and allows users to select a database asset to be exposed as the web service. The execute query xrule  also contains a generic output definition that returns responses coming to the input query. The result set returned from the database is formatted as XML (extensible markup language) before the response is sent. The output definition can be customized to cater to the needs of the customers using this application.","The execute stored procedure xrule  is issued to execute a stored procedure present in the MDM's database . The input API definition defines parameters for the stored procedure name and input\/output parameters. The output definition is generic for sending a response returned from the database , after formatting it in XML. The output definition can be customized to cater to the needs of the consuming application.","The second part for design time component  is that of web service creation. In this step, the defined xrules - are exposed as web service operations. The access level of the xrules - is changed to public and MDM's existing web service generation mechanism is used to create the web service. Thus, after modifying the access level, a generate web service command  (from MDM's existing web service generation mechanism) is issued. This generates a WSDL (web services description language) file  (with the required operations) that is sent to the client .","Run Time Component",{"@attributes":{"id":"p-0043","num":"0047"},"figref":"FIG. 3"},"Referring again to , the design time component  receives a request to invoke a web service  from the client . Referring to , the MDM server  maintains a web service API  that is invoked by the client  using the generate web service command . The client  may utilize a web application, SOAP (simple object access protocol) user interface (a protocol that allows for bi-directional message exchange between the client  and server ), or a portal to perform any desired functions including accessing any APIs in server .","Such web service APIs  may be utilized to provide a user interface for the client  to define a query or specify a stored procedure. As used herein, these user interfaces may be referred to as manage query and\/or stored procedures components. Such components are the existing MDM user interfaces  for managing database assets (e.g., SQL statements and stored procedures) within the MDM database . Embodiments of the invention leverage these features for fulfilling the required objective. Using the manage query user interface feature, a query with parameters is defined. This query is used to select the database object. The use of the manage query functionality instead of using direct queries provide greater security so that only the desired database object is exposed.","The second component is that of invocation. Once the web service is generated and the WSDL  is sent to the client , the client  uses the WSDL  to execute the database  operation. The request for the query comes in the SOAP format and the MDM server  converts it to MDM readable format (i.e., into a generic xrule API ). The MDM readable format is then passed to the xrule engine . The xrule engine  performs the database  operation and converts the result set to XML. This XML is again wrapped into a SOAP formatted response and set back to the client .","In view of the above, MDM can provide an out of the box generic xrule  that can query any table or execute any stored procedure. In addition, a manage query feature allows the user to pre-define the query (e.g., using a web service API ) and use the generic xrule  to invoke the stored query. Similarly, a manage stored procedure user interface can be leveraged to invoke any stored procedure.","Database Asset Web Service Exemplary Implementation","Design Time Component","As described above, there are two stages for exposing database assets as a web service. In the first stage, the design time architecture can further be divided into two parts\u2014generic xrules and web service creation.","With respect to the generic xrules, two xrules, namely, execute query and execute stored procedure, are created for fulfilling the requirement of exposing database objects as web services. The execute query xrule defines a query name as an input parameter and a generic response as the output. The output for the response (e.g., to the display or to the MDM database) may include the name of the query, parameters of the query, the time taken, and the start time. In addition, if the query complies with certain conditions (e.g., utilizing a SELECT or SEL command), the query may be executed against the data in the database .","With respect to the execute stored procedure xrule, the xrule defines a stored procedure name and input\/output parameters as input variables. A generic response is set as output for the operation. Accordingly, the xrule provides for specifying the procedure name and input parameters that are used to execute the stored procedure based on the data in database  and returning any results as necessary.","The web service creation component uses the existing MDM web service framework  to expose the MDM database  assets xrules as web service operations . Initially, the access level for the xrules  (whether an execute query xrule or execute stored procedure xrule) is changed to \u201cpublic\u201d. A generate web service command  is then given. The command  generates a WSDL  with the required operations that is sent to the client .","Run Time Component","As describe above, the run time component is also divided into two parts\u2014the manage query and stored procedures component and invocation component.","The manage query and store procedures component provides that the query used for exposing the database asset is defined using the \u201cmanage query\u201d UI. A query name is given to the SQL that is used during the invocation.  illustrates a manage query graphical user interface used to define a query in accordance with one or more embodiments of the invention. As illustrated, a query name  and details  can be specified by the user. Additionally, the user has the option of specifying various parameters .","The generated WSDL along with the query details are provided to the client . The client  then uses the received information to fetch the data from the database . For the execute query xrule, the request to the database  contains a query name with the query ID (e.g., the operation for accessing tables, views, etc.). For example, the following text may be used as part of a request:",{"@attributes":{"id":"p-0057","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<bcm: executeQueryId>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<QueryName Value=\u201dQID-1\u201d\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/bcm: executeQueryId>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Such a request may be SOAP formatted.","The response may have a result set indicated a successful query execution, a number of rows in the result set, and the list of results. For example, the following indicates the result set in accordance with one or more embodiments of the invention.",{"@attributes":{"id":"p-0060","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<soap:Body>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<executeQueryIdResponse TotalRowCount=\u201d12\u201d Status=\u201dSuccess\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<SQL_RESULT>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Attribute_Set_ID Value=\u201dAS3\u201d\/>"]},{"entry":[{},"<UPDTD_LOG_TABLE_NAME Value=\u201dLT3\u201d\/>"]},{"entry":[{},"<UPDTD_PHY_TABLE_NAME Value=\u201dPT3\u201d\/>"]},{"entry":[{},"<DESCRIPTION\/>"]},{"entry":[{},"<NAME Value=\u201dAttribute Set3\u201d\/>"]},{"entry":[{},"<SYS_TARGET_ID\/>"]},{"entry":[{},"<SYS_AUTH_ID\/>"]},{"entry":[{},"<SYS_SOURCE Value=\u201dBackEnd\u201d\/>"]},{"entry":[{},"<SYS_CREATED_BY\/>"]},{"entry":[{},"<SYS_CREATION_DATE\/>"]},{"entry":[{},"<SYS_ENT_STAT\/>"]},{"entry":[{},"<SYS_LAST_MODIFIED_BY\/>"]},{"entry":[{},"<SYS_LAST_MODIFIED_DATE\/>"]},{"entry":[{},"<SYS_NC_TYPE\/>"]},{"entry":[{},"<SYS_ERR_CODE\/>"]},{"entry":[{},"<SYS_ERR_SVRTY\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<SQL_RESULT>"]},{"entry":[{},"<SQL_RESULT>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Attribute_Set_ID Value=\u201dASID5\u201d\/>"]},{"entry":[{},"<UPDTD_LOG_TABLE_NAME Value=\u201dLogTable5\u201d\/>"]},{"entry":[{},"<UPDTD_PHY_TABLE_NAME Value=\u201dPhyTable5\u201d\/>"]},{"entry":[{},"<DESCRIPTION\/>"]},{"entry":[{},"<NAME Value=\u201dAttribute Set5\u201d\/>"]},{"entry":[{},"<SYS_TARGET_ID\/>"]},{"entry":[{},"<SYS_AUTH_ID\/>"]},{"entry":[{},"<SYS_SOURCE Value=\u201dBackEnd\u201d\/>"]},{"entry":[{},"<SYS_CREATED_BY\/>"]},{"entry":[{},"<SYS_CREATION_DATE\/>"]},{"entry":[{},"<SYS_ENT_STAT\/>"]},{"entry":[{},"<SYS_LAST_MODIFIED_BY\/>"]},{"entry":[{},"<SYS_LAST_MODIFIED_DATE\/>"]},{"entry":[{},"<SYS_NC_TYPE\/>"]},{"entry":[{},"<SYS_ERR_CODE\/>"]},{"entry":[{},"<SYS_ERR_SVRTY\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<SQL_RESULT>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Such text illustrates a result set that includes the name of the result set and additional output parameters for the SQL query.","For the execute stored procedure operation, the input will contain the stored procedure name and IN\/OUT parameters. The following illustrates a portion of the exemplary input for an execute stored procedure xrule:",{"@attributes":{"id":"p-0063","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<soapenv:Body>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<bcm:executeStoredProcedure>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<STOREDPROCNAME Value=\u201dSquare_proc\u201d\/>"]},{"entry":[{},"<!\u2014Zero or more repetitions:-->"]},{"entry":[{},"<IN Name=\u201dinp1\u201d DataType=\u201dstring\u201d Value=\u201dinput val\u201d\/>"]},{"entry":[{},"<IN Name=\u201dinp2\u201d DataType=\u201dint\u201d Value=\u201d25\u201d\/>"]},{"entry":[{},"<!\u2014Zero or more repetitions:-->"]},{"entry":[{},"<OUT Name=\u201dout_param\u201d DataType=\u201dstring\u201d Value=\u201d?\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/bcm:executeStoredProcedure>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/soapenv:Body>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"As can be seen, the stored procedure name and input\/output parameters are specified. The response to the execute stored procedure operation contains the database response formatted as XML. Below is an example of a result set for an execute stored procedure operation.",{"@attributes":{"id":"p-0065","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<soap:Body>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<executeStoredProcedureResponse Status=\u201dSuccess\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<_RESULT Value=\u201dSUCCESS\u201d\/>"]},{"entry":[{},"<RESPONSE status=\u201dSuccess\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<out_param Value=\u201dSquare of 25 is 625\u201d\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/executeStoredProcedureResponse>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/soap:Body>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"As illustrated, the stored procedure \u201cSquare_proc\u201d receives input in the form of a number and outputs the square of that number. The above XML outputs a success status and a square of 25 (i.e., 625).","Logical Flow",{"@attributes":{"id":"p-0067","num":"0071"},"figref":"FIG. 5"},"At step , a relational database management system (RDBMS) is executed and stored information in a computer system.","At step , as part of a process and framework, a series of business rules and process workflows are maintained to manage data that resides in RDBMS tables.","At step , a rule is created (via the process and framework) that contains an application programming interface (API) definition with predefined input and output for exposing the database asset from the RDBMS as a web service. The rule may be created by selecting\/accepting user input that selects the database asset from the RDBMS. In one or more embodiments, the database asset may be query. The query and parameters for the query may be defined using a managed query user interface that limits exposed functionality to provide\/enhance security. In one or more embodiments, the database asset may be a stored procedure where the predefined input includes received input that defines parameters for a name of the stored procedure and input\/output parameters.","At step , the rule is exposed (via the process and framework) as the web service.","At step , the web service is utilized (via the process and framework) to invoke a database operation based on the database asset and to output a result. The output may be provided in XML. Further, the web service may be used to invoke the operation by converting a request received via the web service into a readable format (e.g., MDM format), a rule engine performing the operation using the request to obtain the result, the rule engine converting the result to a client format (e.g., XML and\/or SOAP), and outputting the client format to a client\/user.","Conclusion","This concludes the description of the preferred embodiment of the invention. The following paragraphs describe some alternative embodiments for accomplishing the same invention. In one alternative embodiment, any type of computer or configuration of computers could be used to implement the present invention.","One or more embodiments of the invention allows customers to expose any enterprise data warehouse asset as a web service without any development cycle. Standard security features can be added on top of a generic web service infrastructure to perform certificate based authentication or any other type of authorization as required.","The foregoing description of the preferred embodiment of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
