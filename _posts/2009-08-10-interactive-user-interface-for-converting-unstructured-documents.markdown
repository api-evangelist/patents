---
title: Interactive user interface for converting unstructured documents
abstract: An interactive interface facilitates the conversion of unstructured documents into XML-compliant documents. A document is parsed to identify fact items in the content of the document. A classifier associates initial labels with an identified fact items, and the fact items and associated initial labels are forwarded to a user for review and correction. An interface executing on a client computer presents the initial labels associated with fact items, and enables a user to correct the labels associated with the identified fact items. Upon receipt of corrected labels from the user, the classifier is trained to update probable associations of labels and fact items in accordance with the corrected labels. The interface enables the user to enter new labels and/or concepts for a taxonomy, and an extension to the taxonomy is automatically generated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08230332&OS=08230332&RS=08230332
owner: Compsci Resources, LLC
number: 08230332
owner_city: Alexandria
owner_country: US
publication_date: 20090810
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This is a continuation-in-part of U.S. patent application Ser. No. 12\/477,789, filed Jun. 3, 2009, which is a continuation-in-part of U.S. patent application Ser. No. 12\/041,961, filed Mar. 4, 2008, which is a continuation-in-part of U.S. patent application Ser. No. 11\/848,007, filed Aug. 30, 2007, the disclosures of which are incorporated herein by reference.","The present invention is directed to the identification, analysis and viewing of information contained in documents that conform to the extensible Markup Language (XML) standard, as well as the generation of such documents. In one embodiment, the invention can be applied to the retrieval and viewing of information contained in an extension of XML that is directed to the communication of business and financial data, known as the extensible Business Reporting Language (XBRL).","XML and various extensions thereof, such as XBRL, are becoming widely accepted as platforms for documents that are exchanged within groups. By conforming to the XML standard, a document is structured in a manner that enables the information therein to be readily identified and displayed in a desired format for viewing purposes. The XBRL standard provides a good example of this functionality in the context of business and financial data. The structure of the data is defined by metadata that is described in Taxonomies. The Taxonomies capture the definition of individual elements of financial data, as well as the relationships between them. Within a document, these elements are identified by tags. The extensible nature of the language permits users to define custom Taxonomies, allowing for potentially infinite kinds of metadata.","Significant efforts are currently underway to adopt XBRL as a replacement for paper-based financial data collection, and various electronic mechanisms for financial data reporting. In the United States, for example, the Federal Deposit Insurance Corporation (FDIC) has instituted a project in which banks and similar types of financial institutions employ a form-based template to submit data in an XBRL format. The Securities and Exchange Commission (SEC) also has a project for the disclosure of company financial performance information, utilizing XBRL. This information can then be downloaded online, by authorized entities. Other users of XBRL-formatted information include companies that disseminate financial news. The XBRL format enables the various companies to distribute the financial information on a common platform.","It can be appreciated that, as the XBRL format is adopted for these types of uses, large collections of business and financial performance information in this format will be amassed. There is a growing need for an efficient mechanism to process and retrieve stored information from such a large collection.","In the past, the typical approach for information retrieval within a large repository of documents is to pre-parse each document in its entirety, and store the parsed information in another storage medium, such as a relational database. The database, rather than the documents themselves, then functions as the source of information that is searched to obtain data responsive to a request. Such an approach significantly increases storage requirements, since each item of information is stored twice, namely in the original document and in the parsed form. In addition, the information is not immediately available as soon as the document is loaded into the repository. Rather, the need to pre-process the document, to extract each item of information and store it in the database, results in a delay before the information contained in the document can be retrieved in response to a query.","Furthermore, since the information is stored in a database for retrieval, it is not readily adaptable to changes in the source documents or taxonomies. For example, if a new extension is created for the XBRL standard, the schema of the database needs to be redesigned to accommodate the extension. Until that is completed and the data is reloaded, queries cannot be based upon the extended features of the standard.","In accordance with one aspect of the invention disclosed herein, data that is present in a tagged format, such as XML data and XBRL data, can be dynamically accessed on demand. The data is obtained directly from the original document, thereby avoiding the need to pre-parse entire documents before the information can be retrieved.","In accordance with another aspect of the invention, a user interface is provided to assist a user in converting an unstructured document into a tagged format for analysis and viewing, and to automatically generate extensions for taxonomies.","The manner in which these results are achieved is explained hereinafter with reference to exemplary embodiments illustrated in the accompanying drawings. It should be appreciated that, while specific examples are described with respect to the identification and retrieval of information in XBRL-formatted documents, the concepts described herein are not limited to that particular application. Rather, they can be employed in the context of any type of data that conforms to the XML specification and any of its extensions.","To facilitate an understanding of the concepts underlying the present invention, they are described hereinafter with reference to their implementation in the context of accessing information contained in XBRL-formatted documents. It will be appreciated, however, that this implementation is but one example of the practical applications of the invention. More generally, the invention is applicable to the retrieval of information that is presented in a format containing metadata that identifies each element of information. In particular, the invention is applicable to collections of XML-formatted documents, as well as each of the specific implementations of XML, such as XBRL. The following discussion should therefore be viewed as illustrative, without limiting the scope of the invention.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1","b":["10","12","14","12"]},"XBRL is comprised of two fundamental components, namely an instance document , which contains business and financial facts, and a collection of Taxomomies, which define metadata about these facts. Each business fact  comprises a single value. In addition to facts, an instance document might contain contexts, which define the entity to which the fact applies, the period of time to which it pertains, and\/or whether the fact is actual, projected, budgeted, etc. The instance document might also contain units that define the unit of measurement for the numeric facts that are presented within the document, as well as footnotes providing additional information about the fact, and references to Taxonomies.","The Taxonomies comprise a collection of XML Schema documents  and XLink linkbase documents . A schema defines facts by means of elements . For example, an element might indicate what type of data a fact contains, e.g., monetary, numeric, textual, etc.","A linkbase is a collection of links. A link contains locators, that provide arbitrary labels for elements, and arcs , which indicate that an element links to another element, by referencing the labels defined by the locators.","A more detailed view of the dynamic processor is illustrated in . A request for information is presented to the API , for example via a browser. This request, in the form of query, can be of a variety of different types. For example, one type of query might request a particular item of data for a number of different companies, e.g., annual revenue for all companies in the beverage industry. Another type of query may request all data for a given company of interest, or data over a particular time span, such as the ten-year revenue growth for a particular company. The API presents these requests to the dynamic processor , for example, in the form of a function call with parameters that identify the particular items of interest in the request.","The dynamic processor contains a number of pre-fabricated algorithms that are executed by an algorithm manager . Each algorithm is designed to retrieve information in response to a particular type of request. In essence, each algorithm implements a particular type of search strategy. For example, one algorithm can function to retrieve all items from a collection of documents, e.g., all data relating to a particular company. Another algorithm can function to retrieve the metadata associated with a particular fact.","The algorithms perform multi-step processes to first examine the metadata to obtain information about the semantics and structure of the instance documents, and then retrieve the appropriate metadata and data items from the XBRL documents that are responsive to the request. An illustrative example of the process performed by the algorithms is set forth hereinafter in the context of a request to provide the balance sheet of a designated entity.","In response to the request, the algorithm which corresponds to that type of request sends a query, for example using an XQuery language component , to a presentation linkbase in the Taxonomies, to locate presentation links that correspond to the sections of a balance sheet. It should be noted that, due to the extensible nature of XBRL, the Taxonomies that are applicable to a given filing could comprise multiple sets of Taxonomy documents. There could be a standard Taxonomy that is associated with the entity to which filings are presented. For instance, the SEC might establish a standard Taxonomy containing presentation links for balance sheet data. The documents for this standard Taxonomy might be stored in a known location within the repository. In addition, the entity submitting a filing could include custom Taxonomy documents with the instance documents that it submits. The custom Taxonomy constitutes an extension of the standard Taxonomy established by the SEC. In operation, the algorithm first goes to the standard Taxonomy to locate the appropriate presentation links.","Once the presentation links have been located, the algorithm then identifies concepts that are referenced by the presentation links, e.g. assets, current assets, non-current assets, etc.","Using these concepts and entities, and any other qualifiers such as specific date or date range, the algorithm employs an XML document retriever  to locate corresponding items in the instance documents.","As a result of these steps, the algorithm discovers instance documents that contain the relevant data. In some cases, these documents may point to links in custom Taxonomies. In such a situation, these custom links are merged with the standard links, to obtain additional concepts.","Using the concepts, presentation links and preferred label attributes contained in the presentation links, the algorithm locates labels for the data in a label linkbase.","The algorithm returns the labels, presentation structure and data, e.g. numbers, to the API, to be formatted and presented to the user via the browser.","As an alternative to using XQuery, the dynamic processor can employ a different technology such as SAX (Simple API for XML) or XML Pull Parsing, or a combination of such technologies, to retrieve information from the XBRL instance documents and Taxonomy documents.","The dynamic processor preferably includes a cache  for storing information that has been retrieved and returned via the API. This cached data can be used to reduce the time needed to respond to subsequent requests that seek some, or all, of the information that was returned in response to a previous request, and thereby eliminate duplicate processing. When a request is received, the algorithm manager  first checks the cache, to determine if a valid response to the request is present. If so, the response is retrieved from the cache, and immediately provided to the API in response to the request.","Examples of responses that might be displayed to a user via the browser interface are illustrated in . In this particular example, the user has requested the latest filing of an 8-K Statement at the SEC for a particular company.  illustrates the initial screen that is presented to the user. This view presents a first-level listing of the sections of the statement. Each of these section headings are identified in the metadata for the filing, e.g. presentation links.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIGS. 3B-3D","FIG. 3E"],"b":"34"},"Since the data is presented in a tabular form, it can be easily reformatted and exported into a spreadsheet document. To this end, the browser window includes a command button, or link, , to enable the user to instruct the dynamic processor to perform such an operation. Within this capability, the data can also be presented in graphs, an example of which is depicted in . As such, the user can compare data for different companies, or different divisions within a company, over a given period of time.","In addition to retrieving data items that are contained in the instance documents and providing them in a view such as those shown in , the algorithms in the dynamic processor also have the ability to calculate additional data that does not explicitly appear in the instance documents. For instance, in the example of , the instance documents might contain items for each of the individual categories of assets, as shown in the view of . However, they may not contain an item corresponding to the sum of all of the individual categories of assets, which is shown in . In this case, the appropriate algorithm refers to the linkbase  to locate an equation which defines the items that make up the requested calculation. The algorithm then sends a query requesting each of those items, and sums them to obtain the desired total.","Since the dynamic processor dynamically reads the information in the XBRL documents in response to a request, rather than being hard-coded to process a particular Taxonomy, it is capable of uploading and processing any Taxonomy on demand, including both the base Taxonomy and any extensions. Thus, as new Taxonomies are developed, or new extensions are created for current Taxonomies, the dynamic processor is able to handle them immediately, rather that requiring an upgrade or redesign to accommodate new types of information.","In this regard, a particular extension that has been developed for XBRL data is a specification known as dimensions. This specification enables the data to be further divided into desirable categories, for viewing and comparison purposes. For instance, a company structure might comprise a number of different segments, each of which has data allocated to it. When dimensions are incorporated into the Taxonomy for a company's financial documents, the dynamic processor enables the user to view the data that pertains to only one of the segments, or view the data of multiple segments in a side-by-side manner for comparison purposes. This is accomplished by reading the dimensions in the metadata of the documents.  illustrates one example of different segments for a company's financial data. Each segment has a corresponding tab on the user interface. In the illustrated example, the tab for \u201cAll Segments\u201d is highlighted, indicating that the data for the entire company is displayed for each labeled category of information. By selecting any one of the segment-specific tabs, the displayed data can be confined to only that pertaining to the selected segment of the company's financial information.","It is possible that the labels for the data contained in XBRL documents can be presented in two or more different languages. For instance, some countries have more than one national language, and it may be desirable to view that data in any one of those languages. Likewise, a multi-national corporation may publish its data in the language of each of the countries where it has a presence. In such cases, the label linkbase in the taxonomy for those types of documents can contain multiple sets of labels, one for each language associated with the document. Thus, one set of labels may be in English, another corresponding set in French, etc.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 6"},"To accommodate this situation, a further feature of the invention dynamically assesses the languages associated with documents that are responsive to a request, and provides the user with an interface to select a desired one of the available languages. The interface can be in the form of a drop-down menu. An example of such a drop-down menu is shown in , at . In this example, the data is presented with labels in the German language.","The dynamic processor provides the user with the ability to change the display language. The browser window is displayed with an interface element  labeled \u201cSelect Language\u201d. When the user clicks this element, the drop-down menu  appears. In the illustrated example, this menu contains four items, corresponding to the languages German, Spanish, English and French, in their respective native forms. This menu is dynamically generated and rendered by the dynamic processor. To do so, the dynamic processor examines the label linkbase to determine the available languages in the taxonomy, and displays each identified language as an item in the menu.","In the example of , the menu item \u201cDeutsch\u201d is highlighted, corresponding to the display of the labels in the German language.  illustrates the effect when the user selects the \u201cEnglish\u201d item from the menu. As can be seen, all of the data remains the same, but the labels associated with that data now appear in the English language. The dynamic processor achieves this result by retrieving the English-language version of the labels from the label linkbase. The change of the language can be carried out on a display-by-display basis, e.g. the summary screen may be displayed in one language, but the more detailed data for the same set of data can be displayed in another language.","The order in which the languages appear in the menu can be fixed. In accordance with another feature of the invention, the order can be varied in accordance with user preferences. For instance, the first time data responsive to a request is retrieved, it can be presented in the preferred language of the browser. This preferred language may be one of which is selected by the user when the browser is first installed.","Thereafter, the order of the languages in the menu can be revised in accordance with the selections made by the user. For instance, the most recent selection can appear at the top of the menu, followed by the next most recent selection, and so on. In the example of , the preferred language for the browser might be English, as indicated by the textual items in the browser window that are not related to the XBRL data. However, the selection for German appears at the top of the menu, since this was the most recent choice made by the user. Each time a user selects a new language, that selection can be brought to the top of the list. The dynamic processor can store the order of the selections, e.g. in the cache , and use that stored information to determine the order of appearance of the languages in the drop-down menu.","Not every label may be available in all of the indicated languages. For instance, in the example given in , the label \u201cAssets\u201d has four associated languages, but the linkbase for another label may only contain two languages, e.g. English and French. In this case, when displaying the labels, the dynamic processor steps through the languages in the order in which they are listed in the menu. For the \u201cAssets\u201d label, the German version is selected for display. In the case of the other label, German and Spanish versions are not available, so the English label is chosen, since it is the highest ranked language of those that are contained in the linkbase for that label.","In the examples depicted in , only the labels for the XBRL data are displayed in the selected language, and the remaining text in the browser window, e.g. commands, appear in the selected language of the browser. In an alternative implementation, the selection of a language can be applied to all text appearing in the browser window, to the extent supported by the language capabilities of the browser itself, rather than just the content retrieved from the XBRL documents.","In accordance with another feature of the invention, a user interface provides an interactive tool to assist users in the conversion of unstructured documents into tagged formats that can be analyzed and viewed in accordance with the foregoing concepts.  is a schematic flow diagram illustrating the general steps that are performed in the conversion process according to one embodiment of the invention. Initially, a user uploads a document from his or her local computer  to a server . The document can be unstructured, in the sense that it does not contain any tags to identify different elements of data contained within the document, e.g. it might be a plain text document, html, pdf, or other such format.","Upon receiving a command to convert the uploaded document, a converter application executing in the server  sections the document into different components. The user selects one or more sections, and the application then provides an initial classification of a section by parsing the content of the section and assigning a concept to each identifiable fact item that is detected during the parsing. The classified fact items are then forwarded to the user's local computer  for review and correction.","The converter application automatically identifies and classifies the fact items. The results of this process improve by virtue of an iterative learning process. At first, the converter application may not have any knowledge base from which to identify and\/or classify fact items, and therefore might not return any identified facts to the user or suggest a classification for them. Once the user reviews and revises, or adds, classifications to facts, the correctly labeled facts are forwarded to the converter application for training purposes. For example, the application might operate in the manner of a Bayes classifier to determine the most likely concept for an identified fact, based upon its content and its context within the document. When the corrected facts are forwarded to the converter application, it can employ the information provided by the user to update the probabilities that various respective concepts might be associated with a given fact item. The next time a document is presented for classification, the classifier can utilize these updated probabilities to provide suggested labels for at least some of the identified fact items in that document.","After the training information has been obtained from the corrected concept items provided by the user, the document is tagged with the labels that have been associated with the concept items. For instance, if a fact item has been labeled as a \u201cname\u201d, the opening tag <name> might be inserted into the result document immediately preceding the concept item, and the closing tag <\/name> might be inserted immediately after it. After the result document has been tagged, it is returned to the user, for example to be stored as an instance document.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIGS. 9","FIG. 9"],"i":["a ","b ","a"],"b":["9","42","40","40","44","46","47","48","50","47"]},"Thereafter, when the user clicks on the \u201cTag Document\u201d button , the selected sections are parsed to identify facts and determine probable matching concepts, and an interactive window  appears in the foreground, as shown in . This window has an upper pane  in which fact items from the document are presented. In the illustrated example, the pane  contains a table from the underlying document listing comprehensive income for the years 2005, 2006, and 2007.","A lower pane  of the window  provides the user with the ability to correct concepts for the fact items. In a first column , drop-down menus enable the user to select a concept from a list of suggested concepts, ordered by probability of match. These concepts are derived from analysis of the text label in the table for a group of facts. In the second column , the label for a group of facts is displayed. In the third column , the facts sharing that label are displayed. In the illustrated example, the first label is \u201cNet Income\u201d, the facts for that label are $679.3, $411.0, and $513.6 (in millions of dollars), and the suggested concept for that label is \u201cNetIncomeLoss\u201d. These fact items were automatically identified by the application when the user selected that table for processing.","In a similar manner, every other relevant fact item appearing in the upper pane  can be associated with a concept. Once the user has completed the review and correction of concepts, a \u201cTag\u201d button  on the window  is activated. This causes the corrected set of concepts, and associated fact items, to be forwarded to the server application. The user may then click the \u201cConvert Document\u201d button , to cause the application to generate an XBRL document containing the tagged facts and return it to the user.","The parsing function of the server application has two principal objectives. The first of these objectives is to correctly extract the following data from various table formats across a population of documents, e.g. HTML SEC filings, which will then be stored in an XML-compliant instance document:\n\n","The second objective of the parser is to extract meaningful text to classify a line item as accurately as possible. In this regard, the parser detects not only the label for each line item of the table, but also recognizes nested labels as a human would read them, in order to provide more accurate classification text. Nested labels can be evaluated by examining indenting structure, centering, and font weight. Additionally, the parser can identify to the classifier the nesting level of each label, to allow the classifier to better classify each line item.","The application also contains functionality to use existing unstructured documents, paired with previously-generated XBRL data, to produce training data for the automatic classification. Initially the user uploads an unstructured document and an XBRL instance document to the application. The application parses the unstructured document and sections it into different components. The user selects one or more sections, and the application parses the sections to identify facts and their associated label. For each label, the application scans the XBRL instance document for sets of tagged facts that match the collection of unstructured facts and that share the same concept. The possible concepts are then assigned to each label and presented to the user for review and correction. When the user confirms the concept associated with each label, these associations are added to the application knowledge base. Alternatively, the application may present the user with a file describing these associations, which may be added to the application knowledge base in a separate process.","Optionally, the application may employ heuristics to present the list of possible concepts in a particular order, to indicate which of many concepts seems to be a more accurate match. For instance, the application could examine concepts for which there is only one possible context match, and prioritize possible matches for other concepts that share the same context attribute value.","An interface similar to that for classifying facts in an unstructured document, such as the example illustrated in , can be used for this process. The first column  can contain a list of concepts that describe matching facts, e.g. the first row indicates there are three facts in the XBRL instance document matching 679.3, 411.0, and 513.6, all with the concept \u201cNetIncomeLoss\u201d. The user may click the \u201cTag\u201d button  to save any corrections to the identified matching concept, and then the \u201cConvert Document\u201d button  to generate a file describing these associations.","Using the foregoing features of the invention, an unstructured document, e.g., an HTML document, is converted into a structured XML-compliant document. In certain applications of these features, it may be desirable to ensure that the converted document, when rendered, appears the same as the original unstructured document. For example, the SEC requires that a rendered XBRL document have the same appearance as the original HTML filing. It may be the case, however, that one or more terms appearing in the original document, e.g., table headers, do not have corresponding concept labels in the referenced XBRL taxonomy. For example, a line item in a table of the original HTML document might be labeled \u201cCash and Cash Equivalents, whereas the closest matching concept has a label (found in the label linkbase) that reads \u201cCash\u201d. Consequently, if this label is used for rendering the XBRL document, it will not have the same appearance as the original HTML document.","In order to meet the objective of matching appearances between the two documents, the XBRL instance document should reference an extension linkbase that is based upon the original HTML document. In accordance with a further feature of the invention, a user interface is provided for the automatic generation of such an extension linkbase that is derived from the original HTML document.","In some instances, an appropriate concept for a given line item may exist in the taxonomy, but the label associated with that concept may not match the label appearing in the original unstructured document. At a first level of functionality, the server application generates an extension containing a new label for each concept. For example, referring to the user interface of , the application compares the label appearing in column  to the label of the original document, as it appears in the window pane . If these two labels do not match, the server application automatically generates a label linkbase extension document , as depicted in . Each new label in the extension is the same as the corresponding label appearing in the original HTML document. The XBRL document  being created includes a reference  to this extension document, so that, when the XBRL document is rendered, it is displayed with the same label as the original unstructured document.","In other situations, there may be no matching concept in the existing taxonomy for a particular line item of the original document. To accommodate this situation, the user interface includes a second level of functionality that enables the user to create a new concept. Referring again to the interface of , column  contains drop-down menus with suggested concepts for each of the sets of facts appearing in the original document. If none of the suggested concepts in the drop down menu is appropriate for a particular set of facts, the final entry in the menu might be an option to add a new concept. When that option is selected, a dialogue box appears. One example of such a dialogue box is illustrated in ","The first line of the dialogue box contains a label  that is obtained from the original HTML document. The second line of the dialogue box includes a text entry field  that enables the user to create the name of the concept to be associated with that label. As a default, a proposed name can be automatically inserted, by removing punctuation and spaces from the displayed label, and capitalizing the first letter of each word, as depicted in . The user then has the option to edit this suggested concept name, as desired.","Additional fields in the dialogue box have associated drop down menus  that can be used to assign attributes to the concept. In the illustrated example, these attributes include a Data Type, a Period Type and a Balance Type. The Data Type attribute has an associated drop-down menu that enables the user to select different possible values, e.g. monetary units such as \u201cDollars\u201d, per-share values or number of shares. The drop-down menu for the Period Type attribute may offer values such as Duration or Instant. The Balance Type menu may enable the user to select values such as Credit and Debit. Once the user has entered the desired name and selected the appropriate attribute values, a \u201cCreate New Concept\u201d button  is clicked. Upon clicking this button, a new extension schema file is created that contains the concept information, and this extension file is referenced by the XBRL document that is being generated.","At a third level of functionality, a presentation linkbase extension is created to ensure consistency in the structure of the original and converted documents. The original document is analyzed to determine which concepts are depicted in a table, and in what order. This analysis also notes the nesting, i.e. indenting, of concepts within the table. A presentation linkbase extension file is created to record the structure of the table. This extension is also referenced by the XBRL document, and overrides the original presentation linkbase of the Taxonomy when the XBRL document is rendered.","Another linkbase that can be created with this functionality is a calculation linkbase. This linkbase enables a value to be validated by indicating which concepts contribute to a separate concept, either positively or negatively. illustrates an example of a user interface for implementing this functionality. The example depicted in the figure pertains to an income statement. In such a statement, operating income is calculated as net income minus operating expenses. In the lower pane  of the user interface, each row corresponding to a line item of the statement includes a pair of check boxes  that are respectively associated with the addition and subtraction operands. In the figure, the user has selected the row for \u201cTotal\u201d, which represents the cumulative operating expenses, and placed a check in the box associated with the subtraction operand. The figure also shows that the user has previously checked the addition box for the \u201cNet Sales\u201d line item. A calculation linkbase is created in which these two checked items, and their associated positive or negative attributes, are linked to the \u201cOperating Income\u201d concept. When the XBRL document is rendered, the data values for these two concepts can be algebraically summed to validate the data value for the Operating Income concept.","Similar to the case of user-assisted classification, existing documents can also be employed for the automatic generation of new extension documents. The user can upload existing extension documents, which can be employed to augment the candidate list of concepts to which facts can be matched. Any uploaded label linkbase that is associated with the extension can be used to train the server application program on the extension concepts. Once the user has labeled the concepts, the application program automatically creates a new set of extension documents based upon the uploaded extension documents and the parsed unstructured document.","In one embodiment of the invention, the foregoing functions to convert an unstructured, or partially structured, document into an XML-compliant document can be implemented by the dynamic processor . In another embodiment, these functions can be performed by a different processor that has access to the Taxonomy being used to define the elements of the document. The converter application can be stored as a program on a suitable computer-readable storage medium that is accessible by the processor, e.g. a hard disk drive, an optical drive, a flash memory, etc.","The dynamic processor can be implemented within different software environments. In one implementation, the dynamic processor can reside as a stand alone desktop application, which communicates with one or more repositories of XBRL documents that are accessible via a desktop computer, for example through a network. In another implementation, the dynamic processor can be implemented as a client-server program. For instance, the components illustrated in  might reside in a server that is associated with the information repository, and the API can communicate with a client executing on a computer at a user's site, via HTML. As a third implementation, the data processor might be a web-based application executing on a server that a user accesses through a suitable browser. In each case, the software components that constitute the API and the dynamic processor are encoded on a computer-readable medium that is accessed by the supporting server and\/or desktop computer.","Thus it can be seen that the present invention provides dynamic evaluation of XML documents in response to a request, notwithstanding the diverse amount of metadata that can result with an extensible language. This is accomplished by analyzing the metadata to learn about the structure and semantics that are employed for any given set of XML documents. As a result, the need to pre-parse documents to derive data from them is avoided. Furthermore, unstructured documents can be semi-automatically converted into XML-compliant documents by means of a classifier that adaptively learns the most appropriate labels to apply to fact items in the documents.","It will be appreciated by those of ordinary skill in the art that the invention described herein can be embodied in other specific forms without departing from the spirit or essential characteristics thereof. The disclosed implementations are considered in all respects to be illustrative, and not restrictive. The scope of the invention as indicated by the appended claims, rather than the foregoing description, and all changes that come within the meaning and range of equivalents thereof are intended to be embraced therein."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 3A-3E"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIGS. 7A and 7B"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIGS. 9A and 9B"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 10B and 10C"}]},"DETDESC":[{},{}]}
