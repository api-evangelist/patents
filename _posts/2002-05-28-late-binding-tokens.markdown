---
title: Late binding tokens
abstract: A system for verifying intent in a card not present transaction is provided. The system includes a late binding token that is distributable to consumers without necessarily being bound to an account. The system also includes a client software that locates a token server configured to facilitate managing and communicating with the late binding token. The system also includes a protocol concerning how to build a verifiably secure structured proposal that carries an offer to the consumer through the client software.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08060448&OS=08060448&RS=08060448
owner: 
number: 08060448
owner_city: 
owner_country: 
publication_date: 20020528
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This invention claims priority to U.S. Provisional Patent Application Ser. No.: 60\/294,452, filed May 30, 2001.","The methods, systems, application programming interface (API), signals, and computer readable media described herein relate generally to computer programming, and more particularly to verifiably, securely, conducting card not present transactions.","Consumers use credit cards, debit cards, and other cards to make purchases. Increasingly, consumers use these cards in electronic commerce conducted, for example, over the Internet. But conventional credit cards are not ideally suited for transactions where the card is not present at the merchant's site. Thus, \u201csmart cards\u201d or integrated circuit cards are growing in popularity.","An integrated circuit card (IC) has, for example, a processor, a data input\/output port controlled by the processor to receive and output data, a random access memory (RAM), a read only memory (ROM), and a programmable data memory (e.g., EEPROM, FLASH). IC cards are available from various sources and in several configurations. IC cards can store information and thus can simplify electronic transactions. Confidential information like private keys can be maintained in a private storage area while non-confidential information, like a card identification number, can be stored in a public storage area. Thus, an electronic transaction may rely on both public and private data. The processor can be configured to access both the public and private storage areas. The private storage may only be accessible after the processor has verified a password (e.g., personal identification number (PIN)). Even though IC cards can simplify and improve electronic transactions, they can also introduce security and verifiability of intent problems into electronic transactions, especially \u201ccard not present\u201d transactions.","Numerous patents describe various computerized systems for conducting electronic transactions in multiple different environments. For example, U.S. Pat. No. 6,038,551, filed Mar. 11, 1996 and issued Mar. 14, 2000, concerns a system supporting computer implemented applications that access and manage a multi-purpose integrated circuit card. The '551 patent even discloses employing public and private keys with a smart card. However, the '551 patent, and others like it, typically bind the smart card to accounts, applications, and so on at an early time in the life cycle of the card, which limits the use of this type of IC card.","U.S. Pat. No. 6,044,349, filed Jun. 19, 1998, and issued Mar. 28, 2000, describes a portable storage medium that stores data and provides access to information from an information dissemination system. The storage medium is a smart card (e.g., IC card) that stores information like a customer name, a customer address, and various customer account data. The '349 patent describes a smart card as a small electronic device containing a re-writable memory and additional integrated circuitry. These types of smart cards typically have data downloaded to the card (e.g., a debit amount) and have that downloaded data manipulated by various applications. These types of smart cards, while potentially more secure than cash, may not provide assurances adequate to carry out a card not present transaction across an insecure medium like the Internet.","Smart cards are well known in the art. For example, U.S. Pat. No. 6,005,942, filed Mar. 24, 1998, and issued Dec. 21, 1999, describes a system that allows smart card users to securely add applications to the card during the lifetime of the card after the card has been issued. The smart cards in the '942 patent are typically credit card sized plastic cards holding a semiconductor chip that can support multiple applications. The smart card interfaces with external devices (e.g., ATMs, computers, vending machines). The semiconductor chip embedded in the smart card facilitates performing computational operations like encryption and decision making. One example of a smart card implemented as a \u201cprocessor card\u201d is illustrated in Prior Art . It is to be appreciated that a smart card can be implemented in various ways and programmed with various functionalities. In some embodiments, smart card  has a microcontroller  that includes a microprocessor , RAM , ROM , non-volatile memory , a cryptographic module , and a card reader interface . Other standard features of a microcontroller like a clock, a random number generator, control logic and so on may be present but are not illustrated.","Microprocessor  can be any of various central processing units that execute commands and control the device. RAM  can store calculated results and perform other typical RAM functions. ROM  can store fixed data, standard routines, and other typical ROM memory items. Non-volatile memory  (e.g., electronically programmable ROM (EPROM)) stores persistent information that should be maintained even when the card is not connected to a power source. This information includes, but is not limited to, a card identification number, a personal identification number, and so on. Cryptographic module  is an example of an optional hardware module on typical smart cards that performs a variety of cryptographic algorithms. Card reader interface  includes hardware and software that facilitates the smart card communicating with devices external to the smart card. Thus, the internal architecture of a smart card is well known.","The '942 patent describes a smart card being initialized with data placed on the card before the card is issued to a card user. This data can include data common to a large number of cards and a minimal amount of card unique terms like a serial number and personalization keys. The '942 patent then describes overcoming a limitation of conventional smart cards through the ability to add applications to traditional smart cards. While adding an application to a smart card after issuance increases the usefulness of the smart card, it may not facilitate using the smart card in card not present transactions in a way that provides adequate assurances that an offer was presented correctly, accepted in a verifiable manner, and transmitted securely to the offer or and\/or other third party verifiers.","Other patents, for example, U.S. Pat. No. 5,781,723, filed Jun. 3, 1996, and issued Jul. 14, 1998, concern a smart card storing information that facilitates the smart card identifying itself to other computing units. The '723 patent describes a smart card architecture that enables a smart card to identify its type and properties to computing units with which it communicates. This communication may involve interacting with a certificate authority. However, the '723 patent, like the other patents described herein, does not describe and\/or suggest functionality in a smart card that facilitates producing a level of trust in a transaction adequate to support verifiably trustworthy card not present transactions.","Some patents have attempted to address security concerns in card not present transactions. For example, U.S. Pat. No. 5,590,197, filed Apr. 4, 1995, and issued Dec. 31, 1996, concerns an electronic payment system and method that stores sensitive account information and public\/private key processing. In a conventional point of sale credit transaction, a consumer physically presents their credit card to a merchant. The merchant can then verify the authentication information (e.g., signature, photograph, fingerprint, card verification numbers). The merchant can also transmit card information to a credit card servicer for authorization. Thus, the security of the parties involved in the transaction (e.g., authorized card owner, merchant, credit card account company) depends on the merchant authenticating the card, the merchant protecting sensitive account information, the credit card servicer protecting sensitive information, and so on. In this conventional model, much sensitive information is transmitted across an insecure network like the Internet. Furthermore, in this conventional type of transaction, the consumer credit card was likely bound to a credit card account at the credit card servicer very early in the life cycle of the card. Thus, this conventional point of sale credit transaction includes significant risks for all parties involved in the transaction. These risks are exacerbated in a card not present transaction, like when a consumer purchases an item across the Internet from their home computer. The merchant cannot authenticate the card by comparing signatures or fingerprints, and an additional transmission of sensitive information is made from the consumer's computer to the merchant's computer. Financial institutions may be reluctant to accept risk of fraud loss in card not present transactions, so the merchant typically must bear greater risk.","Thus, although numerous patents and products have attempted to address problems associated with insecure card not present transactions, improvements can still be made.","The following presents a simplified summary of methods, systems, APIs, signals, and computer readable media for using late binding tokens in determining the intent of a party to an electronic transaction to facilitate providing a basic understanding of these items. This summary is not an extensive overview and is not intended to identify key or critical elements of the methods, systems, APIs, signals and computer readable media or to delineate the scope of these items. This summary provides a conceptual introduction in a simplified form as a prelude to the more detailed description that is presented later.","This application concerns systems and methods for a consumer to engage in a card not present transaction and to express their intentions to make a purchase in a manner that can be treated as a legally binding contract and\/or the logical equivalent of a card present transaction. A card not present transaction can be, for example, a consumer making a purchase over the Internet.","The application also concerns late binding tokens that help a consumer maintain their privacy while making an assertion of acceptance of an offer from a merchant. The late binding tokens facilitate creating a system that can be relied on by the merchant, a value verifier, and the consumer, without requiring that the token be bound to the consumer, merchant, or value verifier before the token is distributed. The late binding tokens described herein can be, for example, a smart card that includes a processor that can perform digital signature, hashing, and\/or encrypting functions. The smart card also stores a uniform resource locator (URL) that facilitates locating a token server from which client side software associated with the late binding token can be retrieved. The smart card can also store other information like a personal identification number (PIN). A smart card can also store a public and\/or private key to facilitate public\/private secure communications.","Certain illustrative example methods, systems, APIs, signals and computer readable media are described herein in connection with the following description and the annexed drawings. These examples are indicative, however, of but a few of the various ways in which the principles of the methods, systems, APIs, signals and computer readable media may be employed and thus are intended to be inclusive of equivalents. Other advantages and novel features may become apparent from the following detailed description when considered in conjunction with the drawings.","Example methods, systems, computer readable media, APIs, and signals are now described with reference to the drawings, where like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to facilitate thoroughly understanding the methods, systems and computer readable media. It may be evident, however, that the methods, systems, computer readable media and so on can be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to simplify description.","The systems, methods, computer readable media, APIs, and signals described herein facilitate creating a chain of trust that will increase regulator and\/or financial institution confidence that due diligence was performed in ascertaining and recording a consumer's intent with respect to a transaction. The systems and methods described herein facilitate replacing ISO X.509 certificate structures where a person's identity is bound to a card before the card is shipped. The X.509 model is employed where consumers order credit cards from companies where they already have an account or where the account will be set up on the application for the card.","An example late binding token system that facilitates increasing confidence in consumer acceptance of verifiably secure offers includes client code running on a consumer's computer arid a server specific to a particular token. The system includes late binding tokens that can be carried with the consumer to offer proof of the consumer's presence and to facilitate instilling confidence in the consumer's intention to enter into a transaction. The system also includes a protocol that specifies how to construct a verifiably secure offer. The server supplies logic (e.g., a plug in applet) for the client code that will perform further interchanges with the token. Tokens are issued with an explicit or implicit URL that facilitates locating a specific server that understands how the token operates and that can provide the client code with the logic for hashing a message and signing a message using logic contained on the late binding token. In this manner, the tokens act as a means for locating a server of a token issuer for providing logic that processes the message in the required manner (as described). When a token is linked to (e.g., inserted into) a computer running the consumer client code, late binding data will be read from the token. The late binding data can include, but is not limited to, the token's public key and\/or other identifying information. The consumer client code retrieves a URL for a token server from the token and\/or from another source. The token creates a secure enviromnent in which a hash of a message can be signed. Bindings between the token and an actual consumer and\/or an actual financial account are contained on the token server. Thus, bindings can be added, deleted, and updated as the consumer desires without displaying personal information to third parties, like merchants. Thus, the token can be distributed to consumers with no prior agreement between the consumer and any server site with which the consumer will then interact.","A message from a merchant to a consumer is displayed to the consumer in a secure client code window. The window also displays items through which the consumer can provide indicia of acceptance (e.g., I accept button(s), PIN field). When the consumer indicates acceptance of the merchant's offer, the client code hashes the message that created the secure display and provides it to the token for signing. The hash is a mathematical combination of the data in the message and the indicia of acceptance. The hash is cryptographically secure from collision with a hash from any other message. The token signs the hash. After the token signs the hash, the signed hash, the unsigned hash and other identifiers (e.g., token identifier, client identifier) are bundled together by the client code and digitally signed by the client code. This second signature attests to the consumer having been presented the offer in a secure window and having assented to the offer.","As used in this application, the term \u201ccomputer component\u201d refers to a computer-related entity, either hardware, firmware, software, a combination thereof, or software in execution. For example, a computer component can be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program and a computer. By way of illustration, both an application running on a server and the server can be computer components. One or more computer components can reside within a process and\/or thread of execution and a computer component can be localized on one computer and\/or distributed between two or more computers.","\u201cComputer communications\u201d, as used herein, refers to a communication between two or more computers and can be, for example, a network transfer, a file transfer, an applet transfer, an email, a hypertext transfer protocol (HTTP) message, a datagram, an object transfer, a binary large object (BLOB) transfer, and so on. A computer communication can occur across, for example, a wireless system (e.g., IEEE 802.11), an Ethernet system (e.g., IEEE 802.3), a token ring system (e.g., IEEE 802.5), a local area network (LAN), a wide area network (WAN), a point-to-point system, a circuit switching system, a packet switching system, and so on.","\u201cSignal\u201d, as used herein, includes but is not limited to one or more electrical or optical signals, analog or digital, one or more computer instructions, a bit or bit stream, or the like.","\u201cSoftware\u201d, as used herein, includes but is not limited to, one or more computer readable and\/or executable instructions that cause a computer or other electronic device to perform functions, actions and\/or behave in a desired manner. The instructions may be embodied in various forms like routines, algorithms, modules, methods, threads, and\/or programs. Software may also be implemented in a variety of executable and\/or loadable forms including, but not limited to, a stand-alone program, a function call (local and\/or remote), a servelet, an applet, instructions stored in a memory, part of an operating system or browser, and the like. It is to be appreciated that the computer readable and\/or executable instructions can be located in one computer component and\/or distributed between two or more communicating, co-operating, and\/or parallel processing computer components and thus can be loaded and\/or executed in serial, parallel, massively parallel and other manners.","\u201cPurchase\u201d, as used herein, includes but is not limited to contracts for a consumer to accept goods or services from a merchant, or other consumer contracts that commit the consumer to financial transactions, for example, paying taxes, moving funds between accounts, or transactions in stocks, bonds, or related securities.","\u201cMerchant\u201d, as used herein, includes but is not limited to vendors of goods and services as well as governmental bodies, or financial institutions, including securities brokers, banks, and insurance companies.","\u201cFunds\u201d, as used herein, refers to consideration given by a consumer to a merchant in exchange for goods or services delivered. Funds include, but are not limited to, money on account of the consumer at a financial institution, credit given to the consumer by a financial institution, frequent flyer miles, or frequent buyer credits held on account of the consumer.","\u201cToken\u201d, as used herein, refers to a logic together with the means to execute that logic that is held by a consumer. Tokens include, but are not limited to, smart cards with an embedded microprocessor, special logic supplied within a consumer's computer, or a general purpose computer with a logic run by the consumer.","\u201cLogic\u201d, as used herein, includes but is not limited to hardware, firmware, software and\/or combinations of each to perform a function(s) or an action(s). For example, based on a desired application or needs, logic may include a software controlled microprocessor, discrete logic such as an application specific integrated circuit (ASIC), or other programmed logic device. Logic may also be fully embodied as software.","A \u201chash\u201d is a number generated from a string of text. A hash is substantially smaller than the hashed message and is generated by a formula that makes it unlikely that other messages will produce the same hash. A hash is used in a secure system to facilitate producing a numeric value of a fixed length that uniquely identifies data. Hashes are used with digital signatures to provide additional security in a memory efficient manner since hashes represent a large amount of data as a smaller numeric value. Thus, a process can efficiently sign a hash instead of signing the larger data set from which the hash was produced. In a hash and digital signature transaction, a sender may generate a hash, encrypt it, and send it with a digital signature to a receiver. The receiver decrypts the hash and the message, regenerates the hash from the message, and compares the received hash with the generated hash. If they match, it is unlikely that the message was corrupted or altered after it was hashed and signed.","Public\/private key cryptography uses two keys to facilitate secure communications. A first party distributes its public key to entities to which it expects to send secure communications. When the first party that possesses the private key desires to transmit a secure message to the second party, the first party hashes and signs the message using the private key. Upon receipt of the message, the second party decrypts the signed hash of the secured message with the first party's public key, which should be the only key that will verify messages signed with the private key. Similarly, when the second party wants to transmit a secure message to the first party, the second party hashes and signs the message with the private key of the second party and transmits it.","Prior Art  illustrates an example smart card . While the smart card  includes several components (e.g., RAM , ROM ), it is to be appreciated that smart cards employable by the systems and methods described herein can include a greater or less number of computer components. Preferably, the smart cards employed with the systems and methods described herein are very \u201cthin\u201d. Minimally, the smart cards include processing logic for hashing and\/or signing a hash of a structured proposal and consumer indicia of acceptance of the proposal. Furthermore, smart card  includes means to communicate with external devices. These means include, but are not limited to, a contact based port, a radio frequency based communication port, and an optical based communication port. Smart card  includes a memory that will hold a URL of a token server that stores software that facilitates interactions with the smart card. The memory further stores one or more public\/private key pairs to facilitate secure communications. It is to be appreciated that smart card  does not need to be initially \u201cbound\u201d to any consumer and\/or accounts when the card is provided to a consumer.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 2","b":["200","200","210","220","230","210","200","210","200","200","220","220","210","210","200","220","230","210","220"]},"A protocol maker\/token server  facilitates providing attestations to one or more of the consumer , merchant , and account servicer  that the consumer  is the actual account owner associated with a token, that an offer received by the consumer  has been unaltered since accepted and signed by the consumer , and that the consumer  has adequate funds. Thus, the protocol maker\/token server  facilitates encouraging on-line, \u201ccard not present\u201d transactions. The protocol maker\/token server  encourages these transactions by making attestations  to the other parties that the transaction was accurate, secure, and financially feasible.","In system , a merchant  produces an offer  that is presented to the consumer . The consumer  can indicate their acceptance of the offer  through an acceptance  that is returned to the merchant . This coupling requires the transmission of certain sensitive information between the consumer  and the merchant  and thus is suboptimal. Once the merchant  receives the acceptance , the merchant  may make a funds query  to the account servicer . The account servicer  can then reply with a funds verification  concerning the query . Again, sensitive information may be transmitted between the merchant  and the account servicer , which is suboptimal. To address these suboptimalities,  provides an alternate logical flow of information through a system that supports card not present transactions.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 3","b":["300","300","310","320","330","340","340","370"]},"In the system , the merchant  produces a structured proposal in accordance with a protocol provided by the protocol maker . The structured proposal is transmitted at  to the consumer . In this manner, the system  contains a means for defining (), constructing and using structured proposals. The consumer , interacting with client side software and a late binding token, receives the structured proposal in a secure window, and if they accept, provide indicia of their acceptance of the offer. These indicia can include, but are not limited to, pressing an \u201cI agree\u201d button one or more times, providing a personal identification number (PIN), and so on. Rather than returning information to the merchant , the consumer , a late binding token, and\/or a client side software provide, at , a twice signed bundle to the token server . The token server  holds the binding between the consumer , the late binding token, and for example, accounts associated with the consumer and\/or the token. The token server  is programmed to facilitate verifying the security and accuracy of the twice signed bundle transmitted to the token server  at . While the protocol maker and token server  are illustrated as a single block in , it is to be appreciated that the protocol maker and the token server may be separate entities. In one example, the token server  is programmed to facilitate performing funds verification. Thus, at , a request concerning the sufficiency of funds for the transaction related with transmission  is made to account servicer . If there are sufficient funds, then at , the account servicer  may provide an authorization code to the merchant . Note that in this logical flow, less sensitive information is transmitted through the system . Thus, problems associated with card not present transactions may be mitigated by a system like that described in .",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 4","b":["400","402","404","402","404","404","400"]},"The token  can, in one example, include a logic for communicating with the client side software . Such communications may occur by, for example, computer communications. The token  can also include a logic for digitally signing items provided to the token  by the client side software . These items can include, but are not limited to, hashes, files, fields, records, messages, and so on. Furthermore, the token  can include a memory that stores items including, but not limited to, the URL of a token server programmed to facilitate interactions with the token  and\/or the client side software , and a public\/private key pair to facilitate secure communications with the token .","The client side software  can include logic for receiving a token server communication logic. Token server communication logic facilitates subsequent communications between a token server and the token  and\/or the client side software . The client side software  also includes a logic for receiving a structured proposal to present to a consumer. The client side software  receives a structured proposal, presents it to a consumer in a secure window, and then detects indicia of acceptance or rejection of the offer. Thus, the client side software  includes a logic for recognizing an indicia of consumer acceptance of an offer in the structured proposal that it received and displayed.","If the client side software  detects that the consumer has accepted the offer presented in the secure window, then the client side software  can, in one example, hash the structured proposal and the indicia of the consumer acceptance into an unsigned hash to transmit to the token . Thus, the client side software  includes logic for performing such a function and furthermore acts as a means for hashing a data packet including the structured proposal and an indicia of the intent of the consumer in the structured proposal, and for providing the hashed data packet to the late binding token. The client side software  also includes logic to receive a hash signed by the token . The client side software  also includes logic that facilitates bundling of the unsigned hash that was sent to the token , the indicia of consumer acceptance that were sent to the token , a signed hash returned from the token , and various identifiers including, but not limited to, a client software identifier and a token  identifier. The client side software  also includes logic for digitally signing the bundle created by the previously described logics.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 5","b":["500","500","506","500","506","502","502","502","504","502","506","506","502","506","502"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 6","FIG. 6"],"b":["600","600","610","630","620","630","630","660","660","650","650","650","640"]},"The system  includes a token server  that facilitates managing late binding operations and other operations associated with the late binding token . These operations can include, but are not limited to, communicating with the token , verifying the token , configuring the token , providing communication software that facilitates communicating with the token , disabling the token , and so on. In one example, the system  includes a token server  that stores token server communication logics programmed to facilitate communication with various late binding tokens . For example, a first token  may require a first communication logic to facilitate communicating with the token server  in a first manner while a second type of token  may require a second type of software to communicate with the same or some other token server  as determined by information from the token. In one example, the software provided from the token server  to the client side software  is an applet. The token server  includes logic for selectively transmitting token server communication logics to the client side software  in response to a download request from the client side software . For example, a consumer  may receive a token  and install software associated with the token , where the software interacts with the client side software . The client side software  may then make a request to the token server  for an applet to facilitate subsequent communications between the client side software  and the token .","The client side software  can receive indicia of consumer  acceptance of an offer displayed in the secure window . Thus, the client side software  may provide data (e.g., unsigned hash, indicia of acceptance), to the token  for digital signing. Upon receipt of a signed item from the token , the client side software  can produce a twice signed bundle . The twice signed bundle  can include items like an unsigned hash, a signed hash, indicia of consumer acceptance of an offer, and identifiers associated with the token  and\/or client side software . Therefore, the client side software  is a means for providing a second digital signature of a bundle data packet including the unsigned hashed data packet of the structured proposal and an indicia of the intent of the consumer entered into the secure window , and the hashed data packet that was signed by the token . Thus, the token server  can include a logic for receiving the twice signed bundle  and for establishing a security assurance level of the twice signed bundle .","In one example system , a verifier  may be included to facilitate determining a security assurance level of a digitally signed bundle. In addition to determining a security assurance level of a digitally signed bundle , the verifier  may additionally and\/or alternatively determine whether a consumer has sufficient funds to complete a transaction associated with the twice signed bundle .","It is to be appreciated that consumer executable components of the system  can be stored on a computer readable medium.","In view of the exemplary systems shown and described herein, example methodologies that are implemented will be better appreciated with reference to the flow diagrams of . While for purposes of simplicity of explanation, the illustrated methodologies are shown and described as a series of blocks, it is to be appreciated that the methodologies are not limited by the order of the blocks, as some blocks can occur in different orders and\/or concurrently with other blocks from that shown and described. Moreover, less than all the illustrated blocks may be required to implement an example methodology. Furthermore, additional and\/or alternative methodologies can employ additional, not illustrated blocks. In one example, methodologies are implemented as computer executable instructions and\/or operations, stored on computer readable media including, but not limited to an application specific integrated circuit (ASIC), a compact disc (CD), a digital versatile disk (DVD), a random access memory (RAM), a read only memory (ROM), a programmable read only memory (PROM), an electronically erasable programmable read only memory (EEPROM), a disk, a carrier wave, and a memory stick.","In the flow diagrams, rectangular blocks denote \u201cprocessing blocks\u201d that may be implemented, for example, in software. Similarly, the diamond shaped blocks denote \u201cdecision blocks\u201d or \u201cflow control blocks\u201d that may also be implemented, for example, in software. Alternatively, and\/or additionally, the processing and decision blocks can be implemented in functionally equivalent circuits like a digital signal processor (DSP), an application specific integrated circuit (ASIC), and the like.","A flow diagram does not depict syntax for any particular programming language, methodology, or style (e.g., procedural, object-oriented). Rather, a flow diagram illustrates functional information one skilled in the art may employ to program software, design circuits, and so on. It is to be appreciated that in some examples, program elements like temporary variables, routine loops, and so on are not shown.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 7","b":["700","710","710","700","715","715"]},"At , a structured proposal that includes an offer to enter into a transaction is received. In one example, the structured proposal will include a digital merchant trademark that facilitates increasing consumer confidence that the offer is legitimate. At , the offer contained in the structured proposal is displayed to a consumer in a secure window. The secure window, which acts as a means for securely displaying a structured proposal to a consumer and creating the indicia of acceptance, may appear on devices including, but not limited to, a consumer personal computer, a consumer cellular telephone, a consumer personal digital assistant (PDA), and so on. While  describes displaying the offer contained in the structured proposal in a secure window, it is to be appreciated that other communication techniques including, but not limited to, audio and haptic techniques can be employed in accordance with aspects of this application.","At , a determination is made concerning whether the offer displayed at  has been accepted. If the offer is rejected, then at  a rejection can be provided. If, however, the determination at  is that the consumer has accepted the offer, then at , the structured proposal that contained the offer can be hashed. At , the hashed proposal can be provided to the late binding token received at . At , the token can affix a digital signature to the hash and return it to the entity providing the hash to the token. Therefore, the token acts as a means for digitally signing the hashed data packet, which signed data packet may then be returned to the providing entity.","In one example, in a non-illustrated block, the token can be bound to one or more items. These items can include, but are not limited to, an individual, a credit account, a debit account, a merchant account, a frequent flyer account, a prepaid account, and so on. The bindings between items can be stored on, for example, a token server which facilitates minimizing the amount of sensitive data transmitted during a transaction employing the token.","At , the unsigned hash, the signed hash, and one or more identifiers (e.g., token identifier, software identifier, consumer identifier), are bundled together. This bundling can produce one or more files, records, fields, messages, and so on suitable for transmission via a computer communication. At , the bundle is digitally signed. Note that this is a second digital signature associated with the bundle. The first digital signature is provided by a token, the second digital signature is provided by the method illustrated in . This digital signature may be provided, for example, by client side software. These two digital signatures facilitate increasing confidence that the transaction was accurately displayed, intentionally accepted, and accurately transmitted to a transaction verifier. While two digital signatures are indicated in , it is to be appreciated that other arrangements of digital signatures and hashes can be employed in accordance with the method.","At , the bundle is provided to, for example, a transaction verifier and\/or a funds verifier. It is to be appreciated that computer executable aspects of the method illustrated in  can be implemented in computer executable instructions and stored on a computer readable medium. Furthermore, it is to be appreciated that such computer executable instructions can be performed by client side software and\/or token based logic.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 8","b":["800","810","800","820"]},"At , one or more items that comprise a response to the structured proposal provided at  are received. These responses can include, but are not limited to, an authorized acceptance of the offer, a rejection of the offer, and an unauthorized acceptance of the offer. By way of illustration, an authorized acceptance of the offer may indicate both that a verifier is sufficiently satisfied that the transaction occurred between legitimate parties in a legitimate manner, that the purchaser has sufficient funds, and that the offer or has sufficient goods for the transaction. An unauthorized acceptance of the offer may indicate that although a verifier is certain that the offer and acceptance were made in verifiably secure manners that the consumer may or may not have sufficient funds to enter into the transaction. It is to be appreciated that computer executable aspects of the method illustrated in  can be implemented in computer executable instructions that may be stored on a computer readable medium.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 9","FIG. 9"],"b":["900","910","920"]},"At , a request for additional software associated with a late binding token is received. This additional software can facilitate communications between, for example, the late binding token and the token server and\/or a client side software. Thus, communications concerning verifiably secure structured proposals are facilitated. In one example, the additional software may be provided in the form of an applet. Thus at , the applet may be provided to the computer component requesting the additional software.","At , the late binding token distributed at  can be bound to one or more items. These items can include, but are not limited to, a customer, a merchant, a funds verification system, a credit account, a debit account, a merchant account, a frequent flyer account, and a prepaid account. Data associated with the binding can be stored, for example, on a token server which facilitates minimizing the amount of sensitive information transmitted across, for example, the Internet during electronic commerce. While binding the token is illustrated at block , it is to be appreciated that the binding can occur at other earlier and\/or later points in time.","At , a bundle that has been digitally signed twice is received. This bundle can include, but is not limited to, an unsigned hash associated with a verifiably secure structured proposal, a signed hash associated with a verifiably secure structured proposal, indicia of consumer acceptance of an offer contained in the verifiably secure structured proposal, and identifiers like consumer identifiers, token identifiers, software identifiers, applet identifiers, binding identifiers, and so on.","At , the bundle received at  can be verified, which facilitates establishing a consumer intention data. In this manner, the twice signed bundle received at  acts as a means for determining that the intent of the consumer to enter into a transaction may be associated with the structured proposal. This consumer intention data can store a confidence level associated with determining whether a consumer desired to enter into a transaction. This confidence level can be produced by analyzing one or more items in the twice signed bundle. Since there are two digital signatures available, each digital signature can be examined when producing the confidence level. A first digital signature may indicate that the consumer indicated acceptance of the offer in a verifiably secure manner. A second digital signature may indicate that the structured proposal was presented to a consumer in a secure window in a verifiably correct manner. It is to be appreciated that the digital signatures may indicate other items that further facilitate increasing confidence in a verifiably secure transaction.","In one example, at , funds may be verified. For example, a determination may be made whether a consumer has adequate funds and\/or credit to justify accepting the transaction. Thus, at , a consumer funds position related to the transaction may be produced. This position can be, for example, a binary yes\/no acceptance, or a value indicating a degree of acceptance (e.g., 0-10). At , at least one of an acceptance and a rejection of the transaction associated with the twice signed bundle received at  is provided to, for example, a consumer and\/or a merchant. This acceptance and\/or rejection can be based, at least in part, on the consumer funds position determined at  and\/or a security level associated with verifying the bundle at . It is to be appreciated that computer executable aspects of the method illustrated in  can be implemented in computer executable instructions and that such computer executable instructions can be stored on a computer readable medium.","Referring now to , an application programming interface (API)  is illustrated providing access to a late binding token  and\/or a client side software . The API  can be employed, for example, by programmers  and\/or processes  to gain access to processing performed by the token  and\/or client side software . For example, a programmer  can write a program to access a token  (e.g., to invoke its operation, to monitor its operation, to access its functionality) where writing a program is facilitated by the presence of the API . Thus, rather than the programmer having to understand the internals of the token , the programmer's task is simplified by merely having to learn the interface to the token . This facilitates encapsulating the functionality of the token  while exposing that functionality. Similarly, the API  can provide data values to the token  and\/or retrieve data values from the token . For example, a process  that retrieves a signed hash can provide an unsigned hash to the token  and\/or the client side software  via the API  by, for example, using a hash call provided in the API . Thus, in one example of the API , a set of application program interfaces can be stored on a computer-readable medium. The interfaces can be executed by a computer component in conjunction with a client software and\/or late binding token. The interfaces include a first interface for discovering a late binding token associated with the client software and a second interface for hashing a first data. The first data is provided to the late binding token by the client software. The interfaces also include a third interface for digitally signing a second data received by the client software from the late binding token, where the second data is derived, at least in part, from the first data.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 11","b":["1130","1110","1120","1130","1130","1130","1130","1130"]},"The systems, methods, and so on described herein may be stored, for example, on a computer readable media. Media can include, but are not limited to, an application specific integrated circuit (ASIC), a compact disc (CD), a digital versatile disk (DVD), a random access memory (RAM), a read only memory (ROM), a programmable read only memory (PROM), a disk, a carrier wave, a memory stick, and the like.","Thus, an example computer readable medium can store computer executable instructions for a method for securely indicating verifiable consumer intent to enter into a transaction. The method includes receiving an unbound token (e.g., a smart card), and receiving a first software associated with the unbound token. The first software facilitates locating a token server associated with the unbound token, where the token server stores logic that facilitates interacting with the token. The method also includes receiving a second software from the token server, where the second software facilitates interacting with the unbound token.","Another example computer readable medium can store computer executable instructions for a method for securely transmitting a verifiable merchant intent to enter into a transaction. The method includes receiving a structured proposal protocol that identifies how to format an offer in a verifiably secure manner. The method also includes creating a structured proposal according to the protocol, where the structured proposal comprises an offer to enter into a transaction, and providing the structured proposal to a consumer. The method further includes receiving a response to the offer comprising one of, an authorized acceptance of the offer, a rejection of the offer, and an unauthorized acceptance of the offer, and selectively completing the transaction based, at least in part, on the response.","Another example computer readable medium stores computer executable instructions for a method for facilitating secure, verifiable transactions involving a late binding token. The method includes providing a protocol for making a verifiably secure structured proposal, to, for example, merchants. The method also includes providing a late binding token and a first software associated with the late binding token to, for example, consumers, where the first software facilitates locating a token server associated with the late binding token. The method further includes receiving a request for a second software associated with the late binding token, from, for example, a consumer. The second software facilitates communication between the late binding token and the token server concerning a verifiably secure structured proposal. Finally, the method includes providing the second software, to, for example, the consumer.","Similarly, an example computer readable medium can store computer executable components of a late binding token system. The system includes a client software for communicating with at least one of a late binding token, a merchant application, a token server, and a verifier. The system also includes a token that is initially unbound and that can be bound after receipt by a consumer, and a protocol that specifies parameters associated with a structured proposal that will be processed by the client software.",{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 12","b":["1200","1220","1230","1250","1260","1270","1200","1220","1226"]},"A token server communication logic  facilitates interacting with a token server . For example, the token server communication logic  may be programmed to optimize data transfers between the token server  and the client software . The structured proposal communication logic  facilitates communicating structured proposals with the merchant application  and\/or a consumer  via a secure window (not illustrated). Similarly, the proposal display logic  facilitates displaying a structured proposal received from a merchant application  to the consumer  in a secure window (not illustrated). Once the offer in a structured proposal has been presented to the consumer , the client software  may attempt to determine whether the consumer  has accepted the offer. Thus, the client software  includes indicia recognizing logic  that facilitates determining whether the consumer  has provided indicia of acceptance including, but not limited to, pressing \u201cI agree\u201d buttons, providing a personal identification number, and so on.","The client software  includes hashing logic  that can hash the structured proposal, the indicia of acceptance, and other related items and provide them to, for example, the late binding token . The late binding token  includes client software communication logic  that facilitates communicating with the client software . The late binding token  also includes digital signature logic  that can sign items received from the client software  (e.g., the hash), and return them to the client software .","The client software  therefore includes transmitting\/receiving logic  to transmit unsigned hashes to the late binding token  and to receive signed hashes from the late binding token .","The client software  also includes bundling logic  that facilitates bundling up, for example, an unsigned hash, indicia of acceptance, and a signed hash received from the late binding token . The client software  also includes digital signature logic  that can be employed, for example, to sign a bundle produced by the bundling logic . This digitally signed bundle can be provided to, for example, a verifier  that can determine a security assurance level for the bundle and\/or for the transaction as a whole.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 12","b":["1250","1250","1250","1252","1230","1200","1220","1260","1270","1250","1254","1220","1254","1200","1200","1220","1254","1270","1250","1256"]},{"@attributes":{"id":"p-0091","num":"0090"},"figref":"FIG. 12","b":["1230","1240","1240","1230","1230","1200","1220","1270"]},"What has been described above includes several examples. It is, of course, not possible to describe every conceivable combination of components or methodologies for purposes of describing the methods, systems, computer readable media and so on employed in late binding token systems. However, one of ordinary skill in the art may recognize that further combinations and permutations are possible. Accordingly, this application is intended to embrace alterations, modifications, and variations that fall within the scope of the appended claims. Furthermore, to the extent that the term \u201cincludes\u201d is employed in the detailed description or the claims, it is intended to be inclusive in a manner similar to the term \u201ccomprising\u201d as that term is interpreted when employed as a transitional word in a claim."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Prior Art  illustrates an example smart card.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
