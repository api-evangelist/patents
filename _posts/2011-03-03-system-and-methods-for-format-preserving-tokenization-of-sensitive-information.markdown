---
title: System and methods for format preserving tokenization of sensitive information
abstract: Systems and methods for secure access and utilization of sensitive data such as credit card numbers, Social Security Numbers, personal identifying information, etc. A tokenizing strategy component provides for creating, managing, and storing tokenization strategies on behalf of a plurality of users. A data tokenizing component is operative to (a) receive an input data string of sensitive data from a user, (b) apply a selected tokenization strategy to the input data string to generate a tokenized data string, and (c) provide the tokenized data string for storage in association with the input data string. A secure server including a secure database stores the tokenized data string and the input data string in a corresponding mapped relationship. A security component controls access to and retrieval of the tokenized data string and to the input data string in accordance with predetermined security requirements of the users.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08458487&OS=08458487&RS=08458487
owner: Liaison Technologies, Inc.
number: 08458487
owner_city: Alpharetta
owner_country: US
publication_date: 20110303
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION","Overview","Exemplary System","Exemplary Methods","Exemplary Database Schemas","Exemplary User Interface Screens","Tokenization within Business Processes","Implementation Through Cloud Hosting"],"p":["This application claims the benefit of and priority under 35 U.S.C. \u00a7119(e) to U.S. Provisional Patent Application No. 61\/310,182 filed Mar. 3, 2010 and entitled \u201cSystem and Methods for Format Preserving Tokenization of Sensitive Information\u201d. The above-referenced application is hereby incorporated by reference as if set forth herein in its entirety.","The present application relates generally to data security, and more particularly to methods and systems for secure and efficient management and utilization of sensitive data within data and transaction processing systems.","Enterprises today face evolving global data privacy risks and challenges. Explosive proliferation of business-critical and sensitive electronic data stored in multiple applications and databases, together with mobile workforces scattered around the globe, exacerbate the situation.","A fundamental technique used to secure data and render it useless when improperly accessed, as by individuals or systems without proper credentials, encryption keys are used to encrypt data. The encrypted data, called cipher text, is generally larger than the original value. In a database environment, a larger data size requires expanding the size of the field to accommodate the storage of the cipher text, which would in turn require changing the database schema to accommodate different size data. That process that only presents a large workload, but it also poses considerable risk","Storing data in encrypted form for credit card numbers, health data, or other sensitive information is much safer than storing clear text values, though some risk remains, as encryption keys must be distributed to all systems that need to decrypt the information. It is possible for even such a distributed system to be compromised by a sophisticated hacking attack.","Therefore, a long-felt but unresolved need exists for a system or method that provides secure access to sensitive data, while maintaining the data format for easy utilization by existing systems.","Briefly described, the present disclosure describes various methods and systems for providing secure access to and utilization of sensitive data such as personal identifying information, credit card numbers, financial account numbers, healthcare related information, biometric data, and the like. Primarily, the disclosure relates to a platform and processes for receiving sensitive information from a business process, typically via an electronic communication from an enterprise computing system or transaction processing system. In particular, the described systems and methods provide for replacement of the sensitive data with a token, i.e. a tokenized data string, that is used in substitute of the sensitive data in data processing functions of the enterprise. Also, the system provides for various and flexible methods for implementing different tokenization strategies so as to meet various different data storage, processing, and utilization needs.","Still more particularly, aspects of the present invention relate to \u201cformat preserving\u201d tokenization of the sensitive data. In this respect, the present disclosure describes a system with a corresponding method for format preserving tokenization of sensitive data for use in a computer-implemented data processing operation so as to protect the sensitive data from unauthorized access by persons not having authorization to the sensitive data. In many such systems, the sensitive data provided in an input data string having a predetermined number of characters, with the input data string corresponding to sensitive data derived in connection with the client process for tokenization. The input data strings may be numeric or alphanumeric.","One step involves accessing a tokenization strategy that contains information determining a first predetermined number of characters as a head of a tokenized data string and a second predetermined number of characters as a tail of the tokenized data string. The first predetermined number of characters of the input data string is stored in a secure database as a first portion of the tokenized data string, the tokenized data string comprising an entry in the secure database. The second predetermined number of characters of the input data string in the secure database as a second portion of the tokenized data string. These lengths of the first and second portions of the data string may be chosen to meet a particular business purpose, e.g. to reveal the first three digits of a Social Security Number, or the last four digits of a credit card number.","Thereafter, a disclosed method involves parsing the input data string of the first and second predetermined number of characters of the input data string to thereby derive a remaining portion of the input data string. In accordance with an aspect of the invention, the remaining portion of the input data string is encrypted with an encryption key associated with the client process to obtain a ciphertext representation of the remaining portion of the input data string. Next, the method involves generating a token body portion corresponding to the remaining portion of the input data string, the token body portion determined by a predetermined token generation algorithm that is independent of the data values of the characters in the remaining portion of the input data string.","The ciphertext representation of the remaining portion of the input data string and the token body portion is stored as an entry in the secure database in association with the first portion and the second portion of the input data string, with the first portion of the input data string, the token body portion, and the second portion of the input data string forming a tokenized data string that has the same format as the input data string but is not cryptographically decipherable to derive the input data string.","Further according to the method, in response to a predetermined request from the client process, the tokenized data string is returned in an electronic communication to the client process.","In accordance with an aspect of the disclosure, the client process is conducted in a data processing system remotely located from the secure database, but may be conducted by a system that is independent of and has no access to a system that carries out the method.","In accordance with another aspect, a tokenization strategy is associated with the client process. Advantageously, a system and methods constructed as described herein can accommodate various different tokenization strategies for various different client processes, and for various different types of data and applications. The system accommodates different tokenization strategies for different types of data such as Social Security Numbers, financial account numbers, credit or debit card numbers, and the like. Further, the system accommodates and facilitates different tokenization strategies for different clients and\/or client processes.","According to an aspect, as described above, the remaining portion of the input data string is encrypted with an encryption key to obtain a ciphertext representation of said remaining portion. This ciphertext representation is stored in lieu of the sensitive information, but can be retrieved and decrypted to retrieve the actual sensitive data, upon provision of appropriate security credentials or authorization. An exemplary related method further comprises the steps of storing a plurality of encryption keys in the secure database that are associated with a plurality of client processes, and utilizing a particular encryption key for the encrypting step that is identified with a particular client process. An exemplary related method further comprises the step of storing information in the secure database that points to an entry in a separate storage device (key manager) that stores the encryption key, and retrieving the encryption key from the separate storage device.","According to another aspect, the method is carried out in a secure server operated in a secure environment to which personnel associated with the client process do not have access.","Various methods of generating tokens are disclosed to provide flexibility in creating tokenization strategies. One such method is to provide different numbers of characters in the first portion and the second portion of the tokenized data string. Another such method is to provide different approaches to generating the token body portion. One such method involves using a token generation algorithm that provides the token body portion as a sequence number generated in the token server. Another such method involves using a token generation algorithm that generates a random number for use as the token body portion. Yet another such method involves using a token generation algorithm that provides the token as a value that is used as an index to identify an entry in the secure database.","According to another aspect, the tokenized data string is generated by the token generation algorithm to generate a tokenized data string that passes a Luhn test for a credit card number corresponding to the input data string, or deliberately fails a Luhn test, or is independent of a Luhn test.","According to another aspect, as relates to the step of calculating a unique digest of data corresponding to the tokenized data string, the method involves storing the unique digest in the secure database in association with the tokenized data string for use in rapid lookup of entries in the secure database. As will be understood, the unique digest is typically generated using one of the well known hash methodologies such as SHA-1, SHA-2, or MD5.","According to another aspect, the method further involves steps of, in response to a predetermined condition, deleting the ciphertext representation of the input data string associated with a particular tokenized data string from the secure database, leaving the tokenized data string in the secure database stored in association with the unique digest. Such a predetermined condition can include a predetermined delete command for the sensitive data, or can result from a period purge of the secure database. Further, the method involves steps of, in response to subsequent provision of an input data string of sensitive information by a client process, calculating a unique digest of the input data string using the same methodology, using said unique digest of the input data string to access the secure database to determine whether there is an entry corresponding to the input data string that contains a tokenized data string, and returning the tokenized data string to the client process.","According to another aspect, a method in accordance with the disclosure involves providing a masking operation to the tokenized data string, such that a response to the request by the client process for the tokenized data string includes one or more of the first portion or the second portion of the input data string in additional to predetermined mask values (e.g. asterisks).","According to a particular aspect of the invention, processes for tokenizing, detokenizing, and looking up of values of tokenized data strings and sensitive data are carried out by client processes that invoke an application programming interface (API) of a system constructed in accordance with the disclosure herein. In one such aspect, steps of the method are carried out in response to provision by a client process of a tokenize or \u201cProtect\u201d function call in association with the sensitive data string. Such a function call returns the tokenized data string to the calling client process, as described herein.","In another such aspect, steps of the method are carried out in response to provision of a Lookup with Sensitive Data function call from a client process in association with the sensitive data. Such a method involves calculating a unique digest of the input data string of sensitive data, accessing the secure database using the unique digest to determine whether there is an entry in the secure database corresponding to the input data string, and in response to a determination that the secure database contains such an entry, retrieving the tokenized data string. The tokenized data string is thus returned to the calling client process.","In another such aspect, steps of the method are carried out in response to provision of a Lookup with Token function call from a client process in association with a tokenized data string. Such a method involves accessing the secure database using the token of the tokenized data string to determine whether there is an entry in the secure database corresponding to the input data string, and in response to a determination that the secure database contains such an entry, retrieving the tokenized data string. Such a function call results in the return of a masked version of the tokenized data string to the calling client process.","In another such aspect, steps of the method are carried out in response to provision of a detokenize or \u201cReveal\u201d function call from a calling client process in association with the tokenized data string. Such a method involves determining whether the calling client process has authorization to retrieve the sensitive data. In response to proper authorization for the sensitive data, the method further involves accessing the secure database using the token of the tokenized data string to determine whether there is an entry in the secure database corresponding to the input data string, and in response to a determination that the secure database contains such an entry, retrieving the sensitive data. Such a function call result in the return of the sensitive data to the calling client process.","Another aspect of the disclosure relates to systems and methods of a data tokenizing system for secure access and utilization of sensitive data that allows creation, management, and utilization of different tokenization strategies on behalf of a plurality of user entities. Such a system comprises a tokenizing strategy component for storing a plurality of predetermined tokenization strategies on behalf of a plurality of user entities. Such as system further comprises a data tokenizing component operative to (a) receive an input data string of sensitive data from a particular one of the plurality of user entities in a predetermined data format, (b) apply a selected predetermined tokenization strategy corresponding to the particular one of the plurality of user entities to the input data string to generate a tokenized data string, and (c) provide the tokenized data string for storage in association with the input data string. Such a system also further comprises a centralized secure server in communication with the data tokenizing component and including a secure database operative to store the tokenized data string and the input data string in a corresponding mapped relationship. Such a system still further comprises a security component operative to provide access to the tokenized data string and to the input data string in the secure database in accordance with a predetermined security requirement of the particular one of the plurality of user entities.","In accordance with aspects of the disclosure, the system provides a user interface that allow for creation and management of different tokenization strategies. In such a system, the user interface is configured to allow user configuration through one or more of the following: a selection field for selecting one or more portions of the input string to be replaced; a field for user selection of format preservation; an input field for entry of a test string of data; and an output field for displaying a tokenized output string of data.","Another aspect of the disclosure relates to a system and methods for secure access and utilization of sensitive data implemented for a plurality of users through cloud hosting. Such a method involves receiving user configuration of a tokenization strategy through a user interface. Subsequent to establishment of a tokenization strategy, the method involves tokenizing an input string of sensitive data in accordance with the tokenization strategy selected by the user and providing the tokenized data string for storage in a secure server.","The method further involves managing access to the secure database in accordance with predetermined security requirements. The method further involves managing authorization for performing one or more administrative functions based on quorum-based authorization including defining users authorized to perform the administrative functions, defining a criterion requiring a minimum number of the authorized users to provide permission for performing an administrative function, receiving a request for performing an administrative function, determining whether the criterion is met, and performing the requested administrative function if the criterion is met. Further aspects require users to provide permission for performing an administrative function by entering a password. Further aspects involve steps wherein the users are defined at both the client and the centralized secure server and further, the criterion requires a minimum number of users at both, the client and the centralized secure server.","Further aspects of the disclosure relate to providing the invention via an article of manufacture, namely, a computer program product that embodies software that carries out steps of the various methods described herein, and wherein such software is executed on a computer system that includes a processor for executing the computer program code. The computer program product is preferably provided on a computer readable medium, preferably nonvolatile.","According to yet another aspect, the disclosure relates to a user customizable data tokenizing system for secure access and utilization of sensitive data by a user. Such a system comprises a data tokenizing component operative to (a) receive an input data string of sensitive data from a user in a predetermined data format, (b) apply a selected predetermined tokenization strategy to the input data string to generate a tokenized data string, and (c) provide the tokenized data string as an output for storage in association with the input data string. The system further comprises a tokenizing strategy generation component operative to receive user input corresponding to a plurality of tokenizing parameters that is operative for generating a tokenization strategy utilizing the values of the tokenization parameters input by the user. Further, such a system comprises a tokenization strategy storage for storing the predetermined tokenization strategy in association with information identifying the user.","According to yet another aspect, the present disclosure relates to a method for utilization by a user of tokenized data in substitution of sensitive data in a computer-implemented transaction processing operation so as to protect the sensitive data from unauthorized access. Such aspects contemplates that the protection of the sensitive data will be carried out by systems and methods as described herein, working in conjunction with an enterprise data processing or transaction processing system, so as to carry out business processes of the enterprise, utilizing its existing data processing infrastructure, while securing sensitive data from unauthorized access or misuse, and in many cases, wherein the tokenized data string is used in substitution of the sensitive data for various enterprise data processing and business processing function.","According to this aspect, the method involves providing a predetermined tokenization strategy in a tokenization system on behalf of a user (e.g. an enterprise user independent of an operator a system for securing the sensitive data as describe herein) for a particular type of sensitive data, e.g. credit card numbers, Social Security Numbers, and other herein described forms of sensitive data. The sensitive data is derived in connection with a particular transaction of the enterprise and provided to the tokenization system for tokenization in accordance with the predetermined tokenization strategy. The tokenization system provides the enterprise with a tokenized data string representing the sensitive data involved in the particular business transaction. The tokenized data string corresponding to the particular transaction is stored by the enterprise in association with other information relating to the particular transaction in a data processing system of the enterprise. The enterprise is thereby enabled and operative to process information relating to the particular transaction in its transaction processing operations without use of or reference to the sensitive data.","These and other aspects, features, and benefits of the claimed invention(s) will become apparent from the following detailed written description of the preferred embodiments and aspects taken in conjunction with the following drawings, although variations and modifications thereto may be effected without departing from the spirit and scope of the disclosure.","For promoting an understanding of the principles of the present disclosure, reference will now be made to the embodiments illustrated in the drawings and specific language will be used to describe the same. It will, nevertheless, be understood that no limitation of the scope of the disclosure is thereby intended; any alterations and further modifications of the described or illustrated embodiments, and any further applications of the principles of the disclosure as illustrated therein are contemplated as would normally occur to one skilled in the art to which the disclosure relates. Limitations of scope should be determined in accordance with and as expressed in the claims.","Briefly described, aspects of the claimed invention relate to systems and methods for secure access and utilization of sensitive data. The various embodiments of the disclosure provide protection for sensitive information (such as credit card numbers, personally identifiable information, or electronic health records) that may be communicated, stored, or processed in computer systems and networks, such as those in an enterprise. The sensitive information may be replaced by representative surrogate data (referred to as tokenized data or strings) that is distributed in place of the original data throughout an enterprise or network, while the sensitive information itself stored in a secure server.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 1","FIG. 12"],"b":["100","100","100"]},"The system  may receive sensitive information through several different applications. Some examples presented in  include receiving payment card  information from a customer at a web server  during a web transaction; receiving similar information through a point of sale (POS) entry device ; or receiving the information through a phone order entry device  being operated by, for example, a retail employee, while placing an order for the customer. The payment card  maybe any known type such as MasterCard, VISA, AMEX, etc. The POS can be a payment point at a merchant's business site, where a customer presents a payment card for purchase or rental of goods and services. The point of sale device  may include, for example, a payment interface at a gas pump a cash register, a hotel front desk, a bank's computer system, or the like.","The sensitive information, here, the payment card  information, is received as an input string by a token management system  through a front-end interface . As will be explained in more detail, the sensitive information may be stored in encrypted form in a secure location, while a tokenized version of the information is distributed throughout an enterprise in its place. The encryption may be performed by applying any encryption algorithm known in the art such as AES, blowfish, etc., or hashing.","In one implementation, a key manager , part of the token management system , manages the encryption keys. The front-end interface  communicates the payment card  information to the key manager , which encrypts the payment card  information and forwards the encrypted information, along with the payment card  information, to a tokenization component .","The tokenization component  is in communication with a user interface  for receiving user configuration of a tokenization strategy, which is applied to the payment card  information. The user here is described as an entity capable of configuring a tokenization strategy, which allows definition of certain validation parameters, access rights, and tokenization rules, for tokenizing an input string, described in more detail in connection with subsequent figures. The user may be an individual (for example, an administrator of a computer system), or a computer program.","The tokenization component  can apply the tokenization strategy selected by the user to the payment card  information to generate a tokenized string and can provide the tokenized string for storage. The tokenized string may be stored in a secure database  within a secure server , which is in communication with the tokenization component . The secure database  stores the tokenized string and the encrypted payment card  information, with a mapping between the two, in a table or suitable data structure. In this manner, the sensitive information is securely stored, and the corresponding tokenized string can be distributed to all desired systems in its place, such as corporate applications . These corporate applications  can include a store's business analytics system, a hotel reservation system, a human resource customer service system, etc.","In one implementation, the tokenization strategy preserves the format of the input string of sensitive information (such as one or more portions of the input string, the length of the input string, or the type of data characters in the input string) but is not decipherable to derive the input string from the tokenized string. Here, the entire or a portion of the input string may be replaced with a second string.","If the input string needs to be retrieved for processing by one of the corporate applications , the tokenized string corresponding to the sensitive string may be provided to the token management system , which can access the secure database . A security component , in communication with the secure server , manages access to the secure database  in accordance with predetermined authorization procedures and access control, as described in detail in connection with , A-G, and .",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIGS. 2A","FIGS. 2A","FIG. 2A"],"b":["2","2","202","204","204","204","204","204","204","2","2","202","204","202","204","202"]},"In , the body B (including seven numeric characters) of the input string  is replaced by eight alphanumeric, characters in the tokenized string . Alternatively, in , the body  B of the input string  is replaced by seven special characters (e.g. asterisks ******* in this case) in the tokenized string .","The tokenized strings can simply be returned to the corporate applications . For example, in a human resource customer service application handling social security numbers, an customer service representative may only require access to the last four digits for processing certain customer requests. Thus, the representative may be allowed to view only the tokenized strings","Preserving the format may allow existing business systems to process the tokenized strings in the same manner as the original input strings, thus requiring very little or no change in the business system architecture.","It will be clear to those skilled in the art that the size of these fields may vary depending on system requirement without departing from the scope of this disclosure. Further, although the present example only allows selection of the lengths of the head and tail portions of a string, in other implementations, any portion of the string may be selected for replacement by another string. Further, tokenization may be performed with any combination of numeric, alphabetic, or special characters in other implementations. The string that replaces the remaining characters (characters in the string other than the ones being retained) may be generated through sequential indexing, random indexing, or based on a predetermined algorithm.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 3A","b":["302","302"]},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 3B","b":["304","128"]},"The interface  shows that a customer purchased a printer on Dec. 21, 2010; this information is stored as transaction information related to the tokenized string. Subsequently, on Feb. 25, 2011, the customer purchased paper and an ink cartridge from the store, and these transactions are also stored as transaction information. The store can now utilize the transaction information associated with the tokenized string for business analysis, determining for example, the average time after which customers return for ink or paper, after purchasing a printer.","Such business analysis can be performed without the application having access to the credit card numbers of customers. Even if this application is compromised, the sensitive credit card information cannot be accessed and remains protected in the secure database .","With tokenization, the method used to generate the tokenized values may also provide referential integrity. That is, the system can ensure that each input string corresponds to a unique tokenized string. This is applicable, for example, while monitoring transactions on a credit card, where the transactions are associated with the tokenized string corresponding to the credit card. In this case, it may be preferable that the tokenized string is linked with only one credit card number and vice versa. Thus, the tokenization of input strings enables referential integrity to be maintained, which facilitates certain business analytics.","The following sections describe exemplary methods for carrying out one or more embodiments of the present disclosure. The methodology described herein is generally intended to describe various features and functionality of various system components described previously. The order in which the method steps are described is not intended to be construed as a limitation, and any number of the described method blocks can be combined in any order to implement the method, or an alternate method. Additionally, individual blocks may be deleted from the methods without departing from the spirit and scope of the subject matter described herein. Furthermore, the method can be implemented in any suitable hardware, software, firmware, or combination thereof.",{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIGS. 4A and 4B","FIG. 1","FIGS. 5A-5D"],"b":["400","400","100","10","10"]},"When an input string of sensitive data is received from a client, it is tokenized based on the tokenization strategy. It should be understood here that the client might be an individual operating an application, such as the ones described in . At step , an input string of sensitive data is received from a client, and a request for tokenization of the input string is made. Critical to the security of such requests is ensuring that the client applications have the appropriate authority to make the requests, preventing rogue client applications and associated persons from gaining access to the sensitive information. The user is authenticated (described further in , A-G, and ) by the security component  at step  and then, the method  applies the tokenization strategy to the input string (step ) to generate a tokenized string, as discussed in connection with  and A-B. At step , the tokenized string is provided for storage to the secure database  and subsequent access. The secure database  stores the tokenized string and the input string, with a mapping between the two. The tokenized string may be returned to the client for replacing the input string in the client's applications.","Further, the input string may be encrypted before storage. Encryption keys are centrally managed (including functions such as key generation, rotation, revocation, etc.) and securely distributed to each requiring system where decryption is required by the key manager . Moreover, the secure database  can include a key profile, which provides a pointer to the encryption key used to encrypt a particular input string, as will be discussed in more detail in .","The method  also supports a lookup function for allowing a client to determine whether a particular tokenized string already exists within the secure database , as will be described in more detail in . At step , the method  receives a lookup request from the client. The request may include a tokenized string for which the lookup is to be performed, or the request may include the sensitive data itself so as to determine whether a token for that particular sensitive data is already extant in the database. Stated in other words, and by way of example, a client process can submit a credit card number (sensitive data) and ask for a lookup to determine whether a token already exists or not for that credit card number. According to one aspect of the invention, the system will not tokenize the sensitive data if a token does not exist, but will instead return a message noting that no token exists for this particular sensitive data. According to another aspect, the system will return the previously-created tokenized data string corresponding to the sensitive data.","The method  looks up the secure database  to determine whether the tokenized string is present (step ). Then, the connector A leads to step , where if not tokenized string is identified, the request is rejected at step , and the method  may display a rejection message to the client (step ). If however, the tokenized string is identified within the secure database , given that the requesting client is an authorized client, the tokenized string is returned to the client at step .","Once the sensitive data is stored securely, authorized clients may retrieve it for application in business processes, for example. The retrieval of an input string corresponding to a tokenized string will be discussed in more detail in . At step , the security component  receives a request for retrieving the input string corresponding to a tokenized string. The security component  determines whether the requesting client is authorized, at step  and also determines the client's access rights, at step . If the access rights are sufficient, the method  looks up the secure database  at step  and retrieves the corresponding input string at step . The input string may be in encrypted form in the secure database , and may require decryption. The decrypted input string is then returned to the requesting client.","It should be noted that the method  could execute within an enterprise computer system or through cloud hosting, which will be described in more detail in connection with .","Access rights may be defined individually for a user, which may be an individual or an application. Alternatively, user groups may be defined, where each group has certain access or authorization rights, which apply to each user within the group. In one embodiment, access control may be hierarchical in nature, where a top-level supervisor has access to the secure database , while lower level personnel have access to only the tokenized data. Further, access may require verification, through for example, a user name, and password. Access control and authorization are described in more detail in connection with , A-G, and .","Consider an example of a loss prevention application that identifies potential fraud, in case a credit card number is used for two transactions in two distant locations within a short period of time. The users of the application will have access to only the tokenized strings and will compare the tokenized strings for fraud detection. Only a few users, belonging to higher management, may have access to the secure database . Thus, fraud detection may be performed even though most application users no longer have access to the credit card numbers. Employing the embodiments of the present disclosure, such applications can use tokenized strings instead of the actual credit card numbers for fraud detection, while the sensitive credit card numbers are stored in the secure database .",{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIGS. 5A-5D","b":["500","502","500","504","506","500"]},"In order to validate the authorization of a user, the method  may employ various suitable factors including IP address and IP address range, client \u2018API key\u2019 or certificate, role validation and time validation. It will be apparent to those of skill in the art that these factors are not limiting and are purely illustrative in nature. At step , the method  accepts and validates the API key from the user that identifies requests originating from a client application. The method  also accepts the originating IP address or hostname from the user and confirms whether the user has a valid IP address and\/or valid IP range or hostname (step ). At steps  and , the method  accepts the name of the script that will communicate with the tokenization component , and it accepts the email address of the user executing the script, respectively.","Connector A leads to step  of , where API permissions are displayed to the user. Permissions for actions that clients may execute are defined; for example, a valid client may only perform the lookup function, as opposed to another client, which may tokenize data or retrieve sensitive information from the secure database . Examples of other permissions will be shown in .","At step , the user may select to perform a single request function or a bulk request function. If the client application needs to perform a function on a unit of data, single request processing is assigned to the script, at step . Alternatively, the user may select bulk processing, which would assign bulk request processing to the script at step . Bulk processing allows, for example, multiple input strings to be submitted for tokenization at a time, saving the time required for making individual requests. This may be especially suitable for the initial tokenization process of a system (e.g., historical data) as well as ongoing business operations that require this functionality (e.g. end of day settlement processing). At step , the tokenization function is selected from the list of functions and at step , the tokenization function is assigned with the script.","Connector B leads to step  of , where other constraints are defined, for example, clients may be validated based on the time of their request. For instance, a retail store may only be able to make valid request between 9 am and 9 pm PST and so, requests outside this period should not be accepted and are considered invalid. It will be clear to those of skill in the art that other constraints may also be added for validation purposes.","At step , the user selection of an encryption algorithm for encryption of the input string is accepted. Employment of multiple keys may be desired within a system for added security, and standardized key rotation requirements known in the art may necessitate that multiple keys be used. The method  may set effective dates for encryption key usage and expiration dates for these encryption keys. When encryption is to occur, the key manager  determines which key is currently active based on the data being encrypted and the key associated with the current date, shown in more detail in . At step , the method  accepts details such as effective or expiry dates of encryption keys.","At step , the method  accepts configuration of the tokenization strategy and saves the configuration at step . Further, at step  the user enters an input string, which is validated by the method . Some examples of this configuration and validation are provided in .","Connector C leads to step  of , where a lookup function is performed by the method  in the secure database  to determine whether the tokenized string for the input string already exists (step ). If the tokenized string is found, it is returned to the client application at step . If not, the method  applies the tokenization strategy at step . The input string may be encrypted using the encryption algorithm before storage. In this case, the key manager  looks up the corresponding encryption key and encrypts the input string (step ). At step , the tokenized string and the encrypted input string are stored in the secure database  with a mapping between the two. The method  proceeds to step , where the tokenized string is returned to the client application and subsequently, the tokenization is logged at step  within the token management system  or an external log management system.",{"@attributes":{"id":"p-0095","num":"0094"},"figref":["FIGS. 6A and 6B","FIGS. 5A-5D"],"b":["600","400","602","600","604","606"]},"At step , the method  looks up the secure database  for a tokenized string corresponding to the input string. Connector A leads to , where if the tokenized string is found, at step , it is returned to the client application at step . Otherwise, the method  displays a message informing the user of the client application that the tokenized string is not present in the secure database  at step . After steps  or , the method  logs the lookup operation at step  within the token management system  or an external log management system.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIGS. 7A and 7B","FIGS. 5A-5D"],"b":["700","128","702","700","704","706","708","710","700","714","700","716","700","708","710","700"]},"If the user does have sufficient access rights (step ), the method  performs database lookup at step , as described in connection with . If the corresponding input string is found, the method  proceeds to step . Here, the input string may be stored in encrypted form. In this case, at step , the encryption is key is looked up through the key profile (as described in , B, and ). If the corresponding input string is not found, the method  may display a message informing the user that the input string no longer exists in the secure database .","At step , the input string is decrypted and at step , the method  returns the decrypted string to the client application. The method  may return either the original input string in decrypted form or may return a masked form of the input string (for example, the body of the input string being replaced by \u2018*\u2019) based on the user's access rights. For instance, is the user is a supervisor of a store, their access rights may allow access to the original input string, while for a lower level employee, the access may be limited to the masked form of the input string. At step , the retrieval operation is logged within the token management system  or an external log management system.","It should be noted that the described retrieval operations can be processed in bulk, in a manner similar to that described in connection with .",{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 8A","b":"800"},{"@attributes":{"id":"p-0102","num":"0101"},"figref":["FIG. 8B","FIG. 8A"],"b":"800"},{"@attributes":{"id":"p-0103","num":"0102"},"figref":"FIG. 9","b":["900","128","902","800","900","906","800","908","906","900","904","904","900"]},"The exemplary screens described below may form part of the user interface . Further, it will be understood that the exemplary screens do not limit the scope of the claimed invention, but are included merely for illustrative purposes.",{"@attributes":{"id":"p-0105","num":"0104"},"figref":["FIG. 10A","FIG. 5C"],"b":["1000","1000","1000"]},{"@attributes":{"id":"p-0106","num":"0105"},"figref":["FIG. 10B","FIG. 2C"],"b":["1000","1000","1002","1004","1006","1008","1010"]},{"@attributes":{"id":"p-0107","num":"0106"},"figref":["FIG. 10C","FIGS. 1-5D"],"b":["1000","1000","1012","1014","1016","1018","1020","1022"]},"It should be noted that no mathematical relationship may exist between the input string and the tokenized string, preventing derivation of the input string from the tokenized string, as may be possible with encrypted or hashed values.",{"@attributes":{"id":"p-0109","num":"0108"},"figref":["FIG. 10D","FIGS. 5A-5D"],"b":["1000","1024","1026","1028","1030","1032","1034","118","1036"]},"It is clear that the length of these fields may vary depending on system requirements, without departing from the scope of this disclosure. Further, although the present example allows selection of head and tail portions of a string, other implementations may select any portion of the string for tokenization. Further, any combination of numeric, alphabetic, or special characters may be used for tokenization.",{"@attributes":{"id":"p-0111","num":"0110"},"figref":["FIGS. 10E-10G","FIGS. 5A-5D","FIG. 10E","FIG. 4B"],"b":["120","1000"]},{"@attributes":{"id":"p-0112","num":"0111"},"figref":"FIG. 10F","b":["1000","1000"]},{"@attributes":{"id":"p-0113","num":"0112"},"figref":"FIG. 10G","b":["1000","1000","128"]},"For many processes within a business, individuals do not need access to the original input string of sensitive data, but rather require viewing only a portion of the original input string. For instance, to validate a credit card or a social security number, many employees (for example, within a customer service business unit) only need to view the last four digits of the number. Therefore, systems that once housed either original input string values or their encrypted forms, need only house tokenized versions of the input strings, thus greatly reducing the risk if those systems are compromised. Furthermore, many of the systems, which are recipients of the tokenized strings, no longer have authorization to exchange the tokenized string for the original input string and therefore, risk of unauthorized access is reduced significantly for those systems.",{"@attributes":{"id":"p-0115","num":"0114"},"figref":"FIG. 11","b":["1100","1100","100"]},"An input string of sensitive data is received at a client application in connection with a transaction, for example, when a credit card is swiped at a merchant site. At step , the client application requests a lookup in the secure database  (described in ) to determine whether a tokenized string already exists for the input string. If at step  it is determined that the tokenized string exists, the client application receives the tokenized string from the secure database  at step , and stores it in associated tables in the client application at step , as shown in . If however, the tokenized string is not present in the secure database , the input string is sent to the token management system  for tokenization at step , as described in . The client application then receives the tokenized string at step  and stores it in the associated tables at step .","Later, at step  the client application can request retrieval of the input string, from the secure database , corresponding to the tokenized string. If the client application and the requesting user are determined to have sufficient authorization and access rights (determined at step ), the input string is retrieved from the secure database  and provided to the client application (step ), as described in . Otherwise, a simple lookup function may be performed by invoking process  (as described in  above) and the client application may be informed whether the input string is present in the secure database .","The system  may be implemented through cloud hosting, for secure access and utilization of sensitive data, according to one of the aspects of the present disclosure.  depicts an exemplary method  for execution within a cloud-hosted system, where the tokenization component , the key manager , and the secure server  are present on a cloud network implemented through cloud hosting. The client site includes the security component , the front-end interface , and the user interface  through which users access all the components of the cloud-hosted system. It will be understood by those in the art that the components of the system  present on the cloud network and the client site may vary. For example, the security component  may be hosted on the cloud network instead.","The steps of the method  that are similar to the steps of the methods described in the present disclosure are not repeated here. As the sensitive data is stored outside enterprise boundaries, requiring transmission of the sensitive data between the client site and the cloud network, the cloud-hosted system may be augmented with another security layer, referred to as \u2018quorum-based authorization\u2019. It will be clear to those in the art that although this security layer is described in connection with a cloud-hosted system, it may be applied to any system such as an enterprise computer system.",{"@attributes":{"id":"p-0120","num":"0119"},"figref":"FIG. 12"},"At step , the method  defines a certain number of users, on the client site as well as the secure server  site, authorized to perform an administrative function. Further, the method  defines a criterion (step ) requiring a minimum number of the authorized users (at the client site as well as the secure server  site) to provide permission for performing the administrative function. For instance, the method  defines five users on the client site and five users on the secure server  site authorized to perform an administrative function. Further, of the ten authorized users, the method  defines that a minimum of three users from the client site and two users from the secure server  site must provide permission for performing the administrative function. In one implementation, the authorized users may provide permission by presenting a username and password.","At step , the method  receives a request for performing the administrative function and then at step , determines whether the defined criterion is met. If the criterion is not met, the request is denied at step ; otherwise, at step , the method  performs the requested administrative function.","Systems and methods disclosed herein may be implemented in digital electronic circuitry, in computer hardware, firmware, software, or in combinations of them. Apparatus of the claimed invention can be implemented in a computer program product tangibly embodied in a machine-readable storage device for execution by a programmable processor. Method steps according to the claimed invention can be performed by a programmable processor executing a program of instructions to perform functions of the claimed invention by operating based on input data, and by generating output data. The claimed invention may be implemented in one or several computer programs that are executable in a programmable system, which includes at least one programmable processor coupled to receive data from, and transmit data to, a storage system, at least one input device, and at least one output device, respectively. Computer programs may be implemented in a high-level or object-oriented programming language, and\/or in assembly or machine code. The language or code can be a compiled or interpreted language or code. Processors may include general and special purpose microprocessors. A processor receives instructions and data from memories. Storage devices suitable for tangibly embodying computer program instructions and data include forms of non-volatile memory, including by way of example, semiconductor memory devices, such as EPROM, EEPROM, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and Compact Disk. Any of the foregoing can be supplemented by or incorporated in ASICs (application-specific integrated circuits).","The specification has described systems and methods for secure access and utilization of sensitive data. The foregoing description of the exemplary embodiments has been presented only for the purposes of illustration and description and is not intended to be exhaustive or to limit the disclosure to the precise forms disclosed. Many modifications and variations are possible in light of the above teaching.","The embodiments were chosen and described in order to explain the principles of the systems and their practical application to enable others skilled in the art to utilize the systems and various embodiments and with various modifications as are suited to the particular use contemplated. Alternative embodiments will become apparent to those skilled in the art to which the present disclosure pertains without departing from their spirit and scope. Accordingly, the scope of the present inventions is defined by the appended claims rather than the foregoing description and the exemplary embodiments described therein."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate one or more embodiments and\/or aspects of the disclosure and, together with the written description, serve to explain the principles of the disclosure. Wherever possible, the same reference numbers are used throughout the drawings to refer to the same or like elements of an embodiment. The drawings are illustrative in nature and are not necessarily drawn to scale.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIGS. 2A","b":["2","2"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIGS. 4A and 4B"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIGS. 5A-5D"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIGS. 6A and 6B"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIGS. 7A and 7B"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 8A"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 8B","FIG. 8A"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 10A","FIG. 5C"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 10B","FIG. 2C"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 10C","FIGS. 1-5D"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 10D","FIGS. 5A-5D"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 10E"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 10F"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 10G"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
