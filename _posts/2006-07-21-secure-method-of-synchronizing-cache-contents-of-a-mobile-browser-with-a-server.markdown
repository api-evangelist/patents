---
title: Secure method of synchronizing cache contents of a mobile browser with a server
abstract: A method of securely synchronizing cache contents of a mobile browser with a server includes initiating a session between the browser and server, including transmission of browser state information regarding the cache contents and an authentication key to the server; maintaining a record of data sent from the server to the browser for storage in the cache; maintaining a record of the state information regarding the cache contents transmitted from the browser to the server; and transmitting data requests from the browser to the server, in response to which the server uses the key as a seed generation function and accesses each the record of data and returns only data that does not already form part of the cache contents, and wherein the data includes a result of a hash of data generated by the generation function for authentication by the browser before updating the cache contents with the data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08195763&OS=08195763&RS=08195763
owner: Research In Motion Limited
number: 08195763
owner_city: Waterloo, Ontario
owner_country: unknown
publication_date: 20060721
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["COPYRIGHT NOTICE","FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["A portion of this specification contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyrights whatsoever.","This specification relates generally to mobile data communication systems, and more particularly to a method for securely synchronizing cache contents of a mobile Internet browser with a proxy server.","Mobile communication devices are becoming increasingly popular for business and personal use due to a relatively recent increase in number of services and features that the devices and mobile infrastructures support. Handheld mobile communication devices, sometimes referred to as mobile stations, are essentially portable computers having wireless capability, and come in various forms. These include Personal Digital Assistants (PDAs), cellular phones and smart phones.","It is known in the art to provide Internet browser functionality in such mobile communication devices. In operation, a browser user-agent in the handheld mobile communication device issues commands to an enterprise or proxy server implementing a Mobile Data Service (MDS), which functions as an acceleration server for browsing the Internet and transmitting text and images to the mobile device for display. Such enterprise or proxy servers generally do not store the state of their clients (i.e. the browser user-agent), or if they do, the state that is stored is minimal and limited to HTTP state (i.e. cookies). Typically, such enterprise or proxy servers fetch and transmit data to the browser user-agent when the browser makes a data request. In order to improve the performance of the browser on the mobile device, some enterprise or proxy servers fetch all the data required in order to fulfill the data request from the browser, aggregate the fetched data, and transmit the data to the device browser. For instance, if a HyperText Markup Language (HTML) page is requested, the enterprise or proxy server fetches any additional files referenced within the HTML page (e.g. Images, inline CSS code, JavaScript, etc.). Since the proxy server fetches all the additional files within the HTML file, the device does not have to make additional data requests to retrieve these additional files. Although this methodology is faster than having the device make multiple requests, the proxy server nonetheless has to send all of the data again if the site is later revisited. This is because the proxy server has no knowledge of the device caches (e.g. caches that are saved in persistent memory, for different types of data such as a content cache to store raw data that is cached as a result of normal browser activity, a channel cache containing data that is sent to the device by a channel or cache push, and a cookie cache containing cookies that are assigned to the browser by visited Web pages). For example, if a user browses to CNN.com, closes the browser to perform some other function (e.g. place a telephone call or access e-mail messages, etc.) and then later accesses the CNN.com Web site (or follows a link from CNN.com to a news story), the banner \u201cCNN.com\u201d will be transmitted from the MDS to the device browser each time the site is accessed, thereby consuming significant bandwidth, introducing delay, etc.","It is known in the art to provide local file caching. One approach is set forth in , published Sep. 13, 1995, by the GloMop Group, wherein PC Card hard drives are used as portable file caches for storing, as an example, all of the users' email and Web caches. The user synchronizes the file caches and the proxy server keeps track of the contents. Mobile applications (clients) are able to check the file caches before asking for information from the proxy server by having the server verify that the local version of a given file is current.","In general, there is provided a secure method of synchronizing cache contents of a mobile browser with a server, comprising initiating a session between the browser and server, including transmission of browser state information regarding the cache contents and an authentication key to the server, maintaining a record of data sent from the server to the browser for storage in the cache, maintaining a record of the state information regarding the cache contents transmitted from the browser to the server; and transmitting data requests from the browser to the server, in response to which the server uses the authentication key to generate a message authentication code that includes a cryptographic hash of data, and accesses each record of data and returns only data that does not already form part of the cache contents, and wherein the returned data includes a result of a hash of data generated using the authentication key for authentication by the browser before updating the cache contents with the data.","The method set forth herein has specific application to a secure system for communicating information between an enterprise or proxy server and a mobile Internet browser using an HTTP-like protocol, referred to herein as the Browser Session Management (BSM) protocol, that provides a control channel between the proxy server and the mobile device browser, so that the mobile device browser can communicate to the proxy server what data the mobile device browser has cached (from previous browsing). The BSM protocol is an \u201cout of band\u201d protocol in that BSM communications are in addition to the usual stream of HTTP requests from the mobile device browser to the proxy server, and provides \u201cmetadata\u201d relating to cache contents. This metadata is used by the proxy server when handling subsequent requests from the mobile device browser, to determine what data to send to the mobile device browser, thereby significantly reducing data transfer on subsequent requests relative to the prior art methodology discussed above.","Because the proxy server is aware of what the mobile device browser has stored in its cache, the amount of data sent to the mobile device browser may be reduced, thereby increasing the performance of the mobile device browser and reducing operational cost. For example, if after the first request the CNN.com banner is cached and if the proxy server \u201cknows\u201d that the information has been cached then there will be no need to send the CNN.com banner to the mobile device browser upon subsequent visits to the CNN web site.","According to another aspect, messages from the device to the proxy server contain hash values of different portions of documents (rather than the actual URLs) which are used by the proxy server to detect state changes in the device and utilize the information in preparing documents for transmission to the device. In another embodiment, the device sends hashes of the actual data of the portions (i.e. the actual image data, JavaScripts, StyleSheets, etc.) and the proxy server compares the received and stored data hashes for the portions to determine if the device already has the data for a particular portion (e.g. previously retrieved with a different URL), in which case the proxy server sends a response to the device with a header that indicates the device already has the data that is to be used for that portion. A person of skill in the art will appreciate that a one-way hash function transforms data into a value of fixed length (hash value) that represents the original data. Ideally, the hash function is constructed so that two sets of data will rarely generate the same hash value. Examples of known hash functions include MD2, MD5 and SHA-1.","According to another aspect, each component of the document downloaded from the server is authenticated by the device before adding such portion of the document to the device cache. This prevents a third party from creating its own document or document portion, such as an image, sub-frame or JavaScript, and sending it to the device for injecting cache entries that could be used to extract personal information from the user.","In contrast to the prior art GloMop caching methodology discussed above, the exemplary method set forth herein synchronizes the cache contents when the mobile device browser connects to the proxy server in order to initiate a session and keeps track of changes to the cache via knowledge of what data has been sent to the mobile device browser in combination with state information periodically received from the mobile device browser identifying what has actually been cached. Also, as set forth in greater detail below, the proxy server uses this cache knowledge to determine what to send back to the mobile device browser. In contrast, the prior art GloMop methodology does not contemplate sending any state information to the proxy server for identifying what has actually been cached in the device. Moreover, the prior art GloMop approach first checks the local cache, and then queries the proxy server to determine whether a particular data item in the cache is current or not. According to the GloMop prior art, the proxy server does not use its own knowledge of the mobile device browser cache to determine what to send back to the mobile device browser.","Additional aspects and advantages will be apparent to a person of ordinary skill in the art, residing in the details of construction and operation as more fully hereinafter described and claimed, reference being had to the accompanying drawings.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":["1","9","1","3","5","9","7","8","1","7","9","11","9","10","1","9","10","9","13","15","12"]},"In terms of Web browsing functionality, the device  communicates with enterprise or proxy server  using HTTP over an IP protocol optimized for mobile environments. In some embodiments, the device  communicates with the proxy server  using HTTP over TCP\/IP, over a variant of TCP\/IP optimized for mobile use (e.g. Wireless Profiled TCP), or over other, proprietary protocols. For example, according to the communications protocol of , HTTP is run over Internet Point-to-Point Protocol (IPPP) and an encrypted Global Messaging Exchange (GME) channel over which datagrams are exchanged to transport data between the device  and proxy server . The GME datagrams are 64Kbit in size whereas the wireless network  can only transport UDP datagrams with payloads up to 1500 bytes. Therefore, a Message Delivery Protocol (MDP) is used to separate the GME datagrams into one or more MDP packets, each of which is less than 1500 bytes (default size 1300 bytes), which are transported over UDP\/IP to and from the relay  which, in turn communicates with the proxy server  via Server Relay Protocol (SRP)\/TCP\/IP. The MDP protocol includes acknowledgements, timeouts and re-sends to ensure that all packets of the GME datagram are received.","The communication between the device  and proxy server  is optionally encrypted with an encryption scheme, such as Triple Data Encryption Algorithm (TDEA, formerly referred to as Triple Data Encryption Standard (Triple DES)), as is known in the art. The proxy server  enables Internet access, preprocesses and compresses HTML and XML content from the Web server  before sending it to the device , transcodes content type, stores HTTP cookies on behalf of the device , and supports certificate authority authentications, etc.","In response to a request from the device browser, the proxy server  retrieves content from Web server  and creates a custom document containing both images to be displayed on the device and data in the form of compressed versions of requested portions of the document. The document is preferably of \u201cmulti-part\u201d format to improve transmission to and processing efficiency within the device . Specifically, in order to display composite Web pages (i.e. pages composed of a main WML or HTML page and one or more related auxiliary files, such as style sheets, JavaScript files, or image files) the device browser is normally required to send multiple HTTP requests to the proxy server . However, according to the multi-part generation feature, the proxy server  posts all necessary parts of a composite Web page in a single bundle, enabling the browser to download all the required content with a single request. The header in the server response identifies the content as a multi-part bundle (e.g. Multi-Purpose Mail Extensions (MIME)\/multipart, as defined by RFC 2112, E. Levinson, March 1997).","In order to indicate device browser state information to the proxy server , three transitional state messages are defined herein, as follows: CONNECT, UPDATE and DISCONNECT, each of which conforms to the exemplary BSM protocol. As shown in , the BSM communications protocol is identical to the protocol of  except that the conventional HTTP layer of the protocol stack is replaced by an HTTP-like BSM layer.","The CONNECT transitional message creates a new session with a connection identifier carried in the payload, device information and state data (e.g. current cache and device information) in the form of a set of hash functions for use by the proxy server  in preparing a response. Specific care is taken not to identify to the proxy server  what cookies or cache entries are contained on the device . Only hash values of the state data are sent to the proxy server  in order to protect the identity of state data on the device .","The CONNECT message also contains a unique authentication key for generating a MAC (Message Authentication Code) using a Hash Message Authentication Code (HMAC) algorithm that incorporates a cryptographic hash function in combination with the authentication key. Each portion of a multi-part document from the proxy server  also contains an HMAC, generated using the authentication key, that is used for authenticating the proxy server  before adding that portion to the device cache. This prevents a third party from creating its own multi-part document and sending it to the device  for injecting cache entries that could be used to extract personal information from the user.","Upon receipt of the CONNECT message, the proxy server  uses the state information to regulate or control the transmission of content retrieved from Web server  (step ) to the device . One example of an application where this information can be used is when the proxy server  is pre-fetching images, inline Cascading Style Sheets (CSS), JavaScript, and the like for an HTML document. If the proxy server  already knows that the device  has the image, inline CSS, or JavaScript document, there is no need for resending the documents.","The UPDATE transition message notifies the proxy server  of changes that have occurred on the device  since the last CONNECT message or the last UPDATE message, between the device  and proxy server  (e.g. new cache entries added because of a push, or invoking the \u201cLow Memory Manager\u201d (LMM) or other memory-space preservation policies on the device and purging items from the cache).","The DISCONNECT transition message notifies the proxy server  that the device  will no longer send any more messages using the connection identifier specified in the payload. The proxy server  can then de-allocate any memory reserved for the connect session between the device  and proxy server . Upon receiving the disconnect message, the proxy server  deletes any session cookies for the device  (if it is processing cookies) along with state information. Receiving a request on the identified connection after the DISCONNECT has been received, and before any subsequent CONNECT message has been received, is defined as an error.","Since state is indicated from the device  to the proxy server , and state may be stored in transient memory within proxy server , a mechanism is provided for the proxy server  to return to the device  a message indicating that the session the device is trying to use is not valid. Once this occurs, the device  issues a new CONNECT message and establishes a new session with the proxy server , and re-issues the original request.","The data protocol set forth herein is similar to HTTP in order to reduce complexity and to reuse code that already exists for the HTTP protocol. Thus, data transmission according to this protocol begins with a STATE keyword; followed by a BSM (Browser Session Management) protocol identifier and a \u201cContent-Length\u201d header. The end of the \u201cheaders\u201d is indicated by a double CRLF (a sequence of control characters consisting of a carriage return (CR) and a line feed (LF)), much like HTTP. After the double CRLF pair (i.e. \\r\\n) a WBXML (WAP Binary Extensible Markup Language) encoded document is inserted as the message payload. The WBXML document is later decoded using a DTD (Document Type Definition) and codebook, as discussed in greater detail below. The indication of the protocol version refers to what version of the DTD to validate the request against (ie. BSM\/1.1 stipulates using version 1.1 of the DTD). It should be noted that WBXML encoding of the contents of BSM messages is set forth to allow for more efficient processing of the BSM message at the device , but that in alternate embodiments, the BSM message may be formatted as normal (textual) XML.","The following is an example communication using the protocol according to the preferred embodiment:",{"@attributes":{"id":"p-0033","num":"0032"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CONNECT BSM\/1.0\\r\\n"]},{"entry":[{},"Content-Length: 40\\r\\n"]},{"entry":[{},"\\r\\n"]},{"entry":[{},"<WBXML Encoded document of length 40 bytes>"]},{"entry":[{},"BSM\/1.0 200\\r\\n"]},{"entry":[{},"r\\n"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In the foregoing, the first four lines form the CONNECT message from the device  to the proxy server , and the last two lines are the response from the proxy server .","An exemplary XML document, is as follows:",{"@attributes":{"id":"p-0036","num":"0035"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d?>"},{"entry":"<!DOCTYPE bsm PUBLIC \u201c-\/\/ DTD BSM 1.0\/\/EN\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2002\u2003\u201chttp:\/\/www.something.com\/go\/mobile\/BSM\/bsm_1.0.xml\u201d>"},{"entry":"<bsm id=\u201c2\u201d hmac=\u201d12345678901234567890\u201d>"},{"entry":"<cache>"},{"entry":"<size>123012<\/size>"},{"entry":"<entry urlHash=\u201cFEEDDEED01\u201d dataHash=\u201cFDDEDEED11\u201d"},{"entry":"etag=\u201cSomeEtag\u201d "},{"entry":"expiry=\u201c256712323\u201d\/>"},{"entry":"<\/cache>"},{"entry":"<device>"},{"entry":"<version>4.0.1.123<\/version>"},{"entry":"<memfree>12342342<\/memfree>"},{"entry":"<\/device>"},{"entry":"<\/bsm>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In the example, the state data includes the URL of an HTML page within the device cache. It will be noted that the XML document payload includes a connection identifier (i.e. bsm id=\u201c2\u201d), a value indicating when the document was last modified (i.e. etag=\u201cSomeEtag\u201d), a page expiry (i.e. expiry=\u201c256712323\u201d), and hash values for a URL (i.e. entry urlHash=\u201cFEEDDEED01\u201d) and a data attribute (i.e. entry dataHash=\u201cFDDEDEED11\u201d) rather than transmitting the actual URL and data attribute themselves. Thus, as shown in , the hashes of the URL and data attribute of the cached page are sent to the proxy server  in the CONNECT string (step ). The proxy server  then fetches the requested page from Web server  (step ), computes hashes of device browser state data (step ) and data from the Web server  (step ), and compares the hashes of the URL and data attribute of the requested page with the hashed URL and data attribute of the cached page, and also compares the time stamps\/expiration information (step ) in order to determine whether the cached page is current. Specifically, in response to the proxy server  retrieving a portion from the Web server , it computes the dataHash and urlHash of that portion and performs a comparison to the dataHashes and urlHashes of the entries it has saved. There are three cases.","In the first case, if both the dataHash and the urlHash of the retrieved portion match the dataHash and urlHash of a cache entry that the proxy server  knows the device  has, then the server  simply omits this portion from the response, as the device  still has a valid entry in its cache.","In the second case, if the dataHash of the retrieved portion matches the dataHash of a cache entry that the proxy server  knows the device  has, but the urlHash of the retrieved portion does not match the urlHash of that cache entry, the server  inlines this updated portion in the combined response to the device . However, because the dataHash matches a dataHash of an entry that already exists on the device , the inlined response does not include the actual data, but instead only includes a new HTTP header whose value is the new dataHash. When the device  receives this inlined portion, it detects the special header, looks for the cache entry with that dataHash, and either creates or updates its cache entry for that URL with the data corresponding to the dataHash by copying that data from the other cache entry (the cache for device  is modified to have two indexes, one to retrieve cache entries by URL, the other to retrieve cache entries by dataHash). Finally, if the proxy server  already has a cache entry for the urlHash, it updates that entry with the new dataHash; otherwise it creates a new entry for this portion.","In the third case, if the dataHash of the retrieved portion does not match the dataHash of any of the cache entries that the proxy server  has received from the device  in the BSM messages, then the server inlines the entire portion (headers and new data), since this portion has been updated and the device  does not contain the updated value anywhere in its cache.","Although not indicated in , it will be appreciated that each inline part to be added to a document to be displayed at the device  is fetched. If the response code from the proxy server indicates a \u201c304\u201d (step ), then the part (i.e., the \u201c304\u201d response) is written as a block in the multipart document. On the other hand, if the proxy server  returns a \u201c200\u201d (step ), then the hash compare operation is performed, and the portion is only included in the multipart document if the hash compare function indicates it is not already on the device .","An exemplary DTD, according to the preferred embodiment, is as follows:",{"@attributes":{"id":"p-0043","num":"0042"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<!ELEMENT","bsm (cache?, device)>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ATTLIST","bsm",{},{}]},{"entry":[{},{},"id","NMTOKEN","#REQUIRED"]},{"entry":[{},">",{},{},{}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ELEMENT","cache (size, (entry)+)>"]},{"entry":[{},"<!ATTLIST","cache"]},{"entry":[{},{},"action (add|remove|remove_all|quick_add) \u201cadd\u201d"]},{"entry":[{},">",{}]},{"entry":[{},"<!ELEMENT","entry EMPTY>"]},{"entry":[{},"<!ATTLIST","entry"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"urlHash","CDATA","#REQUIRED"]},{"entry":[{},"dataHash","CDATA","#REQUIRED"]},{"entry":[{},"etag","CDATA","#IMPLIED"]},{"entry":[{},"expiry","NMTOKEN ","#IMPLIED"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"size","NMTOKEN #IMPLIED"]},{"entry":[{},"last-modified","NMTOKEN #IMPLIED"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},">",{}]},{"entry":[{},"<!ELEMENT","size (#PCDATA)>"]},{"entry":[{},"<!ELEMENT","device (version, memfree)>"]},{"entry":[{},"<!ELEMENT","version (#PCDATA)>"]},{"entry":[{},"<!ELEMENT","memfree (#PCDATA)>"]},{"entry":[{},"<!ELEMENT","hmac (#PCDATA)>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Element\/Code"]},{"entry":[{},"HMAC 12"]},{"entry":[{},"Attribute\/Code"]},{"entry":[{},"size 9 (instead of action)"]},{"entry":[{},"lastModified 10"]},{"entry":[{},"actionAdd 11"]},{"entry":[{},"actionRemove 12"]},{"entry":[{},"actionRemoveAll 13"]},{"entry":[{},"actionQuickAdd 14"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Finally, an exemplary codebook, is as follows:",{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Element","Code"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Session","5"]},{"entry":[{},"Cache","6"]},{"entry":[{},"Size","7"]},{"entry":[{},"Entry","8"]},{"entry":[{},"Device","9"]},{"entry":[{},"Version","10"]},{"entry":[{},"MemFree","11"]},{"entry":[{},"HMAC","12"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0046","num":"0045"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Attribute","Code"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Id","5"]},{"entry":[{},"UrlHash","6"]},{"entry":[{},"dataHash","7"]},{"entry":[{},"ETag","8"]},{"entry":[{},"Expiry","9"]},{"entry":[{},"Action","10"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"As is well known in the art, the codebook is used as a transformation for compressing the XML document to WBXML, wherein each text token is represented by a single byte from the codebook.","As discussed above, the proxy server  transmits multi-part documents in a proprietary format of compressed HTML, interspersed with data for images and other auxiliary files (which may or may not be related to the main HTML Web page). However, in a departure from conventional HTML, each document part may also include a response code (e.g. \u201c200\u201d for OK, or \u201c304\u201d for \u201cnot modified\u201d to indicate that the specified document part has already been cached in the device ). This may be used for selective downloading of document parts rather than entire documents and for indicating when a part (e.g. image) is about to expire. This is useful, for example, when one Web page links to another page containing one or more common elements.","Of course, certain device requests (e.g. page refresh) will always result in a full document download, irrespective of device state information stored in the proxy server .","It is contemplated that the inclusion of response codes may be used by heuristic processes within the proxy server  to learn user behaviour and modify downloading of documents based on tracking the history of certain changes reflected in the hash value (e.g. the server  may learn to download a certain page (e.g. CNN news) at a particular time each day based the user's history of issuing requests for that page at regular times. As discussed above, because the downloaded documents are multi-part and contain embedded response codes, only those portions of the document that have changed are actually downloaded.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 4","b":["1","9","41","1","9","1","9","43","1","9","44","9","1","45","1","9","46","9","47","9","1","51"]},"As indicated above, the protocol of the preferred embodiment is preferably carried over a proprietary IPPP transport layer, but can also be easily adapted to run over TCP\/IP on a specific port. The protocol is preferably implemented as a handler in the proxy server , thereby simplifying any currently existing protocol. (e.g. to avoid overloading a current HTTP protocol).","A person skilled in the art, having read this description of the preferred embodiment, may conceive of variations and alternative embodiments. For example, the conditional transfer of data based on communication of state information, as set forth above, may also be applied to separately transmitting individual portions of the multipart document as opposed to transmitting the entire document at once.","In some embodiments, the proxy server  uses heuristic algorithms to learn what additional data requests the device may make based on knowledge of the current request, and knowledge of past activity. In some instances, the device may follow a pattern of requesting a first Web page, and then a second Web page. For example, the device may first request the \u201ccnn.com\u201d Web page, and then request the \u201ccnn.com\/news\u201d Web page. The proxy server  learns this pattern, and whenever the device requests the first Web page, the proxy server  determines that the device is likely to then request the second Web page. The proxy server  then fetches the second Web page, and uses its knowledge of the data cached on the device  (i.e. from the state information transferred to the proxy server  during initiation of the present connection) to determine whether the second Web page already exists within the data cached on the device. If so, the proxy server  includes information about the second Web page via response codes embedded within the response provided for the first Web page. If the device  requires the second Web page, then the device  can reference its cache and can avoid having to make a request to the proxy server  for the second Web page.","In other embodiments, heuristic processes within the proxy server  learn user behaviour and modify downloading of documents based on tracking the history of certain changes reflected in the hash value (e.g. the proxy server  may learn to download a certain page (e.g. CNN news) at a particular time each day based the user's history of issuing requests for that page at regular times). As discussed, because the downloaded documents are multi-part and contain embedded response codes, only those portions of the document that have changed are actually downloaded.","All such variations and alternative embodiments are believed to be within the ambit of the claims appended hereto."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A detailed description of the preferred embodiment is set forth in detail below, with reference to the following drawings, in which:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 2A","FIG. 1"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
