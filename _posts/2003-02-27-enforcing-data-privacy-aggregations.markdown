---
title: Enforcing data privacy aggregations
abstract: Described herein is an approach that may be used to control access to information requested by a query, where access is granted or denied to all the information requested based on factors that relate to information requested as a whole rather than on individual-by-individual row basis. Also described is a mechanism in which a database server dynamically creates and computes another query in response to receiving a query, and then uses the computed results to determine whether access to the data requested by the received query may be granted.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07873660&OS=07873660&RS=07873660
owner: Oracle International Corporation
number: 07873660
owner_city: Redwood Shores
owner_country: US
publication_date: 20030227
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATION","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","Context Information about Query","Access Control Process","Alternate Embodiments","Hardware Overview"],"p":["This application is related to U.S. application Ser. No. 09\/167,092, filed Oct. 5, 1998, entitled \u201cDatabase Fine-Grained Access Control\u201d, herein referred to as Lei, and naming as inventors Chon Hei Lei and Douglas James McMahon, the entire disclosure of which is hereby incorporated herein by reference.","This is related to U.S. application Ser. No. 09\/589,602, filed Jun. 7, 2000, entitled \u201cPartitioned Access Control To A Database\u201d, herein referred to as Wong, and naming as inventors Daniel ManHung Wong, Chon Hei Lei, the entire disclosure of which is hereby incorporated herein by reference.","The present invention relates to controlling access to information, and in particular, to controlling access to data stored or managed by a database server.","A database server stores data in one or more data containers, each container contains records, and the data within each record is organized into one or more fields. In a database system that stores data in a relational database, the data containers are referred to as tables, the records are referred to as rows, and the attributes are referred to as columns. In object oriented databases, the data containers are referred to as object classes, the records are referred to as objects, and the attributes are referred to as object attributes. Other database architectures may use other terminology.","The present invention is not limited to any particular type of data container or database architecture. However, for the purpose of explanation, the examples and the terminology used herein shall be that typically associated with relational databases. Thus, the terms \u201ctable\u201d, \u201crow\u201d and \u201ccolumn\u201d shall be used herein to refer respectively to the data container, record, and field.","A row in a table maintained by a database server may contain confidential information about individuals. Access to such rows needs to be controlled to protect the confidential information. In fact, many countries impose laws that restrict access to confidential information. Examples of such information include census data or medical information. However, while information in a row about a particular individual maybe confidential, aggregate information derived from many such rows may not be confidential. For example, while the individual salaries of persons living in a zip code is confidential, the average salary of persons living in the zip code is not confidential information. Aggregate information of this type is very valuable and public access to it is important.","Many countries, especially Europe, impose strong privacy requirements on confidential demographic data (e.g. census data). Publicly exposing a database that stores such data for public analysis while protecting confidentiality in order to conform with privacy laws is a very challenging task. For example, in many census bureaus around the world, there have been attempts to develop systems that permit users to run only queries that request aggregated information that do not return data that can be identified with a particular individual. Unfortunately, these specialized systems have been very expensive to develop and evolve in response to changing user needs and laws and regulations of many countries.","One approach that has been attempted to protect databases that hold confidential information while allowing public access to aggregate information is to allow users to access data by running a query that may be selected from a library of queries. No user specific query is allowed. This is the approach used by most census bureaus today. The biggest disadvantage of this approach is that too often information needed by a user cannot be retrieved or derived from one of the queries in the library.","Another alternative approach is to pre-build summary data (e.g. materialized views) that include information aggregated in all the ways needed by users. The overhead of this approach is onerous because the summary data that needs to be computed in order to meet needs of all users who access the summary data is enormous.","Another approach is to allow users to request information through a user interface which limits the type of information requested by users. The user interface allows a user to specify criteria by which to return aggregated information. For example, a user could request the average salaries of individuals that live in a particular area and that fall within a particular range. The user interface contains user controls that allows the user to specify a region and an age range. The user interface would not contain controls that allow a user to specify a particular street or address.","This approach has several disadvantages. First, it is often overly protective of confidentiality. The user interfaces do not provide the ability to specify criteria for attributes or classifications that can potentially be used to return information about specific individuals. For example, a street may have hundreds of individuals while another street may have one. The user interface does not allow a user to make a request that can specify a particular street because of the possibility that the returned information may be limited to the street with one or a few individuals.","Another disadvantage of this approach is that it limits user access to information to that which can be obtained through the user interface. Under this approach, users cannot access the database more directly, and do not have the kind access needed to use powerful database use tools.","Another disadvantage of approaches mentioned above is that they do not prevent access to confidential information in a database by users that have the ability to directly access the database without having to go through, for example, a user interface or API (\u201cApplication Programmers Interface\u201d).","Clearly, there is a need to find a mechanism that protects confidentially of data that avoids the disadvantages attendant to the approaches discussed above.","The approaches described in this section are approaches that could be pursued, but not necessarily approaches that have been previously conceived or pursued. Therefore, unless otherwise indicated, it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.","A method and apparatus for controlling access by queries to information is described. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent, however, that the present invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.","Described herein is an approach that may be used to control access to information requested by a query, where access is granted or denied to all the information requested based on factors that relate to information requested as a whole rather than on an individual-by-individual row basis. The approach is illustrated by a mechanism that governs access to aggregate information requested by queries issued by a user. The mechanism only allows access to aggregate information only if it requires aggregating a number of rows greater than a threshold number entities for which the rows hold information. Examples of such entities include patients, individuals about which census information is collected, and even information about businesses.","Aggregated information in a database is derived by applying an aggregate function (e.g. sum, average, minimum, maximum) to the values in a column (\u201cmeasure\u201d) of a subset of rows in a table. Often, tables that contain confidential data have rows that correspond to real world entities and that contain confidential information about the real world entities. For example, a patient table has rows that each correspond to a patient, a lab results table has rows that can each correspond to multiple patients. The mechanisms for controlling access to aggregate information described herein controls access to the aggregate information based on the number of such real world entities the aggregate information reflects. The number of such real world entities is referred to herein as the base cardinality.","Also described herein is a mechanism in which a database server dynamically creates and computes another query in response to receiving a query, and then uses the computed results to determine whether access to the data requested by the received query may be granted. This mechanism is illustrated by using it to determine whether the base cardinality of an aggregate query received from a user satisfies a threshold. A query dynamically generated in this way is used to generate results from which the base cardinality of the requested aggregate information may be determined.","For convenience of expression, various entities that represent sets of instructions (e.g. functions, queries) are described as performing actions, when in fact, a computer, process, database server, or other executing entity performs those actions in response to executing or interpreting the set of instructions. For example, a function may be described as determining that a condition exists or a query may be described as accessing information. These are just convenient ways of expressing that a computer, process, database server or other executing entity is determining that a condition exists in response to executing a function or is accessing data in response to executing or computing a query.","Fine Grained Access Control Mechanism","According to an embodiment, a mechanism for generating and using a dynamically generated query in this way may be implemented using the fine grain access control mechanisms described Lei and Wong. The fine grain access control mechanisms described in Lei and Wong are based on one or more policy functions associated with a database object (e.g. table or view). The policy functions are invoked, when, for example, a database server detects that a query is issued against the database object. The policy function returns a predicate that is appended to the query to generate a modified a query. The predicate restricts access to data according to a policy implemented in one or more of the invoked policy functions. In addition, a policy function can also modify context information associated with a user which can affect subsequent database access control. In this way, user access is transparently restricted by transparently modifying queries issued by users to limit access to their data.","Policy functions can be implemented in a variety of ways. According to an embodiment, policy functions are implemented as stored procedures which are associated with a policy for a table or view through an administrative interface. The stored procedures are not native software of the database server, but are user supplied. A system package may be used to define an API through which policy functions may be administered. The database server is designed to interface with the policy functions through the API.","Controlling Access to Aggregate Information Using a fine grain Access Control Mechanism",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","100","102","104","102","104","104"]},"User  interacts with database server  by issuing queries, the results of which are computed by database server  and returned to user . A user may be one or more processes running on the same or a different computer system as a database server , including one or more processes executing an application or a user interface through which a user interacts to issue queries.","To control aggregate information derived from a particular table according to techniques described herein, a policy function should be associated with the table so that it is invoked for queries that require access to the table. To this end, patient table  and lab results table  are each associated with policy function  and .","In order to determine whether a database schema object may be accessed by a user through a query, the policy function needs information about the query, such as a text string representation of the query (\u201cquery string\u201d) and the length of the query string. Such information is stored in context information , which may be accessed by a policy function. Context information, such as user context information , is data maintained by database server  that is associated with a user's database session. A policy function may access context information through the aforementioned API for policy functions, subject to constraints imposed by database server  for security purposes. Context information  contains various attributes, including query information , which includes attributes holding a query string representation of the current query being processed for the user, and its length.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 2","ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":"select sum(revenue) from patients where name fname=\u2018SCOTT\u2019"}}}},"Referring to , at step , the database server  receives query QA from user . At step , database server  invokes a policy function  for the patient table  being accessed by the query, which in the current example is query QA.","At step , the policy function issues the dynamically generated query to the database server . At step , database server  computes the transformed query generated at step  and returns the results to the policy function. In the current example, the result returned is 10 because 10 is the number unique patients that have the first name of \u2018SCOTT\u2019.","The column patient ID contains values that uniquely identify a patient. PatientID may be, for example, a primary key that is unique among all rows in patient table , and thus the unique( )function would not be required.","At step , the policy function issues the dynamically generated query to the database server . At step , database server  computes the transformed query generated at step  and returns the results to the policy function. In the current example, the result returned is 10 because 10 is the number unique patients that have the first name of \u2018SCOTT\u2019.","At step , the policy function determines whether the base cardinality of the aggregate information requested by the aggregate query satisfies a threshold, that is, whether the number of entities about which information is stored in the rows of the table satisfies the threshold. If so, execution of the steps ceases. Otherwise, execution proceeds to step .","At step , the policy function generates a predicate to append to the received query that prevents results from being returned for the aggregate query. An example of such a predicate is one based on a condition that cannot possibly be true e.g. 1=2.","At step , the database server appends the predicate to the aggregate query. Execution of the steps ends.","As mentioned before, a table with rows that contain confidential information about entities may have multiple rows that correspond to one entity. Lab results table  is an example of such a table. Aggregate information derived from numerous rows in the lab results table  may correspond to just one patient, and thus have a base cardinality of one with respect to patients. The unique function and a foreign key column that holds patientId values in the lab results table  may be used to accurately compute the base cardinality.","To illustrate, the following query QL is provided:\n\n","The query dynamically generated at step  is QL\u2032, which is shown below.\n\n","In another embodiment of the present invention, a query is generated and issued at step  and  only if the query in issue requires access to particular columns. Furthermore, the policy functions may be executed for other types of operations other than query operations, such as insert, delete, and update. For example, a policy function could be implemented to ensure that a query operation requested in a database statement updates rows for a threshold number of entities, or updates all entities.","The techniques for access control described herein are not limited to governing access based on base cardinality. The present invention may be used to govern access based on any kind of the results that can be computed from queries that can be dynamically generated in the same manner query QA is computed. The dynamically generated query may be generated by a database server using other mechanisms other than a policy function of a fine grain access control mechanism.","The techniques for access control described herein have many advantages that stem, at least in part, from the fact that access can be controlled from within the database server using a policy function. Controlling access in this way avoids reliance on the use of components and applications outside the database server to implement access control. Access control can be imposed upon users that even have direct access to a database server. Furthermore, selection of database tools and utilities (e.g. form builders like Oracle\u2122 Forms or Microsoft\u2122 Access) to use with a database server need not be limited to those that provide and or can be configured to provide the needed access control. Furthermore, changes in access control policies can be implemented quickly by modifying the policy functions rather than modify numerous outside components and applications, which may require far greater effort to modify.",{"@attributes":{"id":"p-0046","num":"0048"},"figref":"FIG. 3","b":["300","300","302","304","302","300","306","302","304","306","304","300","308","302","304","310","302"]},"Computer system  may be coupled via bus  to a display , such as a cathode ray tube (CRT), for displaying information to a computer user. An input device , including alphanumeric and other keys, is coupled to bus  for communicating information and command selections to processor . Another type of user input device is cursor control , such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor  and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.","The invention is related to the use of computer system  for implementing the techniques described herein. According to one embodiment of the invention, those techniques are performed by computer system  in response to processor  executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory  from another computer-readable medium, such as storage device . Execution of the sequences of instructions contained in main memory  causes processor  to perform the process steps described herein. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware circuitry and software.","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing instructions to processor  for execution. Such a medium may take many forms, including but not limited to, non-volatile media, volatile media, and transmission media. Non-volatile media includes, for example, optical or magnetic disks, such as storage device . Volatile media includes dynamic memory, such as main memory . Transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves, such as those generated during radio-wave and infra-red data communications.","Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, or any other magnetic medium, a CD-ROM, any other optical medium, punchcards, papertape, any other physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave as described hereinafter, or any other medium from which a computer can read.","Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to processor  for execution. For example, the instructions may initially be carried on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system  can receive the data on the telephone line and use an infra-red transmitter to convert the data to an infra-red signal. An infra-red detector can receive the data carried in the infra-red signal and appropriate circuitry can place the data on bus . Bus  carries the data to main memory , from which processor  retrieves and executes the instructions. The instructions received by main memory  may optionally be stored on storage device  either before or after execution by processor .","Computer system  also includes a communication interface  coupled to bus . Communication interface  provides a two-way data communication coupling to a network link  that is connected to a local network . For example, communication interface  may be an integrated services digital network (ISDN) card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface  sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.","Network link  typically provides data communication through one or more networks to other data devices. For example, network link  may provide a connection through local network  to a host computer  or to data equipment operated by an Internet Service Provider (ISP) . ISP  in turn provides data communication services through the world wide packet data communication network now commonly referred to as the \u201cInternet\u201d . Local network  and Internet  both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link  and through communication interface , which carry the digital data to and from computer system , are exemplary forms of carrier waves transporting the information.","Computer system  can send messages and receive data, including program code, through the network(s), network link  and communication interface . In the Internet example, a server  might transmit a requested code for an application program through Internet , ISP , local network  and communication interface .","The received code may be executed by processor  as it is received, and\/or stored in storage device , or other non-volatile storage for later execution. In this manner, computer system  may obtain application code in the form of a carrier wave.","In the foregoing specification, embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. Thus, the sole and exclusive indicator of what is the invention, and is intended by the applicants to be the invention, is the set of claims that issue from this application, in the specific form in which such claims issue, including any subsequent correction. Any definitions expressly set forth herein for terms contained in such claims shall govern the meaning of such terms as used in the claims. Hence, no limitation, element, property, feature, advantage or attribute that is not expressly recited in a claim should limit the scope of such claim in any way. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings and in which like reference numerals refer to similar elements and in which:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
