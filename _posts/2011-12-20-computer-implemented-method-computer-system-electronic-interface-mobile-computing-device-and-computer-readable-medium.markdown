---
title: Computer implemented method, computer system, electronic interface, mobile computing device and computer readable medium
abstract: The present disclosure describes computer implemented methods, computer systems, electronic interfaces, mobile computing devices, and computer readable mediums for processing a request from a mobile application residing on a mobile computing device. One method may include receiving the request for data from the mobile application residing on the mobile device at an interface. The method may further include determining an interface service to be executed and executing the interface service. The method can then obtain, at the interface, from the execution of the interface service, a consumption model comprising one or more data models and associated data. The method may further include translating the consumption model and the associated data into an open source protocol, and sending a response from the interface including the translated consumption model and the associated data to the mobile application on the mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09128886&OS=09128886&RS=09128886
owner: SAP SE
number: 09128886
owner_city: Walldorf
owner_country: DE
publication_date: 20111220
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application relates to a computer implemented method, a computer system, an electronic interface, a mobile computing device and a computer readable medium.","For business users, it is important to have real-time access to data from business applications since business users are expected to handle critical tasks and decision making for a company, no matter where they are located. However, data from a business application is generally accessible at the location of a business application terminal i.e. at the premises of the company, or via a computer having a secure connection to a server hosting the business application. Thus, to access such data, the business user may physically go to the premises of the company to use the business application terminal having access to the business application, or the business user may remotely connect to the server hosting the business application by setting up a secure connection with a computer. There is a lack of flexibility that business users face when attempting to gain access to data from business applications from locations where it is not feasible to set up a secure connection with a computer or to physically go to the business application terminal located at the premises of the company.","The present disclosure describes computer implemented methods, computer systems, electronic interfaces, mobile computing devices, and computer readable mediums for processing a request from a mobile application residing on a mobile computing device. One method may include receiving the request for data from the mobile application residing on the mobile device at an interface. The method may further include determining an interface service to be executed and executing the interface service. The method can then obtain, at the interface, from the execution of the interface service, a consumption model comprising one or more data models and associated data. The method may further include translating the consumption model and the associated data into an open source protocol, and sending a response from the interface including the translated consumption model and the associated data to the mobile application on the mobile device.","While generally described as computer implemented software embodied on non-transitory media that processes and transforms the respective data, some or all of the aspects may be computer implemented methods or further included in respective systems or other devices for performing this described functionality. The details of these and other aspects and embodiments of the present disclosure are set forth in the accompanying drawings and the description below. Other features, objects, and advantages of the disclosure will be apparent from the description and drawings, and from the claims.","In the following, a detailed description of embodiments will be given with reference to the drawings. It should be understood that various modifications to the embodiments may be made. In particular, one or more elements of one or more embodiments may isolated from each other and may be combined and\/or used in other embodiments to form new embodiments.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1","b":["100","101","102","103","105","102","104","101","104","106"],"i":["a","n ","a","n ","a","n "]},"The business application server  may host a variety of applications. For example, the business application server  may host legacy systems, data warehouses, and\/or connecting software applications, etc. Further, the business application server  may host one or more proprietary business applications -in dedicated business areas such as enterprise resource planning (ERP), supply chain management (SCM), finance, travel management, etc. In one embodiment, the business application server  hosts an SAP Business Suite application, from SAP in Walldorf, Germany.","The data storage device  may be used to store business data associated with one or more of the business applications -. For example, the data storage device  may store bank data associated with a bank business application. The data storage device  may be located on the business application server , or may be located external to the business application server  as shown in . The data storage device  may comprise a relational database, a cube, a cloud, etc.","The periphery mobile device  may be a smartphone, a tablet computer, a personal digital assistant (PDA), etc. The periphery mobile device  may include the one or more mobile applications -. The mobile applications -may be pre-installed on the periphery mobile device  or may be downloaded onto the periphery mobile device  via the network . The periphery mobile device  may specifically be a mobile computing device. For simplicity, in this application the term mobile device may also refer to a mobile computing device or a periphery mobile device.","Each of the mobile applications -may serve as client software for each of the business applications -, respectively. For example, mobile application may provide a user of the periphery mobile device  with access to the business data and\/or functionality of business application . The mobile applications -are easy to use, and may integrate with the native application on the respective periphery mobile device  and have a look and feel native to the periphery mobile device . Alternatively, the mobile application -may use a web browser of the mobile device for rendering the user interface. Advantageously, end users, such as the owner of periphery mobile device , may be informed of issues pertaining to the business applications -via the corresponding mobile applications -","The mobile applications -may request data and\/or functionality from a corresponding business application -. The mobile applications -may also receive data and\/or functionality based on a push notification. A push notification includes an event occurring in the business application , resulting in data being pushed to the mobile application without a request having been made by the mobile application . Mobile application may make a request of and receive responses from business application using an open source protocol. The open source protocol may be a web protocol for querying and updating data that is synchronous and Representational State Transfer (REST)-based.","For example, the open source protocol may be Open Data Protocol (OData). OData is a set of REST-based interactions, i.e. HTTP interactions, and includes at least the create\/read\/update\/delete (CRUD) HTTP operations. The HTTP operations may be encoded in an OData-defined query language. The HTTP operations may also be encoded as Activity Streams or Server-Sent-Events. The open source protocol may also be XMPP encoded as Atom.","Additionally or as an alternative to using HTTP(S) as an underlying protocol, OData could use a proprietary protocol called IMO. IMO may use TCP\/IP as transport layer protocol. IMO may be used specifically for the communication between middleware () to the mobile device () via the relay server (). Also in such an implementation, the payload is defined according to the OData standard.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 2","FIG. 1"],"b":["200","100","104","101","105","102","104","105","201","207","202","203","204","204","204","204","205","206","202","201","207"],"i":["a","n ","a","n ","a","n ","a","n "]},"The mobile applications -and the middleware  may communicate with each other. The middleware  resides between the mobile applications -and the interface . The middleware  may provide the periphery mobile device  with access to the interface  across a firewall of the business entity (not shown). The middleware  may also provide additional functionality such as on-boarding, authentication, API (application programming interface) management, message routing and push notifications. The latter may include the communication with additional infrastructure e.g. provided by the vendor of the operating system, which is deployed on the mobile device (). This may allow push notification including communication with specific\/dedicated servers. In one embodiment, mobile application may send a request to the middleware , such as an HTTP request. In another embodiment, the middleware  may send a response to the mobile application , such as an HTTP response. Alternatively, the relay server  may reside between the mobile applications -and the middleware . In this alternative embodiment, the mobile applications -and the relay server  may communicate with each other and the relay server  and the middleware  may communicate with each other. The relay server  may provide functionality of a reverse proxy, providing the mobile applications -with connectivity to the middleware .","The middleware  and the interface  may communicate with each other. The interface  may be located on the same premises as the business application server , i.e. the premises of the business entity, in a different computing device than the business application server . In another embodiment, the interface  may be located on the premises of a third party. In another embodiment, the interface  may be a cloud comprising functions, not residing in a physical location but still separate from the business applications server . Further, in one embodiment, the middleware  may forward a request from a requesting mobile application to the interface , such as an HTTP request. In another embodiment, the middleware  may forward a response from the interface  to the mobile application , such as an HTTP response. Alternatively, the middleware  may be omitted from an embodiment. In this alternative embodiment, the mobile applications -may communicate with the interface  and the interface  may communicate with the mobile applications -","In the described approach, the middleware  may address security requirements and needs related to application management. The middleware  may allow IT teams defining which applications can be used by which user or more specifically, which requests coming from a specific application and user will be passed on the interface .","For push notification, the middleware  may provide an abstraction of the different APIs provided by the platform vendors. The middleware  thus may allow an application developer to ignore the technical differences of these mechanisms. The middleware may also provide information about how applications are used, such as e.g. frequency of requests, distribution of requests with respect to exposed interfaces etc. The middleware may also provide information about how long transfer of data takes between the business server and the mobile device. This is also of interest for IT teams.","It is possible that the middleware  is not used for integrating interfaces exposed by different system into one interface that then can be directly consumed by the mobile application.","The interface  may allow other applications, i.e. the mobile applications -, to interact with proprietary business applications, i.e. the business applications -residing on the business application server , by exposing specified data of one or more business applications -to a requesting mobile application as an interface service. The interface  stores a registry of predefined interface services available on the business application server  for execution (not shown). When the interface  executes an interface service, the interface service enables the proprietary business applications -to communicate with external programs, such as the mobile applications -by causing the retrieval of the specified data from the data storage device  associated with the proprietary business applications -in a RESTful manner. In one embodiment, the interface  is an OData Channel from SAP AG in Walldorf, Germany.","Upon the arrival of an incoming request for data and\/or functionality from one of the mobile applications -, such as mobile application , the interface  determines, from the request, which interface service is to be executed from the one or more interface services stored in an interface registry of the interface . For example, the interface  may determine which interface service is to be executed from the one or more interface services stored in the interface registry of the interface  based on the OData-encoded HTTP request from the mobile application . The interface  then executes the determined interface service via a remote function call (RFC) to the interface integration component  residing on the business application server . To do so, the interface  translates the request to a RFC. Generally, a RFC is a dedicated call between computing components. For example, in an embodiment, the RFC is a call to the business application server , and particularly to the interface integration component  from the interface .","The interface  and the interface integration component  may communicate via the RFC. The interface integration component  may be located on the business application server . The interface integration component  is a software module that enables the business application server  to communicate with interface  and may provide functionality to expose the data and\/or functionality as REST-based services. In one embodiment, the interface integration component  may be an IW_BEP software component from SAP AG in Walldorf, Germany and may enable communication with the OData Channel from SAP AG in Walldorf, Germany.","OData Channel as used in this application may describe the usage pattern of Gateway. In addition to the OData Channel, Gateway may support the so-called Generic Channel, in which application-specific metadata is stored on Gateway. When used via the Generic Channel, Gateway allows developers to adopt existing back-end APIs without providing additional code on the back-end. However, since existing back-end APIs usually do not exactly fit the specific requirements of new mobile applications, the Generic Channel approach may result in significant overhead, such as e.g. additional calls between Gateway and the back-end, unnecessary data that is transferred between the back-end and Gateway etc. Advantageously, OData Channel does e.g. not result in such an overhead.","Moreover, the OData Channel may comprise all the functionality that is needed to handle a code-based exposure of back-end functionality via OData. In this, one important functionality lies in the translation of the generic calls to the application code on the back-end, i.e. the model provider, data adapter, into OData services (protocol translation). In addition, based on the OData Channel functionality, Gateway may detect which back-end component needs to be called, based on the incoming request. Since several back-end systems may be connected to Gateway and in each of these systems, several model providers\/data adapters may reside, this selection process may determine (1) the correct back-end system and (2) the required model provider\/data adapter combination in the specific back-end system. This detection may be done using configuration data that is stored on Gateway. It links information sent as part of the request to the respective system and back-end API (i.e. model provider\/data adapter combination).","In an example, for executing a service, OData Channel first detects which system\/back-end API needs to be called. Based on the request, OData Channel can also detect if the model provider or the data adapter needs to be called. OData Channel then calls the interface integration component  in the respective system, which then calls the addressed back-end application code (i.e. specific model provider or data adapter). The result of this is passed back to Gateway\/OData Channel via the generic RFC interface that the Gateway main component may use for the communication with interface integration component . Then, Gateway translates this into OData.","For push notification, Gateway exposes an API as part of the OData Channel, which allows back-end code to send notifications via Gateway, the middleware and the vender specific infrastructure to the respective application on the mobile device","An exemplary communication sequence may be:\n\n","The data sent via RFC may allow the interface integration component , e.g. the IW_BEP module to (1) call the correct application component, such as model provider and\/or data adapter and (2) return the results to Gateway. The RFCs between IW_BEP and Gateway may be generic and not adapted in any way to the specific application. The interface integration component  may expose ABAP interfaces, similar to Java interfaces, for which the respective application component provides implementing classes. However, also these interfaces need not be application specific. Rather, only their implementation may be application specific. The RFC-based data exchange between the interface integration component  and Gateway\/OData Channel covers metadata (i.e. details of the model) and content data, depending on the request sent to Gateway. For instance, if the client request calls for a service document, this may result in transfer of model information (i.e. metadata). If for example a query-request is sent, this may lead to content data being transferred between the interface integration component  and Gateway via the same RFC interfaces.","The interface integration component  and the integration adapter  may communicate with each other. The integration adapter  resides on the business application server  and may comprise the model provider  and the data adapter . The model provider  and the data adapter  may be connected to the interface integration component . Additionally, the data adapter  may be connected to the one or more business applications -residing on the business application server .","Based on communication from the interface integration component , the model provider  may provide one or more predefined data model(s) associated with the RFC of the interface service being executed. A predefined data model describes data stored in the data storage device  with metadata and includes operations that may be performed on the data. The data adapter  may provide data from the data storage device , according to the one or more predefined data models provided by the model provider. For example, the data adapter  may query the data storage device  associated with the business application for data according to the metadata described by the predefined data model. For example, the data may include customers' names, addresses, and contact details for a Sales Manager.","The predefined data model generated by the model provider  and the associated data generated by the data adapter  may be provided from the interface adapter  to the interface integration component . The interface integration component  may generate a consumption model and expose the consumption model to the interface . A consumption model may be a bundle of the one or more data models associated with the interface service being executed.","The consumption model and the data generated by the data adapter  may be exposed by the interface integration component  to the interface  via a RFC. A RFC is a dedicated call to the interface , and particularly to the interface integration component . For example, in an embodiment, the RFC is a call to the interface  from the business application server , and particularly from the interface integration component .","The interface  may receive the consumption model via the RFC and translate the consumption model to the open source protocol. For example, the received consumption model may be translated to an OData protocol. The interface  may send a response to the request from the mobile application by including the translated consumption model and the specified data in a response to the requesting mobile application . For example, the translated consumption model and the specified data may be encoded in OData XML and sent back to the requesting mobile application via an HTTP response.","Advantageously, the interface  does not include any artifacts of the business applications -residing on the business application server . Therefore, synchronization between the interface  and the business applications -residing on the business application server  does not need to be maintained. Moreover, the user of the mobile application -may only see the translated consumption model provided by the interface , but not the underlying data model from the proprietary business applications -. Thus, consuming data does not impose any requirement on the application developer or user to be able to write software in the proprietary language, or even to have any understanding of the internal workings of the proprietary business applications -itself.","Further advantageously, the interface , among others due to its communication abilities with the interface adapter  and\/or the interface integration component  allows that the mobile application -may stay slim and simple. In particular, this may allow that the mobile application -does not need to contain any of the logic provided by the proprietary business applications -. In addition, data exchange between the mobile application -and the proprietary business applications -can be reduced, thus network traffic may be kept low, since it may be possible to exchange simple requests and simple results, only.","Summarizing, a computer system may be adapted and operable for processing a request from a mobile application residing on a mobile device. The system may comprise an interface and a business application server. The interface may be operable to receive the request for data from the mobile application residing on the mobile device. The interface may be operable to determine an interface service to be executed. The interface may be operable to execute the interface service. The interface may be operable to obtain a consumption model comprising one or more data models and associated data. The interface may be operable to translate the consumption model to an open source protocol. The interface may be operable to send a response including the translated consumption model to the mobile application on the mobile device.","The business application server may comprise a model provider operable to determine the one or more data models associated with the interface application. The business application server may comprise a data adapter operable to determine the data associated with the one or more data models. The business application server may comprise an interface integration component operable to generate the consumption model comprising the one or more data models and the associated data.","In other words, the system may be operable to carry out a method as described below in conjunction with .","Moreover, the interface may be referred to as an electronic interface. The electronic interface may be operable to receive the request for data from a mobile application residing on the mobile device. The electronic interface may be operable to determine an interface service to be executed. The electronic interface may be operable to execute the interface service. The electronic interface may be operable to translate the interface service into a request for a consumption model. The electronic interface may be operable to obtain a consumption model comprising one or more data models and associated data. The electronic interface may be operable to translate the consumption model to an open source protocol. The electronic interface may be operable to send a response including the translated consumption model to the mobile application on the mobile device. Optionally, the electronic interface may be operable to obtain the consumption model from a business application server, and wherein the electronic interface is separate from the business application server.","In other words, the interface  and the integration component  as shown in  may be separate to such an extent and\/or at least partially independent from each other to such an extent that this architecture allows that the interface  does not include any artifacts of the business applications -residing on the business application server .","Moreover, a mobile computing device may be provided that allows communication with the system described above. More specifically a mobile computing device may be provided that allows, in conjunction with the system described above, to carry out the method described below with respect to . The mobile computing device may comprise a mobile application. The mobile application may perform the steps of sending a request for data from the mobile application encoded in an open source protocol to a proprietary business application. The mobile application may perform the steps of obtaining from the business application a consumption model comprising one or more data models and associated data encoded in an open source protocol.",{"@attributes":{"id":"p-0048","num":"0053"},"figref":"FIG. 3","b":["300","300"]},"At step , an interface receives a request from a mobile application residing on a periphery mobile device for data and\/or functionality from a proprietary business application residing on a business application server. The request from the mobile application may be an HTTP request. While using HTTP allows obtaining the above mentioned technical effects and advantages, depending on the technical details of the given implementation the request may also be another type of request. The HTTP request may be encoded in an OData-defined query language. While using an OData-defined query language allows obtaining the above mentioned technical effects and advantages, depending on the technical details of the given implementation the request may also be encoded in another (query) language.","At step , the interface determines, from the request, which interface service is to be executed from one or more interface services stored in an interface registry on the interface. An interface service enables a proprietary business application residing on a business application server to communicate with an external program, such as the mobile application, by exposing specified data of the business application to the requesting mobile application.","At step , the interface executes the determined interface service via a remote function call (RFC) to an interface integration component residing on the business application server. The interface service execution may involve the interface translating the request from an open source protocol to a RFC. The interface integration component may be a software module that enables the business application server to communicate with the interface and may provide functionality to expose the requested data and\/or functionality as REST-based services.","At step , the interface integration component communicates to an interface adapter the interface service that is being executed. The interface adapter may comprise a model provider and a model adapter. The model provider and the data adapter may be connected to the interface integration component. Additionally, the data adapter may be connected to the one or more business applications residing on the business server.","At step , the model provider of the interface adapter retrieves and provides to the interface integration component one or more predefined data model(s) associated with the RFC of the interface service being executed. The predefined data model describes data stored in the data storage device with metadata and includes operations that may be performed on the data.","At step , the data adapter of the interface adapter provides the specified data according to the predefined data model provided by the model provider. For example, the data adapter may query a data storage device associated with the business application for data according to the metadata described by the predefined data model.","At step , the interface integration component, after receiving the predefined data models and the specified data, may generate a consumption model. A consumption model may be a bundle of one or more data models, associated with the interface service.","At step , the interface integration component sends the consumption model and the specified data to the interface via a RFC. In other words, the method comprises obtaining, at the interface, from the execution of the interface service, a consumption model comprising one or more data models and associated data. Further, while using a RFC allows obtaining the above mentioned technical effects and advantages, depending on the technical details of the given implementation the communication may also be implemented using different technical means.","At step , the interface receives the consumption model via the RFC.","At step , the interface translates the consumption model to the open source protocol. For example, the interface may translate the consumption model to OData XML or\u2014depending on the technical implementation\u2014in another suitable language.","At step , the interface sends a response to the request from the mobile application by sending the translated consumption model and the specified data in a response to the requesting mobile application. For example, the translated consumption model may be encoded in OData XML or\u2014depending on the technical implementation\u2014in another suitable language, and sent back to the requesting mobile application via an HTTP response. Alternatively, another protocol may be used.","In view of the above described method, a computer readable medium may be provided. The computer readable medium may be operable for processing a request from a mobile device. The computer readable medium may comprise computer executable instructions that, when executed, perform the steps of:\n\n",{"@attributes":{"id":"p-0061","num":"0072"},"figref":"FIG. 4","b":["920","922","924","926","924","922","922","924","924","922","924","928","930","920","930","926"]},"The server  may further include a hard disk drive  for reading from and writing to a hard disk (not shown), and an external disk drive  for reading from or writing to a removable disk . The removable disk may be a magnetic disk for a magnetic disk driver or an optical disk such as a CD ROM for an optical disk drive. The hard disk drive  and the external disk drive  are connected to the system bus  by a hard disk drive interface  and an external disk drive interface , respectively. The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the server . The data structures may include relevant data for the implementation of the method, as described above. The relevant data may be organized in a database, for example a relational database management system or a object-oriented database management system.","Although the exemplary environment described herein employs a hard disk (not shown) and an external disk , it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, random access memories, read only memories, and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk, external disk , ROM  or RAM , including an operating system (not shown), one or more application programs , other program modules (not shown), and program data . The application programs may include at least a part of the functionality as depicted in .","A user may enter commands and information, as discussed below, into the server  through input devices such as keyboard  and mouse . Other input devices (not shown) may include a microphone (or other sensors), joystick, game pad, scanner, or the like. These and other input devices may be connected to the processing unit  through a serial port interface  that is coupled to the system bus , or may be collected by other interfaces, such as a parallel port interface , game port or a universal serial bus (USB). Further, information may be printed using printer . The printer  and other parallel input\/output devices may be connected to the processing unit  through parallel port interface . A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video input\/output . In addition to the monitor, computing environment  may include other peripheral output devices (not shown), such as speakers or other audible output.","The computing environment  may communicate with other electronic devices such as a computer, telephone (wired or wireless), personal digital assistant, television, or the like. To communicate, the computer environment  may operate in a networked environment using connections to one or more electronic devices.  depicts the computer environment networked with remote computer , i.e. mobile device . The remote computer  may be another computing environment such as a mobile device such as a smart phone or tablet, and may include many of the elements described above relative to the computing environment . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet and may particularly be encrypted.","When used in a LAN networking environment, the computing environment  may be connected to the LAN  through a network I\/O . When used in a WAN networking environment, the computing environment  may include a modem  or other means for establishing communications over the WAN . The modem , which may be internal or external to computing environment , is connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the computing environment , or portions thereof, may be stored in a remote memory storage device resident on or accessible to remote computer . Furthermore other data relevant to the method may be resident on or accessible via the remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the electronic devices may be used.","The above-described computing system is only one example of the type of computing system that may be used to in the method described above."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Details of one or more implementations are set forth in the accompanying exemplary drawings and exemplary description below. Other features will be apparent from the description and drawings, and from the claims.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 4","FIGS. 1 to 3"]}]},"DETDESC":[{},{}]}
