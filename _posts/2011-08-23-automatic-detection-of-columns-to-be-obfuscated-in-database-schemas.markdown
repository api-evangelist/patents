---
title: Automatic detection of columns to be obfuscated in database schemas
abstract: Various embodiments of systems and methods for automatic obfuscation of sensitive data in a database schema are described herein. The technique uses static detection of sensitive data by application type, static detection by column name, and data profiling by examining a sample of the tables data from the database schema.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08856157&OS=08856157&RS=08856157
owner: Business Objects Software Limited
number: 08856157
owner_city: Dublin
owner_country: IE
publication_date: 20110823
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The field relates to databases. More precisely, the field relates to obfuscating (i.e., concealing meaning) sensitive data in database schemas.","In many cases, there is often a necessity to obfuscate some sensitive data in database schemas. A typical situation is within an organization, which handles databases, where there is often a development team that needs to work on a sample database. A sample database used for development and testing purposes should have the structure and joins of the original database it derives from but should lack some sensitive data. The sensitive data may be some personal data or any other kind of confidential data. For example, the sensitive data may be social security numbers, credit card numbers, personal ID numbers, etc. Usually, anonymizing such data is performed manually by investigating the database schema and marking certain columns, containing sensitive data for obfuscation. Such manual processing is very time consuming even if one knows the content of the database schema. The reason for this is that every column should be considered and the column content checked for potential sensitive data to be obfuscated.","Various embodiments of systems and methods for automatic obfuscation of sensitive data in a database schema are described herein. In one embodiment, the method includes receiving a selection of the database schema and determining column obfuscation patterns within column names of the database schema. The method also includes obfuscating a first set of sensitive data from the database schema when column obfuscation patterns are determined. The method further includes determining data obfuscation patterns within rows of data of the database schema and obfuscating a second set of sensitive data from the database schema when data obfuscation patterns are determined.","In other embodiments, the system includes at least one processor for executing program code and memory, a source database with a database schema, and a repository persisting one or more standard application databases and predefined obfuscation rules corresponding to the one or more standard application databases. The system also includes a selector module to receive a selection of the database schema from the source database, a checker module to determine if the database schema is within the one or more standard application databases, and a determinator module to determine column obfuscation patterns within column names of the database schema and to determine data obfuscation patterns within rows of data of the database schema. The system further includes an obfuscator module to obfuscate a first set of sensitive data from the database schema when column obfuscation patterns are determined, obfuscate a second set of sensitive data from the database schema when data obfuscation patterns are determined, and obfuscate a third set of sensitive data from the database schema according to the predefined obfuscation rules corresponding to the one or more standard application databases when the database schema is within the one or more standard application databases.","These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.","Embodiments of techniques for automatic obfuscation of sensitive data in a database schema are described herein. In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["100","100","110","110","120","130","125","125","120","125","100","130","120","125","130","135","120","125","135","140","110","140","140","125","135","140","135","125","140","135","135","125","150","140","125","135","140","135"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2","b":["200","210","220","220"]},"If the database schema is within the set of standard application databases, then, at process block , a set of sensitive data is obfuscated from the database schema and the method ends. This set of sensitive data is obfuscated according to predefined obfuscation rules corresponding to the one or more standard application database. The predefined obfuscation rules serve for determining the sensitive data within the database schema corresponding to one of the known standard application databases. In one embodiment, the predefined obfuscation rules define columns of data from the database schema that contain sensitive data. If the database schema fails to fall within the set of standard application databases, then the method continues directly to block .","At decision block , it is determined if there are column obfuscation patterns within the column names of the database schema. Column obfuscation patterns within the column names are patterns that may define a column content to be sensitive data. For example, if the column name is \u201cSSN\u201d, then the content is considered to be social security numbers, which is typically sensitive data, or if the column name is \u201cCCN\u201d then the content is credit card numbers, which is sensitive data as well. In one embodiment, determining column obfuscation patterns is performed by determining whether the database schema metadata consists of the column obfuscation patterns. The metadata may contain patterns to identify some columns to contain sensitive data.","If column obfuscation patterns are determined at decision block , then, at process block , a set of sensitive data from the database schema is obfuscated. Then the method continues at block . If no column obfuscation patterns are determined at decision block , then the method continues directly to block .","At decision block , it is determined if there are data obfuscation patterns within rows of data of the database schema. Determining data obfuscation patterns within rows of data is examining table's data for standard patterns. For example, all phone numbers may match a pattern like \u201cnnn nnn-nnnn\u201d or \u201c+n nnn nnn-nnnn\u201d, or \u201cnnnnnnnnn\u201d, where n is a digit. In one embodiment, a set of predefined recognition rules may be created to detect any matching data. In one embodiment, a predefined number of rows are determined for data obfuscation patterns within each column. The reason for that is that there may be anti-values present in a database. Anti-values are values of data having a format or content not expected for the respective type of data. Thus, pattern recognition within anti-values may be not possible, which will cause some false negatives. For more accurate data obfuscation pattern determination, more rows should be checked. In yet another embodiment, determining data obfuscation patterns within the predefined number of rows is ceased, when a data obfuscation pattern is determined within a row of a column of the schema. This saves time as the column is already detected to contain some sensitive data so it can be marked for obfuscation without determining the rest of the number of predefined rows.","If data obfuscation patterns are determined at decision block , then, at process block , a set of sensitive data from the database schema is obfuscated and the method ends. If no data obfuscation patterns are determined at decision block , then the method directly ends.","In one embodiment, an obfuscation score is created based on the obfuscated sets of sensitive data at blocks , , and . If a set of sensitive data is obfuscated at block , the accuracy for obfuscation is 100% as the obfuscation is based on known structures of the database schema. In that case the obfuscation score is the highest possible. The sets of sensitive data obfuscated at blocks  and  may consist of some false positives and false negatives. This means some data is obfuscated though not being sensitive and also some sensitive data remains, although it should be obfuscated. This is because the recognition rules used for determining the column obfuscation patterns and the data obfuscation patterns may not determine accurately the sensitive data in a database schema. Hence, a lower obfuscation score should be created if the obfuscation is based on the sets of sensitive data obfuscated at blocks  and .",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3","b":["300","310","320","310","300","325","335","345"]},"A selector module  receives a selection of the database schema  from the source database . A checker module  determines if the database schema  is within the one or more standard application databases persisted in the repository . In one embodiment, the checker module  determines a list of tables for the database schema and determines if the list of tables is within a predefined set of known list.","A determinator module  determines column obfuscation patterns within column names of the database schema  and determines data obfuscation patterns within rows of data of the database schema . In one embodiment the determinator module  determines whether the metadata of database schema  comprises the column obfuscation patterns. In another embodiment, the determinator module  determines data obfuscation patterns within a predefined number of rows of each column in the database schema and ceases the determination of data obfuscation patterns within a row when a data obfuscation pattern is determined.","An obfuscator module  is in connection with the checker module  and the determinator module . The obfuscator module  obfuscates a set of sensitive data from the database schema  according to the predefined obfuscation rules corresponding to the one or more standard application databases when the database schema is within the set of one or more standard application databases. The obfuscator module  also obfuscates a set of sensitive data from the database schema  when column obfuscation patterns are determined, and obfuscates another set of sensitive data from the database schema  when data obfuscation patterns are determined.","In one embodiment, the system  further includes a scoring module  to create an obfuscation score based on the obfuscated sets of sensitive data.","Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components may be implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer readable storage media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4","b":["400","400","405","455","400","440","455","410","415","410","415","405","415","400","425","430","400","425","430","400","435","400","450","450","400","445","400","420","460","460","460","450","460"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transactional, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transactional data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system (e.g., ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","In the above description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however that the invention can be practiced without one or more of the specific details or with other methods, components, techniques, etc. In other instances, well-known operations or structures are not shown or described in details to avoid obscuring aspects of the invention.","Although the processes illustrated and described herein include series of steps, it will be appreciated that the different embodiments of the present invention are not limited by the illustrated ordering of steps, as some steps may occur in different orders, some concurrently with other steps apart from that shown and described herein. In addition, not all illustrated steps may be required to implement a methodology in accordance with the present invention. Moreover, it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.","The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments of the invention with particularity. The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
