---
title: System and methods for buffering of real-time data streams
abstract: A computer-implemented system and methods for buffering of real-time data streams are disclosed. The apparatus and method in an example embodiment includes: configuring a content server for an initial content quality type associated with a content stream; receiving the content stream with the initial content quality type from a content feed; detecting a low watermark condition as the content stream is played on a playback device; reconfiguring the content server for a modified content quality type associated with the content stream while receipt of the content stream is in progress; and receiving the content stream with the modified content quality type from the content feed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08499059&OS=08499059&RS=08499059
owner: Rovi Solutions Corporation
number: 08499059
owner_city: Santa Clara
owner_country: US
publication_date: 20090504
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["COPYRIGHT NOTICE","BACKGROUND","DETAILED DESCRIPTION","Overview of Various Embodiments"],"p":["A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent files or records, but otherwise reserves all copyright rights whatsoever. The following notice applies to the software and data as described below and in the drawings that form a part of this document: Copyright 2008-2009, Macrovision Solutions Corporation, All Rights Reserved.","1. Technical Field","This disclosure relates to networked systems. More particularly, the present disclosure relates to buffering of real-time data streams.","2. Related Art","In conventional network-based streaming content delivery systems, it is a challenge to maintain a constant playback rate for the streamed content at a client playback device when the network transmission of the content is subject to unpredictable and erratic delays. Though some existing systems attempt to slow the data rate at the server, these solutions still tend to produce erratic streams and increased network traffic. Further, the content feeds that provide the data streams may not be controllable by a client playback device.","Thus, a computer-implemented system and methods for buffering of real-time data streams is needed.","A computer-implemented system and methods for buffering of real-time data streams are disclosed. In the following description, numerous specific details are set forth. However, it is understood that embodiments may be practiced without these specific details. In other instances, well-known processes, structures and techniques have not been shown in detail in order not to obscure the clarity of this description. Various embodiments are described below in connection with the figures provided herein.","United States Patent Publication No. US 2002\/0120747 discloses a system and method for buffering streaming audio data or other media sources to client devices, where said system maintains a constant buffering time by adjusting the low water mark of the play buffer based on the bit rate of the stream to a level such that the time for the play buffer to fill to the low water mark is constant for all streams.","U.S. Pat. No. 5,881,245 discloses a method and device for communicating encoded data (such as MPEG encoded data for example) from a server to a decoder via a buffer. The rate at which the server provides the encoded data are adjusted based on a state of the buffer such that the buffer does not overflow or run dry, even when the communication of the data is subject to drift. Specifically, when the buffer is below a predetermined level, the rate at which the server provides the encoded data is increased. On the other hand, when the buffer is above a predetermined level, the rate at which the server provides the encoded data is decreased.","U.S. Pat. No. 5,619,337 discloses a system to record a single program from a multi-program transport stream that is encoded according to the MPEG-2 standard. The system demultiplexes transport packets from the multi-program transport stream and records the demultiplexed packets on a digital video cassette recorder (DVCR). The system includes circuitry in the encoder which emulates a buffer in the digital recorder that is used to hold the packets to convert the bursty packet data into constant rate data for recording. This emulated buffer controls the overall rate at which packets of the selected program are inserted into the multi-program transport stream by the encoder.","The real-time streaming buffer management process and system of the various embodiments described herein enable playback devices to receive a constant rate feed of content from network-based content sources. As described herein, a content server can be considered a network-accessible server, server farm, web site, or the like that can enable network access to and from client systems with playback devices via a network (e.g. the Internet).  illustrates an example embodiment of a networked system in which various embodiments may operate. As shown in , a content server  is in data communication with one or more playback devices  and  via a conventional network , such as the Internet. Playback devices  and  can be used by individuals who can log in to the content server  via the network  and become subscribers or members of the real-time streaming service enabled by the various embodiments described herein. In a particular embodiment shown in , a buffer manager  can be provided in or by playback devices  and . As described in more detail below, the buffer manager  controls the flow of content into and out of a playback device content buffer. In the example embodiment shown, content server  includes a content aggregator  and a content streamer . Content aggregator  includes processing logic to communicate with one or more content feeds  to coordinate the streaming of a user-selected item of content directly from the one or more content feeds  to the user playback device via network . Content feeds  can be sources or repositories of digital content  that can be streamed to a particular playback device via network . Content  can be any of various forms of digital content including video or multimedia (e.g., MPEG), still images (e.g., JPEG or TIFF), audio (e.g., MP3), spoken audio, digital documents, executable code, and the like. Content feeds  can represent websites, servers, peer-to-peer nodes, and the like. Content aggregator  can also include functionality to query a content feed  for a list of available content. These content lists from various content feeds  can be posted on content server  for viewing, searching, and selection by users of playback devices  and . The users of playback devices  and  can log in to accounts maintained on content server , search a list of available content, and select a particular item of content for streaming to the user's playback device via network . Content streamer  provides the processing logic to manage the streaming of the selected content to the playback device  or . As described in more detail below, the content streamer  operates in concert with the buffer manager  to control the rate and\/or quality of the content stream as necessary to make sure the playback device  or  receives a constant rate feed of content from the network-based content feeds .","It will be apparent to those of ordinary skill in the art that an equivalent configuration could include multiple content server sites, each managing a portion of the functionality provided as described herein. A particular embodiment may include an additional layer, called the Partner Sites, wherein each Partner Site can be hosted on a separate server and each Partner Site can communicate with the buffer manager , described in more detail below. In this embodiment, each Partner Site can aggregate a subset of the available content from content feeds . Further, it will be apparent to those of ordinary skill in the art that another equivalent configuration could include a portion of the functionality provided by the buffer manager  being downloaded from the content server  to playback devices  and  and executed locally at the client sites. In any of these alternative configurations, the buffer manager  functionality provides and supports a system for enabling buffering for real-time data streaming as described in more detail below.","Description of the Real-Time Streaming and Buffer Management of an Example Embodiment","Referring now to , an example embodiment showing the functional components of the buffer manager  is shown. As illustrated in  as described above, a content server  is in networked data communication with one or more playback devices  and  via a conventional network , such as the Internet. As such, the content server  can receive access and content requests from a plurality of users of playback devices  and . The playback devices  and  can provide a buffer manager component  to support the receipt of streamed content from the content server . The functionality provided by the buffer manager  of a particular embodiment to support users can be partitioned into a set of functional components -. It will be understood that these functional components can be implemented in software executing on the playback devices  and . As described above, other equivalent configurations can also be implemented.","In a first functional component, an incoming data management component  is provided as part of buffer manager . The incoming data management component  provides the functionality for interfacing with content streamer  of content server  via network . The incoming data management component  can discover an available bandwidth (e.g., data rate or capacity) supported for streaming a particular item of content from a content feed  to the playback device  and\/or  via network . Conventional ping and traceroute functions can be used to accomplish bandwidth discovery in a particular embodiment. The incoming data management component  can also negotiate with the content server  for a content quality type compatible with the particular item of content, compatible with user selections, and compatible with the available bandwidth for the streaming operation. Once the available bandwidth and content quality type for streaming a particular item of content are determined, the incoming data management component  can compute and set an initial incoming data speed (Si), an initial playback speed (Sp), and an initial buffer size (B) needed to ensure uninterrupted playback of the selected item of content on the playback device  and\/or . In a particular embodiment, the initial buffer size (B) can be calculated from the difference between Sp and Si and the length of the content item being streamed. Typically, the initial buffer size (B) is allocated at the beginning of a streaming operation and remains constant, while Si and Sp are variables that can be changed during the streaming operation. The incoming data management component  can also compute and set an initial content buffer high and low watermark to track the capacity level of the buffer currently consumed by the streamed and un-played content. In the case of a very long content item, the buffer manager  may not be able to fill in the whole buffer before playback is started; because, loading the buffer may take too long. The criterion for starting to play the content item is when the buffer is filled to (or over) the high watermark. The use of the high and low watermarks is described in more detail below. Once the incoming data management component  determines or computes the various parameters described above, the incoming data management component  can signal the content server  to begin streaming the selected item of content. As described in more detail below, the incoming data management component  can also negotiate with the content server , after the streaming operation has started, for a different content quality type compatible with the speed at which the particular playback device  and\/or  is able to consume the content stream.","In a second functional component of buffer manager , a buffer management processing component  is provided as part of buffer manager . The buffer management processing component  of an example embodiment provides the functionality for filling the content buffer and for detecting when the content has reached the high and low watermarks of the content buffer. The use of the high and low watermarks is described in more detail below. The buffer management processing component  of an example embodiment also provides the functionality for transferring the content from the content buffer to the playback device interface  for playback to the user of playback device  and\/or .","In a third functional component, a playback device interface component  is provided as part of buffer manager . The playback device interface component  of an example embodiment provides the functionality for receiving content from the buffer management processing component  and for processing the content for playback to the user of playback device  and\/or .",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 3","b":["132","130","132","150","120","105","150","120","144","142","150","110","113","115","144","142","122","120","110","113","115","124","110","113","115","130","105","110","113","115","150","152","161","162"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 4","FIG. 4"],"b":["132","152","120","110","161","162","163","132","130","161","110","130","105","161","120","161","130","161","152","161","161","120","120","110","113","115","120","110","113","115","120","110","113","115","130","120","110","113","115","130","110","113","115","161","132","162"]},"In a seventh and eighth operation as shown for an example embodiment in , the buffer management processing component  receives the content stream from the incoming data management component  and begins to fill the content buffer  with the received content stream. This content fill process continues until a location in the content buffer  indicated by the high watermark is reached. As described herein, the high watermark and low watermark conditions should be met for certain pre-determined amount of time (denoted as the integration time or hysteresis) before triggering any subsequent action. This integration time will prevent false alarms and conditions where subsequent actions are triggered too often and too quickly. Once the high watermark is reached and the integration time is satisfied, the playback device  can begin to play the received content. In a ninth operation, the buffer management processing component  enables the playback device interface component  to play the content from the content buffer  for the user of playback device . As the content is played by or through the playback device interface component , the content buffer  begins to empty, if the content is not filling the content buffer  as fast as the content is being played. In a tenth operation, if the content buffer  begins to empty, the buffered content being played will eventually reach a location in the content buffer  indicated by the low watermark. In operation eleven, when the buffered content being played reaches the low watermark, the buffer management processing component  signals a low watermark condition to the incoming data management component . In operation twelve, when the low watermark condition is received by the incoming data management component , the incoming data management component  can negotiate with the content server , after the streaming operation has started, for a different content quality type compatible with the speed at which the particular playback device  is able to consume the content stream. In this case because of the low watermark condition detected, the incoming data management component  can negotiate with the content server  for a lower quality content type associated with a content stream that needs less bandwidth. Assuming a lower quality content type is available for the particular content item for which streaming is in progress, the content server  can signal the corresponding content feed , , or  to continue streaming the selected content item to the playback device  at the lower quality content type. In operation thirteen, the content stream from the content feed , , or  is received by the incoming data management component  of buffer manager  at a lower quality content type and passed to the buffer management processing component . In operation fourteen, the buffer management processing component  enables the playback device interface component  to continue playing the content (now a lower quality of content) from the content buffer  for the user of playback device . In a typical case, because of the lower bandwidth requirements, the lower quality content stream begins to fill the content buffer  faster than the buffered content can be played. Thus, in operation fifteen, as the content buffer  begins to fill up, the buffered content being filled will eventually reach a location in the content buffer  indicated by the high watermark. In operation fifteen, when the content being buffered reaches the high watermark, the buffer management processing component  signals a high watermark condition to the incoming data management component . In operation sixteen, when the high watermark condition is received by the incoming data management component , the incoming data management component  can negotiate with the content server , after the streaming operation has started, for a different content quality type compatible with the speed at which the particular playback device  is able to consume the content stream. In this case because of the high watermark condition detected, the incoming data management component  can negotiate with the content server  for a higher quality content type associated with a content stream that needs more bandwidth. Assuming a higher quality content type is available for the particular content item for which streaming is in progress, the content server  can signal the corresponding content feed , , or  to continue streaming the selected content item to the playback device  at the higher quality content type. In operation seventeen, the content stream from the content feed , , or  is received by the incoming data management component  of buffer manager  at a higher quality content type and passed to the buffer management processing component . The process can continue as described above. As the content streaming process continues, the detection of the low watermark condition as described above can cause the buffer manager  to negotiate with the content server  to reduce the quality of the content stream and thereby reduce the bandwidth requirements for streaming the content to the playback device. Conversely, the detection of the high watermark condition as described above can cause the buffer manager  to negotiate with the content server  to increase the quality of the content stream and thereby increase the bandwidth requirements for streaming the content to the playback device. As shown in  and described above, the modification of the quality of the content stream can occur as necessary while the content streaming is in progress to ensure that the playback devices can receive a constant rate feed of content from network-based content sources.","In summary as detailed above, a sequence of operations in a first example embodiment, wherein the buffer manager  uses a playback data reduction method to regulate the flow of content into and out of the content buffer , the example sequence of operations includes:","At startup\u2014\n\n","At content selection\u2014\n\n","During playback\u2014\n\n",{"@attributes":{"id":"p-0033","num":"0038"},"figref":["FIG. 5","FIG. 5"],"b":["132","152","120","110","161","162","163","132","130","161","120","130","105","161","120","161","130","161","152","161","161","120","120","110","113","115","120","110","113","115","120","110","113","115","130","120","110","113","115","130","110","113","115","161","132","162"]},"In a seventh and eighth operation as shown for an example embodiment in , the buffer management processing component  receives the content stream from the incoming data management component  and begins to fill the content buffer  with the received content stream. This content fill process continues until a location in the content buffer  indicated by the high watermark is reached. At this point, the playback device  can begin to play the received content. In a ninth operation, the buffer management processing component  enables the playback device interface component  to play the content from the content buffer  for the user of playback device . As the content is played by or through the playback device interface component , the content buffer  begins to empty, if the content is not filling the content buffer  as fast as the content is being played. In a tenth operation, if the content buffer  begins to empty, the buffered content being played will eventually reach a location in the content buffer  indicated by the low watermark. In operation eleven, when the buffered content being played reaches the low watermark, the buffer management processing component  commands the playback device interface component  to slow down the playback speed of the playback of the buffered content. In a typical case, because of the slower playback speed, the content stream begins to fill the content buffer  faster than the buffered content can be played. In operation eleven, the buffer management processing component  enables the playback device interface component  to continue playing the content from the content buffer  at a slower playback speed for the user of playback device . Thus, in operation twelve, as the content buffer  begins to fill up, the buffered content being filled will eventually reach a location in the content buffer  indicated by the high watermark. In operation thirteen, when the content being buffered reaches the high watermark, the buffer management processing component  commands the playback device interface component  to increase the playback speed (or restore an initial speed) of the playback of the buffered content. The process can then continue as described above. As the content streaming process continues, the detection of the low watermark condition as described above can cause the buffer manager  to slow down the playback speed of the content stream and thereby reduce the bandwidth requirements for streaming the content to the playback device. Conversely, the detection of the high watermark condition as described above can cause the buffer manager  to increase the playback speed of the content stream and thereby increase the bandwidth requirements for streaming the content to the playback device. As shown in  and described above, the modification of the speed of the content stream can occur as necessary while the content streaming is in progress to ensure that the playback devices can receive a constant rate feed of content from network-based content sources.","In summary as detailed above, a sequence of operations in a second example embodiment, wherein the buffer manager  uses a playback speed control method to regulate the flow of content into and out of the content buffer , the example sequence of operations includes processing as described below.","The Buffer Manager  should allocate an initial buffer. In order to ensure uninterrupted playback, the size of the initial buffer can be calculated using the following formula:\n\n*(()+\u2003\u2003<Formula F1>:\n\n","For the cases that Si<Sp, the time to fill the buffer B in seconds is as follows:\n\n=(*()+)\/\u2003\u2003<Formula F2>:\n","The cushion data C can be adjusted so that in the cases where Si=Sp and Si>Sp, the formula <Formula F1> doesn't produce a zero or negative result, respectively. Even in these cases, it is preferable to allocate the initial buffer for a certain amount of cushion data.","Introducing an integration time or Hysteresis, Th, can reduce false alarms. Th is the amount of seconds needed to average Si. This is the amount of time also to validate a condition before triggering an event.","To trigger a Low Watermark event, the Low Watermark condition has to be present uninterrupted for Th seconds. If the amount of buffered data exceeds the Low Watermark, a Low Watermark event counter is reset.","To trigger High Watermark event, the High Watermark condition has to be present uninterrupted for Th seconds. If the amount of buffered data drops under the High Watermark, a High Watermark event counter is reset.","The High Watermark event triggers:\n\n","The Low Watermark event triggers:\n\n","In the case of a Low Watermark event, the playback speed is recalculated every Th seconds. The following formula shows the dependency between the Low Watermark data and the playback time in case we don't change the initial playback speed:\n\n1\u2003\u2003<Formula F4>:\n\n","In order to increase the playback time we reduce the playback speed. The following formula determines the playback speed for the next Th seconds during Low Watermark condition:\n\n=()\/\u2003\u2003<Formula F5>:\n\n",{"@attributes":{"id":"p-0046","num":"0075"},"figref":["FIGS. 6 and 7","FIG. 6"],"b":["900","910","912","914","916","918"]},"As shown in , processing operations performed by another example embodiment  include: configuring a content server for a content quality type associated with a content stream (processing block ); configuring a playback device for an initial playback speed associated with the content stream (processing block ); receiving the content stream with the content quality type from a content feed (processing block ); playing the content stream on the playback device with the initial playback speed (processing block ); detecting a low watermark condition as the content stream is played on the playback device (processing block ); reconfiguring the playback device for a modified playback speed associated with the content stream while playback of the content stream is in progress (processing block ); and playing the content stream with the modified playback speed (processing block ).",{"@attributes":{"id":"p-0048","num":"0077"},"figref":"FIG. 8","b":"700"},"The example computer system  includes a processor  (e.g., a central processing unit (CPU), a graphics processing unit (GPU), or both), a main memory  and a static memory , which communicate with each other via a bus . The computer system  may further include a video display unit  (e.g., a liquid crystal display (LCD) or a cathode ray tube (CRT)). The computer system  also includes an input device  (e.g., a keyboard), a cursor control device  (e.g., a mouse), a disk drive unit , a signal generation device  (e.g., a speaker) and a network interface device .","The disk drive unit  includes a machine-readable medium  on which is stored one or more sets of instructions (e.g., software ) embodying any one or more of the methodologies or functions described herein. The instructions  may also reside, completely or at least partially, within the main memory , the static memory , and\/or within the processor  during execution thereof by the computer system . The main memory  and the processor  also may constitute machine-readable media. The instructions  may further be transmitted or received over a network  via the network interface device .","Applications that may include the apparatus and systems of various embodiments broadly include a variety of electronic and computer systems. Some embodiments implement functions in two or more specific interconnected hardware modules or devices with related control and data signals communicated between and through the modules, or as portions of an application-specific integrated circuit. Thus, the example system is applicable to software, firmware, and hardware implementations. In example embodiments, a computer system (e.g., a standalone, client or server computer system) configured by an application may constitute a \u201cmodule\u201d that is configured and operates to perform certain operations as described herein. In other embodiments, the \u201cmodule\u201d may be implemented mechanically or electronically. For example, a module may comprise dedicated circuitry or logic that is permanently configured (e.g., within a special-purpose processor) to perform certain operations. A module may also comprise programmable logic or circuitry (e.g., as encompassed within a general-purpose processor or other programmable processor) that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a module mechanically, in the dedicated and permanently configured circuitry, or in temporarily configured circuitry (e.g. configured by software) may be driven by cost and time considerations. Accordingly, the term \u201cmodule\u201d should be understood to encompass a tangible entity, be that an entity that is physically constructed, permanently configured (e.g., hardwired) or temporarily configured (e.g., programmed) to operate in a certain manner and\/or to perform certain operations described herein. While the machine-readable medium  is shown in an example embodiment to be a single medium, the term \u201cmachine-readable medium\u201d should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and\/or associated caches and servers) that store the one or more sets of instructions. The term \u201cmachine-readable medium\u201d shall also be taken to include any medium that is capable of storing, encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present description. The term \u201cmachine-readable medium\u201d shall accordingly be taken to include, but not be limited to, solid-state memories, optical and magnetic media, and carrier wave signals. As noted, the software may be transmitted over a network using a transmission medium. The term \u201ctransmission medium\u201d shall be taken to include any medium that is capable of storing, encoding or carrying instructions for transmission to and execution by the machine, and includes digital or analog communications signal or other intangible medium to facilitate transmission and communication of such software.","The illustrations of embodiments described herein are intended to provide a general understanding of the structure of various embodiments, and they are not intended to serve as a complete description of all the elements and features of apparatus and systems that might make use of the structures described herein. Many other embodiments will be apparent to those of ordinary skill in the art upon reviewing the above description. Other embodiments may be utilized and derived therefrom, such that structural and logical substitutions and changes may be made without departing from the scope of this disclosure. The figures provided herein are merely representational and may not be drawn to scale. Certain proportions thereof may be exaggerated, while others may be minimized. Accordingly, the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.","The description herein may include terms, such as \u201cup\u201d, \u201cdown\u201d, \u201cupper\u201d, \u201clower\u201d, \u201cfirst\u201d, \u201csecond\u201d, etc. that are used for descriptive purposes only and are not to be construed as limiting. The elements, materials, geometries, dimensions, and sequence of operations may all be varied to suit particular applications. Parts of some embodiments may be included in, or substituted for, those of other embodiments. While the foregoing examples of dimensions and ranges are considered typical, the various embodiments are not limited to such dimensions or ranges.","The Abstract is provided to comply with 37 C.F.R. \u00a71.74(b) to allow the reader to quickly ascertain the nature and gist of the technical disclosure. The Abstract is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims.","In the foregoing Detailed Description, various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments have more features than are expressly recited in each claim. Thus, the following claims are hereby incorporated into the Detailed Description, with each claim standing on its own as a separate embodiment.","The system of an example embodiment may include software, information processing hardware, and various processing steps, which are described herein. The features and process steps of example embodiments may be embodied in articles of manufacture as machine or computer executable instructions. The instructions can be used to cause a general purpose or special purpose processor, which is programmed with the instructions to perform the steps of an example embodiment. Alternatively, the features or steps may be performed by specific hardware components that contain hard-wired logic for performing the steps, or by any combination of programmed computer components and custom hardware components. While embodiments are described with reference to the Internet, the method and apparatus described herein is equally applicable to other network infrastructures or other data communications systems.","Various embodiments are described herein. In particular, the use of embodiments with various types and formats of user interface presentations and\/or application programming interfaces may be described. It can be apparent to those of ordinary skill in the art that alternative embodiments of the implementations described herein can be employed and still fall within the scope of the claimed invention. In the detail herein, various embodiments are described as implemented in computer-implemented processing logic denoted sometimes herein as the \u201cSoftware\u201d. As described above, however, the claimed invention is not limited to a purely software implementation.","Thus, a computer-implemented system and methods for buffering of real-time data streams are disclosed. While the present invention has been described in terms of several example embodiments, those of ordinary skill in the art can recognize that the present invention is not limited to the embodiments described, but can be practiced with modification and alteration within the spirit and scope of the appended claims. The description herein is thus to be regarded as illustrative instead of limiting."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Embodiments illustrated by way of example and not limitation in the figures of the accompanying drawings, in which:",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 6 and 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
