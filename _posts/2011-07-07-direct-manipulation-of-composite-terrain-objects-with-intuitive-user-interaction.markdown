---
title: Direct manipulation of composite terrain objects with intuitive user interaction
abstract: A method, apparatus, system, and computer readable medium provide the ability to manipulate a terrain in a drawing. A composite object of the terrain is obtained in a CAD BIM application. The composite object is a combination of sub-objects that each define a geometry that is part of the terrain. Each of the sub-objects is drawn on a separate corresponding drawable interface instance. A sub-object is selected and in response, the selected sub-object is displayed in its corresponding drawable interface instance. The selected sub-object is directly modified, in canvas, using the drawable interface instance. In response to the modification, the terrain is dynamically updated and displayed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09020783&OS=09020783&RS=09020783
owner: Autodesk, Inc.
number: 09020783
owner_city: San Rafael
owner_country: US
publication_date: 20110707
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","ADVANTAGES","CONCLUSION"],"p":["This application is related to the following co-pending and commonly-assigned patent applications, which applications are incorporated by reference herein:","U.S. patent application Ser. No. 13\/178, 349, entitled \u201cGRADING METHOD UTILIZING FLOW GRADE SOLUTION\u201d, by Smita Narayan and Christopher E. Putnam, et. al., filed on Jul. 7, 2011, Now U.S. Pat. No. 8,676,546; and","U.S. patent application Ser. No. 13\/178, 353, entitled \u201cINTERACTIVELY SHAPING TERRAIN THROUGH COMPOSABLE OPERATIONS\u201d, by Smita Narayan and Christopher E. Putnam, et. al., filed on Jul. 7, 2011.","1. Field of the Invention","The present invention relates generally to computer aided design (CAD) applications, and in particular, to a method, apparatus, and article of manufacture for enabling, in a building information model (BIM) CAD application, direct manipulation techniques that allow walking a composable model and modifying the model with intuitive user interaction in two-dimensions (2D) as well as three-dimensions (3D).","2. Description of the Related Art","Grading is configuring the land's surface by removing or adding soil and other earthen material to artificially shape the land to best suit a project. The grading of a site serves three basic purposes: functional, drainage, and aesthetic. These basic purposes often conflict with each other and prior art solutions fail to provide an easy mechanism to satisfy all of these purposes while utilizing a single grading model as the user proceeds from concept to completion of a project. Such problems may be better understood with a description of prior art grading and grading solutions.","Functionality: Terrain grading is used to re-form terrain\/land in order to provide land that is functional or can be used for a functional purpose. In this regard, grading reforms the terrain to make it compatible for an intended land use. Such functional land uses may include parking lots, ponds, swales, and other features. To provide for such land use, terrain grading creates finish smooth slopes at specified grades.","Facilitate Drainage: Grading establishes and controls the new drainage pattern to direct the runoff to outfall points and away from buildings.","Aesthetic: A good design creates an aesthetically pleasing and appealing landscape. Natural landforms are created by using concave and convex shaped slopes rather than uniform gradient slopes. The creation of aesthetic landforms must be balanced by the cost of constructing them.","These goals often conflict with each other and to integrate them into the final design, they must be analyzed collectively. In practice, a grading plan is established through several successive trials of different schemes. This process can be very tedious. A grading scheme often involves projecting slopes from curves representing shoulder edges or water boundaries, and leveling them against the existing terrain. The implementation of this concept is fraught with difficulties due to a variety of complex scenarios that could not be handled by a na\u00efve ray projection algorithm, especially when projecting from curves with rapid elevation changes.","More specifically, prior art products provide a grading scheme by projecting each segment of a curve at a given cross-slope to produce bounded panels, and then combining them. Such a methodology involves complex models whose history of operations is difficult to track. The complexity of the existing solution results in difficult (if not impossible) software implementations that are error prone, unstable, and may completely fail (if supplied geometry is complicated). Accordingly, users are hesitant to use the prior art product on account of such stability problems. The prior art also provides few tools to modify existing solutions in an intuitive manner. Further, the prior art fails to provide tools that can be used in a conceptual design that can also later be refined for generating production drawings. In this regard, it is desirable to provide a tool that can be used to obtain quick answers for early decision making (e.g., approximate values of earthwork quantities) that can be refined later to produce a more accurate solution.","As described above, a particular need is that of designing the terrain to facilitate drainage. The prior art provides a complex methodology that is neither natural nor user friendly. In this regard, the prior art measures the cross grade (or cross slope) perpendicular to the curve from which a slope is projected. Each segment of the curve is projected at a given cross-slope to produce bounded panels that are combined by intersecting them against each other. This approach involves complex algorithms to solve inside corners and the intersection of overlapping solutions. For example, the rapid transitions of offsets across the inside corners cause incomplete or failed 3D intersections of the adjacent, bounded planes. Likewise, a multi-elevation rounded corner projected beyond its radius produces equally complex intersection geometry. The intersections are solved by simplifying the geometry and integrating the solution into planar topology to remove redundant loops. However, stability problems and specialized functionality restrict the use of the prior art methods.","Thus, prior art solutions produce inside corners with complex geometry that is hard to clean, especially if the solutions involve degenerate partial solutions. Solving such inside corners involves complex algorithms and is a cumbersome process. In addition, when designing the drainage, the prior art fails to provide the ability to create or use organic shapes that could be used to produce an aesthetically pleasing landscape.","Moreover, there are few tools for modifying prior art solutions in ways that directly map to site development needs. Even though there is a large set of elevation\/grade editing tools, the overlapping line work can create difficult to resolve stability problems and elevation conflicts. Predicting the impact of an edit to a solution requires experience, and factors like tessellation quality, crossing break lines, and Delaunay triangulation rules can confound a new user.","Accordingly, while prior art solutions may provide a model for visualizing and grading a terrain, such prior art models have various limitations. For example, in prior art solutions, the history of the model cannot be viewed interactively, users cannot track the order of operations, and consequently, users may not be provided with the ability to understand how a model was built. Such a lack of understanding gives rise to a communication gap across engineers working on the same project. In addition, existing prior art models do not allow the user to click the model elements and modify them interactively in 3D. Also, prior art models fail to provide a mechanism for modifying offsets and slopes interactively.","As described above, the existing solution does not allow the creation of a conceptual model that can later be refined into a more accurate model. In practice, before any detailed grading plans are underway, the designer needs to develop a generalized grading scheme to determine any problem areas and get a feel for the type of limitations the site may have as the design progresses. In the preliminary analysis, engineers are often looking for quick early-stage approximate answers (like road and parking area gradients, drainage patterns, rough estimates of cut and fill quantities, need for steep slopes, retaining walls, etc.) to make quick decisions that can later be refined into more accurate solutions for production drawings. The prior art fails to provide such capabilities.","In view of the above, it is desirable to enable a single set of tools that can be used from concept through completion, in the same environment, while allowing the user to design a grading solution in a natural, interactive, direct, and desirable manner.","Embodiments of the present invention overcome the problems of the prior art by providing a composable model with direct manipulation capabilities that allow a user to walk the model and modify the model with intuitive user interaction in 2D as well as 3D.","Embodiments of the invention provide direct manipulation capabilities to expose the structure of a highly composable model through selectable sub-entities. It empowers the users to understand the model structure and manipulate the structure to achieve the desired result. Each element of a composite object is displayed using a different instance of a drawable interface. Drawables are switched as different elements are selected (e.g., with the help of object reactors\u2014a reactor is a function that launches automatically based on the occurrence of a trigger\/event such as the selection of an element, a change in a drawing, execution of other commands, on a drawing about to be closed, etc.).","The elements are drawn differently depending upon whether they are selected or not. When an element is selected, the whole element is drawn in its full extents and when the final object is displayed, only that part of each element is drawn that contributes to the final object. Both atomic and composite elements can be drawn in this manner. As used herein, an element that is completely independent of other elements in the model is called an atomic element. Planes, surface grids, and depth buffers (e.g., as described in the co-pending application incorporated by reference above) are examples of atomic grids. An element that is created by combining two or more elements is a composite element. For example, the output of an operation that combines two or more elements using a Boolean operation is a composite element.","The model elements may be iterated in proper sequence and selected elements can be switched following user clicks, thereby allowing the users to walk through the various stages of the model and track the history of operations. Such capabilities help users understand the whole model by understanding the parts and how they are combined. The users can query properties (e.g., volumes) of the model at various intermediate stages (e.g., by selecting an intermediate stage of ground modification and viewing the properties of the selected stage). Further, users can operate directly in-canvas with the model and edit the parameters of any piece\/element\/sub-object and optimize a terrain design.","In the following description, reference is made to the accompanying drawings which form a part hereof, and which is shown, by way of illustration, several embodiments of the present invention. It is understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.","Overview","Embodiments of the invention provide direct manipulation capabilities to build, understand and modify a BIM CAD model.","Hardware Environment",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 1","b":["100","102","102","102","104","104","104","106","102","114","116","128","102","132"]},"In one embodiment, the computer  operates by the general purpose processor A performing instructions defined by the computer program  under control of an operating system . The computer program  and\/or the operating system  may be stored in the memory  and may interface with the user and\/or other devices to accept input and commands and, based on such input and commands and the instructions defined by the computer program  and operating system  to provide output and results.","Output\/results may be presented on the display  or provided to another device for presentation or further processing or action. In one embodiment, the display  comprises a liquid crystal display (LCD) having a plurality of separately addressable liquid crystals. Each liquid crystal of the display  changes to an opaque or translucent state to form a part of the image on the display in response to the data or information generated by the processor  from the application of the instructions of the computer program  and\/or operating system  to the input and commands. The image may be provided through a graphical user interface (GUI) module A. Although the GUI module A is depicted as a separate module, the instructions performing the GUI functions can be resident or distributed in the operating system , the computer program , or implemented with special purpose memory and processors.","Some or all of the operations performed by the computer  according to the computer program  instructions may be implemented in a special purpose processor B. In this embodiment, the some or all of the computer program  instructions may be implemented via firmware instructions stored in a read only memory (ROM), a programmable read only memory (PROM) or flash memory within the special purpose processor B or in memory . The special purpose processor B may also be hardwired through circuit design to perform some or all of the operations to implement the present invention. Further, the special purpose processor B may be a hybrid processor, which includes dedicated circuitry for performing a subset of functions, and other circuits for performing more general functions such as responding to computer program instructions. In one embodiment, the special purpose processor is an application specific integrated circuit (ASIC).","The computer  may also implement a compiler  which allows an application program  written in a programming language such as COBOL, Pascal, C++, FORTRAN, or other language to be translated into processor  readable code. After completion, the application or computer program  accesses and manipulates data accepted from I\/O devices and stored in the memory  of the computer  using the relationships and logic that was generated using the compiler .","The computer  also optionally comprises an external communication device such as a modem, satellite link, Ethernet card, or other device for accepting input from and providing output to other computers .","In one embodiment, instructions implementing the operating system , the computer program , and the compiler  are tangibly embodied in a computer-readable medium, e.g., data storage device , which could include one or more fixed or removable data storage devices, such as a zip drive, floppy disc drive , hard drive, CD-ROM drive, tape drive, etc. Further, the operating system  and the computer program  are comprised of computer program instructions which, when accessed, read and executed by the computer , causes the computer  to perform the steps necessary to implement and\/or use the present invention or to load the program of instructions into a memory, thus creating a special purpose data structure causing the computer to operate as a specially programmed computer executing the method steps described herein. Computer program  and\/or operating instructions may also be tangibly embodied in memory  and\/or data communications devices , thereby making a computer program product or article of manufacture according to the invention. As such, the terms \u201carticle of manufacture,\u201d \u201cprogram storage device\u201d and \u201ccomputer program product\u201d as used herein are intended to encompass a computer program accessible from any computer readable device or media.","Of course, those skilled in the art will recognize that any combination of the above components, or any number of different components, peripherals, and other devices, may be used with the computer .",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 2","FIG. 1"],"b":["200","202","102","206","202","102","206"]},"A network  such as the Internet connects clients  to server computers . Network  may utilize ethernet, coaxial cable, wireless communications, radio frequency (RF), etc. to connect and provide the communication between clients  and servers . Clients  may execute a client application or web browser and communicate with server computers  executing web servers . Such a web browser is typically a program such as MICROSOFT INTERNET EXPLORER\u2122, MOZILLA FIREFOX\u2122, OPERA\u2122, APPLE SAFARI\u2122, etc. Further, the software executing on clients  may be downloaded from server computer  to client computers  and installed as a plug in or ACTIVEX\u2122 control of a web browser. Accordingly, clients  may utilize ACTIVEX\u2122 components\/component object model (COM) or distributed COM (DCOM) components to provide a user interface on a display of client . The web server  is typically a program such as MICROSOFT'S INTERNENT INFORMATION SERVER\u2122.","Web server  may host an Active Server Page (ASP) or Internet Server Application Programming Interface (ISAPI) application , which may be executing scripts. The scripts invoke objects that execute business logic (referred to as business objects). The business objects then manipulate data in database  through a database management system (DBMS) . Alternatively, database  may be part of or connected directly to client  instead of communicating\/obtaining the information from database  across network . When a developer encapsulates the business functionality into objects, the system may be referred to as a component object model (COM) system. Accordingly, the scripts executing on web server  (and\/or application ) invoke COM objects that implement the business logic. Further, server  may utilize MICROSOFT\u2032S\u2122 Transaction Server (MTS) to access required data stored in database  via an interface such as ADO (Active Data Objects), OLE DB (Object Linking and Embedding DataBase), or ODBC (Open DataBase Connectivity).","Generally, these components - all comprise logic and\/or data that is embodied in\/or retrievable from device, medium, signal, or carrier, e.g., a data storage device, a data communications device, a remote computer or device coupled to the computer via a network or via another data communications device, etc. Moreover, this logic and\/or data, when read, executed, and\/or interpreted, results in the steps necessary to implement and\/or use the present invention being performed.","Although the term \u201cuser computer\u201d, \u201cclient computer\u201d, and\/or \u201cserver computer\u201d is referred to herein, it is understood that such computers  and  may include portable devices such as cell phones, notebook computers, pocket computers, or any other device with suitable processing, communication, and input\/output capability.","Of course, those skilled in the art will recognize that any combination of the above components, or any number of different components, peripherals, and other devices, may be used with computers  and .","Software Embodiments","Embodiments of the invention are implemented as a software application on a client  or server computer . As described above, such a software application provides direct manipulation capabilities to build, understand and modify composite objects in a terrain model with intuitive user interaction. Control-click actions of a user via a cursor control device (e.g., a computer mouse, stylus, etc.) provide the ability to select subentities for further grip editing of input parameters. In addition, contours and face colors may indicate which primitive subentity contributed to the elevation of a terrain at a given point (e.g., a grid point). The user can operate directly in-canvas with the model and edit parameters of any piece. Further, the user can walk through the successive stages of the model.","To make the terrain shaping work interactive, embodiments of the invention provide direct manipulation capabilities that reveal the model structure and provide a seamless mechanism to modify the model interactively. This is achieved by drawing each piece of the composite object on a separate instance of a drawable interface, that is shown or hidden from view based on user clicks. A user can build a model using simple cut and fill commands, walk through the model, understand the history of operations, select any operation, and modify it in-canvas. The model updates dynamically following user edits.","Accordingly, in the prior art, the history of the model cannot be viewed interactively. However, in embodiments of the present invention, to follow the history of operations, the user can click individual pieces and walk through the successive stages of the model. In this manner, direct manipulation capabilities help the user understand how the model was built. Further, the direct manipulation serves to reduce the communication gap across engineers working on the same project, which is an issue with prior art solutions.","Following these steps, embodiments of the invention provide an interactive (real-time) ability to manipulate models within the active terrain, saving time and specific steps that were previously needed by the user. Thus, while the prior art does not allow the user to click the model elements and modify them interactively in 3D, embodiments of the present invention provide such capabilities by allowing the user to pick any piece and modify it in-canvas. Further, in the prior art models, there is no mechanism for modifying various design parameters like offset values, slope values, slope directions, etc. interactively. In embodiments of the present invention, offsets, slopes and slope directions may be modified intuitively through dimension grips.","Embodiments of the invention allow a user to view the terrain using two different viewports, a 2D view of the terrain and a 3D view of the terrain. As operations are added, the entity representing the terrain gets modified, thus presenting the user with the finished ground automatically (i.e., dynamically in real-time without additional user input). Modifying the entity in either the 2D or 3D viewport updates the other view on the fly.","The direct manipulation techniques may serve one or more of the following purposes:","1. Design optimization through collective analysis of conflicting project goals: Since the model updates collectively, various design parameters can be edited and the resulting net volumes, pond storage volumes, aesthetics, etc. can all be analyzed collectively. The user can easily raise or lower cut and fill areas to achieve some semblance of earthwork balance for cost-effective design, while maintaining the design constraints and other functional requirements. Direct manipulation tools thus allow users to build a cost-effective, sustainable design that balances all project requirements.","2. Speed changes during design: Any design parameter can be modified (e.g., by modifying a design parameter of a sub-object) and the design updates collectively and dynamically.","3. Facilitate communication among engineers: Tracking the history of operations is easy and this serves to bridge the communications gap across engineers who work on the same project in different phases.","Embodiments of the present invention provide many advantages (over the prior art solutions) including direct manipulation capabilities that speed time to completion with simple and efficient geometric revision and editing resources. Further, operations may be presented to the user as selectable sub-entities of a grading object (i.e., primitive operations are exposed as selectable sub-entities). The maximum extents of each sub-object are determined by the site boundary that determines the working area. The extents of the working area can be modified by modifying the site boundary. The shape of each sub-object is driven by drawing objects (like curves or surfaces), other sub-objects and\/or design parameters, which can be edited by the user.","Additionally, the present invention allows the presentation of cut\/fill volumes through the intermediate stages. Also, operating directly in-canvas with the model is very intuitive (compared to that of not being able to directly modify objects in-canvas). A further advantage includes the ability to perform design optimization through intuitive user interaction and dynamic feedback.","Logical Flow",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 3"},"At step , a composite object of a terrain is obtained in a computer-aided design (CAD) building information model (BIM) application. The composite object is a combination of two or more sub-objects. Each of the sub-objects defines a geometry that is part of the terrain. Further, each of the two or more sub-objects is a result of an operation and the two or more sub-objects are arranged in a system of dependent relationships.","At step , each of the sub-objects is drawn on a separate drawable interface instance. Thus, each sub-object has or corresponds to a different drawable interface instance. In unselected mode, only that part of each sub-object is drawn which contributes to the final ground. All sub-objects are drawn with unique colors and selection markers, allowing various elements to be easily identified and selected. The sub-objects are drawn as colored contours in 2D view and colored faces in 3D solid-shaded view.","A step , one of the two or more sub-objects is selected. Such a selection may be performed by receiving user clicking input via a cursor control device while a cursor is over\/hovering over a sub-object in-canvas. Further, the view and sub-object being directly modified can be switched by selecting a different one (or set) of the sub-objects.","At step , in response to the selecting, the selected sub-object is separately displayed in its corresponding drawable interface instance. Such a display may cause the selected sub-object to be displayed as a whole to its full extents. Further, in response to the selecting, one or more transient dynamic dimension objects representing one or more corresponding input parameters of the selected sub-object may be displayed. If the sub-object is reselected again after step , the next composite sub-object created from the reselected sub-object may be displayed in the drawable interface instance (corresponding to the composite sub-object) (e.g., as a whole to the sub-object's full extents). Such a reselection may also display updated\/finished terrain if no composite object was created from the selected sub-object. In addition, the user may opt to select one of the sub-objects corresponding to the existing ground and then repeatedly click. In response to such actions, sequential stages with which the existing ground was modified incrementally may be shown, where each incremental sequential stage represents an each operation applied to the existing ground to reform the existing ground into the updated terrain\/finished ground. The sequential stages may then be traversed and cut and fill volumes may be queried at any intermediate state.","At step , one of the selected sub-objects is directly modified, in-canvas, using its corresponding drawable interface instance. In various embodiments, the same drawable interface instance draws differently in 2D view and 3D view. The direct modification of the sub-object in one view\/interface instance dynamically updates the other view\/interface instance. The direct modification may be performed by grip-editing one of the transient dimension objects representing the corresponding input parameters of the selected sub-object, sending the selected object to the front or back, or replacing the selected sub-object with a new composite sub-object created from the selected sub-object. If replaced, a surface layout may be built by combining planes with specific flow grades and directions, thus allowing control on directing drainage to outfall points.","At step , in response to the direct modification, the terrain is dynamically updated (e.g., updated in real-time and automatically, without additional user input). Such an updating may update both a 2D view and 3D view of the drawable instance containing updated terrain\/finished ground.","At step , the updated terrain is displayed (e.g., on a display device). Such an updated display may display only a part of the two or more sub-objects that contribute to the composite object representing the finished ground\/updated terrain. In other words, the whole sub-objects may not be displayed to their full extents\u2014only those portions needed for the final display are displayed.","Exemplary Terrain Shaping Models","The sub-objects of the model can be viewed sequentially by clicking in canvas to understand the steps with which the model was created.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 4A","b":["400","402","402","400","400","402","404","406","408","410","400","400"]},"Every sub-object on the ground  has an identifier that indicates its type, to allow users to easily select the desired feature on a finished ground. Further, various parameters and subjects may exist for each node\/subnode. For example, sub node  has a dependent sub-node that specifies the outside fill grid . Node  has the fill slope parameter  and the draped pond outside boundary . The draped pond outside boundary  has dependent subnodes that specify the outside pond boundary  and the pond rim plane . The pond rim plane  has parameters - for the key point, the slope, and the slope direction. Similarly, the ground with outside cut and fill  has a dependent sub node representing the outside cut grid  which in turn has a corresponding sub node for the cut slope parameter . The outside draped bond boundary  is a subnode of both the outside fill grid  and the outside cut grid . All dependencies are indicated with arrows in the diagram.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 4B","FIG. 4A"],"b":["412","410","410","414","452","412","452","454","452","410","452","454","414"]},"Sub entity selection (e.g., using ctrl-click where the ctrl key is depressed while clicking a cursor control device) may be used for grip editing action parameters. When the user grip-edits the sub-object representing the inner rim boundary, a temporary, dynamic dimension object showing the offset value is invoked and displayed. The user can then edit the dimension by moving its grip or typing an offset value. This triggers the reactor events, which update the model  elements in a fixed sequence. First, the dependent offset parameter is evaluated and updated. Then, the inner boundary of the pond  is evaluated and updated (e.g., using the offset parameter ). Then, the draped pond inside boundary , the pond wall  (cut grid), the pond bottom , the pond interior , and the finished ground are evaluated in that order. The pond wall\/cut grid  has a cut slope parameter  and a subnode representing the inside draped pond boundary . The bounded plane for the pond bottom interior  has parameter nodes -. The working geometry representing water surface updates its extents after the inner pond boundary  has been evaluated. The pond storage volume is updated when all its dependent elements (water surface and pond interior ) have finished evaluating. All other model elements remain unchanged, as they are not impacted by this action.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 5A","b":["502","502","504","506"]},"The interior plane  of the parking lot can be defined using three input parameters: the key point  (absolute point through which the plane passes), plane gradient (e.g., slope)  and direction (e.g., slope direction) of the gradient . If the user clicks (using ctrl click) on the interior plane  of the parking lot, the plane is drawn in its full extents. All input parameters - are displayed using transient dynamic dimension objects in 2D and 3D view. The user can grip-edit the dimensions to modify the input parameters - and the model  updates collectively and dynamically, following user edits. Similar to , each node\/subnode may also have subnodes\/parameters. For example, the ground with parking lot cut and fill  may be defined using the cut grid  having a cut slope input parameter . Similarly, the ground with parking lot fill  may be defined using fill grid . Both the cut grid  and fill grid  may be defined using the draped parking lot boundary . The fill grid  may also have an input parameter . The draped parking lot boundary  may also have a general parking lot boundary node  from which it may be derived.","Optionally, the user can sub-select the plane  and add a grade break.  shows the model  of a parking lot with grade break , which has been added to the surface of the parking lot in  by modifying the interior plane , in accordance with one or more embodiments of the invention. This operation creates a new node  representing grade break geometry, which is the result of combining the selected plane  with a new pivot plane  with user-specified parameters -. The pivot point represents the point of intersection of the two planes  and , which can be modified by grip-editing the pivot point. This process can be repeated iteratively to create a surface layout by combining planes with specific flow grades and directions, thus allowing the user more control on directing drainage to outfall points.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 6A","FIG. 5B"],"b":["502","502","504","506","602"]},"The user may click on the parking lot cut area . This will display a dynamic dimension object for the cut slope parameter  in the desired format. The user may edit the value of slope, and this will update three nodes: the geometry of parking cut area , the ground with parking lot  and the finished ground with parking lot and swale . All other nodes would remain undisturbed.","If swale overlaps the parking lot, it will cut into the parking lot surface. In that case, the user may desire to push the swale behind the parking lot. The user can accomplish this by clicking at a location on swale, and indicating (from context menu) that he desires to push it behind the previous operation. In this way, the elements can be pushed to front or back, according to user intent, until the desired result is obtained. In the model, the swale cut grid is represented by node  having an input parameter  and a swale baseline .",{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 6B","b":["610","502","502","610","612","602","614","526","528","602","614","502"]},{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 7","b":["702","702","704","704","706","706","706","708","708","704","710","706","708","710","704","706"]},"When the user sub-selects an offset sub-object , the offset parameter  is displayed via a transient dynamic dimension object. The user can edit the value of offset , and all the dependent elements are updated in the correct sequence. Since the offset parameter  controls the geometry of the bounded grid  as well as the offset curve , both these elements are updated first and then the dependent elements are updated, in an order dictated by the order of dependencies. A benched slope can be edited and fine-tuned in this way.","This concludes the description of the preferred embodiment of the invention. The following describes some alternative embodiments for accomplishing the present invention. For example, any type of computer, such as a mainframe, minicomputer, or personal computer, or computer configuration, such as a timesharing mainframe, local area network, or standalone personal computer, could be used with the present invention. In summary, embodiments of the invention allow users to optimize their designs with intuitive user interaction (in 2D and 3D) and dynamic feedback. For example, the user can change the pond bottom slope or water-level interactively to control the storage volume (e.g., users can change the slope of a pond bank interactively while trying to determine a maximum fill level of the pond\u2014the resulting volume will automatically\/dynamically update as the pond parameters are modified). Further, embodiments of the invention allow the users to track the history of operations interactively, and understand the steps with which the existing ground was re-formed into the finished ground. Being able to review designs in 3D helps users visualize the design, streamlining collaboration.","Further, embodiments of the invention allow users to build a stepped parking lot with attached bounded planes with specified flow grades and directions, to direct drainage away from a building footprint and into the outfall points. Embodiments of the invention allow users to add fine details like sidewalks, retaining walls, curbs and gutters, whose dimensions can be edited interactively. The user is presented with simple workflows to create enhanced land features and modify them using 3D model interaction.","In addition, an important aspect of a cost-effective design is to obtain a perfect earthwork balance. A grading plan may have to go through several iterations before it yields an acceptable earthwork balance. As the design progresses, the cut and fill values must be adjusted to minimize the earthwork. Embodiments of the invention allow the user to attain the earthwork balance by raising or lowering specific areas of cuts or fills interactively until the desired level of precision is obtained. Such interaction may be performed in-canvas while directly modifying a composite object and\/or sub-object in a dynamically updated terrain model. This allows the user to observe the impact of edits on many design aspects simultaneously (like drainage pattern, aesthetics) to build a cost-effective, sustainable design that balances all project requirements.","The foregoing description of the preferred embodiment of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 4B","FIG. 4A"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 5B","FIG. 5A"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIGS. 6A and 6B","FIGS. 5A and 5B"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
