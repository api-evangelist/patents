---
title: Synchronizing primary and secondary repositories
abstract: Various embodiments of systems and methods for synchronizing a primary repository and a secondary repository in a business infrastructure are disclosed. Content of artifacts present in the primary repository and the secondary repository are indexed. Based upon a search criteria received on the secondary repository, an integrated search service provided on the secondary repository is invoked to perform a combinatorial query on the indexed content and retrieve an identifier of each artifact corresponding to the search criteria. Based upon relevancy parameters, the retrieved identifiers are ranked and rendered as a categorized table including a first column and a second column for identifiers present in the primary repository and the second repository respectively. Based upon a user action received on the ranked identifiers in the first column of the categorized table, the associated artifacts are determined and downloaded from the primary repository to the secondary repository.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08862543&OS=08862543&RS=08862543
owner: Business Objects Software Limited
number: 08862543
owner_city: Dublin
owner_country: IE
publication_date: 20110613
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The field generally relates to computer systems, and more particularly to methods and systems to synchronize a primary repository and a secondary repository of data.","In current business environment, enterprise data centers contain a large centralized database containing business data. Users who operate on the business data, either for viewing or for updates, have their own user-specific databases through which they access the centralized databases. Users have to fetch data from the centralized business databases and load it on to their user-specific databases to use the business data for executing business processes. This practice could get cumbersome, since the centralized databases typically contain enormous amount of business data. Manual synchronization between the centralized databases and the user-specific databases may not be advisable in such cases since the user will have to go through each business document that contains the business data and identify the business data that is required for executing business processes.","Various embodiments of systems and methods for synchronizing a primary repository and a secondary repository in a business infrastructure are disclosed. In an embodiment, synchronizing the primary repository and the secondary repository includes making contents of the primary repository available to the secondary repository. The primary repository and the secondary repository store business artifacts that may have been produced during a development of a business service or a business product. To execute the synchronization, contents of the business artifacts present in the primary repository and the secondary repository are indexed. A user may enter a search criteria on the secondary repository, based upon which, the contents of the primary repository is made available to the secondary repository, and thus the primary repository and the secondary repository are synchronized.","According to an embodiment, based upon the search criteria received on the secondary repository, an integrated search service that is provided on the secondary repository is invoked to perform a combinatorial query on the indexed contents of the primary repository and the secondary repository. As a result of the combinatorial query, an identifier of each artifact corresponding to the search criteria is retrieved from the indexed contents. Based upon relevancy parameters, the retrieved identifiers are ranked and rendered as a categorized table on the secondary repository. The categorized table includes the identifiers of the artifacts present in the primary repository in a first column and the identifiers of the artifacts present in the secondary repository in a second column.","In a further embodiment, the user may choose to retrieve the artifacts corresponding to one or more of the identifiers retrieved on the first column, associated with the artifacts present in the primary repository. Based upon a user action received on the ranked identifiers in the first column of the categorized table, the artifacts present in the primary repository are determined. The determined artifacts are downloaded from the primary repository to the secondary repository. Thus, the primary repository and the secondary repository are synchronized.","These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.","Embodiments of techniques for systems and methods to synchronize a primary repository and a secondary repository are disclosed herein. An enterprise data management system includes a collection of functions that allows an enterprise or an organization to create and manage enterprise definition data. The enterprise data management system includes a collection of business repositories storing business information resulting from a development of a business service or a business process associated with the enterprise. In an embodiment, the business repositories may store business artifacts resulting from a development of a business service or a business product. Business users who operate on these business artifacts may have their user-specific repositories. To execute business development, users retrieve the business information from the business repositories to their user-specific repositories, depending upon the business development that needs to be executed. Contents of the business artifacts present in the business repository and the user-specific repository are indexed. A user may enter a search criteria on the user-specific repository, based upon which, the contents of the business repository is made available to the user-specific repository, and the business repositories are synchronized with user-specific repository of the user.","In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":["100","105","110","125","130","155","185","130","135","140","145","150","155","160","165","170","175","180","145","2","4","5","170","1","2","3","185","1","1","1","2","2","2","185","145","170","190","125","130","155","185","190"]},"To execute synchronization between a business repository (e.g. primary repository ) and a user-specific repository (e.g. secondary repository ), contents of the artifacts present in the primary repository server , the secondary repository server  and version manager  are indexed. Indexing the contents of the business artifacts includes collecting business information from the business artifacts and compiling the collected information into a file or a catalogue to facilitate efficient searching of contents of the business artifacts. The file or the catalogue may be an embodiment of a data structure having columns and rows to store the collected information in a manner that supports retrieval of the contents.","To index the contents of primary repository  and secondary repository , search service (e.g.  and ) is rendered to continually crawl primary repository  and secondary repository , and extract searchable contents of the business artifacts present in the repositories. In an embodiment, version manager  may include a search service to continuously crawl the version manger  and extract searchable contents of the business artifacts present in version manager . The searchable contents of an artifact are typically the contents of the artifact whose information may be used to identify the artifact. In an embodiment, metadata associated with each artifact includes information about the artifact, for instance the searchable contents of the artifact.","The searchable contents of the artifacts may include information about one or more users that have viewed or modified the artifacts, or the users that have the administrative rights to modify or add artifacts, user groups that include such users, the authorizations or administrative rights of such user groups with reference to the repositories, administrative rights of the artifacts, administrative rights of parent artifacts based upon a hierarchy of artifacts, and the like. The contents include information about dependencies that exist between the artifacts baseline information of the artifacts that describes the original contents of the artifacts, versions information of the artifacts that describes the variation of the original contents of the artifacts, and the like. The contents of the artifact include quality rating information for all the artifacts, where the quality rating depends upon the version of the artifact. In an embodiment, a modification to one or more artifacts may include a modification done to the information of the searchable contents.","For instance, an artifact \u2018\u2019 may be accessed by users \u2018A\u2019 and \u2018B\u2019 and user \u2018A\u2019 may have the administrative rights to modify the contents of the artifact \u2018\u2019. The artifact \u2018\u2019 may be depending upon a parent artifact \u2018\u2019 existing in a hierarchy. The searchable contents of the artifact \u2018\u2019 may be described as follows:\n\n","The above information is extracted from each of the artifacts present in primary repository , secondary repository  and version manager . A data structure is created to organize and store the extracted searchable contents of the business artifacts and an indexer is enabled to index the contents of the business artifacts present in primary repository  and secondary repository . In an embodiment, the searchable contents of business artifacts present in primary repository  are stored in an associated content index  and the searchable contents of business artifacts present in secondary repository  are stored an associated in content index . In an embodiment, an index run is scheduled to timely monitor the primary and the secondary repositories (e.g.  and ). Based upon any modifications (e.g. addition of new artifacts or modification of existing artifacts) in primary repository  or secondary repository , the contents of modified artifacts or new artifacts are also indexed. The content index (e.g.  and ) may schedule the index run to monitor primary repository  and secondary repository . In an embodiment, an associated schedule service (e.g.  and ) may schedule the index run to monitor primary repository  and secondary repository .","Based upon a search criteria received at the integrated search tool box  present in user interface of the secondary repository , integrated search service tool  associated with secondary repository  is invoked to perform a combinatorial query on content index  of primary repository , content index  of secondary repository  and version manager , and retrieve an identifier for each artifact and associated metadata corresponding to the search criteria. In an embodiment, version manager  stores one or more variations of the baseline artifacts present in primary repository  and secondary repository . For instance, version manager  includes baseline artifact , and corresponding variations version \u2032 and version \u2033. The variations of the baseline artifact may have been generated during a process of business development. The baseline artifact that undergoes any modification during the business development is stored as a variation of the baseline artifact to facilitate availability of all the variations of the artifact.","Integrated search tool box  that is provided on user interface for secondary repository  receives a search criteria from a user. In an embodiment, a search criterion may include a set of search keywords entered by the user based upon which primary repository  and second repository  are synchronized. The search criteria may include one or more conditions that have to be satisfied by an artifact to be elected as a search result. Integrated search service tool  associated with integrated search tool box  is invoked to process the search criteria received by eliminating stop-words present in the received search criteria. Stop-words may be described as common-words that do not carry substantial meaning to be considered for performing a search. For instance, in a search criterion \u201csales report of the country USA\u201d, the common-words \u201cof\u201d and \u201cthe\u201d are considered as stop-words. Such stop-words may be eliminated from the search criteria. Theme-words present in the received search criteria are determined by integrated search service tool . Theme-words may be described as a group of words about a common topic and facilitate in finding a set of related words that may be associated with the search criteria. For instance, in a search criterion \u201csales report for USA\u201d, the theme-word \u2018USA\u2019 may have a group of words associated with it, like \u2018America\u201d, \u2018United States\u2019 etc.","Integrated search service tool  creates an index search query to perform the combinatorial query on the indexed contents of primary repository , secondary repository , and version manager . A combinatorial query may be described as a query performed simultaneously on multiple repositories, to retrieve multiple results that satisfy a co-occurrence of conditions in the search criteria. For instance, a search criteria \u201csales report of the country USA for year 2012\u201d, may be queried on primary repository , secondary repository  and version manager  simultaneously, to retrieve one or more artifacts and associated metadata from all the three databases (,  and ). A combinatorial query is performed on content index  of primary repository , content index  of secondary repository  and version manager  simultaneously, to retrieve artifact , artifact , artifact \u2032\u201d that satisfies a co-occurrence of the conditions \u201csales report of the country USA\u201d and \u201cfor year 2012\u201d. In an embodiment, a recurring combinatorial query may be performed based upon a group of search criteria that may be received at a same instance, or at difference instances. For example, a group of search criteria may include three search criteria that are entered subsequently, and based upon the group of three search criteria, the recurring combinatorial query is performed. In another embodiment, the query may also result in retrieving artifacts that partially satisfy the search condition. A weight for each artifact may be determined based upon the number of search conditions it satisfies.","Based upon the combinatorial query performed on content index  of primary repository , content index  of secondary repository  and version manager , a set of identifiers associated with the artifacts and associated metadata corresponding to the search criteria are retrieved. An identifier of the artifact establishes an identity of the artifact. Based upon relevancy parameters, the retrieved identifiers are ranked and rendered as categorized table  on user interface for secondary repository . Categorized table  includes first column  to render the ranked identifiers associated with the artifacts present in primary repository and second column  to render the ranked identifiers associated with the artifacts present in second repository . In an embodiment, the identifiers retrieved from version manager  are also rendered on first column .","In another embodiment, the search criteria may be received on primary repository  or secondary repository , to query one or more primary repositories or one or more secondary repositories, or a combination of primary and secondary repositories. The identifiers of artifacts present in a repository that receives the search criteria\u2014are rendered on a second column. The identifiers of artifacts present in one or more repositories that are being queried\u2014are rendered on a first column. Rendering the identifier of the artifacts corresponding to the search criteria includes creating a row for each of the retrieved identifiers of the artifact. Each row represents one artifact corresponding to the search criteria and is identified by the identifier associated with that artifact. Each row may include one or more fields, and the fields are populated using the associated metadata of the artifact of each retrieved identifier. The fields may include a name field describing the name of the associated artifact, a location field describing the location of the artifact, and the like.","In an embodiment, version manager  is associated with primary repository  and secondary repository . The content of artifacts and variations of the artifacts stored in version manager  are also indexed simultaneous to primary repository . The combinatorial query is performed simultaneously on primary repository , secondary repository  and version manager . The identifiers retrieved from version manager  are rendered on first column  along with the identifiers retrieved from primary repository .","Ranking of identifiers present in the second column  includes querying the secondary repository , retrieving identifiers associated with the artifacts that correspond to the search criteria and sorting the retrieved list of identifiers based upon a hit-score of each of the artifacts associated with the identifiers. In an embodiment, retrieving and ranking the identifiers present on second column  includes identifying the artifacts available in the repository that receives the search criteria and returning a list of one or more artifacts corresponding to the search criteria, present in the repository that receives the search criteria.","Ranking of identifiers present in the first column  includes positioning the identifiers of the artifacts based upon a relation between the identifiers. The relevancy parameters are used to determine the relation between the identifiers for ranking. In an embodiment, the relevancy parameters includes a hit-score of each artifact, a latest version number, a maximum possible quality rating, a weight for a version number, a weight for version label, a weight for a proximity based upon a security principle, a weight for quality rating, a weight for hit-score, artifact containers containing the retrieved artifacts, and the like.","The hit score of each artifact describes a number of times the artifact has appeared as a result of querying a repository based upon the search criteria. The latest version number of an artifact describes a recent variation of the artifact. In an embodiment, second column  may include a version of an artifact present in secondary repository , and first column  may include an earlier version of the artifact present in secondary repository . The latest version number of the artifact helps in determining the recent variation of the baseline artifact that may have occurred during a business development.","In an embodiment, the identifiers of the artifacts present in the primary repository  and the version manager  are retrieved by determining a version number for each identifier of the artifact associated with the search criteria, present in the primary repository  and the version manager , and by determining a version number for each identifier of the artifact associated with the search criteria, present in the secondary repository . For each artifact of the primary repository  or the version manager  that has a version number greater than a version number of a corresponding artifact of the secondary repository , the identifiers of the artifacts are retrieved from the primary repository  or the version manager .","In an embodiment, a determination is made whether the artifact associated with the retrieved identifiers that are rendered on the first column  are of a version lesser than a version of the artifacts associated with the identifiers rendered on the second column . If the version of the artifact associated with the identifier rendered on the second column  is greater, then, the artifact present in the secondary repository  is a newer version compared to the artifact present in the primary repository . Hence, such an older version of the artifact may not be intended for retrieval on the first column .","The quality rating of an artifact is described as a characteristic property that defines a nature of the artifact with reference to a variation of the contents of the artifact. For instance, a baseline version of the artifact describes the original contents of the artifact, as configured at the time of creation of the artifact and hence, such a baseline version is of a highest quality rating. A first variation of the artifact may have a quality rating lower than the highest quality rating and a second variation of the artifact may have a quality rating lower than the quality rating of the first variation, and so on. Thus, the maximum possible quality rating of an artifact may be described as a quality rating of the least varied version of the artifact available.","A weight of a parameter may be described as a numeric value that defines a relative proximity or a relative importance of various parameters. For instance, between the parameters version number, version label and quality rating, a highest weight may be assigned to quality rating, thereby defining the parameter quality rating as the most important parameter among the parameters version number, version label and quality rating. A numeric value may be assigned for each of the parameters depending upon the importance of that parameter during ranking of the identifiers of the artifacts. Such a numeric value may be assigned as a weight for the version number of each artifact, a weight for the version label of each artifact, a weight for proximity of each artifact, a weight for the quality rating of each artifact and a weight for the hit-score of each artifact.","The proximity of an artifact is determined based upon the administrative rights, and may be described as a distance between the artifact in consideration and a user who is accessing the artifact. The proximity is a numeric value that is calculated based upon a user's access to each artifact associated with the identifiers retrieved from primary repository. Artifact containers may be described as database containers that store primary repositories and secondary repositories. For example,  is a block diagram illustrating an exemplary method involved during the synchronization of a primary repository and a secondary repository in a business infrastructure, according to an embodiment.",{"@attributes":{"id":"p-0039","num":"0044"},"figref":["FIG. 2","FIG. 2"],"b":["210","205","205","207","213","217","207","209","211","213","215","217","219","221","223","210","212","216","224","212","214","216","218","220","222","224","226","228"]},"Based upon the administrative rights, to compute proximity between user  and artifact , the distance between user  and artifact  is determined. The distance between user group  and artifact container  is one, since user group  has to perform one jump (between  and ) to access artifact container . Hence, the proximity between artifact container  and user group  is the highest, according to .","The distance between user group  and artifact container  is three, since user group  has to perform three jumps (between  and ; between  and ; and between  and ) to access artifact container . Hence, the proximity between artifact container  and user group  is lower compared to the above example (between  and ).","Similarly, the distance between user  and artifact  is seven, since user  has to perform seven jumps (between  and ; between  and ; between  and ; between  and , between  and ; between  and ; between  and ) to access artifact . Hence, the proximity between artifact  and user  is least compared to the above two examples (between  and ; and between  and ).","Based upon the administrative rights of a user to an artifact, a weight for the proximity for a user with a direct access to the artifact is computed as a maximum weight for proximity. For instance, user group  has administrative rights to artifact container , and user group  has direct access to artifact container . Hence the numeric value assigned to the weight for the proximity of user group  with direct access to artifact container  is the maximum weight for proximity. The weight for proximity \u2018W\u2019 for user \u2018U\u2019 with a direct access may be computed as:\n\n\n","Based upon the administrative rights of a user to an artifact, a weight for the proximity for a user with an indirect access to the artifact is computed as an intermediate weight for proximity. For instance, if user group  had direct access to artifact container , and if user  wanted to access artifact container , since user  belongs to user group  that has direct access to artifact container , the access of user  is indirect. In an embodiment, the weight for proximity for a user with an access to the artifact existing in a hierarchy is computed as a product of the maximum weight of the proximity and a numeric value assigned to the access based upon a number of levels in the hierarchy. For instance, if user group  wanted to access artifact  that exists in a hierarchy, the access of user  is indirect and hierarchical. The weight for the proximity \u201cW\u201d for a user \u201cU\u201d with an indirect access may be computed as:",{"@attributes":{"id":"p-0045","num":"0050"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"WU","mo":"=","mrow":{"mfrac":{"mi":["K","N"]},"mo":"\u00d7","msub":{"mi":"WU","mrow":{"mi":["ma","x"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}}}}},"where K denotes a proximity constant for an indirect access and N denotes the number of levels in the hierarchy. The proximity constant \u2018K\u2019 may have any value between 0.1 and 1 (0.1\u2266K\u22661), where the value 0.1 denotes a minimum proximity or a maximum distance (or the maximum allowable jumps) and the value 1 denotes a maximum proximity or a minimum distance (or the minimum allowable jumps, which is one jump). Similarly, the number of levels may have any value between 1 and \u2018n\u2019 where \u2018n\u2019 is the maximum allowable levels, and the value 1 denotes a direct access of at least 1 jump (1\u2266N\u2266n).","Applying this computation for the above example of user group  accessing artifact , having a maximum allowable jumps of ten, and an actual number of jumps of five, the weight for proximity for user group  is:",{"@attributes":{"id":"p-0048","num":"0053"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":"WU","mn":"207"},"mo":"=","mrow":{"mfrac":{"mn":["0.5","3"]},"mo":"\u00d7","msub":{"mi":"WU","mrow":{"mi":["ma","x"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}}}}},"Based upon the above relevancy parameters scores are computed to rank the retrieved identifiers. A first computed score associated with the relevancy parameters is calculated by computing a product of a hit-score and a weight for the hit-score for each artifact associated with the identifier retrieved from the primary repository and\/or the version manager. The first computed score SCfor each artifact associated with the identifier retrieved may be defined as:\n\n\n","where \u2018S\u2019 is the hit score and WS is the weight for the hit-score for each artifact.","A second computed score associated with the relevancy parameters is calculated by computing a ratio of the version number and the latest version number of each artifact associated with the identifier retrieved from the primary repository, a product of the ratio and the weight for the version number and a sum of the product and the first computed score. The second computed score SCfor each artifact associated with the identifier retrieved may be defined as:",{"@attributes":{"id":"p-0052","num":"0057"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":"SC","mn":"2"},"mo":"=","mrow":{"msub":{"mi":"SC","mn":"1"},"mo":"+","mrow":{"mfrac":{"mi":"V","msub":{"mi":["V","l"]}},"mo":"\u00d7","mi":"WV"}}}}}},"where \u2018SC\u2019 is the first computed score, \u2018V\u2019 is the version number, \u2018V\u2019 is the latest version number, and \u2018WV\u2019 is the weight for the version number for each artifact.","A third computed score associated with the relevancy parameters is calculated by determining if each artifact associated with the identifier retrieved from the primary repository is labeled and if the artifacts are labeled, a sum of the weight for the labeled artifact and the second computed score is determined. The third computed score SCfor each artifact associated with the identifier retrieved may be defined as:\n\n\n","where \u2018SC\u2019 is the second computed score, and \u2018WL\u2019 is the for each of the labeled artifacts.","A fourth computed score associated with the relevancy parameters is calculated by computing a ratio of the quality rating and the maximum possible quality rating for each artifact associated with the identifier retrieved from the primary repository, a product of the ratio and the weight for the quality rating for each artifact and a sum of the product and the third computed score. The fourth computed score \u2018SC\u2019 for each artifact associated with the identifier retrieved may be defined as:",{"@attributes":{"id":"p-0057","num":"0062"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":"SC","mn":"4"},"mo":"=","mrow":{"msub":{"mi":"SC","mn":"3"},"mo":"+","mrow":{"mfrac":{"mi":"QR","msub":{"mi":"QR","mrow":{"mi":["m","a","x"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}}},"mo":"\u00d7","mi":"WQR"}}}}}},"where \u2018SC\u2019 is the third computed score, \u2018QR\u2019 is the quality rating, \u2018QR\u2019 is the maximum possible quality rating, and \u2018WQR\u2019 is the weight for the quality rating for each artifact.","A fifth computed score associated with the relevancy parameters is calculated by computing a sum of the weight for proximity of a user, based upon administrative rights for each artifact associated with the identifier retrieved from the primary repository and the fourth computed score. The fifth computed score \u2018SC\u2019 for each artifact associated with the identifier retrieved may be defined as:\n\n\n","where \u2018SC\u2019 is the fourth computed score, and WUis the weight for proximity of a user based upon the administrative rights for each artifact.","Referring back to , in an embodiment, if one or more of the artifacts associated with the retrieved identifiers on the first column are dependent on one or more artifacts present in the primary repository or the version manager, a dependency list is generated. The dependency list contains a list of such artifacts associated with the retrieved identifiers and their corresponding dependent artifacts. A determination is made whether the dependent artifacts are associated with the search criteria. Based upon the determination and the dependency list, a total number of dependencies is computed for each artifact associated with the identifiers present in the first column. For each dependent artifact, administrative rights for the user who provided the search criteria are determined. If the user has administrative rights to each of the dependent artifacts, then a computed score for such dependent artifacts are equated to the fifth computed score associated with the relevancy parameters for the artifact associated with the retrieved identifiers. Further, if the dependent artifacts are already present in the secondary repository, the identifiers associated with such dependent artifacts are not retrieved. If the dependent artifacts are not present in the secondary repository, the identifiers associated with such dependent artifacts are retrieved from the primary repository and\/or version manager and rendered on the first column.","A sixth computed score associated with the relevancy parameters is calculated for the artifacts associated with the retrieved identifiers, having dependencies. The sixth computed score \u2018SC\u2019 for each artifact associated with the retrieved identifier, having dependencies\u2014may be defined as:\n\n\n","where \u2018SC\u2019 is the fifth computed score, Wd is the weight for the dependencies and D is the total number of dependencies for each artifact associated with the retrieved identifiers.","In an embodiment, an overall computed score associated with overall relevancy parameters may include any number of parameters associated with attributes, their corresponding weights and their corresponding relevancies. The overall relevancy parameter may be defined as a relevancy of any parameters associated with corresponding attributes, and may be defined by a user, a system, or the like. Such an overall computed score associated with the overall relevancy parameters may be defined as:",{"@attributes":{"id":"p-0065","num":"0070"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["SC","overall"]},"mo":"=","mfrac":{"mrow":[{"munderover":{"mo":"\u2211","mrow":{"mi":"I","mo":"=","mn":"0"},"mi":"Z"},"mo":"\u2062","mrow":{"mo":"\u222b","mrow":{"mrow":{"mo":["(",")"],"msub":{"mi":["W","I"]}},"mo":"\u00d7","msub":{"mi":["R","I"]}}}},{"munderover":{"mo":"\u2211","mrow":{"mi":"I","mo":"=","mn":"0"},"mi":"Z"},"mo":"\u2062","msub":{"mi":["W","I"]}}]}}}}},"where SCis the overall computed score; Z is the total number of parameters defined by P, where P={P, P, P, . . . P, . . . Z}; R is a set of computed relevancy defined by R={R, R, R, . . . R, . . . R}, where \u2018R\u2019 is the relevancy number associated with P, where 0\u2266R\u22661; \u2018W\u2019 is as set of weights defined by W={W, W, W, . . . W, . . . W}, where Wis the weight associated with parameter P; and \u2018\u222b( )\u2019\u2014the integral function modifies the weight Wwhen the dependencies are found or when Wd is found to be higher.","Thus, for Iparameter, the overall computed score may be defined as:",{"@attributes":{"id":"p-0068","num":"0073"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["SC","I"]},"mo":"=","mfrac":{"mrow":{"mo":"\u222b","mrow":{"mrow":{"mo":["(",")"],"msub":{"mi":["W","I"]}},"mo":"\u00d7","msub":{"mi":["R","I"]}}},"mi":"WI"}}}}},"For instance, if three parameters are defined to compute the overall computed score of an artifact, Z=3, and I=0, 1, 2, 3; The overall computed score of the artifact may be described as:",{"@attributes":{"id":"p-0070","num":"0075"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["SC","overall"]},"mo":"=","mfrac":{"mrow":[{"mrow":[{"mo":"\u222b","mrow":{"mrow":{"mo":["(",")"],"msub":{"mi":"W","mn":"0"}},"mo":"\u00d7","msub":{"mi":"R","mn":"0"}}},{"mo":"\u222b","mrow":{"mrow":{"mo":["(",")"],"msub":{"mi":"W","mn":"1"}},"mo":"\u00d7","msub":{"mi":"R","mn":"1"}}},{"mo":"\u222b","mrow":{"mrow":{"mo":["(",")"],"msub":{"mi":"W","mn":"2"}},"mo":"\u00d7","msub":{"mi":"R","mn":"2"}}},{"mo":"\u222b","mrow":{"mrow":{"mo":["(",")"],"msub":{"mi":"W","mn":"3"}},"mo":"\u00d7","msub":{"mi":"R","mn":"3"}}}],"mo":["+","+","+"]},{"msub":[{"mi":"W","mn":"0"},{"mi":"W","mn":"1"},{"mi":"W","mn":"2"},{"mi":"W","mn":"3"}],"mo":["+","+","+"]}]}}}}},"where W, W, W and W are weights of four relevancy parameters R, R, R, and R. The overall computed score is a summation of computed scores for a zeroth computed score, the first computed score, the second computed score, and the third computed score divided by the sum of their respective weights. Thus, the computed scores are computed for all the artifacts, and the corresponding identifiers are ranked in the first column of the categorized table.","Ranking the retrieved identifiers in the first column of the categorized table includes sorting the retrieved identifiers based upon the fifth computed score or the sixth computed score (for the artifacts having dependencies) associated with the relevancy parameters for each artifact associated with the identifiers retrieved from the primary repository and the version manager.","Based upon a user action received on the ranked identifiers in the first column of the categorized table, the associated artifacts are determined and downloaded from the primary repository and\/or the version manager to the secondary repository. In an embodiment, the user may choose to download a first five ranked identifiers. The artifacts associated with the first five identifiers are determined and downloaded to the secondary repository.","In an embodiment, based upon the relevancy parameters, a minimum allowable score and an allowable score is computed for the identifiers in the first column of the categorized table. A minimum allowable score may be described as a fifth computed score or a sixth computed score of that artifact corresponding to the identifier having a minimum rank to qualify for retrieving the associated artifact. An allowable score may be described as a fifth computed score or a sixth computed score of the artifacts corresponding to the identifiers having a rank higher than the minimum rank to quality for retrieving the associated artifact. All the identifiers having the computed score greater than the minimum allowable score is determined and sorted according to their respective ranks, to form job object . A job object may be described as a job that needs to be performed by integrated search tool. In an embodiment, a user may be provided with an option to enable execution of job object . For instance, a user interface element \u2018checkbox\u2019  may be checked by the user, to notify secondary repository server  to execute job object . Integrated search tool determines the administrative rights corresponding to the identifiers present in job object . Job object  is executed by schedule service, to access the primary repository and the version manager, and determine the artifacts associated with the identifiers present in job object . The schedule service may be utilized to run job object  at regular intervals. In an embodiment, the scheduled job run is executed for job object  by signing in to the primary repository. In an embodiment, signing in to the repository includes determining the administrative rights available for the user to access the primary repository, and accessing the artifacts. The determined artifacts corresponding to the job object are downloaded to create an archive file. In an embodiment, the archive file is uploaded to the secondary repository and deployed, to synchronize the secondary repository with the primary repository.",{"@attributes":{"id":"p-0075","num":"0080"},"figref":"FIG. 3","b":["310","320","330","340","350","360"]},{"@attributes":{"id":"p-0076","num":"0081"},"figref":"FIG. 4","b":["410","420","430","440","450"]},{"@attributes":{"id":"p-0077","num":"0082"},"figref":"FIG. 5","b":["510","520","530","540","550","560","570"]},{"@attributes":{"id":"p-0078","num":"0083"},"figref":"FIG. 6","b":["600","605","610","615","630","635","640","620","625","605","610","615","615","630","635","640","615","620","625","635","640"]},"Processor  associated with database , indexes the contents of artifacts present in the primary repository, the secondary repository and a version manager. Primary repository server  is responsible for accessing the artifacts stored in the primary repository and rendering searchable contents of the artifacts to processor  for indexing. Version manager server  is responsible for accessing the artifacts stored in the version manager and for rendering searchable contents of the artifacts to processor  for indexing. Secondary repository server  is responsible for accessing the artifacts stored in the primary repository and rendering searchable contents of the artifacts to processor  for indexing. User interface  associated with secondary repository server  is responsible for receiving search criteria from a user, based upon which the primary repository and the secondary repository are synchronized.","Based upon the search criteria received on user interface  associated with secondary repository server , integrated server  invokes integrated service tool  to perform a combinatorial query on the indexed contents of the primary repository, the secondary repository and the version manager. Upon executing the query, integrated service tool  retrieves an identifier of each artifact and associated metadata corresponding to the search criteria. Integrated server  is responsible for ranking the retrieved identifiers based upon relevancy parameters. Integrated server  is also responsible for rendering the ranked identifiers as a categorized table on user interface  associated with secondary repository server . The categorized table includes a first column and a second column, where the identifiers of the artifacts present in the primary repository are rendered on the first column and the identifiers of the artifacts present in the secondary repository are rendered on the second column. Integrated server  is responsible for computing the relevancy parameters, based upon which the identifiers are ranked.","Based upon a user action received on the ranked identifiers in the first column of the categorized table, secondary repository server  is invoked to determine the artifacts and the associated metadata present in the primary repository and the version manager and to download the determined artifacts and the associated metadata from the primary repository and the version manager to the secondary repository.","In an embodiment, processor  is responsible for rendering a search service to continually crawl the primary repository, the secondary repository and the version manager, and extract searchable contents of the artifact present in the primary repository, the secondary repository and the version manager to create a data structure. The data structure is created to organize and store the searchable contents of the artifacts. Processor  is also responsible to enable an indexer to index the contents of the artifacts, and further schedule an index run to monitor the primary repository, the secondary repository and the version manager. Based upon a modification in the primary repository, the secondary repository or the version manager, processor  indexes the contents of the modified artifacts or the new artifacts. The modification to the primary repository, the secondary repository and the version manager may include editing the existing artifacts or including new artifacts.","In an embodiment, integrated service tool  is configured to simultaneously query the primary repository, the secondary repository and the version manager and retrieve artifacts and associated metadata from primary repository, the secondary repository and the version manager. The version manager typically includes information of one or more versions or variations of the artifacts present in the primary repository and the secondary repository.","In an embodiment, based upon the relevancy parameters, integrated server  computes a minimum allowable score for the identifiers in the first column of the categorized table. The minimum allowable score determines the identifiers whose artifacts have to be downloaded from the primary repository. Integrated server  also computes an allowable score for each artifact in the first column of the categorized table, and determines the identifiers present in the first column of the categorized table with a computed score that is greater than the minimum allowable score. The determined identifiers are stored in a job object associated with secondary repository server . Integrated server  determines administrative rights for the artifact corresponding to the determined identifiers, and accesses the primary repository to execute a scheduled job run for the job object. Executing the scheduled job run includes determining the artifacts associated with the determined identifiers. Integrated server  downloads the determined artifacts corresponding to the job object to create an archive file. The archive file is uploaded to the secondary repository by secondary repository server , and deployed to synchronize the secondary repository with the primary repository.","Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer readable storage media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.",{"@attributes":{"id":"p-0087","num":"0092"},"figref":"FIG. 7","b":["700","700","705","755","700","740","755","710","715","710","715","705","715","700","725","730","700","725","730","700","735","700","750","750","700","745","700","720","760","760","760","750","760"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transaction, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transaction data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system (e.g., ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","In the above description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however that the invention can be practiced without one or more of the specific details or with other methods, components, techniques, etc. In other instances, well-known operations or structures are not shown or described in details to avoid obscuring aspects of the invention.","Although the processes illustrated and described herein include series of steps, it will be appreciated that the different embodiments of the present invention are not limited by the illustrated ordering of steps, as some steps may occur in different orders, some concurrently with other steps apart from that shown and described herein. In addition, not all illustrated steps may be required to implement a methodology in accordance with the present invention. Moreover, it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.","The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments of the invention with particularity. The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
