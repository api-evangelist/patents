---
title: Estimating power consumption of an electronic circuit
abstract: A method comprises estimating power consumption of an electronic circuit. The estimating includes assigning a first gate of the at least one gate into a priority queue based on a levelized result of the electronic circuit for a full circuit calculation and assigning a second gate of the at least one gate into the priority queue which fan-out gate is directly connected to a fan-in gate of a resized gate for an incremental circuit calculation. The estimating includes, for each gate from the priority queue, performing the following operations. Latest and earliest signal arrival times at an output net of the gate are determined by static timing analysis and calculating a glitch window as difference, and a transition metric is calculated for the output net based on the glitch window. The operations include determining an upper bound of signal transitions, and estimating the power consumption based on the upper bound.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08612911&OS=08612911&RS=08612911
owner: International Business Machines Corporation
number: 08612911
owner_city: Armonk
owner_country: US
publication_date: 20120203
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND","SUMMARY","DESCRIPTION OF EMBODIMENTS"],"p":["This application claims priority under 35 U.S.C. 119 from European Patent Application No. EP11155642 filed Feb. 23, 2011, the entire contents of which are incorporated herein by reference.","Embodiments relate in general to the field of developing integrated electrical circuits, and in particular to a method for estimating power consumption of an electronic circuit, and a system for estimating power consumption of an electronic circuit. Still more particularly, embodiments relate to a data processing program and a computer program product for estimating power consumption of an electronic circuit.","In CMOS technology glitch power dissipated in combinational circuits owns an important portion of the total dynamic power consumption. A State-of-the-Art method for power estimation is called Monte Carlo Simulation (MCS). For this technique, a digital simulator and information about gate and interconnect delays are necessary. The runtime of MCS is high.","Statistical Methods (SM), e.g. IMS-PE, CREST, TPS, are also extensively investigated techniques. SMs are like one-period simulation using a special gate model which requires signal probabilities instead of multi-valued logic. It's faster than Monte Carlo simulation. The nature of SM is like a one-period digital simulation. Therefore, its runtime is still not low enough. In the lack of consideration of correlations the accuracy is also limited. Test cases have shown that especially the estimated power on the nets near the POs may show up to 400% error.","In VLSI design, great attention is paid to the power consumption of circuits. Research covers power estimation and power optimization from system to electrical level. The challenge of lower-level power estimation is to find a reasonable trade-off between computational effort and accuracy of power estimation. For instance, the tools based on SMs can estimate the dynamic power of combinational circuits very efficiently. However, they all suffer more or less from a poor accuracy. Especially, if the dynamic power per net is considered, a satisfying accuracy cannot be reached.","In CMOS circuits, power is dissipated due to the static leakage current and the dynamic current caused by signal transition. During the signal transition a dynamic current flows through the transistor and charges or discharges the parasitic capacitances. The appropriate power is called dynamic power. It can be modeled according to equation (1):",{"@attributes":{"id":"p-0008","num":"0007"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["P","dynamic"]},"mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"n"},"mo":"\u2062","mrow":{"mfrac":{"mn":["1","2"]},"mo":["\u2062","\u2062","\u2062","\u2062"],"msubsup":{"mi":["V","dd"],"mn":"2"},"msub":[{"mi":["C","n"]},{"mi":["f","c"]},{"mi":["\u03b1","n"]}]}}}},{"mrow":{"mo":["(",")"],"mn":"1"}}]}}}}},"Wherein V, f, C, and \u03b1are supply voltage, clock frequency, net capacitance and signal transition rate, respectively. It is obvious that besides scaling down supply voltage and clock frequency, one can also reduce the product of transition rate and net capacitance or either of them to reduce dynamic power.","In combinational circuits, signals are expected to change at most once in one clock period. However, there are almost always unnecessary signal transitions, which are called glitches. If the timing conditions such as setup-time and hold-time of the registers are satisfied, the circuit can still work. However, the signal transition rate an is increased due to the glitches, and therefore more power is consumed by the unnecessary signal transitions. If glitches can be eliminated, dynamic power is reduced. Glitches are caused by different arrival times of signals at the inputs of the gate.","Algorithms were proposed to optimize dynamic power consumption. For full-custom design, power optimization algorithms can result in a glitch-free design. A conventional technique is called path balancing. Besides, hazard filtering is another technique proposed which can be considered as an extension of path balancing. It shows that it is not necessary to balance the signal path exactly to eliminate the glitches. This technique indicates that the gate inertia can stop not only the generation but also the propagation of glitches. According to hazard filtering, a glitch free design needs to satisfy the requirement that the differences of signal arrival times at the inputs of all gates in the circuit must be less than their inertial delays.","Conventional techniques apply a zero-delay model in the simulation to reduce the number of events per period since if normal delay model (non-zero delay model) is applied in the simulation, lots of events could probably be generated in every clock period to model the circuit behavior. In applying the zero-delay model the whole simulation must be shorter, obviously, because the number of events per period is no more than the number of the gates in the circuit. However, the accuracy would be destroyed, if no further method would be employed to take care of the glitches.","Some example embodiments include a method comprising estimating power consumption of an electronic circuit, wherein the electronic circuit comprises at least one logic cone with at least one gate having a single output. The estimating includes assigning a first gate of the at least one gate into a priority queue based on a levelized result of the electronic circuit for a full circuit calculation. The estimating includes assigning a second gate of the at least one gate into the priority queue which fan-out gate is directly connected to a fan-in gate of a resized gate for an incremental circuit calculation. The estimating includes, for each gate from the priority queue, performing the following operations. The operations include popping the gate from the priority queue. The operations include determining latest and earliest signal arrival times at an output net of the gate under consideration by static timing analysis and calculating a glitch window as difference. The operations include calculating a transition metric for the output net based on the glitch window. The operations include, in response to the gate not being the end of the logic cone being evaluated, pushing its fan-out gates to the priority queue. The operations include determining an upper bound of signal transitions from the calculated transition metric. The operations include estimating the power consumption based on the upper bound.","The description that follows includes exemplary systems, methods, techniques, instruction sequences and computer program products that embody techniques of the present inventive subject matter. However, it is understood that the described embodiments may be practiced without these specific details. In other instances, well-known instruction instances, protocols, structures and techniques have not been shown in detail in order not to obfuscate the description.","Some example embodiments provide a method for estimating power consumption of an electronic circuit and a system for estimating power consumption of an electronic circuit, which are able to solve the problem of fast and accurate power estimation of integrated circuits and the above mentioned shortcomings and pain points of prior art power estimation of integrated circuits.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 1","FIG. 9","FIG. 11","FIG. 9"],"b":["300","1","2","3","4","5","310","320","330","340","300","1","2","3","5","4","4"]},"Referring to  the shown embodiment employs a system  for estimating power consumption of an electronic circuit using a gate-level design description. Some example embodiments of such an electronic circuit to evaluate are shown exemplary in  or  and comprise at least one cone , \u2032 with at least one gate X, X, X, X, X\u2032, X having a single output net N, N, N, N, N only. The shown system  for estimating power consumption of an electronic circuit is represented by a computing environment and comprises a user interface  for managing I\/O functions of the system , a data storage  for storing computer usable program code and data, and a data processing engine  in electronic communication with the user interface  and the data storage . According to some example embodiments, the data processing engine  assigns at least one gate X into a priority queue  based on a levelized result of the electronic circuit  in case of full circuit calculation. In case of incremental circuit calculation the data processing engine  assigns at least one gate X into the priority queue  which fan-out gate is directly connected to a fan-in gate of a resized gate X\u2032. For each gate from said priority queue  the data processing engine  performs following steps: Popping first gate X, X from the priority queue , determining latest and earliest signal arrival times LAT, EAT at an output net N, N of the gate X, X under consideration by static timing analysis and calculating a glitch window as difference; calculating a transition metric for the output net N, N based on the glitch window. If the gate X, X is not the end of the logic cone , \u2032 being evaluated pushing its fan-out gates X, X; X\u2032 to the priority queue ; determining an upper bound of signal transitions from the calculated transition metrics; and estimating the power consumption based on the upper bound.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2"},"Referring to  the shown embodiment employs a method for estimating power consumption of an electronic circuit using a gate-level design description, wherein some example embodiments of such an electronic circuit to evaluate are shown in  or  and comprise at least one cone , \u2032 with at least one gate X, X, X, X, X\u2032, X having a single output net N, N, N, N, N only. According to some example embodiments, in step S at least one gate X is assigned into the priority queue  based on a levelized result of the electronic circuit in the case of full circuit calculation; or at least one gate X which fan-out gate is directly connected to a fan-in gate of a resized gate X\u2032 is assigned into the priority queue  in the case of incremental circuit calculation. In step S first gate X, X is popped from the priority queue  and in step S latest and earliest signal arrival times LAT, EAT at an output net N, N of the gate X, X under consideration are determined by static timing analysis and a glitch window is calculated as difference. In step S a transition metric for the output net N, N is calculated based on the glitch window. Query S checks if the gate X, X under consideration is the end of the logic cone , \u2032 being evaluated. If the gate X, X under consideration is the end of the logic cone , \u2032 being evaluated the method continuous with step S. If the gate X, X under consideration is not the end of the logic cone , \u2032 being evaluated its fan-out gates X, X; X\u2032 are pushed into the priority queue  in step S. In step S an upper bound of signal transitions is determined from the calculated transition metrics; and in step S the power consumption is estimated based on the upper bound. Query S checks if the priority queue  is empty. If the priority queue  is not empty the method returns to step S. If the priority queue  is empty the method is ended.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 3","FIGS. 4-6"]},"Referring to  the exemplary logic AND-gate X comprises two input nets A, B and only one output net C and has an inertial delay \u0394G. Referring to , V() denotes a voltage waveform at input net A, and V() denotes a voltage waveform at input net B, wherein Vdenotes a supply voltage of the logic AND-gate X. \u0394I denotes an interval between signal transitions at input net A and input net B. Unnecessary signal transition so called glitches occur when difference of input signal delay \u0394I is bigger than the inertial delay \u0394G of the corresponding logic gate X.  shows the case where the input signal delay \u0394I is bigger than the inertial delay \u0394G of the corresponding logic gate X and a glitch V() occurs at the output net C.  shows the case where the input signal delay \u0394I is smaller than the inertial delay \u0394G of the corresponding logic gate X and no glitch V() occurs at the output net C. Occurring Glitches V() may propagate through subsequent logic and the problem is aggravating especially for deep logic cones.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 7","b":["100","1","2","3","1","2","1","1","1","1","2","2","2","2","2","100","2","100","1","2","1","1","2","3","1","1","1","1","2","2","3"],"sub":["GWN1","GWN1\u2032","GWN2","GWN3 ","GWN1","GWN1\u2032","GWN2","GWN3 ","GWN1 ","GWN1\u2032","GWN2 ","GWN3 "]},"The margins of the glitch windows T, T, T, Tcan be determined by using static timing analysis. However, the glitch windows T, T, T, Tdetermined by using delays from static timing analysis can be very pessimistic because the calculation of early-mode and late-mode of static timing analysis picks only the minimal and maximal delays and corresponding transition times which do not represent most practical cases. In the following a method to calculate the delays in the combinational circuits is proposed which is similar to the static timing analysis.","In static timing analysis the gate delay is modeled by a Look-Up-Table (LUT) and the delay calculator uses this LUT and calculates all path-delays summing up the delays and arrival times from inputs to outputs. The minimal and maximal arrival times are selected respectively and the corresponding delays and transition times are recorded and passed to the fan-out gate simultaneously. In this way, the glitch-window is always of maximal width and cannot represent most practical cases. Instead of selecting the minimum and maximum from all path-delays, the delays on the same path are averaged. Then, from the averaged path-delays the minimal and maximal delays and the corresponding averaged transition times are determined and passed to the fan-out gates.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 8","b":["200","1","2","3","1","1","1","2","1","1","2","200","1","200","1","1","2","3","200","1","1","2","3"],"sub":["GWN1","GWN2","GWN3 ","GWN1","GWN2","GWN3 ","GWN2 ","GWN3 "]},"Still referring to  the first glitch window Tstarts at 0.5 and ends at 1.8, the second glitch window TGWN also starts at 0.5 and ends at 1.8, and the third glitch window Tstarts at 1 and ends at 2.3, due to the inertial delay \u0394G of 0.5 of the logic gate X. The accurate number of signal transitions I, II, III, IV depends on the input patterns, the slews of the input signals and the characterization of the logic gates, here the logic gate X, in the circuit . To estimate the accurate number of signal transitions is too expensive to afford by the optimization procedure. Therefore, the calculation is limited to calculation of the transition metric inside of the corresponding glitch window T, T, T.","The glitch window T, T, Tdescribes the difference of arrival times of the input signals at the corresponding gate X, wherein a number Nof signal transitions at the output N of the gate X cannot exceed an upper bound calculated according to equation (2):",{"@attributes":{"id":"p-0039","num":"0038"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["N","k"]},"mo":"=","mrow":{"mi":"min","mo":"\u2062","mrow":{"mo":["{","}"],"mrow":{"mrow":[{"munder":{"mo":"\u2211","mrow":{"mi":"i","mo":"\u2208","mrow":{"mo":["{","}"],"mi":"gateinputs"}}},"mo":"\u2062","msub":{"mi":["N","i"]}},{"mn":"1","mo":"+","mrow":{"mo":["\u230a","\u230b"],"mfrac":{"msub":{"mi":["T","GW"]},"mi":"d"}}}],"mo":","}}}}},{"mrow":{"mo":["(",")"],"mn":"2"}}]}}}}},"Wherein Nis the number of signal transitions which might occur at input i, Tis the glitch-window and d is the inertial delay of the gate X. This upper bound consists of two terms. The first term indicates that the number of signal transitions at the output N cannot exceed the sum of signal transitions occurring at all inputs N, N. It is determined by summing the previously calculated bounds at the outputs of fan-in gates. The second term takes the inertial delay of the gate X into consideration. The minimum of the second margin is one because the nodes in the combinational circuit are supposed to change at least once in one clock period. In the shown embodiment of the logic cone  the upper bound of the number of signal transitions is 3 calculated according to equation (2), wherein at the first input net N a first signal transitions occurs at 1.3 and a second signal transition occurs at 1.6, and at the second input net N a first signal transitions occurs at 0.5 and a second signal transition occurs at 1.7. So at each input net N, N two signal transitions occur. The third glitch window starts at 1 and ends at 2.3 and the inertial delay of gate X is 0.5.",{"@attributes":{"id":"p-0041","num":"0040"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":"N","mrow":{"mi":"N","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"3"}},"mo":"=","mrow":{"mrow":{"mi":"min","mo":"\u2062","mrow":{"mo":["{","}"],"mrow":{"mrow":[{"mn":["2","2"],"mo":"+"},{"mn":"1","mo":"+","mrow":{"mo":["\u230a","\u230b"],"mfrac":{"mrow":{"mo":["(",")"],"mrow":{"mn":["2.3","1"],"mo":"-"}},"mn":"0.5"}}}],"mo":","}}},"mo":"=","mn":"3"}}}}},"However, inertial delays of the gates are typically not defined in a standard cell library. Instead, an averaged path-delay is used to approximate the inertial delay. In equation (2) the calculated bound is an integer, because the first term is naturally an integer and the fractional part of the second term is truncated. If such a bound is used directly in the optimization, it could occur that the glitch window shrinks, but the value of this bound stays the same. No difference can be told among different gate sizes. Therefore, the truncation operator is omitted and a new quantity is defined. Due to the uncertainty introduced by the averaged path-delays, a transition metric (TM) at the output of a gate is defined according to equation (3):",{"@attributes":{"id":"p-0043","num":"0042"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["TM","out"]},"mo":"=","mrow":{"mi":"min","mo":"\u2062","mrow":{"mo":["{","}"],"mrow":{"mrow":[{"munder":{"mo":"\u2211","mrow":{"mi":"i","mo":"\u2208","mrow":{"mo":["{","}"],"mi":"gateinputs"}}},"mo":"\u2062","msub":{"mi":["TM","i"]}},{"mn":"1","mo":"+","mfrac":{"msub":[{"mi":"T","msub":{"mi":["GW","out"]}},{"mi":["d","ave"]}]}}],"mo":","}}}}},{"mrow":{"mo":["(",")"],"mn":"3"}}]}}}}},"Wherein TMis the transition metric at input i, Tis the glitch window and dis the averaged path-delay of the corresponding gate. This transition metric represents a modified upper bound of the number of signal transitions at a net.","According to equation (1), dynamic power consumption depends on supply voltage, clock frequency, net capacitance and transition rate. The supply voltage and clock frequency are regarded as constants in this application. Some example embodiments propose a power metric to denote the dynamic power. The power metric (PM) at net n is defined by equation (4):\n\n\u2003\u2003(4)\n","Wherein TMn and Cn are the transition metric and net capacitance at net n, respectively.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 9","FIG. 10"],"b":"12"},"Referring to  the electrical circuit to evaluate comprises a logic cone  with two primary input nets N, N, one output net N a first logic gate X implemented as AND-gate having an inertial delay of 1, a second logic gate X implemented as AND-gate having an inertial delay of 1, a third logic gate X implemented as inverter having an inertial delay of 1, a fourth logic gate X implemented as inverter having an inertial delay of 0.5, and a fifth logic gate X implemented as AND-gate having an inertial delay of 2. A first primary input net N is also a first input net of the first logic gate X and a first input net of the second logic gate X. A second primary input net N is also a second input net of the first logic gate X, and the only output net of the first logic gate X is denoted as N and is also a second input net of the second logic gate X and an input net of the third logic gate X. An only output net of the second logic gate X is denoted with N and is also a first input net of the fifth logic gate X. An only output net of the third logic gate X is denoted with N and is also an input net of the fourth logic gate X. An only output net of the fourth logic gate X is denoted with N and is also a second input net of the fifth logic gate X. The output net N of the logic cone  is also the output net of the fifth logic gate X, because the fifth logic gate X is also the end of the logic cone .","Referring to , ,  and  the full circuit calculation is explained. As shown in  the logic cone  of the electrical circuit is levelized in four levels , , , . The leveling process of the electronic circuit is performed by sorting the logic gates X, X, X, X, X, X in the electronic circuit in the different levels , , ,  according to their logic depth. Still referring to , the first logic gate X is assigned to a first level , the second and third logic gates X, X are assigned to a second level , the fourth logic gate X is assigned to a third level , and the fifth logic gate X is assigned to a fourth level .","Further a static timing analysis tool is used to determine inertial delay of the logic gates X, X, X, X, X, the earliest and the latest signal arrival times EAT, LAT at nets N, N, N, N, N, N, and the capacitance of the nets N, N, N, N, N, N of the logic gates X, X, X, X, X of the logic cone  to be evaluated, wherein an averaged gate delay is used to approximate the inertial delay of the logic gates X, X, X, X, X. Table 1 shows the determined results.",{"@attributes":{"id":"p-0051","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"Net","EAT (ns)","LAT (ns)","Capacity (pF)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"N1","0.0","1.0","2.0"]},{"entry":[{},"N2","0.0","2.0","1.0"]},{"entry":[{},"N3","1.0","3.0","2.0"]},{"entry":[{},"N4","1.0","4.0","1.0"]},{"entry":[{},"N5","2.0","4.0","1.0"]},{"entry":[{},"N6","2.5","4.5","1.0"]},{"entry":[{},"N7","3.0","6.5","1.0"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"In case of full circuit calculation during a first calculation step S the priority queue  is initialized with all logic gates of the first level  here with the first logic gate X connected with primary input nets N, N of the logic cone  only, as shown by . Further a number of signal transitions at the primary input nets N, N are defined as 1. That means that the transition metrics TMN, TMN at the primary input nets N, N are also defined as 1, as shown in Table 2. The power metrics PMN, PMN at the primary input nets N, N are calculated by using equation (4). The results are also shown in Table 2.",{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Net","TM","PM"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["N1","1.0","2.0"]},{"entry":["N2","1.0","1.0"]},{"entry":["N3","2.0","4.0"]},{"entry":["N4","3.0","3.0"]},{"entry":["N5","2.0","2.0"]},{"entry":["N6","2.0","2.0"]},{"entry":["N7","2.75","2.75"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"During a second calculation step S transition metric TMN at the output net N of the first logic gate X of the first level  is calculated according to equation (3), based on the transition metrics TMN, TMN at the primary input nets N, N. Based on the transition metric TMN at the output net N of the first logic gate X the power metric PMN at the output net N is calculated according to equation (4). The results are also shown in Table 2. Since the first logic gate X is not the end of the logic cone  the fan-out gates X, X are pushed to the priority queue  during the second calculation step S.","During a third calculation step S transition metric TMN at the output net N of the second logic gate X of the second level  and transition metric TMN at the output net N of the third logic gate X of the second level  are calculated according to equation (3), based on transition metric TMN at the primary input net N and transition metric TMN at the input net N of the second logic gate X and the third logic gate X. Based on the transition metric TMN at the output net N of the second logic gate X the power metric PMN at the output net N is calculated according to equation (4). Based on the transition metric TMN at the output net N of the third logic gate X the power metric PMN at the output net N is calculated according to equation (4). The results are also shown in Table 2. Since the second and third logic gates X, X are not the end of the logic cone  the fan-out gates X, X are pushed to the priority queue  during the third calculation step S.","During a fourth calculation step S transition metric TMN at the output net N of the fourth logic gate X of the third level  is calculated according to equation (3), based on the transition metric TMN at the input net N of the fourth logic gate X. Based on the transition metric TMN at the output net N of the fourth logic gate X the power metric PMN at the output net N is calculated according to equation (4). The results are also shown in Table 2. Since the fourth logic gate X is not the end of the logic cone  the fan-out gate X is pushed to the priority queue  during the fourth calculation step S. Since the fan-out gate X is already in the priority queue  the former input is overwritten.","During a fifth calculation step S transition metric TMN at the output net N of the fifth logic gate X of the fourth level  is calculated according to equation (3), based on the transition metrics TMN, TMN at the input nets N, N of the fifth logic gate X. Based on the transition metric TMN at the output net N of the fifth logic gate X the power metric PMN at the output net N is calculated according to equation (4). The results are also shown in Table 2. Since the fifth logic gate X is the end of the logic cone  no fan-out gates are pushed to the priority queue  during the fifth calculation step S and the priority queue  is empty and the full circuit calculation is finished. The full circuit calculation results may be written to the data storage .","During optimization of the power consumption of the electrical circuit logic gates of the electrical circuit shown in  may be resized.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 11","FIG. 9","FIG. 12"],"b":["4","12"]},"Referring to  the electrical circuit to evaluate comprises a logic cone \u2032 with two primary input nets N, N, one output net N and five logic gates X, X, X, X\u2032, X. The main difference between the logic cone  and the logic cone \u2032 is the resized fourth logic gate X\u2032. Because of the resized fourth logic gate X\u2032 the timing and power behavior of the logic cone \u2032 is different to the logic cone , especially the load capacitance of the third logic gate X and an input slew of the fifth logic gate X are influenced. Still referring to  the first logic gate X implemented as AND-gate having an inertial delay of 1 and a second logic gate X implemented as AND-gate having an inertial delay of 1 are both unchanged, due to the resized logic gate X\u2032. The inertial delay of the third logic gate X implemented as inverter is changed to 0.5, the inertial delay of the fourth logic gate X\u2032 implemented as inverter is changed to 1.0, and the inertial delay of the fifth logic gate X implemented as AND-gate is changed to 3.0 due to the resized fourth logic gate X\u2032.","Referring to , ,  and  the incremental circuit calculation is explained. As shown in  the logic cone \u2032 of the electrical circuit is also levelized in four levels , , ,  and the first logic gate X is assigned to the first level , the second and third logic gates X, X are assigned to the second level , the resized fourth logic gate X\u2032 is assigned to the third level , and the fifth logic gate X is assigned to the fourth level .","Further a static timing analysis tool is used to determine inertial delay of the logic gates X, X, X, X\u2032, X, the earliest and the latest signal arrival times EAT, LAT at nets N, N, N, N, N, N, and the capacitance of the nets N, N, N, N, N, N of the logic gates X, X, X, X, X of the logic cone \u2032 to be evaluated, wherein an averaged gate delay is used to approximate the inertial delay of the logic gates X, X, X, X\u2032, X. Table 3 shows the determined results. Due to the resized fourth logic gate X\u2032 the earliest arrival time and the latest arrival at nets N, N, N are changed also changed is the capacitance at net N.",{"@attributes":{"id":"p-0063","num":"0062"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 3"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"Net","EAT (ns)","LAT (ns)","Capacity (pF)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"N1","0.0","1.0","2.0"]},{"entry":[{},"N2","0.0","2.0","1.0"]},{"entry":[{},"N3","1.0","3.0","2.0"]},{"entry":[{},"N4","1.0","4.0","1.0"]},{"entry":[{},"N5","1.5","3.5","1.5"]},{"entry":[{},"N6","2.5","4.5","1.0"]},{"entry":[{},"N7","3.0","6.5","1.0"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"In case of increment circuit calculation during a first calculation step S\u2032 the priority queue  is initialized with at least one logic gate, here the third logic gate X, which fan-out gate is directly connected to a fan-in gate of the resized gate, here the fourth logic gate X\u2032. Further, transition metrics TMN, TMN, TMN, TMN at the nets N, N, N, N not influenced by the resized logic gates, here the fourth logic gate X\u2032, are taken from the results of the full circuit calculation during the first calculation step S\u2032, as shown in Table 4. Also the corresponding power metrics PMN, PMN, PMN, PMN are taken from the results of the full circuit calculation during the first calculation step S\u2032, as shown in Table 4.",{"@attributes":{"id":"p-0065","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Net","TM","PM"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["N1","1.0","2.0"]},{"entry":["N2","1.0","1.0"]},{"entry":["N3","2.0","4.0"]},{"entry":["N4","3.0","3.0"]},{"entry":["N5","2.0","3.0"]},{"entry":["N6","2.0","2.0"]},{"entry":["N7","2.167","2.167"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"During a second calculation step S\u2032 transition metric TMN at the output net N of the third logic gate X of the second level  is recalculated according to equation (3), based on transition metric TMN at the input net N of the third logic gate X. Based on the transition metric TMN at the output net N of the third logic gate X the power metric PMN at the output net N is recalculated according to equation (4). The results are also shown in Table 4. Since the third logic gate X is not the end of the logic cone \u2032 the fan-out gate X\u2032 is pushed to the priority queue  during the second calculation step S\u2032.","During a third calculation step S\u2032 transition metric TMN at the output net N of the resized fourth logic gate X\u2032 of the third level  is recalculated according to equation (3), based on the transition metric TMN at the input net N of the resized fourth logic gate X\u2032. Based on the transition metric TMN at the output net N of the resized fourth logic gate X\u2032 the power metric PMN at the output net N is recalculated according to equation (4). The results are also shown in Table 4. Since the resized fourth logic gate X\u2032 is not the end of the logic cone \u2032 the fan-out gate X is pushed to the priority queue  during the third calculation step S\u2032.","During a fourth calculation step S\u2032 transition metric TMN at the output net N of the fifth logic gate X of the fourth level  is recalculated according to equation (3), based on the transition metrics TMN, TMN at the input nets N, N of the fifth logic gate X. Based on the transition metric TMN at the output net N of the fifth logic gate X the power metric PMN at the output net N is recalculated according to equation (4). The results are also shown in Table 4. Since the fifth logic gate X is the end of the logic cone \u2032 no fan-out gates are pushed to the priority queue  during the fourth calculation step S\u2032 and the priority queue  is empty and the incremented circuit calculation is finished. The incremented circuit calculation results may also be written to the data storage .","Compared to the full circuit calculation the incremented circuit calculation may be performed faster, so the runtime during optimization can be further reduced.","Example embodiments for estimating power consumption of an electronic circuit can be implemented as an entirely software embodiment, or an embodiment containing both hardware and software elements. Some example embodiments can be implemented in software, which includes but is not limited to firmware, resident software, microcode, etc.","As will be appreciated by one skilled in the art, aspects of the present inventive subject matter may be embodied as a system, method or computer program product. Accordingly, aspects of the present inventive subject matter may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present inventive subject matter may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present inventive subject matter may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the present inventive subject matter are described with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the inventive subject matter. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","While the embodiments are described with reference to various implementations and exploitations, it will be understood that these embodiments are illustrative and that the scope of the inventive subject matter is not limited to them. In general, techniques for movement reduction as described herein may be implemented with facilities consistent with any hardware system or hardware systems. Many variations, modifications, additions, and improvements are possible.","Plural instances may be provided for components, operations or structures described herein as a single instance. Finally, boundaries between various components, operations and data stores are somewhat arbitrary, and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of the inventive subject matter. In general, structures and functionality presented as separate components in the exemplary configurations may be implemented as a combined structure or component. Similarly, structures and functionality presented as a single component may be implemented as separate components. These and other variations, modifications, additions, and improvements may fall within the scope of the inventive subject matter."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Inventive features regarded as the characteristics of the present inventive subject matter are set forth in the Summary of the Inventive subject matter and the appended claims. However, the present inventive subject matter, its implementation mode, other objectives, features and advantages will be better understood through reading the following detailed description of the exemplary embodiments with reference to the accompanying drawings, wherein:",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIGS. 4-6","FIG. 3"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 10","FIG. 1","FIG. 2"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 11","FIG. 9"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 12","FIG. 1","FIG. 2"]}]},"DETDESC":[{},{}]}
