---
title: User selection of software components in a television set-top box
abstract: A method for allowing user selection of interactive video software components in a television STB operatively coupled to a video content network includes the steps of: affording the user a selection of interactive video software components to run on the set-top box; and loading selected interactive video software components onto the set-top box. The selected interactive video software components are delivered from a remote node over the video content network to which the STB is coupled.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09479812&OS=09479812&RS=09479812
owner: TIME WARNER CABLE ENTERPRISES LLC
number: 09479812
owner_city: New York
owner_country: US
publication_date: 20090820
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION(S)","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["This application claims the benefit of U.S. Provisional Application Ser. No. 61\/184,412, filed on Jun. 5, 2009, the complete disclosure of which is expressly incorporated herein by reference in its entirety for all purposes.","The present invention relates generally to the electrical, electronic, and computer arts, and more particularly relates to video content networks.","With the advent of digital communications technology, many TV program streams are transmitted in digital formats. For example, Digital Satellite System (DSS), Digital Broadcast Services (DBS), and Advanced Television Standards Committee (ATSC) program streams are digitally formatted pursuant to the well known Moving Pictures Experts Group 2 (MPEG-2) standard. The MPEG-2 standard specifies, among other things, the methodologies for video and audio data compression allowing for multiple programs, with different video and audio feeds, to be multiplexed in a transport stream traversing a single transmission channel. A digital TV receiver may be used to decode an MPEG-2 encoded transport stream, and extract the desired program therefrom.","The compressed video and audio data are typically carried by continuous elementary streams, respectively, which are broken into access units or packets, resulting in packetized elementary streams (PESs). These packets are identified by headers that contain time stamps for synchronization, and are used to form MPEG-2 transport streams. For digital broadcasting, multiple programs and their associated PESs are multiplexed into a single transport stream. A transport stream has PES packets further subdivided into short fixed-size data packets, in which multiple programs encoded with different clocks can be carried. A transport stream not only includes a multiplex of audio and video PESs, but also other data such as MPEG-2 program specific information (sometimes referred to as metadata) describing the transport stream. The MPEG-2 metadata may include a program associated table (PAT) that lists every program in the transport stream. Each entry in the PAT points to an individual program map table (PMT) that lists the elementary streams making up each program. Some programs are open, but some programs may be subject to conditional access (encryption), and this information (i.e., whether open or subject to conditional access) is also carried in the MPEG-2 transport stream, typically as metadata.","The aforementioned fixed-size data packets in a transport stream each carry a packet identifier (PID) code. Packets in the same elementary streams all have the same PID, so that a decoder can select the elementary stream(s) it needs and reject the remainder. Packet-continuity counters may be implemented to ensure that every packet that is needed to decode a stream is received.","A set-top terminal or the like in the home or other premises receives the compressed video and audio data. The set-top terminal typically runs various software applications.","Techniques are provided for allowing user selection of software components in a television set top box (STB).","In accordance with an embodiment of the invention, a method for allowing user selection of interactive video software components in a television STB operatively coupled to a video content network includes the steps of: affording the user a selection of interactive video software components to run on the set-top box; and loading selected interactive video software components onto the set-top box. The selected interactive video software components are delivered from a remote node over the video content network to which the STB is coupled.","In accordance with another embodiment of the invention, a system includes a set-top box having a set-top box memory and at least one set-top box processor coupled to the set-top-box memory; a video content network; and at least one configuration server having a configuration server memory and at least one configuration server processor coupled to the configuration server memory. The at least one set-top box processor and the at least one configuration server processor are cooperatively operative to: facilitate affording a user a selection of interactive video software components to run on the set-top box; and facilitate loading selected interactive video software components onto the set-top box, the selected interactive video software components being delivered to the set-top box over the video content network.","As used herein, \u201cfacilitating\u201d an action includes performing the action, making the action easier, helping to carry the action out, or causing the action to be performed. Thus, by way of example and not limitation, instructions executing on one processor might facilitate an action carried out by instructions executing on a remote processor, by sending appropriate data or commands to cause or aid the action to be performed.","One or more embodiments of the invention or elements thereof can be implemented in the form of an article of manufacture including a machine readable medium that contains one or more programs which when executed implement such step(s); that is to say, a computer program product including a tangible computer readable recordable storage medium (or multiple such media) with computer usable program code for performing the method steps indicated. Furthermore, one or more embodiments of the invention or elements thereof can be implemented in the form of an apparatus including a memory and at least one processor that is coupled to the memory and operative to perform, or facilitate performance of, exemplary method steps. Yet further, in another aspect, one or more embodiments of the invention or elements thereof can be implemented in the form of means for carrying out one or more of the method steps described herein; the means can include (i) hardware module(s), (ii) software module(s), or (iii) a combination of hardware and software modules; any of (i)-(iii) implement the specific techniques set forth herein, and the software modules are stored in a tangible computer-readable recordable storage medium (or multiple such media).","Techniques of the present invention can provide substantial beneficial technical effects. For example, one or more embodiments may have one or more of the following advantages:\n\n","These and other features and advantages of the present invention will become apparent from the following detailed description of illustrative embodiments thereof, which is to be read in connection with the accompanying drawings.","Initially, the complete disclosure of United States Patent Application Publication 2008\/0134165 of Anderson et al. entitled \u201cMethods and apparatus for software provisioning of a network device,\u201d published on Jun. 5, 2008, is expressly incorporated herein by reference in its entirety for all purposes.  illustrates a typical content-based network configuration  with which techniques of the present invention may be used. The various components of the network  include (i) one or more data and application origination points ; (ii) one or more content sources , (iii) one or more application distribution servers ; (iv) one or more video-on-demand (VOD) servers , and (v) consumer (or customer) premises equipment (CPE) . The distribution server(s) , VOD servers  and CPE(s)  are connected via a bearer (e.g., HFC) network . A simple architecture is shown in  for illustrative brevity, although it will be recognized that comparable architectures with multiple origination points, distribution servers, VOD servers, and\/or CPE devices (as well as different network topologies) may be utilized consistent with the invention. For example, the head-end architecture of (described in greater detail below) may be used.","It should be noted at this point that in addition to a conventional HFC network or a switched digital network to be discussed below, other kinds of video content networks can be employed for network  (e.g., fiber-to-the-home (FTTH) or fiber-to-the-curb (FTTC)).","The data\/application origination point  comprises any medium that allows data and\/or applications (such as a VOD-based or \u201cWatch TV\u201d application) to be transferred to a distribution server . This can include for example a third party data source, application vendor website, compact disk read-only memory (CD-ROM), external network interface, mass storage device (e.g., Redundant Arrays of Inexpensive Disks (RAID) system), etc. Such transference may be automatic, initiated upon the occurrence of one or more specified events (such as the receipt of a request packet or acknowledgement (ACK)), performed manually, or accomplished in any number of other modes readily recognized by those of ordinary skill.","The application distribution server  comprises a computer system where such applications can enter the network system. Distribution servers are well known in the networking arts, and accordingly not described further herein.","The VOD server  comprises a computer system where on-demand content can be received from one or more of the aforementioned data sources  and enter the network system. These servers may generate the content locally, or alternatively act as a gateway or intermediary from a distant source.","The CPE  includes any equipment in the customers' premises (or other appropriate locations) that can be accessed by a distribution server .","Referring now to , one exemplary embodiment of a head-end architecture useful with the present invention is described. As shown in , the head-end architecture  comprises typical head-end components and services including billing module , subscriber management system (SMS) and CPE configuration management module , cable-modem termination system (CMTS) and out-of-band (OOB) system , as well as LAN(s) ,  placing the various components in data communication with one another. It will be appreciated that while a bar or bus LAN topology is illustrated, any number of other arrangements (e.g., ring, star, etc.) may be used consistent with the invention. It will also be appreciated that the head-end configuration depicted in is high-level, conceptual architecture and that each multi-service operator or multiple system operator (MSO) may have multiple head-ends deployed using custom architectures.","The architecture  of further includes a multiplexer\/encrypter\/modulator (MEM)  coupled to the HFC network  adapted to \u201ccondition\u201d content for transmission over the network. The distribution servers  are coupled to the LAN , which provides access to the MEM  and network  via one or more file servers . The VOD servers  are coupled to the LAN  as well, although other architectures may be employed (such as for example where the VOD servers are associated with a core switching device such as an 802.3z Gigabit Ethernet device). Since information is typically carried across multiple channels, the head-end should be adapted to acquire the information for the carried channels from various sources. Typically, the channels being delivered from the head-end  to the CPE  (\u201cdownstream\u201d) are multiplexed together in the head-end and sent to neighborhood hubs (see ) via a variety of interposed network components.","Content (e.g., audio, video, etc.) is provided in each downstream (in-band) channel associated with the relevant service group. To communicate with the head-end or intermediary node (e.g., hub server), the CPE  may use the out-of-band (OOB) or DOCSIS\u00ae (Data Over Cable Service Interface Specification) channels (registered mark of Cable Television Laboratories, Inc., 400 Centennial Parkway Louisville Colo. 80027, USA) and associated protocols. The OpenCable\u2122 Application Platform (OCAP) 1.0, 2.0, 3.0 (and subsequent) specification (Cable Television laboratories Inc.) provides for exemplary networking protocols both downstream and upstream, although the invention is in no way limited to these approaches.","It will also be recognized that multiple servers (broadcast, VOD, or otherwise) can be used, and disposed at two or more different locations if desired, such as being part of different server \u201cfarms\u201d. These multiple servers can be used to feed one service group, or alternatively different service groups. In a simple architecture, a single server is used to feed one or more service groups. In another variant, multiple servers located at the same location are used to feed one or more service groups. In yet another variant, multiple servers disposed at different location are used to feed one or more service groups.","In some instances, material may also be obtained from a satellite feed ; such material is demodulated and decrypted in block  and fed to block . Conditional access system  may be provided for access control purposes. Network management system  may provide appropriate management functions. Note also that signals from MEM  and upstream signals from network  that have been demodulated and split in block  are fed to CMTS and OOB system .","As shown in , the network  of comprises a fiber\/coax arrangement wherein the output of the MEM  of is transferred to the optical domain (such as via an optical transceiver  at the head-end or further downstream). The optical domain signals are then distributed to a fiber node , which further distributes the signals over a distribution network  to a plurality of local servicing nodes . This provides an effective 1:N expansion of the network at the local service end.",{"@attributes":{"id":"p-0040","num":"0044"},"figref":"FIG. 1"},"Switching architectures allow improved efficiency of bandwidth use for ordinary digital broadcast programs. Ideally, the subscriber will be unaware of any difference between programs delivered using a switched network and ordinary streaming broadcast delivery.",{"@attributes":{"id":"p-0042","num":"0046"},"figref":"FIG. 1","b":["150","190","192","195","194","196","198","197"]},"US Patent Publication 2003-0056217 of Paul D. Brooks, entitled \u201cTechnique for Effectively Providing Program Material in a Cable Television System,\u201d the complete disclosure of which is expressly incorporated herein by reference for all purposes, describes one exemplary broadcast switched digital architecture useful with one or more embodiments of the present invention, although it will be recognized by those of ordinary skill that other approaches and architectures may be substituted.","In addition to \u201cbroadcast\u201d content (e.g., video programming), the systems of may also deliver Internet data services using the Internet Protocol (IP), although other protocols and transport mechanisms of the type well known in the digital communication art may be substituted. One exemplary delivery paradigm comprises delivering MPEG-based video content, with the video transported to user personal computers (PCs) (or IP-based set-top boxes (STBs)) over DOCSIS channels comprising MPEG (or other video codec such as H.264 or AVC) over IP over MPEG. That is, the higher layer MPEG- or other encoded content is encapsulated using an IP protocol, which then utilizes an MPEG packetization of the type well known in the art for delivery over the RF channels. In this fashion, a parallel delivery mode to the normal broadcast delivery exists; i.e., delivery of video content both over traditional downstream quadrature amplitude modulation (QAM) channels (QAMs) to the tuner of the user's STB or other receiver device for viewing on the television, and also as packetized IP data over the DOCSIS QAMs to the user's PC or other IP-enabled device via the user's cable modem.","Referring again to , the IP packets associated with Internet services are received by edge switch , and forwarded to the cable modem termination system (CMTS) . The CMTS examines the packets, and forwards packets intended for the local network to the edge switch . Other packets are discarded or routed to another component. Note also that edge switch  in block  in can, in the most general case, be the same or different as that shown in the hub site of . Also, in other embodiments, CMTS  could be located in a place other than the hub site.","The edge switch  forwards the packets received from the CMTS  to the QAM modulator , which transmits the packets on one or more physical (QAM-modulated RF) channels to the CPEs. The IP packets are typically transmitted on RF channels that are different that the RF channels used for the broadcast video and audio programming, although this is not a requirement. The CPE  are each configured to monitor the particular assigned RF channel (such as via a port or socket ID\/address, or other such mechanism) for IP packets intended for the subscriber premises\/address that they serve.","It will be appreciated that while the exemplary embodiments presented herein are described in the context of Internet services that include multicast and unicast data, the present invention is applicable to other types of services that include multicast transmission of data delivered over a network having multiple physical channels or even virtual or logical channels. For example, switching between various physical channels that comprise a virtual channel, can itself be conducted according to the \u201cswitched\u201d approach. As a simple illustration, if a first virtual channel is comprised of physical channels (e.g., QAMs) A, B and D, and a second virtual channel is comprised of QAMs C, E and F, a cable modem (CM) or other CPE can be configured to switch between the A\/B\/D and C\/E\/F virtual channels as if they were a single QAM.","The configurations shown in  are exemplary in nature and different approaches may be used in other embodiments; such other approaches may have more or less functionality (for example, high speed Internet data services might be omitted in some cases).",{"@attributes":{"id":"p-0049","num":"0053"},"figref":["FIG. 2","FIG. 2","FIG. 1","FIG. 1"],"b":["200","202","150","104","202","106"]},"The \u201cserver\u201d functionality may be provided by a number of existing components and\/or processes already in place within the network, such as for example use of existing messaging facilities to generate and deliver the update messages, the use of a carousel function to select and download applications or other components, and so forth. Each of the foregoing features is described in greater detail subsequently herein.","As shown in , a corresponding client process  is disposed on each CPE  (or a selected subset of all CPE); this process allows the CPE  to receive\/send information from\/to the server process , for e.g., determining the need for provisioning, remote configuration and provisioning of the CPE , monitoring of operations, statistics, status information, and the like. In one exemplary embodiment, the client process  is a \u201cbootstrap\u201d program or module that is installed on the CPE  and adapted to operate under certain circumstances.","The client portion  may also be in logical communication with other processes within the CPE, such as for example an OCAP-compliant monitor application or middleware , a user interface (and configuration) process , other applications  running on the CPE, and the like. Client processes  on other devices, such as a device coupled to the CPE  via a wireless or networking interface, can also communicate with the client process  if desired.","The CPE  may also include various other processes, such as a media server, web or http server, and so forth. These can be used in a stand-alone fashion (e.g., where a personal media device (PMD) in the premises network merely accesses the media server in order to obtain stored personal content from the CPE ), or as a local proxy for other distant servers (such as a remote third party web server, and the like). Moreover, the CPE may take any number of forms, including for example a set-top box (e.g., DSTB); a converged device or \u201chive\u201d as disclosed in US Patent Publication 2007\/0217436 of Markley et al, entitled \u201cMethods and apparatus for centralized content and data delivery,\u201d the complete disclosure of which is expressly incorporated herein by reference in its entirety for all purposes; a wireless satellite receiver; or even a mobile wireless device in direct or indirect data communication with the operator network domain.",{"@attributes":{"id":"p-0054","num":"0058"},"figref":"FIG. 3","b":["600","614","106","602","600","606","604","604","602","604","608","616","614","106","616"]},"A system event generator module  is also present on the storage device . The system event generator module  may broadcast a DSM-CC catalog update message over the HFC Network  upon a modification to the Version Association File . The DSM-CC Catalog Update message may be transmitted to the CPE  along with the Version Association File  (or the two may be sent independently but in a substantially contemporaneous fashion). In other instances, only the DSM-CC catalog update message is sent to the CPE  upon a modification to the Version Association File . Of course, the invention is not limited to DSM-CC messages. For example, as an alternative (or in addition) to a DSM-CC message, an IP message can be used.","The software application  is present on the storage device  of the server, along with an uploader module  that is used to broadcast the application version  of the software application  over the HFC network . The CPE  downloads the application version  of the software application  if that CPE has been designated in the Version Association File  (for example, by address, MAC, TUNER ID, TUNER USE, opaque variable, etc.) and the application version  of the software application  is not already present on the CPE . US Patent Publication 2007\/0022459 of Gaebel et al., entitled \u201cMethod and apparatus for boundary-based network operation,\u201d the complete disclosure of which is expressly incorporated herein by reference in its entirety for all purposes, describes exemplary approaches for implementing TUNER USE, TUNER ID, and opaque variables.","In one variant, the Version Association File  contains at least six fields: (i) an ORG ID, (ii) an App ID, (iii) an App Type, (iv) a Launch Order, (v) a Target Type, and (v) Targets. These fields are described in the aforementioned Anderson et al. publication 2008\/0134165.",{"@attributes":{"id":"p-0058","num":"0062"},"figref":["FIG. 4","FIG. 4"],"b":["106","702","106","706","704","702","706","704","706","101","710","711","706","106","704"]},"In one embodiment, the storage device  is a non-volatile memory device such as a hard disk that is in data communication with the processor . Resident on the storage device  is a bootstrap application , a monitor application , a file registry , and optionally, one or more of the application versions  of one or more software applications ,  previously described. The exemplary file registry  is a table of numeric entries assigned to each of the application versions  of each of the software applications ,  currently installed in the CPE or connected devices. The aforementioned Anderson et al. Publication 2008\/0134165 describes a bootstrap application  and monitor application , which, given the teachings herein, may be modified by the skilled artisan to implement one or more embodiments of the invention.","With reference to , at least a portion of a standard software architecture  is shown. As apparent from the figure, the software architecture  is depicted conceptually as a layered (e.g., stacked) relational framework or model including a hardware layer , a hardware driver layer  residing on top of the hardware layer, a hardware abstraction layer  on top of the hardware driver layer, an operating system layer  on top of the hardware abstraction layer, and an applications layer  on top of the operating system layer. Conventionally, digital television (DTV) relies on a single, monolithic, software image being downloaded into a persistent storage device.","With reference now to , at least a portion of an exemplary software architecture  is shown in which techniques of the present invention may be suitably implemented. Software architecture  is distinguishable from architecture  shown in  at least in that architecture  includes a middleware layer  residing between the operating system layer  and the applications layer .","Using the Open Cable Application Platform (OCAP), television software may be downloaded and used as separate components. This is facilitated by the insertion of the middleware layer, which allows the hardware drivers, hardware abstraction layer (HAL), operating system (OS), and middleware to reside on the device and the application to be downloadable from the distribution system via hypertext transfer protocol (HTTP), object carousel, or some other connectivity mechanism. The skilled artisan will be familiar with the OCAP specifications as promulgated by Cable Television Laboratories, Inc. Louisville, Colo., USA.","Because OCAP is an open standard based platform, multiple vendors may develop different applications to run on the device platform. One or more aspects of the invention allow a user to select which software component(s) (e.g., application program(s)) and\/or which specific version of the software component(s) he or she wishes to run on the device (e.g., STB ). In one or more illustrative embodiments, during or shortly after boot-up, an initialization application (e.g., a \u201cbootstrapper\u201d program ), or alternative routine, is loaded on the STB device which is operative to provide a prescribed period of time (e.g., several seconds) during which the user is afforded an opportunity to select, from among multiple interactive video software components, one or more interactive video software components to run on the device.","The prescribed time during which the user is able to select one or more software components to run on the STB preferably refers to the time during execution of an initial monitor program. The monitor program is typically initially loaded onto the STB and determines what additional software will be loaded on the STB. In this manner, the user can preferably initiate a selection routine, or alternative interface means, immediately after boot-up, such as, for example, by depressing a remote control or other device button or key (e.g., \u201cMENU\u201d button) to bring up a selection menu. From the selection menu, the user can then select which interactive video software, or software components, and\/or which version of that software he or she wishes to execute on the device.","Boot-up, or an alternative initialization process, typically occurs during a power-on interval of the STB device, which may be initiated in response to the user depressing a power (\u201cON\u201d) button on the device, or by depressing a power button on a remote control unit, either wired or wireless, associated with the device. The STB may be operative to perform initialization routines at other times as well, such as, for example, during a standby mode of operation. While the window of time during which the user may select which software component(s) to run on the device is preferably several seconds in duration, the invention is not limited to any specific time period for making such a selection. Moreover, while selection of the one or more software components may be afforded to the user immediately following boot-up, such as, for example, within a prescribed interval of time following boot-up, it is to be appreciated that an opportunity may be afforded to the user during one or more other prescribed times (e.g., during standby mode or during periods of programming inactivity) or in response to a user-initiated control signal (e.g., user-initiated program selection request), according to other embodiments of the invention. The other intervals of time during which user selection of software components is provided may be in place of or in addition to such selection opportunity afforded following boot-up.","Advantageously, in one or more embodiments, this mechanism also allows multiple applications, or components thereof, to be selected by the user. For example, if a user desires to have a television application and a web browser application loaded, he or she selects each application. Upon selection of an application, the STB device may be required to reboot in order for any changes to take effect. If a user selection of software components is made after video content delivery has started, the STB device may be preferably operative to stop the video content delivery and to resume such video content delivery at the point in time where it was halted once the device has completed rebooting. For live programming, this may require digital video recorder (DVR)-like functionality to capture and store the video content while the STB device  is rebooting. In another aspect, rebooting may be delayed until the user is not watching television.","Once the user has made his or her selections, the user then presses another designated key on the remote control or front panel of the STB device, or navigates to a soft key that allows the device to then load the selected applications on the STB and execute them for the user. Execution of the selected application(s) may be performed immediately once loading has completed, or, alternatively, execution may be delayed by a prescribed period of time or after a prescribed event occurs, according to aspects of the invention. If the user does not press the designated key during a boot cycle, or alternative prescribed time interval, the device will load and execute those applications that were previously selected by the user.","As an added feature, the system is preferably adapted to prevent the user from loading conflicting software applications. That is, the system would, for instance, disallow the loading of multiple electronic program guides (EPGs) or multiple caller ID (identity) applications. This is particularly advantageous when updating existing applications on the STB device. In a further aspect of the invention, an OpenCable software distribution system provides a transport mechanism such as an HTTP server or object carousel and a metadata file describing the available applications and their compatibility with other applications and devices.","Reference is now made to , which depict exemplary client-server interactions for network-based user selectable applications. A client device or process , which may be implemented, for example, on a CPE  (e.g., a set-top terminal or STB), powers up and, at , checks to see if it has a local list of applications in non-volatile memory such as storage device . When two-way network communication is available, the client device  will query a configuration database server , as shown at , using a unique identifier such as, for example, a network MAC address. The database server  will preferably return a list of applications, retrieved by the client device , that the client should execute, as shown at . When the local list of applications on client device  does not match those from the database , then the local copy is updated (see also step  discussed below). One or more applications in the returned list of applications are then executed by the client device . Client device  may access database  using, for example, the HFC network and functionality of server  with corresponding version association file (VAF) as shown in  and also discussed with respect to .","When two-way connectivity is not available, the client device  will preferably test to see if it has a list of applications stored locally, as at . The client device  will then determine whether the applications are available via an object carousel  (or an alternative storage location) as shown at . If the applications are available via object carousel , then the application (for example, monitor application  shown in ) on client  will load and execute the applications from the object carousel. When two-way connectivity is not available and it is determined at  that the client device  has no locally stored list of applications, then the client device will preferably read a default configuration file from the object carousel , load those applications associated with the default configuration file, and execute them as desired.","With reference also now to , in order to configure the database , the client device  can produce a local configuration, as at , by having the user interface with the client device and select from among the available applications. Alternatively, or in addition to, according to embodiments of the invention, the user can configure the system via interaction with a web-based interface  which provides a list of available applications corresponding to a given type of hardware, as shown at , and stores the configuration in the configuration database , as shown at . The local configuration may be saved in client  as at .","Thus, a cable MSO may use OCAP to develop software. Heretofore, all STBs have typically had a monolithic image; once the image was determined, it was distributed to all STBs and it was homogeneous in nature across all STBs. OCAP provides a middleware layer that beneficially allows the MSO to individually modify the applications loaded on each STB. In one or more embodiments, the end user selects which applications he or she wants to run on his or her STB. As described with respect to , in one illustrative approach, a selection menu is provided on the user's television set (connected to or part of a CPE such as an STB), while in another approach, the user accesses a web page, or alternative web interface, and selects which applications he or she would like to load and execute on his or her STB.","As alluded to above, one or more embodiments make use of the VAF. In current techniques, the VAF only allows a minimal number of STBs to be entered into it, inasmuch as, if the list were longer, every STB on the system would have to parse the long list, which is not practical. The VAF has instructions as to which applications are to be loaded on the CPE. In some current techniques, the VAF is a file on the object carousel, while in one or more instances, the database is located on the server system.","In practice, every STB has a MAC address or alternate unique identifier associated with its network interface card (NIC). As previously stated, the STB includes a bootstrapper program (that is, the first piece of code that is ever run on the device), and that piece of code causes the MAC address to be sent to the database server  and inquires which applications are to be loaded on the STB. The bootstrapper code may be provided, for example, by the MSO. The database server , at , returns the list of applications that the particular STB should load from the object carousel  or via HTTP from a distribution server (for example, server ), or from an alternative storage location. As noted, given the teachings herein, the bootstrapper application of the Anderson et al. publication 2008\/0134165 could be modified by the skilled artisan to implement one or more aspects of the invention.","With continued reference to , once the client device  (e.g., STB ) retrieves that list of applications at , it can go through and load the applications that the user has selected. The list of applications is transferred to the database , for example, by having the user (for example, the subscriber) execute a prescribed application on his or her television (for example, a menu structure) and input (for example, by scrolling down and selecting menu items) which application(s) to load on the client device. Then, the data regarding which application(s) to load is stored in the configuration database  (preferably comprising non-volatile memory) so that the next time the subscriber's client device  re-boots, it is able to determine locally which applications to load. In an alternative approach, the user (e.g., subscriber) can go through the web interface  that connects to the same server back end database  and he or she can select which application(s) he or she wants to load from that point. Similarly, when the client device  re-boots, it will load the selected application(s) stored, for example, in the object carousel  or an alternative storage location.","In the case when two-way communications are temporarily lost, if the client device  cannot communicate with the back end database server  when the client device reboots, it is essentially not possible, or at least impractically difficult, to obtain the list of applications to be run on the device. In this instance, the client device  may be operative to first determine whether or not there is a local copy of the applications that were selected to run, which can be accomplished by checking the selected applications against those applications available via the object carousel (HTTP would not be available since it utilizes TCP\/IP which requires two-way communications) and, when such applications are present on the object carousel, to run those applications. The client device may utilize a mechanism in which OCAP stores applications locally and\/or to a disk, or alternative local storage device.","The client device  may be operative in a default mode, such that when two-way communications are lost, the client device preferably reverts back to reading the original (default) version association file on the object carousel  and then it loads the appropriate applications listed therein so that the user is provided with at least some functionality (such as, for example, the ability to watch television) until network connectivity is re-established.","For a client device  that has considerable local storage available (internally and\/or externally), such as exists, for example, with a disk drive or other high-volume storage device, the client device may be adapted to store all, or at least a subset, of the applications to that device and to execute the stored applications upon loss of two-way communications, according to embodiments of the invention. This may be a preferred execution methodology for this type of device rather than loading a default application set.","It is to be appreciated that, although two-way communications may be lost, it may still be possible for the client device to access the object carousel for loading available applications on the STB, according to embodiments of the invention. More particularly, the carousel information is preferably contained within parameters described by the XAIT. There are at least two mechanisms in which such carousel information may be stored in the XAIT, namely, the use of a prescribed field (e.g., \u201ctransport\u201d field) for an application in the XAIT, and the use of command line parameters passed to the initial application via user-settable parameter fields in the XAIT.","Note that even when two-way communications are lost, it may still be possible to obtain the XAIT, which is typically accessed out-of-band using one-way communications.","In some instances, the interactive video software components to be distributed to the STBs may be classified into at least two different types. A first type is software that is provided by the host manufacturer and is unique to each manufacturer. It may contain hardware driver components, the operating system, and a Java Virtual Machine, or an alternative software development platform. Each middleware component is stacked upon the other and is often referred to as a software stack. A second type of software is that which provides the actual application and user interface. This software is preferably written in a platform-independent language, such as Java, as specified, for example, by the OCAP specification set forth in the document entitled \u201cOpenCable Application Platform Specifications, OCAP1.1 Profile,\u201d Document Control No. OC-SP-OCAP1.1.1-090612, published Jun. 12, 2009 by Cable Television laboratories, Inc., and corresponding revisions thereto, the complete contents of which are expressly incorporated by reference herein for all purposes.","Both types of software have upgrade mechanisms defined within the OpenCable standards. The software stack is preferably upgraded using the Common Download specification, as set forth in the document entitled \u201cOpenCable\u2122 Specifications, Common Download 2.0,\u201d Document Control No. OC-SP-CDL2.0-108-090206, Revision 108, Feb. 6, 2009, and corresponding revisions thereto, the complete contents of which are expressly incorporated by reference herein for all purposes. The Java application is distributable, for example, by at least two different illustrative mechanisms.","With reference now to , a first mechanism for distributing the Java application uses an OCAP-compliant object carousel . The object carousel  is preferably operative as a clocked, retransmitting first-in, first-out (FIFO) apparatus or data structure, or an alternative queue processing apparatus or structure, in that it transmits the contents of a file at a specific data rate and upon completion starts again at the beginning of the file. A second mechanism for distributing the Java application is by using the Internet Protocol (IP) and HTTP (e.g., HTTP server ).","A similar mechanism can be used for updating the host stack code. In this case, the host code also has at least two upgrade mechanisms. A first mechanism is via a Trivial File Transfer Protocol (TFTP) server , and a second mechanism is via an OpenCable common download carousel .","In some instances, a controller , such as the Mystro Application Server (MAS), can be provided for purposes of software provisioning system control. Note that the Mystro Application Server, commercially available from Time Warner Cable, Inc., New York, N.Y., USA, is but one non-limiting example of a software provisioning system , suitable for carrying out desired control. Video on demand server  may be similar to servers . The elements in  may be located in head-end . For example, servers ,  may be forms of application distribution servers . Elements  and  may correspond to MEM . CMTS  may correspond to CMTS . Summer  combines the material from the CMTS  and QAM modulator  so that it can be placed on the network .","Non-limiting examples of out-of-band data transmission specifications suitable for use with embodiments of the present invention include Data Over Cable Service Interface Specification (DOCSIS), which can be employed with a cable modem, and Digital Audio Video Council (DAVIC) specification. DOCSIS defines the communications and operation support interface requirements for a data over cable system which permits the addition of high-speed data transfer to an existing Cable TV (CATV) system. It is typically employed to provide Internet access over an existing HFC network infrastructure. A system utilizing the DAVIC specification generally has significantly less bandwidth compared to DOCSIS. For example, the DAVIC system may be allocated having a bandwidth of about 50 kbps while the DOCSIS system, with a cable modem, will typically have a bandwidth in a range of about 7 Mbps to about 38 Mbps or higher. Thus, when performing an out-of-band software update, such update can be done via HTTP, but it is point-to-point; i.e., each individual STB communicates with the HTTP server  and initiates a separate request for a new code load. Using such an approach, the HTTP server  should be robust if a number of different requests are likely to be received at the same time.","Given the description thus far, it will be appreciated that, in general terms, a system, according to an aspect of the invention, includes a set-top box  having a at least one set-top box processor  and a set-top box memory (e.g., volatile and\/or non-volatile memory coupled to processor ). The system also includes a video content network, as discussed above, and at least one configuration server  having a configuration server memory and at least one configuration server processor coupled to the configuration server memory. The at least one set-top box processor and the at least one configuration server processor are cooperatively operative to facilitate affording a user a selection of interactive video software components to run on the set-top box, and to facilitate loading selected interactive video software components onto the set-top box, the selected interactive video software components being delivered to the set-top box over the video content network. In some instances, the set-top box memory loads an initial monitor application , and the at least one set-top box processor and the at least one configuration server processor are cooperatively operative to facilitate affording the user the selection during execution of the initial monitor application. In one approach, the user initiates a selection routine on the set-top box, and the selection routine provides an interface for the user to select, from among a plurality of software components, at least one interactive video software component to run on the set-top box, as discussed with respect to . In another approach, the user is presented with a selection interface  to the configuration server for selecting, from among a plurality of software components, at least one interactive video software component to run on the set-top box.","In another aspect, and with reference to flow chart  of , given the description thus far, it will be appreciated that, in general terms, a method for allowing user selection of interactive video software components in a television set-top box operatively coupled to a video content network, according to an aspect of the invention, includes the step  of affording the user a selection of interactive video software components to run on the set-top box. An additional step  includes loading selected interactive video software components onto the set-top box (in-band and\/or out-of-band). The selected interactive video software components are delivered from a remote node (e.g., head end, switching hub or other intermediate node, and so on) over the video content network.","In some instances, the step of affording the user a selection of interactive video software components is performed at a prescribed time after the set-top box has completed a re-booting operation. In another approach, the step of affording the user a selection of interactive video software components is performed during execution of an initial monitor program on the set-top box.","The selected interactive video software components may be delivered to the set-top box under control of a multiple system operator (MSO). In some instances, delivery of the selected interactive video software components is performed using the Motion Pictures Expert Group (MPEG) standard from a data carousel  or . In addition to, or in lieu of, such an approach, Internet Protocol (IP) (e.g., from server ) over a Data Over Cable Service Interface Specification (DOCSIS) network can be employed (or TFTP server  could be employed).","As noted above, in one approach, the user initiates a selection routine on the set-top box, and the selection routine provides an interface for the user to select, from among a plurality of software components, at least one interactive video software component to run on the set-top box, as discussed with respect to . Again, as noted above, in another approach, the user is presented with a selection interface  to the configuration server for selecting, from among a plurality of software components, at least one interactive video software component to run on the set-top box. In this later case, the selection interface may be, for example, in the form of a selection menu, with each of the plurality of software components available for selection being displayed as items in the selection menu.","In one or more embodiments, an additional step includes obtaining a local list of interactive video software components to load on the set-top box (the list may have been stored, for example, as described with respect to reference numeral  above). The local list of interactive video software components can be stored in non-volatile memory associated with the set-top box (e.g., file registry  in memory device ). At least a portion of the non-volatile memory associated with the set-top box in which the local list of interactive video software components is stored may be accessible to the operating system and\/or a middleware layer of the set-top box.","As described with respect to , in a case when two-way communication between the set-top box and a configuration database  is unavailable, additional steps may include reading a local list of interactive video software components to load on the set-top box, as per reference character ; determining which interactive video software components to load on the set-top box based at least in part on the local list of interactive video software components; and loading those of the interactive video software components (for example, applications ) that it is determined to load in the determining step, from an area of non-volatile memory on the set-top box to which an operating system of the set-top box and a middleware component of the set-top box have access.","In some instances, method steps includes establishing two-way communication between the set-top box  and a configuration database  using a unique identifier (for example, MAC address); and retrieving, from the configuration database, a list of interactive video software components that are available to load on the set-top box for a device type corresponding to the unique identifier. The list of interactive video software components may be stored in an extended application information table (XAIT). Additional steps may include having a monitor application  of the set-top box pass the extended application information table to middleware of the set-top box; having the middleware of the set-top box add the interactive video software components in the list to an applications database; and having the monitor application request execution of the interactive video software components in the list.","Recalling reference characters , , and , in some instances, method steps include establishing two-way communication between a configuration database  and a network-based user interface ; obtaining, using the network-based user interface , a list of software components available to load on the set-top box for a device type of the set-top box; and selecting, using the network-based user interface , at least one interactive video software component to load on the set-top box. In one or more instances, an additional step includes verifying compatibility of a user-selected interactive video software component as a function of the device type of the set-top box.","Recalling reference characters , , and , in some instances, method steps include obtaining a local list of interactive video software components to load on the set-top box, as at ; establishing a connection between the set-top box and a configuration database, as at ; and, when at least a given one of the interactive video software components to load on the set-top box does not match a corresponding interactive video software component stored in the configuration database, updating the given one of the interactive video software components, as at .","System and Article of Manufacture Details","The invention can employ hardware and software aspects. Software includes but is not limited to firmware, resident software, microcode, etc. One or more embodiments of the invention or elements thereof can be implemented in the form of an article of manufacture including a machine readable medium that contains one or more programs which when executed implement such step(s); that is to say, a computer program product including a tangible computer readable recordable storage medium (or multiple such media) with computer usable program code for performing the method steps indicated. Furthermore, one or more embodiments of the invention or elements thereof can be implemented in the form of an apparatus including a memory and at least one processor that is coupled to the memory and operative to perform, or facilitate performance of, exemplary method steps.","Yet further, in another aspect, one or more embodiments of the invention or elements thereof can be implemented in the form of means for carrying out one or more of the method steps described herein; the means can include (i) hardware module(s), (ii) software module(s) executing on one or more hardware processors, or (iii) a combination of hardware and software modules; any of (i)-(iii) implement the specific techniques set forth herein, and the software modules are stored in a tangible computer-readable recordable storage medium (or multiple such media). Appropriate interconnections via bus, network, and the like can also be included.",{"@attributes":{"id":"p-0099","num":"0103"},"figref":["FIG. 11","FIG. 2"],"b":["1100","1120","104","105","106","702","202","600","602","7002","7004","7006","9002","9004","9006","9008","9010","9012"]},"As shown in , memory  configures the processor  to implement one or more aspects of the methods, steps, and functions disclosed herein (collectively, shown as process  in ). The memory  could be distributed or local and the processor  could be distributed or singular. The memory  could be implemented as an electrical, magnetic or optical memory, or any combination of these or other types of storage devices. It should be noted that if distributed processors are employed, each distributed processor that makes up processor  generally contains its own addressable memory space. It should also be noted that some or all of computer system  can be incorporated into an application-specific or general-use integrated circuit. For example, one or more method steps could be implemented in hardware in an ASIC rather than using firmware. Display  is representative of a variety of possible input\/output devices.","As is known in the art, part or all of one or more aspects of the methods and apparatus discussed herein may be distributed as an article of manufacture that itself includes a computer readable medium having computer readable code means embodied thereon. The computer readable program code means is operable, in conjunction with a computer system, to carry out all or some of the steps to perform the methods or create the apparatuses discussed herein. The computer readable medium may be a recordable medium (e.g., floppy disks, hard drives, compact disks, EEPROMs, or memory cards) or may be a transmission medium (e.g., a network including fiber-optics, the world-wide web, cables, or a wireless channel using time-division multiple access, code-division multiple access, or other radio-frequency channel). Any medium known or developed that can store information suitable for use with a computer system may be used. The computer-readable code means is any mechanism for allowing a computer to read instructions and data, such as magnetic variations on a magnetic medium or height variations on the surface of a compact disk. As used herein, a tangible computer-readable recordable storage medium is intended to encompass a recordable medium, examples of which are set forth above, but is not intended to encompass a transmission medium or disembodied signal.","The computer systems and servers described herein each contain a memory that will configure associated processors to implement the methods, steps, and functions disclosed herein. Such methods, steps, and functions can be carried out, e.g., by processing capability on individual elements in the other figures, or by any combination thereof. The memories could be distributed or local and the processors could be distributed or singular. The memories could be implemented as an electrical, magnetic or optical memory, or any combination of these or other types of storage devices. Moreover, the term \u201cmemory\u201d should be construed broadly enough to encompass any information able to be read from or written to an address in the addressable space accessed by an associated processor. With this definition, information on a network is still within a memory because the associated processor can retrieve the information from the network.","Thus, elements of one or more embodiments of the present invention can make use of computer technology with appropriate instructions to implement method steps described herein.","As used herein, including the claims, a \u201cserver\u201d includes a physical data processing system (for example, system  as shown in ) running a server program. It will be understood that such a physical server may or may not include a display, keyboard, or other input\/output components.","Furthermore, it should be noted that any of the methods described herein can include an additional step of providing a system comprising distinct software modules embodied on one or more tangible computer readable storage media. All the modules (or any subset thereof) can be on the same medium, or each can be on a different medium, for example. The modules can include any or all of the components shown in the figures (e.g. modules\/submodules for server process , client process , applications and modules in , modules to implement functionality of the blocks in , and so on). The method steps can then be carried out using the distinct software modules of the system, as described above, executing on the one or more hardware processors (e.g., a processor or processors in the client and a processor or processors in the server). Further, a computer program product can include a tangible computer-readable recordable storage medium with code adapted to be executed to carry out one or more method steps described herein, including the provision of the system with the distinct software modules.","Non-limiting examples of languages that may be used include markup languages (e.g., hypertext markup language (HTML), extensible markup language (XML), standard generalized markup language (SGML), and the like), C\/C++, assembly language, Pascal, Java, Enhanced TV Binary Interchange Format (EBIF), and the like.","Accordingly, it will be appreciated that one or more embodiments of the invention can include a computer program including computer program code means adapted to perform one or all of the steps of any methods or claims set forth herein when such program is implemented on a processor, and that such program may be embodied on a tangible computer readable recordable storage medium. Further, one or more embodiments of the present invention can include a processor including code adapted to cause the processor to carry out one or more steps of methods or claims set forth herein, together with one or more apparatus elements or features as depicted and described herein.","Although illustrative embodiments of the present invention have been described herein with reference to the accompanying drawings, it is to be understood that the invention is not limited to those precise embodiments, and that various other changes and modifications may be made by one skilled in the art without departing from the scope or spirit of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0021"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0022"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0023"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0024"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0025"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0026"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0027"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0028"},"figref":"FIGS. 7 and 8"},{"@attributes":{"id":"p-0025","num":"0029"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0026","num":"0030"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0027","num":"0031"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
