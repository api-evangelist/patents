---
title: Method of and apparatus for ascertaining the status of a data processing environment
abstract: In order to facilitate a user's ability to trust a computing environment, a trusted computing device () is arranged to challenge other devices in the computing environment and to record a log of the facilities available within the computing environment and an indication of whether those facilities are trustworthy. A new user () entering the computing environment can obtain the log from the trusted computing device in order to ascertain the status of the environment. Alternatively any device can hold data concerning platforms in its vicinity and its operation can be authenticated by the trusted device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08219496&OS=08219496&RS=08219496
owner: Hewlett-Packard Development Company, L.P.
number: 08219496
owner_city: Houston
owner_country: US
publication_date: 20020222
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND ART","DISCLOSURE OF THE INVENTION","BEST MODE FOR CARRYING OUT THE INVENTION"],"p":["The subject matter of the present application may also be related to the following U.S. Patent Applications: \u201cData Event Logging in Computing Platform,\u201d Ser. No. 09\/979,902, filed Nov. 27, 2001; \u201cData Integrity Monitoring in Trusted Computing Entity,\u201d Ser. No. 09\/979,903, filed Nov. 27, 2001; \u201cInformation System,\u201d Ser. No. 10\/080,476, filed Feb. 22, 2002; \u201cTrusted Computing Environment,\u201d Ser. No. 10\/080,477, filed Feb. 22, 2002; \u201cMethod of and Apparatus for Investigating Transactions in a Data Processing Environment,\u201d Ser. No. 10\/080,478, filed Feb. 22, 2002; \u201cTrusted Platform Evaluation,\u201d Ser. No. 10\/194,831, filed Jul. 11, 2002; \u201cPrivacy of Data on a Computer Platform,\u201d Ser. No. 10\/206,812, filed Jul. 26, 2002; and \u201cMethod and Apparatus for Locking an Application Within a Trusted Environment,\u201d Ser. No. 10\/208,718, filed Jul. 29, 2002.","The present invention relates to a method of and apparatus for determining status of a data processing environment. The information concerning the status of the environment may include an indication of what devices are operating within the environment, what facilities they offer and whether the devices can be trusted.","The issues of security and ease of use of a computing platform are often in conflict. For commercial applications, a client computing platform typically operates in an environment where its behaviour is vulnerable to modification. Such modification can be made by local or remote entities. This has given rise to concerns, especially in the field of e-commerce, that transactions conducted on a computer might be subject to some form of misdemeanour, such as theft of credit card details. These perceived insecurities may limit the willingness of users to undertake e-commerce transactions on either local or remote computer systems.","The data processing environment (or environment) of a computer platform or other data processing appliance consists of the other computing entities (computer platforms or any other data processing appliance) that are discrete from the computer platform and are in communication with it through one or more data networks. For a computer entity to form part of the environment of a computer platform, the computer platform must be able to interact with the entity but must not be constrained to do so\u2014at some level, interaction must be voluntary. The boundary of an environment will generally be considered in terms of network connections (or other network \u201cdistance\u201d) between one point and another\u2014for some purposes, the data processing environment of a computer platform may be considered its local network and no more, whereas for other purposes, the data processing environment of a computer platform may extend much further (for example, across a company intranet). There are existing security applications, such as virus checkers and fire walls which can be installed in computer systems in order to limit their vulnerability to viruses or to malicious users seeking to take control of the machine remotely. However, these security applications execute on computing platforms under the assumption that the platform is operating as intended and that the platform itself will not subvert the processes used by these applications.","Users engaging in communication with a remote or unfamiliar data processing environment may nevertheless be concerned about the security of that environment as a whole rather than just the security of the computing device with which they have made initial contact. Thus users seek reassurance that the computing environment can be trusted.","As used herein, the word \u201ctrust\u201d is used to mean that something can be trusted, in the sense that it is working in the way that it is intended and expected to work and is not or has not been tampered with in order to run malicious operations.","According to a first aspect of the present invention, there is provided an apparatus for ascertaining the status of a data processing environment, comprising at least one trusted computing device which is arranged to challenge other devices within a data processing environment, to keep a record of the responses and to make the record available.","It is thus possible to use a trusted computing device to keep an audit of the status of a data processing network. The trusted device can challenge new devices as and when it discovers them within the data processing environment and can also re-challenge known devices every now and again in order to ascertain that they are functioning correctly. In such a challenge, a trusted computing device extracts from the challenged device a response to the challenge. Preferably the challenged device enters into a predefined challenge\u2014response protocol, such as a TCPA challenge\u2014response protocol in order to return trusted integrity and identity information about the challenged device. Thus the response may include information which can be analysed to determine the integrity of the challenged device, such as at least one integrity metric. The trusted device, upon receiving the response, extracts the integrity information from the response and compares it with an authenticated metric for the challenged device. As a result of the comparison, the trusted device can indicate whether the challenged device can be trusted or not. By keeping a record of the time that a device is challenged, the response received from the device and the result of the comparison of the integrity metrics, the trusted computing device can maintain a log of the status of the data processing environment.","The integrity information would normally include a cryptographic representation of at least one platform component. This may, for example, include the BIOS, operating system or an application. Preferably the integrity information is of the form described in the TCPA specification (www.trustedpc.org) and has been measured and stored in the form described in the TCPA specification.","Advantageously other devices within the data processing environment can also issue challenges. The responses to those challenges and conclusions concerning trustworthiness can be recorded by the at least one trusted computing device. An indication of which devices acted as challenger and challengee can also be recorded, together with an indication of whether the challenger is itself established as trustworthy.","Preferably the challenges to known devices are made on a periodic basis in order to maintain an up to date record of the integrity of the data processing environment. However, additional challenges may also be made when a device attempts to perform an operation within the environment which requires that device to be trusted. Thus attempts to read, create or modify sensitive data, whether this data be user data, application data or system data (as defined by a system administrator) may require re-authentication of the trustworthiness of the device before it is enabled to have such access.","Advantageously the record held by the trusted device includes historical data representing the status of the network. Such data may be of use during investigations of system performance in order to indicate when a data processing environment could be regarded as trustworthy and\/or what devices or processes may have entered or been executed in that environment. This information may be of use to administrators or investigators when seeking data concerning fraudulent transactions or attempts to subvert the operation of one or more components within the system.","In order to maintain a record of the devices within the computing environment, the trusted computing device needs to ascertain what devices are there. It can do this by sending query messages into the environment. The queries may be specific, that is directed to a known device in order to ascertain that it is still there and functioning. However, the queries may also be more general. Thus, for example, the trusted computing device could issue a query to a class of devices, for example printers, to identify what printers are available within the data processing environment. Such a query could then be repeated for a different class of device in order to build up a picture of the data processing environment. Alternatively, the trusted computing device could issue a general query asking devices to respond by identifying themselves, and optionally their functionality and\/or integrity metrics. Advantageously the query also includes a generation identifier such that the age of the query can be ascertained by devices receiving the query. In this context, age can be measured in either or both the temporal sense or the number of retransmissions that the message has undergone. It is particularly desirable to limit the number of retransmissions that the query message may undergo as in extreme cases the message could propagate out of a local computing environment via, for example, a communications link to the internet and then computing devices receiving that query message could then attempt to respond. If this were the case, the trusted computing device could be overwhelmed by responses from computers which do not really constitute part of the data processing environment but which nevertheless have managed to receive the query message.","The trusted computing device can also listen to data communications on a network or between devices local to it in order to ascertain what devices are operating. The need to listen for devices entering and leaving the data processing network is likely to become more prevalent with the general increase in the number of portable computing devices and the ease at which these can enter or leave data processing environments as a result of the increase in wireless communication links to join computing devices, for example Blue Tooth.","When a user with a portable computing device or a remote user using a telecommunications link wishes to interact with a data processing environment, the user may seek to challenge the integrity of that environment. The functionality of the user's computing device and\/or the communications bandwidth between the user's device and the data processing network may limit the ability of the user to make individual challenges to each device in the data processing environment. However, the user may still seek confirmation that the data processing environment is secure, or at least an indication of the trust which he should place in that data processing environment (for a user may still decide to use a data processing environment even if that data processing environment is not deemed to be trustworthy\u2014this is the user's choice depending on the type of transaction that the user wishes to undertake and the urgency ascribed to that transaction). With the present invention, a user does not need to make individual challenges to each device, but instead can seek this data from the trusted computing device. The user can trust the data from the trusted computing device because the user can challenge the trusted computing device and analyse the response to the challenge, comparing the integrity metrics received from the trusted computing device with those which are certificated as being the correct metrics, thereby enabling the user to determine whether the trusted computing device is itself trustworthy. The user can also determine what facilities are available in the computing environment.","According to a second aspect of the present invention, there is provided a computing device including a communications device and a data processor wherein the data processor is arranged to establish communication with a trusted computing device via the communication device, to receive at least part of the record of responses and to establish from an internal rules base whether the data processing environment is trustworthy enough to enable a class of transaction or task to be carried out in that environment.","According to a third aspect of the present invention, there is provided a computing device including a communications device and a data processor, wherein the computing device uses the communication device to establish communication with at least one device within a data processing system, and in which the data processor is arranged to identify challenges from at least one trusted computing device, to apply response rules to the challenge and, if a response is indicated, to respond to the challenge in accordance with the rules.","Advantageously, when the computing device receives a challenge from the trusted device it examines a generation identifier in order to see whether the message is still valid. The generation identifier may be a skip number. Thus, each time the challenge is retransmitted the skip number is modified, and every time a device receives a challenge, it checks the skip number to see if the challenge is valid. For convenience, the trusted computing device may set the skip number to an integer value greater than zero, and the skip number may be decremented at each retransmission. Any device receiving a challenge with a skip number of zero ignores the challenge and does not retransmit the challenge. This prevents the challenge from propagating too widely.","According to a fourth aspect of the present invention, there is provided a method of ascertaining the status of the data processing environment, the method comprising the steps of using a trusted computing device to challenge other devices within a data processing environment, keeping a record of the responses made to the challenges and making the record available.","Preferably the trusted computing device will itself respond to a challenge such that the integrity of the trusted computing device can be verified by the device which challenged it.","According to a further aspect of the present invention, there is provided a method of conducting a transaction in a data processing environment comprising a user device and at least a trusted computing device each having respective communications capabilities, wherein the trusted computing device keeps a record of computing devices that it has identified within the data processing environment, and wherein the user device is arranged to establish communications with the trusted computing device, to receive therefrom at least a portion of the record of computing devices within the data processing environment, and to analyse the record to establish what facilities the user device may access.","Preferably the user device further analyses the record in accordance with a set of security rules contained therein to determine what level of trust the user device can place on the integrity of the data processing environment.","It is thus possible to provide a trusted record of the status and trustworthiness of devices within a data processing network such that a computing device can be spared the task of challenging each device in the computer network in order to ascertain its trustworthiness, but instead can obtain a record of the challenges from a trusted computing device.","Many of the concepts underlying trusted computing have already been published. In particular, a specification concerning the functionality of a trusted computing environment has been published by the \u201ctrusted computing platform alliance\u201d on their web site at www.trustedpc.org. A trusted computing device of this general type is described in the applicant's co-pending International Patent Application Publication No. PCT\/GB00\/00528 entitled \u201cTrusted Computing Platform\u201d, filed on 15 Feb. 2000, the contents of which are incorporated by reference herein.","In essence, it is desirable to ensure that a computer is trustworthy. In broad terms, this can be achieved by attaching to or embedding in a computer a trusted physical device whose function in relation to that computer is to obtain measurements of data from the computer which provides an integrity metric of the computer platform. The identity of the computing platform and the integrity metric are compared with expected values that are provided by a trusted party whose role it is to vouch for the trustworthiness of the platform. If the identities and metrics match, then there is a strong implication that the platform is operating correctly. The trusted physical device is normally provided as a tamper evident component such that attempts to interfere with its operation will result in its performance being modified when it is next used.","A trusted platform is illustrated in . The platform  includes a central processing unit , which is in communication with BIOS memory , Random Access Memory , Read Only Memory , a removable data storage device , an internal mass storage device , at least one communications device , a trusted device , a video board and associated display , and a user input device such as a keyboard , via a data bus . In a conventional computing device, at power up or reset the CPU initially reads instructions from the BIOS . In the early days of computing the BIOS memory which is non-volatile was hard wired and therefore it was not possible to modify its contents. However, with the development of EEPROM it has become possible to modify the BIOS of a computer system. In a trusted computing environment, the boot-up sequence is modified such that the CPU first looks to the trusted device  for instructions after reset or power-up. The trusted device , having gained initial control of the CPU, then enables the CPU to execute the BIOS program held in the BIOS memory . The trusted device can investigate integrity metrics in the BIOS program, such as check sums for the whole or specific part of the BIOS or data at specific addresses in order to determine that the BIOS has not been interfered with or modified. It can compare these values against values certified as being correct by the trusted party. The BIOS  may advantageously be contained within the trusted device, thereby ensuring that the BIOS builds the correct environment for the operating system. The trusted device can also, through its interaction with the BIOS, enforce the operation of various security policies. After the BIOS has been loaded, the CPU can then seek to load its operating system from the storage device . Once again, the trusted device  can challenge the operating system to extract integrity metrics from it and to compare these with metrics provided by the trusted party. Thus, as the system builds up from power-up or reboot the BIOS is first confirmed as trustworthy, and once this has been established tests are made to see that the operating system is trustworthy, and once this has been established further tests may be made to ensure that applications executing on the trusted computer platform are also trustworthy. The trusted computing platform need not be a general purpose PC wherein applications are loaded from the mass storage device  to the random access memory , and indeed the trusted device could be an embedded system. In which case, it is likely that application data may also be held in read-only memory . The trusted computing device may have a reader  for removable media, such as floppy discs, or for interfacing with the smart cards which may be used to help authenticate the identity of a local user who seeks to operate the trusted computing device  via its keyboard . An interface to the local user is provided via the keyboard  and the video display , as is well known. The trusted computing device  also has a communications device  which may support one or more of direct connection with a local area or wide area network, wireless communications, infrared or ultrasonic communication and\/or communications with a telecommunication network via a data link.","As shown in , the trusted computing device  can be a component within a relatively well defined network. Thus other devices such as a printer , a scanner , and user devices  and . Each device is connected via a local area network . In this environment, the communications medium between devices is well defined and a number of devices on the network can be expected to change only relatively slowly.","A user's device , for example in the form of a personal digital assistant can establish communications with the trusted computing device  via the communications device  of the trusted computing device  and also a communications port  of the personal digital assistant. The personal digital assistant  also includes a central processing unit  and a memory  holding a set of security rules which the processor  uses to decide whether or not it should regard the data processing environment as trustworthy or not.","In use, the trusted computing device  challenges the devices  to  in its computing environment  and keeps a record of their responses, including integrity metrics, which enables it to work out whether the devices  to  can be trusted, that is that they are behaving in an expected manner and have not been subverted by external or malicious processes. The trusted device  keeps a record of the results of the challenges in its memory  and on the mass storage device  (see ).","When the user's device wishes to use the facilities available of the computing network , it establishes communication with the trusted computing device , and challenges it in order to assure itself that the trusted computing device is a trusted computing device and not some rogue device masquerading or spoofing as a trusted computing device. Once the user device  has completed the challenge and compared the integrity metric retrieved from the trusted computing device with an expected integrity metric as certified with a trusted authority, the user device  may then query the trusted computing device  in order to obtain a list of the devices available in the local computing area, the functions that they can perform and whether or not they are trustworthy. Having received this data, the user device  then applies the security rules held in the memory  in order to determine whether, in accordance with those rules which themselves are defined either by the device owner, administrator or some other person given the rights to modify those rules, whether the local computing environment is trustworthy. If so, the user is informed. Alternatively, the user may be informed if the computing environment is not trustworthy. The user may also be informed which classes of transactions should or should not be undertaken in this environment.","Not all computing environments are as well defined as that shown in . Companies may wish to offer computing facilities in publicly accessible environments where it can be expected that most users will establish local wireless communications with some form of gateway or server whilst they are in the environment. Thus, as shown in  a trusted computing device  may be situated in an environment with a display device . Users  and  having portable computing devices such as personal digital assistants or palm top computers may enter the computing area around the devices  and  and may establish wireless communications with the trusted computing device  in order to enquire what facilities are available in the computing area. The computing device  may then inform the devices  and  about the existence of the display device  such that these devices can then interface with it for example to display data which they are not capable of displaying on their own inbuilt display devices. The trusted computing device  may also seek to inform each mobile device  and  about the presence of the other. The trusted computing device may also provide details about access to a telecommunications network .","As indicated above, the arrangements of  are simply examples of (relatively simple) data processing environments. Far more complex arrangements involving multiple network connections may nonetheless be considered data processing environments. In most practical cases, it will be necessary to define a boundary or a way to determine the extent of the environment, but this will generally not be problematic to the person skilled in the art (for example, such a boundary may be formed by a firewall).  schematically illustrates a sequence by which the trusted computing device  can maintain its record of devices in the data processing environment. Starting at step , the trusted computing device  listens to data traffic in the computing environment to identify the presence of any new devices. Once the device has been identified, control is passed to step  where the trusted computing devices issues a challenge to the new device. Any response made by that device is recorded at step , together with the time at which the response was received and then control is passed to step  where an analysis of any integrity metric returned by the challenged device is made in order to ascertain whether the device is trustworthy. The result of the analysis is recorded at step . The challenged device, or indeed any other device on the network may issue a request to the trusted device to seek information from the record, a test for any such request is made at step . If a request has been received, that data is transmitted at step , otherwise control is returned to step  where the integrity check can be repeated.","The status of the computing environment can be held by the trusted computing device, and consequently displayed by the user devices, in any manner convenient and appropriate for retaining such data. The status information may be provided in the form of a list of computing entities within the computing environment, together with a trust status for each of the computing entities. Most simply, these statuses could be \u201ctrusted\u201d (indicating that the computing entity concerned is verified to have the status of a trusted computing device) or \u201cuntrusted\u201d (where no such verification has occurred). The \u201cuntrusted\u201d status could be broken down further into \u201cnot trusted\u201d (where verification has failed) and \u201cuntested\u201d (where verification has either not yet occurred or has not taken place sufficiently recently). A further possibility is for there to be multiple levels of trust available for a computing entity, such that the computing entity is able or permitted to perform different functions at the different levels of trust\u2014more and different integrity metrics may be required to determine that a computing entity is at a higher trust level. Such an arrangement is further described in the applicant's copending International Patent Application Publication No. WO 01\/27722, the contents of which are incorporated by reference to the fullest extent permitted by law. In this case, the trusted device  should be adapted to determine when these different trust levels are attained, and to indicate these trust levels appropriately when indicating the status of the computing environment.","In a modification of the flow chart showing in , steps  and  may be replaced by a single broadcast challenge. Such a broadcast challenge is schematically shown in . The broadcast challenge comprises two parts, the first being the challenge message  and the second part being a generation identifier .","Devices receiving the challenge shown in  may execute the procedure shown in . The procedure starts at step  where the device receives the challenge. Control is then passed to step  where the generation identifier is examined. In a preferred embodiment of the invention, the generation identifier is set to a positive integer number which controls the number of retransmissions which the challenge may undergo. Each time the challenge is retransmitted, the generation identifier is decremented by the device that retransmits the challenge. Thus, once the generation identifier reaches zero the challenge has become \u201cold\u201d and is no longer valid. At step  a test is made to see if the generation identifier is greater than zero, if not, control is passed to step  where the challenge handling routine is terminated. If the generation identifier is greater than zero control is passed to step  where, if the device is programmed to participate in these challenges, it responds to the challenge. From step  control is passed to step  where the challenge identifier is decremented and then to step  where the challenge is retransmitted with the decremented generation identifier. Control is then passed to step  which represents the end of this routine.","It is thus possible to provide a measure of the integrity and facilities available within a local, and possibly varying data processing network."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention will further be described, by way of example, with reference to the accompanying drawings, in which:",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
