---
title: Performing automatically authorized programmatic transactions
abstract: Techniques are described for facilitating interactions between computing systems, such as by performing transactions between parties that are automatically authorized via a third-party transaction authorization system. In some situations, the transactions are programmatic transactions involving the use of fee-based Web services by executing application programs, with the transaction authorization system authorizing and/or providing payments in accordance with private authorization instructions previously specified by the parties. The authorization instructions may include predefined instruction rule sets that regulate conditions under which a potential transaction can be authorized, with the instruction rule sets each referenced by an associated reference token. After one or more of the parties to a potential transaction supply reference tokens for the parties, the transaction authorization system can determine whether to authorize the transaction based on whether the instruction rule sets associated with the reference tokens are compatible or otherwise satisfied.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08150768&OS=08150768&RS=08150768
owner: Amazon Technologies, Inc.
number: 08150768
owner_city: Incline Village
owner_country: US
publication_date: 20090814
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCES TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["This application is a continuation of co-pending U.S. patent application Ser. No. 12\/058,638, filed Mar. 28, 2008, which is a continuation of U.S. patent application Ser. No. 10\/894,350, filed Jul. 19, 2004, now U.S. Pat. No. 7,383,231 issued Jun. 3, 2008, which is hereby incorporated herein by reference.","The following disclosure relates generally to facilitating interactions between computing systems, and more particularly to performing transactions between parties that are automatically authorized in accordance with predefined authorization instructions of the parties, such as to authorize fee-based Web service programmatic transactions between executing application programs of the parties.","Various mechanisms exist to allow computers and executing software applications to programmatically interact. For example, remote procedure call (\u201cRPC\u201d) protocols have long existed that allow a program on one computer to cause a program on another computer to be executed, and various object-oriented architectures such as CORBA (\u201cCommon Object Request Broker Architecture\u201d) and DCOM (\u201cDistributed Component Object Model\u201d) provide similar capabilities. In addition, a variety of middleware programs have been implemented to connect separate applications (often of distinct types and from unrelated sources) to allow communication. For example, various EDI (\u201cElectronic Data Interchange\u201d) networks exist that provide standard mechanisms to allow a computer system of one user of the network to send data to a computer system of another user of the network.","The widespread popularity of the World Wide Web (\u201cWeb\u201d) has provided additional opportunities for computers to inter-communicate. For example, much current Web use involves users interactively requesting Web pages from Web servers (e.g., via executing Web browser applications of the users) and receiving the requested information in response. In addition to such interactive user specification of requested information, there is also growing use of the Web to support the programmatic interaction of remote applications to exchange information via defined APIs (\u201capplication program interfaces\u201d), such as via Web services.","Web services allow heterogeneous applications and computers to interact, and can be defined and implemented using a variety of underlying protocols and techniques. For example, some Web service implementations return data in XML (\u201ceXtensible Markup Language\u201d) format using HTTP (\u201cHyperText Transport Protocol\u201d) in response to a Web service invocation request specified as a URI (\u201cUniform Resource Identifier\u201d), such as a URL (\u201cUniform Resource Locator\u201d) that includes a specified operation and one or more query parameters. In other implementations, additional underlying protocols are used for various purposes, such as SOAP (\u201cSimple Object Access Protocol\u201d) for standard message exchange, WSDL (\u201cWeb Services Description Language\u201d) for description of service invocations, and UDDI (\u201cUniversal Description, Discovery, and Integration service\u201d) for discovery of available services.","Although Web services allow various applications and computers to interact, the current implementations and uses of Web services have various limitations. For example, while some providers of Web services are willing to make their Web services available for free, the most useful and reliable Web services are often not freely available. Unfortunately, the mechanisms for providers of Web services and potential consumers of those Web services to agree upon payment and other terms for transactions can be time-consuming and difficult to use. Moreover, there may often be issues of security and trust that hinders such agreements, such that potential consumers may lack sufficient assurance that prospective Web service providers will reliably and accurately provide desired Web services, while Web service providers may lack assurance that their Web services will be used only by authorized consumers and only in accordance with any conditions specified by the providers. In addition, application developers may be reluctant to have their application programs invoke fee-based Web services if they cannot limit and control the use of such Web services by end-users of the application programs who would be making the calls to those Web services. Finally, easy-to-use mechanisms do not typically exist to allow Web service providers to collect specified payment for the use of their Web services by consumers.","Thus, it would be beneficial to provide a solution that addresses these and other problems associated with the use of Web services and\/or that otherwise facilitates the interaction of computer systems and executing applications.","A software facility is described that facilitates interactions between computing systems, such as by in some embodiments providing a third-party transaction authorization system that automatically authorizes transactions between parties and\/or financial payments for such transactions in accordance with private authorization instructions that were previously specified by the parties. In some embodiments, some or all of the transactions are programmatic transactions conducted between executing computer programs, such as transactions involving the use of Web services of Web service providers by application programs affiliated with Web service consumers. In addition, in some embodiments the transaction authorization system further provides authorized payments to one or more of the parties on behalf of one or more other parties. The transaction authorization system allows parties to transactions to automatically determine whether the transactions are authorized and to proceed with performance of the transactions if so.","The transaction authorization system can be used to authorize transactions and\/or payments for a variety of types of interactions between parties, with  illustrating examples of some such interactions. In particular,  illustrates an example of a 2-party transaction in which a party requests a service to be provided by a party , with the providing of the service having an associated cost. A transaction authorization system uses information about the parties and (e.g., information received from one of the parties who makes a programmatic call to the transaction authorization system requesting the authorization) in order to determine whether to authorize the transaction and\/or the providing of a payment from the service requester to the service provider to cover the cost associated with the transaction. After the transaction and\/or payment is authorized, the transaction authorization system provides an indication of the authorization (e.g., as a response to the authorization request call), and may further in some embodiments actually make the authorized payment on behalf of the service requester. Details regarding how the authorization process may occur are discussed in greater detail below.","The illustrated authorization and payment techniques can be used in a variety of situations. For example, the provided service may involve a programmatic transaction between the two parties (e.g., invocation by the service requester party of a Web service provided by the service provider party), or instead could involve other types of transactions (e.g., a physical transaction between the parties, such as providing a physical product or service from one party to the other). The authorization interactions with the transaction authorization system can similarly be performed in various ways, such as during the transaction (e.g., such that the transaction will not be completed unless an appropriate authorization response is received), or instead in a manner separate from the transaction (e.g., after the transaction is completed in order to provide payment to the service provider). In addition, the information regarding the parties that is used in performing the authorization may similarly have a variety of forms, as discussed in greater detail below.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8B","b":["850","830","805","810","820","810","820","815"],"i":["b ","b ","b ","b","b ","b ","b ","b "]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8C","b":["830","860","860","815","820","840"],"i":["c ","a","n","c","c ","c "]},"As previously noted, the transaction authorization system can use various information about the parties to a transaction when determining whether to authorize transactions. In particular, users that are potential parties to such transactions may first define usage instruction rule sets of one or more types with the transaction authorization system for later use in authorizing the transactions, such as payment instruction rule sets for use in authorizing fee-based transactions and\/or the associated financial payments for such transactions. Each such payment instruction rule set for a party may include one or more specified rules that regulate the conditions under which the payment instruction rule set can authorize a potential transaction for the party and\/or its associated financial payment, as discussed in greater detail below.","For example, a potential Web service consumer (e.g., an application developer who would like their application program to be able to invoke Web services under specified circumstances) may specify rules for a payment instruction rule set that limits the financial exposure to the Web service consumer of the transactions that can be authorized by that payment instruction rule set (e.g., via a number of times that the payment instruction rule set can authorize a transaction, a maximum payment amount per transaction that the payment instruction rule set can authorize, a maximum total payment amount that the payment instruction rule set can authorize, an expiration date for the payment instruction rule set, etc.). Similarly, a potential Web service provider may specify rules for a payment instruction rule set that limits the liability to the Web service provider for the transactions that can be authorized by that payment instruction rule set (e.g., limitations on consumers that can purchase access to the Web service, limitations on types of payment that can be used to purchase access to the Web service, limitations on remedies available to consumers that are unhappy with their use of the Web service, etc.). In addition, a potential Web service caller (e.g., an end user of an application program supplied by an application developer that invokes one or more Web services) may specify rules for a payment instruction rule set that limits the liability to the caller for the transactions that can be authorized by that payment instruction rule set (e.g., limitations on types of programmatic transactions that the caller is authorized to initiate and\/or on types of payments that can be made to purchase access to a programmatic service, such as payments to providers of the services and\/or fees paid to a transaction authorization service and\/or other third-party service such as a payment service).","After receiving a specified usage instruction rule set for a user, the transaction authorization system stores the instruction rule set in a manner associated with the user (e.g., associates it with an account of the user with the transaction authorization system), optionally after first approving the instruction rule set (e.g., based on verification that the instruction rule set includes required information, if any, and\/or is in the correct form). The transaction authorization system also generates a reference token to refer to the instruction rule set, associates the reference token with the instruction rule set (e.g., by storing an indication of the reference token with the stored instruction rule set), and provides the reference token to the user for later use in referencing the instruction rule set. As discussed in greater detail elsewhere, the reference tokens can be generated in a variety of ways and can take a variety of forms (e.g., a long random number guaranteed to be unique), and in some embodiments multiple reference tokens may be generated for and associated with a single instruction rule set. In some embodiments, the reference tokens are generated in such a manner as to allow anonymous and\/or private use of a reference token by a user, such as by lacking any identification information related to the user and\/or by lacking any information about the conditions of the instruction rule set associated with the reference token (e.g., to prevent other parties to a potential transaction that involves such a reference token from obtaining such information about the user and\/or associated instruction rule set).","After the usage instruction rule sets have been defined and associated reference tokens have been generated, they can then be used to allow automatic authorization of programmatic transactions in accordance with the previously defined conditions of the instruction rule sets. In particular, in some embodiments two or more parties to a potential programmatic transaction (e.g., a Web service provider party, a Web service consumer party, and optionally an end-user caller party) each supply a reference token for use in authorizing the potential transaction, as well as various information about the potential transaction. Those reference tokens and various information about the potential transaction can then be supplied to the transaction authorization system for automatic determination of whether the transaction is authorized (e.g., a dynamic determination, such as in a real-time manner). As discussed in greater detail below, in some embodiments the automatic determination by the transaction authorization system of whether a potential transaction is authorized based on the supplied reference tokens includes retrieving the instruction rule sets associated with those reference tokens and then determining whether the instruction rule sets are compatible.","The information about a potential transaction that is supplied to the transaction authorization system may vary in various embodiments and situations. For example, the information about the transaction may in some situations be limited to merely a transaction amount to be paid by one of the parties to another of the parties, while in other situations a variety of additional details about the transaction may be supplied (e.g., a type of the transaction). Furthermore, in some situations the call to the transaction authorization system can further specify details about what (if any) each of the two or more parties to the potential transaction are to pay, whether to another party and\/or as fees to the transaction authorization system.","The determining of whether usage instruction rule sets are compatible can be performed in various ways in various embodiments, such as by determining if each rule in each instruction rule set is satisfied for the current potential transaction. Such rule satisfaction can occur in various ways for different types of rules, such as based on information about the potential transaction (e.g., a type of transaction and\/or an associated payment amount for the transaction), information about one or more other parties to the transaction (e.g., whether the parties satisfy specified criteria), information about one or more other instruction rule sets specified for the potential transaction (e.g., whether one or more corresponding rules in the other instruction rule set(s) match or are otherwise compatible with the rule), etc. Conversely, in some situations instruction rule sets may be determined not to be compatible because one or more of them (and their associated reference tokens) are invalid for a current potential transaction based on conditions at the time of the potential transaction, such as if the instruction rule set is not currently available for use (e.g., it has expired or is otherwise not currently available for use, such as based on a total number of allowable uses or total allowable payment amount having been exceeded) and\/or if it cannot be used for the potential transaction.","When a potential transaction with one or more associated financial payments is automatically determined to be authorized, the transaction authorization system may in some embodiments further perform or facilitate the payment exchange between the parties as appropriate. For example, in some embodiments a payment providing user may have previously specified one or more payment instruments (e.g., a credit card, bank account, etc.), and if so a financial payment may be obtained from one or more of those payment instruments in an appropriate manner (e.g., from a payment instrument specified by a payment instruction rule set for the payment providing user). Similarly, a payment receiving user may have previously specified one or more payment repositories (e.g., a bank account, debit card, etc.), and if so a financial payment may be provided to one or more of those payment repositories in an appropriate manner (e.g., to a payment repository specified by a payment instruction rule set for the payment receiving user).","After the transaction authorization system authorizes a potential transaction and optionally performs any associated financial payments for the potential transaction, the parties to the transaction can then perform the transaction in an appropriate manner. For example, when the transaction is a fee-based Web service transaction, the Web service consumer can invoke the Web service and the provider of the Web service can provide the associated functionality for the Web service to the consumer.","In some embodiments, additional restrictions may be imposed by the transaction authorization system even after a potential transaction is authorized and\/or performed. For example, in some situations recipients of payments may not be allowed to immediately withdraw or receive those payments, such as by limiting access to an account of the transaction authorization system in which the payment has been deposited and\/or by delaying deposit of some or all of a received payment into another payment repository for the recipient. Such payment access restrictions may be performed for various reasons and in various ways, including to allow any disputes to be resolved and any refunds to be automatically made (e.g., as a chargeback to the payment recipient for the amount of the refund) during a specified period of time after the transaction is authorized and\/or performed. In some embodiments, additional related functionality may further be provided by the transaction authorization system or from a third-party, such as a fee-based underwriting or insurance service that guarantees or provides the funds for any such refunds, thus allowing a payment recipient to have immediate or more rapid access to any received payments.","In some embodiments, users of the transaction authorization system may more generally define other types of usage instruction rule sets for use in situations other than authorizing fee-based transactions, whether instead of or in addition to payment instruction rule sets. For example, such usage instruction rule sets can each include one or more specified rules that regulate the conditions under which the usage instruction rule set can authorize a potential transaction that does not include a fee, such as to determine whether to provide access to restricted information or a restricted service.","In addition, the rules in usage instruction rule sets can be specified and used in various ways in various embodiments, and further can have a variety of forms in various embodiments. For example, in some embodiments a rule may specify a type of information to examine, a type of evaluation to perform with respect to that information, and a test for determining whether the results of the evaluation satisfy the rule. More generally, in other embodiments a rule may reflect any condition or information that can be examined and\/or evaluated to determine whether it is satisfied in a specified situation. For example, in some embodiments a rule can be specified using XML format, and the instruction rule sets can further in some embodiments be specified and\/or stored as XML documents.","Furthermore, in some embodiments users may select from a variety of predefined types of rules when creating usage instruction rules sets, such as with each predefined type of rule specifying a type of condition related to use of an instruction rule set and with each user selection including specifying one or more parameter values to customize the predefined rule type so as to affect how or when its usage condition is satisfied for the instruction rule set being created. In addition, in some embodiments users may specify various user-specific rules, such as rules that each indicate a user-specified procedure for determining when a rule is satisfied (e.g., by providing executable code for the rule that when invoked provides an indication as to whether the rule is satisfied, or instead by indicating a way to automatically obtain a response indicating whether the rule is satisfied, such as by invoking an accessible user-specified Web service or other function using specified parameter values).","In some embodiments, an evaluation of a rule may further involve obtaining additional information to be used as part of the determination as to whether the rule is satisfied, such as in an automated manner and\/or in an interactive manner with respect to one or more users (e.g., by querying the user that created the instruction rule set to confirm an evaluation and\/or to provide additional information). Moreover, in some embodiments in which functionality related to security and\/or privacy for a usage instruction rule set is provided, one or more of the rules in the instruction rule set may be used to provide that functionality (e.g., by restricting who can access and\/or modify the instruction rule set), while in other embodiments such functionality may be provided in other manners (e.g., by controlling access to a user account with which one or more instruction rule sets can be associated).","In addition, payment\/usage instruction rule sets and their rules can be created in various ways in various embodiments, such as interactively via a graphical user interface (\u201cGUI\u201d) provided by the transaction authorization system and\/or via invocation of one or more Web services provided by the transaction authorization system for that purpose. Such Web services may be implemented in various ways, such as using APIs based on XML over HTTP (e.g., as part of the REpresentational State Transfer, or \u201cREST\u201d, distributed interaction model that focuses on resources) and\/or on the use of SOAP and\/or other protocols related to Web services. Furthermore, after an instruction rule set has been created and associated with a reference token, the instruction rule set may in some embodiments not be allowed to be modified. Alternatively, in some embodiments such an instruction rule set may be modified, and a new reference token for the modified instruction rule set will be generated for the new instruction rule set (e.g., to replace the prior reference token). Moreover, in some embodiments reference tokens and\/or associated instruction rule sets may be dynamically created at the time of intended use (e.g., as part of or just prior to attempting to invoke a programmatic service and\/or to sending an authorization request to a third-party authorizer)\u2014as one example, one-time or single-use tokens and\/or instruction rule sets may be created and used (e.g., for a specific potential transaction) in some embodiments.","Furthermore, in some embodiments in which fee-based transactions are authorized and financial payments are handled, some or all of the users may further have an account with the transaction authorization system that facilitates such payments, such as an account that can be used by a user as a payment instrument and\/or a payment repository. Such accounts and\/or other financial instruments\/repositories may in some embodiments support micro-payments of very small amounts. In addition, in some embodiments the transaction authorization system may further provide aggregation of financial payments to be provided and\/or received (e.g., on a periodic basis, such as a month), such as to minimize fees associated with financial payment transactions and\/or to allow minimum payment amounts to be reached. As with other types of accounts, such user accounts may in some embodiments have various conditions and restrictions related to their use, such as a maximum allowed credit balance, as well as various security and access control (e.g., password-based).","In addition, while the transaction authorization system has been described above as providing a variety of functionality and capabilities in various embodiments, in some embodiments some of such functionality and capabilities may instead be split across one or more systems. For example, in some embodiments some or all users may already have user accounts with another system with which the transaction authorization system is affiliated or to which the transaction authorization system otherwise has access, and if so some or all of the account-related functionality may be provided by that other system in conjunction with the transaction authorization system (e.g., the storing of instruction rule sets, the generating of reference tokens, the providing of payment repository\/instrument functionality, etc.).","For illustrative purposes, some embodiments of the software facility are described below in which various specific types of capabilities and functionalities are performed by a specific embodiment of a transaction authorization system, and in which users define and use specific types of instruction rules sets in specific ways, such as payment instruction rule sets to authorize various types of fee-based programmatic transactions. However, those skilled in the art will appreciate that the techniques of the invention can be used in a wide variety of other situations, including with services and items other than Web services and for purposes other than providing financial payment, and that the invention is not limited to the exemplary details provided.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 2","b":["200","220","210"]},"In particular, in the illustrated embodiment a user (not shown) performing application development uses a computing system  to interact  with the PHS to enable later payment handling functionality on behalf of the application programs developed by the user. The application developer user's computing system  first interacts with the Account System to define a user account  for the application developer, such as via an interactive GUI  provided by the Account System or instead via one or more Web services APIs  provided by the Account System. In the illustrated embodiment, each such user account may include one or more usage instruction rule sets  that each specify various rules regarding how and when the usage instruction rule set can be used for payment purposes. In addition, each usage instruction rule set has an associated unique reference token  for later referencing of that usage instruction rule set. After the application developer user creates the account with one or more usage instruction rule sets, the user then includes one or more of the reference tokens  for the usage instruction rule sets within one or more application programs  that they create.","Similarly, one or more users (not shown) that provide Web services to others use a computing system  to interact  with the Account System via the interactive GUI and\/or Web services APIs of the Account System. As with the application developer, each Web services provider user can create an account with one or more usage instruction rule sets with the Account System. The Web services provider user can then associate one or more of their reference tokens  for their usage instruction rule sets as part of one or more Web services Provider Transaction Systems  with which the Web services provider provides Web services to others (e.g., for a fee).","When one of the application programs  is later being executed by an end user (not shown) on an end-user computing system , the application program invokes  one or more Web services provided by the Web services Provider's Transaction System, such as via a Web services API . However, the Web services provider in the illustrated embodiment will provide the requested Web service only if appropriate payment is provided for the application program. Thus, in the illustrated embodiment, the application program supplies a reference token  of the application developer user as part of the Web service invocation. Before providing the requested Web service to the application program, the Web services Provider Transaction System then contacts  the PHS Transaction System  to obtain appropriate authorization and payment, such as via invocation of a Web services API  of the PHS Transaction System. In the illustrated embodiment, the Web services Provider Transaction System provides the reference token  for the Web services Provider as well as the reference token  from the application program as part of the interaction with the PHS Transaction System, and further provides information about the transaction and associated payment that is to occur. While not illustrated here, in some embodiments the one or more Web services provided by the Web services Provider's Transaction System  and the reference token  may be part of one or more application programs of the Web services provider, such as application programs provided as part of a Web site (not shown) of the Web services provider.","The PHS Transaction System  determines if the payment transaction is approved in the illustrated embodiment by first interacting with the Account System  to retrieve information about the usage instruction rule sets  corresponding to the reference tokens provided in the call to the Web service API , as well as further retrieving other information from the user accounts  to which those usage instruction rule sets belong. After obtaining the usage instruction rule sets and other information, the PHS Transaction System  then determines whether the rule sets are compatible and otherwise authorize the requested payment to be made, and if so the PHS Transaction System performs the payment (e.g., by charging a payment instrument associated with the application program's reference token  and by depositing at least some of that charge in a payment repository associated with the Transaction System 's reference token ) and provides confirmation to the Transaction System , with the Transaction System  subsequently providing the initially requested Web service to the application program. In some embodiments, the PHS may further obtain payment for some or all of the services it provides, such as a portion of the payment for each transaction performed and\/or a payment associated with account creation and\/or modification.","Although the PHS Transaction System  and Account System  are illustrated in this embodiment as being separate but cooperating systems, in other embodiments the illustrated functionality can be provided in other ways. For example, in some embodiments a single system may provide both the account creation and maintenance capability as well as the transaction authorization and handling capability, while in other embodiments the Transaction System  and Account System  may instead be provided by unrelated systems\/organizations.","In addition, while only payment-type transactions are illustrated here, in other embodiments a variety of other types of transactions could be performed, whether instead of or in addition to a payment transaction. Moreover, while the illustrated embodiment discusses a per-use fee for using the Web service of the Transaction System , in other embodiments a variety of other types of purchase transactions could be performed, such as an ongoing subscription to one or more Web services of the Transaction System  for one or more application programs . Alternatively, a specified number of uses of the Web service or an unlimited number of uses during a specified period of time may instead be purchased and associated with the reference token , such as by the application developer user before distributing the application program  to the end users. In such situations, information about the subscription or other multi-use purchase may be stored by the Account System in various ways so that the Transaction System  will later be able to determine that a payment transaction is authorized. Additional details regarding automatically authorizing programmatic transactions using usage instruction rule sets are included in related U.S. patent application Ser. No. 10\/894,347, filed concurrently and entitled \u201cAutomatic Authorization Of Programmatic Transactions\u201d, which is hereby incorporated by reference in its entirety.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIGS. 9A-9B","FIGS. 9A and 9B"],"b":["10","10"]},"The illustrated series of actions for the example in  begins with a representative of MapX (not shown) performing interactive account setup actions  with the Subway transaction authorization system , and in particular using a Web site  provided by the Subway system  to specify information about MapX (e.g., credential information and Automated Clearing House (or \u201cACH\u201d) bank information for MapX). The Subway Web site  then interacts with a Subway Web service  to create an account for MapX by supplying the received information for MapX and by receiving an ID for the new account in response. A representative of MapX then initiates programmatic interactions  with a Subway Web service  to create a payment instruction rule set for MapX by supplying MapX's credentials, account ID and the rules for the payment instruction rule set\u2014such programmatic interactions by the MapX representative may include using a MapX Web service provider application  that will later provide the mapping Web service to consumers or, instead, using another program (not shown). The Subway system  stores the payment instruction rule set in storage  and returns an associated token to the MapX representative, and the MapX representative includes the token with the MapX Web service provider application  for later use in authorizing transactions. After registering the payment instruction rule set, MapX is now able to use the MapX application  to offer its mapping Web service to potential consumers of the Web service.","A representative of CellX (not shown) then interacts  with the MapX application  to sign up for the MapX mapping service (e.g., by using an appropriate Web service of the MapX application  to perform the signup activities), and receives MapX's token in response. The CellX representative also performs account setup actions  with the Subway system  by interacting with the Subway Web site  to specify information about CellX, and receives an account ID in response. To obtain the account ID, the Subway Web site  interacts with a Subway Web service  to create the CellX account by supplying the information received from CellX. The CellX representative then initiates programmatic interactions  with a Subway Web service  to create a payment instruction rule set for CellX by supplying CellX's credentials, account ID and the rules for the payment instruction rule set. The Subway system  then stores the payment instruction rule set in storage  and returns an associated token to the CellX representative, and the CellX representative includes the token with a CellX application  that is available to CellX customers via the cellphone service from CellX. After registering the payment instruction rule set, CellX is now able to offer MapX's mapping Web service to its customers via the CellX application .","A customer of the CellX cellphone service then selects  functionality in the CellX application  that uses MapX's mapping functionality from the MapX application , such as by selecting a map-related link that is part of an online directory service of the CellX application . The user selection then causes the CellX application  to programmatically invoke a MapX Web service from the MapX application  in order to request a particular map corresponding to the customer's selection, with the invocation including supplying the CellX reference token previously associated with the CellX application . The MapX application  then submits to a Subway Web service  a pay authorization request that includes information about the transaction, MapX's credential, and the MapX and CellX reference tokens. The Subway system  then retrieves the payment instruction rules sets for the reference tokens and uses them to determine that the transaction is authorized, performs the payment from CellX to MapX for the invocation, and returns a transaction ID to the MapX application  indicating the transaction authorization. The MapX application  then supplies the requested map to the CellX application , which displays the map to the customer. As one example of a possible implementation for the MapX application  and the CellX application , the CellX application  may operate in a manner similar to application program  previously described in , and the MapX application  may operate in a manner similar to an application program of the WS Provider Transaction System  that includes the WS API , as previously described in .",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIGS. 10A-10C","b":["960","960","960","970"]},"The illustrated series of actions for the example in  begins with a representative of a merchant (not shown) performing interactive actions  to sign up for Rob's shopping cart service by interacting with Rob's shopping cart application , which first redirects the representative to the Subway transaction authorization system  to register a payment instruction rule set for the merchant. The merchant representative next interacts with a Web site  provided by the Subway system  to sign in (in this example the merchant already has an account with the Subway system ) and to supply payment instruction rule information to the Subway system . The Subway Web site  then interacts with a Subway Web service  to create a payment instruction rule set by supplying credentials for Rob's shopping cart Web site application , an account ID for the merchant, and the rules for the payment instruction rule set. The Subway system  next stores the payment instruction rule set in storage  and returns an associated token to the merchant via Rob's shopping cart Web site application . The merchant then includes customer-selectable controls related to shopping cart functionality as part of the merchant's Web site application , with the controls associated with appropriate URLs that use the merchant reference token as a parameter while invoking corresponding Web services provided by Rob's shopping cart Web site application .","A customer of the merchant then interacts  with the merchant's Web site application  to select an appropriate control to add an item to the customer's shopping cart, which causes information to be sent from the merchant application  to Rob's shopping cart Web site application  that includes a session ID for the customer and the reference token for the merchant. When the customer later indicates via the merchant Web site application  to proceed to checkout, the merchant application  sends information to Rob's shopping cart application , which in turn interacts with the Subway Web site  in order to dynamically specify a one-time set of payment instruction rules for the customer for the amount corresponding to purchasing the items in the customer's shopping cart. The customer is also prompted to sign in at the Subway Web site , including creating an account if need be. The Subway Web site  then proceeds to interact with a Subway Web service  to create the payment instruction rule set by supplying credentials for Rob's shopping cart Web site application , an account ID for the customer, and the rules for the payment instruction rule set. The Subway system  next stores the payment instruction rule set in storage  and returns an associated token for the customer to Rob's shopping cart Web site application .","When the customer of the merchant indicates placing an order by selecting a \u201cConfirm Order\u201d control via the merchant Web site application , the merchant application  sends an indication to Rob's shopping cart Web site application  that includes the session ID. Rob's shopping cart Web site application  then retrieves the reference token for the customer that was previously created, and submits a pay authorization request to a Subway Web service  that includes information about the transaction, the shopping cart Web site credential, and the reference tokens for the merchant and customer. The Subway system  next retrieves the payment instruction rules sets for the reference tokens and uses them to determine that the transaction is authorized, performs the payment from the customer to the merchant for the transaction, and returns a transaction ID to Rob's shopping cart Web site application  indicating the transaction authorization.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIGS. 1A-1B","FIG. 1A"],"b":["111","113"]},"In this example, the account creation screen also includes an optional section  in which the user ABC can specify one or more payment repositories for payments that the user may receive, such as for providing fee-based Web services to consumers. In this example embodiment, user ABC specifies two payment repositories in which incoming payments may be deposited, including a bank account and a debit card. The user further specifies restrictions for the debit card such that any payments deposited must be a minimum of at least five cents. The section  in this illustrated embodiment also indicates that the user account being created can itself serve as a payment repository for the user.","The account creation screen also includes a section  in which the user ABC can specify one or more payment instruments to be used for payments to be made to others. In this example, user ABC specifies the same bank account as an available payment instrument, although with a restriction that any individual payments from the account be no larger than $50, as well as a credit card payment instrument with restrictions of maximum individual payments of $200 and a maximum cumulative balance of $2,000. Section  similarly indicates that the user account being created can be used as a payment instrument by the user, which for this user and in this example includes a $1,000 maximum balance credit limit. After specifying the various types of information, the user can then select the control to create the account, or the user can instead select the control to cancel the account creation.","In the illustrated embodiment, after initially creating the user account, the user is then presented with the option of creating one or more usage instruction rule sets via the example screen shown in . In particular, the illustrated screen includes a header section  with overview information and a rule specification section  in which various information can be specified for a usage instruction rule set being created. In this example, section  allows the user to specify a name for the usage instruction rule set being created, a usage type for the rule set (which in this example is to receive payments), a payment repository to receive any such payments, and an expiration date which in this example is not specified. The user ABC can also specify one or more specific rules for this rule set. The example illustrates two rules that have been defined, and a drop-down menu for a third rule showing other types of rule attributes that can be selected and customized for this usage instruction rule set in this example.","For example, user ABC has specified that this usage instruction rule set will only receive payments from users that satisfy the first \u201cAllowedPayers\u201d role attribute, which in this example can be satisfied based on a specified organization affiliation of the payer, rating of the payer, or specific payer whose ID is indicated. As is indicated, other rule attributes that can be specified in this example include disallowed or blocked payers from whom user ABC will not accept payment, specifications of allowed or disallowed transaction types with which the usage instruction rule set can be used, allowed or disallowed types of payment instruments and currencies for received payments, terms and conditions for later handling any disputes that occur, etc. In addition, the illustrated embodiment allows a user to specify a user-defined rule, such as by including executable code and\/or a mechanism for invoking an accessible executable function (e.g., a Web service). After specifying the various information for the usage instruction rule set being created, the user ABC can then select one of the controls in section  to create the current usage instruction rule set and continue with creating another rule set for the account, to create the current usage instruction rule set and exit the account modification, or to skip the creation of a current instruction rule set and exit.","The types of rule attributes shown in this example are provided in a simplified manner for the purpose of example, and similar information could instead be specified in other ways in other situations. For example, rather than having different attributes for allowed and disallowed payers, a single attribute for payers could instead be provided, with the type of evaluation criteria instead used to determine whether a user is allowed or disallowed (e.g., to satisfy the rule, it is specified that the payer \u201cIS\u201d or \u201cIS-NOT\u201d a specified value). Additional details regarding example attributes are discussed elsewhere.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 1C","FIG. 1C","FIG. 1B"],"b":"131"},"In particular, this usage instruction rule set is being created by user CDE for use in providing payment for transactions that will be invoked by one or more application programs created by user CDE, such as fee-based Web services (e.g., one or more Web services provided by Web service provider user ABC). In this example, the usage instruction rule set being created will use user CDE's PHS account (designated in this example with the name \u201cMyPHSAccount\u201d), and has a specified expiration date. The second of the two rules defined for the usage instruction rule set further limits the total payments that this usage instruction rule set can authorize to be less than or equal to the amount of $1,000 by using the predefined rule attribute \u201cPaymentsAllowed\u201d with an appropriate evaluation type and rule value. The first rule specified for the usage instruction rule set identifies a specific payment recipient with which the usage instruction rule set cannot be used, which in this example is specified with a general attribute of \u201cRecipient\u201d and appropriate evaluation type of \u201cIS-NOT\u201d rather than a more specific attribute type of \u201cDisallowedRecipient\u201d. In other embodiments, corresponding information could be instead provided in a variety of other ways, including in XML documents using other formats and\/or in ways other than with XML.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 1C","b":["133","133"]},"This usage instruction rule set also illustrates an example of the definition of a user-defined rule, which in this example is given a user-specified name of \u201cAllowed-Use\u201d (e.g., for later use in referencing this user-defined rule independently of any other user-defined rule, not shown), as well as a URI-based invocation specification that when executed as indicated will provide a response indicating whether the rule is satisfied. In this example, the invocation specification includes an indication of a parameter to be filled in with information specific to a particular potential transaction by replacing the parameter \u201caccess-provider.name\u201d enclosed in square brackets with the corresponding name from the account for the usage instruction rule set of an access provider to which this usage instruction rule set is being matched for a particular transaction. Such a user-defined rule can make a determination as to whether the rule is satisfied in a specific situation in a variety of ways and using a variety of types of information, including information about the application using the usage instruction rule set and\/or the end-user executing the application program. Similarly, user-defined rules can be defined and invoked in a variety of other ways in other embodiments, including by providing executable code (e.g., a script or applet) as part of the creation of the usage instruction rule set with which the user-defined rule will be associated.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIGS. 1D and 1E","FIG. 1D","FIG. 1A","FIG. 1A","FIG. 1A"],"b":["140","140","140","140","143","146","113","141","142"],"i":["a","b ","a "]},"In addition, as previously discussed with respect to , in this example embodiment the PHS provides for at least some of the users the ability to use their PHS account as a payment repository and\/or payment instrument. Thus, columns  and  include information corresponding to that aspect of the user's PHS account, including a current balance on the account and a maximum balance allowed for the account (e.g., a maximum balance dynamically determined in a user-specific manner at the time of account creation and optionally adjusted as appropriate based on later experience with the user)\u2014however, since user ABC does not use the PHS account as a payment repository or instrument in this example, the current account balance is zero. While not illustrated here, a variety of other types of information may be associated with an account, such as indications of transactions that have previously been performed for an account, changes that have occurred to the account, indications of other users and associated access controls for those users to access the account, etc. Entry contains similar corresponding information for the account of user CDE previously discussed with respect to .","Columns  and  of the Account database  include information about any payment repositories and payment instruments defined for use with a user account. In particular, the information in column  for entry corresponds to the payment repositories specified in section  of , and the payment instrument information in column  of entry similarly corresponds to the payment instruments specified in section  of . In this example, each payment repository and payment instrument is given a unique ID, which are stored in the columns  and , with additional example databases Payment Repository database  and Payment Instrument database  to store information about user-specified payment repositories and user-specified payment instruments, respectively. In this example embodiment, the payment repository and instrument databases each contain multiple entries -and -, respectively, to correspond to individual payment repositories and instruments.","In addition, the databases  and  store a variety of information for each repository or instrument, including an automatically generated ID in columns  and , indications of the account with which the payment repository or instrument is associated in columns  and , a user-specified name for the repository or instrument in columns  and , and various information in columns - and - regarding how to use the payment repository or instrument for payment deposits or charges, respectively. In other embodiments, a variety of other types of additional information may be provided and used, such as in a manner specific to the type of instrument and\/or repository (e.g., using the full name of a user associated with a credit card in order to make a charge, but not using such information for a bank account). In addition, in this illustrated example the user can define one or more restrictions regarding use of a payment repository or instrument, as previously discussed, with such restriction information stored in columns - and - in this example.","While user ABC uses a single bank account as both a payment repository and a payment instrument (corresponding to entries and , respectively), in this example the bank account is given distinct IDs for each of these uses (as shown in columns  and  for those entries), although in other embodiments a single ID could instead be used. In addition, while not illustrated here, in other situations a single payment source or destination (e.g., a bank account) could be used with multiple defined payment repositories and\/or multiple defined payment instruments, such as to define different restrictions or other conditions with different uses of that payment source or destination. In addition, in this example user CDE has not yet designated any user-specified payment repositories or user-specified payment instruments, instead using the PHS account as a payment instrument (since user CDE does not currently receive any payments, he\/she does not currently need a payment repository).",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 1E","FIG. 1B","FIG. 1C"],"b":["160","160","160","131","161","163","160","162","164","165","167","166"],"i":["a ","b "]},"The database  also includes an indication of the rules for the usage instruction rule set in column , which in this example are illustrated with rule IDs corresponding to those rules. Additional information about the rules is then provided in the Usage Instruction Rule database . In particular, each rule in this example has an associated unique rule ID (as shown in column ) and an indication of the ID of the usage instruction rule set with which the rule is associated (as shown in column ). Columns - include various information regarding how to determine whether the rule is satisfied in a particular situation, and a variety of other types of information may similarly be stored in other embodiments and situations for such rules, such as in a manner specific to different types of rules (e.g., by storing invocation details for user-defined rules).",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 3","b":["300","340","350","370","305","310","320","330","311","312","313","315"]},"An embodiment of the Transaction Authorization Handler system is executing in memory, and it includes a Transaction Validater component , a Transaction Handler component , an Account Manager component , an optional Payment Aggregator component , and an optional Security Manager component . In particular, the Transaction Authorization Handler system receives indications of potential transactions and determines whether to authorize the transactions. Such potential transactions may include transactions between an application program  executing in memory  of a Web service consumer system  and a Web service server  executing in memory  of a Web service provider system , and\/or transactions between one or more such systems  and  and one or more other computing systems .","Before performing potential transactions to be authorized, users (e.g., users of the computing systems  and ) interact with the Account Manager component to create user accounts, with information  about the user accounts stored on storage . Each such user can also interact with the Account Manager to create one or more usage instruction rule sets, with information  about each such instruction rule set stored in a manner associated with the account of the user. The Account Manager also creates a reference token for each such usage instruction rule set that is created, with information  about the reference token stored in a manner associated with the usage instruction rule set. After the created reference tokens are provided to users such as users of the computing system  and , those users may store reference tokens  and  on storage  and  respectively of the computing systems for later use by the application program  and Web service server , respectively. While the Account Manager component is part of the Transaction Authorization Handler system in this illustrated embodiment, in other embodiments some or all of the Account Manager component functionality could instead be performed by another system with which the Transaction Authorization Handler system interacts.","When the Transaction Authorization Handler system  receives an indication of a potential transaction for an authorization determination and two or more reference tokens for parties to the transaction, the Transaction Validater component retrieves stored information about the usage instruction rule sets that correspond to the reference tokens and determines whether those usage instruction rule sets are satisfied for the potential transaction under the current conditions. If so, the Transaction Handler component then assists in performing or otherwise handling the potential transaction, such as to arrange for financial payment performance between the parties for fee-based transactions.","In some embodiments, the Transaction Authorization Handler system further may include one or both of the optional Payment Aggregator component  and an optional Security Manager component . When present, the Payment Aggregator component can aggregate payments being made to and\/or received from parties as appropriate, such as based on preferences of those parties and\/or using other information. The Security Manager component can, when present, perform additional security-related verification of various types, such as to confirm the identity of parties to transactions, to confirm the identity and\/or authorization of users supplying reference tokens, to perform user authorization for users attempting to create and\/or modify user accounts and usage instruction rule sets, etc.","The functionality of the Transaction Authorization Handler system can be accessed in various ways in different embodiments. For example, some users may have physical access to the server computing system, and if so can interact with the various I\/O devices  to provide and\/or receive information. Alternatively, other users can use client computer systems to directly access the system, such as remotely via network  (e.g., via the Internet and\/or the World Wide Web). Such users can use software or other functionality provided on the client computer systems, such as a browser (not shown) executing in memory , to interact with the Transaction Authorization Handler system. In other embodiments, users may instead receive functionality and\/or information from the Transaction Authorization Handler system indirectly via interactions with one or more other computers, which may directly receive that functionality or information from the Transaction Authorization Handler system before providing it to the users. In addition, some or all of the Transaction Authorization Handler system components may provide various feedback or other general types of information to users (e.g., in response to user requests), and this information can be presented to the user on the display  of the server system or on one of the I\/O devices  or  on a client system.","Those skilled in the art will appreciate that computing systems ,  and  are merely illustrative and are not intended to limit the scope of the present invention. Computing system  may be connected to other devices that are not illustrated, including through one or more networks such as the Internet or via the World Wide Web (\u201cWeb\u201d). More generally, a \u201cclient\u201d or \u201cserver\u201d device may comprise any combination of hardware or software that can interact, including computers, network devices, internet appliances, PDAs, wireless phones, cellphones, pagers, electronic organizers, television-based systems and various other consumer products that include inter-communication capabilities. For example, one of the computing systems  may be a cellphone, wireless PDA or other portable device, and a user of that phone\/PDA\/device may make one or more selections that result in using the capabilities of the Transaction Handler system , such as to handle transactions with one or more provider computing systems . In addition, the functionality provided by the illustrated Transaction Authorization Handler system components may in some embodiments be combined in fewer components or distributed in additional components. Similarly, in some embodiments the functionality of some of the illustrated components may not be provided and\/or other additional functionality may be available.","Those skilled in the art will also appreciate that, while various items are illustrated as being stored in memory or on storage while being used, these items or portions of them can be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively, in other embodiments some or all of the software modules and\/or components may execute in memory on another device and communicate with the illustrated computing device via inter-computer communication. Some or all of the Transaction Authorization Handler system components or data structures may also be stored (e.g., as instructions or structured data) on a computer-readable medium, such as a hard disk, a memory, a network, or a portable article to be read by an appropriate drive. The Transaction Authorization Handler system components and data structures can also be transmitted as generated data signals (e.g., as part of a carrier wave) on a variety of computer-readable transmission mediums, including wireless-based and wired\/cable-based mediums. Accordingly, the present invention may be practiced with other computer system configurations.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 4","b":"400"},"The routine begins at step , where an instruction related to an account is received. In step , the routine determines whether the instruction is related to creating an account, and if so continues to step  to receive various information related to the definition of the account. For example, in some embodiments a user may supply an account name, an account password or other security access mechanism, indications of one or more payment instruments for use with the account, indications of one or more payment repositories for use with the account, etc. The routine then continues at step  to automatically generate additional information related to use of the account, such as in some embodiments a unique account ID, a determination of a maximum balance allowed for a user if the account can be used as a payment instrument that can include charges, etc. In step , the routine then creates the account using the received and generated account information, and in step  provides a reference for the new account to the creator of the account (e.g., an indication of the account ID).","If it was instead determined in step  that the received instruction was not related to creating an account, the routine continues to step  to receive information related to modifying the account, and in step  modifies the account as indicated if appropriate. In step , the routine then determines whether the account modification included creating or modifying a usage instruction rule set. If so, the routine continues at step  to generate a unique reference token associated with the usage instruction rule set to allow later reference to the instruction rule set. At step , the routine then provides an indication of the reference token to the account owner for later use in referencing the usage instruction rule set. After steps  or , or if it was instead determined in step  that the account instruction was not related to creating or modifying a usage instruction rule set, the routine continues at step  to determine whether to continue making modifications to the current account. If so, the routine returns to step , and if not the routine continues to step  and ends.","While not illustrated here, in other embodiments additional functionality related to user accounts could be provided, such as to allow a user to review an account by providing information about the account. In addition, in some embodiments additional security controls may be used to ensure that a user seeking to create and\/or modify an account is authorized to do so. Furthermore, in some embodiments the user accounts may be associated with a company or other entity distinct from the system providing the transaction authorization and handling capabilities.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 5","b":"500"},"The routine begins in step , where an indication is received of a multi-party transaction and of reference tokens for each of multiple of the parties (e.g., one for each of the two or more parties to the transaction). The routine then continues to step  to retrieve the usage instruction rule sets corresponding to the tokens, and may in some embodiments further retrieve or otherwise make available other information from the user accounts to which some or all of those usage instruction rule sets belong.","The routine then continues to step  to determine whether to perform a security verification to determine whether the parties are allowed to use the tokens, such as based on additional security information provided by the parties. If so, the routine continues at step  to attempt to obtain and verify security information showing authorization of the parties to use the tokens, and in step  determines whether such authorization was verified. In other embodiments, such security or other access authorization to use such tokens may instead not be performed, such as when the use of the instruction rule sets for the tokens themselves will contain rules or other restrictions that control when the usage instruction rule sets are allowed to be used.","If it was determined in step  that the token usage authorization was verified, or if it was instead determined in step  not to perform the security verification, the routine continues to execute subroutine  to validate the transaction based upon the retrieved usage instruction rule sets, as discussed in greater detail with respect to . If it is determined in step  that the transaction is validated, the routine continues to execute subroutine  to attempt to perform the indicated transaction (e.g., to make a financial payment for a fee-based transaction), such as in a manner specific to the type of transaction, as discussed in greater detail with respect to . In other embodiments, the routine may instead merely determine whether the transaction is authorized, leaving performance of the transaction for others.","After step , if it is determined in step  that the indicated transaction performance succeeded, the routine continues to step  to return an indication of success, such as in a response XML document if the routine  was invoked as part of a Web service. If it was instead determined in step  that the token usage authorization was not verified, or in step  that the transaction was not validated, or in step  that the transaction performance did not succeed, the routine continues instead to step  to instead return an error message, such as an XML document sent as a response if the routine was invoked as part of a Web service. After steps  or , the routine continues to step  and ends.",{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 6","b":"530"},"The subroutine begins at step , where an indication is received of a transaction and of two or more usage instruction rule sets. In step , each rule that specifies criteria related to transactions with which the usage instruction rule set can be used and\/or that specifies information about parties to transactions with which the usage instruction rule set can be used is selected, and information about the transaction and\/or those other parties is retrieved in order to determine whether the rules are satisfied. For example, to obtain information about another party to the transaction, information from a user account associated with that other party may be obtained (e.g., the user account with which the usage instruction rule set for the token from that other party is associated), as well as information about the other parties that may be accessible in other manners (e.g., based on the invocation requests for the transaction handling routine, such as from an HTTP header used as part of a Web services invocation). Similarly, information about the transaction may be available based on information received as part of the routine invocation (e.g., as part of a transaction object or a document supplied for the transaction), or instead from an external source.","After step , the subroutine continues at step  to identify other specified rules that are not user-defined rules and that specify other terms or conditions related to allowable transaction, and determines whether any such specified rules are compatible with rules from other specified usage instruction rules sets and\/or the transaction itself. The subroutine then continues at step  and invokes any user-defined rules in the manner specified for those rules and obtains responses indicating whether those rules are satisfied. After step , the subroutine continues to step  to determine whether all of the rules for the specified usage instruction rules sets were satisfied. If so, the subroutine continues to step  and returns an indication that the transaction is validated, and if not continues instead to step  to return an indication that the transaction is not validated. After steps  or , the subroutine continues to step  and ends.","In other embodiments, the transaction validation could instead be performed in other manners, such as by evaluating the various types of rules in different orders and\/or stopping further rule evaluation if any rule is found to not be satisfied. Alternatively, in other embodiments, determination of whether a transaction is validated may be performed in manners other than requiring unanimous satisfaction of all specified rules, such as if usage instruction rule sets themselves specify other types of inter-relationships among the rules of those rule sets and\/or based on other predefined criteria (e.g., a minimum threshold for a percentage or subset of specified rules that must be satisfied).",{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIGS. 7A and 7B","b":"545"},"The subroutine begins in step , where an indication is received of a payment transaction (e.g., of a payment amount and possibly of other payment-related terms) and of reference tokens for each of at least one payment provider and at least one payment recipient. In step , the subroutine determines for each payment provider a payment instrument to be used and any defined payment restrictions for that payment instrument, such as based on a payment instrument associated with the usage instruction rule set corresponding to the token supplied by that payment provider. Similarly, in step  the subroutine determines the payment repository to be used for each payment recipient as well as any defined payment restrictions. In step , the subroutine then determines whether the one or more payments indicated by the transaction satisfy any defined payment restrictions for the payment instruments and\/or repositories, such as based on minimum or maximum current charges, minimum or maximum cumulative balances, etc.","After step , the subroutine continues at step  to determine whether the payments satisfy any defined payment restrictions, and if so continues to step  to, for each such payment, determine whether to bill the payment instrument for the charge separately or instead to aggregate the payment along with other payments, such as on a periodic basis (e.g., monthly) or until a minimum cumulative charge is reached. If it is determined not to aggregate the charge for a payment, the subroutine continues to step  to immediately charge the corresponding payment instrument for the payment, while if it is instead determined in step  to aggregate the charges, the subroutine continues to step  to store an indication of the charge for later aggregated billing for that payment instrument. While not illustrated, steps - can be repeated multiple times for each payment in the transaction if multiple payments are to occur.","After steps  or , the subroutine continues in step  to determine whether to deposit each payment directly in the corresponding payment repository or to instead aggregate the payment along with other payments before depositing the aggregate payments. If it is determined not to aggregate the payments, the subroutine continues to step  to immediately deposit each such payment into the appropriate payment repository, while if it is instead determined in step  to aggregate a payment the subroutine continues instead to step  to store an indication of the payment for later aggregated deposit into the appropriate payment repository. While not illustrated here, steps - can be performed for each payment to be made for a transaction.","After steps  or , the subroutine continues to step  to return an indication that the payment succeeded. If it was instead determined in step  that the payments indicated by the transaction did not satisfy one or more defined payment restrictions, the subroutine continues instead to step  to return an indication that the payment did not succeed. In some embodiments, the ability to aggregate payments and\/or deposits is considered when determining whether any defined payment restrictions are satisfied, such as to allow multiple payments or deposits to satisfy minimum amount restrictions, while in other embodiments each such payment is individually considered. Alternatively, in other embodiments the payment deposit aggregation and\/or payment charge aggregation may not be performed. After steps  or , the subroutine continues to step  and ends.","Those skilled in the art will also appreciate that in some embodiments the functionality provided by the routines discussed above may be provided in alternative ways, such as being split among more routines or consolidated into less routines. Similarly, in some embodiments illustrated routines may provide more or less functionality than is described, such as when other illustrated routines instead lack or include such functionality respectively, or when the amount of functionality that is provided is altered. In addition, while various operations may be illustrated as being performed in a particular manner (e.g., in serial or in parallel) and\/or in a particular order, those skilled in the art will appreciate that in other embodiments the operations may be performed in other orders and in other manners. Those skilled in the art will also appreciate that the data structures discussed above may be structured in different manners, such as by having a single data structure split into multiple data structures or by having multiple data structures consolidated into a single data structure. Similarly, in some embodiments illustrated data structures may store more or less information than is described, such as when other illustrated data structures instead lack or include such information respectively, or when the amount or types of information that is stored is altered.","The following provides illustrative examples of techniques for defining and using usage instruction rule sets and rules for the instruction rule sets, although the invention is not intended to be limited to these details.","An example of limiting a transaction to a particular payment sender or recipient is as follows:","ALLOWED RECIPIENT TOKEN","recipientToken==\u2018token1\u2019;","If the recipient's token exactly matches token1 the transaction will be allowed. This rule is available to all parties (sender, recipient, caller). Examples of specifying multiple allowed recipient tokens include the following:",{"@attributes":{"id":"p-0100","num":"0099"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RecipientToken in ( \u2018token1\u2019, \u2018token2\u2019, \u2018token3\u2019 );"]},{"entry":[{},"or, in an alternative embodiment,"]},{"entry":[{},"recipientToken == \u2018token1\u2019 or recipientToken == \u2018token2\u2019 or"]},{"entry":[{},"recipientToken == \u2018token3\u2019;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{},{}]},{"@attributes":{"id":"p-0101","num":"0100"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SenderToken notIn ( \u2018token1\u2019, \u2018token2\u2019, \u2018token3\u2019 );"]},{"entry":[{},"or, in an alternative embodiment,"]},{"entry":[{},"senderToken != \u2018token1\u2019 and senderToken != \u2018token2\u2019 and"]},{"entry":[{},"senderToken != \u2018token3\u2019;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"An example of creating a secret handshake is as follows:","This is an example of the sender and recipient exchanging a secret handshake to agree on some term. If both parties do not have rules like this defined, then the transaction will be disallowed.","SENDER SECRET",{"@attributes":{"id":"p-0103","num":"0102"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string SharedSecretSender := \u2018rumplestilskin\u2019;"]},{"entry":[{},"SharedSecretSender == SharedSecretRecipient;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"For the secret handshake rule, if the sender and recipient do not define the same value, the transaction will be disallowed. Any string can be used in place of \u2018rumplestilskin\u2019, and any reference name can be used in place of SharedSecretSender and SharedSecretRecipient, as long as it is not a predefined reference.","RECIPIENT SECRET",{"@attributes":{"id":"p-0105","num":"0104"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string SharedSecretRecipient := \u2018rumplestilskin\u2019;"]},{"entry":[{},"SharedSecretSender == SharedSecretRecipient;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"For the secret handshake rule, if the sender and recipient do not define the same value, the transaction will be disallowed. Any string can be used in place of \u2018rumplestilskin\u2019, and any reference name can be used in place of SharedSecretSender and SharedSecretRecipient, as long as it is not a predefined reference.","An example of creating a limited-use reference token is as follows:","Payment instruction rule sets can limit the number of times a token can be used to make a payment, the total amount that the token is used for, or the expiration date of a token. These rules apply only to the usage of that token, so a sender's payment instruction rule set can only limit the usage of the sender's token. Likewise, the same applies for the caller and recipient.","SINGLE USE TOKEN",{"@attributes":{"id":"p-0109","num":"0108"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MyTokenUseCount <= 1;"]},{"entry":[{},"or, in an alternative embodiment,"]},{"entry":[{},"tokenTransactionCount == 1;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{}]},{"@attributes":{"id":"p-0110","num":"0109"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MyTokenUsecount <= 5;"]},{"entry":[{},"or, in an alternative embodiment,"]},{"entry":[{},"tokenTransactionCount <= 5;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{}]},{"@attributes":{"id":"p-0111","num":"0110"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MyTokenUseTotalAmount <= \u2018USD 50\u2019;"]},{"entry":[{},"or, in an alternative embodiment,"]},{"entry":[{},"tokenTransactionAmount <= $50;"]},{"entry":[{},"This rule limits the total amount this token is used for to USD 50."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0112","num":"0111"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TransactionTimestamp < \u201930-Jan-2005\u2019;"]},{"entry":[{},"or, in an alternative embodiment,"]},{"entry":[{},"transactionRequestDate < dateTime \u201930-Jan-2005\u2019;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{},{}]},"This rule causes the token to disallow payment unless this token is used as the recipient's token.","USE ONLY AS CALLER","MyRole==\u2018caller\u2019;","This rule causes the token to disallow payment unless this token is used as the caller's token.","USE ONLY AS RECIPIENT","MyRole==\u2018sender\u2019;","This rule causes the token to disallow payment unless this token is used as the sender's token.","An example of limiting the amounts of a transaction is as follows:","Transaction amount limit rules are available to all parties.","MAXIMUM TRANSACTION AMOUNT",{"@attributes":{"id":"p-0117","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"transactionAmount <= \u2018USD 50\u2019;"]},{"entry":[{},"This rule limits the transaction amount to USD 50 or less."]},{"entry":[{},"If the transaction is greater than this amount, this rule will"]},{"entry":[{},"disallow the transaction."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{},{},{},{},{}]},"An example of a payment provider\/sender specifying payment details is as follows:","The sender specifies the payment method, such as whether the payment is being made from a credit card, an ACH bank account, or from an existing account balance.","BALANCE TRANSFER","string paymentMethod :=\u2018balance transfer\u2019;","This rule specifies that funds will be taken from an existing account balance.","DEFAULT ACH BANK ACCOUNT","string paymentMethod :=\u2018ach\u2019;","This rule specifies that a default ACH bank account for the account will be used. The default ACH account can be specified in various ways, such as via CrateAccount or SetDefaultFinancialInstrument messages.","SPECIFIC ACH BANK ACCOUNT",{"@attributes":{"id":"p-0119","num":"0118"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string paymentMethod := \u2018ach\u2019;"]},{"entry":[{},"string paymentInstrument := \u2018financialInstrumentReference\u2019;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{},{},{},{}]},{"@attributes":{"id":"p-0120","num":"0119"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string paymentMethod := \u2018credit card\u2019;"]},{"entry":[{},"string paymentInstrument := \u2018financialInstrumentReference\u2019;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"An example of a payment recipient specifying dispute resolution policies is as follows:","Dispute Resolution may happen when the sender registers a dispute about a particular transaction. If specified by the recipient's payment instruction rule set, an automatic refund will be issued from the recipient to the sender to resolve the dispute. A dispute is initiated by the sender, and is governed by the dispute resolution policies specified by the recipient. In this example embodiment, ordinary refunds are not disputes and can be requested by the recipient at any time, and will always succeed, regardless of the dispute resolution policies specified by these rules.\n\n\u2018SENDER WINS\u2019 TIME LIMIT\n",{"@attributes":{"id":"p-0123","num":"0122"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"duration senderwinsTimeLimit := \u201915 days\u2019;"]},{"entry":[{},"or, in alternative embodiments,"]},{"entry":[{},"senderwinsTimeLimit := duration \u2018P15D\u2019;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{}]},{"@attributes":{"id":"p-0124","num":"0123"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"duration senderwinsTimeLimit := \u20180 days\u2019;"]},{"entry":[{},"or, in an alternative embodiment,"]},{"entry":[{},"senderwinsTimeLimit := duration \u2018P0D\u2019;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{}]},{"@attributes":{"id":"p-0125","num":"0124"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"number senderwinsRefundFraction := 50%;"]},{"entry":[{},"or, in an alternative embodiment,"]},{"entry":[{},"senderwinspercentLimit := 50%;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"An example of a caller\/end-user or payment recipient limiting the payment method is as follows:","The caller and\/or recipient can place limits on where the funds come from. For example, if the caller is paying for the transaction fees, the caller might wish to make sure that the source of funds is not a \u2018credit card\u2019, since credit cards transaction fees are higher than other methods.\n\nBALANCE TRANSFERS ONLY\n\npaymentMethod==\u2018balance transfer\u2019;\n\nThis rule will disallow the transaction if the payment method is not a balance transfer.\n\nBALANCE TRANSFERS AND ACH ONLY\n\npaymentMethod==\u2018balance transfer\u2019 or paymentMethod==\u2018ach\u2019;\n\nThis rule will disallow the transaction if the payment method is not a balance transfer or ACH.\n\nNO CREDIT CARDS\n\npaymentMethod !=\u2018credit card\u2019;\n\nThis rule will disallow the transaction if the payment method is a credit card.\n","An example of limiting the fraction of a fee paid is as follows:","Fee percentages are passed into the Pay message by the caller. Any party can use these rules.","LIMIT SENDER'S FRACTION OF THE TOTAL FEE",{"@attributes":{"id":"p-0129","num":"0128"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"senderFractionOfFee <= 50%;"]},{"entry":[{},"or, in an alternative embodiment,"]},{"entry":[{},"senderFeePercent <= 50%;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{}]},{"@attributes":{"id":"p-0130","num":"0129"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RecipientFractionOfFee <= 80%;"]},{"entry":[{},"or, in an alternative embodiment,"]},{"entry":[{},"recipientFeePercent <= 80%;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{}]},{"@attributes":{"id":"p-0131","num":"0130"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CallerFractionOfFee <= \u2153;"]},{"entry":[{},"or, in an alternative embodiment,"]},{"entry":[{},"callerFeePercent <= \u2153;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Examples of context data available for payment instruction rule sets and that can be sent as an XML document as part of a pay request message (e.g., from a caller to the transaction authorizer) are as follows:",{"@attributes":{"id":"p-0133","num":"0132"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"182pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Value",{}]},{"entry":["Parameter","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["callerCredential","string","Created and authenticated by a credential service to"]},{"entry":[{},{},"validate the caller's identity"]},{"entry":["senderToken","string","Identifies the sender's payment instruction rule set in"]},{"entry":[{},{},"their account"]},{"entry":["recipientToken","string","Identifies the recipient's payment instruction rule set in"]},{"entry":[{},{},"their account"]},{"entry":["callerToken","string","Identifies the caller's payment instruction rule set in their"]},{"entry":[{},{},"account"]},{"entry":["senderFractionOfFees","number","The fraction of the fee amount that will be paid by the sender"]},{"entry":["recipientFractionOfFees","number","The fraction of the fee amount that will be paid by the"]},{"entry":[{},{},"recipient"]},{"entry":["callerFractionOfFees","number","The fraction of the fee amount that will be paid by the caller"]},{"entry":["transactionAmount","money","The amount of the payment between sender and recipient"]},{"entry":["SenderTxnReference","string","A description of the transaction that is meaningful to the"]},{"entry":[{},{},"sender - in some situations this may be optional"]},{"entry":["RecipientTxnReference","string","A description of the transaction that is meaningful to the"]},{"entry":[{},{},"recipient - in some situations this may be optional"]},{"entry":["CallerTxnReference","string","A description of the transaction that is meaningful to the"]},{"entry":[{},{},"caller - in some situations this may be optional"]},{"entry":["ServiceDescription","string","Description of the service or product being provided (for"]},{"entry":[{},{},"which payment is being made) - in some situations this"]},{"entry":[{},{},"may be optional"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Examples of context data available for tokens are as follows:",{"@attributes":{"id":"p-0135","num":"0134"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Value",{}]},{"entry":["Parameter","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["tokenTransactionCount","number","The number of transactions approved"]},{"entry":[{},{},"by this token, including the current"]},{"entry":[{},{},"transaction."]},{"entry":["tokenTransactionAmount","money","The total amount of all transactions"]},{"entry":[{},{},"approved by this token, including"]},{"entry":[{},{},"the current transaction."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"An example of using payment instruction rule sets to authorize a payment for a transaction is as follows:","In this example, the transaction includes a caller party requesting a Web service from a recipient party using an application program provided by a sender party. The caller is paying for the fees associated with the requested service that are charged by the transaction authorizer, the sender is paying for the cost of the transaction, and the transaction amount is USD $50.00. The values of the parameters passed in as part of the transaction authorization call to a third-party transaction authorizer are:\n\n","Any optional parameters are saved with the transaction, but don't affect the execution of the transaction.","Data Retrieval and Account Verification","The transaction authorizer receives the transaction authorization call from the caller, which includes tokens for the caller, recipient and sender, and retrieves data associated with the tokens. The data retrieved is the following:\n\n","The transaction authorizer verifies that the accounts for the various parties exist and are all active. If any of the accounts are inactive, then the transaction is disallowed and an error is returned. Otherwise, the transaction authorizer continues to retrieve data associated with the payment instruction rule sets:\n\n","The instruction sets are shown below for each of the token roles, and are then described.","Sender:",{"@attributes":{"id":"p-0143","num":"0156"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"# limit to $50 per transaction"]},{"entry":[{},"TransactionAmount <= \u2018USD 50\u2019;"]},{"entry":[{},"# limit token usage to 10 and $75 total, whichever comes first"]},{"entry":[{},"TokenTransactionCount <= 10;"]},{"entry":[{},"TokenTransactionAmount <= \u2018USD 75\u2019;"]},{"entry":[{},"# token expires on Jun 1, 2004"]},{"entry":[{},"TransactionDate <= \u20182004-Jun-1\u2019;"]},{"entry":[{},"# refuse to pay any fees"]},{"entry":[{},"senderFractionOfFees == 0%;"]},{"entry":[{},"# withdraw funds from the sender's default ACH account"]},{"entry":[{},"string PaymentMethod := \u2018ach\u2019;"]},{"entry":[{},"# dispute resolution: recipient must allow dispute refunds for"]},{"entry":[{},"\u200310 days or more, at 90% or more"]},{"entry":[{},"senderwinsTimeLimit >= \u201910 days\u2019;"]},{"entry":[{},"senderwinsFractionLimit >= 90%;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0144","num":"0157"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"# token expires on Oct 1, 2004"]},{"entry":[{},"TransactionDate <= \u20182004-Oct-1\u2019;"]},{"entry":[{},"# caller must pay all fees"]},{"entry":[{},"CallerFractionOfFees == 100%;"]},{"entry":[{},"# dispute resolution: allow dispute refunds for"]},{"entry":[{},"10 days or more, at 100%"]},{"entry":[{},"duration senderwinsTimeLimit := \u201910 days\u2019;"]},{"entry":[{},"number senderwinsFractionLimit := 100%;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0145","num":"0158"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"# fail if the payment method is not ACH or balance transfer"]},{"entry":[{},"PaymentMethod in ( \u2018ach\u2019, \u2018balance transfer\u2019 );"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0146","num":"0159"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"# fail if the payment method is not ACH, balance transfer, or credit card"},{"entry":"PaymentMethod in ( \u2018ach\u2019, \u2018balance transfer\u2019, \u2018credit card\u2019 );"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The transaction authorizer merges the retrieved data with the data received in the pay request message in the authorization call, and evaluates the payment instruction rule sets of the various parties.","Evaluate Payment Instruction Rule Sets","The following discusses the evaluation, showing the interaction between the various payment instruction rules. The payment instruction rule sets presented here all agree.","Sender:",{"@attributes":{"id":"p-0150","num":"0163"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"# limit to $50 per transaction"]},{"entry":[{},"TransactionAmount <= \u2018USD 50\u2019;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The sender is limiting the amount of each transaction to $50. This does not limit the total usage of the token (see next item).","Sender:",{"@attributes":{"id":"p-0152","num":"0165"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"# limit token usage to 10 uses total"]},{"entry":[{},"MyTokenUseCount <= 10;"]},{"entry":[{},"# limit token usage to $75 total"]},{"entry":[{},"MyTokenTotalAmount <= \u2018USD 75\u2019;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The sender is limiting the usage of the token to 10 uses or $75 total, whichever comes first.","Sender:",{"@attributes":{"id":"p-0154","num":"0167"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"# token expires on Jun 1, 2004"]},{"entry":[{},"TransactionDate <= \u20182004-Jun-1\u2019;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0155","num":"0168"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"# token expires on Oct 1, 2004"]},{"entry":[{},"TransactionDate <= \u20182004-Oct-1\u2019;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The sender's token can only be used until Jun. 1, 2004, while the recipient's token can be used until Oct. 1, 2004.","Sender:",{"@attributes":{"id":"p-0157","num":"0170"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"# refuse to pay any fees"]},{"entry":[{},"SenderFractionOfFees == 0%;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0158","num":"0171"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"# caller must pay all fees"]},{"entry":[{},"CallerFractionOfFees == 100%;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The sender asserts that she will not pay any fees. The recipient has a more stringent requirement, that the caller is paying all fees.","Sender:",{"@attributes":{"id":"p-0160","num":"0173"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"# withdraw funds from the sender's default ACH account"]},{"entry":[{},"PaymentMethod := \u2018ach\u2019;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0161","num":"0174"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"# fail if the payment method is not ACH or balance transfer"]},{"entry":[{},"PaymentMethod in ( \u2018ach\u2019, \u2018balance transfer\u2019 );"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0162","num":"0175"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"# fail if the payment method is not ACH, balance transfer, or credit card"},{"entry":"PaymentMethod in ( \u2018ach\u2019, \u2018balance transfer\u2019, \u2018credit card\u2019 );"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The sender is setting the payment method to be ACH, which means that funds will be withdrawn from the default ACH bank account associated with the sender's Account with the transaction authorizer. Since the caller is paying 100% of the fees, the caller makes an assertion that the payment method must be either ACH or a balance transfer, to keep her costs down. The transaction authorizer's payment instruction rule set makes sure that the PaymentMethod is set, and restricts its values.","Recipient:",{"@attributes":{"id":"p-0164","num":"0177"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"# allow dispute refunds for 10 days after the transaction date"]},{"entry":[{},"duration SenderWinsTimeLimit := \u201910 days\u2019;"]},{"entry":[{},"# allow dispute refunds at 100%"]},{"entry":[{},"number SenderWinsFractionLimit := 100%;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0165","num":"0178"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"# recipient must allow dispute refunds for 10 days or more"]},{"entry":[{},"SenderWinsTimeLimit >=\u201910 days\u2019;"]},{"entry":[{},"# recipient must allow dispute refunds at 90% or more"]},{"entry":[{},"SenderWinsRefundFraction >= 90%;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The recipient specifies a dispute resolution policy that allows the sender to receive a 100% refund for up to ten days after the transaction date. The sender refuses to pay unless the recipient specifies a dispute resolution policy that she agrees to: 90% or more refunds for at least 10 days after the transaction date. The sender and recipient are in agreement.","Execute Transaction","From the evaluation of the payment instruction rule sets, the following variables are known:\n\n","The transaction authorizer looks up the default ACH financial instrument for the sender to use as the source of funds for the primary transaction. According to the fee schedule, ACH transactions cost $0.60 for the $50 transaction (1.0%+$0.10 per transaction). The transaction authorizer also generates a Transaction ID that will be returned to the caller. Based on all this, the transaction authorizer executes the following:\n\n","The references and descriptions, along with the dispute resolution variables, are all stored in the transaction data. Account balances are updated in the course of executing the above transaction.","Pay Response Message","Since the transaction was successful, a Transaction ID is returned to the caller as part of a pay response message.",{"@attributes":{"id":"p-0173","num":"0193"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Parameter","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TransactionID","String","A reference to the transaction that can be"]},{"entry":[{},{},"supplied back to the transaction authorizer"]},{"entry":[{},{},"for queries, refunds, disputes and other"]},{"entry":[{},{},"operations."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"In some embodiments, usage instruction rule sets are used to check to see if some event is to be authorized or not, and include a set of rules (also referred to as \u201cassertion expressions\u201d or \u201cassertions\u201d) that are evaluated against context data\u2014if the rules\/assertions evaluate to true for a given set of context data, then the event is authorized. An example of a language for defining usage instruction rule sets is as follows:","ASSERTION EXAMPLES","In this example language, assertions are expressions that evaluate to true or false (i.e., are boolean expressions). Assignments can also be used to set the value of a variable. If all of the assertions in an instruction rule set evaluate true, then a transaction is allowed, and if so the values of variables as assigned (if any) may be used to direct the execution of the transaction.","The simplest payment instruction rule set consists of the following text, as it will always evaluate to true:","true;","Let's add more assertions with logical operators, some simple expressions and literals. Here's what it looks like now:",{"@attributes":{"id":"p-0178","num":"0198"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"not false or false and true;"},{"entry":"12.3 >= 7;"},{"entry":"( \u201812\/05\/2004\u2019 >= now ) != ( TransactionAmount * 2 <= \u2018USD 4.10\u2019 );"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The above payment instruction rule sets will always evaluate to true (as long as it's before Dec. 5, 2004).","Expressions in this example language are similar to those in Perl or C with respect to operator precedence. To illustrate, look at the following expression:\n\n5+5*10==55;\n","The above evaluates to true, because it is equivalent to:\n\n(5+(5*10))==100;\n","More generally, the precedence of operator evaluation is in the following order:",{"@attributes":{"id":"p-0183","num":"0203"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1)","Literals, blackboard dereferences, and expressions in parentheses ( )"]},{"entry":["2)","negate - not !"]},{"entry":["3)","times * div \/, left to right"]},{"entry":["4)","minus \u2212 plus +, left to right"]},{"entry":["5)","equals == notEquals != lessThan < greaterThan >"]},{"entry":[{},"lessThanOrEquals <= greaterThanOr Equals >=, in, notIn"]},{"entry":["6)","and &&, left to right"]},{"entry":["7)","or || , left to right"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Also like C or Perl, white space is ignored in this example language, so tabs, spaces and newlines are not significant (except within string quotes, where exact formatting is preserved).","ASSIGNMENT EXAMPLES","You can create variables and set their values by making assignment statements. An assignment statement looks like this:","type Name :=expression;","The following statement creates a variable, of money type, called MyFavoriteAmount, and sets the value to USD 7.99:","money MyFavoriteAmount :=\u2018USD 7.99\u2019;","Variables do not change value throughout the evaluation of a payment instruction rule set. There can be multiple assignment statements for a variable (even in different payment instruction rule sets), but the values all have to agree, or it will be treated as an assertion failure. Variables are stored in the blackboard, which means that you can dereference them in assertions. Variables assigned in a payment instruction rule set (or another payment instruction rule set evaluated at the same time) can be used in any expression.","CONTEXT BLACKBOARD","Doing expressions with literals is fairly useless, since they always evaluate to the same result. In practice, payment instruction rule sets are evaluated against some set of context data, which in this example language are stored in a memory area called a blackboard. In this example, a blackboard is a simple map of string keys to scalar values. The string keys typically start with a capital letter. The names are case-sensitive. The blackboard provides data that is specific to an event.","To dereference blackboard data in an expression, the reference name is simply included in an expression:\n\nTransactionAmount\/2>=\u2018USD 5.00\u2019;\n","Blackboard dereferences can be used in any expression where a scalar value could go.","Variables stored in the blackboard are either global or private. Private variables can be used only by a specific payment instruction rule set (e.g., a sender, recipient or caller), while global variables can be used in expressions by any of the payment instruction rule sets.","In this example, variables are assigned a single value which does not change. Different variables have different sources for their value. For example, some variables are assigned their value within a payment instruction rule set, some are specified by the transaction authorization system (\u201cTAS\u201d), and some are passed in by a caller in a pay request message.","The chart below indicates variables that are defined for every pay request message, along with the source of each variable's value. In addition, payment instruction rule sets can create their own variables using assignment statements. These variables are global; for example, a variable created by an assignment statement in the sender's payment instruction rule set can be used in an expression in the recipient's instruction. User-specified variable names should start with an identifying sequence of characters specific to the user to avoid colliding with TAS-defined variable names and other user-defined variables. For example, variable names defined by Bob's Surf Shack could all start with \u2018BobsSurfShack\u2019.","With a few exceptions, all global variables can either be passed in by a caller in a pay request message, or can be specified in any of the payment instruction rule sets\u2014thus, current sources shown in the chart below are a convention only. Exceptions to this include variables with values specified by TAS, and the fact that at least one token has to be passed into the incoming authorization message, and any other tokens to be used have to be reachable. For example, if the CallerToken is the only token provided in a pay request message, then the corresponding payment instruction rule set could indicate the SenderToken or the RecipientToken or both. If it only indicates the SenderToken, then the sender's payment instruction rule set could indicate the RecipientToken, and vice versa.","GLOBAL VARIABLES",{"@attributes":{"id":"p-0196","num":"0216"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Variable Name","Source","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TransactionTimestamp","specified by TAS","datetime","The date and time of the transaction"]},{"entry":["TransactionID","specified by TAS","string","The ID of the transaction"]},{"entry":["TotalFeeAmount","specified by TAS","money","The total amount of the fee paid to TAS for this"]},{"entry":[{},{},{},"transaction."]},{"entry":["SenderFractionOfFees","passed in by caller","number","The fraction of the TAS fees that the sender will pay."]},{"entry":[{},"in pay request message",{},"Value must be between 0 and 1"]},{"entry":["RecipientFractionOfFees","passed in by caller","number","The fraction of the TAS fees that the recipient will"]},{"entry":[{},"in pay request message",{},"pay, with a value between 0 and 1"]},{"entry":["CallerFractionOfFees","passed in by caller","number","The fraction of the TAS fees that the caller will pay,"]},{"entry":[{},"in pay request message",{},"with a value between 0 and 1"]},{"entry":["TransactionAmount","passed in by caller","money","The amount of the transaction"]},{"entry":[{},"in pay request message"]},{"entry":["TransactionDescription","passed in by caller","string","A human readable description of what's being purchased."]},{"entry":[{},"in pay request message",{},"Stored with the transaction and used when displaying"]},{"entry":[{},{},{},"the transaction for reporting and auditing"]},{"entry":["TransactionData","passed in by caller","string","Data provided by the caller regarding this"]},{"entry":[{},"in pay request message",{},"transaction. For example, the caller could store an"]},{"entry":[{},{},{},"XML description of the service being sold. This data"]},{"entry":[{},{},{},"is stored with the transaction but it is opaque to TAS"]},{"entry":["SenderToken","passed in by caller","string","Token referring to sender's payment instruction rule"]},{"entry":[{},"in pay request message",{},"set"]},{"entry":["RecipientToken","passed in by caller","string","Token referring to recipient's payment instruction"]},{"entry":[{},"in pay request message",{},"rule set"]},{"entry":["CallerToken","passed in by caller","string","Token referring to caller's payment instruction rule"]},{"entry":[{},"in pay request message",{},"set"]},{"entry":["PaymentMethod","specified by sender's","string","Specifies the type of financial instrument used as the"]},{"entry":[{},"payment instruction rule set",{},"source of funds, one of: ACH, credit card, account"]},{"entry":[{},{},{},"transfer"]},{"entry":["PaymentInstrument","specified by sender's","string","Specifies the reference of the financial instrument"]},{"entry":[{},"payment instruction rule set",{},"used as the source of funds"]},{"entry":["SenderWinsTimeLimit","specified by recipient's","duration","Specifies the maximum time after the"]},{"entry":[{},"payment instruction rule set",{},"TransactionTimestamp a sender can automatically"]},{"entry":[{},{},{},"obtain a refund by registering a dispute. The amount"]},{"entry":[{},{},{},"of the refund is limited by SenderWinsRefundFraction"]},{"entry":["SenderWinsRefundFraction","specified by recipient's","number","Specifies for what fraction of the TransactionAmount"]},{"entry":[{},"payment instruction rule set",{},"a sender can automatically obtain a refund by"]},{"entry":[{},{},{},"registering a dispute. The dispute must be registered"]},{"entry":[{},{},{},"within the time specified by SenderWinsTimeLimit."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The private variables listed in the chart below are provided for each payment instruction rule set such that each payment instruction rule set gets its own copy of each of these variables. For example, the data in these references are different for the sender than for the recipient. The recipient can not access the sender's values and vice versa.",{"@attributes":{"id":"p-0198","num":"0218"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Variable Name","Source","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MyTokenUseCount","specified by TAS","number","The number of transactions approved by this token,"]},{"entry":[{},{},{},"optimistically including the current transaction"]},{"entry":["MyTokenUseTotalAmount","specified by TAS","money","The total amount of all transactions approved by this"]},{"entry":[{},{},{},"token, optimistically including the current transaction"]},{"entry":["MyFeeAmount","specified by TAS","money","The amount of the fee paid by this payment"]},{"entry":[{},{},{},"instruction rule set. For example, for the caller's"]},{"entry":[{},{},{},"instruction, this is equal to CallerFractionOfFees"]},{"entry":[{},{},{},"times TotalFeeAmount"]},{"entry":["MyRole","specified by TAS","string","The role of the party for which this token is being"]},{"entry":[{},{},{},"used in the transaction. One of: sender, recipient,"]},{"entry":[{},{},{},"caller"]},{"entry":["MyTokenID","specified in payment instruction","string","a user-meaningful ID for the payment instruction rule"]},{"entry":[{},"rule set or passed in to install",{},"set"]},{"entry":[{},"payment instruction rule set"]},{"entry":[{},"message"]},{"entry":["MyTokenDescription","specified in payment instruction","string","a user-meaningful human-readable description of the"]},{"entry":[{},"rule set or passed in to install",{},"payment instruction rule set"]},{"entry":[{},"payment instruction rule set"]},{"entry":[{},"message"]},{"entry":["MyTokenData","specified in payment instruction","string","user-meaningful machine-readable data related to the"]},{"entry":[{},"rule set or passed in to install",{},"payment instruction rule set"]},{"entry":[{},"payment instruction rule set"]},{"entry":[{},"message"]},{"entry":["MyTransactionID","sender, recipient and caller","string","An ID for the transaction that is meaningful only to"]},{"entry":[{},"values each passed in by caller",{},"the sender, recipient or caller. Stored with the"]},{"entry":[{},"in pay request message",{},"transaction"]},{"entry":["MyTransactionDescription","sender, recipient and caller","string","A human readable description of what's being"]},{"entry":[{},"values each passed in by caller",{},"purchased that is meaningful only to the sender,"]},{"entry":[{},"in pay request message",{},"recipient or caller. Stored with the transaction."]},{"entry":["MyTransactionData","sender, recipient and caller","string","Data provided by the caller regarding this transaction"]},{"entry":[{},"values each passed in by caller",{},"that is meaningful only to the sender, recipient or"]},{"entry":[{},"in pay request message",{},"caller. For example, the recipient could store an XML"]},{"entry":[{},{},{},"description of the service being sold. This data is"]},{"entry":[{},{},{},"stored with the transaction but it is opaque to TAS"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Comments start with the pound sign (#) and cause the rest of the line to be ignored. For multi-line comments, put a # at the start of each line.","# this is a comment that","# spans more than one line","LANGUAGE CHARACTERISTICS","While in some embodiments the language may include temporal aspects such as looping constructs and\/or recursion, in this example there are no such temporal aspects or branching statements. Data types include boolean, number, string, datetime, duration, and money. Operators are as follows:",{"@attributes":{"id":"p-0201","num":"0221"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"==","equals: true if the left and right sides are equal"]},{"entry":[{},"!=","notEquals: true if the left and right sides are not equal"]},{"entry":[{},"<","lessThan"]},{"entry":[{},">","greaterThan"]},{"entry":[{},"<","lessThanOrEquals"]},{"entry":[{},">=","greaterThanOrEquals"]},{"entry":[{},"<=","lessThanOrEquals"]},{"entry":[{},":=","assignment: assigns the left hand side to the value of the"]},{"entry":[{},{},"right hand side"]},{"entry":[{},"+","addition"]},{"entry":[{},"\u2212","unary negate or subtraction"]},{"entry":[{},"*","multiply"]},{"entry":[{},"\/","divide"]},{"entry":[{},"&&","and"]},{"entry":[{},"\u2225","or"]},{"entry":[{},"!","not"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"BOOLEAN","true","false","NUMBER","123","0.234","5%","Any integer is allowed, up to 2\u22121. Negative values are achieved via the \u2018negate\u2019 operation. Decimal numbers are also supported, and are not stored as floating-point numbers. Numbers start with a digit, so a leading zero is used for decimal numbers between zero and one. Expressing a number as a percentage is also supported.","STRING","\u2018any text\u2019","String literals are enclosed in single quotes. Double quotes are not currently used.","DATETIME","now","\u2018YYYY-MON-DD\u2019","\u2018YYYY-MON-DD HH:MM:SS AM\u2019","The \u2018now\u2019 literal returns the current time. The quoted text that follows this pattern can be compared with. The datetime keyword works with quoted strings, not string expressions.","DURATION","\u201810 days\u2019","The duration literal specifies a period of time, and can be added to dates to form new dates. A variety of math operations are available.","\u20181 year 2 months 3 days 10 hours 30 minutes\u2019","\u2018P1Y2M3DT10H30M\u2019","The above 2 literals styles are both supported. The second one translates to 1 year, 2 months, 3 days, 10 hours, and 30 minutes. The second form of the duration literal follows the definition of the duration from the W3C XML Schema Specification. From http:\/\/www.w3.org\/TR\/xmlschema-2\/#duration:","The lexical representation for duration is the [ISO 8601] extended format PnYn MnDTnH nMnS, where nY represents the number of years, nM the number of months, nD the number of days, \u2018T\u2019 is the date\/time separator, nH the number of hours, nM the number of minutes and nS the number of seconds.","MONEY","\u2018USD 1.00\u2019","money(\u2018USD\u2019, TokenTransactionCount*0.05)","Money literals can be specified by a currency code and a number literal, or a currency code and an expression returning a number. See http:\/\/www.bsi-global.com\/iso4217currency for more information on currency codes, including a table listing all currency codes. The set of allowable currency codes is not limited to those specified by ISO 4217, but ISO 4217 currency codes will be recognized.","OPERATIONS AND BUILT-IN FUNCTIONS","In the following section, lhs and rhs stand for the left-hand-side operand and the right-hand-side operand, respectively.","NEGATEOPERATION","\u2212 rhs","negate rhs","allowed types: integer, double, duration, money","NOTOPERATION","! rhs","not rhs","allowed types: boolean","OROPERATION","lhs or rhs","lhs \u2225 rhs","allowed types: boolean","ANDOPERATION","lhs and rhs","lhs && rhs","allowed types: boolean","INOPERATION","lhs in (rhs1, rhs2, rhs3 . . . )","allowed types: all types","lhs and rhs should be the same type, except that integer and double types can be compared. The in operator is shorthand for, and exactly equivalent to, the following:","lhs==rhs1 or lhs==rhs2 or lhs==rhs3 . . . .","NOTINOPERATION","lhs notIn (rhs1, rhs2, rhs3 . . . )","allowed types: all types","lhs and rhs should be the same type, except that integer and double types can be compared. The notIn operator is shorthand for, and exactly equivalent to, the following:","lhs !=rhs1 and lhs !=rhs2 and lhs !=rsh3 . . . .","EQUALSOPERATION","lhs equals rhs","lhs==rhs","allowed types: all types","lhs and rhs should be the same type, except that integer and double types can be compared.","NOTEQUALSOPERATION","lhs notEquals rhs","lhs !=rhs","allowed types: all types","lhs and rhs should be the same type, except that integer and double types can be compared.","LESSTHANOPERATION","lhs lessThan rhs","lhs<rhs","allowed types: integer, double, money, datetime, duration","lhs and rhs should be the same type, except that integer and double types can be compared.","GREATERTHANOPERATION","lhs greaterThan rhs","lhs>rhs","allowed types: integer, double, money, datetime, duration","lhs and rhs should be the same type, except that integer and double types can be compared.","LESSTHANOREQUALSOPERATION","lhs lessThanOrEquals rhs","lhs>=rhs","allowed types: integer, double, money, datetime, duration","lhs and rhs should be the same type, except that integer and double types can be compared.","GREATERTHANOREQUALSOPERATION","lhs greaterThanOrEquals rhs","lhs>=rhs","allowed types: integer, double, money, datetime, duration","lhs and rhs should be the same type, except that integer and double types can be compared.","ADDOPERATION","lhs plus rhs","lhs+rhs","allowed types: integer, double, money, datetime, duration","Integer and double can be operated on, which will result in a double unless both operands are integers.","Operations on money require that both lhs and rhs be the money type.","A duration can be added to a duration, resulting in a duration.","A datetime can be added to a duration or a duration can be added to a datetime, resulting in a datetime.","SUBOPERATION","lhs minus rhs","lhs\u2212rhs","allowed types: integer, double, money, datetime, duration","Integer and double can be operated on, which will result in a double unless both operands are integers.","Operations on money require that both lhs and rhs be the money type.","A duration can be subtracted from a duration, resulting in a duration.","A duration can be subtracted from a datetime, a datetime must be the lhs and a duration must be the rhs, resulting in a datetime.","MULTOPERATION","lhs times rhs","lhs*rhs","allowed types: integer, double, money, duration","Integer and double can be operated on, which will result in a double unless both operands are integers.","For money, money can be multiplied by an integer or double, resulting in money.","For duration, a duration can be multiplied by an integer, resulting in a duration.","DIVOPERATION","lhs div rhs","lhs\/rhs","allowed types: integer, double, money","Integer and double can be operated on, which will result in a double unless both operands are integers.","For money, money can be divided by an integer or double, the lhs must be a money value and the rhs must be an integer or double, resulting in money.","MINFUNCTION","min(lhs, rhs)","allowed types: integer, double, money, datetime, duration","lhs and rhs should be the same type, except that integer and double types can be compared.","MAXFUNCTION","max(lhs, rhs)","allowed types: integer, double, money, datetime, duration","lhs and rhs should be the same type, except that integer and double types can be compared.","MODFUNCTION","mod(lhs, rhs)","allowed types: integer","Results in the integer remainder of dividing lhs and rhs.","CATFUNCTION","cat(lhs, rhs)","allowed types: string","Results in the combined string of lhs and rhs.","GETCURRENCYCODE","getCurrencyCode(rhs)","allowed types: money","Returns the currency code as a string.","PARSE GRAMMAR",{"@attributes":{"id":"p-0284","num":"0304"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Tokens:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"OR = \u201c||\u201d;"]},{"entry":[{},"AND = \u201c&&\u201d;"]},{"entry":[{},"NOT = \u201c!\u201d;"]},{"entry":[{},"EQUALS = \u201c==\u201d;"]},{"entry":[{},"NOT_EQUALS = \u201c!=\u201d;"]},{"entry":[{},"L_THAN = \u201c<\u201d;"]},{"entry":[{},"G_THAN = \u201c>\u201d;"]},{"entry":[{},"LT_EQ = \u201c<=\u201d;"]},{"entry":[{},"GT_EQ = \u201c>=\u201d;"]},{"entry":[{},"PLUS = \u201c+\u201d;"]},{"entry":[{},"MINUS = \u201c\u2212\u201d;"]},{"entry":[{},"ASTERIK = \u201c*\u201d;"]},{"entry":[{},"DIV = \u201c\/\u201d;"]},{"entry":[{},"ASSIGN = \u201c:=\u201d;"]},{"entry":[{},"ASSERTION;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"},{"entry":"\/\/ Parser Rules"},{"entry":"instructionSet"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": ( statement )+"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"statement"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},": ( \u201cduration\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"| \u201cmoney\u201d"]},{"entry":[{},"| \u201cdatetime\u201d"]},{"entry":[{},"| \u201cstring\u201d"]},{"entry":[{},"| \u201cnumber\u201d"]},{"entry":[{},")?"]},{"entry":[{},"BB_REFERENCE ASSIGN"]},{"entry":[{},"expression STATEMENT_END"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"| exp:expression STATEMENT_END"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/ expressions"},{"entry":"expression"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": andExp ( ( OR | \u201cor\u201d ) andExp )*"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"andExp"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002: compareExp ( ( AND |\u201cand\u201d ) compareExp )*"]},{"entry":[{},"\u2002;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"compareExp"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},": addExp"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"( ( EQUALS | \u201cequals\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"| NOT_EQUALS | \u201cnotEquals\u201d"]},{"entry":[{},"| L_THAN | \u201clessThan\u201d"]},{"entry":[{},"| G_THAN | \u201cgreaterThan\u201d"]},{"entry":[{},"| LT_EQ | \u201clessThanOrEquals\u201d"]},{"entry":[{},"| GT_EQ | \u201cgreaterThanOrEquals\u201d"]},{"entry":[{},") addExp"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"| ( \u201cin\u201d | \u201cnotIn\u201d )"]},{"entry":[{},"\u2003LPAREN expression ( COMMA expression )* RPAREN"]},{"entry":[{},")"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},";"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"addExp"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},": multExp"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"( ( PLUS | \u201cplus\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"| MINUS | \u201cminus\u201d"]},{"entry":[{},") multExp )*"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},";"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"multExp"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},": unaryExp"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"( ( ASTERIK | \u201ctimes\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"| DIV | \u201cdiv\u201d"]},{"entry":[{},") unaryExp )*"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},";"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"unaryExp"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},": ( MINUS | \u201cnegate\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"| NOT | \u201cnot\u201d"]},{"entry":[{},") scalarExp"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"| scalarExp"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"scalarExp"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": literal"]},{"entry":[{},"| function"]},{"entry":[{},"| BB_REFERENCE"]},{"entry":[{},"| LPAREN expression RPAREN"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/ functions"},{"entry":"\u2002function"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": minFunction"]},{"entry":[{},"| maxFunction"]},{"entry":[{},"| catFunction"]},{"entry":[{},"| getCurrencyCodeFunction"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"minFunction"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": \u201cmin\u201d LPAREN expression ( COMMA expression )+ RPAREN"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"maxFunction"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": \u201cmax\u201d LPAREN expression ( COMMA expression )+ RPAREN"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"catFunction"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": \u201ccat\u201d LPAREN expression ( COMMA expression )+ RPAREN"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"getCurrencyCodeFunction"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": \u201cgetcurrencycode\u201d LPAREN expression RPAREN"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/ literals"},{"entry":"literal"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": booleanLiteral"]},{"entry":[{},"| numberLiteral"]},{"entry":[{},"| dateTimeLiteral"]},{"entry":[{},"| durationLiteral"]},{"entry":[{},"| stringLiteral"]},{"entry":[{},"| moneyLiteral"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"booleanLiteral"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": \u201ctrue\u201d"]},{"entry":[{},"| \u201cfalse\u201d"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"moneyLiteral"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": \u201cmoney\u201d LPAREN QUOTED_LITERAL COMMA expression"]},{"entry":[{},"RPAREN"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"numberLiteral"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": NUMBER_LITERAL ( PERCENT )?"]},{"entry":[{},"\u2002;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"dateTimeLiteral"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": \u201cdateTime\u201d LPAREN expression RPAREN"]},{"entry":[{},"| \u201cnow\u201d"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"durationLiteral"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": \u201cduration\u201d LPAREN expression RPAREN"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"stringLiteral"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": QUOTED_LITERAL"]},{"entry":[{},";"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"LEXICAL DEFINITIONS",{"@attributes":{"id":"p-0286","num":"0306"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/\/ character classifications"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DOT",": \u2018.\u2019;"]},{"entry":["LPAREN",": \u2018(\u2019;"]},{"entry":["RPAREN",": \u2018)\u2019;"]},{"entry":["COMMA",": \u2018,\u2019;"]},{"entry":["STATEMENT_END",": \u2018;\u2019;"]},{"entry":["PERCENT",": \u2018%\u2019;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["protected QUOTE_CHAR",": \u2018\\\u2019\u2019;"]},{"entry":["protected DIGIT_CHAR",": ( \u20180\u2019..\u20189\u2019 );"]},{"entry":["protected ALPHA_CHAR",": ( \u2018a\u2019..\u2018z\u2019 | \u2018A\u2019..\u2018Z\u2019 );"]},{"entry":["protected NAME_CHAR",": ( ALPHA_CHAR | DIGIT_CHAR | \u2018_\u2019 );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"protected OPERATOR_CHAR"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": ( \u2018|\u2019 | \u2018&\u2019 | \u2018!\u2019 | \u2018<\u2019 | \u2018>\u2019 | \u2018=\u2019 | \u2018+\u2019 | \u2018\u2212\u2019 | \u2018*\u2019 | \u2018\/\u2019 | \u2018:\u2019 )"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/ skip all whitespace"},{"entry":"WHITESPACE"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},": ( \u2018 \u2019"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003| \u2018\\t\u2019"]},{"entry":[{},"\u2003| \u2018\\n\u2019"]},{"entry":[{},"\u2003| \u2018\\r\u2019"]},{"entry":[{},"\u2003)+"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/ token classifications"},{"entry":"BB_REFERENCE"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002: ALPHA_CHAR ( NAME_CHAR )*"]},{"entry":[{},"\u2002;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"NUMBER_LITERAL"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": ( DIGIT_CHAR )+ ( \u2018.\u2019 ( DIGIT_CHAR )+ )?"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"QUOTED_LITERAL"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},": QUOTE_CHAR"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"( ~( \u2018\\n\u2019 | \u2018\\\u2019\u2019 )"]},{"entry":[{},"| \u2018\\n\u2019"]},{"entry":[{},")*"]},{"entry":[{},"QUOTE_CHAR"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},";"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"OPERATOR"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},": OPERATOR_CHAR ( OPERATOR_CHAR )?"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"COMMENT"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},": \u2018#\u2019 ~( \u2018\\n\u2019 | \u2018\\r\u2019 )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"( \u2018\\n\u2019"]},{"entry":[{},"| \u2018\\r\u2019 )+"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},";"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"From the foregoing it will be appreciated that, although specific embodiments have been described herein for purposes of illustration, various modifications may be made without deviating from the spirit and scope of the invention. Accordingly, the invention is not limited except as by the appended claims and the elements recited therein. In addition, while certain aspects of the invention are presented below in certain claim forms, the inventors contemplate the various aspects of the invention in any available claim form. For example, while only some aspects of the invention may currently be recited as being embodied in a computer-readable medium, other aspects may likewise be so embodied."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIGS. 1A-1E"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIGS. 7A and 7B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 8A-8C","b":["9","9","10","10"]}]},"DETDESC":[{},{}]}
