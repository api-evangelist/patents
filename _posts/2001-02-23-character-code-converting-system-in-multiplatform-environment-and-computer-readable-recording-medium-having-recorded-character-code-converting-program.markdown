---
title: Character code converting system in multi-platform environment, and computer readable recording medium having recorded character code converting program
abstract: A character code converting system capable of lightening the burden imposed on the management of a code converting library and mapping information on the side of users and of easily and surely carrying out code conversion of character data including types of characters such as special characters and external characters between a plurality of different coding schemes. In the character code converting system, a code converting component carries out code conversion of character data, which are exchanged between processing programs operating on the respective platforms and an internal code converting module in a middleware, based on mapping information by an external code converting part, and processes the code-converted character data into a predetermined data format, which will be code-converted by the internal code converting module, by a data processing part. Thus, even if the internal code converting module in the middleware is operating, it is possible to equivalently transmit character data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06999082&OS=06999082&RS=06999082
owner: Kabushiki Kaisha Toshiba
number: 06999082
owner_city: Kawasaki
owner_country: JP
publication_date: 20010223
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Field of The Invention","The present invention relates generally to a character code converting system realized on a multi-platform environment including a plurality of platforms. More specifically, the invention relates to a character code converting system for code-converting character data exchanged between processing programs, such as applications and middlewares, each of which operates on a corresponding one of platforms, and a computer readable recording medium in which a character code converting program has been recorded.","2. Description of The Related Art","In a typical open system, such as a Web system utilizing Internet or a conventional client\/server system, a plurality of platforms having different coding schemes are mixed due to the difference in operating system or the like. In such a multi-platform environment, when a linkage between functions, such as a linkage between applications or a linkage between an application and a middleware, is carried out, it is necessary that the same character is treated as a unique character between a plurality of different coding schemes depending on the platforms, so that it is required to code-convert character data exchanged in the linkage between functions.","When an application carries out the linkage between applications via a middleware or when an application exchanges character data directly with a middleware itself, such as a data base management system (DBMS), to carry out the linkage between an application and a middleware, the character data are typically transmitted while carrying out a code conversion via a code converting module in the middleware.","In the middleware for use in such an open system as a premise, the code converting module does not often correspond to the types of characters, such as special characters (vendor-designed characters) and external characters (user-designed characters), which depend on a specific platform, and the structure in the code converting module is typically a black box.","Therefore, conventionally, for example, the transmission of special characters and external characters is individually defined by the application in a transmission source or a receiving destination to convert the special characters and external characters into predetermined character codes by means of a code converting library or the like, which is provided in each application to exchange character data via a code converting module in the middleware.","However, in the above described conventional method, since the conversion of special characters and external characters is individually carried out every application by means of the code converting library or the like, it is required to manage the code converting library and mapping information every application, so that there is a problem in that character data miss when character data are exchanged between coding schemes other than coding schemes supported by the code converting library or when mapping information varies.","It is therefore an object of the present invention to eliminate the aforementioned problems and to provide a character code converting system in a multi-platform environment, which can lighten the burden imposed on the management of a code converting library and mapping information on the side of users and which can easily and surely convert codes between a plurality of different coding schemes with respect to character data including the types of characters such as special characters and external characters, and a computer readable recording medium in which a character code converting program for use in the character code converting system has been recorded.","In order to accomplish the aforementioned and other objects, according to a first aspect of the present invention, there is provided a character code converting system in a multi-platform environment, the character code converting system being realized in a multi-platform environment which includes a plurality of platforms having different coding schemes, respectively, and carrying out a code conversion of character data, which are exchanged between a plurality of processing programs operating on the platforms, respectively, by means of an internal code converting module, the character code converting system comprising: mapping information holding means for holding mapping information indicative of a corresponding relationship between character codes in a plurality of different coding schemes; external code converting means for carrying out a code conversion of character data, which are exchanged between the processing programs and the internal code converting module, on the basis of the mapping information; and data processing means for processing character data, which have been code-converted by the external code converting means, into a predetermined data format which will be code-converted by the internal code converting module.","In the above described character code converting system, the data processing means preferably processes the character data, which have been code-converted by the external code converting means, into a format of a character function procedure using the character data as an argument. The internal code converting module is preferably capable of carrying out a code conversion in which a lower 1 byte is taken out of a character code of 2 bytes, as well as a usual code conversion between the plurality of different coding schemes, and the data processing means preferably extracts character data, which have been code-converted by the external code converting means, byte by byte, and processes the extracted character data for each byte into a format of character data of 2 bytes including the character data as a lower 1 byte.","The mapping information holding means, the external code converting means and the data processing means are preferably realized on a user computer on which the processing programs operate. The user computer is connected to a management server via a communication medium, the management server including mapping information managing means for unified-managing mapping information, and mapping information distributing means for distributing the mapping information, which is managed by the mapping information managing means, to the user computer, and the user computer including mapping information updating means for updating the mapping information, which has been held in the mapping information holding means, on the basis of the mapping information which has been distributed by the mapping information distributing means of the management server. Preferably, the character code converting system further comprises: code conversion determining means for controlling the external code converting means and the data processing means in accordance with a setting status of the code conversion in the internal code converting module, the code conversion determining means controlling the external code converting means and the data processing means so as to carry out only the code conversion using the external code converting means when the code conversion in the internal code converting module is invalidated.","According to a second aspect of the present invention, there is provided a computer readable recording medium in which a character code converting program has been recorded, the character code converting program being realized in a multi-platform environment which includes a plurality of platforms having different coding schemes, respectively, and carrying out the code conversion of character data, which are exchanged between a plurality of processing programs operating on the platforms, respectively, by means of an internal code converting module, the character code converting program executing: a procedure for causing a computer, which realizes the platforms, to carry out the code conversion of character data, which are exchanged between the processing programs and the internal code converting module, on the basis of mapping information indicative of a corresponding relationship between character codes in a plurality of different coding schemes; and a procedure for causing the computer to process character data, which have been code-converted, into a predetermined data format which will be code-converted by the internal code converting module.","According to the first and second aspects of the present invention, the code conversion of character data, which are exchanged between the respective processing programs operating on the respective platforms and the internal code converting module, is carried out on the basis of mapping information, and the code-converted character data are processed into a predetermine data format which will be code-converted by the internal code converting module. Therefore, even if the internal code converting module is operating, it is possible to equivalently transmit character data, and it is possible to easily and surely carry out code conversions between a plurality of different coding schemes depending on the platforms, so that it is possible to treat the same character as a unique character. For that reason, even if character data include types of characters such as special characters (vendor-designed characters) and external characters (user-designed characters), it is possible to easily and surely carry out code conversions between a plurality of different coding schemes without missing the types of characters. In addition, since the data processing means and the external code converting means are separated from the processing program, the reusability of logic for use in these means is enhanced, so that it is possible to lighten the burden imposed on the management of the code converting library and mapping information on the side of users.","Referring now to the accompanying drawings, the preferred embodiments of the present invention will be described below.  show a preferred embodiment of a character code converting system according to the present invention.","As shown in , a character code converting system in this preferred embodiment is realized on a multi-platform environment including platforms  and . The platforms  and  have different coding schemes. In , reference number  denotes a processing program (application) which operates on the platform  and which is designed to transmit character data to another processing program. Reference number  denotes a processing program (application or middleware body) which operates on the platform  and which is designed to receive character data transmitted from the processing program . Reference number  denotes a middleware which is used when character data are exchanged between the processing programs  and  and which includes a data linkage function between processing programs, a communication function and so forth. When the processing program  is a middleware body such as a data base management system (DBMS), reference number  corresponds to a connection function portion to the middleware body. The middleware  has an internal code converting module  which can convert codes with respect to character data exchanged between the processing programs  and . Specifically, the internal code converting module  in the middleware  is designed to hold the corresponding relationship between the character codes in the coding schemes of the platforms  and  and to prepare converted character data  for the processing program  on the basis of character data in the processing program .","As shown in , the processing program  is connected to a code converting component  to carry out processes, such as the data conversion of character data (conversion source character data ) transmitted from the processing program  and the processing of the character data to a predetermined data format. Processed data (processed character data ) processed by the code converting component  are transmitted to the middleware  via the processing program  to be code-converted by the internal code converting module  in the middleware .","The code converting component  has a code conversion determining part , a data processing part  and an external code converting part . The external code converting part  is connected to a mapping information holding part .","The mapping information holding part  is designed to hold the corresponding relationship between character codes in a plurality of different coding schemes (the corresponding relationship between code values with respect to the same character in a plurality of different coding schemes) as mapping information. The external code converting part  is designed to make reference to the mapping information holding part .","The code conversion determining part  is designed to control the external code converting part  and the data processing part  in accordance with the setting status of code conversion in the internal code converting module  in the middleware . Specifically, the code conversion determining part  is designed to receive character data and parameters indicative of the contents of conversion from the processing program by calling the application programming interface (API) of the processing program , to control the external code converting part  and the data processing part  at request on the side of the processing program . That is, when it is set so that code conversion is carried out in the internal code converting module , character data and parameters are transmitted to the data processing part . Then, under the control of the data processing part , a code conversion is carried out by the external code converting part , and a processing to a predetermined data format is carried out by the data processing part . On the other hand, when the code conversion in the internal code converting module  is invalidated, character data and parameters are transmitted to the external code converting part , and only the code conversion using the external code converting part  is carried out. The parameters transmitted from the processing program  include the presence and kind of the processing in the data processing part , in addition to information indicative of the coding schemes of the transmission source and receiving destination.","The data processing part  is called by the code conversion determining part . On the basis of the character data and parameters transmitted from the processing program , the data processing part  is designed to cause the external code converting part  to carry out a code conversion, and to process the character data, which have been code-converted by the external code converting part , into a predetermined data format for use in a code conversion in the internal code converting module  as a premise.","The external code converting part  is not only called directly by the code conversion determining part , but it is also called by the data processing part . The external code converting part  is designed to code-convert the character data, which are exchanged between the respective processing programs ,  and the internal code converting module , on the basis of the character data and parameters transmitted from the processing program . The code conversion in the external code converting part  is not only carried out on the basis of the mapping information held in the mapping information holding part , but it may also be carried out in accordance with a predetermined algorithm. Alternatively, the code conversion based on the mapping information may be combined with the code conversion based on the algorithm to carry out the code conversion in the external code converting part . When the code conversion based on the mapping information is combined with the code conversion based on the algorithm, precedence is preferably given as to which system is used for converting character codes in the overlapping range of both of the code conversions.","Referring to , an example of a network system to which the character code converting system shown in  is applied will be described below.","As shown in , the code converting component  (the code conversion determining part , the data processing part  and the external code converting part ) and the mapping information holding part , which are shown in , are realized on a user computer  on which the processing program  operates. The user computer  is connected to a management server  via communication media  such as a local area network (LAN).","The management server  is designed to unified-manage mapping information which is held in a plurality of user computers  connected thereto via the communication media . The management server  includes a mapping information managing component  for unified-managing mapping information, and a mapping information distributing component  for distributing the mapping information, which is managed by the mapping information managing component , to the user computers . The mapping information managing component  is connected to a unified-managing mapping information holding part  in which the corresponding relationship between character codes in a plurality of different coding schemes (the corresponding relationship between code values with respect to the same character in a plurality of coding schemes) are held as mapping information. The mapping information managing component  can not only define and store mapping information held in the unified-managing mapping information holding part , but it can also request to distribute and update the mapping information to the user computers  when the mapping information held in the unified-managing mapping information holding part  is updated.","On the basis of the mapping information distributed by the mapping information distributing component  of the management server , the user computers  can update the mapping information, which is held in the mapping information holding part , by means of a mapping information updating component .","With this construction, the operation of this preferred embodiment will be described below. Although  shows only the state of the data conversion in the order of the processing program , the middleware  and the processing program , the same processing can also be carried out when the data conversion is carried out in the order of the processing program , the middleware  and the processing program .","In , the processing program  transmits character data to the processing program  via the middleware .","At this time, the processing program  transmits the conversion source character data  to the code converting component . The processing program  transmits parameters indicative of the contents of the conversion (information indicative of the coding schemes of the transmission source and receiving destination, and the need for the processing in the data processing part  (and information indicative of the kind of the processing if the processing is necessary)), together with the character data.","The code converting component  carries out processes such as the data conversion of the conversion source character data  and the processing to a predetermined data format.","The processes carried out by the code converting component  are different in accordance with the kind of the middleware linking with the processing program . In accordance with the kind of the middleware, it is determined whether the code conversion of the conversion source character data  and the processing to the predetermined data format are carried out or only the code conversion is carried out. That is, when it is set so that the code conversion is carried out in the internal code converting module  in the middleware , it is not required to only carry out the code conversion in the external code converting part , but it is also required to carry out the processing to the predetermined data format in the data processing  for use in the code conversion in the internal code converting module  as a premise. On the other hand, when the internal code converting module  provided in the middleware  has been invalidated or when the internal code converting module  is not provided in the middleware , it is required to carry out only the code conversion in the external code converting part .","First, in the code conversion determining part , on the basis of the parameters transmitted from the processing program , it is determined whether it is required to carry out the processing in the data processing part .","When the code conversion is carried out in the internal code converting module , it is required to carry out the processing in the data processing part  and the code conversion in the external code converting part . In this case, the character data and parameters are transmitted to the data processing part . Then, under the control of the data processing part , on the basis of the mapping information held in the mapping information holding part , the external code converting part  is caused to code-convert the character data. Thereafter, the character data thus code-converted are processed by the data processing part  into a predetermined data format for use in the code conversion in the internal code converting module  as a premise. The converted results are transmitted to the processing program  as the processed character data .","On the other hand, the code conversion in the internal code converting module  is invalidated, the character data and parameters are transmitted to the external code converting part  to carry out only the code conversion using the external code converting part . The converted results are returned to the processing program  as the processed character data .","Thereafter, the processing program  transmits the processed character data , which are transmitted from the code converting component , to the processing program  via the middleware . At this time, when it is set so that the code conversion is carried out in the middleware , the code conversion of the processed character data  transmitted from the processing program  is carried out by the internal code converting module , and then, the converted processed character data are transmitted to the processing program  as the converted character data . On the other hand, when the internal code converting module  provided in the middleware  has been invalidated or when the internal code converting module  is not provided in the middleware , the processed character data  transmitted from the processing program  are transmitted directly to the processing program .",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 3","FIG. 1","FIG. 3"],"b":["23","21","24","22"]},"As the middleware, there is a JDBC driver  for accessing the DBMS . Character data are inserted into the DBMS  from the Java application  via the JDBC driver . When the character data are inserted into the DBMS  from the Java application , an SQL sentence (character data) issued from the Java application  is code-converted from the coding scheme (Unicode) on the side of the Java application  into the coding scheme (EUC) on the side of the DBMS  by means of the internal code converting module  built in the JDBC driver .","(Processing Example 1)","Referring to , a first processing example for character data in the preferred embodiment shown in  will be described below. In this first processing example, the data processing part  processes character data, which have been code-converted by the external code converting part , into the format of a character function procedure using the character data as an argument.","In the first processing example, it is supposed that the types of characters, such as special characters and external characters, which depend on a specific platform, are included in character data which are inserted from the Java application  into the DBMS . It is assumed that the code converting component  has held the corresponding relationship with respect to these types of characters between Unicode and EUC in the mapping information holding part  as mapping information, and can code-convert these types of characters from Unicode to EUC by means of the external code converting part . The internal code converting module  in the JDBC driver  does not correspond to these types of characters.","In an example where a character string \u201c\u201d is inserted into the DBMS  from the Java application , the flow of a processing for character data in the code converting component  will be described. Incidentally, the character string \u201c \u201d consists of four Chinese characters \u201c\u201d, \u201c\u201d, \u201c\u201d and \u201c\u201d.  shows an example of mapping information for the character string \u201c\u201d. In , the character \u201c\u201d of the character string \u201c\u201d is an external character (user-designed character). On Unicode, the character \u201c\u201d is expressed by a code value \u201c0xE000\u201d positioned at its private region, and on EUC serving as a code-converting object, the character \u201c\u201d is expressed by a code value \u201c0xF5Al\u201d positioned at the free region of EUC code set .","As shown in , first, the Java application  prepares character data \u201c\u201d inserted from the Java application  (step ).","Then, the Java application  transmits the character data \u201c\u201d to the code converting component  to request a data conversion and a processing to a data format (step ). Thus, the Java application  acquires the converted result \u201cCHR (62881) || \u201c\u201d (step ). Furthermore, \u201cCHR (XXXXX)\u201d is a character function procedure which can be recognized in the DBMS  and which express data for a single character using an argument \u201cXXXXX\u201d as a code value. Furthermore, it is assumed that \u201cXXXXX\u201d is expressed by decimal notation. For example, \u201cCHR (41377)\u201d expresses a character having a code value \u201c41377 (0xA1A1)\u201d to express a character at a point in an area of the EUC code set .","Thereafter, the Java application  assembles an SQL sentence \u201cINSERT INTO USERS VALUES (1, CHR (62881) || \u201c\u201d)\u201d on the basis of the converted result to execute the SQL sentence.","Thus, the JDBC driver  issues the SQL sentence to the DBMS  (step ). At this time, the code conversion from Unicode to EUC is carried out by the internal code converting module  in the JDBC driver . Since the external character \u201c\u201d as a matter is character data processed so as to become a character function procedure, and since all of the characters included in the character data (CHR (62881)) are expressed by 1-byte code, the external character can be transmitted as character data which can be normally recognized as EUC external characters (\u201c0xF5A1\u201d) on the side of the DBMS .","The DBMS  receives the SQL sentence \u201cINSERT INTO USERS VALUES (1, CHR (62991) || \u201c\u201d)\u201d (step ), and thereafter, inserts EUC character data \u201c\u201d into the data base (step ).","On the other hand, when the retrieved results on the side of the DBMS  are acquired by the Java application , the character data can be processed using the function procedure on the side of the DBMS . Specifically, for example, when a function (HEX (XXXXX)) restoring a decimal character string of code values exists as a function procedure on the side of the DBMS , the retrieved results are acquired by the SQL such as \u201cSELECT HEX (XXXXX) FROM USERS\u201d, and the external code converting part  of the code converting component  code-converts code values, which are indicated by the decimal character string \u201cXXXXX\u201d of the \u201cHEX (XXXXX)\u201d, from EUC to Unicode, so that it is possible to acquire character data including the types of characters such as external characters and special characters.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIGS. 6 and 7","FIG. 5","FIG. 6"],"b":["13","19","23","201","13","202","203"],"img":[{"@attributes":{"id":"CUSTOM-CHARACTER-00020","he":"3.13mm","wi":"9.14mm","file":"US06999082-20060214-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00021","he":"3.13mm","wi":"6.69mm","file":"US06999082-20060214-P00021.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00022","he":"3.13mm","wi":"2.46mm","file":"US06999082-20060214-P00022.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}]},"When it is determined at step  that the extracted character is an external character or a special character, the external code converting part  is requested for carrying out a code conversion to acquire the converted results (step ).","Thereafter, the converted EUC code values are converted into a decimal character string \u201cXXXXX\u201d (step ), and then, a character string \u201cCHR (XXXXX)\u201d using the decimal character string \u201cXXXXX\u201d as an argument is assembled (step ). The code value \u201c0xF5A1\u201d of EUC corresponding to the characters \u201c\u201d of the character data \u201c\u201d is herein converted into a decimal character string \u201c62881\u201d to be assembled as a character string \u201cCHR (62881)\u201d to be stored in the character array [] (step ).","On the other hand, when it is determined at step  that the extracted character is not an external character or a special character, the extracted character is sequentially stored in the character array [] (step ), and repeatedly stored in the character array [] until an external character or a special character is detected again. Although an external character herein appears only at the beginning of the character string, the element of the character string is counted up to be stored in the subsequent character array [] if an external character or a special character is detected again.","When the processing at steps  to  is carried out with respect to all of characters in the character data \u201c\u201d (step ), \u201cCHR (62881)\u201d is finally stored in the character array [], and \u201c\u201d is stored in the character array [].","Finally, the character strings in each array element divided into an element of a character string included in a character function procedure indicative of external characters or specific characters and an element of other character strings are combined via combining characters (step ), and the combined character string \u201cCHR (62881) || \u201c\u201d is returned (step ). The state of combination of the character array [] with the character array [] is shown in .","(Processing Example 2)","Referring to , a second processing example for character data in the preferred embodiment shown in  will be described below. In this second processing example, the data processing part  extracts character data, byte by byte, which have been code-converted by the external code converting part , and processes the extracted character data for each byte into the format of character data for each two bytes which use the character data for each byte as a lower byte.","Also in the second processing example, it is supposed that the types of characters, such as special characters and external characters, which depend on a specific platform, are included in character data which are inserted from the Java application  into the DBMS . It is assumed that the code converting component  has held the corresponding relationship with respect to these types of characters between Unicode and EUC in the mapping information holding part  as mapping information, and can code-convert these types of characters from Unicode to EUC by means of the external code converting part . Although the internal code converting module  in the JDBC driver  does not correspond to these types of characters, the internal code converting module  can select another code conversion (ISO88591 which is a 1-byte encoding system), other than the code conversion between Unicode and EUC. The ISO88591 which is the 1-byte encoding system is designed to take only lower one byte out of character code of  bytes, and can take the portion of code values \u201c0x00\u201d through \u201c0XFF\u201d of lower bytes out of the individual character code included in the character data of Unicode.","As shown in , first, the Java application  prepares character data \u201c\u201d inserted from the Java application  (step ).","Then, the Java application  assembles an SQL sentence \u201cINSERT INTO USERS VALUES (1, \u201c\u201d)\u201d on the basis of the character data \u201c\u201d (step ). Thereafter, the Java application  requests to the code converting component  the data conversion of the whole SQL sentence and the processing of the whole SQL sentence to a predetermined data format (step ). Thus, the Java application  acquires the converted results (step ). The acquired converted results are Unicode character data of 2 bytes which are obtained by extracting a code value, which has been converted into EUC being the coding scheme on the side of the DBMS , byte by byte to add \u201c0x00\u201d to the head portion of the extracted code value.","Thereafter, the Java application  assigns ISO88591, which is a 1-byte encoding system, to the internal code converting module  in the JDBC driver  to execute the SQL sentence (step ).","Thus, the JDBC driver  issues the SQL sentence to the DBMS  (step ). At this time, the internal code converting module  in the JDBC driver  removes the code value \u201c0x00\u201d of the head  byte of the individual character code included in the Unicode character data, and the portions of the code values \u201c0x00\u201d through \u201cOXFF\u201d of lower bytes (EUC code values) are taken out as they are. Therefore, even if the internal code converting module  in the JDBC driver  does not correspond to the types of characters such as external characters and special characters, the external characters \u201c\u201d as a matter can be transmitted as character data which can be normally recognized as EUC external characters (0XF5A1).","In the DBMS , after the SQL sentence \u201cINSERT INTO USERS VALUES (1, \u201c\u201d)\u201d is received (step ), EUC character data \u201c\u201d are inserted into the database (step ).","When the Java application  acquires the retrieved results on the side of the DBMS , the internal code converting module  in the JDBC driver  extracts the EUC code values byte by byte under ISO88591 which is the 1-byte encoding system, and returns the Unicode character data to the head portion of which \u201c0x00\u201d has been added. Therefore, if the data processing part  of the code converting component  removes the head portion \u201c0x00\u201d of the character code of 2 bytes included in the Unicode character data to prepare a byte array of 1 byte and if the external code converting part  code-converts the byte array into Unicode, it is possible to acquire character data including the types of characters such as external characters and special characters.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIGS. 9 and 10","FIG. 8","FIG. 9","FIG. 10A"],"b":["13","10","23","12","401","13","14","402","403"],"img":[{"@attributes":{"id":"CUSTOM-CHARACTER-00034","he":"3.13mm","wi":"9.14mm","file":"US06999082-20060214-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00035","he":"3.13mm","wi":"9.14mm","file":"US06999082-20060214-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00036","he":"3.13mm","wi":"9.14mm","file":"US06999082-20060214-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}]},"Thereafter, the converted EUC code values are extracted byte by byte to add \u201c0x00\u201d to their head portions to prepare Unicode character data of 2 bytes (step ).","The Unicode character data thus prepared are stored in a character array (step ).","Finally, when the processing at steps  to  is carried out with respect to all of characters in the character data \u201c\u201d,  the character data are stored in the character array as shown in , and the processed character array is returned (step ). As shown in , for example, the EUC code value \u201c0xF5A1\u201d is stored in the character arrays [] and [] as Unicode character codes \u201c0x00F5\u201d and \u201c0x00A1\u201d, respectively, and the processed character arrays are returned.","In this second processing example, it is presupposed that the internal code converging module  in the JDBC driver  can assign ISO88591 which is the 1-byte encoding system. However, as compared with the above described first processing example wherein the character function procedure is incorporated into the SQL sentence, there are advantages in that it is not required to determine the presence of external characters and special characters and that it is required to carry out any code conversions depending on the specification on the side of the DBMS , such as character function procedures.","As described above, according to this preferred embodiment, the code conversion of character data, which are exchanged between the respective processing programs ,  operating on the respective platforms ,  and the internal code converting module  in the middleware , is carried out on the basis of mapping information, and the code-converted character data are processed into a predetermined data format which will be code-converted by the internal code converting module . Therefore, even if the internal code converting module  in the middleware  is operating, it is possible to equivalently transmit character data, and it is possible to easily and surely carry out code conversions between a plurality of different coding schemes depending on the platforms  and , so that it is possible to treat the same character as a unique character. For that reason, even if character data include types of characters such as special characters (vendor-designed characters) and external characters (user-designed characters), it is possible to easily and surely carry out code conversions between a plurality of different coding schemes without missing the types of characters. In addition, since the code converting component  (the data processing part  and the external code converting part ) is separated from the processing program , the reusability of logic for use in the code converting component  is enhanced, so that it is possible to lighten the burden imposed on the management of the code converting library and mapping information on the side of users.","According to this preferred embodiment, the mapping information is unified-managed by the mapping information managing component  of the management server  and distributed to the user computer  by the mapping information distributing component , and finally, the mapping information having been held in the mapping information holding part  is updated by the mapping information updating component  on the side of the user computer . Therefore, the mapping information can be unified between the plurality of user computers  connected to each other via the communication media , so that the corresponding relationship between the code values with respect to the same character in the plurality of coding schemes can be unique on all of the user computers .","In the above described preferred embodiment, each of the code converting component , the mapping information component , the mapping information distributing component  and the mapping information managing component  can be realized as program components operating on the user computers . A character code converting program including such program components is recorded in various recording media, and read out by the user computers  to carry out the above described processing.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 11","FIG. 11"],"b":["2","2","41","42","43","44","44","46","51","47","52","41"],"i":["a ","b "]},"The recording media for use in the preferred embodiment include not only floppy disks and CD-ROMs, but also magnetic disks, hard disks, other optical disks (CD-R, DVD, etc.), optical magnetic disks (e.g., MO) and semiconductor memories. The recording media may have any recording forms if they can record programs and can be read by computers. The recording media also include data transmission media, such as carrier waves for transmitting data on a network. Moreover, the recording media should not be limited to recording media independent of computers, but they include recording media in which a program transmitted via LAN, Internet or the like has been downloaded to be stored or temporarily stored. The present invention should not be limited to the use of a single recording medium, but the concept of the recording media according to the present invention includes a case where the processing in the preferred embodiment is carried out by means of a plurality of recording media.","According to the present invention, a part of the processing carried out in this preferred embodiment can be realized by another program (a middleware or the like), such as an operating system (OS) operating on a computer, a data base management software or a network software, on the basis of the instruction of a character code converting program installed in the computer from the recording medium.","As described above, according to the present invention, it is possible to lighten the burden imposed on the management of the code converting library and mapping information on the side of users, and it is possible to easily and surely carry out the code conversion of character data including types of characters, such as special characters and external characters, between a plurality of coding schemes.","While the present invention has been disclosed in terms of the preferred embodiment in order to facilitate better understanding thereof, it should be appreciated that the invention can be embodied in various ways without departing from the principle of the invention. Therefore, the invention should be understood to include all possible embodiments and modification to the shown embodiments which can be embodied without departing from the principle of the invention as set forth in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention will be understood more fully from the detailed description given herebelow and from the accompanying drawings of the preferred embodiments of the invention. However, the drawings are not intended to imply limitation of the invention to a specific embodiment, but are for explanation and understanding only.","In the drawings:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 7","FIG. 6"],"b":"209"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 8","FIG. 3"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 9","FIG. 8"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIGS. 10A and 10B","FIG. 9"],"b":["403","408"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 11","FIG. 1"]}]},"DETDESC":[{},{}]}
