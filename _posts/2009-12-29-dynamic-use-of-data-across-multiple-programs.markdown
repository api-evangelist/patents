---
title: Dynamic use of data across multiple programs
abstract: A method and computer program product for dynamic program integration is described. The method may comprise allowing, with at least one of a client electronic device and a server computer, selection of content in an original program. The method may further comprise applying a command sequence to the content. The method may also comprise copying the content on to a clipboard. Moreover, the method may activate a new program configured to handle the content. Additionally, the method may transfer the content from the clipboard to the new program and receive the content in the new program.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09021507&OS=09021507&RS=09021507
owner: International Business Machines Corporation
number: 09021507
owner_city: Armonk
owner_country: US
publication_date: 20091229
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This disclosure relates to dynamic program integration and, more particularly, to dynamic program integration in a desktop.","The same content may be displayed or used by different programs. For example, a person's name may be displayed in a simple text rendering program (e.g., Notepad\u2122) and also used in a live instant message program. Similarly, an address may be displayed in a simple text rendering program and also used in a map application (e.g., Google Maps\u2122). Accordingly, there may be a need for a dynamic program integration application which may allow the user to use the content in another application.","In a first embodiment, a method may comprise allowing, with at least one of a client electronic device and a server computer, selection of content in an original program. The method may further comprise applying, with at least one of the client electronic device and the server computer, a command sequence to the content. The method may also comprise copying, with at least one of the client electronic device and the server computer, the content on to a clipboard. Furthermore, the method may comprise activating, with at least one of the client electronic device and the server computer, a new program configured to handle the content. Moreover, the method may comprise transferring, with at least one of the client electronic device and the server computer, the content from the clipboard to the new program. Additionally, the method may comprise receiving, with at least one of the client electronic device and the server computer, the content in the new program.","One or more of the following features may be included. The method may associate the new program with the content on the clipboard based upon, at least in part, a registry of content types. The method may also execute at least a portion of the new program while incorporating, at least in part, the content. The method may further allow selection of, from a plurality of programs, the new program configured to handle the content. In some implementations, the command sequence may correspond to the program configured to handle the content. Further, the command sequence may be a key stroke sequence.","In one implementation, the method may associate the new program with the content on the clipboard based upon, at least in part, a registry of keystroke combinations. The method may further detect when new content is added to the clipboard. The method may also pass the content through the new program as a parameter. Additionally, the method may call a REST API on the program and pass the content through the REST API as a parameter.","In another embodiment, a computer program product may reside on a computer-readable storage medium and may have a plurality of instructions stored on it. When executed by a processor, the instructions may cause the processor to perform operations comprising allowing, with at least one of a client electronic device and a server computer, selection of content in an original program. The operations may further comprise applying, with at least one of the client electronic device and the server computer, a command sequence to the content. The operations may also comprise copying, with at least one of the client electronic device and the server computer, the content on to a clipboard. Furthermore, the operations may comprise activating, with at least one of the client electronic device and the server computer, a new program configured to handle the content. Moreover, the operations may comprise transferring, with at least one of the client electronic device and the server computer, the content from the clipboard to the new program. Additionally, the operations may comprise receiving, with at least one of the client electronic device and the server computer, the content in the new program.","One or more of the following features may be included. The operations may associate the new program with the content on the clipboard based upon, at least in part, a registry of content types. The operations may also execute at least a portion of the new program while incorporating, at least in part, the content. The operations may further allow selection of, from a plurality of programs, the new program configured to handle the content. In some implementations, the command sequence may correspond to the program configured to handle the content. Further, the command sequence may be a key stroke sequence.","In some implementations, the operations may associate the new program with the content on the clipboard based upon, at least in part, a registry of keystroke combinations. The operations may further detect when new content is added to the clipboard. The operations may also pass the content through the new program as a parameter. Additionally, the operations may call a REST API on the program and pass the content through the REST API as a parameter.","The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features and advantages will become apparent from the description, the drawings, and the claims.","Referring to , there is shown a dynamic program integration process . As will be discussed below, dynamic program integration process  may allow , with at least one of a client electronic device and a server computer, selection of content in an original program. A command sequence may be applied  with at least one of the client electronic device and the server computer.","The dynamic program integration (DPI) process may be a server-side process (e.g., server-side DPI process ), a client-side process (e.g., client-side DPI process , client-side DPI process , client-side DPI process , or client-side DPI process ), or a hybrid server-side\/client-side process (e.g., the combination of server-side DPI process  and one or more of client-side DPI processes , , , ).","Server-side DPI process  may reside on and may be executed by server computer , which may be connected to network  (e.g., the Internet or a local area network). Examples of server computer  may include, but are not limited to: a personal computer, a server computer, a series of server computers, a mini computer, and\/or a mainframe computer. Server computer  may be a web server (or a series of servers) running a network operating system, examples of which may include but are not limited to: Microsoft Windows XP Server\u2122; Novell Netware\u2122; or Redhat Linux\u2122, for example.","The instruction sets and subroutines of server-side DPI process , which may be stored on storage device  coupled to server computer , may be executed by one or more processors (not shown) and one or more memory architectures (not shown) incorporated into server computer . Storage device  may include but is not limited to: a hard disk drive; a tape drive; an optical drive; a RAID array; a random access memory (RAM); and a read-only memory (ROM).","Server computer  may execute a web server application, examples of which may include but are not limited to: Microsoft IIS\u2122, Novell Webserver\u2122, or Apache Webserver\u2122, that allows for access to server computer  (via network ) using one or more protocols, examples of which may include but are not limited to HTTP (i.e., HyperText Transfer Protocol), SIP (i.e., session initiation protocol), and the Lotus Sametime\u2122 VP protocol. Network  may be connected to one or more secondary networks (e.g., network ), examples of which may include but are not limited to: a local area network; a wide area network; or an intranet, for example.","Client-side DPI processes , , ,  may reside on and may be executed by client electronic devices , , , and\/or  (respectively), examples of which may include but are not limited to personal computer , laptop computer , a data-enabled mobile telephone , notebook computer , personal digital assistant (not shown), smart phone (not shown) and a dedicated network device (not shown), for example. Client electronic devices , , ,  may each be coupled to network  and\/or network  and may each execute an operating system, examples of which may include but are not limited to Microsoft Windows\u2122, Microsoft Windows CE\u2122, Redhat Linux\u2122, or a custom operating system.","The instruction sets and subroutines of client-side DPI processes , , , , which may be stored on storage devices , , ,  (respectively) coupled to client electronic devices , , ,  (respectively), may be executed by one or more processors (not shown) and one or more memory architectures (not shown) incorporated into client electronic devices , , ,  (respectively). Storage devices , , ,  may include but are not limited to: hard disk drives; tape drives; optical drives; RAID arrays; random access memories (RAM); read-only memories (ROM); compact flash (CF) storage devices; secure digital (SD) storage devices; and memory stick storage devices.","Client-side DPI processes , , ,  and\/or server-side DPI process  may be processes that run within (i.e., are part of) an operating system such as those mentioned above. Alternatively, client-side DPI processes , , ,  and\/or server-side DPI process  may be stand-alone applications that work in conjunction other installed programs or applications. One or more of client-side DPI processes , , ,  and server-side DPI process  may interface with each other (via network  and\/or network ).","Users , , ,  may access server-side DPI process  directly through the device on which the client-side DPI process (e.g., client-side DPI processes , , , ) is executed, namely client electronic devices , , , , for example. Users , , ,  may access server-side DPI process  directly through network  and\/or through secondary network . Further, server computer  (i.e., the computer that executes server-side DPI process ) may be connected to network  through secondary network , as illustrated with phantom link line .","The various client electronic devices may be directly or indirectly coupled to network  (or network ). For example, personal computer  is shown directly coupled to network  via a hardwired network connection. Further, notebook computer  is shown directly coupled to network  via a hardwired network connection. Laptop computer  is shown wirelessly coupled to network  via wireless communication channel  established between laptop computer  and wireless access point (i.e., WAP) , which is shown directly coupled to network . WAP  may be, for example, an IEEE 802.11a, 802.11b, 802.11g, Wi-Fi, and\/or Bluetooth device that is capable of establishing wireless communication channel  between laptop computer  and WAP . Data-enabled mobile telephone  is shown wirelessly coupled to network  via wireless communication channel  established between data-enabled mobile telephone  and cellular network\/bridge , which is shown directly coupled to network .","As is known in the art, all of the IEEE 802.11x specifications may use Ethernet protocol and carrier sense multiple access with collision avoidance (i.e., CSMA\/CA) for path sharing. The various 802.11x specifications may use phase-shift keying (i.e., PSK) modulation or complementary code keying (i.e., CCK) modulation, for example. As is known in the art, Bluetooth is a telecommunications industry specification that allows e.g., mobile phones, computers, and personal digital assistants to be interconnected using a short-range wireless connection.","The Dynamic Program Integration Process","Client-side DPI process  may be incorporated into server-side DPI process  and may be executed within an operating system such as those mentioned above. However, this is not intended to be a limitation of this disclosure, as other configurations are possible (e.g., stand-alone, client-side DPI processes and\/or stand-alone server-side DPI processes). DPI process  may be a stand alone application configured to work in conjunction with an operating system, such as those mentioned above. While client-side DPI process  is discussed below for illustrative purposes, the discussion below is equally applicable to server-side DPI process .","While using a computer, a user may see content in an application such as a simple text rendering program, and may wish to use the content with another program. Further, the user may wish to do so without having to command, each time, the computer to open the other program, enter the content, and execute the other program with the content. Accordingly, the user may need a dynamic program integration application which may allow the user to use the content in another application, without having to command, each time, the computer to open the other program, enter the content, and execute the other program with the content.","Referring now to , DPI process  may allow , with at least one of a client electronic device (e.g., client electronic devices , , , ) and a server computer (e.g., server computer ), selection of content (e.g., content ) in an original program (e.g., original application ). While content  is shown as a dollar amount in , content  may be any type of content. For example, content  may be any text, including letters, numbers, words (e.g., a name and\/or address), etc. shown on a display of a client electronic device and\/or server computer, or any combination thereof. Further, content  maybe an image, picture, file or any type of object used in a client electronic device and\/or server computer. Selection of content  may occur in the original program itself. Also, while original program  is shown as an online account program in , original program  may be any program or application used in a client electronic device and\/or server computer, including but not limited to word processors, spreadsheets, internet applications, program development tools, email applications, instant messengers, presentation applications, etc. DPI process  may allow selection of content with any input device used with client electronic devices and\/or server computers, including but not limited to mice, keyboards, touch screens, trackballs, etc.","Further, DPI process  may apply , with at least one of the client electronic device (e.g., client electronic devices , , , ) and the server computer (e.g., server computer ), a command sequence (e.g., command sequence ) to the content (e.g., content ). Command sequence  may be, for example, \u201cCtrl e+x\u201d as shown in . Command sequence  may be initiated by a user, for example, by holding down the \u201cCtrl\u201d and \u201ce\u201d and \u201cx\u201d keys on a standard keyboard. While command sequence  is shown as \u201cCtrl e+x\u201d, any letters, numbers, and other keys and\/or symbols on a keyboard may be a command sequence, either independently or in combination. Further, while command sequence  is discussed above as being initiated by keys on a keyboard, command sequence  may be initiated using any of the other input devices discussed above. For example, command sequence  may be initiated by pressing one or more buttons on a mouse. In one embodiment, command sequence  may be initiated by right-clicking on a mouse while content  is selected, and then selecting command sequence  from a plurality of command sequences appearing in a pop-up menu rendered by DPI process .","DPI process  may copy , with at least one of the client electronic device (e.g., client electronic devices , , , ) and the server computer (e.g., server computer ), the content (e.g., content ) on to a clipboard (e.g., clipboard ). While clipboard  is shown in  as being a \u201cWindows Clipboard\u201d, clipboard  may be a clipboard in any operating system such as those discussed above. Further, clipboard  may be an add-on or plug-in application for an operating system. For example, clipboard  may be an add-on or plug-in application for the operating system of a portable device such as a smart phone or data enabled mobile telephone. DPI process  may then activate , with at least one of the client electronic device (e.g., client electronic devices , , , ) and the server computer (e.g., server computer ), a new program (e.g., new program ) configured to handle the content (e.g., content ).","Prior to activating the new program, DPI process  may go through a number of operations in its various embodiments and implementations. For example, in one implementation, DPI process  may detect  when new content (e.g., content ) is added to the clipboard. In another implementation, DPI process  may associate  the new program (e.g., new program ) with the content (e.g., content ) on clipboard  based upon, at least in part, a registry and\/or system directory of content types and\/or objects (e.g., registry ). The registry of content types may include, but is not limited to names, addresses, screen names, email addresses, dollar amounts, pictures, images, video, audio, file extensions, file types, functions, parameters, account numbers, and\/or telephone numbers. DPI process  may associate  the new program with the content type based upon, at least in part, the type of content the program is configured to handle. For example, and as shown in , if content  is a dollar amount, DPI process  may associate dollar amount content types with an expense report program and\/or application (e.g., expense report application ).","In one implementation DPI process  may allow  selection of, from a plurality of programs, the new program (e.g., new program ) configured to handle the content. DPI process  may display a plurality of programs associated with the content type of content  and allow the user to select the new program that is to handle the content. DPI process  may display the plurality of programs in a pop-up menu and\/or popup graphical user interface (GUI). Further, as discussed above, command sequence  may be initiated by right-clicking on a mouse while the content (e.g., content ) is selected, and selecting command sequence  from a plurality of command sequences appearing in a pop-up menu rendered by DPI process . In one implementation, right-clicking on a mouse while the content is selected may render a pop-up window listing a plurality of new programs which may handle the content. Upon selection of one of the new programs, DPI process  may activate the selected new program, which may in turn handle the content, as described below.","In another implementation, DPI process  may associate  the new program with the content (e.g., content ) on the clipboard (e.g., clipboard ) based upon, at least in part, a registry of keystroke combinations (e.g., registry ). For example, if command sequence  is \u201cCtrl e+x\u201d, as shown in , registry  may indicate to DPI process  that expense report application  is to handle content . Registry  may also include other commands, such as pressing one or more mouse buttons, which may also indicate to DPI process  which application is to handle content . In other words, expense report application  may be registered to activate when \u201cCtrl e+x\u201d is pushed from the keyboard. Registry  may be configurable such that a user can enter a number of command sequences and\/or keystroke combinations to indicate one or more applications to handle various content types. DPI process  may use a combination of the operations described above to decide which new program is to handle the selected content (e.g., content ).","Consider for illustrative purposes the functionality in Windows Explorer\u2122 where a user may open a file by double-clicking on the file with a mouse. Windows\u2122 may call a program to open a file after the user double-clicks on the file because Windows\u2122 may include a registry of file extensions to figure out which program to call to open the file. As discussed above, DPI process  may include a registry of objects to figure out which new program to activate to handle selected content (e.g., content ). Further, DPI process  may use regular expressions technology (REGEX) to associate the new program with the type of object detected on the clipboard (e.g., name, image, link, address). A REGEX may be a piece of software, code, or a program, which may serve as a parser and\/or examine strings of text (e.g., characters, words, or patterns of characters) to identify parts of it.","DPI process  may associate a number of new programs with the selected content. These new programs may be any programs installed on the client electronic device and\/or server computer, or accessible by the client electronic device and\/or server computer. DPI process  may also recognize participating software, which may be software, applications, or programs configured to operate with DPI process . Participating software may register with DPI process  to handle specific object types (e.g., content types) such as those described herein. DPI process  may provide a method which may be called to handle the content type (e.g., a person's name). As discussed below, DPI process  may provide a REST API which may take the person's name as a parameter.","As mentioned above, DPI process  may activate , with at least one of the client electronic device (e.g., client electronic devices , , , ) and the server computer (e.g., server computer ), a new program (e.g., new program ) configured to handle the content (e.g., content ). While selection of the new program from a plurality of programs listed in a popup menu or GUI is mentioned above, DPI process  may activate the new program without such selection of the new program. For example, and as discussed above, DPI process  may use registry  and\/or registry  to indicate which new program it should activate, and may activate the program without selection from a plurality of programs listed in a popup menu or GUI. Activating the new program may include opening the new program, toggling to the new program if it is already open, and\/or installing the new program.","Moreover, DPI process  may transfer , with at least one of the client electronic device (e.g., client electronic devices , , , ) and the server computer (e.g., server computer ), the content (e.g., content ) from the clipboard (e.g., clipboard ) to the new program (e.g., new program ). DPI process  may also receive , with at least one of the client electronic device (e.g., client electronic devices , , , ) and the server computer (e.g., server computer ), the content (e.g., content ) in the new program (e.g., new program ). For example, DPI process  may take content  from clipboard  and place (e.g., paste, enter, etc.) content  into expense report application . Content  may be placed in a field of expense report application , may be passed through a function and\/or subroutine of expense report application  as a parameter, or may be otherwise made available to expense report . In another example, if content  is a physical address, DPI process  may place content  in an \u201caddress\u201d and\/or \u201clocation\u201d field in a map application (e.g., Google Maps\u2122). Further, if content  were a person's name, or a screen name, DPI process  may place content  in a field of an instant messaging application designating who an instant message will be sent to.","In one embodiment, DPI process  may call  a REST API on the new program. A REST API may be a web service which may be implemented using HTTP. DPI process  may pass  the content (e.g., content ) through the REST API as a parameter. A resource may be referenced in a uniform resource identifier (URI). The REST API may allow for sending an HTTP GET or POST to call exposed methods, and may return, for example, an XML document. Calling a REST API may require an API key, which may be listed in a registry or be otherwise accessible by DPI process .","DPI process  may also execute  at least a portion of the program (e.g., new program ) while incorporating, at least in part, the content (e.g., content ). Continuing with the above examples, and as shown in , DPI process  may command expense report application  to execute (e.g., run, create) an expense report using content . If content  is a physical address, DPI process  may execute (e.g., run, search) Google Maps\u2122 with the physical address as the location. Further, if content  were a person's name, or a screen name, DPI process  execute (e.g., open, send) an instant messaging application with the person's name and\/or screen name designated as the recipient of the instant message. It should be noted that DPI process  may execute  at least a portion of new program  while incorporating, at least in part, content , without further input from the user. For example, and continuing with the Google Maps\u2122 example from above, if content  is a physical address, DPI process  may place content  in an \u201caddress\u201d and\/or \u201clocation\u201d field in the Google Maps\u2122 web application. Usually, rendering a map showing the physical address would require pressing the \u201csearch maps\u201d button in the Google Maps\u2122 web application. However, DPI process  may execute the Google Maps\u2122 search of the physical address automatically, without the user pressing the \u201csearch maps\u201d button.","It should also be noted that use of DPI process  as part of an operating system and\/or as a stand alone application working in conjunction with an operating system may not require alteration of either the original program or the new program. In other words, DPI process  may conduct any of the operations and\/or methods discussed herein without having to alter the code of either the original program or the new program (e.g., the participating software). It should also be noted that DPI process  may conduct any of the operations and\/or methods discussed herein without requiring the content to be associated with a link and\/or hyperlink embedded in the content. In this way, DPI process  may make any \u201cstatic\u201d text in a program and\/or application \u201clive\u201d for use in a new program, and may thereby integrate a number of applications without requiring those applications to be altered.","Referring now to , and in one implementation, for example, the user may be operating in the active window and may select  an object. The user may then execute  a Ctrl key sequence. DPI process  may include a keyboard listener to pick up this Ctrl key sequence, and may then execute  a \u201cCtrl+C\u201d for an active window. This may cause the user-selected object to be copied (i.e., sent)  to a system clipboard. DPI process , which may include a clipboard change event listener, may evaluate  the object on the clipboard using object type and\/or regular expression (REGEX). DPI process  may then use a system directory to figure out which program may be registered to handle the object on the clipboard, and may launch the program to handle the user request. The system directory may provide  a program registered for a key and object on the clipboard. DPI process  may launch  the program, which may become the active window. Depending how the program may be registered in the system directory, DPI process  may pass the object to the program. For example, a REST API could be called on the program with the object passed as a parameter.","As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, apparatus, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer-readable medium(s) having computer-readable program code embodied thereon.","Any combination of one or more computer-readable medium(s) may be utilized. The computer-readable medium may be a computer-readable signal medium or a computer-readable storage medium. A computer-readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer-readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer-readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer-readable signal medium may include a propagated data signal with computer-readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer-readable signal medium may be any computer-readable medium that is not a computer-readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer-readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer (i.e., a client electronic device), partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server (i.e., a server computer). In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the present invention may be described with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and\/or computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer-readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer-readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The flowchart and block diagrams in the figures may illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. Further, one or more blocks shown in the block diagrams and\/or flowchart illustration may not be performed in some implementations or may not be required in some implementations. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","A number of embodiments and implementations have been described. Nevertheless, it will be understood that various modifications may be made. Accordingly, other embodiments and implementations are within the scope of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
