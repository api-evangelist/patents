---
title: Method and system enabling both legacy and new applications to access an InfiniBand fabric via a socket API
abstract: An intermediate layer referred to as InfiniSock that enables socket-based, legacy applications to access an InfiniBand® fabric, while also enabling new applications designed to take advantage of the InfiniBand® Architecture to function within a socket API environment. The InfiniSock layer supports the traditional AF_INET address family and also includes a novel address family referred to as AF_IB to support the InfiniBand® Architecture.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06895590&OS=06895590&RS=06895590
owner: Intel Corporation
number: 06895590
owner_city: Santa Clara
owner_country: US
publication_date: 20010926
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The invention relates generally to networking and, more specifically, to a method and apparatus for enabling legacy applications to access an InfiniBand\u00ae network via a socket API while also enabling newer applications to take advantage of the features of the InfiniBand\u00ae Architecture.","Computer networks typically utilize a TCP\/IP (Transmission Control Protocol\/Internet Protocol) protocol stack or equivalent protocol to provide addressing, as well as to provide error control and flow control. See, e.g., Internet Engineering Task Force Request For Comment (IETF RFC) 791, Internet Protocol, and IETF RFC 793, Transmission Control Protocol. The IP protocol will deliver a packet independently of all other packets; however, the IP protocol does not guarantee delivery of a packet. Among other things, the TCP protocol is utilized to provide guaranteed delivery of a packet. The TCP protocol performs addressing and also provides both error control and flow control. Because the IP protocol does not, by itself, guarantee delivery, thereby necessitating the implementation of a separate protocol (e.g., TCP) for reliable data transfer, there is increased overhead associated with TCP\/IP software stack processing. Thus, the TCP\/IP protocol stack is a significant source of delay in computer networks, resulting in increased packet latency.","For a web server, or server cluster, hosting an Internet site, the packet latency associated with the TCP\/IP stack is particularly troublesome, especially for those Internet sites providing business services (e.g., sales, auctions, brokerage services, etc.). TCP\/IP stack processing can lead to delays in communications between a web server and a client, as well as to delays in inter-processor communications amongst a group of servers in a cluster. Web servers and server clusters are becoming one of the largest sources of delay in Internet communications\u2014with most of the server latency being attributed to TCP\/IP stack processing\u2014making the web server (or server cluster) the primary bottleneck in Internet transactions. Client-server communication delays resulting from such packet latency can lead to poor site performance (e.g., slow response time) and low availability, and a lack of client access may lead to frustrated customers and\/or lost revenue.","One technology that has emerged in recent years to overcome the problems associated with TCP\/IP stack processing delays in server clusters is the InfiniBand\u00ae Architecture (IBA). See 1, Release 1.0.a, June 2001, and 2, Release 1.0.a, June 2001. The InfiniBand\u00ae specifications describe an interconnect technology for interconnecting nodes\u2014e.g., processor nodes and I\/O (input\/output) nodes\u2014to form a system area network. IBA is designed around a point-to-point, switched I\/O fabric. Further, IBA defines hardware transport protocols that support reliable messaging as well as memory manipulation semantics\u2014e.g., Remote Direct Memory Access (RDMA)\u2014without software intervention in the data movement path.","The InfiniBand\u00ae specifications do not, however, adequately define how a conventional socket API (Application Program Interface)\u2014or equivalent programming interfaces\u2014can take advantage of the IBA hardware features. Therefore, although IBA eliminates the overhead associated with traditional TCP\/IP stack processing, legacy applications designed for use with the socket API cannot take advantage of the reliability and performance offered by IBA. Further, the socket API itself may not expose the features of IBA to newer applications that have been designed to take advantage of the IBA hardware.","A conventional networking system  is illustrated in FIG. . The networking system  includes a first system coupled with a second system via a network . One of the systems , may comprise a client (e.g., first system ) and the other a server (e.g., second system ), and either of the systems , may be the client depending on which of the systems initiates communication. The network  may comprise any suitable network\u2014e.g., the Internet, a Wide Area Network (WAN), a Local Area Network (LAN), or a Metropolitan Area Network (MAN)\u2014or combination of networks, and the network  may exhibit any suitable network architecture.","The first system includes one or more applications , such as applications , , and . A socket API layer provides an interface between the applications and a TCP\/IP protocol stack . A network interface \u2014such as, for example, a network interface card (NIC)\u2014connects the first system with the network . Similarly, the second system includes applications , such as applications , , and . A socket API layer interfaces the applications with a TCP\/IP protocol stack , and a network interface connects the second system with network  that, in turn, couples the second system with the first system ","A packet of data associated with an application (e.g., application ) in the first system flows (as denoted by arrows) from the application to the socket API layer . Applications access services provided by the TCP\/IP protocol stack through the socket API layer . A socket provided by the socket API layer is an abstraction though which an application may send and receive data. To create an instance of a socket , a protocol or address family must be specified for the socket. For TCP\/IP, the AF_INET address family (also referred to as PF_INET) is specified, which indicates that the socket will use the protocols and addresses from the Internet Protocol (IP) family.","A socket (that uses the TCP\/IP protocol family) is uniquely identified by an Internet address, an end-to-end protocol (e.g., TCP), and a port number of an associated port . A port is a pre-defined internal address that serves as a pathway between an application and the TCP\/IP protocol stack and, typically, there may be 65,535 such addresses (numbered 1 through 65,535 with zero being reserved). Thus, the applications need to specify an Internet address and a corresponding port to use a specific socket . It should be noted that a single socket abstraction , as identified by a port number, can be referenced by multiple applications on a the first computer system . For example, the port \u2032 is accessed by the application  as well as by the application . To send data to (and receive data from) an application on another system, such as the second system , a socket on the first system must be connected to another socket of the second system ","The socket API layer then passes the packet to the TCP\/IP protocol stack for processing. The TCP\/IP protocol stack performs addressing and delivers the packet over the network  independently of other packets, while also performing error control and flow control. As noted above, the TCP\/IP protocol stack is a significant source of delay for transactions across the network , resulting in packet latency.","The packet is subsequently provided to the network interface . The network interface provides an interface between the first system and the network , and the network interface may both transmit data packets onto, and receive packets from, the network . The network interface transmits the packet over the network  to the second system \u2014the packet having been properly addressed to the second system in the TCP\/IP stack \u2014and the second system receives the packet at its network interface . The packet is then passed to the TCP\/IP protocol stack of the second system for processing. Based on the specified port (as identified by a port number) at the socket API layer , the packet is provided via a corresponding socket to the appropriate application (e.g., application ) in the second system ","As has been suggested, the above-described networking system  suffers from at least one significant drawback\u2014i.e., packet latency resulting from the delay associated with TCP\/IP stack processing. For a web server, or server cluster, hosting a heavily accessed Internet site, such packet latency may lower site performance and decrease availability. However, as noted above, interconnect technology such as IBA that eliminates the TCP\/IP protocol stack does not adequately support socket API-based applications nor does it adequately expose IBA's hardware features through the socket API to applications adapted to take advantage of IBA.","Referring to , a networking system  includes a first system coupled with a second system via an IBA fabric . The IBA fabric  comprises a switched fabric compatible with the InfiniBand\u00ae specifications, as set forth above. Each of the systems , may comprise a processor node, an I\/O node, or a storage node.","The first system includes applications . The applications may include one or more legacy applications and one or more \u201cnew\u201d applications . A legacy application comprises an application designed to utilize the socket API and traditional TCP\/IP stack processing, whereas a \u201cnew\u201d application comprises an application designed to take advantage of the IBA hardware features. The first system also includes a socket API layer , as previously described. The socket API layer is necessary to support the legacy applications ; however, the socket API layer does not, by itself, adequately expose the features of the IBA fabric  to the new applications ","To enable both legacy and new applications , to interface with the IBA fabric  in a socket API environment, an intermediate layer is provided. The intermediate layer lies below (and, generally, at the kernel level) the socket API layer , and this intermediate layer will be referred to herein as the InfiniSock layer. The InfiniSock layer includes the AF_INET address family for the socket API, as described above, as well as a novel address family for IBA, this address family being referred to as the AF_IB address family . The InfiniSock layer preserves socket API transport semantics (e.g., SOCK_STREAM) and enables legacy applications to function with the IBA fabric  while also exposing IBA hardware features (e.g., RDMA) to new applications that can take advantage of these features.","The InfiniSock layer  also performs a mapping function. For a legacy application , the InfiniSock layer provides a mapping function between the socket API layer and an SDP layer , as will be explained below. For a new application , the InfiniSock layer provides a mapping function between the socket API layer and IB verbs , which will also be explained below.","The first system may also include a Sockets Direct Protocol (SDP) layer , as previously noted. See 0.61, 1, Jul. 6, 2001. The Sockets Direct Protocol provides a transport protocol that closely mimics TCP and also defines the packet format for data that is to be carried over the IBA fabric . The data path for legacy applications will flow through the SDP layer , whereas the data path for new applications does not utilize the SDP layer . In an alternative embodiment, as shown in , the data path for new applications includes the SDP layer ","The first system may further include InfiniBand\u00ae (IB) verbs and a channel adapter . The channel adapter terminates the link with IBA fabric  and serves as an interface with the IBA fabric , both generating and receiving packets. The IB verbs describe the interface between the channel adapter and the operating system (not shown in ) of first system and, further, the IB verbs describe the parameters necessary for configuring and managing the channel adapter ","The second system includes applications , such as legacy applications and new applications . Second system also includes a socket API layer and an InfiniSock layer , the InfiniSock layer having an AF_INET address family and the AF_IB address family , as described above. The second system further includes an SDP layer , IB verbs , and a channel adapter coupled with IBA fabric  via a link , all as described above. It should be understood that the second system may not include an InfiniSock layer and, further, that the second system may include only legacy applications or only new applications ","The flow chart of  illustrates a method  of transmitting data from an application of first system over the IBA fabric  to an application of second system . Referring to , data is generated by an application at the first system , as denoted by reference numeral . The data created at the first system is to be provided to an application at second system and, as shown at , the data is passed to the socket API layer and a socket is created (if a pair of sockets does not already interconnect the applications that are exchanging the data).","Referring to reference numeral  in , if the data is associated with a legacy application , an instance of a socket is created using the AF_INET address family , which is shown at . A port number will be associated with the socket that has been created. A mapping is then performed to map the socket API layer to the SDP layer , as shown at . This mapping between the socket API layer and the SDP layer allows socket-based legacy applications to interface with the SDP layer and, hence, to communicate over the IBA fabric  without the overhead associated with the conventional TCP\/IP protocol stack (see FIG. ).","The data is then passed to the SDP layer , which is shown at . As noted above, the SDP layer defines a packet format and provides a \u201cTCP-like\u201d transport protocol that utilizes many of IBA's capabilities (e.g., RDMA). Subsequently, the channel adapter receives the data from the SDP layer , as denoted at .","Referring again to reference numeral  in , if the data is not associated with a legacy application but, rather, is associated with a new application , an instance of a socket is created using the AF_IB address family , as shown at . A port number will be associated with the socket that has been created. As shown at , the InfiniSock layer then performs a mapping function to map the socket API layer to IB verbs , as denoted by reference numeral. By way of example, the socket API parameter \u201cSocket ( )\u201d may be mapped to the \u201cCreateCQ ( )\u201d and\/or \u201cCreateQP ( )\u201d parameters of IBA. Use of the AF_IB address family in conjunction with the mapping between the socket API layer and the IB verbs directly exposes the IB verbs \u2014and, accordingly, the native features of IBA\u2014to the new application , thereby enabling the new application to take advantage of IBA's hardware features (e.g., hardware transport protocols with no software intervention, reliable messaging, RDMA).","The channel adapter can then receive the data from the new application via the socket API layer , which is shown at reference numeral . In an alternative embodiment, as shown in , although a socket is created using the AF_IB address family , the data may still be passed to the SDP layer if the TCP-like protocol and packet format defined by the SDP layer are desired. In this embodiment, a mapping between the socket API layer and the SDP layer would be performed.","When the channel adapter of the first system has received the data, the channel adapter generates a packet containing the data, as shown at . The packet is then transmitted over the IBA fabric  to the channel adapter of the second system , as illustrated by reference numeral .","Referring to reference numeral  in , if the packet is associated with a legacy application , the packet is passed to the SDP layer , as shown at . Referring to reference numeral , a mapping between the SDP layer and the socket API layer is performed. As shown by reference numeral , the data contained in the packet is then provided to the legacy application , the legacy application being identified by a corresponding port number at the socket API layer . Referring again to reference numeral , if the packet is not associated with a legacy application but, rather, is associated with a new application , a mapping from IB verbs to the socket API layer is performed, as shown at . Referring to reference numeral , the data is then provided to the new application , as identified by a corresponding port number at the socket API layer ","InfiniBand\u00ae is a relatively new technology and new applications designed specifically for IBA are only beginning to emerge, whereas legacy applications designed for a socket API are ubiquitous and their use will continue well into the future. The InfiniSock layer described herein\u2014which supports the conventional AF_INET address family and also provides a mapping between socket API and SDP\u2014enables these socket-based, legacy applications to function in an IBA environment. Further, the InfiniSock layer defines a new AF_IB address family that, in conjunction with a mapping between the socket API and IB verbs, exposes the native features of IBA to those newer applications designed to take advantage of IBA's hardware features.","The foregoing detailed description and accompanying drawings are only illustrative and not restrictive. They have been provided primarily for a clear and comprehensive understanding of the present invention and no unnecessary limitations are to be understood therefrom. Numerous additions, deletions, and modifications to the embodiments described herein, as well as alternative arrangements, may be devised by those skilled in the art without departing from the spirit of the present invention and the scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 3","FIG. 2"]}]},"DETDESC":[{},{}]}
