---
title: Arrangement and method relating to traffic control
abstract: The present invention relates to an arrangement and a method for flow control of data packets in a communications system supporting communication of packet data. The arrangement comprises classifying means () for, by means of a number of parameters defining a number of data packet subflows, whereby each received packet belongs to one of the subflows. For each received data packet, an individual packet holding time is given by the size of the data packet and by the (desired) bandwidth of the subflow to which the packet belongs. It further comprises first queueing means () comprising one subflow queue (SFQ) for each subflow, such that received data packets are placed in the appropriate subflow queue, and one or more second queueing means (), each comprising a circular timeslot array register, wherein for each timeslot a timeslot queue (TSQ) is provided. Data packets from the subflow queues are placed in the appropriate time slot queues in relation to a current time slot queue, the packets in which, if any, currently being output, such that the data packet holding times can be observed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07616570&OS=07616570&RS=07616570
owner: Telefonaktiebolaget L M Ericsson (PUBL)
number: 07616570
owner_city: Stockholm
owner_country: SE
publication_date: 20020205
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","The present invention relates to an arrangement for controlling data packet flow in a communication system supporting communication of packet data, e.g. within a packet based network in general or between external packet data networks and end users e.g. over a backbone\/core network. The invention also relates to a traffic node, in a communication system supporting communication of packet data within the network or over a backbone\/core network, with flow controlling capability. The invention also relates to a method of controlling data packet flow in a communication system supporting communication of packet data, within an IP-network or particularly from external packet data networks towards end users over a backbone or core network.","2. Description of the Related Art","Traditionally, or so far, real-time communication service has generally been handled within the 2G telecommunication environment. Many applications designed in the 2G telecommunication environment have been implemented with a proprietary kind of service network to handle the specific application QoS requirements. This means that such applications generally work well as isolated applications, but it is difficult to integrate them with other applications developed in similar ways. Applications developed for the IP environment, or the Internet, have mainly been based on established standards supporting extensive integration of different applications. The data communication, or the Internet, community has so far not been able to successfully handle real-time communication services in a commercial scale. However, with the introduction of 3G networks (3GPP networks) which may be fixed as well as mobile, telecommunication and data communication services and applications will be mixed, higher and lower bit rates will be mixed as well as real-time and non-real-time traffic will be mixed. 3GPP is the 3rd generation Partnership Project. Standardization work is going on within 3GPP relating to GPRS\/UMTS networks and in IETF (Internet Engineering Task Force) and also by means of additional concepts and mechanisms that are developed, to put the mobile Internet into practice.","Routers in the Internet are low-cost equipment as compared to the equipment that has been used traditionally for the international telephony communications network. With the introduction of the mobile Internet, a new generation of equipment will be required. Such equipment will have a lot in common with the conventional Internet equipment, such as routers, but additional requirements are imposed to handle the mobility functionality. One such requirement relates to the capability of handling specific mobile Internet protocols. A particular example of such a requirement, for the GPRS (General Packet Radio Service) and UMTS (Universal Mobile Telecommunication System), is the GPRS Tunneling Protocol (GTP). With the Release 99 and Release 00 of the 3GPP (GPRS\/UMTS) standard advanced mechanisms relating to the handling of real-time traffic are also introduced. The 3GPP standard 3G TS 23.107, \u201cQoS Concept and Architecture\u201d, deals with some basic mechanisms in this respect.","Also within the Internet community, e.g. IETF, an intensive work is going on aiming at standardizing mechanisms for handling real-time traffic and multimedia traffic. One very important issue in this respect deals with how a limited bandwidth should be shared between the numerous applications connected to the Internet. The applications and the protocols they use do not always share the bandwidth in a fair way, or do not even try to share the bandwidth in a fair way. One example of that is given by the UDP protocol (User Datagram Protocol) and the TCP (Transmission Control Protocol). The TCP protocol implements built in flow control mechanisms but the UDP does not comprise any flow control mechanisms at all. The fair sharing of bandwidth is moreover complicated due to the fact that many applications are very bursty by nature, such as for example web-applications. Thus, even if the number of users is very large, the total traffic is not leveled (statistical multiplexing) as it is within the normal telecommunication networks. This contributes in making network dimensioning difficult. Moreover the availability of services to the end user will be unreliable. One of the main issues within real-time and multimedia networks is concerned with controlling the IP Packet flow. Several different queueing techniques are known which deal with flow control. Examples of known queueing techniques are Priority Queueing, Class-Based Queueing and Weighted Fair Queueing. The Differential Services (DiffServ) architecture (IN) and Admission Control techniques are also important techniques within the area of controlling flows.","However, all these known techniques normally operate on aggregates of flows of IP packets. The main reason therefore is that, if they were to operate on a per-flow manner, they simply would not scale to provide the desired performance in high-volume, high-speed environments. As an example, Weighted Fair Queueing (WFQ) used in a DiffServ environment is often limited to the six classes defined in RFC 2597 and RFC 2598 (Request For Comment, Network Working Group, Internet Society 1999), which documents herewith are incorporated herein by reference.","WFQ scheduling of only six aggregated flows can be realized without significant computational overhead.","It is however a problem, for example in a mobile Internet environment, that controlling flows on an aggregated level is not sufficient. One reason therefore is that some link resources may be very scarce, limited and therefore expensive. It is also complicated if on the path from for example a packet data network to an end user, the traffic resources differ a lot, i.e. the available bandwidth may differ a lot from one link to another. It is also a disadvantage that for example an operator of a mobile communication system is not able to offer different service levels to subscribers. Therefore Traffic Conditioning on max bit rate per individual flow is included in the QoS architecture of for example UMTS. In UMTS terminology, a flow is defined as one GTP tunnel or one PDP Context (secondary or not), cf. for example 3GPP, 3GTS 23.060 V3.4.0 (2000-07) for description of protocols and terminology which herewith is incorporated herein by reference. However, this is not supported by the known queueing techniques.","What is needed is therefore an arrangement for data packet flow control in a communication system supporting communication of packet data, within the network or between external packet data networks and end users over a backbone or a core network, through which the traffic flow control possibilities are improved. An arrangement is particularly needed which provides for a flexible traffic flow control.","An arrangement is also needed through which network dimensioning is facilitated by means of improved packet data flow control possibilities. Moreover an arrangement is needed through which it is possible to contribute in making the service reliability of accessing end users better than for hitherto known systems. An arrangement for flow control is also needed which is easy to implement, more particularly at a low cost.","Even more particularly a flow control arrangement is needed through which data packet traffic flow control can be done while considering the available bandwidth on different links, particularly on those links constituting the most limited or expensive resources on the path from packet data generating means to end users.","Moreover an arrangement for packet data flow control is needed through which it will be possible to reduce or even prevent overload, at least in some sensitive parts of the network where it is desired to prevent overload etc. e.g. because those parts comprise scarce or expensive resources.","Particularly an arrangement for packet data flow control is needed through which exposed or selected nodes can be protected against overload conditions, or from having to use large storing facilities.","A traffic control arrangement is also needed through which bandwidth considerations can be taken into account in an efficient manner, and even more particularly an arrangement is needed through which it gets possible to take into account the fact that some of the resources are limited resources, e.g. the radio link, as compared to other links within the network.","An arrangement is also needed which enables (max) bandwidth\/bit rate as a parameter in subscription or service offerings. An arrangement is also needed through which it gets possible for an operator to handle end user specific subscriptions relating to different service levels and to handle the traffic flow with due consideration of different QoS classes or service classes.","Particularly an arrangement is needed through which the computational overhead does not, or only to a limited extent, increase depending on the number of flows that are controlled, i.e. that it gets possible to implement traffic flow control in a more flexible manner than in hitherto known systems in which flow control is done on a per aggregate flow level and for which the number of aggregated flows that can be controlled is strictly limited to ensure an acceptable computational overhead.","A traffic node in a communication system supporting communication of packet data is also needed through which one or more of the above mentioned objects can be met. Still further a method of controlling the packet data flow in a communication system supporting communication of packet data is needed, through which one or more of the above mentioned objects can be met.","Therefore an arrangement for data packet flow control is provided which comprises, or is in communication with, classifying means for, by means of, or based on a number of parameters, defining a number of packet subflows whereby each received packet belongs to one of the subflows.","For each data packet received in the arrangement, an individual packet holding time is given by the size of the data packet and by the desired bandwidth of the subflow to which the packet belongs, or by the maximum bit rate the subflow should have. The arrangement also comprises first queueing means comprising one subflow queue for each subflow, such that received data packets are placed in the appropriate subflow queue. In addition thereto it comprises one or more second queueing means each comprising a circular timeslot array register, wherein for each timeslot a timeslot queue is provided. Data packets from subflow queues are placed in the appropriate time slot queues in relation to a current time slot, the packets of which currently being output, if there are any packets in the current time slot queue, such that the requested data packet holding times are observed before output of the data packets from the respective time slot queues.","In a particularly advantageous implementation there is maximum one data packet from each subflow queue contained in the second queueing means simultaneously. In such an implementation, when a data packet is output from the time slot queue in which it is placed, i.e. when the time slot forms the current time slot, the subsequent data packet in the subflow queue from where it originated (if there still is at least one data packet in that subflow queue), is placed in the appropriate time slot queue for that data packet, such that the holding time of said preceding packet will be observed. Preferably, for each data packet in a time slot queue that is output when the time slot forms the current time slot, the subsequent data packet in the respective subflow queue from where the respective data packet originated, is fetched to the second queueing means and placed in a time slot queue such that the respective, requested holding times of the respective packets will be observed.","In an advantageous implementation the second queueing means comprises an array of N time slots each corresponding to a time interval t, such that N time slot queues are provided. The N time slots correspond to a time interval T which is the sum of the time intervals t. In a preferred implementation a pointer is used which points at the current time slot and thus activates output of the packets in the corresponding current time slot queue. The current time slot pointer is moved one step forwards every T\/N seconds, or alternatively as soon as all packets are output, unless this occurs before T\/N seconds have lapsed. This means that it activates one time slot after another stepwise, and since the array register is circular, on time slot Twill follow time slot T. Particularly the appropriate time slot queue TSQfor a (subsequent) data packet Pis given by TS+N (packetsize of p\u00d78\/bitrate of Psubflow); (Modulo[TS+N (packetsize\u00d78\/bitrate)]). Particularly the sorting time for sorting a data packet into a timeslot queue is constant and independent of the number of subflows.","According to the present invention it will thus be possible to obtain a per-flow, or rather per-subflow, control, e.g. providing traffic conditioning on maximum bit rate. For that purpose it is important how the scheduling or sorting is performed or which scheduling algorithm is used. For example, for a large number of flows, the WFQ as referred to above would give a computational overhead increasing as ordo (log n). Another known scheduling algorithm is Leap Forward Virtual Clock (LFVC) which has a computational overhead increasing as ordo(log(log n)). For these scheduling methods it appears to be one main contributor to the increasing computational overhead with the number of queues and that is the required sorting of packets based on time stamps. However, according to the present invention the computational overhead will be constant and it does not depend on the number of queues, and this means that it actually is an ordo(I)algorithm, particularly specialized for the IP packet handling.","Particularly the packets are IP-packets, and the maximum bandwidth can be provided per-subflow of IP-packets, e.g. traffic conditioning on maximum bitrate for each subflow.","In an advantageous implementation, although the inventive concept is not limited thereto, the data packets that are linked into one and the same time slot queue (from different subflow queues) are arranged in an arbitrary order in the time slot queue.","The arrangement may be provided in a traffic node in an IP network. Particularly it is provided in a core network node if flow control is implemented for packet data traffic between external packet data networks and end users over a backbone\/core network. The arrangement may be implemented for data packet traffic on the downlink, e.g. from servers of packet data networks towards end users. Particularly the arrangement is arranged in a traffic node, or a packet data node, upstreams of equipment, links, network nodes etc. that need to be protected from overload situations or which better should not need to too large storing means. Particularly it may be provided at the ingress point to the core network or before the ingress node to the radio network, since often the radio link is the weakest link of the system and therefore needs to be protected since it is a scarce resource with a limited bandwidth. Also other selection criteria can be used for determining where the arrangement best serves its purpose. Flow controlling arrangements may be provided in a plurality of network nodes of the same type or of different types. For example in case different operators are responsible for different nodes or different networks flow controlling arrangements may be installed in network nodes belonging or controlled by different operators. However, also other aspects may be considered. Flow control may alternatively, or additionally be provided for on the uplink.","Particularly there are a plurality of flow controlling arrangements in a traffic node.","In a particular implementation a subflow is defined or given by the address of the receiving end user and the packet content. Particularly it is defined by the end user address (IP-address), the QoS class of the packet, for example streaming, conversational, background or interactive. It may also be given by the IP-address of the destination user equipment or end user, the originating address, e.g. a server or particularly a web-server or a streaming server, and the service class or QoS the end user subscribes to.","In a particular implementation the communication system comprises an UMTS system and the arrangement is preferably provided in a traffic node of said system. Particularly a subflow may be defined by a GTP-tunnel or a PDP-Context (secondary or not). In an advantageous implementation, for each service class an end user, e.g. a user equipment (UE), subscribes to, one subflow is defined. The arrangement may with advantage be provided in a traffic node, e.g. a GGSN (Gateway GPRS Support Node) and\/or in an SGSN (Serving GPRS Support Node) upstreams in the flow direction of the subflows with respect to a network part needing to be protected or a link, e.g. a radio link having severe bandwidth requirements.","In particular implementations the arrangement is able to handle a large number of subflows, e.g. up to 10, 10, 10, 10or more subflows, e.g. GTP-tunnels. It should be clear that this merely is an example. Moreover there may be any number of arrangements, as referred to above, in a network node, e.g. implemented on circuit boards. Also the number of time slots in the array register can be selected according to different criteria, and particularly it is given by technical considerations or limitations. Generally all the data packets in a time slot queue will be output on the output device within a T\/N-th second, resulting in a slight varation in delay. If a specific delay variation (jitter) is required, this may be achieved by selecting N (the total number of time slots) sufficiently high. This is generally a trade off between delay variation and memory usage.","The present invention also provides for a traffic node in a communication system supporting communication of packet data within IP-networks or between external packet data networks, or generally data packet suppliers, e.g. IP networks, or more specifically servers, and end users over a backbone (core) network. The traffic node comprises a number (J) of arrangements, for controlling the flow of data packets. Each flow controlling arrangement comprises or communicates with classifying means for, based on a number of parameters, defining a number of packet subflows from the total input flow of data packets handled\/directed to the respective arrangement.","Each arrangement comprises first and second queueing means for, using individual data packet holding times given by the size of the respective data packets and by the desired bandwidth of the subflow to which the respective data packet belongs, controlling the data packet traffic flow on a per-subflow basis. The, or a number of the, flow control arrangements are used to control the traffic flow on the downlink (and\/or on the uplink). Particularly the first queueing means of each flow controlling arrangement comprises or generates one subflow queue for each subflow, such that data packets received in the respective arrangements are placed in the appropriate subflow queue, whereas the second queueing means of each flow controlling arrangement comprises at least one circular timeslot array register, wherein for each timeslot a timeslot queue is provided. Data packets from the subflow queues are placed in the appropriate time slot queues of the respective second queueing means in relation to a current timeslot queue, the packets in which, if any, currently being output, such that the holding times of the respective data packets at least substantially will be observed.","The holding time requirements are particularly given by the desired bandwidth usage of the respective subflow to which the packet belongs and packet size. Maximum one data packet from each subflow queue is contained in the second queueing means of an arrangement simultaneously, and when a data packet is output from the time slot queue in which it is placed, i.e. when the time slot forms a current time slot, the subsequent data packet in the subflow queue from where it originated, if any, is placed in the appropriate time slot queue such that the holding time of the preceding data packet will be observed. Particularly each second queueing means comprises an array of Ntime slots of each a given time interval t, such that Ntime slot queues are provided, wherein Tis the time interval of the Ntime slots. When a current time pointer points at the current time slot, all the data packets in the corresponding time slot queue are output. The current time slot pointer is displaced one step forwards every T\/Nseconds, or alternatively somewhat later, if not all packets can be output within T\/N. As discussed earlier, the appropriate time slot queue for a subsequent data packet may, in one implementation, be given by the current time slot+N (the packetsize of the packet*8\/bitrate of the respective subflow). The appropriate time slot queue may however be calculated in other ways as well. It should be clear that index j can be different for different second queueing means, irrespectively of whether they are in the same flow controlling arrangement or not. I.e. the number of and the length of time slots may differ.","In a particular implementation the traffic node comprises a GGSN or a SGSN in GPRS\/UMTS and even more particularly a subflow is defined as a GTP-tunnel or a PDP context. Particularly the desired bandwidth, the maximum bandwidth usage, for a subflow may be given by the link having the most severe bandwidth requirements on the path between e.g. a server of the external packet data network, particularly a streaming server or a web-server, and an end user station, e.g. a User Equipment (UE). In other terms the desired bandwidth for a subflow corresponds to the maximum bit rate the particular subflow should have with respect to the maximum allowed bandwidth usage in e.g. a given part of the network, or on a given link.","The present invention also provides for a method of packet data flow control in a communication system supporting communication of packet data. The method particularly comprises the steps of; defining, based on a number of parameters, a number of subflows among the total flow of packets incoming to a flow controlling arrangement; placing the data packets incoming to the flow controlling arrangement in subflow queues, such that there is one subflow queue per subflow; determining an individual holding time for each data packet of a subflow depending on the size of the data packet and on the desired bandwidth of the subflow to which the packet belongs, or alternatively the maximum bit rate, or more generally the bit rate the flow should have; transferring data packets from each subflow queue to second queueing means comprising one or more circular time slot array register(s) with one time slot queue per time slot by, for each subflow, consecutively placing the first data packet of the subflow queue in the appropriate time slot queue as e.g. given by the holding time of the preceding packet in relation to the current time slot, the packets in which currently being output, such that always maximum one data packet from one and the same subflow is queued in the second queueing means.","Particularly the second queueing means comprises an array of N time slots, each time slot defining a time interval t, such that N time slot queues are provided, wherein T is the total time interval of the N time slots. Alternatively the second queueing means comprises two or more timeslot array registers.","Particularly the step of outputting packets stored in the current time slot queue is carried out by; using a pointer to point at a time slot for activating output of the packets stored in said time slot, which thus forms the current time slot; moving the time slot pointer one step forwards every T\/N seconds (or alternatively when all packets have been output, but no sooner than after T\/N seconds). The method particularly further comprises the steps of; for each data packet output from a time slot queue; placing the subsequent data packet from the same subflow queue as the output packet (if any) in the appropriate time slot queue for that subsequent packet. Finding the appropriate time slot in one implementation comprises the step of; calculating the appropriate time slot queue (TSQ) for a (subsequent) data packet pas the sum of the current time slot and N (packet size of the preceding data packet P\u00d78\/the bitrate of the subflow). Preferably the step of defining subflow queues comprises defining one subflow per GTP tunnel in a GPRS\/UMTS system.","It should however be clear that subflows can be defined in different manners, but generally there is one subflow per end user, e.g. User Equipment (UE) and particularly also per service class, e.g. one subflow per QoS class an end user subscribes to, such that, if an end user for example subscribes to three different service classes, there may be one subflow for each service class or QoS class. There may also be one subflow corresponding to for example two different service classes (QoS classes).","It is also possible to implement flow control as described above in a cascaded manner such that for example in a first flow controlling arrangement there is one definition of subflows, it may for example relate to more than one service class or more than one end user, whereas in a subsequent flow controlling arrangement a finer or different subflow division is implemented etc. Any alternative is in principle is possible.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 1","b":["5","6","6","7","8","7","5","21","22","23","15","16","17","18","11","13","12","12","14"],"sub":["1 ","2 ","3 ","1 ","2 ","3 ","4 "]},"In this figure it is supposed that gateway packet data node G-PDN is provided with two flow controlling arrangements (FC, FC) , A. Of course there may be more than two flow controlling arrangements in G-PDN, or it may contain just one flow controlling arrangement. Also the other packet data nodes, gateway packet data nodes as well as server packet data nodes, may be provided with flow controlling arrangements according to the present invention. Generally it is also possible to arrange flow controlling arrangements according to the present invention in other nodes, but flow controlling arrangements are preferably located at edge nodes.","Tunnels are schematically illustrated between G-PDN and S-PDN as well as between S-PDN and RNC , and between RNC  and user equipment  respectively. Tunnels are not a prerequisite for the functioning of the invention. However, bandwidth information is often available per flow (subflow) in tunnel configurations, like GTP.","It is here supposed that the flow controlling arrangements , A are provided in order to control packet data traffic on the downlink. Often it is particularly important to protect the radio link from being overloaded since it is an expensive resource having a limited bandwidth capacity. Generally one radio channel is reserved for each user and it is not possible to transport packets faster than it is allowed to on that channel. However, through providing for flow control according to the present invention at e.g. a core network gateway node it will not be necessary to keep control over packet flows within the core network or in the backbone network, which also is clearly advantageous. Problematic situations often result when for example streaming servers or web-servers keep on sending data packets or bursts thereof on the downlink with a high capacity or at a high speed, which particularly may be much too high as compared to what can be handled within the core network, and specifically by the RNC and on the radio link.","According to the invention it gets possible to perform data traffic control on a per subflow basis, e.g. per user, or per user and QoS class or service class. However, it is possible, according to the inventive concept, to define subflows also according to other, different or additional criteria. A subflow may e.g. be given by source and destination IP addresses and UDP or TCP port, possibly QoS class or set DiffServ byte.","Generally it is disadvantageous to buffer data packets in the radio network control means  since they do not have enough storing capacity and therefore, according to the present invention, buffering is done for example in gateway packet data nodes (and\/or in server packet data nodes). It will also be easier to provide for a satisfactory network dimensioning with such a flow controlling capability at an early stage on the downlink.","The per (sub)flow control of bandwidth according to the invention will make it possible for operators (ISP; Internal Service Providers, UMTS etc.) to make service offerings and charging based on the subscribed bandwidth. The invention does also, potentially, solve other problems in IP-networks which may be caused by the often bursty nature of IP-traffic.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 2","FIG. 1","FIG. 1","FIG. 2"],"sub":["1 ","1","1 ","11","12","2 ","21 ","3 ","31","32","33","1 ","2 ","3 "],"b":["21","5","15","10","10","1","2","15","10","15","10","10","10","21","22","23","21","6","7","8"]},"Although the implementation of flow control according to the invention is mainly described with reference to downlink traffic, it should be clear that the concept is likewise applicable on the uplink. Uni-directional flow control may thus be implemented in either direction, but also bi-directional flow control may be implemented.","In  it is however supposed to be implemented on the downlink. Data packets are input by servers over for example Internet , intranets , . Also in this case tunnels are indicated, point-to-point or direct. For example for UMTS the tunnel on the radio link comprises a 64 kbps RAB, Radio Access Bearer. According to the present invention the traffic flow will here be controlled at a much earlier stage, upstreams of the radio link, and already at for example GGSNA measures will be taken to assure that the bandwidth requirements on RAB will be upheld through flow control on a per subflow basis.","In one implementation a subflow is defined as an IP address of the user equipment and the relevant QoS class. Thus, if the subscriber or end user subscribes to more than one QoS class, there may be more than one subflow, e.g. one for each QoS class, for one and the same end user. Preferably flow control is performed on a per subflow basis, where a subflow e.g. corresponds to a GTP tunnel. GTP is the GPRS tunneling protocol for example described in ETSI Draft TS 100 960, V5.0.0 (1998-01). In one advantageous implementation every circuit board in a GGSN is able handle a large number of 10.000 GTP tunnels, e.g. up to 10, 10, 10, 10, 10or more tunnels depending on board capacity, each of which e.g. controlled as a subflow. According to the invention, particularly if it is implemented to control the radio link, the subflow controlling procedure is preferably performed already in GGSN, thus particularly protecting the RNC A and the core network in general. In more general terms a flow controlling arrangement or a flow control procedure as described in the present invention may e.g. be provided for upstreams of, and in the flow direction (uplink or downlink) of the weakest link\/network entity, e.g. the link having the smallest bandwidth or the entity or the link most sensitive to traffic overload. However for the purposes of service offering control, subscription based control, it may be placed at an arbitrary node (nodes) in the network.","For concepts, terminology etc., that are used herein, it is referred to 3GTS 23.060 V3.4.0 (2000-07), Technical Specification by 3GPP (Third Generation Partnership Project) which herewith is incorporated herein by reference thereto. 3GPP TS 23.107 V.3.4.0 (2000-10) Technical Specification by Third Generation Partnership Project (3GPP\u2122), Technical Specification Group Services and System Aspects; QoS Concept and Architecture is also herewith incorporated herein by reference.","It should be clear that the inventive concept is applicable also in IP-based networks, e.g. within a network. In the following one example of a flow controlling arrangement according to the present invention will be further described. According to the invention it gets possible to control the bandwidth usage on a per subflow basis.","In  a flow controlling arrangement  is schematically illustrated. It is supposed that a number of IP packets are input to the flow controlling arrangement , which comprises classifying means  for determining or defining a number of subflows. This can, as referred to above, be done in many different ways, e.g. per end user, per end user and service class etc. As the classification of the subflows is determined, the input IP packets are arranged in first queueing means comprising a number (m) of subflow queues SFQSFQ. In this embodiment data packets Pand Pare in SFQwhereas SFQonly comprises one packet P. SFQcomprises three packets in a queue, P, P, P, whereas SFQis empty, SFQcomprises one packet Pand SFQcomprises two packets, P, P, at a given moment in time.","IP packets arriving at the input queues (the first queueing means) shall be delayed or held a specific time, here denoted a holding time, before they are put on the output queue, or output from the second queueing means. The holding time depends, according to one embodiment of the invention, on the maximum bit rate the IP subflow should have and on the size of the individual IP packet. Particularly the holding time of a packet (given by the bit rate the corresponding packet subflow should have and on the size of the packet) is used to indicate the time to hold the subsequent packet from the same subflow queue i.e. it indicates the time interval between output of the two packets.","The second storing means comprises a circular time slot array register in which a time interval T is divided into N smaller time intervals denoted time slots, TS , TS , . . . , TS N\u22121. If for example T=1 second, and N=1000, each time slot in the array register will represent 1 ms. For each time slot packets may be arranged in a time slot queue TSQ, TSQ, . . . , TSQ. Thus there are N time slot packet queues. A current time slot pointer tpoints at the current time slot and thus at the current time slot queue, and it indicates that the packets in the current time slot queue are to be output. Every T\/N seconds, e.g. in this embodiment every 1 ms, the current time slot pointer tpointer is moved one step forwards indicating the subsequent time slot queue to be emptied. Preferably the array is circular which means that the time slot after time slot TS N\u22121 is TS . Alternatively the time slot pointer is moved only when all packets in the current time slot queue have been output, if this occurs after TIN seconds.","The transfer of data packets from the first queueing means to the second queueing is carried out such that, preferably, at any time there is maximum one data packet from each subflow queue in the time slot array register. Preferably the individual holding times of the data packets, at least substantially, can be observed before output of a subsequent packet from the second queueing means. It should be clear that moving or transferring packets, e.g. between an incoming interface and the first queueing means, between the first queueing means and the second queueing means, from the second queueing onto an output interface or onto an output device can be achieved in different alternative ways, e.g. by moving pointers to packets, by copying packets etc.","If there is no data packet from a given subflow queue in the second queueing means at a given time, the first arriving data packet in that particular subflow queue can at once be introduced into the appropriate time slot queue. On condition that the holding time of the preceding packet from the same subflow queue actually has lapsed, the packet can be put into the current time slot queue, otherwise it has to be placed in a later TS queue, such that also the remainder of the holding time of the preceding packet will lapse before it is output.","However, the holding time as indicating the time to lapse before the subsequent packet is output, is particularly given by the packet size (in byte)\u00d78 divided by the bit rate the subflow should have. The subsequent data packet of the same specific subflow queue can not be introduced into the time slot array register until the preceding data packet has been or is output from the time slot array register, i.e. the second queueing means. This will happen when the pointer points at the time slot queue in which it (the preceding packet) is placed. As the packet in the time slot queue in which it is placed are output, the originating subflow queue (i.e. the subflow queue from where the preceding packet arrangement) is checked for additional, subsequent packets. If there are additional packets in the specific subflow queue, the first data packet in the subflow queue is moved from the subflow queue to the correct time slot queue in the second queueing means as discussed above.","This is done for every data packet in a time slot queue pointed at by the current time slot pointer t, and the respective subsequent packets in the respective subflow queues will be placed in the respective appropriate time slot queues. By using this way of sorting the data packets by time, the sorting time will always be constant (ordo(1)), which corresponds to the time to calculate the appropriate timeslot and linking a pointer to the packet into the time slot queue at the calculated index.","The calculation of an appropriate timeslot for each data packet and putting it into the appropriate time slot queue becomes a delay of each packet. Since the delay is a function of the bit rate this particular subflow shall have and the packet size of the preceding packet from the same subflow, the result will be a bandwidth shaped or a bandwidth controlled flow of IP packets. Furthermore, since the sorting time is constant, ordo(1) as referred to above, it can be applied in large scale environments without any performance reduction, which is extremely advantageous. Preferably an upper limit is given for packet size as well as a lower limit for subflow bit rate. This will result in a finite length of the time slot array register. However, in practice such limits do not give rise to any problems.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 4","FIGS. 5A"],"sub":["30","40","20","m0 ","2 ","cur","2","30","40","20","m ","20","30","40","m ","21 ","2","31 ","3","41 ","4 ","m1 ","m "],"b":"5"},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 5A","b":["2","3","2"],"sub":["0","1","2","999","1 ","11","12","13","14","15","2 ","21","22","23","3 ","31","32 ","4 ","41","42","43","44","5 ","6 ","6","7 "]},"In the time slot queue array register tpoints at TSQcontaining packets P, P, P, P. These packets are thus about to be output. It is here supposed that Pin SFQshould be delayed five time slots in relation to the current time slot, i.e. \u0394TS=5, whereas for P\u0394TS=8, for P\u0394TS=3 and for P\u0394TS=3. The respective \u0394TS values are found by use of the holding times of the respective preceding packets from each subflow queue, and actually indicate how much P, P, P, Pshould be delayed with respect to the output time of P, P, Pand Prespectively.","The correct time slot to which a subsequent data packet should be transferred is actually given by or calculated as:\n\ntimeslot=Modulo, [timeslot(packetsize of preceding packet\u00d78\/bit rate)]\n","i.e. in this case timeslotwould be TSQ, but since this figure neither illustrates the packet sizes, nor does it illustrate the bit rates of the respective subflows and therefore, for explanatory reasons the appropriate time slot is merely indicated by a \u0394TS value being the difference from the current time slot to the time slot where the packet should be placed.","Thus, in  it is supposed that TSQhas been emptied but the time slot pointer still points at TSQand the packets P, P, P, Pfrom TSQwhich were output, are replaced by P, P, P, P. Since for p\u0394TS was 5, Pis placed in TSQwhereas for P\u0394TS=8, Pis placed in TSQ, and for Pand P\u0394TS=3 these packets are placed in TSQ. As tpoints at TSQ, Pand Pand possibly other data packets from other subflow queues will be input to their respective appropriate time slot queues etc.","The procedure as discussed above will result in a small inaccuracy in delay. Data packets that are linked into the same time slot queue can be placed in an arbitrary order. All the packets in one and the same time slot queue will be output within one T\/N-th second, but generally it is not possible to obtain a more precise knowledge about when a particular packet actually is output. The minimum size of T as determined by the size of N is determined by the required accuracy of delay variance (or jitter). If a specific delay variation (or jitter) is required, this can be achieved by choosing a sufficiently high N. The selection of N is mainly a trade off between delay variation and memory usage.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 6","FIGS. 3"],"b":["4","5","5"]},"Particularly tail drop TD may be used as a discarding algorithm if a subflow tends to get too long. Then the last packet(s) is\/are dropped. However also other discarding mechanisms may be implemented. For example head drop may with advantage be used to get a faster back off if the flow e.g. is a TCP flow. Moreover a total bandwidth limit may be implemented for some QoS classes to allow for admission control. These figures are however merely given for exemplifying reasons.","It is also possible to have two (or more) second queueing means for one first queueing means. For example may one second queueing means handle UMTS QoS classes C and S (using UDP) and one second queueing means handle UMTS classes I and B (using TCP). This is schematically illustrated below in .","More generally there may be one second queueing means for each QoS class or one for a group of QoS classes, e.g. having same properties in common. Any criteria relating to the definition of subflows may be used to determine the use of different second queueing means.","In 3GPP TS 23.107 V3.4.0 (2000-10) \u201cQoS Concept and Architecture\u201d which is incorporated herein by reference, the UMTS QoS classes are defined. These classes are also referred to as traffic classes. The main distinguishing factor between these QoS classes is related to the delay sensitivity of the traffic. The Conversational class is intended for traffic which is very delay sensitive whereas the Background class is the most delay insensitive traffic class. Conversational and Streaming classes are mainly intended-to be used to carry real-time traffic flows. To which class traffic belongs, is mainly given by the delay sensitivity of the traffic. Conversational real-time services, like video telephony, are the most delay sensitive applications and such data streams should be carried in the Conversational class.","Interactive class and Background class are mainly meant to be used by traditional Internet applications like www, e-mail, telnet, FTP and News. Since the delay requirements are less severe, these classes provide better error rate by means of channel coding and retransmission. The main difference between Interactive and Background class is that the Interactive class is mainly used by interactive applications, interactive e-mail or interactive WEB browsing while Background class is meant for background traffic, e.g. background download of e-mails or background file downloading. Generally background applications use transmission resources only when interactive applications do not need them. This is an important factor in wireless environments where the bandwidth is low as compared to in fixed networks.","The most well known use of Conversational class is telephony speech, but with Internet and multimedia a number of new applications will require the Conversational class such as for example voice over IP and video conference tools. The real-time conversation scheme is characterized by that the transfer time shall be low because of the conversational nature of the scheme and at the same time that the time relation (variation) between information entities of the stream shall be preserved in the same ways as for real time streams. The time limit for acceptable transfer delay is very strict since otherwise the quality will be much too low.","The Streaming class uses a comparatively new scheme within data communication. It is characterized by that the time relations (variation) between information entities, i.e. samples, packets, within a flow shall be preserved, although it does not have any requirements on low transfer delay. But the delay variation of the end-to-end flow shall be limited to preserve the time relation or variation, between information entities of the stream. However, since the stream normally is time aligned at the receiving end, in the user equipment, the highest acceptable delay variation over the transmission media will be given by the capability of the time alignment functionality of the application. This means that the acceptable delay variations are much higher than the delay variations in the Conversational class.","The Interactive class for example relates to the case when an end user, either a machine or a human being, is on-line requesting data from remote equipment, e.g. a server. Examples thereon are WEB browsing, database retrieval, server access. This is a classical data communication scheme generally characterized by the request-response pattern of the end user. At the message destination there is an entity expecting the message (response) within a certain time. The content of the packet shall be transparently transferred with a low bit error rate.","The Background class scheme applies when an end user, typically a computer, sends and receives data files in the background. Examples are background delivery of e-mails, SMS, download of databases etc. Generally the destination does not expect to receive the data within a certain time. Thus this traffic class is generally comparatively delivery time insensitive. However, the content of the packets shall be transparently transferred, i.e. with a low bit error rate. Traffic of Interactive class may be bursty. For all four traffic classes a maximum bit rate bearer attribute is defined whereas guaranteed bit rate only is defined for Conversational and Streaming classes.","For Internet applications, the selection of the class and appropriate traffic attribute values is made according to the Internet QoS attributes. Internet applications do not directly use the services of UMTS, but they use Internet QoS definations and attributes which are mapped to UMTS Qos attributes at API (Application Programming Interface). Currently there are two main Internet QoS concepts, namely Integrated Services and Differentiated Services. Mapping between Internet QoS and UMTS QoS IP based QoS models shall be supported for PDP Context, meaning both Integrated Services signalled by RSVP (RFC 2205) and Differentiated Services (6-bit QoS attribute on each IP packet, DiffServ).",{"@attributes":{"id":"p-0094","num":"0093"},"figref":"FIG. 7","b":["1","2","1","3","2","6","4","5","8","3","3","3","3","1","2","3","6","3","4","5","8","3"],"sub":["1","s","s "]},"In other aspects the two separate dedicated second queueing means are similar to the second queueing means as disclosed in e.g. . Advantageously they operate asynchronously and independently. They may also have different lengths, different numbers of time slots, different lengths of time slots etc. Of course they may also be similar.","In still other implementations there may be one second queueing means per service class, or for any group of service classes (or subscriber groups, or groups determined by other criteria). The same concept is of course applicable to other service classes or QoS classes than the UMTS QoS classes. The principle remains also the same independently of which is the network or communications system used, namely that there is one first queueing means, but that there may be more than one second queueing means.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 8","sub":["1","2 ","3 ","4 "]},"Particularly the queue size may be limited as discussed above, for example 1 second for Interactive class etc., and tail drop may also be implemented as a discarding algorithm. This means that all arriving packets will be dropped if the number of bytes in queue exceeds 16.000\/1\/8=2.000 byte. Dropping of packets or similar for controlling the subflow queue size may however be done in any appropriate manner, e.g. by head drop.","In the flow diagram of  the procedure when a data packet Parrives on an incoming interface (it may e.g. be sent out by a streaming server or a web server). When thus the data packet Parrives at a flow controlling arrangement according to the invention, , the relevant subflow queue SFQas determined by the classifying means has to be found, . Then the holding time of Pis calculated based on the size of Pand on the bit rate the subflow (SFQ) should have, .","The calculation of a holding time may however also be done at a later stage in the procedure, e.g when Palready is placed in SFQ, or when Pis to be output from the first queueing means (comprising SFQ). Still further, the holding time may be calculated at an even later stage, e.g. at steps , or  of .","The calculation of the holding time of Pmay thus, according to another implementation, be done when Phas been placed in a time slot queue (TSQ) in the second queueing means, since, according to advantageous implementations the holding time of Pis used to determine when the subsequent packet (P) in the same subflow queue (SFQ) may be output in relation to when Pis output. I.e. in advantageous implementations the holding time of Pindicates the time that has to lapse between output (from the second storing means) of Pand of Psuch that the bandwidth usage of the subflow can be controlled. The holding time concept may also be taken as an indication of the real time when Pmay be output in relation to the output time of P, or alternatively in relation to the current time as indicated by the current time slot pointer indicating the current time slot of the second queueing means. Generally the holding time is used as a means to indicate in which the time slot the subsequent packet from the same subflow queue may be placed.","After (or before) calculating the holding time of P, it may be established if SFQis full, . If yes, some discarding algorithm may be used, e.g. a dropping algorithm deciding that Pis to be dropped or that some other packet is to be dropped, .","Then it is examined if any packet(s) is\/are queued in SFQ, . It should be clear that step  could just as well be performed before step , which then only would have to be performed if the result of step  was affirmative, i.e. that there are one or more packets in SFQ.","However, supposing that there are no packets in SFQwhen parrives, then it has to be established if there is a packet (P) from SFQin the second queueing means, i.e. in one of the time slots of the time slot (TS) array register, .","If it is established that there is no packet (P) in the second queueing means, from SFQ, the appropriate time slot queue (TSQ) for Phas to be found. If the holding time of Phas lapsed in relation to current time, TSQ, Pshould be placed in TSQ, i.e. it need not be held before output. If holding time h, has not lapsed, it has to be determined how many time slots the remainder of hcorresponds to, and add this number of time slots to TS, which will result in the appropriate TSQ (denoted TSQ) for P, . Pwill then be placed in TSQ, .","When the current time slot pointer tpoints at TSQ, i.e. TSQ=TSQ, Pwill be output like possible other packets from other SFQs that are placed in TSQ, . When Pis output, it will be indicated in any appropriate manner to SFQthat there is no packet from SFQin the second queueing means. This may be done by actually indicating to SFQthat there is no packet in the second queueing means or it may be passively indicated by the removal or absence of an indication, e.g. a flag, that there is a packet in the second queueing means from SFQ.","Alternatively the information about the absence or presence of a packet in any of the TSQs will have to be retrieved by SFQ. In one implementation, when Pis output, P, (if any) is automatically fetched from SFQto the appropriate time slot, TSQfor Pusing information about holding time of Pand TSQ, . It should be noted that the denotation TSQhas no other meaning than that it is the TSQ that has been established as the appropriate TSQ for Pas it will presumably be also for other packets from other subflow queues. The denotation is thus used only for explanatory reasons.","If at step  it was established that SFQcontained one or more packets in the queue, Pis placed at the end of SFQ, . Pwould then have to be kept in SFQuntil Pis output from the second queueing means, TSQ array register, i.e. when TSQ=TSQ, B. This would also be the case if, at step , it was established that P, was still queued in the second queueing means. However, in both cases, when TSQ=TSQ, is proceeded with step  as discussed above.","In the flow diagram of  it is supposed that the current time slot pointer just has moved one step to point at TSQ, which thus forms the current time slot TSQ, . It is settled whether there are any packets in TSQ, .","If yes, it is here supposed that packets P, P, Pare queued in TSQ(in any order). Packets P, P, Poriginate from different subflow queues, here denoted SFQ, SFQand SFQ. It should of course be clear that there may be any number of packets from different subflow queues. Supposing that the time slot array comprises N time slots covering a time interval T, packets P, P, P(here) will be output substantially within T\/N seconds.","A situation in which it will not be possible to output all packets within T\/N can be handled in different manners. In one implementation, a legging behind of the time slot pointer is accepted, in another implementation not, leading to one or more packets having to be dropped.","For each packet in TSQ, here P, P, P, it is checked for subsequent packets in the subflow queues (SFQ, SFQ, SFQ) from where they originated, . If there are subsequent packets in SFQ, SFQand SFQ, , information about the holding time of Pand\/or Pand\/or Pand the bitrate of SFQand\/or SFQand\/or SFQis used e.g. in the order as the packets are output to establish which is\/are the appropriate TSQ(s) for Pand\/or Pand\/or P, . Packets P, Pand\/or Pis\/are then placed in the respective, appropriate time slot queue(s), . It should be clear that in one or more subflow queues there might not be a subsequent packet.","If in step  above, it was established that there was no packet at all in TSQ, it is possible that one or more packets will arrive in TSQfrom an SFQ between tand t+\u0394t, i.e. as long as the current time slot pointer has not been moved to the subsequent time slot (TSQ), . If one or more packets actually do arrive in the meantime, the procedure will be continued with step  etc., as described above.","The situation will be similar if in step , it is established that there are no packets in e.g. SFQ\/SFQ\/SFQ. This means that it will be detected if any packets arrive in the respective subflow queues (here SFQ\/SFQ\/SFQ), from which a packet was output to TSQduring t=t+\u0394t, . If yes, the appropriate TSQs for such packets will be found etc, cf. step  etc.","Otherwise it may e.g. be indicated in SFQ\/SFQ\/SFQthat there is no packet in the time slot array register, , since, if there was a packet from the respective subflow queue in TSQ, there cannot be any more packets form the respective subflow queues in any of the time slot queues.",{"@attributes":{"id":"p-0116","num":"0115"},"figref":"FIG. 11","b":["301","302","303","304","305","306","307","308","309","310","311"],"sub":"cur"},{"@attributes":{"id":"p-0117","num":"0116"},"figref":["FIG. 12","FIG. 11"],"sub":"cur","b":["401","402","403","404","402","403","405"]},"A new \u201callowed input time\u201d (\u201cwait-until-time\u201d) is computed using the size of the just sent packet and the bit rate of the SFQ, . Then it is established if there are any more packets in the relevant SFQ, . If not, the \u201cpacket-in-TSQ\u201d-flag is cleared and the \u201callowed input time\u201d is set in SFQ, . Otherwise the \u201cpacket-in-TSQ\u201d flag is set in the relevant SFQ, , and the first packet is input into the appropriate TSQ, . Then the procedure is repeated as from step  etc. taking pointer movements into account, cf. step , .","It should be clear that the calculation of the appropriate time slot queue for a packet in a subflow queue can be done in different manners. In one implementation the SFQ, or the first queueing means, may keep information about the holding time of the last output packet from the respective subflow queues. When the holding time of an output packet has lapsed, this may be indicated as zero holding time or alternatively there will be no indication at all.","In an alternative implementation, when a packet is output from a TSQ of the second queueing means, the output time is noted, the holding time is added, and information may e.g. be provided to the corresponding SFQ, or the first queueing means, about the earliest allowed output time for a subsequent packet from the same SFQ. With the use of such information, the appropriate TSQ will be found.","Also other implementations are of course possible, the main thing being that the holding times of preceding packets being used to determine when a subsequent packet may be output, in combination with the bitrate the respective subflow should have.","The invention is characterized by preserved sequence order of each subflow. Moreover, there may be more than one second queueing means for one first queueing means. The invention is of course also in other respects not limited to the specifically illustrated embodiments."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention will in the following be further described in a non-limiting manner, and with the reference to the accompanying drawings in which:",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 5B","FIG. 5A"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 12","FIG. 11"]}]},"DETDESC":[{},{}]}
