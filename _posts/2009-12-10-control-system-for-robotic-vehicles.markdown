---
title: Control system for robotic vehicles
abstract: A method and apparatus may be present for controlling robotic vehicles. A processor system may identify hardware for a robotic vehicle to form an identification. The processor system may run an interface layer for the hardware for the robotic vehicle using the identification. The interface layer may be configured to receive information from the hardware in which the information may be received using a number of protocols for the hardware. The processor system may send the information received from the hardware to a control layer in which a number of applications running in the control layer may be configured to indirectly control operation of the robotic vehicle. The information may be received in the control layer using a protocol used by the number of applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08521328&OS=08521328&RS=08521328
owner: The Boeing Company
number: 08521328
owner_city: Chicago
owner_country: US
publication_date: 20091210
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND INFORMATION","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field","The present disclosure relates generally to robotic vehicles and, in particular, to a system for controlling robotic vehicles. Still more particularly, the present disclosure relates to a system for controlling a number of robotic vehicles using a number of applications.","2. Background","A robotic vehicle may be a vehicle that moves without requiring a human operator to control the operation of the vehicle. A robotic vehicle may be, for example, without limitation, an unmanned aerial vehicle, an unmanned submersible vehicle, a cruise missile, a terrain mapping robotic vehicle, or some other suitable type of vehicle. The robotic vehicle may be controlled by a computer program running on a processor system. The processor system may be located in the robotic vehicle or in a location remote to the robotic vehicle. The processor system may send commands to the robotic vehicle. The robotic vehicle may perform a number of tasks based on these commands. These commands may be based on factors such as, for example, without limitation, input received from a human operator, decisions made using the computer program, rules in the computer program, and\/or other suitable factors.","Further, a robotic vehicle also may be capable of generating and sending data to a processor system. The data may be, for example, without limitation, data from a sensor system in the robotic vehicle.","A number of hardware and\/or software components may comprise a robotic vehicle. These components may be located in the robotic vehicle and\/or in a location remote to the robotic vehicle. Further, these components may be tested and\/or controlled by an exchange of information with a processor system. This exchange of information may be uni-directional and\/or bi-directional. The processor system may be comprised of a number of computer systems with a number of hardware and\/or software components.","With currently available processor systems used to test and\/or control robotic vehicles, the hardware and\/or software components in these processor systems may be customized for different robotic vehicles. In other words, the different hardware and\/or software components may be limited in the number of different robotic vehicles and\/or different components in the robotic vehicles with which the hardware and\/or software components may interface.","Further, the development of robotic vehicles may involve designing and testing the different hardware and\/or software components of the robotic vehicles. Currently available systems and processes for designing and testing these components may take more time, effort, and expense than desired.","Therefore, it would be advantageous to have a method and apparatus that addresses one or more of the issues discussed above, as well as possibly other issues.","In one advantageous embodiment, an apparatus may comprise a control layer, an interface layer, and a processor system. The control layer may be configured to control hardware for a robotic vehicle by indirectly exchanging information with the hardware using a first protocol. The interface layer may be configured to exchange the information with the hardware and the control layer using a communications medium. The interface layer may exchange the information with the control layer using the first protocol and may exchange the information with the hardware using a number of protocols used by the hardware. The control layer, the communications medium, and the interface layer may run on the processor system.","In another advantageous embodiment, a control system for a robotic vehicle may comprise the robotic vehicle, hardware associated with the robotic vehicle, a processor system for use with the robotic vehicle, a control layer, an interface layer, and a processor system. The control layer may be configured to run on the processor system and to control the hardware for the robotic vehicle by indirectly exchanging information with the hardware using a first protocol. The control layer may comprise a number of applications configured to indirectly control the hardware using the first protocol and a communications process configured to exchange information with a communications medium. The interface layer may be configured to run on the processor system and exchange the information with the hardware and the control layer using the communications medium. The interface layer may exchange the information with the control layer using the first protocol and may exchange the information with the hardware using a number of protocols used by the hardware. The interface layer may comprise a map of the hardware, descriptions of how to communicate with the hardware, a number of processes configured to communicate with the hardware using the descriptions and the map, and a number of buffers. The number of processes may be configured to retrieve the information from the hardware and place the information in the number of buffers. The map of the hardware may identify a location of the hardware in the robotic vehicle. The descriptions of how to communicate with the hardware may comprise at least one of a packet size, a checksum, a data transfer rate, a device driver location, and an identification of the number of processes that communicate with the hardware. The control layer, the communications medium, and the interface layer may run on the processor system.","In yet another advantageous embodiment, a method may be present for controlling robotic vehicles. A processor system may identify hardware for a robotic vehicle to form an identification. The processor system may run an interface layer for the hardware for the robotic vehicle using the identification. The interface layer may be configured to receive information from the hardware in which the information may be received using a number of protocols for the hardware. The processor system may send the information received from the hardware to a control layer in which a number of applications running in the control layer may be configured to indirectly control operation of the robotic vehicle. The information may be received in the control layer using a protocol used by the number of applications.","In still yet another advantageous embodiment, a method may be present for controlling robotic vehicles using a control system. A processor system may identify hardware for a robotic vehicle to form an identification. The processor system may run an interface layer for hardware for the robotic vehicle using the identification. The interface layer may comprise a map of the hardware, descriptions of how to communicate with the hardware, a number of processes, and a number of buffers. The descriptions may comprise at least one of a packet size, a checksum, a data transfer rate, a device driver location, and an identification of the number of processes that communicate with the hardware. The number of processes may be configured to communicate with the hardware using the descriptions and the map. The number of processes may be configured to retrieve the information from the hardware and place the information in the number of buffers. The interface layer may be configured to receive information from the hardware in which the information may be received using a number of protocols for the hardware. The processor system may send the information received from the hardware and read from the number of buffers to a control layer over a communications medium using a protocol. The control layer may comprise a number of applications configured to indirectly control the hardware using the protocol and a communications process configured to exchange the information with the communications medium. The number of applications running in the control layer may be configured to indirectly control operation of the robotic vehicle. The information may be received using the protocol used by the number of applications. The processor system may receive the information in the interface layer from the number of applications in the control layer in which the information may be received in the protocol. The processor system may send the information received from the number of applications in the interface layer to the hardware using the number of protocols for the hardware.","The features, functions, and advantages can be achieved independently in various embodiments of the present disclosure or may be combined in yet other embodiments in which further details can be seen with reference to the following description and drawings.","The different advantageous embodiments may recognize and take into account a number of different considerations. For example, without limitation, the different advantageous embodiments recognize and take into account that testing prototype robotic vehicles in different testing environments may require different types of equipment. The different advantageous embodiments recognize and take into account that the hardware components for a robotic vehicle used to test the robotic vehicle in an indoor environment, such as a lab, may be different than the hardware components used to test the robotic vehicle in an outdoor environment.","Further, the different advantageous embodiments also may recognize and take into account that the hardware components for the robotic vehicle may also be different when the robotic vehicle is in operation. For example, without limitation, different types of tasks may require different types of sensors, communications links, and\/or other suitable hardware components.","The different advantageous embodiments recognize and take into account that changing the hardware components for a robotic vehicle, based on the testing environment, may require changes in the software used to perform the testing of the robotic vehicle. These changes in software may take more time, effort, and expense than desired. Further, these changes may increase the time it takes to bring the robotic vehicle from the prototype stage into use. The software may be, for example, without limitation, a number of applications.","Further, the different advantageous embodiments recognize and take into account that some tasks and\/or missions may be performed by swarms of robotic vehicles. A swarm of robotic vehicles may be a plurality of robotic vehicles configured to perform a task and\/or mission at the same time. The task and\/or mission may be performed in coordination with other robotic vehicles in the swarm.","The swarms of robotic vehicles may be homogeneous or heterogeneous. When testing heterogeneous swarms of robotic vehicles, the development of software applications for testing and\/or controlling all of the different robotic vehicles may take more time, effort, and expense than desired with currently available systems.","The different advantageous embodiments recognize and take into account that it may be desirable to have a software architecture for controlling robotic vehicles that does not need to take into account the particular hardware and\/or software components of the robotic vehicles. For example, the hardware used in a test environment for a robotic vehicle may be different from the hardware used in a field environment for the robotic vehicle. Thus, it may be desirable to have software architecture for running a number of applications in which the development of the number of applications may not depend on the particular hardware components being used in controlling the robotic vehicle in different environments.","For example, without limitation, the different advantageous embodiments may recognize and take into account that the hardware and\/or software components of currently available processor systems used with robotic vehicles may be limited. The components may not be reusable or expandable. In other words, the components may not be used for different robotic vehicles and\/or different components in robotic vehicles. Further, the components in the processor systems may not be modular or capable of modifications that expand the components. For example, without limitation, software components in the processor systems may be limited in the amount of modifications that may be performed or the number of new modules that may be added to the programming.","The different advantageous embodiments may take into account and recognize that it may be desirable to have a processor system configured to interface with a variety of hardware and\/or software components in robotic vehicles and\/or a variety of robotic vehicles. One component may interface with another component by being connected to each other such that information may be exchanged between both components. This connection may be a wired connection, a wireless connection, a connector to port connection, and\/or some other suitable type of connection.","The different advantageous embodiments may recognize and take into account that having a processor system configured to interface with a variety of components in robotic vehicles and with a variety of robotic vehicles may reduce the time, effort, and expense of controlling the robotic vehicles. For example, without limitation, operators may be able to use one processor system to make modifications to a number of applications running on the processor system without taking into account the protocols used by the components of the robotic vehicles interfaced with the processor system.","Thus, the different advantageous embodiments may provide a method and apparatus for controlling robotic vehicles. In one advantageous embodiment, a processor system may identify hardware for a robotic vehicle to form an identification. The processor system may then run an interface layer for the hardware for the robotic vehicle using the identification. The interface layer may be configured to receive information from the hardware. The information may be received using a number of protocols for the hardware. The processor system may send the information received from the hardware using the interface layer to a control layer in which a number of applications running in the control layer may be configured to indirectly control operation of the robotic vehicle. The information may be received in the control layer using a protocol used by the number of applications.","With reference now to , an illustration of a robotic system is depicted in accordance with an advantageous embodiment. In this illustrative example, robotic vehicle control environment  may include plurality of robotic vehicles .","Plurality of robotic vehicles  may be homogeneous or heterogeneous. In other words, plurality of robotic vehicles  may include robotic vehicles of the same type or of different types. The type of robotic vehicle may be based on factors such as, for example, without limitation, the hardware and\/or software components for the robotic vehicle, the configuration of these components, the tasks for which the robotic vehicle may be configured, the type of programming for the robotic vehicle, and\/or other suitable factors. For example, without limitation, in some advantageous embodiments, plurality of robotic vehicles  may include different types of robotic vehicles configured to perform substantially the same types of tasks.","In these illustrative examples, plurality of robotic vehicles  may be configured to perform number of tasks  for a mission. A mission may be any selection of tasks in number of tasks . Number of tasks  may include, for example, without limitation, surveillance tasks, reconnaissance tasks, weapons deployment tasks, repair tasks, machining tasks, other suitable types of tasks, and\/or combinations of tasks. For example, without limitation, number of tasks  may include traveling to a location, performing surveillance, repairing a target object, returning to a base, and\/or some other suitable types of task.","In these illustrative examples, plurality of robotic vehicles  may have different levels of complexity. The levels of complexity may depend on the type of programming for the robotic vehicles and\/or the type of number of tasks .","The levels of complexity may also depend on the health of plurality of robotic vehicles . If, for example, the health of one or more of robotic vehicles  decreases, the complexity of tasks that can be performed also may decrease. The health status of a robotic vehicle may be the capability of the robotic vehicle to perform certain tasks in a desired manner. For example, without limitation, the health status of a robotic vehicle may include a sensor range, a climb rate, a payload capacity, and\/or other suitable parameters for health. Tasks within number of tasks  may be distributed among plurality of robotic vehicles  based on the health status of plurality of robotic vehicles .","Robotic vehicle  may be a robotic vehicle in plurality of robotic vehicles . Robotic vehicle  may take the form of, for example, without limitation, unmanned aerial vehicle , cruise missile , and\/or some other suitable type of robotic vehicle.","In this illustrative example, robotic vehicle  may have hardware  and processor system . Hardware  may include number of hardware units  such as, for example, without limitation, sensor system , number of actuators , number of cameras , and\/or other suitable types of hardware units. Sensor system  may include a number of sensors such as, for example, without limitation, global positioning system unit , inertial measurement unit , and\/or other suitable types of sensors.","Number of hardware units  may be configured to process data , convert data  into a digital format, and exchange data  with processor system . In these depicted examples, number of hardware units  may be configured by processor system  to process, convert, and\/or exchange data . In these illustrative examples, the exchange of data  may be unidirectional or bi-directional. As one example, global positioning system unit  may generate data  in the form of position data. Global positioning system unit  may process the position data, convert the position data into a digital format, and send the position data into processor system .","In some advantageous embodiments, portion  of number of hardware units  may be located in remote location . Remote location  may be a location remote to robotic vehicle . As one example, sensor system  may be located in remote location . In another example, portion  may include hardware units that may be used for testing robotic vehicle . These hardware units may be in remote location  such that an operator may perform testing on robotic vehicle  from remote location .","In this illustrative example, hardware  for robotic vehicle  may be controlled by processor system . Processor system  may take the form of number of computer systems . A number, when referring to items, means one or more items. For example, a number of apparatus embodiments are one or more apparatus embodiments. Number of computer systems  may be located in robotic vehicle  and\/or remote location . For example, without limitation, first portion  of processor system  may be located in robotic vehicle , while second portion  of processor system  may be located in remote location .","In this illustrative example, processor system  may include control layer , interface layer , and communications medium . Control layer  may control hardware  for robotic vehicle  by exchanging information  with hardware . Information  may be exchanged by sending, receiving, and\/or sending and receiving information . In other words, the exchange of information  in these illustrative examples may be unidirectional or bi-directional. As depicted, control layer  may indirectly exchange information  with hardware . An indirect exchange means that information  may be exchanged between control layer  and hardware  using another layer. In these illustrative examples, layers may be processes that run on a processor unit. The layers also may include data and\/or data structures. In these examples, the layers may exclude hardware components.","Information  may include, for example, without limitation, data, logs, files, messages, commands, code, programs, pictures, and\/or other suitable types of information. Further, information  may include input  received from an operator, such as operator .","In this illustrative example, input  may be for number of applications  in control layer . In some examples, number of applications  may be modified by input  received from operator . For example, without limitation, operator  may add, change, and\/or remove portions of number of applications  with input .","Control layer  may indirectly exchange information  with hardware  using interface layer . Control layer  may control hardware  using number of applications . In particular, number of applications  may communicate with interface layer  using first protocol . For example, number of applications  may communicate with interface layer  by exchanging information  with interface layer . First protocol  may be a protocol separate from the protocols used by number of hardware units . In this manner, modifications may be made to number of applications  without taking into account the protocols used by number of hardware units .","In these illustrative examples, a protocol may be a set of rules used for exchanging information that may be implemented by hardware and\/or software. A protocol may be the rules for the syntax, semantics, and\/or synchronization of communications. In other words, first protocol  may be a set of rules for exchanging information between control layer  and interface layer .","In this illustrative example, control layer  may exchange information  with interface layer  using communications medium . In particular, control layer  may exchange information  with communications medium  using first communications process  in control layer . Further, information  may be exchanged between control layer  and interface layer  over communications medium  using first protocol . Communications medium  may include at least one of, for example, without limitation, universal serial bus , wireless communications link , optical cable , wire cable , and\/or some other suitable type of communications medium.","In this depicted example, interface layer  may include map , descriptions , number of processes , and number of buffers . Number of processes  may use map  and descriptions  to communicate with hardware . In this illustrative example, map  may be a map of hardware  for robotic vehicle . For example, without limitation, map  may identify locations of number of hardware units  for robotic vehicle . These identifications may include slot numbers, port numbers, connector positions, and\/or other types of identifications of locations for number of hardware units .","Descriptions  may include descriptions of how to communicate with hardware . For example, without limitation, descriptions  may include packet size , checksum , data transfer rate , device driver location , identifications , and\/or other suitable types of information describing how to communicate with hardware . Identifications  may identify number of processes  that communicate with hardware .","Further, descriptions  may also include extensible markup language (XML) file . Information  exchanged between control layer  and hardware  may be coded and\/or decoded by interface layer  using extensible markup language file .","For example, without limitation, information  in an extensible markup language format may be decoded using extensible markup language file  into a format capable of being processed by number of hardware units . In this manner, information  received from control layer  may not need to take into account the type of format for information  that may be processed by number of hardware units .","Number of processes  may use map  and descriptions  to identify which process in number of processes  to use to access a particular hardware unit in number of hardware units . For example, without limitation, map  may be used to identify a location of the connection of number of cameras  to processor system . This connection may be made using communications medium  in these examples.","Further, descriptions  may be used to determine how to communicate with number of cameras , retrieve information  from number of cameras , send commands to control the manner in which information  may be generated by number of cameras , and\/or perform other suitable exchanges of information  with number of cameras . With descriptions , number of processes  may identify a process within number of processes  that may be configured to access number of cameras  and retrieve information .","In this illustrative example, number of processes  may take the form of number of application programming interfaces . Interface layer  may exchange information  with hardware  using number of application programming interfaces  and number of protocols . In this depicted example, number of protocols  may be protocols used by number of hardware units  for robotic vehicle .","Information  retrieved by interface layer  from hardware  may be placed in number of buffers  in interface layer  by number of processes . In this illustrative example, number of buffers  may be number of circular buffers . The buffers in number of buffers  corresponding to a particular hardware unit in number of hardware units  may be identified using descriptions  in this illustrative example. In other advantageous embodiments, number of buffers  may take the form of a number of first-in-first-out buffers and\/or some other suitable type of buffer.","Interface layer  may also include second communications process . Second communications process  may read information  placed in number of buffers . Further, second communications process  may send information  read from number of buffers  to control layer  over communications medium  using first protocol . First protocol  may be separate from number of protocols . In this manner, control layer  may receive information  from hardware  without taking into account the different protocols in number of protocols  for the different hardware units in number of hardware units .","Thus, the configuration of processor system  with control layer  and interface layer  may allow the development of robotic vehicle  with less time, effort, and expense as compared to currently available control systems for robotic vehicles. Processor system  may be used to integrate testing in a controlled environment, such as a lab, with testing in the field. For example, without limitation, number of applications  may be run for testing robotic vehicle  for a variety of hardware units and\/or algorithms for robotic vehicle . These algorithms may include, for example, without limitation, search algorithms, collision avoidance algorithms, mission management algorithms, task allocation algorithms, and\/or other suitable types of algorithms.","As one illustrative example, one type of sensor system  may be in remote location  for testing robotic vehicle  in a lab. Another type of sensor system  may be connected to robotic vehicle  for testing robotic vehicle  in the field. The programming for number of applications  may not need to be rewritten to take into account the different sensor systems used for testing. Operator  may add information to map  and\/or descriptions  to account for the change in sensor systems.","In this manner, operator , who may be a programmer, may focus on developing and operating robotic vehicle  without having knowledge of the interfacing capabilities of number of hardware units . Further, operator  may focus on writing software for number of applications  to test and\/or control the performance of number of tasks  by robotic vehicle . As a result, less time, effort, and expense may be spent developing robotic vehicle .","The illustration of robotic vehicle control environment  in  is not meant to imply physical or architectural limitations to the manner in which different advantageous embodiments may be implemented. Other components in addition to and\/or in place of the ones illustrated may be used. Some components may be unnecessary in some advantageous embodiments. Also, the blocks are presented to illustrate some functional components. One or more of these blocks may be combined and\/or divided into different blocks when implemented in different advantageous embodiments.","For example, in some advantageous embodiments, other portions of processor system  may be located in locations other than robotic vehicle  and\/or remote location . In other advantageous embodiments, number of hardware units  may include analog to digital converters, analog devices, tools, and\/or other suitable types of hardware units. Further, in some advantageous embodiments, other robotic vehicles in plurality of robotic vehicles  in addition to robotic vehicle  may be controlled using a processor system, such as processor system .","With reference now to , an illustration of a robotic vehicle is depicted in accordance with an advantageous embodiment. In this illustrative example, robotic vehicle  may be an example of one implementation of robotic vehicle  in . As depicted, robotic vehicle  may have number of hardware units . Number of hardware units  may be located within housing .","In this illustrative example, number of hardware units  may include, for example, without limitation, propulsion system , sensor system , communications system , control system , number of robotic arms , weapons system , and\/or other suitable types of hardware units. In this depicted example, propulsion system  may allow robotic vehicle  to move on land and\/or in the air. Propulsion system  may take the form of engine system , rocket propulsion system , and\/or some other suitable type of propulsion system.","Sensor system  may include a number of sensors such as, for example, without limitation, global positioning system unit , inertial measurement unit , number of cameras , infrared detector , radar detection system , and\/or other suitable types of sensors. Sensor system  may be configured to generate data . In some examples, data  may be generated in response to testing of robotic vehicle  and\/or in response to robotic vehicle  performing a number of tasks. In this illustrative example, data  may be processed by control system  and\/or processed at a location remote to robotic vehicle .","In this illustrative example, communications system  may be used by robotic vehicle  to communicate with computer systems remote to robotic vehicle . Communications system  may include at least one of wired communications link , optical cables , wireless communications link , and\/or some other suitable form of communications. In one illustrative example, communications system  may be used to send data  generated by sensor system  to a computer system located remote to robotic vehicle  for processing.","In this depicted example, control system  may control operation of robotic vehicle . Control system  may take the form of a computer system in this illustrative example. Control system  may run program  to control operation of robotic vehicle . Robotic vehicle  may have different levels of complexity, depending on program . For example, without limitation, robotic vehicle  may be capable of making decisions, learning, and\/or analyzing situations. In this example, program  may include artificial intelligence, a neural network, and\/or some other suitable form of programming.","In another example, robotic vehicle  may be capable of responding to commands received from a human operator. In this example, robotic vehicle  may not be capable of making decisions and\/or learning and may have a simpler program  as compared to a robotic vehicle with artificial intelligence and\/or neural networks.","In this illustrative example, control system  may run program  to control operation of propulsion system , sensor system , communications system , number of robotic arms , and\/or weapons system . For example, without limitation, number of robotic arms  may be connected to number of tools . Control system  may run program  to control the operation of number of tools  to perform a number of tasks. In another illustrative example, control system  may run program  to control weapons system  such that a weapon may be deployed based on decisions made by control system .","Turning now to , an illustration of a data processing system is depicted in accordance with an advantageous embodiment. In this illustrative example, data processing system  may be an example of one implementation for processor system  in . Further, data processing system  may be an example of one implementation for control system  in . As depicted, data processing system  may include communications fabric , which provides communications between processor unit , memory , persistent storage , communications unit , input\/output (I\/O) unit , and display .","Processor unit  serves to execute instructions for software that may be loaded into memory . Processor unit  may be a set of one or more processors or may be a multi-processor core, depending on the particular implementation. Further, processor unit  may be implemented using one or more heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example, processor unit  may be a symmetric multi-processor system containing multiple processors of the same type.","Memory  and persistent storage  are examples of storage devices . A storage device is any piece of hardware that is capable of storing information such as, for example, without limitation, data, program code in functional form, and\/or other suitable information either on a temporary basis and\/or a permanent basis.","Memory , in these examples, may be, for example, a random access memory or any other suitable volatile or non-volatile storage device. Persistent storage  may take various forms, depending on the particular implementation. For example, persistent storage  may contain one or more components or devices. For example, persistent storage  may be a hard drive, a flash memory, a rewritable optical disk, a rewritable magnetic tape, or some combination of the above. The media used by persistent storage  may be removable. For example, a removable hard drive may be used for persistent storage .","Communications unit , in these examples, provides for communication with other data processing systems or devices. In these examples, communications unit  is a network interface card. Communications unit  may provide communications through the use of either or both physical and wireless communications links.","Input\/output unit  may allow for the input and output of data with other devices that may be connected to data processing system . For example, input\/output unit  may provide a connection for operator input through a keyboard, a mouse, a personal digital assistant (PDA), a data glove, and\/or some other suitable input device. Further, input\/output unit  may send output to a printer. Display  provides a mechanism to display information to an operator.","Instructions for the operating system, applications, and\/or programs may be located in storage devices , which are in communication with processor unit  through communications fabric . In these illustrative examples, the instructions are in a functional form on persistent storage . These instructions may be loaded into memory  for execution by processor unit . The processes of the different embodiments may be performed by processor unit  using computer implemented instructions, which may be located in a memory, such as memory .","These instructions are referred to as program code, computer usable program code, or computer readable program code that may be read and executed by a processor in processor unit . The program code, in the different embodiments, may be embodied on different physical or computer readable storage media, such as memory  or persistent storage .","Program code  is located in a functional form on computer readable media  that is selectively removable and may be loaded onto or transferred to data processing system  for execution by processor unit . Program code  and computer readable media  form computer program product . In one example, computer readable media  may be computer readable storage media  or computer readable signal media . Computer readable storage media  may include, for example, an optical or magnetic disk that is inserted or placed into a drive or other device that is part of persistent storage  for transfer onto a storage device, such as a hard drive, that is part of persistent storage . Computer readable storage media  also may take the form of a persistent storage, such as a hard drive, a thumb drive, or a flash memory that is connected to data processing system . In some instances, computer readable storage media  may not be removable from data processing system .","Alternatively, program code  may be transferred to data processing system  using computer readable signal media . Computer readable signal media  may be, for example, a propagated data signal containing program code . For example, computer readable signal media  may be an electromagnetic signal, an optical signal, and\/or any other suitable type of signal. These signals may be transmitted over communications links, such as wireless communications links, an optical fiber cable, a coaxial cable, a wire, and\/or any other suitable type of communications link. In other words, the communications link and\/or the connection may be physical or wireless in the illustrative examples.","In some illustrative embodiments, program code  may be downloaded over a network to persistent storage  from another device or data processing system through computer readable signal media  for use within data processing system . For instance, program code stored in a computer readable storage media in a server data processing system may be downloaded over a network from the server to data processing system . The data processing system providing program code  may be a server computer, a client computer, or some other device capable of storing and transmitting program code .","The different components illustrated for data processing system  are not meant to provide architectural limitations to the manner in which different embodiments may be implemented. The different illustrative embodiments may be implemented in a data processing system including components in addition to or in place of those illustrated for data processing system . Other components shown in  can be varied from the illustrative examples shown. The different embodiments may be implemented using any hardware device or system capable of executing program code. As one example, data processing system  may include organic components integrated with inorganic components and\/or may be comprised entirely of organic components excluding a human being. For example, a storage device may be comprised of an organic semiconductor.","As another example, a storage device in data processing system  is any hardware apparatus that may store data. Memory , persistent storage , and computer readable media  are examples of storage devices in a tangible form.","In another example, a bus system may be used to implement communications fabric  and may be comprised of one or more buses, such as a system bus or an input\/output bus. Of course, the bus system may be implemented using any suitable type of architecture that provides for a transfer of data between different components or devices attached to the bus system. Additionally, a communications unit may include one or more devices used to transmit and receive data, such as a modem or a network adapter. Further, a memory may be, for example, memory  or a cache such as found in an interface and memory controller hub that may be present in communications fabric .","With reference now to , an illustration of a testing environment is depicted in accordance with an advantageous embodiment. In this illustrative example, testing environment  may be an example of one implementation for robotic vehicle control environment  in . As depicted, testing environment  may include lab testing environment  and field testing environment . Lab testing environment  may be indoors, while field testing environment  may be outdoors.","In this illustrative example, lab testing environment  and field testing environment  may be used to perform testing for object . In this depicted example, object  may take the form of robotic vehicle . Robotic vehicle  may be implemented in the form of robotic vehicle  in  and\/or robotic vehicle  in .","Lab testing environment  may include a number of components for testing robotic vehicle . For example, without limitation, lab testing environment  may include number of cameras , data station , computer system , and computer system . Data station  may be used to collect data generated by number of cameras . This data may be in the form of images and\/or videos. The data may be generated in response to a test performed on robotic vehicle .","In this illustrative example, number of cameras  may form a motion capture system. This motion capture system may identify particular patterns for robotic vehicle  during movement of robotic vehicle . For example, without limitation, number of cameras  may identify markers on robotic vehicle  while robotic vehicle  moves. Number of cameras  may be used to provide position information for robotic vehicle . Number of cameras  may be configured to provide position information for robotic vehicle  in real time. The position information may include a number of positions for robotic vehicle  in three-dimensional space.","Data station  may be connected to computer system . Computer system  may be configured to process the data generated by number of cameras . Computer system  may be linked to computer system  by wired communications link  in the form of an Ethernet cable. The processed data may be sent to computer system  over wired communications link  for further processing and\/or analyzing. For example, without limitation, an operator may view the data processed by computer system  at computer system . The operator may make changes to the software and\/or hardware components (not shown) for robotic vehicle  based on the processed data.","In this illustrative example, robotic vehicle  may be placed in field testing environment  for further testing. For example, without limitation, when robotic vehicle  takes the form of an unmanned aerial vehicle, robotic vehicle  may be placed into field testing environment  to test flying capabilities that cannot be tested in lab testing environment .","As depicted, robotic vehicle  may have processor system . Processor system  may be configured to control operation of robotic vehicle . Further, processor system  may be configured such that processor system  may include the functions provided by data station , computer system , computer system , and wired communications link . In other words, processor system  may be configured to collect data from hardware units for robotic vehicle , process the data, and send the data for further processing. The data may be sent using a wireless communications link in robotic vehicle  in this illustrative example.","In this illustrative example, processor system  may have an interface layer and control layer, such as interface layer  and control layer  in . With this type of configuration for processor system , an operator may make modifications to a number of applications running on processor system  without needing to take into account the hardware and\/or software components of robotic vehicle . Further, robotic vehicle  may be tested in both lab testing environment  and field testing environment  without requiring modifications to the hardware and\/or software components of robotic vehicle . In this manner, testing in both lab testing environment  and field testing environment  may be integrated through the use of processor system .","With reference now to , an illustration of a communications environment is depicted in accordance with an advantageous embodiment. In this illustrative example, robotic vehicle control environment  may be an example of one implementation of a portion of robotic vehicle control environment  in . Further, robotic vehicle control environment  may be implemented for a robotic vehicle, such as robotic vehicle  in . In particular, robotic vehicle control environment  may be used to control number of hardware units  for robotic vehicle .","The configuration of robotic vehicle control environment  may be one of a number of possible configurations. Robotic vehicle control environment  may include number of hardware units , interface layer , and communications medium .","Number of hardware units  may be an example of one implementation for number of hardware units  in  and\/or number of hardware units  in . As depicted, number of hardware units  may include, without limitation, inertial measurement unit , global positioning system unit , multi-channel pulse position modulation (PPM) controller , sensor  , sensor  , sensor  , analog to digital converter , and analog devices .","In this illustrative example, number of hardware units  may connect to interface . Interface may be an input\/output interface configured to provide an interface between number of hardware units  and a processor system, such as processor system  in . As depicted, number of hardware units  connected to interface  may exchange information with the processor system over communications medium . Number of hardware units  may receive and\/or send information over communications medium  through interface . In other illustrative embodiments, one of number of hardware units  may exchange information with the processor system directly over communications medium  without connecting to interface .","With reference now to , an illustration of an interface layer is depicted in accordance with an advantageous embodiment. In this illustrative example, interface layer  may be an example of one implementation of interface layer  in . Further, interface layer  may be implemented within control system  in robotic vehicle  in . As depicted, interface layer  may include map , descriptions , processes , and circular buffers .","In this illustrative example, map  may be an example of one implementation for map  in . Map  may provide identifications for locations of port numbers for number of hardware units . Number of hardware units  may be number of hardware units  in . For example, without limitation, map  may provide identifications of slot numbers and universal serial bus port numbers to which number of hardware units  may be connected. Locations , , and  may identify slot numbers. Locations , , , and  may identify universal serial bus port numbers.","In this illustrative example, map  may be generated in a number of different ways. As one example, map  may be generated by input received from an operator. In another example, map  may be generated by a process in interface layer  that polls number of hardware units  though interface  to identify the locations of number of hardware units . In this example, interface  may be an input\/output interface that includes the slots and\/or universal serial bus ports to which number of hardware units  may be connected. Further, interface layer  may communicate with number of hardware units  connected to interface  using communications medium .","As depicted, descriptions  may provide descriptions for how interface layer  may communicate with number of hardware units  connected to interface . This communication may include exchanging information between interface layer  and number of hardware units  connected to interface . For example, without limitation, inertial measurement unit protocol  may provide a description for how interface layer  may communicate with inertial measurement unit  in number of hardware units . Global positioning system unit protocol  may provide a description for how interface layer  may communicate with global positioning system unit  in number of hardware units . Pulse position modulation unit protocol  may provide a description of how interface layer  may communicate with pulse position modulation unit  in number of hardware units . Sensor  unit protocol  may provide a description of how interface layer  may communicate with sensor unit  in number of hardware units .","In this illustrative example, interface layer  may use map  and descriptions  to determine which process in processes  to use to communicate with a particular hardware unit in number of hardware units . Information received from number of hardware units  may be placed in one of circular buffers . As depicted, circular buffers  may include, for example, without limitation, inertial measurement unit buffer , global positioning system unit buffer , pulse position modulation unit buffer , sensor  unit buffer , and\/or other suitable buffers.","As depicted in this example, communications process  may read the information stored in circular buffers . Further, communications process  may allow a control layer, such as control layer  in , to retrieve the information read from circular buffers . In some illustrative examples, communications process  may send the information to the control layer.","With reference now to , an illustration of a control layer is depicted in accordance with an advantageous embodiment. In this illustrative example, control layer  may be an example of one implementation of a portion of control layer  in . As depicted, an interface layer, such as interface layer  in , may exchange information with control layer  through communications medium .","Control layer  may include number of applications , memory buffer , and communications process . As depicted, communications process  may be used to exchange information with communications medium  using a protocol, such as first protocol  in . For example, without limitation, communications process  may retrieve information read from circular buffers  in interface layer  using communications process  in . Information retrieved by communications process  may be placed into memory buffer . In some illustrative examples, information retrieved by communications process  may be decoded and\/or parsed prior to placement in memory buffer .","In this illustrative example, number of applications  may include, for example, without limitation, actuation applications, control applications, navigation applications, guidance applications, testing applications, and\/or other suitable types of applications. Number of applications  may have access to memory buffer . In this manner, number of applications  may access information in memory buffer  for testing and\/or control of a robotic vehicle without having to access the hardware units of the robotic vehicle directly.","Thus, number of applications  and the protocol used by number of applications  may be kept separate from the hardware of the robotic vehicle and\/or the number of protocols used by the hardware of the robotic vehicle. This separation may allow modifications to be made to number of applications  without needing to take into account the requirements of the hardware and\/or software components of the robotic vehicle. The modifications may include adding, removing, and\/or changing portions of number of applications . For example, without limitation, a programmer may make modifications to number of applications  without having to take into account hardware units, such as number of hardware units  in .","As depicted in this example, mutual exclusion algorithm  may place limits on the accessibility of memory buffer . In other words, in this illustrative example, mutual exclusion algorithm  may lock memory buffer  such that only one application of number of applications  or communications process  may access at any given time.","In this manner, mutual exclusion algorithm  may lock memory buffer  during the reading of information stored in memory buffer  and\/or during the placing of information in memory buffer . Thus, mutual exclusion algorithm  may prevent inconsistencies from developing in the information placed into and\/or retrieved from memory buffer .","With reference now to , an illustration of a flowchart of a process for controlling robotic vehicles is depicted in accordance with an advantageous embodiment. The process illustrated in  may be implemented in robotic vehicle control environment  in .","The process may begin by processor system  identifying hardware  for robotic vehicle  to form an identification (operation ). Processor system  may then run interface layer  for hardware  for robotic vehicle  using the identification (operation ). Interface layer  may be configured to receive information  from hardware . Information  may be received using number of protocols  used by hardware .","Thereafter, processor system  may send information  received from hardware  to control layer  (operation ), with the process terminating thereafter. Control layer  may have number of applications  running in processor system  to control operation of robotic vehicle . In operation , information  may be received in control layer  using first protocol  used by number of applications .","With reference now to , an illustration of a flowchart of a process for accessing a number of hardware units is depicted in accordance with an advantageous embodiment. The process illustrated in  may be implemented in robotic vehicle control environment  in . This process may be implemented using interface layer  and number of hardware units . Further, this process may be implemented for number of hardware units  in robotic vehicle  in .","The process may begin by using map  in interface layer  to identify a location of number of hardware units  connected to processor system  (operation ). Thereafter, the process may use descriptions  to determine how to communicate with number of hardware units  (operation ).","Number of processes  may use map  and descriptions  to identify a process in number of processes  for communicating with number of hardware units  (operation ). The process identified may be a process in number of application programming interfaces . Further, the process identified in operation  may take into account number of protocols  for number of hardware units . In other words, the process identified may be used to communicate with a particular hardware unit in number of hardware units  using a corresponding protocol for the particular hardware unit in number of protocols .","Thereafter, the process may start the process identified to communicate with number of hardware units  using number of protocols  (operation ), with the process terminating thereafter.","With reference now to , an illustration of a flowchart of a process for retrieving and storing information from a number of hardware units is depicted in accordance with an advantageous embodiment. The process illustrated in  may be implemented in robotic vehicle control environment  in . This process may be implemented using interface layer  and number of hardware units . Further, this process may be implemented for number of hardware units  in robotic vehicle  in .","The process may begin by number of processes  in interface layer  accessing number of hardware units  using number of protocols  (operation ). Access to number of hardware units  may be achieved using a process, such as the process illustrated in . In other words, the process in number of processes  identified in operation  in  may be used to access number of hardware units . The process may then retrieve information  from number of hardware units  (operation ). Information  may be retrieved from, for example, without limitation, sensor system .","Thereafter, the process may place information  into number of buffers  (operation ), with the process terminating thereafter.","With reference now to , an illustration of a flowchart of a process for retrieving information from a number of buffers is depicted in accordance with an advantageous embodiment. The process illustrated in  may be implemented in robotic vehicle control environment  in . This process may be implemented using interface layer  and control layer  in . Further, this process may be implemented for robotic vehicle  in .","The process may begin by receiving a request to access number of buffers  in interface layer  (operation ). This request may be received from operator . In some advantageous embodiments, the request may be received automatically based on a recurring interval of time. The process may then use first communications process  to access number of buffers  over communications medium  using first protocol  (operation ). The process may then determine whether number of buffers  contains information  (operation ). If number of buffers  does not contain information , the process may terminate. Otherwise, the process may read information  stored in number of buffers  using second communications process  (operation ).","Thereafter, the process may send information  to control layer  over communications medium  using second communications process  and first protocol  (operation ). Control layer  may receive information  using first communications process  and first protocol  (operation ), with the process terminating thereafter.","With reference now to , an illustration of a flowchart of a process for sending information from an interface layer to a control layer based on an event is depicted in accordance with an advantageous embodiment. The process illustrated in  may be implemented in robotic vehicle control environment  in . This process may be implemented using interface layer  and control layer  in . Further, this process may be implemented for robotic vehicle  in .","The process may begin by determining whether an event has occurred (operation ). The event may be, for example, without limitation, a recurring time interval, a set time, the satisfying of a condition, and\/or some other suitable type of event. Second communications process  in interface layer  may monitor for the occurrence of the event. As one illustrative example, interface layer  may continuously retrieve information  from number of hardware units  and place information  into number of buffers . The event may be selected such that operator  may retrieve information  from number of buffers  based on the occurrence of the event. For example, without limitation, operator  may retrieve information  about every second.","If an event has occurred, the process may then read information  from number of buffers  (operation ). Thereafter, the process may send information  to control layer  over communications medium  using second communications process  and first protocol  (operation ), with the process returning to operation  thereafter. With reference again to operation , if an event has not occurred, the process returns to operation , as stated above.","With reference now to , an illustration of a flowchart of a process for retrieving and storing information in a control layer is depicted in accordance with an advantageous embodiment. The process illustrated in  may be implemented in robotic vehicle control environment  in . This process may be implemented using control layer  and interface layer  in . Further, this process may be implemented for robotic vehicle  in .","The process may begin by retrieving information  from number of buffers  in interface layer  (operation ). Information  may be retrieved by first communications process  using the process illustrated in .","Thereafter, the process may determine whether a memory buffer in control layer  is unlocked (operation ). This determination may be made by using, for example, without limitation, mutual exclusion algorithm  in . The memory buffer may take the form of memory buffer  in . If memory buffer  is locked, the process may then return to operation  until memory buffer  is unlocked. In some advantageous embodiments, control layer  may initiate a process to unlock memory buffer . If memory buffer  is unlocked, the process may then place information  retrieved in operation  into memory buffer  (operation ), with the process terminating thereafter.","With reference now to , an illustration of a flowchart of a process for running applications in a control layer is depicted in accordance with an advantageous embodiment. The process illustrated in  may be implemented in robotic vehicle control environment  in . This process may be implemented using control layer . Further, this process may be implemented for robotic vehicle  in .","The process may begin by running number of applications  in control layer  (operation ). The process may then determine whether a memory buffer, such as memory buffer  in , is unlocked (operation ). If memory buffer  is locked, the process may return to operation  until memory buffer  is unlocked. Otherwise, the process may access memory buffer  (operation ). Thereafter, the process may read information  from and\/or place information  into memory buffer  (operation ), with the process terminating thereafter.","The flowcharts and block diagrams in the different depicted embodiments illustrate the architecture, functionality, and operation of some possible implementations of apparatus and methods in different advantageous embodiments. In this regard, each block in the flowcharts or block diagrams may represent a module, segment, function, and\/or a portion of an operation or step. In some alternative implementations, the function or functions noted in the block may occur out of the order noted in the figures. For example, in some cases, two blocks shown in succession may be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. Also, other blocks may be added in addition to the illustrated blocks in a flowchart or block diagram.","Thus, the different advantageous embodiments may provide a method and apparatus for controlling robotic vehicles. In one advantageous embodiment, a processor system may identify hardware for a robotic vehicle to form an identification. The processor system may then run an interface layer for the hardware for the robotic vehicle using the identification. The interface layer may be configured to receive information from the hardware. The information may be received using a number of protocols for the hardware. The processor system may send the information received from the hardware to a control layer in which a number of applications running in the control layer may be configured to indirectly control operation of the robotic vehicle. The information may be received in the control layer using a protocol used by the number of applications.","Thus, a number of the advantageous embodiments provide a software architecture for controlling robotic vehicles. The layers in software architecture do not need to take into account the particular hardware components and\/or protocol for the robotic vehicles. As a result, the running of a number of applications and the development of the number of applications may not depend on the particular hardware components being used in controlling the robotic vehicle in different environments.","The different advantageous embodiments may take the form of an entirely hardware embodiment, an entirely software embodiment, or an embodiment containing both hardware and software elements. Some embodiments may be implemented in software, which includes, but is not limited to, forms such as, for example, firmware, resident software, and microcode.","Furthermore, the different embodiments may take the form of a computer program product accessible from a computer-usable or computer-readable medium providing program code for use by, or in connection with, a computer or any device or system that executes instructions. For the purposes of this disclosure, a computer-usable or computer-readable medium can generally be any tangible apparatus that can contain, store, communicate, propagate, or transport the program for use by, or in connection with, the instruction execution system, apparatus, or device.","The computer usable or computer-readable medium may be, for example, without limitation, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, or a propagation medium. Non-limiting examples of a computer-readable medium include a semiconductor or solid state memory, magnetic tape, a removable computer diskette, a random access memory (RAM), a read-only memory (ROM), a rigid magnetic disk, and an optical disk. Optical disks may include compact disk-read only memory (CD-ROM), compact disk-read\/write (CD-R\/W), and DVD.","Further, a computer-usable or computer-readable medium may contain or store a computer-readable or usable program code such that when the computer-readable or usable program code is executed on a computer, the execution of this computer-readable or usable program code causes the computer to transmit another computer-readable or usable program code over a communications link. This communications link may use a medium that is, for example, without limitation, physical or wireless.","A data processing system suitable for storing and\/or executing computer-readable or computer-usable program code will include one or more processors coupled directly or indirectly to memory elements through a communications fabric, such as a system bus. The memory elements may include local memory employed during actual execution of the program code, bulk storage, and cache memories which provide temporary storage of at least some computer-readable or computer-usable program code to reduce the number of times code may be retrieved from bulk storage during execution of the code.","Input\/output or I\/O devices can be coupled to the system either directly or through intervening I\/O controllers. These devices may include, for example, without limitation, keyboards, touch screen displays, and pointing devices. Different communications adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Non-limiting examples are modems and network adapters and are just a few of the currently available types of communications adapters.","The description of the different advantageous embodiments has been presented for purposes of illustration and description, and it is not intended to be exhaustive or limited to the embodiments in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. Further, different advantageous embodiments may provide different advantages as compared to other advantageous embodiments. The embodiment or embodiments selected are chosen and described in order to best explain the principles of the embodiments, the practical application, and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The novel features believed characteristic of the advantageous embodiments are set forth in the appended claims. The advantageous embodiments, however, as well as a preferred mode of use, further objectives, and advantages thereof, will best be understood by reference to the following detailed description of an advantageous embodiment of the present disclosure when read in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 14"}]},"DETDESC":[{},{}]}
