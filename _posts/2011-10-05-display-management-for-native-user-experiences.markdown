---
title: Display management for native user experiences
abstract: In some remote application execution environments, a client device (e.g., to which application output is sent and where user interaction is performed) may include native control elements for touch input such as virtual keyboards, virtual pickers and the like. When the server device detects an editable/control field of a remoted application receiving focus, the server may instruct the client to activate a native control element for user interaction. The client may determine the manner in which to modify an application display to resolve potential display conflicts. For example, a native control element may obscure or hide portions of the remoted application on the client display. Modifying the application display may include panning the display, zooming into or out of portions of the display, adapting the display for scrolling and the like. The remote computing device may also transmit values for populating a native control element.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09400585&OS=09400585&RS=09400585
owner: Citrix Systems, Inc.
number: 09400585
owner_city: Fort Lauderdale
owner_country: US
publication_date: 20111005
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of priority from U.S. Provisional Application No. 61\/389,975, entitled \u201cNATIVE USER EXPERIENCE FOR REMOTE APPLICATIONS DISPLAYED ON MOBILE DEVICES,\u201d and filed on Oct. 5, 2010. The content of the above noted application is hereby incorporated by reference in its entirety.","Aspects described herein generally relate to displaying remotely executing applications on devices. For example, aspects relate to providing a native application interaction experience on a device.","Devices, including stationary devices such as personal computers and workstations and mobile devices such as smart phones and tablet computers, may execute operating systems and applications that are touch-friendly (e.g., compatible with touch input). These operating systems and applications often allow users to interact with menus and applications designed to accommodate using a touch screen as an input device. For example, some applications may be designed to handle a touch screen as the primary input such that when an editable control or field is selected or receives focus, the event may cause a virtual keyboard to appear.  illustrates an example native mobile device application that permits a user to enter information into an editable field via a virtual keyboard displayed on the screen, and permits a user to select from a drop down box (e.g. combo box) using a virtual selector or picker control. In each of these examples, the touch screen of the mobile device may be used as the input device.","In some instances, an application may be displayed on a device that is not formatted for touch-screen input. For example, in some cases an application remotely executing on a server may be remotely displayed on a device as shown in . In , a virtual keyboard is displayed over the editable control or field such that the user might not be able to see the control while the user is trying to input data into the control, thus making user input difficult. Additionally, the user may be required to manually activate the native control element of the client device, instead of being provided a native control element that is automatically triggered in response to selection of an editable area. Other input and viewability issues might also arise from touch compatible input elements being displayed on a remote device.","The following presents a simplified summary of the disclosure in order to provide a basic understanding of some aspects. It is not intended to identify key or critical elements of the disclosure or to delineate the scope of the disclosure. The following summary merely presents some concepts of the disclosure in a simplified form as a prelude to the more detailed description provided below.","According to one or more aspects, a display of a remoted application and native control elements may be managed so that one or more portions of the remoted application display are not obscured or hidden by active native control elements. In one example, a remote computing device executing the application for a client device may receive a notification when the application or a control element within the application receives focus. Upon receiving the notification, the remote computing device may notify the client device to modify the display of the application as necessary (e.g., to reflect the focus) and\/or to determine a type of control element corresponding to the control element within the remoted application receiving focus. Additionally or alternatively, the remote computing device may instruct the client device to activate a native control element corresponding to the determined type of control element. The client device may then identify a native control element matching the determined type or category of control element and active the native control element. In some arrangements, the client device may further determine whether the native control element will overlap or otherwise obscure one or more portions of the remoted application display when activated. If so, the client device may modify the local display to avoid obscuring the remoted application display or the area of focus. Modification of the application display may include panning, zooming, scrolling and the like.","According to another aspect, the client device may transmit confirmation and update messages to the remote computing device. The confirmation and update messages may include status information for the native control element and notifications of user interaction with the native control element.","In some arrangements, the remote computing device executing the application may determine whether the native control element will obscure the application display and determine a manner in which to modify the local display of the client device.","According to another aspect, a remote computing device executing the application may transmit values of an application control element receiving focus to the client device for populating the native control element. In one example, if the application control element receiving focus is a drop down menu, the values within the drop down menu may be transmitted to the client device for display in a native picker control element of the client device.","According to yet another aspect, if a client device does not have native control elements, the remote computing device may generate a virtual control element and remote the control element to the client device similar to remoting an application to which input or interaction is to be registered. For example, if the client device is not capable of showing a local software keyboard, then an in-session keyboard (e.g., remoted by the server) may be displayed instead. The display of the in-session keyboard may be remoted (e.g., graphics transmitted) to the client device for use thereon.","The details of these and other embodiments of the present disclosure are set forth in the accompanying drawings and the description below. Other features and advantages of the disclosure will be apparent from the description and drawings, and from the claims.","Applications may be executed remotely by a first computing device for use at a second computing device (e.g., a client device). By using a remoted application, the client device may use processing power by the first computing device to execute the functionality and features of the remoted application. Additionally, data and applications may be served at a location that is accessible from multiple remote locations (e.g., through a public and\/or private network).",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 1A","b":["101","102","102","102","106","106","106","102","106"]},"In one example, the computing environment  can include an appliance (e.g., a device or apparatus) installed between the server(s)  and client machine(s) . This appliance can manage client\/server connections, and in some cases can load balance client connections amongst a plurality of backend servers.","The client machine(s)  may, in some examples, be a single client machine  or a single group of client machines , while server(s)  may be a single server  or a single group of servers . In one example, a single client machine  may communicate with more than one server , while in another example, a single server  may communicate with more than one client machine . In yet another example, a single client machine  might only communicate with a single server .","A client machine  may, in some examples, be referenced by any one of the following terms: client machine(s) ; client(s); client computer(s); client device(s); client computing device(s); local machine; remote machine; client node(s); endpoint(s); endpoint node(s); or a second machine. The server , in some examples, may be referenced by any one of the following terms: server(s), local machine; remote machine; server farm(s), host computing device(s), or a first machine(s).","According to one or more arrangements, the client machine  may be a virtual machine C. The virtual machine C may be any virtual machine, while in some configurations, the virtual machine C may be any virtual machine managed by a hypervisor developed by XenSolutions, Citrix Systems, IBM, VMware, or any other hypervisor. In other examples, the virtual machine C can be managed by any hypervisor, while in still other examples, the virtual machine C can be managed by a hypervisor executing on a server  or a hypervisor executing on a client .","The client machine  may, in some examples, execute, operate or otherwise provide an application such as: software; a program; executable instructions; a virtual machine; a hypervisor; a web browser; a web-based client; a client-server application; a thin-client computing client; an ActiveX control; a Java applet; software related to voice over internet protocol (VoIP) communications like a soft IP telephone; an application for streaming video and\/or audio; an application for facilitating real-time-data communications; a HTTP client; a FTP client; an Oscar client; a Telnet client; or any other set of executable instructions. Accordingly, in at least some arrangements, remoting an application may include a client device  receiving and displaying application output generated by an application remotely executing on a server  or other remotely located machine or computing device. For example, the client device  may display the application output in an application window, a browser, or other output window. In one example, the application is a desktop, while in other examples the application is an application that generates a desktop. A desktop may include a graphical shell providing a user interface for an instance of an operating system in which local and\/or remote applications can be integrated. Applications, as used herein, are programs that execute after an instance of an operating system (and, optionally, also the desktop) has been loaded. Each instance of the operating system may be physical (e.g., one operating system per device) or virtual (e.g., many instances of an OS running on a single device). Each application may be executed on a local device, or executed on a remotely located device (e.g., remoted). Applications may be remoted in multiple ways. In one example, applications may be remoted in a seamless manner in which windows are created on the client device so as to make the application display seem as if it were running locally on the client device and the desktop thereof. In another example, a remoted application may be provided in a windowed mode where a desktop is remoted to the client device and the application is displayed as an application executing in the remoted desktop. Various other remoting methods and techniques may also be implemented or used.","According to some aspects, the server  may execute a remote presentation client or other client or program that uses a thin-client or remote-display protocol to capture display output generated by an application executing on a server  and to subsequently transmit the application display output to a remote client . The thin-client or remote-display protocol can be any one of the following protocols (or other suitable protocol): the Independent Computing Architecture (ICA) protocol manufactured by Citrix Systems, Inc. of Ft. Lauderdale, Fla.; or the Remote Desktop Protocol (RDP) manufactured by the Microsoft Corporation of Redmond, Wash.","The computing environment can include more than one server A-N such that the servers A-N are logically and\/or physically grouped together into a server farm . In one example, the server farm  can include servers  that are geographically dispersed and logically grouped together in a server farm , or, in another example, servers  that are located proximate to each other and logically grouped together in a server farm . Geographically dispersed servers A-N within a server farm  can, in some examples, communicate using a WAN, MAN, or LAN, where different geographic regions can be characterized as: different continents; different regions of a continent; different countries; different states; different cities; different zip codes; different neighborhoods; different campuses; different rooms; or any combination of the preceding geographical locations. In some examples, the server farm  may be administered as a single entity, while in other examples, the server farm  can include multiple server farms .","A server farm  may include servers  that execute a substantially similar type of operating system platform (e.g., WINDOWS NT, manufactured by Microsoft Corp. of Redmond, Wash., UNIX, LINUX, or SNOW LEOPARD.) In other examples, the server farm  can include a first group of servers  that execute a first type of operating system platform, and a second group of servers  that execute a second type of operating system platform. The server farm , in other examples, can include servers  that execute different types of operating system platforms.","The server , in some examples, may be of any server type. In other examples, the server  can be any of the following server types: a file server; an application server; a web server; a proxy server; an appliance; a network appliance; a gateway; an application gateway; a gateway server; a virtualization server; a deployment server; a SSL VPN server; a firewall; a web server; an application server or as a master application server; a server  executing an active directory; or a server  executing an application acceleration program that provides firewall functionality, application functionality, or load balancing functionality. In some examples, a server  may be a RADIUS server that includes a remote authentication dial-in user service. In arrangements where the server  includes an appliance, the server  may be an appliance manufactured by any one of the following manufacturers: the Citrix Application Networking Group; Silver Peak Systems, Inc; Riverbed Technology, Inc.; F5 Networks, Inc.; or Juniper Networks, Inc. Some examples include a first server A that receives requests from a client machine , forwards the request to a second server B, and responds to the request generated by the client machine  with a response from the second server B. The first server A may acquire an enumeration of applications available to the client machine  as well as address information associated with an application server  hosting an application identified within the enumeration of applications. The first server A may then present a response to the client's request using a web interface, and communicate directly with the client  to provide the client  with access to an identified application.","The server  may, in some examples, execute any one of the following applications: a thin-client application using a thin-client protocol to transmit application display data to a client; a remote display presentation application; any portion of the CITRIX ACCESS SUITE by Citrix Systems, Inc. like the METAFRAME, CITRIX PRESENTATION SERVER, CITRIX XENAPP or CITRIX XENDESKTOP server; MICROSOFT WINDOWS Terminal Services manufactured by the Microsoft Corporation; or an ICA client, developed by Citrix Systems, Inc. Another example includes a server  that is an application server such as: an email server that provides email services such as MICROSOFT EXCHANGE manufactured by the Microsoft Corporation; a web or Internet server; a desktop sharing server; a collaboration server; or any other type of application server. Still other examples include a server  that executes any one of the following types of hosted servers applications: GOTOMEETING provided by Citrix Online Division, Inc.; WEBEX provided by WebEx, Inc. of Santa Clara, Calif.; or Microsoft Office LIVE MEETING provided by Microsoft Corporation.","Client machines  may, in some examples, be a client node that seeks access to resources provided by a server . In other examples, the server  may provide clients  or client nodes with access to hosted resources. The server , in some examples, functions as a master node such that it communicates with one or more clients  or servers . In some examples, the master node may identify and provide address information associated with a server  hosting a requested application, to one or more clients  or servers . In still other examples, the master node may be a server farm , a client , a cluster of client nodes , or an appliance.","One or more clients  and\/or one or more servers  may transmit data over a network  installed between machines and appliances within the computing environment . The network  may comprise one or more sub-networks, and may be installed between any combination of the clients , servers , computing machines and appliances included within the computing environment . In some examples, the network  may be: a local-area network (LAN); a metropolitan area network (MAN); a wide area network (WAN); a primary network  comprised of multiple sub-networks  located between the client machines  and the servers ; a primary public network  with a private sub-network ; a primary private network  with a public sub-network ; or a primary private network  with a private sub-network . Still further examples include a network  that may be any of the following network types: a point to point network; a broadcast network; a telecommunications network; a data communication network; a computer network; an ATM (Asynchronous Transfer Mode) network; a SONET (Synchronous Optical Network) network; a SDH (Synchronous Digital Hierarchy) network; a wireless network; a wireline network; or a network  that includes a wireless link where the wireless link may be an infrared channel or satellite band. The network topology of the network  may differ within different examples, possible network topologies include: a bus network topology; a star network topology; a ring network topology; a repeater-based network topology; or a tiered-star network topology. Additional examples may include a network  of mobile telephone networks that use a protocol to communicate among mobile devices, where the protocol may be any one of the following: AMPS; TDMA; CDMA; GSM; GPRS UMTS; or any other protocol able to transmit data among mobile devices.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 1B","FIG. 1A"],"b":["100","102","106","100","100","150","121","122","128","123","124","124","116","118","128","120","123","126","127","123","130","130"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 1C","FIG. 1A"],"b":["100","102","106","100","100","150","170","130","170","121","121","130","122","140","121","103"]},"Examples of the computing machine  may include a central processing unit  characterized by any one of the following component configurations: logic circuits that respond to and process instructions fetched from the main memory unit ; a microprocessor unit, such as: those manufactured by Intel Corporation; those manufactured by Motorola Corporation; those manufactured by Transmeta Corporation of Santa Clara, Calif.; the RS\/6000 processor such as those manufactured by International Business Machines; a processor such as those manufactured by Advanced Micro Devices; or any other combination of logic circuits. Still other examples of the central processing unit  may include any combination of the following: a microprocessor, a microcontroller, a central processing unit with a single processing core, a central processing unit with two processing cores, or a central processing unit with more than one processing core.","While  illustrates a computing device  that includes a single central processing unit , in some examples the computing device  may include one or more processing units . In these examples, the computing device  may store and execute firmware or other executable instructions that, when executed, direct the one or more processing units  to simultaneously execute instructions or to simultaneously execute instructions on a single piece of data. In other examples, the computing device  may store and execute firmware or other executable instructions that, when executed, direct the one or more processing units to each execute a section of a group of instructions. For example, each processing unit  may be instructed to execute a portion of a program or a particular module within a program.","In some examples, the processing unit  may include one or more processing cores. For example, the processing unit  may have two cores, four cores, eight cores, etc. In one example, the processing unit  may comprise one or more parallel processing cores. The processing cores of the processing unit , may in some examples access available memory as a global address space, or in other examples, memory within the computing device  may be segmented and assigned to a particular core within the processing unit . In one example, the one or more processing cores or processors in the computing device  may each access local memory. In still another example, memory within the computing device  may be shared amongst one or more processors or processing cores, while other memory may be accessed by particular processors or subsets of processors. In examples where the computing device  includes more than one processing unit, the multiple processing units may be included in a single integrated circuit (IC). These multiple processors, in some examples, may be linked together by an internal high speed bus, which may be referred to as an element interconnect bus.","In examples where the computing device  includes one or more processing units , or a processing unit  including one or more processing cores, the processors may execute a single instruction simultaneously on multiple pieces of data (SIMD), or in other examples may execute multiple instructions simultaneously on multiple pieces of data (MIMD). In some examples, the computing device  may include any number of SIMD and MIMD processors.","The computing device , in some examples, may include a graphics processor or a graphics processing unit (Not Shown). The graphics processing unit may include any combination of software and hardware, and may further input graphics data and graphics instructions, render a graphic from the inputted data and instructions, and output the rendered graphic. In some examples, the graphics processing unit may be included within the processing unit . In other examples, the computing device  may include one or more processing units , where at least one processing unit  is dedicated to processing and rendering graphics.","In one example, computing machine  may include a central processing unit  that communicates with cache memory  via a secondary bus also known as a backside bus, while another example of the computing machine  includes a central processing unit  that communicates with cache memory via the system bus . The local system bus  may, in some examples, also be used by the central processing unit to communicate with more than one type of I\/O device A-N. In some examples, the local system bus  may be any one of the following types of buses: a VESA VL bus; an ISA bus; an EISA bus; a MicroChannel Architecture (MCA) bus; a PCI bus; a PCI-X bus; a PCI-Express bus; or a NuBus. Alternatively or additionally, computing machine  may include an I\/O device A-N that is a video display  that communicates with the central processing unit . Still other versions of the computing machine  include a processor  connected to an I\/O device A-N via any one of the following connections: HyperTransport, Rapid I\/O, or InfiniBand. Further examples of the computing machine  include a processor  that communicates with one I\/O device A using a local interconnect bus and a second I\/O device B using a direct connection.","The computing device , in some examples, includes a main memory unit  and cache memory . The cache memory  may be any memory type, and in some examples may be any one of the following types of memory: SRAM; BSRAM; or EDRAM. Other examples include cache memory  and a main memory unit  that may be any one of the following types of memory: Static random access memory (SRAM), Burst SRAM or SynchBurst SRAM (BSRAM); Dynamic random access memory (DRAM); Fast Page Mode DRAM (FPM DRAM); Enhanced DRAM (EDRAM), Extended Data Output RAM (EDO RAM); Extended Data Output DRAM (EDO DRAM); Burst Extended Data Output DRAM (BEDO DRAM); Enhanced DRAM (EDRAM); synchronous DRAM (SDRAM); JEDEC SRAM; PC100 SDRAM; Double Data Rate SDRAM (DDR SDRAM); Enhanced SDRAM (ESDRAM); SyncLink DRAM (SLDRAM); Direct Rambus DRAM (DRDRAM); Ferroelectric RAM (FRAM); or any other type of memory. Further examples include a central processing unit  that may access the main memory  via: a system bus ; a memory port ; or any other connection, bus or port that allows the processor  to access memory .","In one or more arrangements, computing device  may provide support for any one of the following installation devices : a CD-ROM drive, a CD-R\/RW drive, a DVD-ROM drive, tape drives of various formats, USB device, a bootable medium, a bootable CD, a bootable CD for GNU\/Linux distribution such as KNOPPIX\u00ae, a hard-drive or any other device suitable for installing applications or software. Applications may, in some examples, include a client agent , or any portion of a client agent . The computing device  may further include a storage device  that may be either one or more hard disk drives, or one or more redundant arrays of independent disks; where the storage device is configured to store an operating system, software, programs applications, or at least a portion of the client agent . Computing device  may also include an installation device  that is used as the storage device .","The computing device  may further include a network interface  to interface to a Local Area Network (LAN), Wide Area Network (WAN) or the Internet through a variety of connections including, but not limited to, standard telephone lines, LAN or WAN links (e.g., 802.11, T1, T3, 56 kb, X.25, SNA, DECNET), broadband connections (e.g., ISDN, Frame Relay, ATM, Gigabit Ethernet, Ethernet-over-SONET), wireless connections, or some combination of any or all of the above. Connections may also be established using a variety of communication protocols (e.g., TCP\/IP, IPX, SPX, NetBIOS, Ethernet, ARCNET, SONET, SDH, Fiber Distributed Data Interface (FDDI), RS232, RS485, IEEE 802.11, IEEE 802.11a, IEEE 802.11b, IEEE 802.11g, CDMA, GSM, WiMax and direct asynchronous connections). One version of the computing device  includes a network interface  able to communicate with additional computing devices \u2032 via any type and\/or form of gateway or tunneling protocol such as Secure Socket Layer (SSL) or Transport Layer Security (TLS), or the Citrix Gateway Protocol manufactured by Citrix Systems, Inc. Versions of the network interface  may comprise any one of: a built-in network adapter; a network interface card; a PCMCIA network card; a card bus network adapter; a wireless network adapter; a USB network adapter; a modem; or any other device suitable for interfacing the computing device  to a network capable of communicating and performing the methods and systems described herein.","According to one or more aspects, computing device  may include any one of the following I\/O devices A-N: a keyboard ; a pointing device ; mice; trackpads; an optical pen; trackballs; microphones; drawing tablets; video displays; speakers; inkjet printers; laser printers; and dye-sublimation printers; or any other input\/output device able to perform the methods and systems described herein. An I\/O controller  may in some examples connect to multiple I\/O devices A-N to control the one or more I\/O devices. In some examples, I\/O devices A-N may be configured to provide storage or an installation medium , while others may provide a universal serial bus (USB) interface for receiving USB storage devices such as the USB Flash Drive line of devices manufactured by Twintech Industry, Inc. Additionally or alternatively, computing device  may include I\/O device  that may be a bridge between the system bus  and an external communication bus, such as: a USB bus; an Apple Desktop Bus; an RS-232 serial connection; a SCSI bus; a FireWire bus; a FireWire 800 bus; an Ethernet bus; an AppleTalk bus; a Gigabit Ethernet bus; an Asynchronous Transfer Mode bus; a HIPPI bus; a Super HIPPI bus; a SerialPlus bus; a SCI\/LAMP bus; a FibreChannel bus; or a Serial Attached small computer system interface bus.","In some examples, the computing machine  may connect to multiple display devices A-N, in other examples the computing device  may connect to a single display device , while in still other examples the computing device  connects to display devices A-N that are the same type or form of display, or to display devices that are different types or forms. Examples of the display devices A-N may be supported and enabled by the following: one or multiple I\/O devices A-N; the I\/O controller ; a combination of I\/O device(s) A-N and the I\/O controller ; any combination of hardware and software able to support a display device A-N; any type and\/or form of video adapter, video card, driver, and\/or library to interface, communicate, connect or otherwise use the display devices A-N. The computing device  may in some examples be configured to use one or multiple display devices A-N, these configurations include: having multiple connectors to interface to multiple display devices A-N; having multiple video adapters, with each video adapter connected to one or more of the display devices A-N; having an operating system configured to support multiple displays A-N; using circuits and software included within the computing device  to connect to and use multiple display devices A-N; and executing software on the main computing device  and multiple secondary computing devices to enable the main computing device  to use a secondary computing device's display as a display device A-N for the main computing device . Still other examples of the computing device  may include multiple display devices A-N provided by multiple secondary computing devices and connected to the main computing device  via a network.","According to one or more arrangements, the computing machine  may execute any operating system including: versions of the MICROSOFT WINDOWS operating systems such as WINDOWS 3.x; WINDOWS 95; WINDOWS 98; WINDOWS 2000; WINDOWS NT 3.51; WINDOWS NT 4.0; WINDOWS CE; WINDOWS XP; and WINDOWS VISTA; the different releases of the Unix and Linux operating systems; any version of the MAC OS manufactured by Apple Computer; OS\/2, manufactured by International Business Machines; any embedded operating system; any real-time operating system; any open source operating system; any proprietary operating system; any operating systems for mobile computing devices; or any other operating system. In some examples, the computing machine  may execute multiple operating systems. For example, the computing machine  may execute PARALLELS or another virtualization platform that may execute or manage a virtual machine executing a first operating system, while the computing machine  executes a second operating system different from the first operating system.","The computing machine  may be embodied in any one of the following computing devices: a computing workstation; a desktop computer; a laptop or notebook computer; a server; a handheld computer (e.g., a tablet computer such as the iPad and iPad 2 manufactured by Apple Computer); a mobile telephone; a portable telecommunication device; a media playing device; a gaming system; a mobile computing device; a netbook; a device of the IPOD family of devices manufactured by Apple Computer; any one of the PLAYSTATION family of devices manufactured by the Sony Corporation; any one of the Nintendo family of devices manufactured by Nintendo Co; any one of the XBOX family of devices manufactured by the Microsoft Corporation; or any other type and\/or form of computing, telecommunications or media device that is capable of communication and that has sufficient processor power and memory capacity to perform the methods and systems described herein. In other examples the computing machine  may be a mobile device such as any one of the following mobile devices: a JAVA-enabled cellular telephone or personal digital assistant (PDA), such as the i55sr, i58sr, i85s, i88s, i90c, i95cl, or the im1100, all of which are manufactured by Motorola Corp; the 6035 or the 7135, manufactured by Kyocera; the i300 or i330, manufactured by Samsung Electronics Co., Ltd; the TREO 180, 270, 600, 650, 680, 700p, 700w, or 750 smart phone manufactured by Palm, Inc; any computing device that has different processors, operating systems, and input devices consistent with the device; or any other mobile computing device capable of performing the methods and systems described herein. In still other examples, the computing device  may be any one of the following mobile computing devices: any one series of Blackberry, or other handheld device manufactured by Research In Motion Limited; the iPhone manufactured by Apple Computer; Palm Pre; a Pocket PC; a Pocket PC Phone; or any other handheld mobile device.","In some examples, the computing device  may have different processors, operating systems, and input devices consistent with the device. For example, in one example, the computing device  is a TREO 180, 270, 600, 650, 680, 700p, 700w, or 750 smart phone manufactured by Palm, Inc. In some of these examples, the TREO smart phone is operated under the control of the PalmOS operating system and includes a stylus input device as well as a five-way navigator device.","According to one or more configurations, the computing device  may be a mobile device, such as a JAVA-enabled cellular telephone or personal digital assistant (PDA), such as the i55sr, i58sr, i85s, i88s, i90c, i95cl, or the im1100, all of which are manufactured by Motorola Corp. of Schaumburg, Ill., the 6035 or the 7135, manufactured by Kyocera of Kyoto, Japan, or the i300 or i330, manufactured by Samsung Electronics Co., Ltd., of Seoul, Korea. In some examples, the computing device  is a mobile device manufactured by Nokia of Finland, or by Sony Ericsson Mobile Communications AB of Lund, Sweden.","In some examples, the computing device  may be a Blackberry handheld or smart phone, such as the devices manufactured by Research In Motion Limited, including the Blackberry 7100 series, 8700 series, 7700 series, 7200 series, the Blackberry 7520, or the Blackberry Pearl 8100. In yet other examples, the computing device  is a smart phone, Pocket PC, Pocket PC Phone, or other handheld mobile device supporting Microsoft Windows Mobile Software. Moreover, the computing device  may be any workstation, desktop computer, laptop or notebook computer, server, handheld computer, mobile telephone, any other computer, or other form of computing or telecommunications device that is capable of communication and that has sufficient processor power and memory capacity to perform the operations described herein.","Additionally or alternatively, the computing device  may be a digital audio player. For example, the computing device  is a digital audio player such as the Apple IPOD, IPOD Touch, IPOD NANO, and IPOD SHUFFLE lines of devices, manufactured by Apple Computer of Cupertino, Calif. In another of these examples, the digital audio player may function as both a portable media player and as a mass storage device. In other examples, the computing device  is a digital audio player such as the DigitalAudioPlayer Select MP3 players, manufactured by Samsung Electronics America, of Ridgefield Park, N.J., or the Motorola m500 or m25 Digital Audio Players, manufactured by Motorola Inc. of Schaumburg, Ill. In still other examples, the computing device  is a portable media player, such as the Zen Vision W, the Zen Vision series, the Zen Portable Media Center devices, or the Digital MP3 line of MP3 players, manufactured by Creative Technologies Ltd. In yet other examples, the computing device  is a portable media player or digital audio player supporting file formats including, but not limited to, MP3, WAV, M4A\/AAC, WMA Protected AAC, RIFF, Audible audiobook, Apple Lossless audio file formats and .mov, .m4v, and .mp4 MPEG-4 (H.264\/MPEG-4 AVC) video file formats.","The computing device  may, alternatively or additionally, include a combination of devices, such as a mobile phone combined with a digital audio player or portable media player. In one of these examples, the computing device  is a Motorola RAZR or Motorola ROKR line of combination digital audio players and mobile phones. In another of these examples, the computing device  is an iPhone smartphone, manufactured by Apple Computer of Cupertino, Calif.","Application Display Management","Referring now to , the block diagram illustrates an example system for displaying a plurality of resources on one or more display devices. The system includes a mobile computing device  that may communicate with one or more external display devices -. The example in  shows a mobile computing device  with a native display , although devices without native displays may also be used. The mobile computing device  executes a plurality of resources -(collectively, ). The window management system  and virtual graphics driver  manage the locations and sizes of the display of output data associated with each of the plurality of resources in a user-configurable display layout. In many examples, the mobile computing device  transmits the output data associated with each of the plurality of resources  to an external display device . In some of these examples, the mobile computing device  transmits the output data upon establishing a connection with the external display device . Alternatively or additionally, the mobile computing device  transmits the output data associated with each of the plurality of resources  to the device's native display . For example, the mobile computing device  might only transmit the output data to the device's native display or only transmit the output data to one or more of the external display devices -. In some examples, the mobile computing device  transmits the output data associated with certain of the plurality of resources  to the native display  and transmits the output data associated with other ones of the plurality of resources  to the external display devices -","Mobile computing device  may be configured to execute a plurality of resources . In one example, the mobile computing device  is a client  as described above in connection with . In another example, the mobile computing device  displays the output data associated with a resource in a plurality of resources -executed by the mobile computing device . In some examples, the mobile computing device  displays the output data associated with each of the plurality of resources .","A resource in the plurality of resources  may include, without limitation, a data file, an executable file, configuration files, an application, a desktop environment (which may itself include a plurality of applications for execution by the user), a computing environment image (such as a virtual machine image), and\/or operating system software or other applications needed to execute a computing environment image.","According to one or more arrangements, mobile computing device  includes a window management service  allowing an external display device  to display the output data associated with each of a plurality of resources  executed on the mobile computing device . The window management service  may also allow multiple resources running on the mobile computing device  to be viewed on an external display device  or the native display  at substantially the same time, as opposed to allowing the output of one resource  to be viewed exclusively on the native display  or external display device . In one example, the window management service , in conjunction with a virtual graphics driver , manages the display layout of the windows displayed on the external display device  and the native display . In some examples, the virtual graphics driver  is a driver-level component that manages a virtual screen frame buffer storing output data that will be displayed by the native display  on the mobile computing device  or an external display device . The window management service , in conjunction with the virtual graphics driver , may further manage the boundaries and size of a screen space used to display output data and on which display device the output data is displayed.","In some examples, an external display device  receives output data associated with each of the plurality of resources  and displays the output data in a user-configurable display layout. In one example, the external display device  includes a dock to which the mobile computing device  connects. In another example, the external display device  includes a receiver for communicating with the mobile computing device  wirelessly, for example, via BLUETOOTH, Wi-Fi or other networking protocols, as described above in connection with . In still another example, the external display device  may be a display device  as described above in connection with .","Referring now to , the block diagram illustrates an example system for mapping the display of one or more resources  of the mobile computing device  on one or more display devices  and\/or . In various examples, the window management service  manages a virtual screen space . The virtual screen space  may map to the native display  and one or more external display devices . The window management service  may position output data associated with the user interfaces of one or more resources  on the virtual screen space  to specify where each user interface will be displayed. In some examples, the window management service  positions the output data according to a user preference. In additional examples, the window management service  positions the output data according to a policy. In various examples, the window management service  positions the output data based on the resource  associated with the output data.","The window management service  communicates with the virtual graphics driver  to transmit output data associated with user interfaces of resources  to the native display  and one or more external display devices . In some examples, the window management service  may transmit output data and associated coordinates from the virtual screen space  to the virtual graphics driver . In various examples, the virtual graphics driver  stores the output data in a virtual screen frame buffer. In many examples, the virtual graphics driver  transmits the entries in the virtual screen frame buffer to the native display  and external display devices . In many examples, the virtual graphics driver  transmits an entry in the virtual screen frame buffer to a native display  or an external display device  based on the position of the entry in the frame buffer.","Referring now to , the user interface illustrates an example user-configurable display layout in which the external display device  displays the output data of the resources . In this example, the output data of the resources  is displayed in a grid display layout. The grid display layout may include one or more cells in an arrangement. A cell may display output data associated with a resource. In some examples, more than one cell displays output data associated with the same resource.","Additionally, in some examples, the cells are uniformly sized, whereas in other examples, the cells have different sizes. The cells may be arranged in any configuration. In some examples, the cells may be arranged in rows, columns, or both. A cell may have a descriptor associated with the cell's position in the grid. The descriptor may indicate the position of a cell within a row. In the example depicted in , the cell for resource may have the descriptor \u201c-,\u201d the cell for resource may have the descriptor \u201c-,\u201d the cell for resource may have the descriptor \u201c-,\u201d the cell for resource may have the descriptor \u201c-,\u201d and the cell for resource may have the descriptor \u201c-.\u201d In other examples, the cells may be numbered, e.g. \u201cCell ,\u201d \u201cCell ,\u201d etc. However, any system of choosing descriptors known to those of ordinary skill in the art may be used.","In various examples, the window management service  configures a grid display layout according to the resources  being displayed on the native display  or the external display device . In some examples, the service  configures a grid display layout according to the number of resources  being displayed. In other examples, the service  configures a grid display layout according to the size or amount of content in the user interfaces of the resources . For example, if an external display device  will display four resources with comparable amounts of content, the window management service  may configure a grid display layout with four uniform cells. In another example, if an external display device  will display four resources and one resource includes three times as much content as the others, the window management service  may configure a grid display layout with three uniform cells in a first row and a single cell in a second row. The single cell in the second row may be three times as wide as the cells in the first row. In various examples, the window management service  may configure a grid display layout to reserve a cell for displaying information about the resources being displayed, such as a menu of the resources. In many examples, the window management service  may configure a grid display layout to reserve a cell for allowing a user to configure the grid display layout.","Referring now to , a user interface illustrates an example user-configurable display layout providing a dynamic display layout in which the external display device  displays the output data associated with the plurality of resources . In this example, windows on the external display device  that display output data for resources  may be dynamically positioned and sized. The window management service  may position a user interface for a resource at a default position and with a default size chosen according to a policy, the resource , or any other method. The window management service  may order overlapping user interfaces such that higher-order user interfaces obscure lower-order user interfaces. The window management service  may transmit output data to the virtual graphics driver  reflecting the obfuscation. The user may re-position or re-size a window by, for example, clicking and dragging the window or a window edge. In these examples, the virtual graphics driver  may detect the user's change to the window, and transmit information about the user's change to the window management service . The window management service  may process the change and transmit updated output data to the virtual graphics driver . In some examples, the user moves the user interface for a resource  to any location on a native display  or external display device . In some examples, the user moves the user interface for a resource  to a different display device. In some examples, the updated output data indicates that one user interface's size has been increased or location has been adjusted to obscure another user interface. In other examples, the updated output data indicates that one user interface's size has been decreased or location has been adjusted such that more of another user interface shall be visible.","Referring now to , a block diagram illustrates example virtual screen spaces  provided by a mobile computing device attached to one or more external display devices. As shown in , the mobile computing device  includes a virtual graphics driver  and a virtual screen . The virtual screen  includes a plurality of virtual screen spaces  and -. Virtual screen space  may be a native display screen space for the native display  on the mobile computing device . The other virtual screen spaces -may be extended screen spaces that correspond to the displays of external display devices . The window management service  and virtual graphics driver  manage the virtual screen . In one example, the virtual graphics driver  uses a virtual screen frame buffer to manage the mobile computing device's native display  and change the native display's  screen resolution. In another example, the virtual graphics driver  uses a virtual screen frame buffer to manage an extended screen space  and to change a resolution of the extended screen .","In some examples, the virtual graphics driver  allocates and manages a plurality of virtual screen spaces , -and virtual screen frame buffers. In some of these examples, each virtual screen space and virtual screen frame buffer has a resolution independent of the other screen spaces and frame buffers. In one of these examples, output data associated with each of the plurality of resources  may reside within any of the virtual screen spaces , -. In another of these examples, each of the extended screen spaces -is associated with at least one external display device , depending on the capabilities of the device.","In various examples, the window management service  and the virtual graphics driver  allocate and manage the display, on a plurality of external display devices , of output data associated with a plurality of resources. For example, output data associated with a resource displays on a mobile computing device , output data associated with a resource displays on one external display device , and output data associated with a resource display on another external display device . In another of these examples, the window management device  identifies one of the external display devices  for displaying output data generated by a resource based upon a type of the resource . For example, the window management service  may determine that a type of resource rendering a video may display on a television screen, while a type of resource rendering a word processing application may render on a display of a laptop computer.","Referring now to , a block diagram illustrates an example mobile computing device  providing a virtual screen  with virtual screen spaces , -of varying resolutions. In this example, the virtual screen  includes a native display screen space  corresponding to the native display  of the mobile computing device  with a resolution of 320 pixels\u00d7240 pixels. The virtual screen  also includes an extended screen corresponding to the display of an external display device  with a resolution of 1024 pixels\u00d7768 pixels, an extended screen - corresponding to the display of an external display device  with a resolution of 800 pixels\u00d7600 pixels, and an extended screen corresponding to the display of an external display device  with a resolution of 640 pixels\u00d7480 pixels. In many examples, the virtual screen  may include a native display screen space  and any number of extended screens  of any resolution. The entire virtual screen space  may be mapped into a single virtual screen frame buffer, although examples that map into multiple buffers may be used.","Referring now to , the block diagram illustrates an example logical representation of a plurality of virtual screen spaces managed by a virtual graphics driver. In this example, the virtual graphics driver  manages multiple virtual screen spaces with different resolutions in a virtual screen frame buffer. In this example, the native display  of the mobile computing device is the primary display and the external display device , corresponding to the extended screen , is a secondary display. In various examples, output data associated with resources  on the native display screen space  will be displayed on the native display  and output data associated with resources  on the extended screen space will be displayed on the external display device  associated with the extended screen spaces . In other examples, all output data associated with resources  may be displayed on the native display . In still other arrangements, all output data associated with resources  may be displayed on an external display device such as external display device .","Providing a Native User Experience for Remoted Applications",{"@attributes":{"id":"p-0082","num":"0081"},"figref":["FIG. 5","FIG. 5","FIG. 2B"],"b":["102","501","102","102","204","102","102","102","206","102","208","204","102","102","208","210","210","102","201","102","204","102","501","505","505","505","505","501","510","505","102","505","102"],"i":"a"},"According to one or more arrangements, resources  executing on the mobile device  and\/or resources A-N may be applications configured to accept data inputted by a touch screen. For example, the applications may be modified versions of applications that typically do not receive data from a touch screen. These modified applications  may receive data inputted by a user via a touch screen of the mobile device , and may be modified to accommodate typical touch screen input functions like a virtual keyboard and a virtual scroll menu. For example, a modified version of SAFARI, a web browser published by APPLE, may be modified to pan up when a user selects or gives focus to an edit control such as a text box. SAFARI pans the application upwards to accommodate the virtual keyboard displayed over the browser and so that a user may view the text box while typing on the virtual keyboard.","Touch input may include a variety of hand or finger movements and actions including touching a point on the screen, swiping movements, flicking movements, multi-finger or multi-touch actions (e.g., pinching, expansion) and gestures and the like. The touch input may trigger different functionalities depending on the type of application receiving the input. For example, some applications may receive a flicking action as closing the application while other application may interpret a flicking input as moving the application window in a certain direction. Each applications may define its own interpretation of different types of touch input or may use a standard definition provided by an underlying operating system.","According to one or more configurations, the mobile device  may communicate with remote computer  in a variety of ways. The remote computer  may be a server, a client or any other computing machine. In some examples the remote computer  may be a remote application server that executes one or more applications for mobile device . Accordingly, in some examples, the mobile device  may communicate with the remote computer  over one or more virtual channels. In some examples, virtual channels may be established over a network and may be referred to as a control virtual channel. In other examples, the virtual channel may be a seamless virtual channel. A control virtual channel may be used to remote control commands and other miscellaneous commands (e.g., for an application) while the seamless virtual channel may be used to remote application windows, a taskbar, a systray, etc. Thus, in some examples, each virtual channel may remote different functions and content. In still other examples, the virtual channel may be established by a window management service  executing on the mobile device , or the virtual channel may be established by both the window management service  and a remoting client  executing on remote computer . The virtual channel may in some examples facilitate communication sent using the ICA protocol.","In some examples, the remote computer  may execute a remoting client . The remoting client  may be a control virtual channel or a seamless virtual channel and may be a remoting application that corresponds to the virtual channel used by the client  to transmit data to and receive data from the mobile device . In some examples, the remoting client  may collaborate with the window management service  (of the mobile computing device ) to modify remote applications  for remote display on the mobile device . The window management service  may be, for example, a CITRIX RECEIVER published by CITRIX SYSTEMS. In some examples, the remoting client  may communicate with the remote applications  to intercept event providing notifications and data generated by the remote applications . In particular, the remoting client  may perform event-based detection of one or more controls using application programming interfaces provided by one or more of the remote applications . For example, at least one remote application  may be an operating system executing on the remote computer . Another remote application B may be executing on the remote computer  and within the context of the operating system . In these examples, the remoting client  may intercept events generated by controls within the remote application B using application program interfaces made available by the operating system . The controls may be selected by the remoting client  based on whether the control has focus or is on a predetermined list of controls of interest. A control, in some examples, may be an object within an application that a user interacts with, e.g. a text box, drop down menu, radio button, button, check box, edit box, combo box etc. The control may further be referred to as a field or interactive element. In some examples, the remoting client  may intercept the control-generated events by registering with a communication interface associated with the application B to receive notifications when a focus-change event occurs within the application B. For example, the remoting client  may receive a notification when an object or control receives focus, e.g., indicating that a user selected a text box within the application.","In some examples, the remoting client  may communicate with the window management service  over the virtual channel. In a particular example, the remoting client  may send intercepted event notifications over the virtual channel to the window management service . In other examples, the remoting client  may transmit location coordinates for a control, the type of control, the contents of a control, the window handle of a control, and\/or parent window information for a control. Window handles or other identification information for elements within an interface or application may include a globally unique identifier (GUID). The window management service  may receive information from the remoting client  and adjust or modify display of an application  on the native display  using the received information. Adjusting the display may include panning, zooming (in or out), scrolling or otherwise modifying the display of the application .","In some examples, the remote computer  may execute one or more resources . These resources, in some examples, may be applications. In other examples, at least one resource may be an operating system executing on the remote computer . In those examples, the other applications  may execute within the context of the operating system. In some instances, the applications  may correspond to remote applications  from the perspective of device  and one or more of applications  may be remoted to mobile device  for use by the user at mobile device .",{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIG. 6","FIG. 5"],"b":["600","602","102","605","610"]},{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 7","b":["600","700","510","501","501","501","501","501","102","501","102"]},"The remoting management application may send additional information to the mobile device , e.g., separately or as part of the notification message, including: the type of control or interface element that received focus (e.g. combo box, textbox); the name or an identifier of the control that received focus; the location or coordinates of the control within the application (e.g. where in the application output the control is located); the content of the control (e.g. values assigned to the control, strings associated with the control, etc.); a window handle of the control; a window identifier of the window displaying the control; the location or coordinates of the parent window displaying the control; or any additional information that could be used to determine the location of the control within the application output displayed by the mobile device .","In step , the remote computer  may determine the type of object or control element receiving focus and\/or a position thereof. For example, the computer may determine whether the control element is a text entry field, a menu of selectable values, a radio button or the like. The computer may also determine position information based on position data specified in the notification message, including the coordinates and size of the control element on which focus is placed. In step , the remote computer  may then determine a general type of user control element to activate on the mobile device based on the determined type of control element of the remoted application receiving focus. For example, if the control element of the remoted application corresponds to a text entry field, the computer may determine that a software keyboard of type standard alphanumeric would be appropriate for interacting with the text entry field in a touch-input environment. In another example, if the control element of the remoted application corresponds to a number entry field (e.g., only numbers are permitted in the field), the computer may determine that a software keyboard of a number pad type may be most appropriate for interacting with the number entry field.","In step , the computer may transmit a command to the mobile device to activate a native control element corresponding to the determined type of control element locally on the mobile device. The command may be transmitted through a virtual channel between the remoting application and a remoting client application executing on the mobile device. Additionally, in one or more examples, if the type of control element to be shown or activated on the client device is a software keyboard, the computer may transmit the command identifying the type of the control element and identification of an editable area or field for which the control element is to be activated. The identification of the editable area or field may include coordinates, size information and the like. In another example, if the type of control element to be shown or activated locally on the client device is a picker control (e.g., a menu or scroll selection bar), the computer may transmit the command along with an identifier of the picker control, an area or field definition (e.g., coordinates, size information), contents of the picker control (e.g., the selectable items), current selection index, a title of the picker control and\/or window and parent window handles.","In some arrangements, the remote computer  might not determine a mobile device-native control element or type thereof to activate or use. Instead, the user of the mobile device may manually select or activate a native control element at the mobile device.","In step  the remote computer may receive an indication (e.g., a notification or confirmation) from the mobile device of the activation of a user control or input element native to the mobile device. The indication may include, for example, a confirmation of the state of the control element (e.g., show\/hide), success or failure from execution of the command and\/or an identifier of the local control element, e.g., mirroring the control identifier from the original command from the remote computer.","In some arrangements, the remote computer  may receive a return operation status message from the client device (e.g., mobile device ) in step , indicating an operation status of an activated local control element such as a picker control. For example, the return operation status message may include the identifier of the control, the operation status of the control and a selection index if the operation status indicates a selection made by the user. The selection index may identify the selected item. The operation status may include success (indicating that a selection has been made by the user) or cancel\/abort (e.g., if the user has deactivated the control element without selection).","Additionally or alternatively, in step , the remote computer  may further update the application display to reflect a selection made by a user (e.g., in a picker control element) in response to a notification from the client of the operation status and the selection. For example, the selection field may be updated with the selected value and the updated application display may be transmitted to the client device (e.g., mobile device ) for display. The application display update may then be transmitted to the client device in step .","In step , the remote computer  may receive another notification indicating that focus has left the control element and\/or the remoted application. In response, the remote computer  may issue an instruction to the mobile device  (or a client application executing thereon) to return the application display to an original state and\/or to deactivate the native control element in step  (e.g., if the application display was previously modified upon the remoted application receiving focus). In some arrangements, the remote computer  may issue the instruction only upon receiving notification that the native control element is no longer active (e.g., being displayed) or in use.",{"@attributes":{"id":"p-0099","num":"0098"},"figref":["FIG. 8","FIG. 5","FIG. 7"],"b":["102","800","102","102","206","102","501","201","102","805"]},"In response to the instruction, the device may determine a native control (e.g., user input) element to activate based on the type of control element specified in the instruction in step . For example, if the general type of control element corresponds to a standard alphanumeric keyboard, the device may identify a native control element matching the specified type such as an iOS standard alphanumeric keyboard (if it is an iOS mobile device), or an Android standard alphanumeric keyboard (if it is an Android mobile device). In some arrangements, the general types of controls supported by or available on the client device may be reported to the remote computer executing the application so that the remote computer may select an appropriate general type. Alternatively or additionally, the remote computer may process the focus event differently if a corresponding general type of control element is not supported by the client device, as is described in further detail herein. In some examples, the instructions may specify activation of multiple types of controls. Operation of the multiple native controls may be based on the use and specification of the GUID assigned to each native control.","Upon determining an appropriate control element corresponding to the specified type of control element, the device may activate or execute the determined native control in step . In one example, activation and\/or execution of the native control may include modifying the native display interface to display the control. Activation and\/or execution of the native control might also include extracting control element values (e.g., values within a drop-down menu) and incorporating those values into the native control element (e.g., the virtual picker in the above example). For example, in some arrangements, the remote computer executing the remoted application may transmit control values included in the application control element receiving focus to the device for display in the native control element. Accordingly, upon receiving the event notification and control information, the window management service  at the mobile or client device may determine whether the control is a type of control having associated values. Upon determining that the control has associated values, the window management service  may modify the display of the application to include the received values. In one example, if one or more strings are associated with a combo box having received focus, the window management service  may modify the display to display a combo box that includes those strings. In other aspects, a client executing on the device, or a window management service , may use local controls native to the device to display a remote control or to display graphics representative of a remote control. For example, when a remote Windows Combo Box is presented in an application, the device may display and\/or use a local iPad picker control. Thus, the remote application displayed on the device may adopt the appearance of a device native application and may include at least some native functionality.","The device may further determine, in step , whether the native control element will (or does) obscure the element of the remoted application receiving focus. For example, the device may determine an amount of the remoted application element being obscured (e.g., a percentage, absolute amount in pixels, inches or other metric), a particular area being obscured (e.g., obscuring a left part of a text entry field may be less important than obscuring a right part of the text entry field for language environments that read left to right), and the like. In some arrangements, the remoted application element might not be considered obscured if the amount obscured or portion obscured does not meet a predefined rule or threshold. For example, a remoted application element might only be considered obscured if at least 25%, at least 10%, at least 50%, etc. of the element is not visible. In another example, a remoted application might only be considered obscured if any portion of the left side of a text entry field (e.g., any part of the left 50% of the text entry field) is hidden from view. Other rules for determining when a control element is obscured may be defined and used.","If the device determines that the application control element will be or is obscured by the native control element, the device may determine, in step , a manner in which to modify the local display such that at least the application control element is no longer obscured. For example, if a mobile device native keyboard is to be displayed at the bottom of the mobile device display and will obscure the application control element, the device may determine that the one or more portions of the local display (desktop interface or application specific window(s) or portions thereof) should be panned upward (e.g., auto-scroll). Additionally or alternatively, the device may modify the display (entire desktop, portions of the desktop and\/or specific windows) to include a scrolling feature so that a remainder of the application display may be viewed once the display is panned upward if there is insufficient display real estate. In another example, the device may modify the application window to zoom out (e.g., shrink the application display) so that the application display fully fits within the mobile device display.","In step , the device may subsequently modify the display in accordance with the determined manner to avoid obscuring the editable\/control field. Alternatively, if the editable\/control field receiving focus will not be obscured, the device might not modify the display. In some examples, steps - may be performed in conjunction with (e.g., before, during or after) activation of the native control element in step .","In some examples, the device may transmit a confirmation message to the remote computing device confirming activation of the native control element as shown in step . Alternatively or additionally, the device may further transmit a return operation status message to the remote computing device in step , as described above with respect to steps  and  of . For example, status messages may be provided when the device detects a user selection of an item in the picker control. In another example, the device may transmit a status message upon detecting a user cancelling or aborting the picker control. These events may be reported to the remote computing device in the update message for appropriate handling by the remote computing device. If the update message includes an event that causes changes to the application display, for instance, those changes to the application display may be received from the remote computing device for updating the local application display.","The client device may further receive, in step , a message indicating that focus has left the editable\/control field and providing instructions to deactivate the corresponding native control element. In response, the client device may deactivate the native control element and return the application display to a previous state (e.g., prior to activation of the native control element) in step  if modification was performed.","The processes of  may further include transmitting actions performed on or through a native control element of the client device back to the remote computing device and remote application. For example, Application A executing on the remote computing device may generate application output which may be displayed in an application output window on the remote computing device. The application output generated by Application A is subsequently transmitted to the client device where it is displayed within an application output window thereon (e.g., a local application window). In some examples, when an editable combo box field within the remotely generated application output receives focus, a client or a window management service  may intercept the on-focus event and may display or invoke a native, virtual picker control, e.g., an iPad picker control. Within the local application window and amongst the remotely generated application output, the native, virtual picker control is displayed. A user may interact with the native control to generate input. Once the control is used to generate input, the client or window management service  may transmit the input to the remote computing device for processing within the context of the remoted application. For example, upon receiving the input, the remote computer  may inject the control input into an actual control displayed within the actual application output generated by Application A. In a particular example, injection of the received control input may be accomplished using a Windows UI Automation API. Changes in the remoted application based on the received input may then be outputted back to the client device. This process may repeat until the remoted application is closed and\/or the remoting relationship between the client device and the remote computing device is ended.","Additionally or alternatively, the remote computing device (executing the remoted application) may further be configured to determine whether the client device supports or has local control elements such as a native virtual keyboard or a native picker corresponding to a particular type or category of control element. For example, the client device's capabilities may be specified to the remote computing device and as such, the remote computing device may make the above noted determination. If the client device does not support or does not have a local control element corresponding to a determined type of control element corresponding to the editable\/control field, the remote computing device may generate a virtual keyboard or other control element as part of the remoted application or separately from the remoted application and output the display of the virtual keyboard to the client device (similar to the remoting of the application). In one particular example, the virtual control element generated by the remote computing device may be executed and remoted as a separate application. In another example, the virtual control element may be included within and as part of the existing remoted application receiving focus.","According to another aspect, the activation of a native control element may be switched on or off by the user or by a service providing the application remoting capability. Accordingly, if the user or the service does not wish to use native controls, the device might not automatically trigger a native control element upon receiving a focus event notification for an editable field. Additionally or alternatively, the remote computing device executing the application may be configured to determine whether an editable\/control field will be obscured and to determine and provide instructions for modifying a local display of the client device in response. Accordingly, the remote computing device may transmit instructions for modifying the local display and\/or the application display of the client device.",{"@attributes":{"id":"p-0110","num":"0109"},"figref":["FIGS. 9A and 9B","FIG. 9A"],"b":["900","901","903","903","901"]},"In , to avoid obscuring the text entry field , the application display may be panned upward. In some arrangements including the arrangement of , the display of an entire desktop including the remoted application display  may be modified. Panning may include moving the application display  in a particular direction (in this example, towards the top of the display) with or without modifying the proportions or orientation of the application display  or desktop. In some examples, panning may result in elements that were previously visible being moved off of the device display. For example, recycle bin icon  in  is moved off of the displayable area after the application display  is panned upward as shown in . The amount or degree to which the application display  is modified (e.g., panned) may be determined based on various rules and thresholds. In a particular example, the application display  may be panned until at least 75% of the text entry field is visible. In another example, the application display  may be panned until an entirety of the text entry field is visible.",{"@attributes":{"id":"p-0112","num":"0111"},"figref":["FIGS. 10A and 10B","FIG. 10A"],"b":["1001","1003","1003"]},"Accordingly, in , the interface may display a native picker control element . The native picker element  may be populated with the values included in drop down menu . The native picker control element  may be displayed for easier viewing and accessibility (e.g., larger font size, easier selection mechanism, etc.). In the illustrated example of , the application display might not be modified. Because the values listed in the drop down menu  are also displayed in native picker control element , obscuring part or all of the drop down menu  might not have as significant an impact in usability. In some examples, the application display may be modified to insure that the non-expanded drop down menu portion remains visible so that a user may confirm his or her selection once populated into the drop down menu . In yet other examples, the application display may zoom in to the drop down menu  or a portion thereof to increase viewability.","The methods and features recited herein may further be implemented through any number of computer readable media that are able to store computer readable instructions. Examples of computer readable media that may be used include RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, DVD or other optical disk storage, magnetic cassettes, magnetic tape, magnetic storage and the like.","Moreover, while many of the aspects and features described herein include the use of a mobile device, stationary or fixed location devices may also include the same or similar aspects and features. For example, a personal computer or workstation (e.g., plugged into a wall socket) may include touch input controls and provide access to a remoted application from a remote computing device. Accordingly, similar native control elements may be generated and used from the personal computer or workstation in similar fashion to a mobile device such as a tablet computer.","Additionally or alternatively, in at least some examples, the methods and features recited herein may be implemented through one or more integrated circuits (ICs). An integrated circuit may, for example, be a microprocessor that accesses programming instructions or other data stored in a read only memory (ROM). In some such examples, the ROM stores programming instructions that cause the IC to perform operations according to one or more of the methods described herein. In at least some other examples, one or more of the methods described herein are hardwired into an IC. In other words, the IC is in such cases an application specific integrated circuit (ASIC) having gates and other logic dedicated to the calculations and other operations described herein. In still other examples, the IC may perform some operations based on execution of programming instructions read from ROM or RAM, with other operations hardwired into gates and other logic of IC. Further, the IC may output image data to a display buffer.","Although specific examples of carrying out various features have been described, those skilled in the art will appreciate that there are numerous variations and permutations of the above-described systems and methods that are contained within the spirit and scope of the disclosure as set forth in the appended claims. Additionally, numerous other examples, modifications and variations within the scope and spirit of the appended claims will occur to persons of ordinary skill in the art from a review of this disclosure."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present disclosure is illustrated by way of example and not limited in the accompanying figures in which like reference numerals indicate similar elements and in which:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 1B","FIG. 1C"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2D"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3C"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 9A","FIG. 9B"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 10A","FIG. 10B"]}]},"DETDESC":[{},{}]}
