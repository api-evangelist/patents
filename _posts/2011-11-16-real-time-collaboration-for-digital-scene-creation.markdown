---
title: Real time collaboration for digital scene creation
abstract: Multiple users can edit the same digital scene concurrently, with different users using different computing devices and/or different programs running on one or more computing devices to edit the digital scene. Each program maintains its own representation of the digital scene. When a user of a program makes a change to the digital scene, the program communicates an indication of that change to the programs used by the other users, and those programs update their representations of the digital scene to reflect the change. Additionally, one of the users editing the digital scene can be an arbiter of the digital scene, determining which other users are permitted to edit the digital scene.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09082108&OS=09082108&RS=09082108
owner: Microsoft Technology Licensing, LLC
number: 09082108
owner_city: Redmond
owner_country: US
publication_date: 20111116
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Digital scenes are created for various uses, such as in movies and video games. These digital scenes are frequently a result of inputs from multiple different individuals. However, current systems for creating digital scenes typically allow only a single individual to edit the scene at any given time. This results in a situation in which the digital scene creation is time consuming due to the waterfall or serial nature of the creation process.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","In accordance with one or more aspects, at a computing device first change data for a digital scene is obtained from a digital scene editing module of a digital scene editing program running on the computing device. The first change data is sent to one or more additional computing devices each running an additional digital scene editing program. Second change data for the digital scene is also received from one of the one or more additional computing devices. The second change data is provided to the digital scene editing module.","In accordance with one or more aspects, at a first computing device a request is received from a second computing device for a user of the second computing device to be one of multiple users editing a digital scene. An indication of the request is displayed to an arbiter, who is a user of the first computing device. An input indicating whether the request is granted or denied is received. If the request is granted, then the user of the second computing device is allowed to be one of the multiple users editing the digital scene. If the request is denied, then the user of the second computing device is prevented from being one of the multiple users editing the digital scene.","Real time collaboration for digital scene creation is discussed herein. Multiple different users can edit the same digital scene concurrently. Different users can be using different computing devices and\/or different programs running on one or more computing devices to edit the digital scene concurrently. Each program maintains its own representation of the digital scene. When a user of a program makes a change to the digital scene, the program communicates an indication of that change to the programs used by the other users, and those programs update their representations of the digital scene to reflect the change. Additionally, one of the users editing the digital scene can be an arbiter of the digital scene, determining which other users are permitted to edit the digital scene.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["100","100","102","1","102","104","106","106"],"i":"x"},"Each computing device  can be a variety of different types of devices, such as a physical device or a virtual device. For example, a computing device  can be a physical device such as a desktop computer, a server computer, a laptop or netbook computer, a tablet or notepad computer, a mobile station, an entertainment appliance, a set-top box communicatively coupled to a display device, a television or other display device, a cellular or other wireless phone, a game console, an automotive computer, and so forth. A computing device  can also be a virtual device, such as a virtual machine running on a physical device. A virtual machine can be run on any of a variety of different types of physical devices (e.g., any of the various types listed above). Different computing devices  can be different types of devices, or alternatively one or more computing devices  can be the same type of device.","Logging device  can be a variety of different computing devices capable of logging data regarding changes to digital scenes, as discussed in more detail below. Similar to the discussion of computing devices , logging device  can be a variety of different types of devices.","Each computing device  includes a digital scene editing program . Each digital scene editing program  is a program supporting real time collaboration, allowing multiple users of multiple computing devices  to edit a digital scene concurrently. Each digital scene editing program  can be the same type of program, or alternatively different digital scene editing programs  can be different types of programs. For example, digital scene editing programs  can include image capture programs, live motion capture programs, animation programs, digital editing or drawing programs, and so forth.","As discussed in more detail below, each digital scene editing program  maintains its own representation of the digital scene. There is no centralized server and no centralized copy or version of the digital scene that the various programs  access and edit. Rather, changes made to a digital scene by one program  are communicated to one or more other programs , which reflect the changes in their respective representations of the digital scene.","System  is illustrated with each computing device  including a digital scene editing program . Alternatively, one or more digital scene editing programs  can be run distributed across multiple computing devices , and\/or multiple digital scene editing programs can be included and run on a single computing device .","Logging device  includes a communication interface  and a log . Communication interface  allows computing devices  to communicate changes to digital scenes to logging device , which stores the changes in log . Communication interface  also allows computing devices  to request changes to digital scenes, in response to which logging device  provides to the requesting computing device  the changes to the digital scene that are stored in log . Logging device  and its use are discussed in more detail below.","A digital scene refers to a scene displaying image data that is typically, but need not be, 3-dimensional (3D) image data. A scene typically includes multiple frames of video, although can alternatively be a single frame of video. The digital scene can be used in a variety of different settings, such as a movie, a video game, and so forth. A scene can include different parts, and the particular parts of a digital scene can vary by digital scene. For example, parts of a digital scene could include buildings, landscape, characters, animals or other creatures, vehicles, and so forth. These parts of the digital scene can be static (remaining unchanged across multiple frames of video) or dynamic (changing across multiple frames of video).","Multiple users can make changes to a digital scene, which is also referred to as editing the digital scene. The editing of a digital scene is also referred to as creating a digital scene or digital content creation. The techniques discussed herein support multiple users editing the digital scene concurrently, collaborating in real time to create the digital scene.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","110","200","202","204","206"]},"User interface module  receives user inputs from a user of the computing device running digital scene editing program . User inputs can be provided in a variety of different manners, such as by pressing one or more keys of a keypad or keyboard of the computing device, pressing one or more keys of a controller (e.g., remote control device, mouse, trackpad, etc.) of the computing device, manipulating a controller (e.g., mouse, stylus, etc.), pressing a particular portion of a touchpad or touchscreen of the computing device, making a particular gesture on a touchpad or touchscreen of the computing device, and\/or making a particular gesture on a controller (e.g., remote control device, mouse, trackpad, etc.) of the computing device. User inputs can also be provided via other physical feedback input to the computing device, such as tapping any portion of the computing device, an action that can be recognized by a motion detection component of the computing device (such as shaking the computing device, rotating the computing device, etc.), and so forth. User inputs can also be provided in other manners, such as via audible inputs to a microphone, via motions of hands or other body parts observed by an image capture device, and so forth.","Digital scene editing module  includes various functionality supporting editing of digital scenes. Digital scene editing module  can include various graphics and\/or 3D rendering engines, scene manipulation modules, image or motion capture modules, and so forth. Digital scene editing module  supports editing of digital scenes based on user inputs received via user interface module , and also changes received from other digital scene editing programs via communication interface .","Communication interface  includes a communication module , optionally an arbiter control module , and optionally a filtering module . Generally, communication module  allows data indicating changes to the digital scene to be sent to and received from other computing devices running digital scene editing programs. Arbiter control module , when included in communication interface , allow a user of the computing device running digital scene editing program  to act as an arbiter and control which other users are permitted to edit the digital scene. Filtering module , when included in communication interface , filters data sent and\/or received by communication interface , determining which data is to be sent to which other digital scene editing programs and\/or which data received from other digital scene editing programs is to be provided to digital scene editing module .","Communication interface  is illustrated as being part of digital scene editing program . In alternate embodiments, however, communication interface  is implemented separately from, but communicates with, digital scene editing program .","Digital scene editing module  maintains a representation of the digital scene being edited by digital scene editing program . When a change is made to the digital scene by digital scene editing program  in response to a user input to program , data indicating the change made to the digital scene by digital scene editing module  (also referred to as change data) is obtained by communication interface . The change data can be obtained by communication interface  in various manners, such as by digital scene editing module  invoking an application programming interface (API) of communication interface  or otherwise sending the data to communication interface , by digital scene editing module  storing the data (or an indication from which the data can be derived) in a location accessible to communication interface , and so forth.","The change data can identify the change in various manners, based at least in part on the change itself. Each digital scene can have various parts (e.g., landscaping, buildings, characters, animations, captured live motion, and so forth), and each part of the digital scene can have various elements (e.g., different trees that are part of landscaping, different characters, and so forth). Various characteristics or features of the digital scene can be changed, such as altering a color or texture of a part of the digital scene (e.g., of buildings, landscaping, etc.), adding an element to a part of the digital scene (e.g., adding a building, adding a character), moving an element of a part of the digital scene (e.g., moving a building, moving a tree or other landscaping, etc.), and so forth. The characteristic or feature of the digital scene that is changed, as well as the manner in which the characteristic or feature is changed, is included in the change data. For example, an indication of a particular element (e.g., a building) that is added as well as a description of that element (e.g., a location of the building in the digital scene, dimensions of the building, a color of the building, etc.) is included as the change data. By way of another example, an indication that a particular element (e.g., a lamppost) is moved as well as how that particular element has moved (e.g., a direction and distance (e.g., inches, centimeters, pixels, or other units)) is included as the change data.","Communication module  sends the change data to the other computing devices running digital scene editing programs that are editing the digital scene. The change data is received by those computing devices and provided to the digital scene editing programs run by those computing devices in an analogous manner as is done by digital scene editing program  as discussed below.","Communication module  also receives change data from other computing devices running other digital scene editing programs. This change data from other digital scene editing programs is typically change data resulting from users of those other digital scene editing programs providing user inputs changing the digital scene. Communication module  provides the change data received from those other computing devices to digital scene editing module , which updates the representation of the digital scene maintained by digital scene editing module . For example, if change data is received indicating a particular element (e.g., a building) has been added to the digital scene, then digital scene editing module  adds the particular element as described in the change data to the representation of the digital scene maintained by module . By way of another example, if change data is received indicating that a particular element (e.g., a tree) has been moved, then digital scene editing module  moves the particular element in the representation of the digital scene maintained by module  in the manner described in the change data (e.g., in a direction and distance indicated in the change data).",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIGS. 3","FIGS. 3","FIG. 3","FIG. 3","FIG. 3"],"b":["4","5","4","5","200","302"]},"Assume that a user of another digital scene editing program adds to digital scene  an additional element that is a third tree. Change data identifying the additional element (including its location in the digital scene) is received by digital scene editing program . Digital scene editing program  adds the identified additional element to its representation of the digital scene, resulting in an example part  of the digital scene illustrated in . An optional indication that the additional element was added by the user \u201cAlice\u201d at the time \u201c00:34:17\u201d is illustrated.","Further assume that a user of digital scene editing program  provides inputs to program  to move the rightmost tree element in the part  of the digital scene. Digital scene editing program  moves the element in its representation of the digital scene, resulting in an example part  of the digital scene illustrated in . An optional indication that the additional element was changed by the user \u201cJim\u201d at the time \u201c00:35:02\u201d is illustrated. Change data identifying the element and the manner in which it was changed (e.g., direction and distance) is also provided to the other digital scene editing programs (subject to any filtering by filtering module  as discussed in more detail below).","Thus, as can be seen from the examples of , , and , changes to the digital scene made by the user of digital scene editing program  are reflected in the representation of the digital scene maintained by program . Similarly, changes to the digital scene made by users of other digital scene editing programs are also reflected in the representation of the digital scene maintained by program .","Returning to , communication interface  optionally includes filtering module , which filters sending and\/or receiving of change data. Filtering module  can filter change data obtained from digital scene editing module , determining which other digital scene editing programs the change data obtained from module  is to be sent by communication module . Whether change data is to be sent to another digital scene editing program can be determined in a variety of different manners. In one or more embodiments, a digital scene editing program indicates which types of change data the digital scene editing program desires to receive. The types of change data can be specified in different manners, such as changes to parts or elements of the digital scene that the digital scene editing program has opened for editing, changes to parts or elements of the digital scene that are of interest to a user of the digital scene editing program (e.g., as specified by the user of the digital scene editing program), and so forth.","For example, a particular digital scene editing program can have opened a particular part or element of a digital scene for editing, such as buildings, landscape, characters, and so forth, or otherwise determine that only a particular part or element of a digital scene (such as buildings, landscape, characters, and so forth) is of interest to a user of the particular digital scene editing program. That particular digital scene editing program can send notifications to other digital scene editing programs editing the digital scene that the particular digital scene editing program desires to receive change data for that particular part or element of the digital scene. Such notifications are received by communication interface , and used by filtering module  to determine whether to send particular change data to that particular digital scene editing program. If particular change data obtained from digital scene editing module  is change data for that particular part or element of the digital scene, then filtering module  determines that the particular change data is to be sent to that particular digital scene editing program; otherwise, filtering module  determines that the particular change data is not to be sent to that particular digital scene editing program.","Additionally, or alternatively, filtering module  can filter change data received from other digital scene editing programs, determining whether received change data is to be provided to digital scene editing module  by communication module . Whether received change data is to be provided to digital scene editing module  can be determined in a variety of different manners, analogous to the discussion above regarding determining whether change data is to be sent to another digital scene editing program (e.g., change data for parts or elements of the digital scene that digital scene editing program  has opened for editing, changes to parts or elements of the digital scene that are of interest to a user of digital scene editing program , and so forth).","For example, digital scene editing program  can have opened a particular part or element of a digital scene for editing, such as buildings, landscape, characters, and so forth, or determine that only a particular part or element of a digital scene (such as buildings, landscape, characters, and so forth) is of interest to a user of digital scene editing program . Digital scene editing program  notifies communication interface  that particular digital scene editing program  desires to receive change data for that particular part or element of the digital scene. This notification is used by filtering module  to determine whether to provide change data received from other digital scene editing programs to digital scene editing program . If particular change data received from another digital scene editing module is change data for that particular part or element of the digital scene, then filtering module  determines that the particular change data is to be provided to digital scene editing module ; otherwise, filtering module  determines that the particular change data is not to be provided to digital scene editing module .","The different digital scene editing programs that are editing a particular digital scene can be identified in a variety of different manners. In one or more embodiments, the communication interface of the digital scene editing program used by a user that acts as an arbiter for a digital scene maintains identifiers of the different digital scene editing programs that are editing the digital scene for which that user is the arbiter. That communication interface can notify the other digital scene editing programs of the various digital scene editing programs that are editing the digital scene. A digital scene editing program can be identified in the notification in different manners, such as based on an identifier (e.g., a name, an Internet Protocol (IP) or other network address, etc.) of a computing device running the digital scene editing program, an identifier (e.g., serial number, name, etc.) of the digital scene editing program, and so forth.","Alternatively, the different digital scene editing programs that are editing a particular digital scene can be identified in other different manners. For example, when a digital scene editing program opens a digital scene for editing, that digital scene editing program can broadcast a notification that the digital scene editing program is editing that digital scene, and include an identifier of the digital scene editing program (or an identifier of a computing device running the digital scene editing program) in the notification. The notification can be broadcast to various computing devices, such as to particular predetermined computing devices, to all computing devices on a particular network, and so forth. For each computing device that receives the broadcast notification, if a digital scene editing program is running on the computing device the communication interface of the digital scene editing program receives the notification, providing the communication interface with an identifier of that particular digital scene editing program (or the computing device running that particular digital scene editing program) as well as the digital scene being edited by that digital scene editing program.","Returning to , in one or more embodiments change data is also sent to logging device . Logging device  includes a communication interface  that receives the change data and stores the change data in log . Logging device  can receive and store change data for different digital scenes, and stores the change data in a manner so that the change data corresponds to a particular digital scene, or otherwise maintains a record indicating which change data corresponds to which digital scenes. It should be noted that logging device  need not include a digital scene editing program, and that filtering modules of the communication interfaces of computing devices  determine that the change data is to be sent to logging device  even if logging device  does not include a digital scene editing program.","Communication interface  can also receive a request from a computing device  to retrieve change data for a particular digital scene. For example, an additional user may desire to begin editing a digital scene that is already being edited by multiple other users. The digital scene editing program used by the additional user can open or otherwise obtain a previously saved representation of the digital scene, and can request the change data for that particular digital scene from logging device . The change data can be applied by the digital scene editing program, allowing the digital scene editing program used by the additional user to have a representation of that particular digital scene that reflects the changes that have been made to the digital scene. Communication interface  can optionally include a filtering module, similar to filtering module  of , allowing communication interface  to send change data only for a particular part or element of the digital scene that the digital scene editing program used by the additional user has opened for editing, send change data for only a particular part or element of the digital scene that is of interest to the additional user, and so forth.","Returning to , communication interface  optionally includes arbiter control module , which allows a user of the computing device running digital scene editing program  to act as an arbiter and control which other users are permitted to edit the digital scene. This control can include determining whether an additional user requesting to edit the digital scene is allowed to edit the digital scene, preventing a user that was previously editing the digital scene from any further editing of the digital scene (e.g., kicking the user out), and so forth.","In one or more embodiments, when a user of a digital scene editing program desires to edit a digital scene, the digital scene editing program sends a request for the user to be able to edit the digital scene to communication interface . The request can include various information, such as an identification of the user, an identification of the computing device being used by the user, an identification of the digital scene editing program being used by the user, combinations thereof, and so forth.","Arbiter control module  presents the information regarding the request to a user of digital scene editing program  (also referred to as an arbiter) via user interface module . Module  receives a user input from the arbiter indicating whether the request is granted or denied by the arbiter. If the request is granted, then the user is allowed to edit the digital scene, and an indication of the user (and optionally an identification of the computing device and\/or digital scene editing program used by the user) can be provided to the communication interfaces of the other digital scene editing programs editing the digital scene (thus informing the other digital scene editing programs to send change data to the requesting user's digital scene editing program). A response to the request is also provided to the digital scene editing program informing the digital scene editing program that the digital scene can be opened and\/or edited by the user. An indication of the other users editing the digital scene (and optionally an identification of the computing devices and\/or digital scene editing programs used by those other users) can be provided to the digital scene editing program, informing the digital scene editing program of the other digital scene editing programs to which the program is to send change data. However, if the request is not granted, then the user is not allowed to edit the digital scene. If the user is not allowed to edit the digital scene, a response to the request is provided to the digital scene editing program informing the digital scene editing program that the digital scene cannot be opened and\/or edited by the user (in response to which the digital scene editing program does not open and\/or allow the user to edit the digital scene).","Furthermore, in one or more embodiments, the request can be a request to edit a particular part or element of a digital scene rather than any part of a digital scene. Thus, the arbiter can determine whether to grant or deny a request to edit only the particular part or element of the scene rather than the entire digital scene. Additionally, the arbiter can determine to lock or otherwise prevent a particular part or element from being edited by one or more users after a request to edit that particular part or element by those one or more users has been granted. The determination to lock or otherwise prevent a particular part or element from being edited can be made in response to a request to lock or prevent the particular part from a digital scene editing program or user, or alternatively can be made by the arbiter absent any such request. If a particular part or element is locked or otherwise prevented from being edited by one or more users, the digital scene editing programs used by those one or more users are notified that the particular part or element is not to be edited by the user of the digital scene editing program, and the digital scene editing program ignores requests to edit that particular part or element until notified that the part or element is no longer locked or otherwise prevented from being edited by the user of the digital scene editing program.","Additionally, in one or more embodiments the arbiter (or alternatively another user) can provide inputs (via user interface module ) indicating whether change data is to be recorded by a logging device (such as logging device ). For example, the arbiter can provide a user input selecting a \u201crecord\u201d option if change data is to be recorded by the logging device, in response to which an indication to record the change data is communicated to the logging device. By way of another example, the arbiter can provide a user input selecting a \u201cpause\u201d or \u201cstop\u201d option if change data is not to be recorded by the logging device, in response to which an indication to not record the change data is communicated to the logging device.","Furthermore, in one or more embodiments a user of digital scene editing program  can desire to playback an animation included in a digital scene being edited by digital scene editing program . The animation playback is streamed by communication module  to the digital scene editing programs that are also editing the digital scene, allowing the users of those digital scene editing programs to also see the animation. Which digital scene editing programs receive the streaming animation can be determined by filtering module . For example, if a particular digital scene editing program has opened a particular part or element of a digital scene for editing or indicated that only a particular part or element of a digital scene is of interest to a user of the particular digital scene editing program, and that particular part or element does not include animation in the digital scene, then the animation is not streamed to that particular digital scene editing program. However, if the particular part or element does include animation in the digital scene, then the animation is streamed to that particular digital scene editing program.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 6","FIG. 5","FIG. 6"],"b":["602","502","604"]},"An additional control portion  of the arbiter user interface is also displayed. Control portion  illustrates two controls, a \u201clock\u201d control and a pause or stop control (illustrated as two vertical lines). The arbiter can provide a user input selecting the lock control to prevent the part of the digital scene (or the digital scene) from being edited by the other users (users other than the arbiter). The arbiter can also provide a user input selecting the pause or stop control to stop a logging device from recording the change data to the digital scene.","It should be noted that the arbiter user interface illustrated in  is an example, and that the arbiter user interface can be presented to the arbiter in various other manners. For example, tiles or icons can be displayed for selection by the arbiter, menu items can be displayed for selection by the arbiter, the arbiter user interface can be displayed in a separate window rather than overlaying a part of a digital scene, and so forth. Additionally, it should be noted that various additional controls can be included in control portion , such as a record control that can be selected to cause the logging device to record the change data, a control to kick out one of the users currently editing the digital scene so that the user can no longer edit the digital scene, and so forth.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 7","FIG. 1","FIG. 2"],"b":["700","700","102","200","700","700"]},"In process , change data for a digital scene is obtained from a module of a computing device (act ). The module is a digital scene editing module being run by the computing device implementing process  as part of a digital scene editing program, as discussed above.","The obtained change data is sent to one or more additional computing devices (act ). These one or more additional computing devices are running additional digital scene editing programs and\/or are logging devices, as discussed above. Additionally, a filtering module can be used to determine which computing devices the change data is to be sent to, as discussed above.","Additional change data is received from another computing device (act ). The change data is received in response to changes made to the digital scene by a user of another digital scene editing program on the other computing device, as discussed above.","The received additional change data is provided to the module of the computing device (act ). The module is a digital scene editing module being run by the computing device implementing process  as part of a digital scene editing program, as discussed above. Additionally, a filtering module can be used to determine whether the additional change data is to be provided to the module, as discussed above.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 8","FIG. 1","FIG. 2"],"b":["800","800","102","200","800","800"]},"In process , a request for a user of a computing to be one of multiple users editing a digital scene is received (act ). The request is received from a digital scene editing program being used by the user, as discussed above.","An indication of the request is displayed or otherwise presented to an arbiter (act ). The request can be displayed as part of an arbiter user interface as discussed above.","A user input is received from the arbiter indicating whether the request is granted or denied (act ). The user input can be provided in a variety of different manners as discussed above.","If the user input indicates the request is granted, then the user is allowed to be one of the multiple users editing the digital scene (act ). However, if the user input indicates the request is denied, then the user is prevented from being one of the multiple users editing the digital scene (act ).","Various actions such as communicating, receiving, sending, recording, storing, obtaining, and so forth performed by various modules are discussed herein. A particular module discussed herein as performing an action includes that particular module itself performing the action, or alternatively that particular module invoking or otherwise accessing another component or module that performs the action (or performs the action in conjunction with that particular module). Thus, a particular module performing an action includes that particular module itself performing the action and\/or another module invoked or otherwise accessed by that particular module performing the action.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 9","FIG. 1","FIG. 2"],"b":["900","900","102","200"]},"Computing device  includes one or more processors or processing units , one or more computer readable media  which can include one or more memory and\/or storage components , one or more input\/output (I\/O) devices , and a bus  that allows the various components and devices to communicate with one another. Computer readable media  and\/or one or more I\/O devices  can be included as part of, or alternatively may be coupled to, computing device . Processor , computer readable media , one or more of devices , and\/or bus  can optionally be implemented as a single component or chip (e.g., a system on a chip). Bus  represents one or more of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, a processor or local bus, and so forth using a variety of different bus architectures. Bus  can include wired and\/or wireless buses.","Memory\/storage component  represents one or more computer storage media. Component  can include volatile media (such as random access memory (RAM)) and\/or nonvolatile media (such as read only memory (ROM), Flash memory, optical disks, magnetic disks, and so forth). Component  can include fixed media (e.g., RAM, ROM, a fixed hard drive, etc.) as well as removable media (e.g., a Flash memory drive, a removable hard drive, an optical disk, and so forth).","The techniques discussed herein can be implemented in software, with instructions being executed by one or more processing units . It is to be appreciated that different instructions can be stored in different components of computing device , such as in a processing unit , in various cache memories of a processing unit , in other cache memories of device  (not shown), on other computer readable media, and so forth. Additionally, it is to be appreciated that the location where instructions are stored in computing device  can change over time.","One or more input\/output devices  allow a user to enter commands and information to computing device , and also allows information to be presented to the user and\/or other components or devices. Examples of input devices include a keyboard, a cursor control device (e.g., a mouse), a microphone, a scanner, and so forth. Examples of output devices include a display device (e.g., a monitor or projector), speakers, a printer, a network card, and so forth.","Various techniques may be described herein in the general context of software or program modules. Generally, software includes routines, programs, applications, objects, components, data structures, and so forth that perform particular tasks or implement particular abstract data types. An implementation of these modules and techniques may be stored on or transmitted across some form of computer readable media. Computer readable media can be any available medium or media that can be accessed by a computing device. By way of example, and not limitation, computer readable media may comprise \u201ccomputer storage media\u201d and \u201ccommunication media.\u201d","\u201cComputer storage media\u201d include volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules, or other data. Computer storage media include, but are not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by a computer. Computer storage media refer to media for storage of information in contrast to mere signal transmission, carrier waves, or signals per se. Thus, computer storage media refers to non-signal bearing media, and is not communication media.","\u201cCommunication media\u201d typically embody computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as carrier wave or other transport mechanism. Communication media also include any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above are also included within the scope of computer readable media.","Generally, any of the functions or techniques described herein can be implemented using software, firmware, hardware (e.g., fixed logic circuitry), manual processing, or a combination of these implementations. The terms \u201cmodule\u201d and \u201ccomponent\u201d as used herein generally represent software, firmware, hardware, or combinations thereof. In the case of a software implementation, the module or component represents program code that performs specified tasks when executed on a processor (e.g., CPU or CPUs). The program code can be stored in one or more computer readable memory devices, further description of which may be found with reference to . In the case of hardware implementation, the module or component represents a functional block or other hardware that performs specified tasks. For example, in a hardware implementation the module or component can be an application-specific integrated circuit (ASIC), field-programmable gate array (FPGA), complex programmable logic device (CPLD), and so forth. The features of the real time collaboration for digital scene creation techniques described herein are platform-independent, meaning that the techniques can be implemented on a variety of commercial computing platforms having a variety of processors.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The same numbers are used throughout the drawings to reference like features.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIGS. 3","b":["4","5"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
