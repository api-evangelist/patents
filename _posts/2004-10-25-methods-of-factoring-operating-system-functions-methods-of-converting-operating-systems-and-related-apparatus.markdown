---
title: Methods of factoring operating system functions, methods of converting operating systems, and related apparatus
abstract: Methods of factoring operating system functions into one or more groups of functions are described. Factorization permits operating systems that are not configured to support computing in an object-oriented environment to be used in an object oriented environment. This promotes distributed computing by enabling operating system resources to be instantiated and used across process and machine boundaries. In one embodiment, criteria are defined that govern how functions of an operating system are to be factored into one or more groups. Based on the defined criteria, the functions are factors into groups and groups of functions are then associated with programming objects that have data and methods, wherein the methods correspond to the operating system functions. Applications can call methods on the programming objects either directly or indirectly that, in turn, call operating system functions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07681207&OS=07681207&RS=07681207
owner: Microsoft Corporation
number: 07681207
owner_city: Redmond
owner_country: US
publication_date: 20041025
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present application claims priority under 35 U.S.C. \u00a7 120 as a continuation of U.S. patent application Ser. No. 10\/951,306, now Pat. No. 6,826,760, filed Sep. 27, 2004 which is a continuation of U.S. patent application Ser. No. 09\/334,104, filed Jun. 16, 1999, both of which are herein incorporated by reference in their entirety.","This invention relates to methods of factoring operating system functions, to methods of converting operating systems from non-object-oriented formats into object-oriented formats, and to related apparatus.","Operating systems typically include large numbers of callable functions that are structured to support operation on a single host machine. When an application executes on the single host machine, it interacts with the operating system by making one or more calls to the operating system's functions.","Although this method of communicating with an operating system has been adequate, it has certain shortcomings. One such shortcoming relates to the increasing use of distributed computing, in which different computers are programmed to work in concert on a particular task. Specifically, operating system function libraries can severely limit the ability to perform distributed computing.",{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 1","FIG. 1"],"b":["20","22","24","22","24","26","28","28","28","28"]},"One problem associated with using a handle as specified above is that the particular handle that is returned to an application by the operating system is only valid for the process in which it is being used. That is, without special processing the handle has no meaning outside of its current process, e.g. in another process on a common or different machine. Hence, the handle cannot be used across process or machine boundaries. This makes computing in a distributed computing system impossible because, by definition, distributed computing takes place across process and machine boundaries. Thus, current operating systems lack the ability to name and manipulate operating system resources on remote machines.","Another problem with traditional operating system function libraries is that individual functions cannot generally be modified without jeopardizing the operation of older versions of applications that might depend on the particular characteristics of the individual functions. Thus, when an operating system is upgraded it typically maintains all of the older functions so that older applications can still use the operating system.","In prior art operating systems, a function library essentially defines a protocol for communicating with an operating system. When operating systems are upgraded, the list of functions that it provides typically changes. Specifically, functions can be added, removed, or changed. This changes the protocol that is used between an application and an operating system. As soon as the protocol is changed, the chances that an application will attempt to use a protocol that is not understood by the operating system, and vice versa increase.","Prior art operating systems attempt to deal with new versions of operating systems by using so-called version numbers. Version numbers are assigned to each operating system. Applications can make specific calls to the operating system to ascertain the version number of the operating system that is presently in use. For example, when queried by an application, Windows NT 4 returns a \u201c4\u201d and Windows NT 5 returns a \u201c5\u201d. The application must then know what specific protocol to use when communicating with the operating system. In addition, in order for an operating system to know what operating system version the application was designed for, a value is included in the application's binary. The operating system can then attempt to accommodate the application's protocol.","The version number system has a couple of problems that can adversely affect functionality. Specifically, a typical operating system may have thousands of functions that can be called by an application. For example, Win32, a Microsoft operating system application programming interface, has some 8000 functions. The version number that is assigned to an operating system then, by definition, represents all of the possibly thousands of functions that an operating system supports. This level of description is undesirable because it does not provide an adequate degree of resolution. Additionally, some operating systems can return the same version number. Thus, if the operating systems are different (which they usually are), then returning the same version number can lead to operating errors. What is needed is the ability to identify different versions of operating systems at a level that is lower than the operating system level itself. Ideally, this level should be at or near the function level so that a change in just one or a few functions does not trigger a new version number for the entire operating system.","The present invention arose out of concerns associated with providing improved flexibility to operating systems. Specifically, the invention arose out of concerns associated with providing operating systems that are configured for use in distributed computing environments, and that can easily support legacy applications and versioning.","Operating system functions are defined as objects that are collections of data and methods. The objects represent operating system resources. The resource objects can be instantiated and used across process and machine boundaries. Each object has an associated handle that is stored in its private state. When an application requests a resource, it is given a second handle or pseudo handle that corresponds with the handle in the object's private state. The second handle is valid across process and machine boundaries and all access to the object takes place through the second handle. This greatly facilitates remote computing. In preferred embodiments, the objects are COM objects and remote computing is facilitated through the use of Distributed COM (DCOM) techniques.","Other embodiments of the invention provide legacy and versioning support by identifying each resource, rather than the overall operating system, with a unique identifier that can specified by an application. Different versions of the same resource have different identifiers. This ensures that applications that need a specific version of a resource can receive that version. This also ensures that an application can specifically request a particular version of a resource by using its unique identifier, and be assured of receiving that resource.","Other embodiments of the invention provide legacy support by intercepting calls for operating system functions and transforming those calls into object calls that can be understood by the resource objects. This is accomplished in preferred embodiments by injecting a level of indirection between an unmodified application and an operating system.","Overview","Various examples will be given in the context of Microsoft's Win32 operating system application programming interface and function library, commonly referred to as the \u201cWin32 API.\u201d Although this is a specific example, it is not intended to limit the principles of the invention to only the Win32 function library or, for that matter, to Microsoft's operating systems. The Win32 operating system is described in detail in a text entitled Windows 95 WIN32 Programming API Bible, authored by Richard Simon, and available through Waite Group Press.","In accordance with one embodiment of the invention, one or more of an operating system's resources are defined as objects that can be identified and manipulated by an application through the use of object-oriented techniques. Generally, a resource is something that might have been represented in the prior art as a particular handle \u201ctype.\u201d Examples of resources include files, windows, menus and the like.","Preferably, all of the operating system's resources are defined in this way. Doing so provides flexibility for distributed computing and legacy support as will become apparent below. By defining the operating system resources as objects, without reference to process-specific \u201chandles,\u201d the objects can be instantiated anywhere in a distributed system. This permits responsibility for different resources to be split up across process and machine boundaries. Additionally, the objects that define the various operating system resources can be identified in such a way that applications have no trouble calling the appropriate objects when they are running. This applies to whether the applications know they are running in connection with operating system resource objects or not. If applications are unaware that they are running in connection with operating system resource objects, e.g. legacy applications, a mechanism is provided for translating calls for the functions into object calls that are understood by the operating system resources objects.","In addition, factorization schemes are provided that enable an operating system's functions to be re-organized and redefined into a plurality of object interfaces that have methods corresponding to the functions. In preferred embodiments, the interfaces are organized to leverage advantages of interface aggregation and inheritance.","Preliminarily,  shows a general example of a desktop computer  that can be used in accordance with the invention. Various numbers of computers such as that shown can be used in the context of a distributed computing environment. In this document, computers are also referred to as \u201cmachines\u201d.","Computer  includes one or more processors or processing units , a system memory , and a bus  that couples various system components including the system memory  to processors . The bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. The system memory  includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM .","Computer  further includes a hard disk drive  for reading from and writing to a hard disk (not shown), a magnetic disk drive  for reading from and writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the bus  by an SCSI interface  or some other appropriate interface. The drives and their associated computer-readable media provide nonvolatile storage of computer-readable instructions, data structures, program modules and other data for computer . Although the exemplary environment described herein employs a hard disk, a removable magnetic disk  and a removable optical disk , it should be appreciated by those skilled in the art that other types of computer-readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, random access memories (RAMs), read only memories (ROMs), and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk , magnetic disk , optical disk , ROM , or RAM , including an operating system , one or more application programs , other program modules , and program data . A user may enter commands and information into computer  through input devices such as a keyboard  and a pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are connected to the processing unit  through an interface  that is coupled to the bus . A monitor  or other type of display device is also connected to the bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown) such as speakers and printers.","Computer  commonly operates in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be another personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When used in a LAN networking environment, computer  is connected to the local network  through a network interface or adapter . When used in a WAN networking environment, computer  typically includes a modem  or other means for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the bus  via a serial port interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Generally, the data processors of computer  are programmed by means of instructions stored at different times in the various computer-readable storage media of the computer. Programs and operating systems are typically distributed, for example, on floppy disks or CD-ROMs. From there, they are installed or loaded into the secondary memory of a computer. At execution, they are loaded at least partially into the computer's primary electronic memory. The invention described herein includes these and other various types of computer-readable storage media when such media contain instructions or programs for implementing the steps described below in conjunction with a microprocessor or other data processor. The invention also includes the computer itself when programmed according to the methods and techniques described below.","For purposes of illustration, programs and other executable program components such as the operating system are illustrated herein as discrete blocks, although it is recognized that such programs and components reside at various times in different storage components of the computer, and are executed by the data processor(s) of the computer.","General Operating System Object Architecture",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 3","b":["30","32","34","36","38","22","32","34","36","38","32","34"]},"Although any suitable object model can be used to define the operating system resources, it has been found particularly advantageous to define them as COM objects. COM objects are well known Microsoft computing mechanisms and are described in a book entitled , Second Edition 1995, which is authored by Kraig Brockschmidt. In COM, each object has one or more interfaces that are represented by the plug notation used in . An interface is a group of semantically related functions or methods. All access to an object occurs through member functions of an interface. Representing the operating system resources as objects provides an opportunity to redefine the architecture of current operating systems, and to provide new architectures that improve upon the old ones.","One advantage of representing resources as COM objects comes in the remote computing environment. Specifically, when COM objects are instantiated throughout a distributed computing system, Distributed COM (DCOM) techniques can be used for remote communication. DCOM is a known communication protocol developed by Microsoft.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 4","b":["48","50","52","24"]},"In order to use the resource objects, the application must first be able to communicate with them. In one embodiment where the operating system resources comprise COM objects, communication takes place through the use of known DCOM techniques. Specifically, in the local case where resource  is instantiated across a process boundary, DCOM provides for an instantiated proxy\/stub pair  to marshal data across the process boundary. The remote case also uses a proxy\/stub pair  to marshal data across the process and machine boundaries. In addition, an optional proxy manager  can be instantiated or otherwise provided to oversee communication performed by the proxy\/stub pair, and to take measures to reduce unnecessary communication. Specifically, one common proxy manager task is to cache remote data to avoid unnecessary communication. For example, in the Win32 operating system, information can be cached to improve the re-drawing of remote windows. When a BeginPaint( ) call is made, it signals the beginning of a re-draw operation by creating a new drawing context resource. In order to be available remotely, this resource has to be wrapped by an object. Rather than creating a new object instance on each re-draw operation, an object instance can be cached in the proxy manager and re-used for the re-draw wrapper","Translation Layer",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 5","b":["58","32","34","36","38","58","24","22","24","58","24"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 6","b":["58","24"]},"In operation, an application initially calls a resource object in the translation layer  when it wants to create a resource to use. An application may, for example, call \u201cCreateFile\u201d on a file object to create a file. The application is then passed a pseudo-handle  instead of the first handle  for the file object. The first handle  is stored in the object instance's private state, i.e. it remains with its associated object. This means that the file object has its own real handle  that it maintains, and the application has a pseudo handle  that corresponds to the real handle. Application  makes object calls to the object of interest using the pseudo-handle . The object takes the pseudo-handle, retrieves the corresponding handle  and uses it to call functions in the operating system. The application uses the pseudo-handle  for all access to the operating system resource. In a preferred embodiment, pseudo-handle  is an interface pointer that points to an interface of the object of interest.","With an appropriate pseudo-handle, an application is free to access any of the resources that are associated with an object that corresponds to that handle. This means that the application uses the pseudo-handle  to make subsequent calls to, in this example, the file object. For example, calls to \u201cReadFile\u201d and \u201cWriteFile\u201d now take place using the pseudo handle . When the application makes a call using the pseudo handle , the object determines the real handle that corresponds to the pseudo-handle. Any suitable method can be used such as a mapping process. If the object is in process, then the call gets passed down to the operating system  using first handle  as shown. If the object is local or on another machine, then communication takes place with the object at its current location across process and machine boundaries. Where the operating system resources are defined as COM objects, DCOM techniques can be used to call across process and machine boundaries.","Legacy Application Support",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIGS. 7 and 8","FIG. 7","FIG. 5","FIG. 8","FIG. 3"]},"Recall that legacy applications are those that call operating system functions instead of objects. These types of applications do not have any way of knowing that they are running in connection with a system whose resources are defined as objects. Hence, when an application calls a function, it \u201cbelieves\u201d that the function is supported by and accessible through the operating system. The syntax of the function calls, however, is not understood by the objects. Embodiments of the invention translate the syntax of the function calls into syntax that is understood by the objects. In accordance with one embodiment, application calls are intercepted and transformed before reaching the operating system. The transformed calls are then used to call the appropriate object using the syntax that it can understand. Then the object passes the calls into the operating system as was described above in connection with .","In one implementation, a detour  is provided that implements a detour function. Detour  is interposed between the application and the operating system. When an application calls a function, detour  intercepts the call and transforms it into an object call. In preferred embodiments, detour  enables communication across at least one and preferably more process and machine boundaries for remote computing. Where the objects are COM objects, communication takes place through DCOM techniques discussed above.","To understand how one embodiment of detour  works, the following example is given. Syntactically, detour  changes the syntax of an application's call to an operating system function into one that is understood by an object. For example, a prior art call might use the following syntax to call \u201cReadFile\u201d: ReadFile(handle, buffer, size), where \u201chandle\u201d specifies a file resource that is to be read. There are many different resources that can be read using the ReadFile function, e.g. a file, a pipe, and a socket.","When a prior art operating system is called in this manner, the operating system typically looks for the code that is associated with reading the particular type of resource that is specified by the handle, and then reads the resource using the code. One way prior art operating systems can do this is to have one lengthy \u201cIF\u201d statement that specifies the code to be used for each different type of resource. Thus, if a new resource is to be added, the \u201cIF\u201d statement must be modified to provide for that type of resource.","Detour  greatly streamlines this process by translating the \u201cReadFile\u201d call syntax into one that can be used by the specified resource. So in this example, the original \u201chandle\u201d actually specifies an object. The new syntax for the object call is represented as \u201chandle\u2192ReadFile (buffer, size)\u201d. Here, \u201chandle\u201d is the object and \u201cReadFile\u201d is an object function or method. In COM embodiments, the \u201cReadFile\u201d method of the handle object is accessed through the object's vtable in a known manner. This configuration allows an object to contain only the code that is specifically necessary to operate upon it. It need not contain any code that is associated with other types of objects. This is advantageous because new objects can be created simply by providing the code that is uniquely associated with it, rather than by modifying a lengthy \u201cIF\u201d statement. Each object is self-contained and does not impact or affect any of the other objects. Nor does its creation affect the run time of any other objects. Only those applications that need a specific object will have it created for their use. Another advantage is the ease with which objects can be accessed. Specifically, applications can access the various objects through the use of pseudo-handles which are discussed above.","Detour  constitutes but one way of making a syntactic transformation from one format that cannot be used with resource objects to a format that can be used with resource objects. This supports legacy applications that do not \u201cknow\u201d that they are running on top of a system whose resources are provided as objects. So, to the application it appears as if its calls are working just the same as they ever did.","Detour Implementation","When an application is built, it links against a set of dynamic linked libraries or (DLLs). The DLLs contain code that corresponds to the particular calls that an application makes. For example, the call \u201cCreateFile\u201d is contained in a DLL called \u201ckernel32.dll\u201d. At run time, the operating system loads \u201ckernal32.dll\u201d into the address space for the application. Detour  contains a detour call for each call that an application makes. So, in this example, detour  contains a call \u201cDetour_CreateFile\u201d. The goal of detour  is to call the \u201cDetour_CreateFile\u201d called every time the application calls \u201cCreateFile\u201d. This provides a level of indirection when the application makes a call to the operating system. The indirection enables certain decisions to be made by detour  that relate to whether a call is made locally or remotely.","As an example, consider the following. If an application desires to use a \u201cWriteFile\u201d call to write certain data to a particular file remotely, but also to write certain other data to a file locally, then a redirected \u201cDetour_WriteFile\u201d call can determine that there is a local operation that must take place, as well as a remote operation that must take place. The \u201cDetour_WriteFile\u201d call can then make the appropriate calls to ensure that the local operation does in fact take place, and the appropriate calls to ensure that the remote operations do in fact take place.","One way of injecting this level of indirection into the call is to manipulate the call's assembly code. Specifically, portions of the assembly code can be removed and replaced with code that implements the detour. So, using the \u201cCreateFile\u201d call as an example, the first few lines of code comprising the \u201cCreateFile\u201d call are removed and replaced with a \u201cjump\u201d instruction that calls \u201cDetour_CreateFile\u201d. For those operating systems that do not natively implement resource objects, a trampoline  () is provided and receives the lines of code that are removed, along with another jump instruction that jumps back to the original \u201cCreateFile\u201d call. Now, when application  calls \u201cCreateFile\u201d, detour  automatically calls \u201cDetour_CreateFile\u201d. If there is local processing that must take place, the \u201cDetour_CreateFile\u201d can call trampoline  to invoke the original local \u201cCreateFile\u201d sub-routine. Otherwise, if there is remote processing that must take place, the detour  can take the appropriate steps to ensure that remote processing takes place. In this manner, the detour  wedges between the application and the operating system with a level of indirection. The indirection provides an opportunity to process either locally or remotely.","One of the primary advantages of detour  in the COM embodiments is the remoting capabilities provided by DCOM. That is, because the operating system's resources are now modeled as COM objects, DCOM can be used essentially for free to support communication with local or remote processes or machines.","Linking Against Detours","One way that detours can be implemented is to modify the dynamic link library (DLL) that an application links against. Specifically, rather than link against DLLs and their associated functions, an application links directly against detour functions, e.g. \u201cdetour32.dll\u201d instead of \u201ckernel32.dll\u201d. Here, \u201cdetour32.dll\u201d contains the same function names as \u201ckernal32.dll\u201d. However, rather than providing the kernel's functionality, \u201cdetour32.dll\u201d contains object calls. Thus, an application makes a function call to a function name in the \u201cdetour32.dll\u201d which, in turn, makes an object call.","With the \u201cdetour.dll\u201d, all of the function calls are translated into COM calls. The trampoline  is loaded and is hardwired so that it knows where to jump to the appropriate places in the kernal32.dll.","Version Support","Another aspect of the invention provides support for different versions of a resource within an operating system. Recall that in the prior art, operating system versions are simply represented by a version number. The version number represents the entire collection of operating system functions. Thus, a modification to a handful of operating system functions might spawn a new operating system version and version number. Yet, many if not most of the original functions remain unchanged. Because of this, version numbers provide an undesirable degree of description. In addition, recall that previous operating systems maintain vast function libraries that include all of the functions that an application might need. Function calls cannot be deleted because legacy applications might need them. This results in a large, bulky architecture of collective functions that is not efficient.","While the functionality of these functions must be maintained to support legacy applications, various embodiments of the invention do so in a manner that is much less cumbersome and much more efficient. Specifically, embodiments of the invention create the necessary resources for legacy applications only when they are needed by an application. The resources are defined as objects that are collections of data and methods. Each object only contains the methods that pertain to it. No other resources are created or maintained if they are not specifically needed by an application. This is made possible, in the preferred embodiment, through the use of COM objects that encapsulate the functionality of the requested resources.","Accurate version support is provided by the way in which object interfaces are identified. Specifically, each object interface has its own unique identifier. Each different version of a resource is represented by a different interface identifier. An application can specifically request a unique identifier when it wants a particular version of a resource.","One way of implementing this in COM is as follows. As background, every interface in COM is defined by an interface identifier, or IID that is formed by a globally unique identifier or \u201cGUID\u201d. GUIDs are numbers that are generated by the operating system and are bound by the programmer or a development tool to the interfaces that they represent. By programming convention, no two incompatible interfaces can ever have the same IID. One of the rules in COM that accompanies the use of these GUIDs is that if an interface changes in any way whatsoever, so too must its associated IID change. Thus, IIDs and interfaces are inextricably bound together and provide a way to uniquely identify the interface with which it is associated over all other interfaces in its operating universe.","In the present invention, every operating system function is implemented as a method of some interface that has its own assigned unique identifier. In the preferred embodiment, the unique identifier comprises a GUID or IID. Other unique identifiers can, of course, be used. An application that uses a set of functions now specifies unique identifiers that are associated with the functions. This assures the application that it will receive the exact versions of the functions or methods that it needs to execute. In addition, in those circumstances where the resources are instantiated across a distributed system, the unique identifiers are specified across multiple process and machine boundaries. In a preferred embodiment, the applications store the appropriate unique identifiers, GUIDs, or IIDs in their data segment.","One of the benefits of using unique identifiers or IIDs is that each represents the syntax and the semantics of an interface. If the syntax or the semantics of an interface changes, the interface must be assigned a new identifier or IID. By representing the operating system resources as COM objects that support these interfaces, each with their own specific identifier or IID, applications can be assured of the desired call syntax and semantics when specific interfaces are requested. Specifically and with reference to the COM embodiments, an application that knows it is operating on an operating system that has its resources defined as COM objects can call QueryInterface on a particular object. By specifying the IID in the QueryInterface call, the application can determine whether that object implements a specific version of a specific interface.","In addition, embodiments of the invention can provide an operating system with the ability to determine, based on the specified unique identifier, whether it has the resource that is requested. If it does not, the operating system can ascertain the location of the particular resource and retrieve it so that the application can have the requested resource. The location from which the resource is retrieved can be across process and machine boundaries. As an example, consider the following. If an application asks for a specific version of a \u201cReadFile\u201d interface, and the operating system does not support that version, the operating system may know where to go in order to download the code to implement the requested functionality. Software code for the specific requested interface may, for example, be located on a web site to which the operating system has access. The operating system can then simply access the web site, download the code, and provide the resource to the application.","Linking Against Unique Identifiers","When an application is linked, it typically links against a set of DLL names and entry points in a known manner. The DLLs contain code that corresponds to the particular calls that an application will need to make. So for example, if an application knows that it is going to need the call \u201cCreateFile\u201d, it will link against the DLL name that includes the code for that call, e.g. \u201ckernel32.dll\u201d. At run time, a loader for the operating system loads \u201ckernel32.dll\u201d into the address space for the application. Linking against DLLs in this manner does not support versioning because there is no way to specify a particular version of a resource.","To address this and other problems, one embodiment of the invention establishes a library that contains unique identifiers for one or more interfaces, e.g. GUIDs, and the method offsets that are associated with the unique identifiers. The method offsets correspond to the vtable entry for the unique identifier. An application is then linked against the unique identifiers. For example, when an application is compiled, it is linked against one or more \u201c.lib\u201d or library files. A linker is responsible for taking the \u201c.lib\u201d files that have been specified by the application and looking for the functions or methods that are needed by the application. When the linker finds the appropriate specific functions, it copies information out of the \u201c.lib\u201d file and into the binary image of the application. This information includes the name of the DLL containing the functions, and the name of the function. Linking by GUID and method offset can be accomplished by simply modifying the library or \u201c.lib\u201d files by replacing the DLL names and function names with the GUIDs and method offsets. This change does not affect the application, operating system, or compiler. For example, DLL names typically have the form \u201cxxxxxx.dll\u201d. The GUID identifier, on the other hand, is represented as a hexadecimal string that is specified by a set of brackets \u201c{ }\u201d. The linker and the loader can then be modified by simply specifying that they should look for the brackets, instead of looking for the \u201cxxxxxx.dll\u201d form. This results in loading only those specific interfaces (containing the appropriate methods) that are needed for an application instead of any DLLs. This supports versioning because an application can specifically name, by GUID, the specific interfaces that it needs to operate. Accordingly, only those interfaces that constitute the specific version that an application requests are loaded.","Factorization","Factorization involves looking at a set of functions and reorganizing the functions into defined interfaces based upon some definable logical relationship between the functions. In the described embodiment of the invention, the existing functions of an operating system are factored and assigned to different interfaces, so that the functions are now implemented as interface methods. The interfaces are associated with objects that represent underlying operating resources such as files, windows, etc. In this context, an \u201cobject\u201d is a data structure that includes both data and associated methods. The objects are preferably COM objects that can be instantiated anywhere throughout a remote computing system. Factoring the function calls associated with an operating system's resources provides independent operating system resources and promotes clarity. It also promotes effective, efficient versioning, and clean remoting of the resources.",{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 10","b":["200","202"]},"Step  factors the first groups into individual sub-groups based upon a second criteria. An exemplary second criteria is based upon the nature of the operation of a function on the particular item or resource with which it is associated. For example, by nature, some functions create resources such as windows, while other functions do not create resources. Rather, these other functions have an effect on, or operate in some manner on a resource after it has been created. Accordingly, step  considers this operational nature and assigns the functions to different sub-groups based upon operational differences. In one embodiment, the groups are factored into sub-groups by considering the call parameters and return values that the functions use. This permits factorization to take place based upon each function's use of a handle. As an example, consider the following five functions:\n\n","A loaded operating system resource is exported to the application as an opaque value called a kernel handle. Functions that create kernel handles (i.e., resources) are moved to a \u201cfactory\u201d interface, and functions that then query or manipulate these kernel handles are moved to a \u201chandle\u201d interface. Accordingly, step  assigns the sub-groups to different object interfaces. For example, those functions that create a window are assigned into an interface sub-group called IWin32WindowFactory, while those functions that do not create a window, but rather operate on it in some way are assigned into an interface sub-group called IWin32WindowHandle. Each interface represents a particular object's implementation of its collective functions. Objects can now be created or instantiated that include interfaces that contain one or more methods that correspond to the functions. Objects can be instantiated anywhere in a remote computing environment.","In a further extension of the factorization, consideration is given to functions that act upon a number of different resources. For example, Win32 has several calls that synchronize on a specified handle. The specified handle can represent a standard synchronization resource, such as a mutual exclusion lock, or less common synchronization resources such as processes or files. By simply factoring the functions as described above, this relationship would be missed. For example, the synchronization calls would be placed in a IWin32SyncHandle interface, while the process and file calls would be placed in IWin32ProcessHandle and IWin32FileHandle interfaces, respectively. In order to capture the relationship between these functions though, the process and file interfaces should also include the synchronization calls. Because the process and file handles can be thought of as logically extending the functionality of the synchronization handle, the concept of interface inheritance can be used to ensure that this takes place. Accordingly, both the IWin32ProcessHandle and IWin32FileHandle will thus inherit from the IWin32SyncHandle interface. This means that the IWin32ProcessHandle and IWin32FileHandle interfaces contain all the methods of the IWin32SyncHandle interface, in addition to their own methods.","To assist in further understanding of the factorization scheme, the following example is given by considering again the five functions listed above.  constitutes a small but exemplary subset of the 130+window functions in the Win32 operating system. The \u201cCreateWindow( )\u201d function creates a window. The remaining functions execute a dialog box, flash the window's title bar, query various window properties, and return the current text in the window title bar. These functions all operate on windows in some way and are first factored into a windows group. Next, the functions are further factored depending on their use of kernel handles (denoted by \u201cHANDLE\u201d in the above functions). Since \u201cCreateWindow( )\u201d creates a handle or window, it is factored into a factory sub-group called IWin32WindowFactory. Since the other functions do not create a window, but only operate on or relative to one, they are placed in a handle sub-group called IWin32WindowHandle. In a third step, the IWin32WindowHandle sub-group is further factored into IWin32WindowState and IWin32Property interfaces. The State and Property interfaces are said to compose the IWin32WindowHandle interface. This composition is modeled through interface aggregation. The dialog calls are factored into their own interface since they are logical extensions of the windows. This is modeled through interface inheritance. Interface aggregation and inheritance are discussed in more detail in the Brockschmidt text above.","To further assist in understanding the factorization scheme,  are provided, as well as the factorization list below.  lists the interface hierarchy and factoring of a subset of more than one thousand functions of the Win32 operating system. The subset contains the necessary Win32 functions to support three operating system-intensive applications: Microsoft PhotoDraw, the Microsoft Developers' Network Corporate Benefits sample, and Microsoft Research's Octarine. The first is a commercial image manipulation package, the second is a widely distributed sample three-tiered, client-server application, and the third is a prototype COM-based integrated productivity application. All obsolete Windows 3.1 (16-bit) calls have been placed in IWin16 interfaces. In implementation, the top-level call prototypes will mirror their Win32 counterparts, with the appropriate parameters replaced by interface pointers. Note that these calls can wrap lower-level methods that implement different parameters. For example, the lower level methods could return descriptive HRESULTs directly and the Win32 return types as OUT parameters. Additionally, ANSI API calls can be implemented as wrappers of their UNICODE counterparts. The wrappers will simply perform argument translation and then invoke the counterpart.","The factorization list below lists the interface hierarchy. Inheritance relationships are clearly shown by the connecting lines, while aggregation is pictured by placing one interface block within another. This section also lists the call factorization. In the factorization list, \u201cX:Y\u201d denotes that X inherits from Y, and \u201cY\u2190X\u201d denotes that X is aggregated into Y.","Factorization List",{"@attributes":{"id":"p-0089","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Generic Handles"]},{"entry":[{},"\u2003IWin32Handle"]},{"entry":[{},"\u2003\u2003CloseHandle"]},{"entry":[{},"Atoms"]},{"entry":[{},"\u2003IWin32Atom"]},{"entry":[{},"\u2003\u2003GlobalDeleteAtom"]},{"entry":[{},"\u2003\u2003GlobalGetAtomNameA"]},{"entry":[{},"\u2003IWin32AtomFactory"]},{"entry":[{},"\u2003\u2003GlobalAddAtomA"]},{"entry":[{},"Clipboard"]},{"entry":[{},"\u2003IWin32Clipboard"]},{"entry":[{},"\u2003\u2003\u2003ChangeClipboardChain"]},{"entry":[{},"\u2003\u2003\u2003CloseClipboard"]},{"entry":[{},"\u2003\u2003\u2003GetClipboardData"]},{"entry":[{},"\u2003\u2003\u2003GetClipboardFormatNameA"]},{"entry":[{},"\u2003\u2003\u2003GetClipboardFormatNameW"]},{"entry":[{},"\u2003\u2003\u2003GetClipboardOwner"]},{"entry":[{},"\u2003\u2003\u2003GetClipboardViewer"]},{"entry":[{},"\u2003\u2003\u2003GetOpenClipboardWindow"]},{"entry":[{},"\u2003\u2003\u2003IsClipboardFormatAvailable"]},{"entry":[{},"\u2003\u2003\u2003SetClipboardData"]},{"entry":[{},"\u2003IWin32ClipboardFactory"]},{"entry":[{},"\u2003\u2003\u2003RegisterClipboardFormatA"]},{"entry":[{},"\u2003\u2003\u2003RegisterClipboardFormatW"]},{"entry":[{},"Console"]},{"entry":[{},"\u2003IWin32Console: IWin32SyncHandle"]},{"entry":[{},"\u2003\u2003\u2003GetConsoleMode"]},{"entry":[{},"\u2003\u2003\u2003GetNumberOfConsoleInputEvents"]},{"entry":[{},"\u2003\u2003\u2003PeekConsoleInputA"]},{"entry":[{},"\u2003\u2003\u2003ReadConsoleA"]},{"entry":[{},"\u2003\u2003\u2003ReadConsoleInputA"]},{"entry":[{},"\u2003\u2003\u2003SetConsoleMode"]},{"entry":[{},"\u2003\u2003\u2003SetStdHandle"]},{"entry":[{},"\u2003\u2003\u2003WriteConsoleA"]},{"entry":[{},"\u2003IWin32ConsoleFactory"]},{"entry":[{},"\u2003\u2003\u2003AllocConsole"]},{"entry":[{},"\u2003\u2003\u2003GetStdHandle"]},{"entry":[{},"Drawing"]},{"entry":[{},"\u2003IWin16DeviceContextFont:"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin16DeviceContext"]},{"entry":[{},"\u2003\u2003\u2003EnumFontFamiliesA"]},{"entry":[{},"\u2003\u2003\u2003EnumFontsW"]},{"entry":[{},"\u2003\u2003\u2003GetCharWidthA"]},{"entry":[{},"\u2003\u2003\u2003GetTextExtentPointA"]},{"entry":[{},"\u2003\u2003\u2003GetTextExtentPointW"]},{"entry":[{},"\u2003IWin16MetaFile: IWin16DeviceContext"]},{"entry":[{},"\u2003\u2003\u2003CloseMetaFile"]},{"entry":[{},"\u2003\u2003\u2003CopyMetaFileA"]},{"entry":[{},"\u2003\u2003\u2003DeleteMetaFile"]},{"entry":[{},"\u2003\u2003\u2003EnumMetaFile"]},{"entry":[{},"\u2003\u2003\u2003GetMetaFileA"]},{"entry":[{},"\u2003\u2003\u2003GetMetaFileBitsEx"]},{"entry":[{},"\u2003\u2003\u2003GetWinMetaFileBits"]},{"entry":[{},"\u2003\u2003\u2003PlayMetaFile"]},{"entry":[{},"\u2003\u2003\u2003PlayMetaFileRecord"]},{"entry":[{},"\u2003IWin16MetaFileFactory"]},{"entry":[{},"\u2003\u2003\u2003GetEnhMetaFileA"]},{"entry":[{},"\u2003\u2003\u2003SetEnhMetaFileBits"]},{"entry":[{},"\u2003\u2003\u2003SetMetaFileBitsEx"]},{"entry":[{},"\u2003IWin32Bitmap: IWin32GDIObject"]},{"entry":[{},"\u2003\u2003\u2003CreatePatternBrush"]},{"entry":[{},"\u2003\u2003\u2003GetBitmapDimensionEx"]},{"entry":[{},"\u2003\u2003\u2003GetDIBits"]},{"entry":[{},"\u2003\u2003\u2003SetBitmapDimensionEx"]},{"entry":[{},"\u2003\u2003\u2003SetDIBits"]},{"entry":[{},"\u2003\u2003\u2003SetDIBitsToDevice"]},{"entry":[{},"\u2003IWin32BitmapFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateBitmap"]},{"entry":[{},"\u2003\u2003\u2003CreateBitmapIndirect"]},{"entry":[{},"\u2003\u2003\u2003CreateCompatibleBitmap"]},{"entry":[{},"\u2003\u2003\u2003CreateDIBSection"]},{"entry":[{},"\u2003\u2003\u2003CreateDIBitmap"]},{"entry":[{},"\u2003\u2003\u2003CreateDiscardableBitmap"]},{"entry":[{},"\u2003IWin32BrushFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateBrushIndirect"]},{"entry":[{},"\u2003\u2003\u2003CreateDIBPatternBrushPt"]},{"entry":[{},"\u2003\u2003\u2003CreateHatchBrush"]},{"entry":[{},"\u2003\u2003\u2003CreateSolidBrush"]},{"entry":[{},"\u2003IWin32Colorspace"]},{"entry":[{},"\u2003\u2003\u2003DeleteColorSpace"]},{"entry":[{},"\u2003IWin32ColorspaceFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateColorSpaceA"]},{"entry":[{},"\u2003IWin32Cursor"]},{"entry":[{},"\u2003\u2003\u2003DestroyCursor"]},{"entry":[{},"\u2003\u2003\u2003SetCursor"]},{"entry":[{},"\u2003IWin32CursorFactory"]},{"entry":[{},"\u2003\u2003\u2003GetCursor"]},{"entry":[{},"\u2003IWin32CursorUtility"]},{"entry":[{},"\u2003\u2003\u2003ClipCursor"]},{"entry":[{},"\u2003\u2003\u2003GetCursorPos"]},{"entry":[{},"\u2003\u2003\u2003SetCursorPos"]},{"entry":[{},"\u2003\u2003\u2003ShowCursor"]},{"entry":[{},"\u2003IWin32DeviceContext\u2190"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32DeviceContextFont,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32DeviceContextCoords,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32Path,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32DeviceContextProperties,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32ScreenClip"]},{"entry":[{},"\u2003\u2003\u2003AngleArc"]},{"entry":[{},"\u2003\u2003\u2003Arc"]},{"entry":[{},"\u2003\u2003\u2003ArcTo"]},{"entry":[{},"\u2003\u2003\u2003BitBlt"]},{"entry":[{},"\u2003\u2003\u2003Chord"]},{"entry":[{},"\u2003\u2003\u2003CreateCompatibleDC"]},{"entry":[{},"\u2003\u2003\u2003DeleteDC"]},{"entry":[{},"\u2003\u2003\u2003DrawEdge"]},{"entry":[{},"\u2003\u2003\u2003DrawEscape"]},{"entry":[{},"\u2003\u2003\u2003DrawFocusRect"]},{"entry":[{},"\u2003\u2003\u2003DrawFrameControl"]},{"entry":[{},"\u2003\u2003\u2003DrawIcon"]},{"entry":[{},"\u2003\u2003\u2003DrawIconEx"]},{"entry":[{},"\u2003\u2003\u2003DrawStateA"]},{"entry":[{},"\u2003\u2003\u2003DrawTextA"]},{"entry":[{},"\u2003\u2003\u2003DrawTextW"]},{"entry":[{},"\u2003\u2003\u2003Ellipse"]},{"entry":[{},"\u2003\u2003\u2003EnumObjects"]},{"entry":[{},"\u2003\u2003\u2003ExtFloodFill"]},{"entry":[{},"\u2003\u2003\u2003ExtTextOutA"]},{"entry":[{},"\u2003\u2003\u2003ExtTextOutW"]},{"entry":[{},"\u2003\u2003\u2003FillRect"]},{"entry":[{},"\u2003\u2003\u2003FillRgn"]},{"entry":[{},"\u2003\u2003\u2003FloodFill"]},{"entry":[{},"\u2003\u2003\u2003FrameRect"]},{"entry":[{},"\u2003\u2003\u2003FrameRgn"]},{"entry":[{},"\u2003\u2003\u2003GdiFlush"]},{"entry":[{},"\u2003\u2003\u2003GetCurrentObject"]},{"entry":[{},"\u2003\u2003\u2003GetCurrentPositionEx"]},{"entry":[{},"\u2003\u2003\u2003GetPixel"]},{"entry":[{},"\u2003\u2003\u2003GrayStringA"]},{"entry":[{},"\u2003\u2003\u2003GrayStringW"]},{"entry":[{},"\u2003\u2003\u2003InvertRect"]},{"entry":[{},"\u2003\u2003\u2003InvertRgn"]},{"entry":[{},"\u2003\u2003\u2003LineDDA"]},{"entry":[{},"\u2003\u2003\u2003LineTo"]},{"entry":[{},"\u2003\u2003\u2003MaskBlt"]},{"entry":[{},"\u2003\u2003\u2003MoveToEx"]},{"entry":[{},"\u2003\u2003\u2003PaintRgn"]},{"entry":[{},"\u2003\u2003\u2003PatBlt"]},{"entry":[{},"\u2003\u2003\u2003Pie"]},{"entry":[{},"\u2003\u2003\u2003PlgBlt"]},{"entry":[{},"\u2003\u2003\u2003PolyBezier"]},{"entry":[{},"\u2003\u2003\u2003PolyBezierTo"]},{"entry":[{},"\u2003\u2003\u2003PolyDraw"]},{"entry":[{},"\u2003\u2003\u2003PolyPolygon"]},{"entry":[{},"\u2003\u2003\u2003PolyPolyline"]},{"entry":[{},"\u2003\u2003\u2003Polygon"]},{"entry":[{},"\u2003\u2003\u2003Polyline"]},{"entry":[{},"\u2003\u2003\u2003PolylineTo"]},{"entry":[{},"\u2003\u2003\u2003Rectangle"]},{"entry":[{},"\u2003\u2003\u2003ReleaseDC"]},{"entry":[{},"\u2003\u2003\u2003ResetDCA"]},{"entry":[{},"\u2003\u2003\u2003RestoreDC"]},{"entry":[{},"\u2003\u2003\u2003RoundRect"]},{"entry":[{},"\u2003\u2003\u2003SaveDC"]},{"entry":[{},"\u2003\u2003\u2003ScrollDC"]},{"entry":[{},"\u2003\u2003\u2003SetPixel"]},{"entry":[{},"\u2003\u2003\u2003SetPixelV"]},{"entry":[{},"\u2003\u2003\u2003StretchBlt"]},{"entry":[{},"\u2003\u2003\u2003StretchDIBits"]},{"entry":[{},"\u2003\u2003\u2003TabbedTextOutA"]},{"entry":[{},"\u2003\u2003\u2003TextOutA"]},{"entry":[{},"\u2003\u2003\u2003TextOutW"]},{"entry":[{},"\u2003\u2003\u2003WindowFromDC"]},{"entry":[{},"\u2003IWin32DeviceContextCoordinates"]},{"entry":[{},"\u2003\u2003\u2003DPtoLP"]},{"entry":[{},"\u2003\u2003\u2003LPtoDP"]},{"entry":[{},"\u2003IWin32DeviceContextFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateDCA"]},{"entry":[{},"\u2003\u2003\u2003CreateDCW"]},{"entry":[{},"\u2003\u2003\u2003CreateICA"]},{"entry":[{},"\u2003\u2003\u2003CreateICW"]},{"entry":[{},"\u2003\u2003\u2003CreateMetaFileA"]},{"entry":[{},"\u2003\u2003\u2003CreateMetaFileW"]},{"entry":[{},"\u2003IWin32DeviceContextFont"]},{"entry":[{},"\u2003\u2003\u2003EnumFontFamiliesExA"]},{"entry":[{},"\u2003\u2003\u2003GetAspectRatioFilterEx"]},{"entry":[{},"\u2003\u2003\u2003GetCharABCWidthsA"]},{"entry":[{},"\u2003\u2003\u2003GetCharABCWidthsFloatA"]},{"entry":[{},"\u2003\u2003\u2003GetCharABCWidthsW"]},{"entry":[{},"\u2003\u2003\u2003GetCharWidth32A"]},{"entry":[{},"\u2003\u2003\u2003GetCharWidth32W"]},{"entry":[{},"\u2003\u2003\u2003GetCharWidthFloatA"]},{"entry":[{},"\u2003\u2003\u2003GetFontData"]},{"entry":[{},"\u2003\u2003\u2003GetGlyphOutlineA"]},{"entry":[{},"\u2003\u2003\u2003GetGlyphOutlineW"]},{"entry":[{},"\u2003\u2003\u2003GetKerningPairsA"]},{"entry":[{},"\u2003\u2003\u2003GetOutlineTextMetricsA"]},{"entry":[{},"\u2003\u2003\u2003GetTabbedTextExtentA"]},{"entry":[{},"\u2003\u2003\u2003GetTextAlign"]},{"entry":[{},"\u2003\u2003\u2003GetTextCharacterExtra"]},{"entry":[{},"\u2003\u2003\u2003GetTextCharsetInfo"]},{"entry":[{},"\u2003\u2003\u2003GetTextColor"]},{"entry":[{},"\u2003\u2003\u2003GetTextExtentExPointA"]},{"entry":[{},"\u2003\u2003\u2003GetTextExtentExPointW"]},{"entry":[{},"\u2003\u2003\u2003GetTextExtentPoint32A"]},{"entry":[{},"\u2003\u2003\u2003GetTextExtentPoint32W"]},{"entry":[{},"\u2003\u2003\u2003GetTextFaceA"]},{"entry":[{},"\u2003\u2003\u2003GetTextMetricsA"]},{"entry":[{},"\u2003\u2003\u2003GetTextMetricsW"]},{"entry":[{},"\u2003\u2003\u2003SetMapperFlags"]},{"entry":[{},"\u2003\u2003\u2003SetTextAlign"]},{"entry":[{},"\u2003\u2003\u2003SetTextCharacterExtra"]},{"entry":[{},"\u2003\u2003\u2003SetTextColor"]},{"entry":[{},"\u2003\u2003\u2003SetTextJustification"]},{"entry":[{},"\u2003IWin32DeviceContextProperties"]},{"entry":[{},"\u2003\u2003\u2003GetArcDirection"]},{"entry":[{},"\u2003\u2003\u2003GetBkColor"]},{"entry":[{},"\u2003\u2003\u2003GetBkMode"]},{"entry":[{},"\u2003\u2003\u2003GetBoundsRect"]},{"entry":[{},"\u2003\u2003\u2003GetBrushOrgEx"]},{"entry":[{},"\u2003\u2003\u2003GetColorAdjustment"]},{"entry":[{},"\u2003\u2003\u2003GetColorSpace"]},{"entry":[{},"\u2003\u2003\u2003GetDeviceCaps"]},{"entry":[{},"\u2003\u2003\u2003GetMapMode"]},{"entry":[{},"\u2003\u2003\u2003GetNearestColor"]},{"entry":[{},"\u2003\u2003\u2003GetPolyFillMode"]},{"entry":[{},"\u2003\u2003\u2003GetROP2"]},{"entry":[{},"\u2003\u2003\u2003GetStretchBltMode"]},{"entry":[{},"\u2003\u2003\u2003GetViewportExtEx"]},{"entry":[{},"\u2003\u2003\u2003GetViewportOrgEx"]},{"entry":[{},"\u2003\u2003\u2003GetWindowExtEx"]},{"entry":[{},"\u2003\u2003\u2003GetWindowOrgEx"]},{"entry":[{},"\u2003\u2003\u2003OffsetViewportOrgEx"]},{"entry":[{},"\u2003\u2003\u2003OffsetWindowOrgEx"]},{"entry":[{},"\u2003\u2003\u2003PtVisible"]},{"entry":[{},"\u2003\u2003\u2003RectVisible"]},{"entry":[{},"\u2003\u2003\u2003ScaleViewportExtEx"]},{"entry":[{},"\u2003\u2003\u2003ScaleWindowExtEx"]},{"entry":[{},"\u2003\u2003\u2003SetArcDirection"]},{"entry":[{},"\u2003\u2003\u2003SetBkColor"]},{"entry":[{},"\u2003\u2003\u2003SetBkMode"]},{"entry":[{},"\u2003\u2003\u2003SetBoundsRect"]},{"entry":[{},"\u2003\u2003\u2003SetBrushOrgEx"]},{"entry":[{},"\u2003\u2003\u2003SetColorAdjustment"]},{"entry":[{},"\u2003\u2003\u2003SetColorSpace"]},{"entry":[{},"\u2003\u2003\u2003SetDIBColorTable"]},{"entry":[{},"\u2003\u2003\u2003SetICMMode"]},{"entry":[{},"\u2003\u2003\u2003SetMapMode"]},{"entry":[{},"\u2003\u2003\u2003SetMiterLimit"]},{"entry":[{},"\u2003\u2003\u2003SetPolyFillMode"]},{"entry":[{},"\u2003\u2003\u2003SetROP2"]},{"entry":[{},"\u2003\u2003\u2003SetStretchBltMode"]},{"entry":[{},"\u2003\u2003\u2003SetViewportExtEx"]},{"entry":[{},"\u2003\u2003\u2003SetViewportOrgEx"]},{"entry":[{},"\u2003\u2003\u2003SetWindowExtEx"]},{"entry":[{},"\u2003\u2003\u2003SetWindowOrgEx"]},{"entry":[{},"\u2003\u2003\u2003UpdateColors"]},{"entry":[{},"\u2003IWin32EnhMetaFile:"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32DeviceContext"]},{"entry":[{},"\u2003\u2003\u2003CloseEnhMetaFile"]},{"entry":[{},"\u2003\u2003\u2003CopyEnhMetaFileA"]},{"entry":[{},"\u2003\u2003\u2003CreateEnhMetaFileA"]},{"entry":[{},"\u2003\u2003\u2003CreateEnhMetaFileW"]},{"entry":[{},"\u2003\u2003\u2003DeleteEnhMetaFile"]},{"entry":[{},"\u2003\u2003\u2003EnumEnhMetaFile"]},{"entry":[{},"\u2003\u2003\u2003GdiComment"]},{"entry":[{},"\u2003\u2003\u2003GetEnhMetaFileBits"]},{"entry":[{},"\u2003\u2003\u2003GetEnhMetaFileDescriptionA"]},{"entry":[{},"\u2003\u2003\u2003GetEnhMetaFileDescriptionW"]},{"entry":[{},"\u2003\u2003\u2003GetEnhMetaFileHeader"]},{"entry":[{},"\u2003\u2003\u2003GetEnhMetaFilePaletteEntries"]},{"entry":[{},"\u2003\u2003\u2003PlayEnhMetaFile"]},{"entry":[{},"\u2003\u2003\u2003PlayEnhMetaFileRecord"]},{"entry":[{},"\u2003IWin32EnhMetaFileFactory"]},{"entry":[{},"\u2003\u2003\u2003SetWinMetaFileBits"]},{"entry":[{},"\u2003IWin32FontFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateFontA"]},{"entry":[{},"\u2003\u2003\u2003CreateFontIndirectA"]},{"entry":[{},"\u2003\u2003\u2003CreateFontIndirectW"]},{"entry":[{},"\u2003\u2003\u2003CreateFontW"]},{"entry":[{},"\u2003IWin32GDIObject"]},{"entry":[{},"\u2003\u2003\u2003DeleteObject"]},{"entry":[{},"\u2003\u2003\u2003GetObjectA"]},{"entry":[{},"\u2003\u2003\u2003GetObjectType"]},{"entry":[{},"\u2003\u2003\u2003GetObjectW"]},{"entry":[{},"\u2003\u2003\u2003SelectObject"]},{"entry":[{},"\u2003\u2003\u2003UnrealizeObject"]},{"entry":[{},"\u2003IWin32GDIObjectFactory"]},{"entry":[{},"\u2003\u2003\u2003GetStockObject"]},{"entry":[{},"\u2003IWin32Icon"]},{"entry":[{},"\u2003\u2003\u2003CopyIcon"]},{"entry":[{},"\u2003\u2003\u2003DestroyIcon"]},{"entry":[{},"\u2003\u2003\u2003GetIconInfo"]},{"entry":[{},"\u2003IWin32IconFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateIcon"]},{"entry":[{},"\u2003\u2003\u2003CreateIconFromResource"]},{"entry":[{},"\u2003\u2003\u2003CreateIconFromResourceEx"]},{"entry":[{},"\u2003\u2003\u2003CreateIconIndirect"]},{"entry":[{},"\u2003\u2003\u2003CreateMenu"]},{"entry":[{},"\u2003IWin32Palette: IWin32GDIObject"]},{"entry":[{},"\u2003\u2003\u2003AnimatePalette"]},{"entry":[{},"\u2003\u2003\u2003GetNearestPaletteIndex"]},{"entry":[{},"\u2003\u2003\u2003GetPaletteEntries"]},{"entry":[{},"\u2003\u2003\u2003ResizePalette"]},{"entry":[{},"\u2003\u2003\u2003SelectPalette"]},{"entry":[{},"\u2003\u2003\u2003SetPaletteEntries"]},{"entry":[{},"\u2003IWin32PaletteFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateHalftonePalette"]},{"entry":[{},"\u2003\u2003\u2003CreatePalette"]},{"entry":[{},"\u2003IWin32PaletteSystem"]},{"entry":[{},"\u2003\u2003\u2003GetSystemPaletteEntries"]},{"entry":[{},"\u2003\u2003\u2003GetSystemPaletteUse"]},{"entry":[{},"\u2003\u2003\u2003RealizePalette"]},{"entry":[{},"\u2003IWin32Path"]},{"entry":[{},"\u2003\u2003\u2003AbortPath"]},{"entry":[{},"\u2003\u2003\u2003BeginPath"]},{"entry":[{},"\u2003\u2003\u2003CloseFigure"]},{"entry":[{},"\u2003\u2003\u2003EndPath"]},{"entry":[{},"\u2003\u2003\u2003FillPath"]},{"entry":[{},"\u2003\u2003\u2003FlattenPath"]},{"entry":[{},"\u2003\u2003\u2003GetMiterLimit"]},{"entry":[{},"\u2003\u2003\u2003GetPath"]},{"entry":[{},"\u2003\u2003\u2003PathToRegion"]},{"entry":[{},"\u2003\u2003\u2003StrokeAndFillPath"]},{"entry":[{},"\u2003\u2003\u2003StrokePath"]},{"entry":[{},"\u2003\u2003\u2003WidenPath"]},{"entry":[{},"\u2003IWin32PenFactory"]},{"entry":[{},"\u2003\u2003\u2003CreatePen"]},{"entry":[{},"\u2003\u2003\u2003CreatePenIndirect"]},{"entry":[{},"\u2003\u2003\u2003ExtCreatePen"]},{"entry":[{},"\u2003IWin32Print: IWin32DeviceContext"]},{"entry":[{},"\u2003\u2003\u2003AbortDoc"]},{"entry":[{},"\u2003\u2003\u2003EndDoc"]},{"entry":[{},"\u2003\u2003\u2003EndPage"]},{"entry":[{},"\u2003\u2003\u2003Escape"]},{"entry":[{},"\u2003\u2003\u2003ExtEscape"]},{"entry":[{},"\u2003\u2003\u2003SetAbortProc"]},{"entry":[{},"\u2003\u2003\u2003StartDocA"]},{"entry":[{},"\u2003\u2003\u2003StartDocW"]},{"entry":[{},"\u2003\u2003\u2003StartPage"]},{"entry":[{},"\u2003IWin32Rect"]},{"entry":[{},"\u2003\u2003\u2003CopyRect"]},{"entry":[{},"\u2003\u2003\u2003EqualRect"]},{"entry":[{},"\u2003\u2003\u2003InflateRect"]},{"entry":[{},"\u2003\u2003\u2003IntersectRect"]},{"entry":[{},"\u2003\u2003\u2003IsRectEmpty"]},{"entry":[{},"\u2003\u2003\u2003OffsetRect"]},{"entry":[{},"\u2003\u2003\u2003PtInRect"]},{"entry":[{},"\u2003\u2003\u2003SetRect"]},{"entry":[{},"\u2003\u2003\u2003SetRectEmpty"]},{"entry":[{},"\u2003\u2003\u2003SubtractRect"]},{"entry":[{},"\u2003\u2003\u2003UnionRect"]},{"entry":[{},"\u2003IWin32Region: IWin32GDIObject"]},{"entry":[{},"\u2003\u2003\u2003CombineRgn"]},{"entry":[{},"\u2003\u2003\u2003EqualRgn"]},{"entry":[{},"\u2003\u2003\u2003GetRegionData"]},{"entry":[{},"\u2003\u2003\u2003GetRgnBox"]},{"entry":[{},"\u2003\u2003\u2003OffsetRgn"]},{"entry":[{},"\u2003\u2003\u2003PtInRegion"]},{"entry":[{},"\u2003\u2003\u2003RectInRegion"]},{"entry":[{},"\u2003\u2003\u2003SetRectRgn"]},{"entry":[{},"\u2003IWin32RegionFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateEllipticRgn"]},{"entry":[{},"\u2003\u2003\u2003CreateEllipticRgnIndirect"]},{"entry":[{},"\u2003\u2003\u2003CreatePolyPolygonRgn"]},{"entry":[{},"\u2003\u2003\u2003CreatePolygonRgn"]},{"entry":[{},"\u2003\u2003\u2003CreateRectRgn"]},{"entry":[{},"\u2003\u2003\u2003CreateRectRgnIndirect"]},{"entry":[{},"\u2003\u2003\u2003CreateRoundRectRgn"]},{"entry":[{},"\u2003\u2003\u2003ExtCreateRegion"]},{"entry":[{},"\u2003IWin32ScreenClip:"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32DeviceContext"]},{"entry":[{},"\u2003\u2003\u2003ExcludeClipRect"]},{"entry":[{},"\u2003\u2003\u2003ExcludeUpdateRgn"]},{"entry":[{},"\u2003\u2003\u2003ExtSelectClipRgn"]},{"entry":[{},"\u2003\u2003\u2003GetClipBox"]},{"entry":[{},"\u2003\u2003\u2003GetClipRgn"]},{"entry":[{},"\u2003\u2003\u2003IntersectClipRect"]},{"entry":[{},"\u2003\u2003\u2003OffsetClipRgn"]},{"entry":[{},"\u2003\u2003\u2003SelectClipPath"]},{"entry":[{},"\u2003\u2003\u2003SelectClipRgn"]},{"entry":[{},"Environment"]},{"entry":[{},"\u2003IWin32EnvironmentUtility"]},{"entry":[{},"\u2003\u2003\u2003FreeEnvironmentStringsA"]},{"entry":[{},"\u2003\u2003\u2003FreeEnvironmentStringsW"]},{"entry":[{},"\u2003\u2003\u2003GetEnvironmentStrings"]},{"entry":[{},"\u2003\u2003\u2003GetEnvironmentStringsW"]},{"entry":[{},"\u2003\u2003\u2003GetEnvironmentVariableW"]},{"entry":[{},"\u2003\u2003\u2003SetEnvironmentVariableA"]},{"entry":[{},"\u2003\u2003\u2003SetEnvironmentVariableW"]},{"entry":[{},"File"]},{"entry":[{},"\u2003IWin16File: IWin16Handle"]},{"entry":[{},"\u2003\u2003\u2003_hread"]},{"entry":[{},"\u2003\u2003\u2003_hwrite"]},{"entry":[{},"\u2003\u2003\u2003_lclose"]},{"entry":[{},"\u2003\u2003\u2003_llseek"]},{"entry":[{},"\u2003\u2003\u2003_lopen"]},{"entry":[{},"\u2003\u2003\u2003_lwrite"]},{"entry":[{},"\u2003IWin16FileFactory"]},{"entry":[{},"\u2003\u2003\u2003OpenFile"]},{"entry":[{},"\u2003\u2003\u2003_lcreat"]},{"entry":[{},"\u2003\u2003\u2003_lread"]},{"entry":[{},"\u2003IWin32File: IWin32AsyncIOHandle"]},{"entry":[{},"\u2003\u2003\u2003FlushFileBuffers"]},{"entry":[{},"\u2003\u2003\u2003GetFileInformationByHandle"]},{"entry":[{},"\u2003\u2003\u2003GetFileSize"]},{"entry":[{},"\u2003\u2003\u2003GetFileTime"]},{"entry":[{},"\u2003\u2003\u2003GetFileType"]},{"entry":[{},"\u2003\u2003\u2003LockFile"]},{"entry":[{},"\u2003\u2003\u2003LockFileEx"]},{"entry":[{},"\u2003\u2003\u2003ReadFile"]},{"entry":[{},"\u2003\u2003\u2003ReadFileEx"]},{"entry":[{},"\u2003\u2003\u2003SetEndOfFile"]},{"entry":[{},"\u2003\u2003\u2003SetFilePointer"]},{"entry":[{},"\u2003\u2003\u2003SetFileTime"]},{"entry":[{},"\u2003\u2003\u2003UnlockFile"]},{"entry":[{},"\u2003\u2003\u2003WriteFile"]},{"entry":[{},"\u2003\u2003\u2003WriteFileEx"]},{"entry":[{},"\u2003IWin32FileFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateFileA"]},{"entry":[{},"\u2003\u2003\u2003CreateFileW"]},{"entry":[{},"\u2003\u2003\u2003OpenFileMappingA"]},{"entry":[{},"\u2003IWin32FileMapping:"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32ASyncIOHandle"]},{"entry":[{},"\u2003\u2003\u2003MapViewOfFile"]},{"entry":[{},"\u2003\u2003\u2003UnmapViewOfFile"]},{"entry":[{},"\u2003IWin32FileMappingFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateFileMappingA"]},{"entry":[{},"\u2003IWin32FileSystem"]},{"entry":[{},"\u2003\u2003\u2003CopyFileA"]},{"entry":[{},"\u2003\u2003\u2003CopyFileEx"]},{"entry":[{},"\u2003\u2003\u2003CopyFileW"]},{"entry":[{},"\u2003\u2003\u2003CreateDirectoryA"]},{"entry":[{},"\u2003\u2003\u2003CreateDirectoryExA"]},{"entry":[{},"\u2003\u2003\u2003CreateDirectoryExW"]},{"entry":[{},"\u2003\u2003\u2003CreateDirectoryW"]},{"entry":[{},"\u2003\u2003\u2003DeleteFileA"]},{"entry":[{},"\u2003\u2003\u2003DeleteFileW"]},{"entry":[{},"\u2003\u2003\u2003GetDiskFreeSpaceA"]},{"entry":[{},"\u2003\u2003\u2003GetDiskFreeSpaceEx"]},{"entry":[{},"\u2003\u2003\u2003GetDriveTypeA"]},{"entry":[{},"\u2003\u2003\u2003GetDriveTypeW"]},{"entry":[{},"\u2003\u2003\u2003GetFileAttributesA"]},{"entry":[{},"\u2003\u2003\u2003GetFileAttributesW"]},{"entry":[{},"\u2003\u2003\u2003GetFileVersionInfoA"]},{"entry":[{},"\u2003\u2003\u2003GetFileVersionInfoSizeA"]},{"entry":[{},"\u2003\u2003\u2003GetLogicalDriveStringsA"]},{"entry":[{},"\u2003\u2003\u2003GetLogicalDrives"]},{"entry":[{},"\u2003\u2003\u2003GetVolumeInformationA"]},{"entry":[{},"\u2003\u2003\u2003GetVolumeInformationW"]},{"entry":[{},"\u2003\u2003\u2003MoveFileA"]},{"entry":[{},"\u2003\u2003\u2003MoveFileEx"]},{"entry":[{},"\u2003\u2003\u2003MoveFileW"]},{"entry":[{},"\u2003\u2003\u2003RemoveDirectoryA"]},{"entry":[{},"\u2003\u2003\u2003RemoveDirectoryW"]},{"entry":[{},"\u2003\u2003\u2003SetFileAttributesA"]},{"entry":[{},"\u2003\u2003\u2003SetFileAttributesW"]},{"entry":[{},"\u2003\u2003\u2003UnlockFileEx"]},{"entry":[{},"\u2003\u2003\u2003VerQueryValueA"]},{"entry":[{},"\u2003IWin32FileUtility"]},{"entry":[{},"\u2003\u2003\u2003AreFileApisANSI"]},{"entry":[{},"\u2003\u2003\u2003CompareFileTime"]},{"entry":[{},"\u2003\u2003\u2003DosDateTimeToFileTime"]},{"entry":[{},"\u2003\u2003\u2003FileTimeToDosDateTime"]},{"entry":[{},"\u2003\u2003\u2003FileTimeToLocalFileTime"]},{"entry":[{},"\u2003\u2003\u2003FileTimeToSystemTime"]},{"entry":[{},"\u2003\u2003\u2003GetFullPathNameA"]},{"entry":[{},"\u2003\u2003\u2003GetFullPathNameW"]},{"entry":[{},"\u2003\u2003\u2003GetShortPathNameA"]},{"entry":[{},"\u2003\u2003\u2003GetShortPathNameW"]},{"entry":[{},"\u2003\u2003\u2003GetTempFileNameA"]},{"entry":[{},"\u2003\u2003\u2003GetTempFileNameW"]},{"entry":[{},"\u2003\u2003\u2003GetTempPathA"]},{"entry":[{},"\u2003\u2003\u2003GetTempPathW"]},{"entry":[{},"\u2003\u2003\u2003LocalFileTimeToFileTime"]},{"entry":[{},"\u2003\u2003\u2003SearchPathA"]},{"entry":[{},"\u2003\u2003\u2003SystemTimeToFileTime"]},{"entry":[{},"\u2003IWin32FindFile: IWin32ASyncIOHandle"]},{"entry":[{},"\u2003\u2003\u2003FindClose"]},{"entry":[{},"\u2003\u2003\u2003FindCloseChangeNotification"]},{"entry":[{},"\u2003\u2003\u2003FindFirstFileEx"]},{"entry":[{},"\u2003\u2003\u2003FindNextChangeNotification"]},{"entry":[{},"\u2003\u2003\u2003FindNextFileA"]},{"entry":[{},"\u2003\u2003\u2003FindNextFileW"]},{"entry":[{},"\u2003IWin32FindFileFactory"]},{"entry":[{},"\u2003\u2003\u2003FindFirstChangeNotificationA"]},{"entry":[{},"\u2003\u2003\u2003FindFirstChangeNotificationW"]},{"entry":[{},"\u2003\u2003\u2003FindFirstFileA"]},{"entry":[{},"\u2003\u2003\u2003FindFirstFileW"]},{"entry":[{},"Interprocess Communication"]},{"entry":[{},"\u2003IWin32DDE"]},{"entry":[{},"\u2003\u2003\u2003DdeAccessData"]},{"entry":[{},"\u2003\u2003\u2003DdeDisconnect"]},{"entry":[{},"\u2003\u2003\u2003DdeFreeDataHandle"]},{"entry":[{},"\u2003\u2003\u2003DdeFreeStringHandle"]},{"entry":[{},"\u2003\u2003\u2003DdeUnaccessData"]},{"entry":[{},"\u2003IWin32DDEFactory"]},{"entry":[{},"\u2003\u2003\u2003DdeClientTransaction"]},{"entry":[{},"\u2003\u2003\u2003DdeConnect"]},{"entry":[{},"\u2003\u2003\u2003DdeCreateStringHandleA"]},{"entry":[{},"\u2003IWin32DDEUtility"]},{"entry":[{},"\u2003\u2003\u2003DdeGetLastError"]},{"entry":[{},"\u2003\u2003\u2003DdeInitializeA"]},{"entry":[{},"\u2003\u2003\u2003ReuseDDEIParam"]},{"entry":[{},"\u2003\u2003\u2003UnpackDDEIParam"]},{"entry":[{},"\u2003IWin32Pipe: IWin32AsyncIOHandle"]},{"entry":[{},"\u2003\u2003\u2003PeekNamedPipe"]},{"entry":[{},"\u2003IWin32PipeFactory"]},{"entry":[{},"\u2003\u2003\u2003CreatePipe"]},{"entry":[{},"Keyboard"]},{"entry":[{},"\u2003IWin32Keyboard"]},{"entry":[{},"\u2003\u2003\u2003GetAsyncKeyState"]},{"entry":[{},"\u2003\u2003\u2003GetKeyState"]},{"entry":[{},"\u2003\u2003\u2003GetKeyboardState"]},{"entry":[{},"\u2003\u2003\u2003MapVirtualKeyA"]},{"entry":[{},"\u2003\u2003\u2003SetKeyboardState"]},{"entry":[{},"\u2003\u2003\u2003VkKeyScanA"]},{"entry":[{},"\u2003\u2003\u2003keybd_event"]},{"entry":[{},"\u2003IWin32KeyboardLayout"]},{"entry":[{},"\u2003\u2003\u2003ActivateKeyboardLayout"]},{"entry":[{},"\u2003IWin32KeyboardLayoutFactory"]},{"entry":[{},"\u2003\u2003\u2003GetKeyboardLayout"]},{"entry":[{},"Memory"]},{"entry":[{},"\u2003IWin16GlobalMemory: IWin16Memory"]},{"entry":[{},"\u2003\u2003\u2003GlobalFlags"]},{"entry":[{},"\u2003\u2003\u2003GlobalFree"]},{"entry":[{},"\u2003\u2003\u2003GlobalLock"]},{"entry":[{},"\u2003\u2003\u2003GlobalReAlloc"]},{"entry":[{},"\u2003\u2003\u2003GlobalSize"]},{"entry":[{},"\u2003\u2003\u2003GlobalUnlock"]},{"entry":[{},"\u2003IWin16GlobalMemoryFactory"]},{"entry":[{},"\u2003\u2003\u2003GlobalAlloc"]},{"entry":[{},"\u2003\u2003\u2003GlobalHandle"]},{"entry":[{},"\u2003IWin32Heap: IWin32Memory"]},{"entry":[{},"\u2003\u2003\u2003HeapAlloc"]},{"entry":[{},"\u2003\u2003\u2003HeapCompact"]},{"entry":[{},"\u2003\u2003\u2003HeapDestroy"]},{"entry":[{},"\u2003\u2003\u2003HeapFree"]},{"entry":[{},"\u2003\u2003\u2003HeapReAlloc"]},{"entry":[{},"\u2003\u2003\u2003HeapSize"]},{"entry":[{},"\u2003\u2003\u2003HeapValidate"]},{"entry":[{},"\u2003\u2003\u2003HeapWalk"]},{"entry":[{},"\u2003IWin32HeapFactory"]},{"entry":[{},"\u2003\u2003\u2003GetProcessHeap"]},{"entry":[{},"\u2003\u2003\u2003HeapCreate"]},{"entry":[{},"\u2003IWin16LocalMemory: IWin16Memory"]},{"entry":[{},"\u2003\u2003\u2003LocalFree"]},{"entry":[{},"\u2003\u2003\u2003LocalLock"]},{"entry":[{},"\u2003\u2003\u2003LocalReAlloc"]},{"entry":[{},"\u2003\u2003\u2003LocalUnlock"]},{"entry":[{},"\u2003IWin32LocalMemoryFactory"]},{"entry":[{},"\u2003\u2003\u2003LocalAlloc"]},{"entry":[{},"\u2003IWin16Memory"]},{"entry":[{},"\u2003\u2003\u2003IsBadCodePtr"]},{"entry":[{},"\u2003\u2003\u2003IsBadReadPtr"]},{"entry":[{},"\u2003\u2003\u2003IsBadStringPtrA"]},{"entry":[{},"\u2003\u2003\u2003IsBadStringPtrW"]},{"entry":[{},"\u2003\u2003\u2003IsBadWritePtr"]},{"entry":[{},"\u2003IWin32Memory"]},{"entry":[{},"\u2003\u2003\u2003IsBadCodePtr"]},{"entry":[{},"\u2003\u2003\u2003IsBadReadPtr"]},{"entry":[{},"\u2003\u2003\u2003IsBadStringPtrA"]},{"entry":[{},"\u2003\u2003\u2003IsBadStringPtrW"]},{"entry":[{},"\u2003\u2003\u2003IsBadWritePtr"]},{"entry":[{},"\u2003IWin32VirtualMemory: IWin32Memory"]},{"entry":[{},"\u2003\u2003\u2003VirtualFree"]},{"entry":[{},"\u2003\u2003\u2003VirtualLock"]},{"entry":[{},"\u2003\u2003\u2003VirtualProtect"]},{"entry":[{},"\u2003\u2003\u2003VirtualQuery"]},{"entry":[{},"\u2003\u2003\u2003VirtualUnlock"]},{"entry":[{},"\u2003IWin32VirtualMemoryFactory"]},{"entry":[{},"\u2003\u2003\u2003VirtualAlloc"]},{"entry":[{},"Module"]},{"entry":[{},"\u2003IWin32Module: IWin32Handle"]},{"entry":[{},"\u2003\u2003\u2003DisableThreadLibraryCalls"]},{"entry":[{},"\u2003\u2003\u2003EnumResourceNamesA"]},{"entry":[{},"\u2003\u2003\u2003FindResourceA"]},{"entry":[{},"\u2003\u2003\u2003FreeLibrary"]},{"entry":[{},"\u2003\u2003\u2003GetModuleFileNameA"]},{"entry":[{},"\u2003\u2003\u2003GetModuleFileNameW"]},{"entry":[{},"\u2003\u2003\u2003GetProcAddress"]},{"entry":[{},"\u2003\u2003\u2003LoadBitmapA"]},{"entry":[{},"\u2003\u2003\u2003LoadBitmapW"]},{"entry":[{},"\u2003\u2003\u2003LoadCursorA"]},{"entry":[{},"\u2003\u2003\u2003LoadCursorW"]},{"entry":[{},"\u2003\u2003\u2003LoadIconA"]},{"entry":[{},"\u2003\u2003\u2003LoadIconW"]},{"entry":[{},"\u2003\u2003\u2003LoadImageA"]},{"entry":[{},"\u2003\u2003\u2003LoadMenuA"]},{"entry":[{},"\u2003\u2003\u2003LoadMenuIndirectA"]},{"entry":[{},"\u2003\u2003\u2003LoadStringA"]},{"entry":[{},"\u2003\u2003\u2003SizeofResource"]},{"entry":[{},"\u2003IWin32ModuleFactory"]},{"entry":[{},"\u2003\u2003\u2003GetModuleHandleA"]},{"entry":[{},"\u2003\u2003\u2003GetModuleHandleW"]},{"entry":[{},"\u2003\u2003\u2003LoadLibraryA"]},{"entry":[{},"\u2003\u2003\u2003LoadLibraryExA"]},{"entry":[{},"\u2003\u2003\u2003LoadLibraryW"]},{"entry":[{},"Multiple Window Position"]},{"entry":[{},"\u2003IWin32MWP"]},{"entry":[{},"\u2003\u2003\u2003BeginDeferWindowPos"]},{"entry":[{},"\u2003\u2003\u2003DeferWindowPos"]},{"entry":[{},"\u2003\u2003\u2003EndDeferWindowPos"]},{"entry":[{},"Ole"]},{"entry":[{},"\u2003IWin32Ole"]},{"entry":[{},"\u2003\u2003\u2003CoDisconnectObject"]},{"entry":[{},"\u2003\u2003\u2003CoLockObjectExternal"]},{"entry":[{},"\u2003\u2003\u2003CoRegisterClassObject"]},{"entry":[{},"\u2003\u2003\u2003CoRevokeClassObject"]},{"entry":[{},"\u2003IWin32OleFactory"]},{"entry":[{},"\u2003\u2003\u2003BindMoniker"]},{"entry":[{},"\u2003\u2003\u2003CoCreateInstance"]},{"entry":[{},"\u2003\u2003\u2003CoGetClassObject"]},{"entry":[{},"\u2003\u2003\u2003CoGetInstanceFromFile"]},{"entry":[{},"\u2003\u2003\u2003CreateDataAdviseHolder"]},{"entry":[{},"\u2003\u2003\u2003CreateDataCache"]},{"entry":[{},"\u2003\u2003\u2003CreateILockBytesOnHGlobal"]},{"entry":[{},"\u2003\u2003\u2003CreateOleAdviseHolder"]},{"entry":[{},"\u2003\u2003\u2003CreateStreamOnHGlobal"]},{"entry":[{},"\u2003\u2003\u2003OleCreate"]},{"entry":[{},"\u2003\u2003\u2003OleCreateDefaultHandler"]},{"entry":[{},"\u2003\u2003\u2003OleCreateFromData"]},{"entry":[{},"\u2003\u2003\u2003OleCreateFromFile"]},{"entry":[{},"\u2003\u2003\u2003OleCreateLink"]},{"entry":[{},"\u2003\u2003\u2003OleCreateLinkFromData"]},{"entry":[{},"\u2003\u2003\u2003OleCreateLinkToFile"]},{"entry":[{},"\u2003\u2003\u2003OleGetClipboard"]},{"entry":[{},"\u2003\u2003\u2003OleLoad"]},{"entry":[{},"\u2003IWin32OleMarshalUtility"]},{"entry":[{},"\u2003\u2003\u2003CoMarshalInterface"]},{"entry":[{},"\u2003\u2003\u2003CoReleaseMarshalData"]},{"entry":[{},"\u2003\u2003\u2003CoUnmarshalInterface"]},{"entry":[{},"\u2003IWin32OleMoniker"]},{"entry":[{},"\u2003\u2003\u2003CreateGenericComposite"]},{"entry":[{},"\u2003\u2003\u2003CreateItemMoniker"]},{"entry":[{},"\u2003\u2003\u2003CreatePointerMoniker"]},{"entry":[{},"\u2003\u2003\u2003CreateURLMoniker"]},{"entry":[{},"\u2003\u2003\u2003MkParseDisplayName"]},{"entry":[{},"\u2003\u2003\u2003MonikerCommonPrefixWith"]},{"entry":[{},"\u2003\u2003\u2003MonikerRelativePathTo"]},{"entry":[{},"\u2003IWin32OleMonikerFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateBindCtx"]},{"entry":[{},"\u2003\u2003\u2003CreateFileMoniker"]},{"entry":[{},"\u2003\u2003\u2003GetRunningObjectTable"]},{"entry":[{},"\u2003IWin32OleStg"]},{"entry":[{},"\u2003\u2003\u2003OleConvertIStorageToOLESTREAM"]},{"entry":[{},"\u2003\u2003\u2003OleSave"]},{"entry":[{},"\u2003\u2003\u2003ReadClassStg"]},{"entry":[{},"\u2003\u2003\u2003ReleaseStgMedium"]},{"entry":[{},"\u2003\u2003\u2003WriteClassStg"]},{"entry":[{},"\u2003\u2003\u2003WriteFmtUserTypeStg"]},{"entry":[{},"\u2003IWin32OleStgFactory"]},{"entry":[{},"\u2003\u2003\u2003StgCreateDocfile"]},{"entry":[{},"\u2003\u2003\u2003StgCreateDocfileOnILockBytes"]},{"entry":[{},"\u2003\u2003\u2003StgIsStorageFile"]},{"entry":[{},"\u2003\u2003\u2003StgOpenStorage"]},{"entry":[{},"\u2003IWin32OleStream"]},{"entry":[{},"\u2003\u2003\u2003GetHGlobalFromStream"]},{"entry":[{},"\u2003\u2003\u2003OleConvertOLESTREAMToIStorage"]},{"entry":[{},"\u2003\u2003\u2003OleLoadFromStream"]},{"entry":[{},"\u2003\u2003\u2003OleSaveToStream"]},{"entry":[{},"\u2003\u2003\u2003ReadClassStm"]},{"entry":[{},"\u2003\u2003\u2003WriteClassStm"]},{"entry":[{},"\u2003IWin32OleUtility"]},{"entry":[{},"\u2003\u2003\u2003CLSIDFromProgID"]},{"entry":[{},"\u2003\u2003\u2003CLSIDFromString"]},{"entry":[{},"\u2003\u2003\u2003CoCreateGuid"]},{"entry":[{},"\u2003\u2003\u2003CoFileTimeNow"]},{"entry":[{},"\u2003\u2003\u2003CoFreeUnusedLibraries"]},{"entry":[{},"\u2003\u2003\u2003CoGetMalloc"]},{"entry":[{},"\u2003\u2003\u2003CoInitialize"]},{"entry":[{},"\u2003\u2003\u2003CoRegisterMessageFilter"]},{"entry":[{},"\u2003\u2003\u2003CoTaskMemAlloc"]},{"entry":[{},"\u2003\u2003\u2003CoTaskMemFree"]},{"entry":[{},"\u2003\u2003\u2003CoTaskMemRealloc"]},{"entry":[{},"\u2003\u2003\u2003CoUninitialize"]},{"entry":[{},"\u2003\u2003\u2003GetClassFile"]},{"entry":[{},"\u2003\u2003\u2003GetHGlobalFromILockBytes"]},{"entry":[{},"\u2003\u2003\u2003IIDFromString"]},{"entry":[{},"\u2003\u2003\u2003OleGetIconOfClass"]},{"entry":[{},"\u2003\u2003\u2003OleInitialize"]},{"entry":[{},"\u2003\u2003\u2003OleIsRunning"]},{"entry":[{},"\u2003\u2003\u2003OleRegEnumVerbs"]},{"entry":[{},"\u2003\u2003\u2003OleRegGetMiscStatus"]},{"entry":[{},"\u2003\u2003\u2003OleRegGetUserType"]},{"entry":[{},"\u2003\u2003\u2003OleSetClipboard"]},{"entry":[{},"\u2003\u2003\u2003OleUninitialize"]},{"entry":[{},"\u2003\u2003\u2003ProgIDFromCLSID"]},{"entry":[{},"\u2003\u2003\u2003PropVariantClear"]},{"entry":[{},"\u2003\u2003\u2003RegisterDragDrop"]},{"entry":[{},"\u2003\u2003\u2003RevokeDragDrop"]},{"entry":[{},"\u2003\u2003\u2003StringFromCLSID"]},{"entry":[{},"\u2003\u2003\u2003StringFromGUID2"]},{"entry":[{},"\u2003\u2003\u2003StringFromIID"]},{"entry":[{},"OpenGL"]},{"entry":[{},"\u2003IWin32GL"]},{"entry":[{},"\u2003\u2003\u2003glBegin"]},{"entry":[{},"\u2003\u2003\u2003glClear"]},{"entry":[{},"\u2003\u2003\u2003glClearColor"]},{"entry":[{},"\u2003\u2003\u2003glClearDepth"]},{"entry":[{},"\u2003\u2003\u2003glColor3d"]},{"entry":[{},"\u2003\u2003\u2003glEnable"]},{"entry":[{},"\u2003\u2003\u2003glEnd"]},{"entry":[{},"\u2003\u2003\u2003glFinish"]},{"entry":[{},"\u2003\u2003\u2003glMatrixMode"]},{"entry":[{},"\u2003\u2003\u2003glNormal3d"]},{"entry":[{},"\u2003\u2003\u2003glPolygonMode"]},{"entry":[{},"\u2003\u2003\u2003glPopMatrix"]},{"entry":[{},"\u2003\u2003\u2003glPushMatrix"]},{"entry":[{},"\u2003\u2003\u2003glRotated"]},{"entry":[{},"\u2003\u2003\u2003glScaled"]},{"entry":[{},"\u2003\u2003\u2003glTranslated"]},{"entry":[{},"\u2003\u2003\u2003glVertex3d"]},{"entry":[{},"\u2003\u2003\u2003glViewport"]},{"entry":[{},"\u2003\u2003\u2003wglCreateContext"]},{"entry":[{},"\u2003\u2003\u2003wglGetCurrentDC"]},{"entry":[{},"\u2003\u2003\u2003wglMakeCurrent"]},{"entry":[{},"\u2003IWin32GLU"]},{"entry":[{},"\u2003\u2003\u2003gluCylinder"]},{"entry":[{},"\u2003\u2003\u2003gluDeleteQuadric"]},{"entry":[{},"\u2003\u2003\u2003gluNewQuadric"]},{"entry":[{},"\u2003\u2003\u2003gluPerspective"]},{"entry":[{},"\u2003\u2003\u2003gluQuadricDrawStyle"]},{"entry":[{},"\u2003\u2003\u2003gluQuadricNormals"]},{"entry":[{},"Printer"]},{"entry":[{},"\u2003IWin32Printer"]},{"entry":[{},"\u2003\u2003\u2003ClosePrinter"]},{"entry":[{},"\u2003\u2003\u2003DocumentPropertiesA"]},{"entry":[{},"\u2003\u2003\u2003GetPrinterA"]},{"entry":[{},"\u2003IWin32PrinterFactory"]},{"entry":[{},"\u2003\u2003\u2003OpenPrinterA"]},{"entry":[{},"\u2003\u2003\u2003OpenPrinterW"]},{"entry":[{},"\u2003IWin32PrinterUtility"]},{"entry":[{},"\u2003\u2003\u2003DeviceCapabilitiesA"]},{"entry":[{},"\u2003\u2003\u2003EnumPrintersA"]},{"entry":[{},"Process"]},{"entry":[{},"\u2003IWin16ProcessFactory"]},{"entry":[{},"\u2003\u2003\u2003WinExec"]},{"entry":[{},"\u2003IWin32Process: IWin32SyncHandle \u2190"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32ProcessContext"]},{"entry":[{},"\u2003\u2003\u2003DebugBreak"]},{"entry":[{},"\u2003\u2003\u2003ExitProcess"]},{"entry":[{},"\u2003\u2003\u2003FatalAppExitA"]},{"entry":[{},"\u2003\u2003\u2003FatalExit"]},{"entry":[{},"\u2003\u2003\u2003GetExitCodeProcess"]},{"entry":[{},"\u2003\u2003\u2003GetCurrentProcessId"]},{"entry":[{},"\u2003\u2003\u2003GetProcessVersion"]},{"entry":[{},"\u2003\u2003\u2003GetProcessWorkingSetSize"]},{"entry":[{},"\u2003\u2003\u2003OpenProcessToken"]},{"entry":[{},"\u2003\u2003\u2003SetProcessWorkingSetSize"]},{"entry":[{},"\u2003\u2003\u2003TerminateProcess"]},{"entry":[{},"\u2003\u2003\u2003UnhandledExceptionFilter"]},{"entry":[{},"\u2003IWin32ProcessContext"]},{"entry":[{},"\u2003\u2003\u2003GetCommandLineA"]},{"entry":[{},"\u2003\u2003\u2003GetCommandLineW"]},{"entry":[{},"\u2003\u2003\u2003GetCurrentDirectoryA"]},{"entry":[{},"\u2003\u2003\u2003GetCurrentDirectoryW"]},{"entry":[{},"\u2003\u2003\u2003GetStartupInfoA"]},{"entry":[{},"\u2003\u2003\u2003SetConsoleCtrlHandler"]},{"entry":[{},"\u2003\u2003\u2003SetCurrentDirectoryA"]},{"entry":[{},"\u2003\u2003\u2003SetCurrentDirectoryW"]},{"entry":[{},"\u2003\u2003\u2003SetHandleCount"]},{"entry":[{},"\u2003\u2003\u2003SetUnhandledExceptionFilter"]},{"entry":[{},"\u2003IWin32ProcessFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateProcessA"]},{"entry":[{},"\u2003\u2003\u2003CreateProcessW"]},{"entry":[{},"\u2003\u2003\u2003OpenProcess"]},{"entry":[{},"Registry"]},{"entry":[{},"\u2003IWin16Profile"]},{"entry":[{},"\u2003\u2003\u2003GetPrivateProfileIntA"]},{"entry":[{},"\u2003\u2003\u2003GetPrivateProfileStringA"]},{"entry":[{},"\u2003\u2003\u2003GetPrivateProfileStringW"]},{"entry":[{},"\u2003\u2003\u2003GetProfileIntA"]},{"entry":[{},"\u2003\u2003\u2003GetProfileIntW"]},{"entry":[{},"\u2003\u2003\u2003GetProfileStringA"]},{"entry":[{},"\u2003\u2003\u2003GetProfileStringW"]},{"entry":[{},"\u2003\u2003\u2003WritePrivateProfileStringA"]},{"entry":[{},"\u2003\u2003\u2003WritePrivateProfileStringW"]},{"entry":[{},"\u2003\u2003\u2003WriteProfileStringA"]},{"entry":[{},"\u2003\u2003\u2003WriteProfileStringW"]},{"entry":[{},"\u2003IWin16Registry"]},{"entry":[{},"\u2003\u2003\u2003RegCreateKeyExA"]},{"entry":[{},"\u2003\u2003\u2003RegCreateKeyW"]},{"entry":[{},"\u2003\u2003\u2003RegEnumKeyA"]},{"entry":[{},"\u2003\u2003\u2003RegEnumKeyW"]},{"entry":[{},"\u2003\u2003\u2003RegOpenKeyA"]},{"entry":[{},"\u2003\u2003\u2003RegOpenKeyW"]},{"entry":[{},"\u2003\u2003\u2003RegQueryValueA"]},{"entry":[{},"\u2003\u2003\u2003RegQueryValueW"]},{"entry":[{},"\u2003\u2003\u2003RegSetValueA"]},{"entry":[{},"\u2003\u2003\u2003RegSetValueW"]},{"entry":[{},"\u2003IWin32Registry"]},{"entry":[{},"\u2003\u2003\u2003RegCloseKey"]},{"entry":[{},"\u2003\u2003\u2003RegCreateKeyA"]},{"entry":[{},"\u2003\u2003\u2003RegCreateKeyExW"]},{"entry":[{},"\u2003\u2003\u2003RegDeleteKeyA"]},{"entry":[{},"\u2003\u2003\u2003RegDeleteKeyW"]},{"entry":[{},"\u2003\u2003\u2003RegDeleteValueA"]},{"entry":[{},"\u2003\u2003\u2003RegDeleteValueW"]},{"entry":[{},"\u2003\u2003\u2003RegEnumKeyExA"]},{"entry":[{},"\u2003\u2003\u2003RegEnumKeyExW"]},{"entry":[{},"\u2003\u2003\u2003RegEnumValueA"]},{"entry":[{},"\u2003\u2003\u2003RegEnumValueW"]},{"entry":[{},"\u2003\u2003\u2003RegFlushKey"]},{"entry":[{},"\u2003\u2003\u2003RegNotifyChangeKeyValue"]},{"entry":[{},"\u2003\u2003\u2003RegOpenKeyExA"]},{"entry":[{},"\u2003\u2003\u2003RegOpenKeyExW"]},{"entry":[{},"\u2003\u2003\u2003RegQueryInfoKeyA"]},{"entry":[{},"\u2003\u2003\u2003RegQueryInfoKeyW"]},{"entry":[{},"\u2003\u2003\u2003RegQueryValueExA"]},{"entry":[{},"\u2003\u2003\u2003RegQueryValueExW"]},{"entry":[{},"\u2003\u2003\u2003RegSetValueExA"]},{"entry":[{},"\u2003\u2003\u2003RegSetValueExW"]},{"entry":[{},"Resource"]},{"entry":[{},"\u2003IWin32Resource"]},{"entry":[{},"\u2003\u2003\u2003LoadResource"]},{"entry":[{},"\u2003\u2003\u2003LockResource"]},{"entry":[{},"Security"]},{"entry":[{},"\u2003IWin32SecurityACL"]},{"entry":[{},"\u2003\u2003\u2003AddAccessAllowedAce"]},{"entry":[{},"\u2003\u2003\u2003AddAccessDeniedAce"]},{"entry":[{},"\u2003\u2003\u2003AddAce"]},{"entry":[{},"\u2003\u2003\u2003DeleteAce"]},{"entry":[{},"\u2003\u2003\u2003GetAce"]},{"entry":[{},"\u2003\u2003\u2003GetAclInformation"]},{"entry":[{},"\u2003IWin32SecurityACLUtility"]},{"entry":[{},"\u2003\u2003\u2003InitializeAcl"]},{"entry":[{},"\u2003\u2003\u2003IsValidAcl"]},{"entry":[{},"\u2003IWin32SecurityAccess"]},{"entry":[{},"\u2003\u2003\u2003CopySid"]},{"entry":[{},"\u2003\u2003\u2003EqualSid"]},{"entry":[{},"\u2003\u2003\u2003GetLengthSid"]},{"entry":[{},"\u2003\u2003\u2003IsValidSid"]},{"entry":[{},"\u2003\u2003\u2003LookupAccountNameA"]},{"entry":[{},"\u2003\u2003\u2003LookupAccountSid"]},{"entry":[{},"\u2003\u2003\u2003LookupPrivilegeValueA"]},{"entry":[{},"\u2003IWin32SecurityDescriptor"]},{"entry":[{},"\u2003\u2003\u2003GetSecurityDescriptorDacl"]},{"entry":[{},"\u2003\u2003\u2003GetSecurityDescriptorGroup"]},{"entry":[{},"\u2003\u2003\u2003GetSecurityDescriptorOwner"]},{"entry":[{},"\u2003\u2003\u2003GetSecurityDescriptorSacl"]},{"entry":[{},"\u2003\u2003\u2003IsValidSecurityDescriptor"]},{"entry":[{},"\u2003\u2003\u2003SetSecurityDescriptorDacl"]},{"entry":[{},"\u2003\u2003\u2003SetSecurityDescriptorGroup"]},{"entry":[{},"\u2003\u2003\u2003SetSecurityDescriptorOwner"]},{"entry":[{},"\u2003\u2003\u2003SetSecurityDescriptorSacl"]},{"entry":[{},"\u2003IWin32SecurityDescriptorFactory"]},{"entry":[{},"\u2003\u2003\u2003InitializeSecurityDescriptor"]},{"entry":[{},"\u2003IWin32SecurityToken: IWin32Handle"]},{"entry":[{},"\u2003\u2003\u2003AdjustTokenPrivileges"]},{"entry":[{},"\u2003\u2003\u2003GetTokenInformation"]},{"entry":[{},"\u2003IWin32SecurityToken: IWin32Handle"]},{"entry":[{},"\u2003\u2003\u2003OpenProcessToken"]},{"entry":[{},"\u2003\u2003\u2003OpenThreadToken"]},{"entry":[{},"Shell"]},{"entry":[{},"\u2003IWin32Drop"]},{"entry":[{},"\u2003\u2003\u2003DragFinish"]},{"entry":[{},"\u2003\u2003\u2003DragQueryFileW"]},{"entry":[{},"\u2003\u2003\u2003DragQueryPoint"]},{"entry":[{},"\u2003IWin32Shell"]},{"entry":[{},"\u2003\u2003\u2003SHGetDesktopFolder"]},{"entry":[{},"\u2003\u2003\u2003SHGetFileInfoA"]},{"entry":[{},"\u2003\u2003\u2003ShellExecuteA"]},{"entry":[{},"Synchronization"]},{"entry":[{},"\u2003IWin32AtomicUtility"]},{"entry":[{},"\u2003\u2003\u2003InterlockedDecrement"]},{"entry":[{},"\u2003\u2003\u2003InterlockedExchange"]},{"entry":[{},"\u2003\u2003\u2003InterlockedIncrement"]},{"entry":[{},"\u2003IWin32CriticalSection"]},{"entry":[{},"\u2003\u2003\u2003DeleteCriticalSection"]},{"entry":[{},"\u2003\u2003\u2003EnterCriticalSection"]},{"entry":[{},"\u2003\u2003\u2003LeaveCriticalSection"]},{"entry":[{},"\u2003IWin32CriticalSectionFactory"]},{"entry":[{},"\u2003\u2003\u2003InitializeCriticalSection"]},{"entry":[{},"\u2003IWin32Event: IWin32SyncHandle"]},{"entry":[{},"\u2003\u2003\u2003PulseEvent"]},{"entry":[{},"\u2003\u2003\u2003ResetEvent"]},{"entry":[{},"\u2003\u2003\u2003SetEvent"]},{"entry":[{},"\u2003IWin32EventFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateEventA"]},{"entry":[{},"\u2003IWin32Mutex: IWin32SyncHandle"]},{"entry":[{},"\u2003\u2003\u2003ReleaseMutex"]},{"entry":[{},"\u2003IWin32MutexFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateMutexA"]},{"entry":[{},"\u2003\u2003\u2003OpenMutexA"]},{"entry":[{},"\u2003IWin32Semaphore: IWin32SyncHandle"]},{"entry":[{},"\u2003\u2003\u2003ReleaseSemaphore"]},{"entry":[{},"\u2003IWin32SemaphoreFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateSemaphoreA"]},{"entry":[{},"\u2003IWin32SyncHandle: IWin32Handle"]},{"entry":[{},"\u2003\u2003\u2003MsgWaitForMultipleObjects"]},{"entry":[{},"\u2003\u2003\u2003SignalObjectAndWait"]},{"entry":[{},"\u2003\u2003\u2003WaitForMultipleObjects"]},{"entry":[{},"\u2003\u2003\u2003WaitForSingleObject"]},{"entry":[{},"\u2003\u2003\u2003WaitForSingleObjectEx"]},{"entry":[{},"\u2003IWin32WaitableTimer:"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32SyncHandle"]},{"entry":[{},"\u2003\u2003\u2003CancelWaitableTimer"]},{"entry":[{},"\u2003\u2003\u2003SetWaitableTimer"]},{"entry":[{},"\u2003IWin32WaitableTimerFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateWaitableTimer"]},{"entry":[{},"\u2003\u2003\u2003OpenWaitableTimer"]},{"entry":[{},"System"]},{"entry":[{},"\u2003IWin32WindowsHook"]},{"entry":[{},"\u2003\u2003\u2003CallNextHookEx"]},{"entry":[{},"\u2003\u2003\u2003UnhookWindowsHookEx"]},{"entry":[{},"\u2003IWin32WindowsHookFactory"]},{"entry":[{},"\u2003\u2003\u2003SetWindowsHookExA"]},{"entry":[{},"\u2003\u2003\u2003SetWindowsHookExW"]},{"entry":[{},"\u2003IWin32WindowsHookUtility"]},{"entry":[{},"\u2003\u2003\u2003CallMsgFilterA"]},{"entry":[{},"\u2003\u2003\u2003CallMsgFilterW"]},{"entry":[{},"Thread"]},{"entry":[{},"\u2003IWin32Thread: IWin32SyncHandle \u2190"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32ThreadContext,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32ThreadMessage"]},{"entry":[{},"\u2003\u2003\u2003DispatchMessageA"]},{"entry":[{},"\u2003\u2003\u2003DispatchMessageW"]},{"entry":[{},"\u2003\u2003\u2003ExitThread"]},{"entry":[{},"\u2003\u2003\u2003GetCurrentThreadId"]},{"entry":[{},"\u2003\u2003\u2003GetExitCodeThread"]},{"entry":[{},"\u2003\u2003\u2003GetThreadLocale"]},{"entry":[{},"\u2003\u2003\u2003GetThreadPriority"]},{"entry":[{},"\u2003\u2003\u2003OpenThreadToken"]},{"entry":[{},"\u2003\u2003\u2003ResumeThread"]},{"entry":[{},"\u2003\u2003\u2003SetThreadPriority"]},{"entry":[{},"\u2003\u2003\u2003SetThreadToken"]},{"entry":[{},"\u2003\u2003\u2003Sleep"]},{"entry":[{},"\u2003\u2003\u2003SuspendThread"]},{"entry":[{},"\u2003\u2003\u2003TerminateThread"]},{"entry":[{},"\u2003\u2003\u2003TlsAlloc"]},{"entry":[{},"\u2003\u2003\u2003TlsFree"]},{"entry":[{},"\u2003\u2003\u2003TlsGetValue"]},{"entry":[{},"\u2003\u2003\u2003TlsSetValue"]},{"entry":[{},"\u2003IWin32ThreadContext"]},{"entry":[{},"\u2003\u2003\u2003EnumThreadWindows"]},{"entry":[{},"\u2003\u2003\u2003GetActiveWindow"]},{"entry":[{},"\u2003IWin32ThreadFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateThread"]},{"entry":[{},"\u2003IWin32ThreadMessage"]},{"entry":[{},"\u2003\u2003\u2003GetMessageA"]},{"entry":[{},"\u2003\u2003\u2003GetMessagePos"]},{"entry":[{},"\u2003\u2003\u2003GetMessageTime"]},{"entry":[{},"\u2003\u2003\u2003GetMessageW"]},{"entry":[{},"\u2003\u2003\u2003GetQueueStatus"]},{"entry":[{},"\u2003\u2003\u2003PostQuitMessage"]},{"entry":[{},"\u2003\u2003\u2003PostThreadMessageA"]},{"entry":[{},"\u2003\u2003\u2003TranslateMessage"]},{"entry":[{},"\u2003\u2003\u2003WaitMessage"]},{"entry":[{},"\u2003IWin32ThreadUtility"]},{"entry":[{},"Timer"]},{"entry":[{},"\u2003IWin32Timer"]},{"entry":[{},"\u2003\u2003\u2003KillTimer"]},{"entry":[{},"\u2003\u2003\u2003SetTimer"]},{"entry":[{},"Utilities"]},{"entry":[{},"\u2003IWin32Beep"]},{"entry":[{},"\u2003\u2003\u2003Beep"]},{"entry":[{},"\u2003\u2003\u2003MessageBeep"]},{"entry":[{},"\u2003IWin32StringUtility"]},{"entry":[{},"\u2003\u2003\u2003CharLowerA"]},{"entry":[{},"\u2003\u2003\u2003CharLowerBuffA"]},{"entry":[{},"\u2003\u2003\u2003CharLowerW"]},{"entry":[{},"\u2003\u2003\u2003CharNextA"]},{"entry":[{},"\u2003\u2003\u2003CharNextW"]},{"entry":[{},"\u2003\u2003\u2003CharPrevA"]},{"entry":[{},"\u2003\u2003\u2003CharToOemA"]},{"entry":[{},"\u2003\u2003\u2003CharUpperA"]},{"entry":[{},"\u2003\u2003\u2003CharUpperBuffA"]},{"entry":[{},"\u2003\u2003\u2003CharUpperBuffW"]},{"entry":[{},"\u2003\u2003\u2003CharUpperW"]},{"entry":[{},"\u2003\u2003\u2003CompareStringA"]},{"entry":[{},"\u2003\u2003\u2003CompareStringW"]},{"entry":[{},"\u2003\u2003\u2003FormatMessageA"]},{"entry":[{},"\u2003\u2003\u2003FormatMessageW"]},{"entry":[{},"\u2003\u2003\u2003GetStringTypeA"]},{"entry":[{},"\u2003\u2003\u2003GetStringTypeExA"]},{"entry":[{},"\u2003\u2003\u2003GetStringTypeW"]},{"entry":[{},"\u2003\u2003\u2003IsCharAlphaA"]},{"entry":[{},"\u2003\u2003\u2003IsCharAlphaNumericA"]},{"entry":[{},"\u2003\u2003\u2003IsCharAlphaNumericW"]},{"entry":[{},"\u2003\u2003\u2003IsCharAlphaW"]},{"entry":[{},"\u2003\u2003\u2003IsDBCSLeadByte"]},{"entry":[{},"\u2003\u2003\u2003IsDBCSLeadByteEx"]},{"entry":[{},"\u2003\u2003\u2003LCMapStringA"]},{"entry":[{},"\u2003\u2003\u2003LCMapStringW"]},{"entry":[{},"\u2003\u2003\u2003MultiByteToWideChar"]},{"entry":[{},"\u2003\u2003\u2003OutputDebugStringA"]},{"entry":[{},"\u2003\u2003\u2003OutputDebugStringW"]},{"entry":[{},"\u2003\u2003\u2003ToAscii"]},{"entry":[{},"\u2003\u2003\u2003WideCharToMultiByte"]},{"entry":[{},"\u2003\u2003\u2003lstrcatA"]},{"entry":[{},"\u2003\u2003\u2003lstrcmpA"]},{"entry":[{},"\u2003\u2003\u2003lstrcmpiA"]},{"entry":[{},"\u2003\u2003\u2003lstrcpyA"]},{"entry":[{},"\u2003\u2003\u2003lstrcpyW"]},{"entry":[{},"\u2003\u2003\u2003lstrcpynA"]},{"entry":[{},"\u2003\u2003\u2003lstrlenA"]},{"entry":[{},"\u2003\u2003\u2003lstrlenW"]},{"entry":[{},"\u2003\u2003\u2003wsprintfA"]},{"entry":[{},"\u2003\u2003\u2003wsprintfW"]},{"entry":[{},"\u2003\u2003\u2003wvsprintfA"]},{"entry":[{},"\u2003IWin32SystemUtility"]},{"entry":[{},"\u2003\u2003\u2003CountClipboardFormats"]},{"entry":[{},"\u2003\u2003\u2003EmptyClipboard"]},{"entry":[{},"\u2003\u2003\u2003EnumClipboardFormats"]},{"entry":[{},"\u2003\u2003\u2003EnumSystemLocalesA"]},{"entry":[{},"\u2003\u2003\u2003GetACP"]},{"entry":[{},"\u2003\u2003\u2003GetCPInfo"]},{"entry":[{},"\u2003\u2003\u2003GetComputerNameW"]},{"entry":[{},"\u2003\u2003\u2003GetCurrentProcess"]},{"entry":[{},"\u2003\u2003\u2003GetCurrentProcessId"]},{"entry":[{},"\u2003\u2003\u2003GetCurrentThread"]},{"entry":[{},"\u2003\u2003\u2003GetCurrentThreadId"]},{"entry":[{},"\u2003\u2003\u2003GetDateFormatA"]},{"entry":[{},"\u2003\u2003\u2003GetDateFormatW"]},{"entry":[{},"\u2003\u2003\u2003GetDialogBaseUnits"]},{"entry":[{},"\u2003\u2003\u2003GetDoubleClickTime"]},{"entry":[{},"\u2003\u2003\u2003GetLastError"]},{"entry":[{},"\u2003\u2003\u2003GetLocalTime"]},{"entry":[{},"\u2003\u2003\u2003GetLocaleInfoA"]},{"entry":[{},"\u2003\u2003\u2003GetLocaleInfoW"]},{"entry":[{},"\u2003\u2003\u2003GetOEMCP"]},{"entry":[{},"\u2003\u2003\u2003GetSysColor"]},{"entry":[{},"\u2003\u2003\u2003GetSysColorBrush"]},{"entry":[{},"\u2003\u2003\u2003GetSystemDefaultLCID"]},{"entry":[{},"\u2003\u2003\u2003GetSystemDefaultLangID"]},{"entry":[{},"\u2003\u2003\u2003GetSystemDirectoryA"]},{"entry":[{},"\u2003\u2003\u2003GetSystemInfo"]},{"entry":[{},"\u2003\u2003\u2003GetSystemMetrics"]},{"entry":[{},"\u2003\u2003\u2003GetSystemTime"]},{"entry":[{},"\u2003\u2003\u2003GetTickCount"]},{"entry":[{},"\u2003\u2003\u2003GetTimeFormatA"]},{"entry":[{},"\u2003\u2003\u2003GetTimeFormatW"]},{"entry":[{},"\u2003\u2003\u2003GetTimeZoneInformation"]},{"entry":[{},"\u2003\u2003\u2003GetUserDefaultLCID"]},{"entry":[{},"\u2003\u2003\u2003GetUserDefaultLangID"]},{"entry":[{},"\u2003\u2003\u2003GetUserNameA"]},{"entry":[{},"\u2003\u2003\u2003GetUserNameW"]},{"entry":[{},"\u2003\u2003\u2003GetVersion"]},{"entry":[{},"\u2003\u2003\u2003GetVersionExA"]},{"entry":[{},"\u2003\u2003\u2003GetWindowsDirectoryA"]},{"entry":[{},"\u2003\u2003\u2003GetWindowsDirectoryW"]},{"entry":[{},"\u2003\u2003\u2003GlobalMemoryStatus"]},{"entry":[{},"\u2003\u2003\u2003IsValidCodePage"]},{"entry":[{},"\u2003\u2003\u2003IsValidLocale"]},{"entry":[{},"\u2003\u2003\u2003OemToCharA"]},{"entry":[{},"\u2003\u2003\u2003QueryPerformanceCounter"]},{"entry":[{},"\u2003\u2003\u2003QueryPerformanceFrequency"]},{"entry":[{},"\u2003\u2003\u2003RaiseException"]},{"entry":[{},"\u2003\u2003\u2003RegisterWindowMessageA"]},{"entry":[{},"\u2003\u2003\u2003SetErrorMode"]},{"entry":[{},"\u2003\u2003\u2003SetLastError"]},{"entry":[{},"\u2003\u2003\u2003SetLocalTime"]},{"entry":[{},"\u2003\u2003\u2003SystemParametersInfoA"]},{"entry":[{},"\u2003IWin32Utility"]},{"entry":[{},"\u2003\u2003\u2003MulDiv"]},{"entry":[{},"Window"]},{"entry":[{},"\u2003IWin32Accel"]},{"entry":[{},"\u2003\u2003\u2003CopyAcceleratorTableA"]},{"entry":[{},"\u2003\u2003\u2003TranslateAcceleratorA"]},{"entry":[{},"\u2003IWin32AccelFactory"]},{"entry":[{},"\u2003\u2003\u2003LoadAcceleratorsA"]},{"entry":[{},"\u2003IWin32Dialog: IWin32Window \u2190"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32DialogState"]},{"entry":[{},"\u2003\u2003\u2003ChooseColorA"]},{"entry":[{},"\u2003\u2003\u2003DialogBoxParamA"]},{"entry":[{},"\u2003\u2003\u2003DialogBoxParamW"]},{"entry":[{},"\u2003\u2003\u2003EndDialog"]},{"entry":[{},"\u2003\u2003\u2003MapDialogRect"]},{"entry":[{},"\u2003\u2003\u2003SendDlgItemMessageA"]},{"entry":[{},"\u2003IWin32DialogFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateDialogIndirectParamA"]},{"entry":[{},"\u2003\u2003\u2003CreateDialogParamA"]},{"entry":[{},"\u2003\u2003\u2003DialogBoxIndirectParamA"]},{"entry":[{},"\u2003IWin32DialogState"]},{"entry":[{},"\u2003\u2003\u2003CheckDlgButton"]},{"entry":[{},"\u2003\u2003\u2003GetDlgCtrlID"]},{"entry":[{},"\u2003\u2003\u2003GetDlgItem"]},{"entry":[{},"\u2003\u2003\u2003GetDlgItemInt"]},{"entry":[{},"\u2003\u2003\u2003GetDlgItemTextA"]},{"entry":[{},"\u2003\u2003\u2003GetNextDlgGroupItem"]},{"entry":[{},"\u2003\u2003\u2003GetNextDlgTabItem"]},{"entry":[{},"\u2003\u2003\u2003IsDlgButtonChecked"]},{"entry":[{},"\u2003\u2003\u2003SetDlgItemInt"]},{"entry":[{},"\u2003\u2003\u2003SetDlgItemTextA"]},{"entry":[{},"\u2003IWin32Menu \u2190 IWin32MenuState"]},{"entry":[{},"\u2003\u2003\u2003DeleteMenu"]},{"entry":[{},"\u2003\u2003\u2003DestroyMenu"]},{"entry":[{},"\u2003\u2003\u2003InsertMenuA"]},{"entry":[{},"\u2003\u2003\u2003InsertMenuW"]},{"entry":[{},"\u2003\u2003\u2003IsMenu"]},{"entry":[{},"\u2003\u2003\u2003ModifyMenuA"]},{"entry":[{},"\u2003\u2003\u2003RemoveMenu"]},{"entry":[{},"\u2003\u2003\u2003TrackPopupMenu"]},{"entry":[{},"\u2003IWin32MenuFactory"]},{"entry":[{},"\u2003\u2003\u2003CreatePopupMenu"]},{"entry":[{},"\u2003IWin32MenuState"]},{"entry":[{},"\u2003\u2003\u2003AppendMenuA"]},{"entry":[{},"\u2003\u2003\u2003AppendMenuW"]},{"entry":[{},"\u2003\u2003\u2003ArrangeIconicWindows"]},{"entry":[{},"\u2003\u2003\u2003BringWindowToTop"]},{"entry":[{},"\u2003\u2003\u2003CheckMenuItem"]},{"entry":[{},"\u2003\u2003\u2003CheckMenuRadioItem"]},{"entry":[{},"\u2003\u2003\u2003CheckRadioButton"]},{"entry":[{},"\u2003\u2003\u2003EnableMenuItem"]},{"entry":[{},"\u2003\u2003\u2003GetMenuItemCount"]},{"entry":[{},"\u2003\u2003\u2003GetMenuItemID"]},{"entry":[{},"\u2003\u2003\u2003GetMenuItemRect"]},{"entry":[{},"\u2003\u2003\u2003GetMenuState"]},{"entry":[{},"\u2003\u2003\u2003GetMenuStringA"]},{"entry":[{},"\u2003\u2003\u2003GetSubMenu"]},{"entry":[{},"\u2003\u2003\u2003HiliteMenuItem"]},{"entry":[{},"\u2003\u2003\u2003SetMenuDefaultItem"]},{"entry":[{},"\u2003\u2003\u2003SetMenuItemBitmaps"]},{"entry":[{},"\u2003IWin32Window\u2190"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32WindowProperties,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IWin32WindowState"]},{"entry":[{},"\u2003\u2003\u2003BeginPaint"]},{"entry":[{},"\u2003\u2003\u2003CallWindowProcA"]},{"entry":[{},"\u2003\u2003\u2003CallWindowProcW"]},{"entry":[{},"\u2003\u2003\u2003ChildWindowFromPoint"]},{"entry":[{},"\u2003\u2003\u2003ChildWindowFromPointEx"]},{"entry":[{},"\u2003\u2003\u2003ClientToScreen"]},{"entry":[{},"\u2003\u2003\u2003CloseWindow"]},{"entry":[{},"\u2003\u2003\u2003CreateCaret"]},{"entry":[{},"\u2003\u2003\u2003DefFrameProcA"]},{"entry":[{},"\u2003\u2003\u2003DefMDIChildProcA"]},{"entry":[{},"\u2003\u2003\u2003DefWindowProcA"]},{"entry":[{},"\u2003\u2003\u2003DefWindowProcW"]},{"entry":[{},"\u2003\u2003\u2003DestroyWindow"]},{"entry":[{},"\u2003\u2003\u2003DlgDirListA"]},{"entry":[{},"\u2003\u2003\u2003DlgDirListComboBoxA"]},{"entry":[{},"\u2003\u2003\u2003DlgDirSelectComboBoxExA"]},{"entry":[{},"\u2003\u2003\u2003DlgDirSelectExA"]},{"entry":[{},"\u2003\u2003\u2003DrawAnimatedRects"]},{"entry":[{},"\u2003\u2003\u2003DrawMenuBar"]},{"entry":[{},"\u2003\u2003\u2003EndPaint"]},{"entry":[{},"\u2003\u2003\u2003EnumChildWindows"]},{"entry":[{},"\u2003\u2003\u2003EnumWindows"]},{"entry":[{},"\u2003\u2003\u2003FindWindow"]},{"entry":[{},"\u2003\u2003\u2003FlashWindow"]},{"entry":[{},"\u2003\u2003\u2003MapWindowPoints"]},{"entry":[{},"\u2003\u2003\u2003MessageBoxA"]},{"entry":[{},"\u2003\u2003\u2003MessageBoxW"]},{"entry":[{},"\u2003\u2003\u2003MoveWindow"]},{"entry":[{},"\u2003\u2003\u2003OpenClipboard"]},{"entry":[{},"\u2003\u2003\u2003OpenIcon"]},{"entry":[{},"\u2003\u2003\u2003PeekMessageA"]},{"entry":[{},"\u2003\u2003\u2003PeekMessageW"]},{"entry":[{},"\u2003\u2003\u2003PostMessageA"]},{"entry":[{},"\u2003\u2003\u2003PostMessageW"]},{"entry":[{},"\u2003\u2003\u2003RedrawWindow"]},{"entry":[{},"\u2003\u2003\u2003ScreenToClient"]},{"entry":[{},"\u2003\u2003\u2003ScrollWindow"]},{"entry":[{},"\u2003\u2003\u2003ScrollWindowEx"]},{"entry":[{},"\u2003\u2003\u2003SendMessageA"]},{"entry":[{},"\u2003\u2003\u2003SendMessageW"]},{"entry":[{},"\u2003\u2003\u2003SendNotifyMessageA"]},{"entry":[{},"\u2003\u2003\u2003TranslateMDISysAccel"]},{"entry":[{},"\u2003\u2003\u2003UpdateWindow"]},{"entry":[{},"\u2003IWin32WindowFactory"]},{"entry":[{},"\u2003\u2003\u2003CreateWindowExA"]},{"entry":[{},"\u2003\u2003\u2003CreateWindowExW"]},{"entry":[{},"\u2003IWin32WindowProperties"]},{"entry":[{},"\u2003\u2003\u2003DragAcceptFiles"]},{"entry":[{},"\u2003\u2003\u2003GetClassLongA"]},{"entry":[{},"\u2003\u2003\u2003GetClassNameA"]},{"entry":[{},"\u2003\u2003\u2003GetClassNameW"]},{"entry":[{},"\u2003\u2003\u2003GetPropA"]},{"entry":[{},"\u2003\u2003\u2003GetPropW"]},{"entry":[{},"\u2003\u2003\u2003RemovePropA"]},{"entry":[{},"\u2003\u2003\u2003RemovePropW"]},{"entry":[{},"\u2003\u2003\u2003SetClassLongA"]},{"entry":[{},"\u2003\u2003\u2003SetPropA"]},{"entry":[{},"\u2003\u2003\u2003SetPropW"]},{"entry":[{},"\u2003IWin32WindowState"]},{"entry":[{},"\u2003\u2003\u2003EnableScrollBar"]},{"entry":[{},"\u2003\u2003\u2003EnableWindow"]},{"entry":[{},"\u2003\u2003\u2003GetClientRect"]},{"entry":[{},"\u2003\u2003\u2003GetDC"]},{"entry":[{},"\u2003\u2003\u2003GetDCEx"]},{"entry":[{},"\u2003\u2003\u2003GetLastActivePopup"]},{"entry":[{},"\u2003\u2003\u2003GetMenu"]},{"entry":[{},"\u2003\u2003\u2003GetParent"]},{"entry":[{},"\u2003\u2003\u2003GetScrollInfo"]},{"entry":[{},"\u2003\u2003\u2003GetScrollPos"]},{"entry":[{},"\u2003\u2003\u2003GetScrollRange"]},{"entry":[{},"\u2003\u2003\u2003GetSystemMenu"]},{"entry":[{},"\u2003\u2003\u2003GetTopWindow"]},{"entry":[{},"\u2003\u2003\u2003GetUpdateRect"]},{"entry":[{},"\u2003\u2003\u2003GetUpdateRgn"]},{"entry":[{},"\u2003\u2003\u2003GetWindow"]},{"entry":[{},"\u2003\u2003\u2003GetWindowDC"]},{"entry":[{},"\u2003\u2003\u2003GetWindowLongA"]},{"entry":[{},"\u2003\u2003\u2003GetWindowLongW"]},{"entry":[{},"\u2003\u2003\u2003GetWindowPlacement"]},{"entry":[{},"\u2003\u2003\u2003GetWindowRect"]},{"entry":[{},"\u2003\u2003\u2003GetWindowRgn"]},{"entry":[{},"\u2003\u2003\u2003GetWindowTextA"]},{"entry":[{},"\u2003\u2003\u2003GetWindowTextLengthA"]},{"entry":[{},"\u2003\u2003\u2003GetWindowTextW"]},{"entry":[{},"\u2003\u2003\u2003GetWindowThreadProcessId"]},{"entry":[{},"\u2003\u2003\u2003HideCaret"]},{"entry":[{},"\u2003\u2003\u2003InvalidateRect"]},{"entry":[{},"\u2003\u2003\u2003InvalidateRgn"]},{"entry":[{},"\u2003\u2003\u2003IsWindowEnabled"]},{"entry":[{},"\u2003\u2003\u2003IsChild"]},{"entry":[{},"\u2003\u2003\u2003IsIconic"]},{"entry":[{},"\u2003\u2003\u2003IsWindow"]},{"entry":[{},"\u2003\u2003\u2003IsWindowUnicode"]},{"entry":[{},"\u2003\u2003\u2003IsWindowVisible"]},{"entry":[{},"\u2003\u2003\u2003IsZoomed"]},{"entry":[{},"\u2003\u2003\u2003LockWindowUpdate"]},{"entry":[{},"\u2003\u2003\u2003SetActiveWindow"]},{"entry":[{},"\u2003\u2003\u2003SetClipboardViewer"]},{"entry":[{},"\u2003\u2003\u2003SetFocus"]},{"entry":[{},"\u2003\u2003\u2003SetForegroundWindow"]},{"entry":[{},"\u2003\u2003\u2003SetMenu"]},{"entry":[{},"\u2003\u2003\u2003SetParent"]},{"entry":[{},"\u2003\u2003\u2003SetScrollInfo"]},{"entry":[{},"\u2003\u2003\u2003SetScrollPos"]},{"entry":[{},"\u2003\u2003\u2003SetScrollRange"]},{"entry":[{},"\u2003\u2003\u2003SetWindowLongA"]},{"entry":[{},"\u2003\u2003\u2003SetWindowLongW"]},{"entry":[{},"\u2003\u2003\u2003SetWindowPlacement"]},{"entry":[{},"\u2003\u2003\u2003SetWindowPos"]},{"entry":[{},"\u2003\u2003\u2003SetWindowRgn"]},{"entry":[{},"\u2003\u2003\u2003SetWindowTextA"]},{"entry":[{},"\u2003\u2003\u2003SetWindowTextW"]},{"entry":[{},"\u2003\u2003\u2003ShowCaret"]},{"entry":[{},"\u2003\u2003\u2003ShowOwnedPopups"]},{"entry":[{},"\u2003\u2003\u2003ShowScrollBar"]},{"entry":[{},"\u2003\u2003\u2003ShowWindow"]},{"entry":[{},"\u2003\u2003\u2003ValidateRect"]},{"entry":[{},"\u2003\u2003\u2003ValidateRgn"]},{"entry":[{},"\u2003IWin32WindowUtility"]},{"entry":[{},"\u2003\u2003\u2003AdjustWindowRect"]},{"entry":[{},"\u2003\u2003\u2003AdjustWindowRectEx"]},{"entry":[{},"\u2003\u2003\u2003EnumWindows"]},{"entry":[{},"\u2003\u2003\u2003FindWindowA"]},{"entry":[{},"\u2003\u2003\u2003GetActiveWindow"]},{"entry":[{},"\u2003\u2003\u2003GetCapture"]},{"entry":[{},"\u2003\u2003\u2003GetCaretPos"]},{"entry":[{},"\u2003\u2003\u2003GetClassInfoA"]},{"entry":[{},"\u2003\u2003\u2003GetClassInfoExA"]},{"entry":[{},"\u2003\u2003\u2003GetClassInfoW"]},{"entry":[{},"\u2003\u2003\u2003GetDesktopWindow"]},{"entry":[{},"\u2003\u2003\u2003GetFocus"]},{"entry":[{},"\u2003\u2003\u2003GetForegroundWindow"]},{"entry":[{},"\u2003\u2003\u2003InSendMessage"]},{"entry":[{},"\u2003\u2003\u2003IsDialogMessageA"]},{"entry":[{},"\u2003\u2003\u2003RegisterClassA"]},{"entry":[{},"\u2003\u2003\u2003RegisterClassExA"]},{"entry":[{},"\u2003\u2003\u2003RegisterClass"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Although the invention has been described in language specific to structural features and\/or methodological steps, it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or steps described. Rather, the specific features and steps are disclosed as preferred forms of implementing the claimed invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 12-15"}]},"DETDESC":[{},{}]}
