---
title: Lexical semantic structure
abstract: A lexical semantic structure for modeling semantics of a natural language input on a computer is described. A set of lexical semantic categories is selected to model content of the natural language input. A methodology associates content of the natural language input to one or more categories of the set of lexical semantic categories.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07689410&OS=07689410&RS=07689410
owner: Microsoft Corporation
number: 07689410
owner_city: Redmond
owner_country: US
publication_date: 20040915
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION(S)","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS","A. Overview","B. Illustrative Operating Environment","C. Overview of SPL Framework","D. Linguistic Object Model (LOM)","E. Semantic Programming Language (SPL)","APPENDIX I-SCENARIO","Microsoft Outlook\u00ae Prototype","APPENDIX II","Microsoft Outlook\u00ae Code Walk Through"],"p":["The present invention is a Continuation-in-Part of U.S. patent application Ser. No. 10\/830,988, filed Apr. 23, 2004, entitled \u201cSEMANTIC PROGRAMMING LANGUAGE.\u201d","The present invention relates to a system and method for modeling the semantics of a natural language. More particularly, the present invention relates to a lexical semantic structure for modeling content of a natural language input.","A natural language is language as produced by people (as opposed to computer languages or other artificial languages), including all of the idioms, assumptions and implications of the utterance or text. In the context of natural language processing, a command and control system processes natural language utterances or texts and attempts to recognize and to interpret the utterance or text to derive a usable interpretation.","Conventionally, one technique for providing natural language command and control involves static recognition of pre-encoded commands. For example, commercially available voice-to-text programs allow the user to use simple commands to initiate pre-encoded operations, such save file. However, such programs typically cannot process such commands unless the exact command is used. In other words, store file may not be properly understood by an application coded to recognize the command save file.","Similarly, question\/answer type applications typically include pre-encoded phrases or terms in order to facilitate search and retrieve-type functions. However, conventional implementations require the specific search term to be used in the utterance or text in order to succeed, and consequently cannot adequately account for the richness of human speech.","Programming natural language applications is extremely difficult. Typically, programmers know how to code in a computer language, but have little experience diagramming sentence structures and\/or performing linguistic analysis. This deficiency makes programming for natural language applications difficult. Moreover, extending a natural language software application coded for the English language to work with other languages typically requires recoding, not only of the software application, but also of any associated linguistic analysis engines. This makes programming for natural language applications extremely difficult and potentially very expensive.","A lexical semantic structure for modeling semantics of a natural language input on a computer is described. A set of lexical semantic categories is selected to model content of a natural language input. A methodology associates content of the natural language input to one or more categories of the set of lexical semantic categories. In different embodiments, the lexical semantic structure normalizes the natural language input across languages, across linguistic categories, across applications, and across systems adapted to produce some type of syntactic category.","In an alternative embodiment, a method for creating a natural language enabled software application is described. A program is created from a set of programming constructs for facilitating natural language programming. The program describes features in the software application that rely on natural language input. The program is compiled into a software application.","The present invention is a Linguistic Object Model (LOM), a semantic framework, and a semantic programming language (SPL) for producing natural language applications. The LOM models semantic utterances independent of the natural language used or the application domain involved. The semantic framework includes a runtime component (an Interpreter), which mediates between natural language analysis engine(s) and a client application, and a set of types, which define the nature of the interaction between all components of the system. The SPL provides a programming framework for interfacing with the LOM and with natural language analysis engines adapted to operate with the LOM. The SPL may also be used to interface with other linguistic object models.","The present invention includes the overall process and architecture in addition to a number of the subprocesses and data structures. In order to better understand the present invention, one exemplary environment, which can be used with the present invention, is introduced. However, it should be appreciated that the present invention can be used in a wide variety of other systems and environments as well.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","100","100","100"]},"The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well-known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, telephony systems, distributed computing environments that include any of the above systems or devices, and the like.","The invention may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, and the like. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.","With reference to , an exemplary system for implementing the invention includes a general-purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus.","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. The phrase \u201ccomputer storage media\u201d is intended to include both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies.","A user may enter commands and information into the computer  through input devices such as a keyboard , a microphone , and a pointing device , such as a mouse, trackball or touch pad. Other input devices (not shown) may include a joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a hand-held device, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","The SPL framework consists of a runtime component (an Interpreter) and a set of types. The runtime component mediates between a client application and one or more natural language analysis engines. The set of types defines the interaction between all elements in the system. In applications that utilize the SPL framework, an Interpreter instance is created at runtime and is initialized with a declarative schema that describes the semantic model of the features in the client application that rely on natural language inputs. This declarative schema is created by the developer along with the application code, and it describes the relationship among a number of semantic modeling types created by the developer and derived from types in the LOM. These semantic modeling types may contain procedural code that is not mentioned in the declarative schema and that, when instantiated by the Interpreter, places runtime-context-driven constraints on the instantiation of the types.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 2","b":["200","202","204","206","202","208","210"]},"The speech recognition system  is a system that receives an audio input and produces a text output representative of the audio input. The text recognition system  is a system that receives a handwritten or scanned input and generates a text output representative of the handwritten or scanned input. In one embodiment, the speech recognition system  and the handwriting recognition system  are integrated with the client application .","In framework , a text input  string is input to SPL client application . Text input A refers to text output from the speech recognition system . Text input B refers to text output from handwriting recognition system . Text input C represents other text input, such as from a keyboard, from a memory buffer, or from any other input source. Hereinafter, reference numeral  is applied to the received text input, independent of source.","SPL client application  passes the text input  and application schema  of the SPL client application to SPL interpreter application . SPL interpreter application  passes text input  and application schema  to the plurality of natural language analysis engines  (shown as boxes Analysis Engine  through Analysis Engine N), each of which is designed to map the utterance to the Linguistic Object Model (LOM) . Any number of analysis engines  may be employed, and each engine  may use a unique analysis strategy for mapping the text input  to the LOM  and to the application schema .","In general, each analysis engine  applies its paradigm to the text input , and maps the text input  to the LOM  to produce a plurality of potential interpretations , which are returned to the SPL interpreter application . The SPL interpreter application  identifies one or more actual interpretations , and returns those actual interpretations  to the SPL client application , which can then act on the one or more actual interpretations .","In one embodiment, the analysis engines  derive only one possible interpretation ; however, most semantic utterances allow for more than one possible interpretation, which may be resolved by the Interpreter  or the client application  with respect to the context of the utterance. In this case, the context is the domain of the SPL client application  and the objects it supports. The SPL interpreter , having received declarative schema  from the SPL client application , attempts to resolve the potential interpretations  against the declarative schema . The SPL interpreter application  can discard potential interpretations  that cannot be resolved against the declarative schema . The remaining interpretations (those that can be resolved against the declarative schema ) are the actual interpretations . The SPL interpreter  attempts to instantiate each of the plurality of the actual interpretations  according to the declarative schema  of the SPL client application  by invoking the actual interpretation object  in the client application .","Depending on the implementation and configuration of the framework , controls  may be passed from the SPL client application  to the SPL interpreter application , instructing the SPL interpreter application  to perform further processing. Similarly, the interpreter application  may pass controls  to the analysis engines for further processing of the text input  relative to the LOM . Thus, the semantic framework  may process a text input iteratively to arrive at actual interpretations that corresponds to types defined within the domain of the SPL client application .","In general, the SPL client application , interpreter , and the analysis engines  may be located in a single computer. In an alternative embodiment, application , interpreter  and engines  may be located on different systems, such as on separate servers on a network.","The SPL interpreter  serves as an intermediary between the client application  and the analysis engines . The SPL programming language is intended to be intuitive to developers. In one embodiment, the language is built on top of C#, so the syntax will look familiar to developers. However, the SPL is adapted to express the LOM semantic structure and to perform linguistic analysis and can be implemented in C# directly or in any other object-based programming language.","As previously mentioned, the SPL framework includes a runtime component (the SPL interpreter ), which mediates between natural language analysis engine(s)  and a set of types, which are created by the developer and derived from the types defined in the LOM. The set of types defines the nature of the interaction between all components of the framework.","The SPL Framework makes use of but does not include natural language analysis engines. It is designed to allow multiple analysis engines to be used simultaneously if desired. One might want to employ multiple analysis engines, for example, because some engines may be better at particular kinds of natural language input than others. Combining the outputs of the multiple engines may result in better overall performance and behavior.","For any given natural language input , the analysis engines  are expected to provide the interpreter  with linguistically possible interpretations  expressed in the system of types described in the declarative schema . The analysis engines  generally have access to the description of the semantic types in the declarative schema , but not to the actual types. Rather than producing actual objects, they produce potential interpretations (), which are sets of instructions for building actual interpretations . The potential interpretations  produced by the analysis engines  become actual interpretations  only if the interpreter  succeeds in creating instantiations of the interpretations, where this includes running the procedural code of the types involved. The interpreter  attempts to resolve the possible interpretations  against the declarative schema , and, depending on the specific implementation, instantiates successfully-resolved interpretations in the client application  for further processing.","The back-and-forth between the client application , the interpreter  and the analysis engines  (including text input , declarative schema , potential interpretations , actual interpretations , and control flow  and ) isolates conflicts and\/or ambiguities. The framework and the LOM cooperate to free the programmer to concern him or herself with the application domain, rather than the linguistic analysis.","In general, the declarative schema may be XML code, Microsoft .NET attributes, or Microsoft .NET attributes and the resolvable types themselves. Alternatively, the resolvable types may be coded so that the schema information can be inferred from the types using \u201creflection\u201d. Reflection is the ability to determine what methods, fields, constructors, and so on, are defined for a class or an object. Reflection makes it possible to create dynamic programs.","Now that the framework has been introduced, it is important to understand the underlying linguistic object model from which the developer may derive his or her application specific set of types. The linguistic object model, in addition to being useful for natural language application development purposes, may be used to interact directly with a natural language semantic analysis system for arbitrary purposes.","D1. Overview","The Linguistic Object Model (LOM) of the present invention is made up of a set of types, which are independent of the application domain or even the language. The present invention includes the set of types and the classes of linguistic expressions that the types are designed to model. The types are the declarative elements of the LOM.","It should be understood that applications of the present invention may be implemented in any number of ways, and that specific implementation details may vary from examples provided herein. However, the examples provided below are intended for illustrative purposes, and are by no means to be interpreted as limiting. Where appropriate, alternative methods or framework variances may be called out to further illustrate the versatility and robustness of the present invention.","In general, the LOM models the semantics of an utterance (what is said or written) in a domain independent way. The term \u201cdomain\u201d as used herein refers to the SPL client application originating the natural language processing request. As used herein, the term \u201csemantics\u201d refers to the meaning or signification of spoken or written words. The term \u201cutterance\u201d refers to any finite sound or series of sounds and\/or any written word or phrase detected by a software engine that the language engine attempts to analyze semantically. The term \u201csyntax\u201d, as used herein, refers to the grammatical or structural rules that define how symbols in a language are to be combined to form words, phrases, expressions, and other cognizable constructs.","LOM types can be accessed by a software application to map elements of an utterance to classes of linguistic expressions. For the purpose of clarity, the following discussion takes as primary the mapping from LOM types to classes of linguistic expressions. However, it should be understood that the mapping is a full-duplex (two-way) mapping from LOM types to classes of linguistic expressions and back. Both directions of this mapping are important for different tasks. Moreover, it should be understood that the LOM itself is language independent, such that no code changes are required to the LOM in order to model different languages. Such language-specific code changes are made, instead, in the analysis engines, not in the client application.","In general, the LOM specifies language abstractly, as a set of building blocks. The SPL application utilizes the building block framework to access the lexical semantic structure and the analysis engines in domain dependent way. Finally, it should be understood that the LOM does not require application schema to operate. The LOM can be utilized to model an utterance, and an analysis engine can provide a LOM mapping independent of the application schema. Thus, the LOM can be considered to be inside the analysis engines, and the LOM is a way to express natural language semantically. The analysis engines make decisions as to what the correct LOM expression is for a given utterance, effectively mapping the utterance to the LOM.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 3","FIG. 2"],"b":["300","302","304","306","308","310","302","308","308","312","306"]},"In general, the possible interpretations  are simply objects of particular types, represented as LOM objects. The analysis engines  may additionally map the LOM objects to the corresponding objects of the application schema before returning the possible interpretations to the interpreter or the client application, depending on the implementation.","Prior to discussing the structure of the LOM in detail, it is useful to develop at least a cursory understanding of the base types utilized by the semantic programming language. In general, the semantic programming language can operate over any number of different semantic object models, but is specifically optimized to operate with the structure of the LOM. At this time, the LOM is the particular semantic object model that offers the best compromise between programming intelligibility (from an application developer's perspective) and linguistic coverage (namely model elements required for application scenarios such as command-and-control, question-answering, and the like).","D2. Semantic Programming Language Types","The semantic programming language (hereinafter referred to as \u201cSPL\u201d) is intended to assist software application developers to implement natural language programs. Since most developers are not experts in semantic analysis or linguistics, the SPL provides a framework and a programming language for non-linguist developers to deal with natural language semantics in largely intuitive ways.","The SPL and an accompanying compiler facilitate programming of natural language client applications to the LOM. The SPL is designed to hide many of the underlying details of the linguistic framework in order to make it easier for developers to write code that interacts properly with the Framework.","Although the SPL can be the standard front-end for developers making use of the Framework, the SPL is not required. A developer can target the Framework directly, by creating types that implement the various Framework interfaces, by inheriting from types that implement the various Framework interfaces, and by providing application schema to the Interpreter. Alternatively, this may be done indirectly, such as by other means of authoring Framework-compatible code, as through, for example, a visual forms-based design tool.","In general, the LOM is implemented as a class library of the SPL. This is similar to the way that the C Runtime Library and the Standard Template Library (STL) form the standard library of, for example, Microsoft\u00ae Visual C++\u00ae, which is an application designed to facilitate software development and which was created by Microsoft Corporation of Redmond, Wash. The terms Microsoft\u00ae and Visual C++\u00ae are trademarks owned by Microsoft Corporation of Redmond, Wash.","The semantically meaningful types in SPL are those types that participate in the modeling of the semantics of incoming utterances and in modeling the application commands to which those incoming utterances correspond. Semantically meaningful types are the types that SPL authors can derive from and specialize to their application domains. The semantically meaningful types in SPL are Entities, Frames, Restrictions, Commands, and Denoter Objects. Functional types in SPL are Phrases and Slots. Each of these types is discussed separately below.","In general, the SPL framework types define all aspects of the interactions between the client application, an SPL interpreter, and one or more natural language analysis engines. The phrase \u201call aspects of the interactions\u201d refers to the interfaces that the various components must implement, the base classes from which the various components inherit, and the types of data passed between components of the system. In one embodiment, the framework types are implemented as types in the .NET Framework, which is a framework that was created by Microsoft\u00ae Corporation of Redmond, Wash. The SPL types can be arranged into several namespaces. In one embodiment, the SPL types are arranged into several namespaces, which are all subnamespaces of, for example, System.NaturalLanguageServices or System.NaturalLanguage namespace. As used herein, \u201cnamespace\u201d refers to a context in which names (identifiers) are defined. Within a given namespace, all names must be unique.","For the sake of clarity, the discussion below introduces the SPL types, introduces the LOM in detail, and then returns to detail the SPL. Throughout the text, examples are used, where appropriate, to illustrate the invention. For the most part, examples tend to derive from a simple natural language utterance, Send mail to Bob. Given this utterance, an application written according to the LOM and using the SPL can generate interpretations based on the text input. The generated interpretations can then be resolved against the natural language application to identify and execute actual interpretations of the instruction.","An Entity is an object of type Entity, meaning an entity can include data members, properties and methods. SPL Entities are objects whose type derives from class Entity and is used mainly to model the semantics of noun phrases and adjective phrases. SPL Entities may host frames or restrictions (both described below) via the \u201cwith\u201d syntax. Additionally, SPL Entities may include an optional \u201cDenoted By\u201d clause, which introduces a privileged data member of type \u201cDenoter\u201d (described below). The privileged data member, introduced by the \u201cDenoted By\u201d clause, can be used by an SPL interpreter to map entities to actual natural-language words.","A Frame is a class, which models the semantics of semantic events, where the semantic event can be expressed either as verbs or nouns. SPL frames are classes that derive from Frame. In general, Frames can apply to Entities, so a Frame can have a \u201cDenoted By\u201d clause, as well as lists of \u201cslots\u201d (described below) containing frame arguments. Additionally, Frames may host restrictions via the \u201cwith\u201d syntax. In one embodiment, head words for a Frame may be defined by a developer to create new Frame types. In an alternative embodiment, developers inherit from existing frames, and derive the desired headwords from inheritance. In another embodiment, developers can specify headwords in a manner similar to how denoters are specified.","Restrictions generally model oblique arguments, modifiers, and other semantic elements. SPL restrictions are classes that derive from class Restriction. Restrictions, like frames, have lists of slots containing arguments. Additionally, SPL Restrictions may host other Restrictions via the \u201cwith\u201d syntax.","SPL commands are classes that derive from class Command. Commands are purely domain dependent, meaning that they depend on the specific natural language application to which they are associated. In general, domain dependent commands have no role in modeling the semantics of the input, and thus commands play no role in the LOM. Instead, commands model actions in the application.","Additionally, commands have an optional \u201cuses\u201d clause, which introduces a privileged data member of type Frame. The \u201cuses\u201d clause is the crucial link between the domain-independent input and the desired domain-dependent action.","Denoter objects are structs of type Denoter. In practice, a lexicon is created that maps from each word used as a denoter in a SPL program to a corresponding list of Denoters, so the Denoter object does not need to store a string list. There is one Denoter Object per natural language (an ENGLISH field, a JAPANESE field, and the like.). Denoter objects act as localization tables for entities. Like commands, denoter objects are purely domain dependent. However, Entity does have a field of type Denoter, which exists only so that the application can examine the Denoter object to determine why the Entity was suggested by an analysis engine.","The functional types in SPL are types that serve some modeling purpose, but that cannot be specialized. Additionally, other classes and types cannot be derived from the functional types.","The functional type \u201cPhrase\u201d encapsulates information about a portion of a text string input underlying some semantic object. Type Phrase allows software developers to perform ad hoc manipulation and examination of the original input string from inside structured representations of the semantics of that input string.","In one embodiment, the functional types \u201cSlots\u201d are objects of type Slot that hold entities, frames, restrictions or denoter objects, possibly along with some auxiliary information. For instance, slots corresponding to gaps in relative clauses contain entities marked as \u201cbackreferences\u201d. In an alternative embodiment, the Entity, Frame, or other reference is placed where a slot is expected. In another alternative embodiment, the Slot object is omitted along with its auxiliary information, and the Entity, Frame or other reference is used directly.","D3. LOM Types","Having reviewed the types that define the SPL semantic model structure, it is possible to discuss the LOM in detail. In general, the LOM types and the classes of linguistic expressions modeled by the types include Entities, Frames and Restrictions.","a. LOM Entities","While a large part, perhaps the majority, of an SPL programmer's job revolves around designing an array of domain entity types and gathering the correct localization information for each of those types, from the LOM's perspective, entities are straightforward. In many cases, the \u201chead word\u201d of the phrase is the head word of the entity. The head word normally corresponds to the lemma of the syntactic head of the phrase the entity models. The lemma denotes a canonical representation for different forms of a word. For example, the terms walks, walked, and walking share the lemma walk.","Regardless of the spoken language used, the general rule for all languages is that NPs become LOM entities. The head word of the entity is the lemma of the NP's head noun.","In general, coordination of entities is expressed in the LOM via the type \u201cCoordinatedEntity\u201d. A code snippet of illustrating an instantiation of type CoordinatedEntity is shown in Table 1.",{"@attributes":{"id":"p-0079","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"CoordinatedEntity."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Entity CoordinatedEntity"]},{"entry":[{},"{"]},{"entry":[{},"\u2003Entity entities[ ];"]},{"entry":[{},"\u2003CoordRelation relBetweenEntities;"]},{"entry":[{},"}"]},{"entry":[{},"enum CoordRelation"]},{"entry":[{},"{"]},{"entry":[{},"\u2003And,"]},{"entry":[{},"\u2003Or,"]},{"entry":[{},"\u2003ExclusiveOr"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Pronouns are modeled in the LOM as objects of type \u201cPronounEntity\u201d. An illustration of an instantiation of a pronoun entity according to an embodiment of the present invention is shown in Table 2.",{"@attributes":{"id":"p-0081","num":"0080"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PronounEntity."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"entity PronounEntity"]},{"entry":[{},"{"]},{"entry":[{},"\u2003Entity potentialAntecedents[ ];"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0082","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"STRUCT AgreementInfo"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"struct AgreementInfo"]},{"entry":[{},"{"]},{"entry":[{},"\u2003bool firstPerson;"]},{"entry":[{},"\u2003bool secondPerson;"]},{"entry":[{},"\u2003bool thirdPerson;"]},{"entry":[{},"\u2003bool singular;"]},{"entry":[{},"\u2003bool plural;"]},{"entry":[{},"\u2003bool feminine;"]},{"entry":[{},"\u2003bool masculine;"]},{"entry":[{},"\u2003bool neuter;"]},{"entry":[{},"\u2003bool honorific;"]},{"entry":[{},"\u2003bool humble;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Demonstratives such as \u201cthis\u201d and \u201cthat\u201d, which can be used as independent NPs, become objects of type DemonstrativeEntity. An illustration of an entity DemonstrativeEntity is provided below in Table 4.",{"@attributes":{"id":"p-0084","num":"0083"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"DemonstrativeEntity."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"entity DemonstrativeEntity"]},{"entry":[{},"{"]},{"entry":[{},"\u2003DemonstrativeType type;"]},{"entry":[{},"}"]},{"entry":[{},"enum DemonstrativeType"]},{"entry":[{},"{"]},{"entry":[{},"\u2003Near,"]},{"entry":[{},"\u2003Middle,"]},{"entry":[{},"\u2003Far"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Another related type is the NamedEntity type. The syntax for a NamedEntity is as follows.\n\n","b. LOM Frames","In one implementation, for all languages, clauses become LOM Frames; however, this is not necessarily true for all implementations. Conceptually, a Frame comes from a clause, but there need not actually be a clause present in the input. The head word of the frame is the lemma of the verb heading the clause. For example, analyzing the phrase \u201cSend mail to Bob\u201d would result in \u201csend mail\u201d being associated with an LOM Frame, where \u201cSend\u201d is the lemma of the verb heading the clause and is therefore the head word of the frame.","It should be understood that the Restrictions can be conceptualized as providing for a default behavior. However, such behavior is not necessarily enforced. The functionality is implementation specific.","Slots can be filled by entities or frames, so default slots can be either noun phrases or clauses. In addition, NPs may be headed by an empty pronoun (PRO). If PRO points to referents in another clause, the head of that clause will be interpreted as the head of the NP entity. If PRO has no referents, it will be interpreted as some entity, (such as someone or something).","In one embodiment, assuming there is a subject contained in the clause, the subject of the clause fills the \u201cDoer\u201d restriction. If there is no subject, there is no \u201cDoer\u201d restriction. \u201cDoer\u201d represents a first participant in an event, with semantics loosely described as doer, agent, actor, instigator or cause of the event or state named by the verb. Examples of verb clauses where a portion of the clause maps to the \u201cdoer\u201d restriction of the frame appear below in Table 5.",{"@attributes":{"id":"p-0091","num":"0091"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Verb Clause with a Subject."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"u":"Instant \u2009message"}]},{"entry":[{},{"u":"Robin"}]},{"entry":[{},{"u":"Amazon"}]},{"entry":[{},{"u":"[PRO]"}]},{"entry":[{},{"u":"Having\u2009a\u2009program\u2009associated\u2009with\u2009a\u2009file"}]},{"entry":[{},"\u2003\u2003easy opening."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"If there is an object in the clause, the object is mapped to a second slot of the frame called the \u201cDoneto\u201d restriction representing the second syntactic participant in the event. The semantics may be loosely understood to refer to the object that is affected by the event or state named by the verb. The underlined phrases of Table 6 map to the \u201cDoneto\u201d restriction.",{"@attributes":{"id":"p-0093","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 6"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"The \u201cDoneTo\u201d Restriction"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Outlook has ."]},{"entry":[{},"Amazon offers ."]},{"entry":[{},"[PRO] open ."]},{"entry":[{},"Preferences\u2003include\u2003"]},{"entry":[{},"\u2003\u2003."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In one implementation, indirect objects can be understood to be the beneficiaries of the action. In one embodiment, indirect objects may be mapped to a Beneficiary restriction. The Beneficiary restriction generally models verbal arguments that express the person on whose behalf or in whose place an event was performed. The beneficiary slot is illustrated briefly by the underlined pronouns contained in Table 7.",{"@attributes":{"id":"p-0095","num":"0095"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 7"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Beneficiary Slot."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Open  a new file."]},{"entry":[{},"Play  some tunes"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A Beneficiary restriction (or in an alternative embodiment, a \u201cslot\u201d) may be set to the entity modeling a noun phrase that is interpreted as a beneficiary. Table 8 illustrates a code block of the beneficiary restriction.",{"@attributes":{"id":"p-0097","num":"0097"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 8"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Beneficiary Retriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Beneficiary<benef := Entity>"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The beneficiary restriction, sometimes referred to as \u201cbenefactive\u201d, overlaps with allocation in English, especially on singular objects of \u201cfor\u201d prepositional phrases. Some overlap may also occur in other languages. When applied to frames, the beneficiary restriction is apparent from the following sentence.","I baked a cake for my mother.","PP [for]","In general, the beneficiary restriction models verbal arguments in most languages. Table 9 illustrates the beneficiary restriction in a few sample languages.",{"@attributes":{"id":"p-0102","num":"0102"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 9"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Beneficiary Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH:"]},{"entry":[{},"\u2003\u2003Preposition For"]},{"entry":[{},"\u2003\u2003Applies to indirect objects that are not"]},{"entry":[{},"\u2003\u2003Goals (cannot be paraphrased by a \u201cto\u201d"]},{"entry":[{},"\u2003\u2003prepositional phrase)"]},{"entry":[{},"\u2003\u2003\u2003\u2003I baked  a cake -> I baked a cake"]},{"entry":[{},"\u2003\u2003\u2003\u2003."]},{"entry":[{},"\u2003\u2003\u2003\u2003NOT: I gave her a book (cf. I gave a"]},{"entry":[{},"\u2003\u2003\u2003\u2003book to her, cf. Goal)"]},{"entry":[{},"\u2003\u2003\u2003\u2003I baked a cake for her."]},{"entry":[{},"\u2003\u2003\u2003\u2003I baked her a cake."]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003\u2003Preposition pour"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003Indirect objects:"]},{"entry":[{},"\u2003\u2003\u2003\u2003Ich schicke ihr eine Nachricht."]},{"entry":[{},"\u2003\u2003Preposition f\u00fcr"]},{"entry":[{},"\u2003\u2003\u2003\u2003Das ist eine Nachricht fur sie."]},{"entry":[{},"JAPANESE"]},{"entry":[{},"\u2003\u2003NP-\u2003\u2003NP"]},{"entry":[{},"\u2003\u2003NP-\u2003\u2003...VP"]},{"entry":[{},"\u2003\u2003Subjects of a fixed clausal (small clause)"]},{"entry":[{},"\u2003\u2003construction, comparable to the English"]},{"entry":[{},"\u2003\u2003bake a cake [for her to have].\u2003\u2003In"]},{"entry":[{},"\u2003\u2003contrast, verbs that take a Goal argument"]},{"entry":[{},"\u2003\u2003mark it with the dative particle, e.g. give"]},{"entry":[{},"\u2003\u2003her-DAT book-ACC"]},{"entry":[{},"SPANISH"]},{"entry":[{},"\u2003\u2003Preposition para"]},{"entry":[{},"\u2003\u2003Trajimos la lista de regalos para Fernando."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Generally, restrictions may be subjects, direct objects, indirect objects, oblique arguments, modifiers, and the like. In SPL, a frame can take any restriction (with exceptions noted below). However, the LOM uses the grammar to prefer restrictions in two ways. First, an oblique argument may be a restriction type associated with a Lexical Semantic Structure class of which the verb is a member (this is discussed in greater detail below). Second, an oblique argument may be idiosyncratically associated with an individual verb; that is, the argument does not bear any of the restriction relations to its clausal head. The arguments are assigned to the Default restriction (discussed below) and are identified by their lexical head.","Coordination of frames is done in two different ways, depending on the context. \u201cTop-level\u201d coordinated frames (i.e., those that come from matrix verbs) are represented as objects of type CoordinatedFrame, parallel to CoordinatedEntity (described above). An illustrative example is shown in Table 10 below.",{"@attributes":{"id":"p-0105","num":"0105"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 10"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"CoordinatedFrame."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"frame CoordinatedFrame"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003Frame","frames[ ];"]},{"entry":[{},"\u2003CoordRelation","relBetweenFrames;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"As previously discussed, in one embodiment, Frames may serve as restrictions on entities to model natural language relative clauses. When frames are attached to entities via the \u201cwith\u201d keyword, the frame imposes a restriction on the entity, which is referred to as a \u201cframe-based restriction\u201d. In a vast majority of cases, one slot in a frame corresponds to a natural language gap bound by the head noun. In the LOM, this translates into the frame-based restriction receiving a reference to its host entity in one of its slots. Inclusion of a reference to the host entity in a slot of the frame-based restriction can be referred to as a \u201cbackreference\u201d. Since such \u201cbackreferences\u201d permit reentrance into the otherwise tree-like LOM representations, slots that correspond to gaps have their isBackreference flag set to true. (This flag is simply a convenience for processes that walk over LOM representations.) For example, in Table 11 below, a frame-based restriction is resolved against the phrase \u201cfiles that Billy opened yesterday\u201d.",{"@attributes":{"id":"p-0107","num":"0107"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 11"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Frame-Based Restriction"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"chemistry":{"@attributes":{"id":"CHEM-US-00001","num":"00001"},"img":{"@attributes":{"id":"EMI-C00001","he":"13.38mm","wi":"51.65mm","file":"US07689410-20100330-C00001.TIF","alt":"embedded image","img-content":"table","img-format":"tif"}}}}},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0108","num":"0108"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 12"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Frame-Based Restriction"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"chemistry":{"@attributes":{"id":"CHEM-US-00002","num":"00002"},"img":{"@attributes":{"id":"EMI-C00002","he":"13.80mm","wi":"46.14mm","file":"US07689410-20100330-C00002.TIF","alt":"embedded image","img-content":"table","img-format":"tif"}}}}},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0109","num":"0109"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 13"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Frame-Based Restriction"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"chemistry":{"@attributes":{"id":"CHEM-US-00003","num":"00003"},"img":{"@attributes":{"id":"EMI-C00003","he":"13.89mm","wi":"58.00mm","file":"US07689410-20100330-C00003.TIF","alt":"embedded image","img-content":"table","img-format":"tif"}}}}},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},"In an alternative embodiment, Frames do not have slots, but instead use \u201cDoer\u201d and \u201cDoneto\u201d restrictions as described above. In such an instance, a new restriction may be defined based on the frame, and restriction clauses for \u201cDoer\u201d and \u201cDoneto\u201d can be applied to that new restriction. Thus, restrictions present an alternative way of handling frame arguments. In the following discussion, for the sake of brevity, reference may be made to only one such implementation, but either implementation may apply.","c. LOM Restrictions","Unlike entities and frames, coordination of restrictions is not represented through the use of \u201ccompound\u201d types such as CoordinatedEntity and CoordinatedFrame. Instead, the semantics of SPL are exploited to represent restriction conjunctions, while restriction disjunctions are reduced to entity or frame disjunctions.","SPL assigns a conjunction or intersection semantics to two restriction clauses successfully triggering sequentially on the same host; therefore, linguistic conjunction of material that is modeled with restrictions is handled by simply triggering two or more restrictions in sequence. Linguistic disjunction of material modeled with restrictions, on the other hand, has no convenient counterpart in SPL semantics. Such disjunctions, then, \u201cbubble up\u201d to the next entity or frame above the restriction (usually the host), giving rise to CoordinatedEntity or CoordinatedFrame objects at that level.","For instance, for the phrase \u201cmail from Kim or to Robin\u201d, there is an entity host, \u201cEntity(mail)\u201d, and two restrictions, \u201cSource(Entity(Kim))\u201d and \u201cGoal(Entity(Robin))\u201d. Since the two restrictions are coordinated with the disjunction \u201cor\u201d, the disjunction should bubble up to the host, \u201cEntity(mail)\u201d, resulting in the mapping illustrated in Table 14.",{"@attributes":{"id":"p-0115","num":"0115"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 14"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"RESTRICTION COORDINATION"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"chemistry":{"@attributes":{"id":"CHEM-US-00004","num":"00004"},"img":{"@attributes":{"id":"EMI-C00004","he":"18.88mm","wi":"48.94mm","file":"US07689410-20100330-C00004.TIF","alt":"embedded image","img-content":"table","img-format":"tif"}}}}},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},"An Accompaniment restriction models an additional member or members in some group. Often, accompaniment can be paraphrased by a conjunction. For example, the phrase customers along with their birthdates can be paraphrased as customers and their birthdates. For reciprocal-event-denoting entities, the accompaniment restriction models an additional participant in the event. Often, such nominals have corresponding frames (e.g. correspond, meet, chat, and so on). The accompaniment restriction also models prepositional phrases in noun phrases such as correspondence with my manager, an appointment with Kim, meeting with Tim (emphasis added), a chat with Sue, and so on. An example of the syntax of an Accompaniment restriction according to an embodiment of the present invention is illustrated in Table 15.",{"@attributes":{"id":"p-0117","num":"0117"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 15"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"ACCOMPANIMENT."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Accompaniment<accomp := Entity>"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Accompaniment restriction can also model additional who or what participants in the context of a Frame. For example, the phrase \u201cchat with Robin\u201d invokes the \u201cChat\u201d frame with the phrase \u201cwith Robin\u201d as an accompaniment restriction.","The accompaniment restriction may also be assigned to a slot within the entity modeling the noun phrase that is interpreted as accompanying the host. Alternatively, the accompaniment restriction can be set to the \u201cwho\u201d or the \u201cwhat\u201d slot.","In some instances, it may be desirable to compile a list of cases of \u201cwith\u201d as entity lists, which are semantically equivalent to conjunctions. To the extent that equivalent accompaniment expressions exist in other languages as well, it may be useful to compile entity lists for those expressions as needed.","With respect to possessives that can be modeled as accompaniment, it may be desirable include them in entity lists as well. For example, \u201cemail with attachments\u201d is an accompaniment-style possession, as opposed to \u201cemail's attachments\u201d which is a possessor-style possession. In some instances, these may be treated as linguistically complementary. Additionally, phrases such as \u201can email that has attachments\u201d can also be modeled as accompaniment restrictions.","Subject reciprocals can also be folded into accompaniment restrictions. An example of a subject reciprocal is \u201cJohn chatted with Mary\u201d as compared with \u201cJohn and Mary chatted\u201d. Lexically, these two expressions are easily identified. Similarly, object reciprocals, such as \u201cMerge File A and File B\u201d as compared with \u201cMerge File A with File B\u201d, are readily identifiable. It may be desirable to incorporate such subject and object reciprocals into accompaniment normalization in the LOM.","The accompaniment restriction extends to many languages, particularly with respect to prepositional phrases such as \u201calong with\u201d or \u201ctogether with\u201d. In French, German, Japanese, Spanish, and other languages, a similar accompaniment restriction can be employed. Table 16 illustrates such accompaniments.",{"@attributes":{"id":"p-0124","num":"0124"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 16"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Accompaniment Restrictions"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"(along|together) PP[with] (English)"]},{"entry":[{},"((tout) ensemble) PP[avec] (French)"]},{"entry":[{},"PP[mit] + Dative (German)"]},{"entry":[{},"\u2003\u2003\u201cEr kommt mit den Kindern.\u201d"]},{"entry":[{},"Entity Hosts: (Japanese)"]},{"entry":[{},"\u2003\u2003NP-\u2003\u2003NP"]},{"entry":[{},"\u2003\u2003NP-\u2003\u2003\u2002NP"]},{"entry":[{},"Frame hosts: (Japanese)"]},{"entry":[{},"\u2003\u2003NP- ... VP"]},{"entry":[{},"\u2003\u2003NP- ..._... VP"]},{"entry":[{},"PP[con] (Spanish)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"An allocation restriction, such as that illustrated in Table 17, generally models an entity to which the host entity is distributed or models an entity that exists or was created on the host entity's behalf.",{"@attributes":{"id":"p-0126","num":"0126"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 17"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Allocation Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Allocation<alloc := Entity>"]},{"entry":[{},"\u2003{"]},{"entry":[{},"\u2003}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"In general, the allocation restriction may apply to allocation to singular as well as plural entities. The allocation restriction is in complementary distribution with the Beneficiary in English. Only an entity hosts an allocation. Only frames host a beneficiary, especially on singular objects of for prepositional phrases. In English, this preposition may be used in a number of ways. For example, in packets for a specific destination it indicates a purpose, whereas in application for which you are enabling authorization checking it is a type of allocation. Similarly, tabs for taskpad views, checkbox for the type of service, and area code for Madison, Wis. all represent allocation restrictions. In German, f\u00fcr expresses allocation, inter alia. In Spanish, the corresponding preposition is para:the phrase \u201cuna escoba para la cocina\u201d illustrates an allocation restriction.","An \u201cAsBeing\u201d restriction on a Frame models a property or capacity assigned to the object slot of the frame. Only modifier restrictions modeling an adjective phrase map into the restriction version. Table 18 provides two code samples of the AsBeing restriction.",{"@attributes":{"id":"p-0129","num":"0129"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 18"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"AsBeing Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction AsBeing<asbeing := Entity>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},"restriction AsBeing<asbeing := Modifier>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0130","num":"0130"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 19"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"AsBeing Examples."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003PP[as]: Save the file as text."]},{"entry":[{},"\u2003\u2003Make me an administrator."]},{"entry":[{},"\u2003\u2003Mark all messages unread."]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003PP[als]: Speicher die Datei als Text."]},{"entry":[{},"JAPANESE"]},{"entry":[{},"\u2003\u2003-to complementizers"]},{"entry":[{},"\u2003\u2003-to site adverbials"]},{"entry":[{},"SPANISH"]},{"entry":[{},"\u2003\u2003PP[for]:\u2003para"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A cardinal restriction is one that models cardinality as expressed by numeric quantifiers. Slots and fields may be set to the floating point value of the numeric quantifier. Indefinite articles such as \u201can\u201d and \u201ca\u201d may be modeled as \u201cone\u201d in some cases. Table 20 illustrates a cardinal restriction.",{"@attributes":{"id":"p-0132","num":"0132"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 20"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Cardinal Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Restriction Cardinal"]},{"entry":[{},"{"]},{"entry":[{},"\u2003float number;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0133","num":"0133"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 22"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Expressions illustrating Cardinal"},{"entry":"Restrictions."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003 cats"]},{"entry":[{},"\u2003\u2003 dollars"]},{"entry":[{},"\u2003\u2003 kilos"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003\u2003 chats"]},{"entry":[{},"\u2003\u2003 francs"]},{"entry":[{},"\u2003\u2003 kilos"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003 Mails"]},{"entry":[{},"\u2003\u2003 Euros"]},{"entry":[{},"\u2003\u2003 Kilos"]},{"entry":[{},"JAPANESE"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003...(floating quantifiers)"]},{"entry":[{},"SPANISH"]},{"entry":[{},"\u2003\u2003 gatos"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Another type of restriction, \u201cComparison\u201d, models comparisons of an entity with another explicitly identified entity. The syntax for a Comparison restriction is illustrated in Table 23.",{"@attributes":{"id":"p-0135","num":"0135"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 23"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Comparison Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Restriction Comparison<dimension := Modifier,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003refpoint := Entity>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"The comparison restriction may be applied to a dimension slot, where the dimension is set to a modifier restriction modeling an adjective phrase. This modifier restriction will typically have a \u201cdegree\u201d restriction with its degree field set to \u201cmore\u201d, \u201cless\u201d or \u201csame\u201d, for example. A \u201crefpoint\u201d field is set to the entity to be compared with the host entity.","Depending on the specific implementation, superlatives that explicitly name a comparison class may require special attention. For example, the phrase the tallest girl in the class may result in the class being called out as a refpoint for comparison, or alternatively the class may be called out as a location on girl. Various other superlative expressions may also require special attention. For example, the phrase my daughter is tall for her age and the Spanish equivalent mi hija es alta para su edad present a similar problem from the perspective of the LOM.","Table 24 provides some exemplary expressions that can be modeled by the comparison restriction.",{"@attributes":{"id":"p-0139","num":"0139"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 24"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example expressions modeled by the"},{"entry":"comparison restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003a file bigger than mydoc.txt"]},{"entry":[{},"\u2003\u2003documents\u2003that\u2003are\u2003less\u2003relevant\u2003than"]},{"entry":[{},"\u2003\u2003mydoc.txt"]},{"entry":[{},"\u2003\u2003watches as expensive as the Rolex X-55J"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003\u2003des livres plus chers que ce livre"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003PP[als]"]},{"entry":[{},"\u2003\u2003\u2003\u2003Eine Datei,\u2003die kleiner\u2003ist\u2003als"]},{"entry":[{},"\u2003\u2003\u2003\u2003mydoc.txt."]},{"entry":[{},"\u2003\u2003[ebenso\/genauso\/so\/ [AJP] wie]"]},{"entry":[{},"\u2003\u2003\u2003\u2003Die Datei ist genauso gross wie"]},{"entry":[{},"\u2003\u2003\u2003\u2003mydoc.txt."]},{"entry":[{},"JAPANESE"]},{"entry":[{},"\u2003\u2003mydoc.txt"]},{"entry":[{},"\u2003\u2003\u2003\u2003X-55J"]},{"entry":[{},"SPANISH"]},{"entry":[{},"\u2003\u2003un archivo m\u00e1s grande que mydoc.txt"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A conditional restriction models a condition expressed within an utterance. Table 25 illustrates a conditional restriction syntax.",{"@attributes":{"id":"p-0141","num":"0141"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 25"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Conditional Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Conditional<condition := Frame>"]},{"entry":[{},"{"]},{"entry":[{},"\u2003ConditionType type;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"A default restriction does not model any particular class of constructions, but simply provides an interface to portions of the underlying linguistic analysis that have not yet been claimed by other LOM objects. Table 26 provides an example of the default restriction syntax for one possible implementation of the present invention.",{"@attributes":{"id":"p-0143","num":"0143"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 26"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Default Restriction"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Restriction Default"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003LinguisticAnalysis analysis;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Another possible variant of the Default restriction takes a single Entity as its slot. This variant of the Default restriction makes it possible for any relationship between this single Entity and the object hosting the restriction.","It is important to note that in general a restriction can have patterns associated with it. Such pattern associations can enable the LOM consumer to communicate with an LOM producer (analysis engine) regarding which linguistic constructs to identify. A simple example would be string-based patterns. For example, a Source restriction usage could have a pattern of [\u201cdue to\u201d+X] to ensure that an analysis engine (LOM producer) maps that pattern to a Source restriction. By applying pattern associations to the linguistic analysis, the programmer (author) can choose to do lower-level reasoning over the user input. Unlike other LOM types, there is no cross-linguistic normalization implied with the Default restrictions.","Depending on the implementation, it may be necessary to define a single interface (for example, \u201cILinguisticAnalysis\u201d) that can expose anything from full parsing results to simple strings. In general, patterns may correspond to different ways that parts of an utterance might be exposed through an ILinguisticAnalysis. In a preferred embodiment, there is a range of default restrictions, one for each kind of analysis engine.","A Degree restriction attaches only to modifier restrictions that model adjective phrases. Table 27 illustrates the syntax for the degree restriction and the DegreeType enumeration.",{"@attributes":{"id":"p-0148","num":"0148"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 27"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Degree Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Degree"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003DegreeType degree;"]},{"entry":[{},"}"]},{"entry":[{},"enum DegreeType"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003More,"]},{"entry":[{},"\u2003\u2003Most,"]},{"entry":[{},"\u2003\u2003Less,"]},{"entry":[{},"\u2003\u2003Least,"]},{"entry":[{},"\u2003\u2003Same,"]},{"entry":[{},"\u2003\u2003High,"]},{"entry":[{},"\u2003\u2003Low"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"In some instances, it may be desirable to recognize the low value of DegreeType by retrieving both a clausal negation and a high-type adverb at the same time. For example, the expression \u201cnot very big\u201d refers to a low value of DegreeType expressed through a negation (not) and adverb (very). Ignoring the negation would lead to an incorrect interpretation of the utterance. Table 28 illustrates some exemplary phrases that can be modeled using the degree restriction.",{"@attributes":{"id":"p-0150","num":"0150"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 28"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Phrases Implicating Degree"},{"entry":"Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ENGLISH"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"More: bigg,  relevant"]},{"entry":[{},"Most: bigg,  relevant"]},{"entry":[{},"Less:  relevant"]},{"entry":[{},"Note that smaller is not modeled as \u201cless"]},{"entry":[{},"big\u201d, but as \u201cmore small\u201d. The LOM does not"]},{"entry":[{},"model any notion of scalar antonyms."]},{"entry":[{},"Least:  relevant"]},{"entry":[{},"Same:  big"]},{"entry":[{},"High:  big,  popular"]},{"entry":[{},"Low:  big"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"GERMAN"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"More:\u2003gr\u00f6\u03b2er, relevanter, mehr relevant"]},{"entry":[{},"Most: gr\u00f6\u03b2te\/n, am Relevantesten"]},{"entry":[{},"Less: weniger relevant, weniger wichtig"]},{"entry":[{},"Least: wenig\u03b2te\/n"]},{"entry":[{},"Same: genauso\/ebenso relevant"]},{"entry":[{},"High: sehr klein, extrem dick"]},{"entry":[{},"Low: nicht sehr dick"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"A Direction restriction models a direction of motion or an orientation of spatial position. Table 29 provides an example of the Direction restriction and its associated enumerations.",{"@attributes":{"id":"p-0152","num":"0152"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 29"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Direction Restriction and Associated"},{"entry":"Enumerations."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Direction<landmark := Entity>"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003DirType myDirType;"]},{"entry":[{},"\u2003\u2003OtherDirectionType other;"]},{"entry":[{},"}"]},{"entry":[{},"enum DirType"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003Up,"]},{"entry":[{},"\u2003\u2003Down,"]},{"entry":[{},"\u2003\u2003Backward,"]},{"entry":[{},"\u2003\u2003Forward,"]},{"entry":[{},"\u2003\u2003Around,"]},{"entry":[{},"\u2003\u2003In,"]},{"entry":[{},"\u2003\u2003Out,"]},{"entry":[{},"\u2003\u2003Other"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Direction type (\u201cDirType\u201d) field of the slot can be set to the appropriate enumeration value. In some instances, other enumerated values may be desirable. For example, the command \u201cturn\u201d has an unspecified direction; however, \u201cturn\u201d appears to expect a direction as an argument. Thus, it may be desirable to provide an enumerated value for \u201cUnspecified\u201d so as to distinguish such an expression from other, depending on the implementation. Values that are conflated in verbs may be stored as new object representations on the lexical entry. It is also important to understand that the Direction restriction includes objects of direction (prepositional phrases) and directional adverbs, independent of the attachment site. Table 30 provides some examples of phrases that can be modeled by Direction restrictions.",{"@attributes":{"id":"p-0154","num":"0154"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 30"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Phrases Modeled by Direction"},{"entry":"Restriction"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ENGLISH"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"up (up, raise, elevate, increase)"]},{"entry":[{},"down (down, lower, decrease, plummet)"]},{"entry":[{},"forward (advance, proceed)"]},{"entry":[{},"backward (back, backward, retreat, recede,"]},{"entry":[{},"retract)"]},{"entry":[{},"around (rotate)"]},{"entry":[{},"in (insert)"]},{"entry":[{},"out (extract)"]},{"entry":[{},"other (diagonal, left, turn)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"GERMAN"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"up (hoch, anheben, erh\u00f6hen)"]},{"entry":[{},"down (runter, senken)"]},{"entry":[{},"forward (vorw\u00e4rts, nach vorn)"]},{"entry":[{},"backward (r\u00fcckw\u00e4rts, zur\u00fcck)"]},{"entry":[{},"around (drehen., rotieren)"]},{"entry":[{},"in (einf\u00fcgen)"]},{"entry":[{},"out (extrahieren)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"An Example restriction models exemplars of an entity type, a frame or a restriction. Table 31 illustrates the syntax for each such Example restriction type.",{"@attributes":{"id":"p-0156","num":"0156"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 31"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Example<example := Entity>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},"restriction Example<example := Frame>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},"restriction Example<example := Restriction>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":["I want to find vendors, for example Volt.","I want to find vendors, Volt, for example.\n\nIn another embodiment, it may be desirable to provide an additional slot for the object (the what) for which the exemplar is an example. For example, the phrase This program exemplifies solid coding techniques may require an extra slot for modeling the phrase \u201csolid coding techniques\u201d. In general, the Example restriction can be understood to model similes. Table 32 provides some phrases that can be modeled by the Example restriction.\n"]}}}},{"@attributes":{"id":"p-0157","num":"0159"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 32"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Phrases Modeled by Example"},{"entry":"Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003\u201clike\u201d"]},{"entry":[{},"\u2003\u2003Show me cars "]},{"entry":[{},"\u2003\u2003Which CEO dances ?"]},{"entry":[{},"\u2003\u2003 does a butterfly look ?"]},{"entry":[{},"\u2003\u2003\u201cas\u201d"]},{"entry":[{},"\u2003\u2003\u201csuch as\u201d"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003wie"]},{"entry":[{},"SPANISH"]},{"entry":[{},"\u2003\u2003como"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"An Extent restriction models an entity with respect to which some notion of extent in space is measured. Table 33 illustrates the syntax of the Extent restriction.",{"@attributes":{"id":"p-0159","num":"0161"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 33"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Extent Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Extent<extent := Entity>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0160","num":"0162"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 34"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Phrases Modeled by Extent"},{"entry":"Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003along"]},{"entry":[{},"SPANISH"]},{"entry":[{},"\u2003\u2003por"]},{"entry":[{},"\u2003\u2003Mi hermana va por la calle San Juan."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A Goal restriction models a goal of motion (metaphorical or physical) or an end state of a change of state with respect to an Entity or a Frame. Table 35 illustrates the syntax of the Goal restriction according to an embodiment of the present invention.",{"@attributes":{"id":"p-0162","num":"0164"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 35"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Goal Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Goal<goal := Entity>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0163","num":"0165"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 36"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Phrases Modeled by Goal"},{"entry":"Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003\u2003to"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003\u2003\u2003\u00e0"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003\u2003f\u00fcr"]},{"entry":[{},"JAPANESE"]},{"entry":[{},"\u2003\u2003\u2003NP-"]},{"entry":[{},"SPANISH"]},{"entry":[{},"\u2003\u2003\u2003para"]},{"entry":[{},"\u2003\u2003\u2003Hay vuelos para La Paz todas las semanas."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"It will be understood by a worker skilled in the art that other Goal restriction types exist in most languages. The Goal restriction can be accessed using most languages.","An Iteration restriction models repetition of an action. Table 37 illustrates the syntax of the Iteration restriction.",{"@attributes":{"id":"p-0166","num":"0168"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 37"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Iteration Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Iteration"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003\u2003\u2003IterationType type;"]},{"entry":[{},"\u2003\u2003\u2003\u2003float\u2003\u2003\u2003\u2003\u2003times;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"enum IterationType"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003\u2003Count,"]},{"entry":[{},"\u2003\u2003\u2003\u2003Never,"]},{"entry":[{},"\u2003\u2003\u2003\u2003Rarely,"]},{"entry":[{},"\u2003\u2003\u2003\u2003Sometimes,"]},{"entry":[{},"\u2003\u2003\u2003\u2003Often,"]},{"entry":[{},"\u2003\u2003\u2003\u2003Always"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In one embodiment, the Iteration restriction may be incorporated into a Recurrence field of the time restriction. In general, the field of type Count signifies that the action is repeated a certain number of times (e.g. do [something] 5 times). When the type has this value, field \u201ctimes\u201d holds the number of iterations. If the type has other values, the type models modifiers that do not express a specific number of iterations. Thus, when type is set to count, it holds the number of iterations, and otherwise, type is ignored. Table 38 provides some terms and phrases that can be modeled by the Iteration restriction.",{"@attributes":{"id":"p-0168","num":"0170"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 38"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Phrases Modeled by Iteration"},{"entry":"Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u20035 times"]},{"entry":[{},"\u2003\u2003never"]},{"entry":[{},"\u2003\u2003sometimes"]},{"entry":[{},"\u2003\u2003frequently"]},{"entry":[{},"\u2003\u2003seldom"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003\u20035 fois"]},{"entry":[{},"\u2003\u2003jamais"]},{"entry":[{},"\u2003\u2003souvent"]},{"entry":[{},"\u2003\u2003rarement"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u20035 Mal"]},{"entry":[{},"\u2003\u2003nie, niemals"]},{"entry":[{},"\u2003\u2003manchmal, ab und zu"]},{"entry":[{},"\u2003\u2003oft"]},{"entry":[{},"\u2003\u2003selten"]},{"entry":[{},"JAPANESE"]},{"entry":[{},"\u2003\u20035"]},{"entry":[{},"SPANISH"]},{"entry":[{},"\u2003\u20035 veces"]},{"entry":[{},"\u2003\u2003nunca"]},{"entry":[{},"\u2003\u2003algunas veces, de vez en cuando"]},{"entry":[{},"\u2003\u2003con frecuencia, frecuantemente"]},{"entry":[{},"\u2003\u2003raramente"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"It will be understood by a worker skilled in the art that other Iteration restriction types exist in most languages. The Iteration restriction can be accessed using most languages.","A Location restriction models a physical or metaphorical location. Table 39 illustrates the syntax of the Location restriction.",{"@attributes":{"id":"p-0171","num":"0173"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 39"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Location Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Location<loc := Entity>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0172","num":"0174"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 40"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary Terms\/Phrases Modeled by"},{"entry":"Location Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003\u2003at"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003\u2003\u2003\u00e0"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003\u2003in\/bei +Dative"]},{"entry":[{},"\u2003\u2003\u2003Er ist in der Stadt."]},{"entry":[{},"\u2003\u2003\u2003Er ist bei Hamburg."]},{"entry":[{},"JAPANESE"]},{"entry":[{},"\u2003\u2003\u2003NP-"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"It will be understood by a worker skilled in the art that other Location restriction types exist in most languages. The Location restriction can be accessed using most languages.","A Means restriction models a means or device for accomplishing something for an Entity or a Frame. The syntax of the Means restriction is illustrated in Table 41.",{"@attributes":{"id":"p-0175","num":"0177"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 41"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Means Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Means<means := Entity>"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"restriction Means<means := Frame>"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"It will be understood by a worker skilled in the art that other Means restriction types exist in most languages. The Means restriction can be accessed using most languages. Example terms\/phrases that can be modeled using the Means restriction are shown in Table 42.",{"@attributes":{"id":"p-0177","num":"0179"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 42"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Terms\/Phrases Modeled by Means"},{"entry":"Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003with a knife"]},{"entry":[{},"\u2003\u2003employing a knife"]},{"entry":[{},"\u2003\u2003use a spreadsheet program"]},{"entry":[{},"\u2003\u2003by arriving early"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003\u2003PP[avec]"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003PP[mit]"]},{"entry":[{},"\u2003\u2003Er schneidet mit dem Messer"]},{"entry":[{},"\u2003\u2003benutzen, gebrauchen"]},{"entry":[{},"\u2003\u2003SUBCL[indem]"]},{"entry":[{},"\u2003\u2003Er gewinnt, indem er schnell rennt"]},{"entry":[{},"JAPANESE"]},{"entry":[{},"\u2003\u2003NP-"]},{"entry":[{},"\u2003\u2003NP-"]},{"entry":[{},"\u2003\u2003VP-"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A Measure restriction models a weight or measure of an object for a Frame or Entity. Table 43 illustrates the syntax of the Measure restriction according to an embodiment of the present invention.",{"@attributes":{"id":"p-0179","num":"0181"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 43"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Measure Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Measure<measure := Entity>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},"restriction Measure<measure := Frame>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"It will be understood by a worker skilled in the art that other Measure restriction types exist in various languages. The Measure restriction can be accessed using most languages. Table 44 illustrates exemplary terms\/phrases that can be modeled by the Measure restriction.",{"@attributes":{"id":"p-0181","num":"0183"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 44"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Terms\/Phrases Modeled by Measure"},{"entry":"Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003Weight: three pounds"]},{"entry":[{},"\u2003\u2003Money: $4, fifty yen"]},{"entry":[{},"\u2003\u2003Distance: 3 yards"]},{"entry":[{},"\u2003\u2003Time: all day"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003\u2003Weight: deux kilogrammes"]},{"entry":[{},"\u2003\u2003Money: un franc"]},{"entry":[{},"\u2003\u2003Distance: cinq kilometres"]},{"entry":[{},"\u2003\u2003Time: toute la journ\u00e9e"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003Weight: drei Kilo"]},{"entry":[{},"\u2003\u2003Money: 4DM."]},{"entry":[{},"\u2003\u2003Distance: 3 Meter"]},{"entry":[{},"\u2003\u2003Time: den ganzen Tag"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A Modifier restriction may be considered a \u201ccatchall\u201d (a \u201cgarbage dump\u201d) restriction in that it does not model a semantically coherent class of linguistic expressions. It instead captures the syntactical notion of \u201cadjuncthood\u201d. In general, the Modifier restriction may model an adjective phrase, a noun phrase, or an adverbial phrase with respect to an Entity, a Frame, or a Restriction. In one implementation, a modifier slot is simply set to a denoter object constructed from the head word of the syntactic phrase being modeled. However, this implementation is not necessarily required in order to utilize the LOM. Table 45 illustrates a syntax of the Modifier restriction according to an embodiment of the present invention.",{"@attributes":{"id":"p-0183","num":"0185"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 45"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Modifier Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Modifier<mod := Denoter>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In general, Modifier restrictions model certain classes of linguistic modifiers in any context. While any linguistic modifier can become a modifier, Modifier restriction is intended as the primary LOM representation of only a subset of linguistic modifiers. That subset includes most or all adjective phrases, most or all noun phrase modifiers and some adverbial phrases. Many adverbial phrases, time expressions being one major example, find their primary LOM expression in other, more specific restrictions.","The Modifier restriction is unusual in that its slot contains a denoter object, rather than an Entity, Frame or Restriction. The Denoter object string is the head word of the modifier. The reason for this arrangement is that, while linguistic modifiers are semantically one-place functors over their hosts (the constituents that they modify) and are therefore similar to frames, in practice they are almost exclusively used as restrictions. Additionally, linguistic modifiers are almost never in other contexts where frames might appear. Rather than require cumbersome frame-based restriction syntax (something along the lines of with MyLargeFrame<this>) and the definition of a frame type for each desired modifier class, it is sufficient to specify only the Denoter object for a modifier class and take as the semantic argument the implicit restriction argument (such as the host object the restriction attaches to).","Predicative adjectives in relative clauses are represented the same way as the corresponding attributive use of that same adjective. So, \u201ca large file\u201d and \u201ca file that is large\u201d both become Modifier<large>.","This treatment of adjectives may not be appropriate for some languages, such as for JAPANESE, which has adjectives that behave syntactically indistinguishably from verbs. While nouns are very similar cross-linguistically, nouns are mapped to SPL entities. While verbs are also similar cross-linguistically, verbs are mapped to SPL frames. Adjectives, then, are somewhere in between nouns and verbs, and adjectives are not similar cross-linguistically.","Languages can be considered to exist on a continuum. On one end of the continuum, adjectives are not really a separate lexical category from verbs, such as in the Korean language. In this instance, adjectives are just stative, intransitive verbs. The Japanese language is similar to Korean in this regard, with adjectives behaving syntactically like verbs (although they are different morphologically). The English language and those languages that derive from Latin roots (such as the Euro languages) treat adjectives as a different category from verbs. On the other end of the spectrum, languages, such as Arabic, treat adjectives as nouns of a certain class. Rather than a word for \u201cred\u201d, Arabic uses a noun meaning something like \u201ca red one\u201d, such that the phrase \u201cthe book is red\u201d becomes \u201cthe book is a-red-one.\u201d","In some embodiments, there may be a representation for predicative adjectives in matrix clauses. For example, the phrase \u201cthis file is personal\u201d could be handled differently from \u201cthis file is text\u201d.","Additionally, it will be understood by a worker skilled in the art that other Modifier restriction types exist in various languages. The Modifier restriction can be accessed using most languages.","A Named restriction provides access to the denoter object of the host entity. This allows (for example, MyAlias and DL_MyAlias to be normalized to a single DLEntity without requiring the author to code for two different restrictions. Table 46 illustrates the syntax of a Named restriction according to an embodiment of the present invention.",{"@attributes":{"id":"p-0192","num":"0194"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 46"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Named Restriction"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Named<named := Denoter>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},"restriction Named<named := NamedEntity>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},"restriction Named<named := String>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"It will be understood by a worker skilled in the art that other named restriction types exist in various languages. The Named restriction can be accessed using most languages.","A Negation restriction models a semantic negation or logical NOT. Table 47 illustrates an example of syntax for the Negation restriction according to an embodiment of the present invention.",{"@attributes":{"id":"p-0195","num":"0197"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 47"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Negation Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Negation"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"An Ordinal restriction models ordinal numeral and other modifiers (such as \u201cprevious\u201d) that express some notion of position in a sequence. Table 48 illustrates a syntax for the Ordinal restriction and its enumeration according to an embodiment of the present invention.",{"@attributes":{"id":"p-0197","num":"0199"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 48"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Ordinal Restriction and Enumerations."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Ordinal",{}]},{"entry":[{},"{"]},{"entry":[{},"\u2003int","distance;"]},{"entry":[{},"\u2003ReferencePoint","refPoint;"]},{"entry":[{},"}"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"enum ReferencePoint"]},{"entry":[{},"{"]},{"entry":[{},"\u2003First,"]},{"entry":[{},"\u2003Last,"]},{"entry":[{},"\u2003Current"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Table 49 provides phrases that can be modeled by the Ordinal restriction.",{"@attributes":{"id":"p-0199","num":"0201"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 49"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Phrases Modeled by Ordinal"},{"entry":"Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003first, 4"]},{"entry":[{},"\u2003\u2003last, next to last, 3from the end"]},{"entry":[{},"\u2003\u2003previous, current, next, two back, two"]},{"entry":[{},"\u2003\u2003ahead"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003\u2003premier, 4"]},{"entry":[{},"\u2003\u2003dernier"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003erst, 4"]},{"entry":[{},"\u2003\u2003letzte\/r\/s, vorletzte\/r\/s"]},{"entry":[{},"\u2003\u2003n\u00e4chste\/r\/s, zwei _, zwei weiter"]},{"entry":[{},"JAPANESE"]},{"entry":[{},"\u2003\u2003, 4"]},{"entry":[{},"\u2003\u2003,\u2003\u20032"]},{"entry":[{},"\u2003\u2003,\u2003,\u2003, 2\u2003,"]},{"entry":[{},"SPANISH"]},{"entry":[{},"\u2003\u2003primero, 4\u00b0"]},{"entry":[{},"\u2003\u2003last, next to last, 3from the end"]},{"entry":[{},"\u2003\u2003previo, _, proximo, dos _, dos mas"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"It will be understood by a worker skilled in the art that other Ordinal restriction types exist in various languages. The Ordinal restriction can be accessed using most languages.","A Possessed restriction models a property, attribute or possession, and serves as a complement to the Possessor restriction (described below). Table 50 illustrates the syntax associated with the Possessed restriction according to an embodiment of the present invention.",{"@attributes":{"id":"p-0202","num":"0204"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 50"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Possessed Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Restriction Possessed<possessed := Entity>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In general, the Possessed restriction models a property, attribute or possession. For example, the phrases email with headers, schools with linguistics programs and the like can be modeled by the Possessed restriction. In some instances, the Possessed restriction may be referred to as \u201chaving\u201d an attribute, property, or possession. Table 51 provides some exemplary terms and phrases that can be modeled using the Possessed restriction.",{"@attributes":{"id":"p-0204","num":"0206"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 51"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Terms\/Phrases Modeled by Possessed Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003\u2002with"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003mail "]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003document "]},{"entry":[{},"\u2003\u2003\u2002of"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003files "]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003\u2002RELCL"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003Mail, die \u201cTreffen\u201d in der"]},{"entry":[{},"\u2003\u2003\u2002Betreffzeile hat"]},{"entry":[{},"\u2003\u2003\u2002mit"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003Mail mit Anhang"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"It will be understood by a worker skilled in the art that other Possessed restriction types exist in various languages. The Possessed restriction can be accessed using most languages.","A Possessor restriction complements the Possessed restriction. In general, the Possessor restriction models an entity's possessor, whether expressed by a full noun phrase or by a possessive pronoun. Table 52 illustrates the syntax of a Possessor restriction according to an embodiment of the present invention.",{"@attributes":{"id":"p-0207","num":"0209"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 52"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Possessor Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Possessor<possessor := Entity>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0208","num":"0210"},"tables":{"@attributes":{"id":"TABLE-US-00052","num":"00052"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 53"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Terms\/Phrases Modeled by Possessor Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003\u2002my, your, her, his, its, their"]},{"entry":[{},"\u2003\u2003\u2002of mine, of yours, of hers, of his, of its,"]},{"entry":[{},"\u2003\u2003\u2002of theirs"]},{"entry":[{},"\u2003\u2003\u2002(wheel) of the car"]},{"entry":[{},"\u2003\u2003\u2002Kim's, the computer's"]},{"entry":[{},"\u2003\u2003\u2002some instances of PP[of]'s"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003\u2003\u2002mon, son, ta, sa, leur"]},{"entry":[{},"\u2003\u2003\u2002de moi, de toi, de lui, d'eux"]},{"entry":[{},"\u2003\u2003\u2002some instances of PP[de]'s"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003\u2002mein, dein, sein, ihr, Ihr"]},{"entry":[{},"\u2003\u2003\u2002some instances of PP[von]"]},{"entry":[{},"\u2003\u2003\u2002some instances of genitive case"]},{"entry":[{},"JAPANESE"]},{"entry":[{},"\u2003\u2003\u2002\u2003,\u2003\u2003, \u2003\u2002\u2009,"]},{"entry":[{},"\u2003\u2003\u2002some instances of NP-"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Another restriction that is modeled in the LOM is the Purpose restriction. The Purpose restriction models an anticipated outcome that is associated to a Frame. Table 54 illustrates some exemplary phrases\/terms that can be modeled by the Purpose restriction.",{"@attributes":{"id":"p-0210","num":"0212"},"tables":{"@attributes":{"id":"TABLE-US-00053","num":"00053"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 54"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Terms\/Phrases Modeled by Purpose Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003\u2002for, in order to"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003\u2003\u2002pour, afin de; de sorte que; de sorte \u00e0; de"]},{"entry":[{},"\u2003\u2003\u2002fa\u00e7on \u00e0"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003\u2002um...zu"]},{"entry":[{},"\u2003\u2003\u2002so dass"]},{"entry":[{},"SPANISH"]},{"entry":[{},"\u2003\u2003\u2002para, para que, con objeto de, con el fin"]},{"entry":[{},"\u2003\u2003\u2002de"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A Reason restriction models a rational motive for a belief or action that is associated with a frame or an entity. In one embodiment, the Reason and the purpose restrictions may overlap in scope. Table 55 illustrates exemplary terms\/phrases that may be modeled by the Reason restriction.",{"@attributes":{"id":"p-0212","num":"0214"},"tables":{"@attributes":{"id":"TABLE-US-00054","num":"00054"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 55"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Terms\/Phrases Modeled by the Reason Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003\u2002because, in order to"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003\u2003\u2002parce que ; \u00e0 cause de ; en raison de"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003\u2002fuer"]},{"entry":[{},"\u2003\u2003\u2002weil"]},{"entry":[{},"\u2003\u2003\u2002wegen"]},{"entry":[{},"SPANISH"]},{"entry":[{},"\u2003\u2003\u2002por, porque, a causa de."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"A SortOrder restriction models modifiers that describe the styles and\/or methods of data ordering. Table 56 illustrates a syntax for the SortOrder restriction and its associated enumeration OrderType.",{"@attributes":{"id":"p-0214","num":"0216"},"tables":{"@attributes":{"id":"TABLE-US-00055","num":"00055"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 56"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SortOrder Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction SortOrder"]},{"entry":[{},"{"]},{"entry":[{},"\u2003OrderType type;"]},{"entry":[{},"\u2003OrderCriteria criteria;"]},{"entry":[{},"}"]},{"entry":[{},"enum OrderType"]},{"entry":[{},"{"]},{"entry":[{},"\u2003Default,"]},{"entry":[{},"\u2003Reverse,"]},{"entry":[{},"\u2003Increasing,"]},{"entry":[{},"\u2003Decreasing"]},{"entry":[{},"}"]},{"entry":[{},"enum OrderCriteria"]},{"entry":[{},"{"]},{"entry":[{},"\u2003Default"]},{"entry":[{},"\u2003Alphabetic,"]},{"entry":[{},"\u2003Numeric,"]},{"entry":[{},"\u2003GoJuuOn,"]},{"entry":[{},"\u2003Iroha"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Depending on the implementation, the SortOrder restriction may be put on entities for things like \u201calphabetical list\u201d. Additionally, verbs such as \u201calphabetize\u201d, \u201ccategorize\u201d, \u201cgroup\u201d, \u201cclassify\u201d and \u201cindex\u201d may be modeled by the SortOrder restriction. In certain instances, it may be desirable to include two fields for modeling phrases like \u201creverse alphabetical order\u201d, \u201cdecreasing alphabetical order\u201d, and the like. Moreover, there may be different sort orders common to two different languages. While the enumerations listed in Table 56 are common to the English language, Japanese may have additional sort ordering that is common to the language. Table 57 illustrates exemplary phrases\/terms that can be modeled by the SortOrder restriction.",{"@attributes":{"id":"p-0216","num":"0218"},"tables":{"@attributes":{"id":"TABLE-US-00056","num":"00056"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 57"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Terms\/Phrases Modeled by the SortOrder Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003\u2002in default order, in any order"]},{"entry":[{},"\u2003\u2003\u2002in reverse order, backwards"]},{"entry":[{},"\u2003\u2003\u2002alphabetically, in alphabetic order"]},{"entry":[{},"\u2003\u2003\u2002numerically, in numeric order"]},{"entry":[{},"\u2003\u2003\u2002in increasing order"]},{"entry":[{},"\u2003\u2003\u2002in decreasing order"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003\u2003\u2002dans l'ordre par d\u00e9faut; dans n'importe"]},{"entry":[{},"\u2003\u2003\u2002quel ordre"]},{"entry":[{},"\u2003\u2003\u2002par ordre inverse; en ordre inverse; dans"]},{"entry":[{},"\u2003\u2003\u2002l'ordre inverse"]},{"entry":[{},"\u2003\u2003\u2002alphab\u00e9tiquement, par ordre alphab\u00e9tique"]},{"entry":[{},"\u2003\u2003\u2002num\u00e9riquement, par ordre num\u00e9rique"]},{"entry":[{},"\u2003\u2003\u2002par ordre croissant ; par ordre ascendant;"]},{"entry":[{},"\u2003\u2003\u2002par ordre d\u00e9croissant ; par ordre"]},{"entry":[{},"\u2003\u2003\u2002descendant"]},{"entry":[{},"GERMAN\u2003\u2003[Babel]"]},{"entry":[{},"\u2003\u2003\u2002im R\u00fcckstellung Auftrag, in irgendeinem"]},{"entry":[{},"\u2003\u2003\u2002Auftrag"]},{"entry":[{},"\u2003\u2003\u2002im R\u00fcckauftrag, r\u00fcckw\u00e4rts"]},{"entry":[{},"\u2003\u2003\u2002in der alphabetischen Reihenfolge,"]},{"entry":[{},"\u2003\u2003\u2002alphabetisch"]},{"entry":[{},"\u2003\u2003\u2002im numerischen Auftrag, numerisch"]},{"entry":[{},"\u2003\u2003\u2002in zunehmendem Auftrag"]},{"entry":[{},"\u2003\u2003\u2002in abnehmender Reihenfolge"]},{"entry":[{},"JAPANESE"]},{"entry":[{},"\u2003\u2003\u2002\u2003\u2003\u2003\u2003\u2002,"]},{"entry":[{},"\u2003\u2003\u2002default-no-order-de,\u2003\u2003\u2003\u2003\u2003\u2003\u2003favorite-"]},{"entry":[{},"\u2003\u2003\u2002order-ni"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2009,\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002or"]},{"entry":[{},"\u2003\u2003\u2002reverse-no-order-de\u2003\u2003\u2003\u2003\u2003reverse-ni"]},{"entry":[{},"\u2003\u2003\u2002opposite-ni"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003or"]},{"entry":[{},"\u2003\u2003\u2002alphabet-order-ni\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002ABC-order-ni"]},{"entry":[{},"\u2003\u2003\u2002number-order-ni"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002or"]},{"entry":[{},"\u2003\u2003\u2002small-number-order-ni\u2003\u2003\u2003\u2002low-number-"]},{"entry":[{},"\u2003\u2003\u2002order-ni"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003or"]},{"entry":[{},"\u2003\u2003\u2002large-number-order-ni\u2003\u2003\u2003\u2002high-number-"]},{"entry":[{},"\u2003\u2003\u2002order-ni"]},{"entry":[{},"SPANISH"]},{"entry":[{},"\u2003\u2003\u2002ordenados por defecto, en el orden por"]},{"entry":[{},"\u2003\u2003\u2002defecto, en cualquier orden"]},{"entry":[{},"\u2003\u2003\u2002en orden inverso, al rev\u00e9s"]},{"entry":[{},"\u2003\u2003\u2002en orden alfab\u00e9tico, alfab\u00e9ticamente"]},{"entry":[{},"\u2003\u2003\u2002en orden num\u00e9rico, num\u00e9ricamente"]},{"entry":[{},"\u2003\u2003\u2002en orden ascend(i)ente, de menor a mayor"]},{"entry":[{},"\u2003\u2003\u2002en orden descend(i)ente, de mayor a menor"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A Source restriction models a source or origin of an object. The syntax for the Source restriction is shown in Table 58.",{"@attributes":{"id":"p-0218","num":"0220"},"tables":{"@attributes":{"id":"TABLE-US-00057","num":"00057"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 58"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Source Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Source<src := Entity>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"A StructureCriteria restriction models a notion, with respect to Frames, of operating over a set of objects in a structured manner. The StructureCriteria restriction models the criterion or criteria by which that operation proceeds. The syntax for the StructureCriteria restriction is shown in Table 59.",{"@attributes":{"id":"p-0220","num":"0222"},"tables":{"@attributes":{"id":"TABLE-US-00058","num":"00058"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 59"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"StructureCriteria Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction StructureCriteria<criteria :=Entity>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0221","num":"0223"},"tables":{"@attributes":{"id":"TABLE-US-00059","num":"00059"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 60"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Terms\/Phrases Modeled by Structure Criteria Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003\u2002sort , list "]},{"entry":[{},"\u2003\u2003\u2002display "]},{"entry":[{},"\u2003\u2003\u2002transmit "]},{"entry":[{},"\u2003\u2003\u2002get my email "]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003\u2002sortieren nach Thema"]},{"entry":[{},"\u2003\u2003\u2002anzeigen"]},{"entry":[{},"\u2003\u2003\u2002senden\/schicken"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The \u201cSubstitution\u201d restriction models a participant in a semantic event where one term substitutes for another. One possible example, in French, is where a substitutes for pour as an adjunctive. An adjunctive is a type of adverbial indicating the circumstances of the action. Similarly, in Spanish, por is used as an adjunct, and para may be used with selected verbs.","Time may be treated as a restriction. In general, the Time restriction models time modifiers involving references to specific units of time or points in time that can be expressed as entities. For example, \u201cafter July 23\u201d and \u201cafter Thanksgiving\u201d can be modeled by Time restrictions. However, in some embodiments, phrases such as \u201cafter my computer boots up\u201d are not modeled by the Time restriction. Similarly, ranges of time, such as \u201cfrom 3:00 to 6:00\u201d and \u201cbetween morning and evening\u201d can be modeled by the Time restriction. However, \u201cwhile the defrag utility is running\u201d may not be modeled by the Time restriction. Time expressions involving embedded clausal content are handled in the Conditional restriction. TABLE 61 illustrates a syntax and implementation of time as a restriction within the LOM.",{"@attributes":{"id":"p-0224","num":"0226"},"tables":{"@attributes":{"id":"TABLE-US-00060","num":"00060"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 61"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Time Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Time"]},{"entry":[{},"{"]},{"entry":[{},"\u2003BaseTime \u2009startTime;"]},{"entry":[{},"\u2003BaseTime \u2009endTime;"]},{"entry":[{},"\u2003BaseTime \u2009pointorSpan;"]},{"entry":[{},"\u2003Duration \u2009\u2002duration;"]},{"entry":[{},"\u2003TimeLength recurrence;"]},{"entry":[{},"}"]},{"entry":[{},"\u2003abstract class BaseTime"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},"abstract class AbsoluteTime : BaseTime"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},"class NowAbsoluteTime : AbsoluteTime"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},"class Analyzed AbsoluteTime : AbsoluteTime"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003int","second;"]},{"entry":[{},"\u2003int","minute;"]},{"entry":[{},"\u2003int","hour;"]},{"entry":[{},"\u2003int","date;"]},{"entry":[{},"\u2003int","week;"]},{"entry":[{},"\u2003Weekday","weekday;"]},{"entry":[{},"\u2003Month","month;"]},{"entry":[{},"\u2003Int","year;"]},{"entry":[{},"\u2003Era","era;"]},{"entry":[{},"\u2003AmPm","ampm;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"enum Weekday"]},{"entry":[{},"{"]},{"entry":[{},"\u2003Unspecified,"]},{"entry":[{},"\u2003Monday,"]},{"entry":[{},"\u2003Tuesday,"]},{"entry":[{},"\u2003Wednesday,"]},{"entry":[{},"\u2003Thursday,"]},{"entry":[{},"\u2003Friday,"]},{"entry":[{},"\u2003Saturday,"]},{"entry":[{},"\u2003Sunday"]},{"entry":[{},"}"]},{"entry":[{},"enum Month"]},{"entry":[{},"{"]},{"entry":[{},"\u2003Unspecified,"]},{"entry":[{},"\u2003January,"]},{"entry":[{},"\u2003February,"]},{"entry":[{},"\u2003March,"]},{"entry":[{},"\u2003April,"]},{"entry":[{},"\u2003May,"]},{"entry":[{},"\u2003June,"]},{"entry":[{},"\u2003July,"]},{"entry":[{},"\u2003August,"]},{"entry":[{},"\u2003September,"]},{"entry":[{},"\u2003October,"]},{"entry":[{},"\u2003November,"]},{"entry":[{},"\u2003December"]},{"entry":[{},"}"]},{"entry":[{},"enum Era"]},{"entry":[{},"{"]},{"entry":[{},"\u2003Unspecified,"]},{"entry":[{},"\u2003\u2003BCE,"]},{"entry":[{},"\u2003CE,"]},{"entry":[{},"\u2003Heisei,"]},{"entry":[{},"\u2003Showa,"]},{"entry":[{},"\u2003Taisho,"]},{"entry":[{},"\u2003Meiji"]},{"entry":[{},"}"]},{"entry":[{},"enum AmPm"]},{"entry":[{},"{"]},{"entry":[{},"\u2003Unspecified,"]},{"entry":[{},"\u2003Am,"]},{"entry":[{},"\u2003Pm,"]},{"entry":[{},"\u2003TwentyFourHour"]},{"entry":[{},"}"]},{"entry":[{},"class UnanalyzedAbsoluteTime : AbsoluteTime"]},{"entry":[{},"{"]},{"entry":[{},"\u2003Denoter timeExpression;"]},{"entry":[{},"}"]},{"entry":[{},"\u2003abstract class RelativeTime : BaseTime"]},{"entry":[{},"\u2003{"]},{"entry":[{},"\u2003\u2003BaseTime relativeTo;"]},{"entry":[{},"\u2003}"]},{"entry":[{},"\u2003class offsetRelativeTime : RelativeTime"]},{"entry":[{},"\u2003{"]},{"entry":[{},"\u2003\u2003Offset offset;"]},{"entry":[{},"}"]},{"entry":[{},"class Offset"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003Direction","direction;"]},{"entry":[{},"\u2003TimeLength","timeLength;"]},{"entry":[{},"\u2003Granularity","granularity;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"enum Direction"]},{"entry":[{},"{"]},{"entry":[{},"\u2003Unspecified,"]},{"entry":[{},"\u2003Forwards,"]},{"entry":[{},"\u2003Backwards,"]},{"entry":[{},"}"]},{"entry":[{},"enum Granularity"]},{"entry":[{},"{"]},{"entry":[{},"\u2003None,"]},{"entry":[{},"\u2003Seconds,"]},{"entry":[{},"\u2003Minutes,"]},{"entry":[{},"\u2003Hours,"]},{"entry":[{},"\u2003Days,"]},{"entry":[{},"\u2003Weeks,"]},{"entry":[{},"\u2003Months,"]},{"entry":[{},"\u2003Years,"]},{"entry":[{},"\u2003Decades,"]},{"entry":[{},"\u2003Centuries,"]},{"entry":[{},"\u2003Millenia"]},{"entry":[{},"}"]},{"entry":[{},"class TimeLength"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003float","amount;"]},{"entry":[{},"\u2003TimeUnit","unit;"]},{"entry":[{},"\u2003Denoter","otherUnit;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"enum TimeUnit"]},{"entry":[{},"{"]},{"entry":[{},"\u2003Other,"]},{"entry":[{},"\u2003Minutes,"]},{"entry":[{},"\u2003Hours,"]},{"entry":[{},"\u2003Days,"]},{"entry":[{},"\u2003Weeks,"]},{"entry":[{},"\u2003Months,"]},{"entry":[{},"\u2003Years,"]},{"entry":[{},"\u2003Decades,"]},{"entry":[{},"\u2003Centuries,"]},{"entry":[{},"\u2003Millenia,"]},{"entry":[{},"\u2003Mondays,"]},{"entry":[{},"\u2003Tuesdays,"]},{"entry":[{},"\u2003Wednesdays,"]},{"entry":[{},"\u2003Thursdays,"]},{"entry":[{},"\u2003Fridays,"]},{"entry":[{},"\u2003Saturdays,"]},{"entry":[{},"\u2003Sundays,"]},{"entry":[{},"\u2003Januaries,"]},{"entry":[{},"\u2003Februaries,"]},{"entry":[{},"\u2003Marches,"]},{"entry":[{},"\u2003Aprils,"]},{"entry":[{},"\u2003Mays,"]},{"entry":[{},"\u2003Junes,"]},{"entry":[{},"\u2003Julys,"]},{"entry":[{},"\u2003Augusts,"]},{"entry":[{},"\u2003Septembers,"]},{"entry":[{},"\u2003Octobers,"]},{"entry":[{},"\u2003Novembers,"]},{"entry":[{},"\u2003Decembers"]},{"entry":[{},"}"]},{"entry":[{},"class SubsetRelativeTime : RelativeTime"]},{"entry":[{},"{"]},{"entry":[{},"\u2003AbsoluteTime subset;"]},{"entry":[{},"}"]},{"entry":[{},"class Duration"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003TimeLength","timeLength;"]},{"entry":[{},"\u2003TimeLengthQualifier","qualifier;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"enum TimeLengthQualifier"]},{"entry":[{},"{"]},{"entry":[{},"\u2003None,"]},{"entry":[{},"\u2003MoreThan,"]},{"entry":[{},"\u2003LessThan,"]},{"entry":[{},"\u2003AtLeast,"]},{"entry":[{},"\u2003AtMost,"]},{"entry":[{},"\u2003Precisely"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Time restriction makes use of one or more fields and a large number of auxiliary data types as needed. Fields may include start time, end time, \u201cpoint or span\u201d, duration, and recurrence. The start time field is set to a base time derived object expressing the starting point of a time span, such as \u201cfrom 5:00\u201d or \u201cafter tomorrow\u201d. If the start time field is null, then the time modifier modeled contains no overt expression of a starting point.","An end time field is set to a base time derived object expressing the ending point of a time span, such as \u201cto 6:00\u201d or \u201cuntil Friday\u201d. If the end time field is null, then the time modifier modeled contains no overt expression of an ending point.","A point or span field is set to a base time derived object expressing a solitary time point or span expressed in a single phrase, as opposed to time spans expressed by overtly naming starting and ending points. For example, with respect to \u201ctomorrow\u201d, the idea is that whether \u201ctomorrow\u201d is a single point on a time line or a 24-hour span of time depends on the context and the viewer's point of view. The LOM makes no attempt to disambiguate the term. If the point or span field is null, then the time modifier modeled contains no overt expression of a solitary time point or span.","A duration field may be set to a duration object expressing a length of a span of time without expressing the particular starting and ending points. For example, the phrase \u201cfor two hours\u201d can be modeled by the duration field. If null, then the time modifier modeled contains no overt expression of duration. The duration inherent in a time span such as \u201cfrom 4 pm to 6 pm\u201d is not expressed as a duration object. In this case, there would be non-null values for start time and end time, but duration would be null.","A recurrence field is set to a time length object expressing the interval between occurrences of a recurring event. For example, phrases, such as \u201cdaily\u201d, \u201cweekly\u201d, \u201cmonthly\u201d, \u201cthe first Monday of every month\u201d and so on, can be expressed as a time length object. If null, then the time modifier modeled is not interpreted as recurring.","In general, the Time restriction makes use of a large number of auxiliary data types. For example, BaseTime chains are objects derived from BaseTime, consisting of zero or more objects derived from RelativeTime and exactly one \u201croot\u201d object derived from AbsoluteTime. They are referred to as \u201cchains\u201d because each RelativeTime-derived object holds a reference to the next object in the chain, while the root AbsoluteTime-derived object holds no such reference.","AbsoluteTime derived types, such as NowAbsoluteTime, do not hold the reference to other objects in the chain. The NowAbsoluteTime derived type, for example represents the unanalyzable \u201cnow\u201d of an utterance's speech time. The LOM does not attempt to resolve \u201cnow\u201d into, for instance, 3:42:27 pm on Oct. 24, 2002.","AnalyzedAbsoluteTime is an AbsoluteTime derived-type that represents time point or spans that can be analyzed in terms of seconds, hours, days, years, and so on. For example, AnalyzedAbsoluteTime can be used to represent the time point \u201cnow\u201d as 3:45, 10 May 2003, Wednesday at 9:30 am.","UnanalyzedAbsoluteTime is an AbsoluteTime derived-type that represents expressions that known to be time points, but which cannot be analyzed in terms of atomic time units. For example, holidays, seasons of the year, and abstract temporal concepts tend to fall into this category. For example, \u201cThanksgiving\u201d, \u201cElection Day\u201d, \u201cmy birthday\u201d, \u201csummer\u201d, and \u201cthis evening\u201d are all phrases that are modeled as UnanalyzedAbsoluteTime.","There exist two RelativeTime-derived types: OffsetRelativeTime and SubsetRelativeTime. OffsetRelativeTime represents a positive or negative offset of a particular length of time from the referenced BaseTime-derived object. For example, the phrase \u201ctwo days ago\u201d is modeled as \u201c[2 days back] OFFSET FROM [now]\u201d.","SubsetRelativeTime is a RelativeTime-derived type that represents a time point or span interpreted as being a subset of the enclosing time span expressed by the reference BaseTime-derived object. For example, expressions of time dimensions such as \u201cat 5:00 on my birthday\u201d can be modeled as equivalent to \u201c[hour: 5 min: 0] SUBSET OF [\u201cmy birthday\u201d]\u201d. It is important to note that a time reference such as \u201c5:00 on Wednesday\u201d can be captured by a single AnalyzedAbsoluteTime object, because the phrase can be decomposed into time units.","In some embodiments, it may be desirable to have more than one pair of StartTime and EndTime fields. For example, in order to capture expressions such as \u201cfrom Monday to Friday from 4:00 to 5:00\u201d, two pairs of start and end time fields may be desirable in order to capture both ranges. In fact, for the above-expression, it may be desirable to have Time entities. Additionally, the parallels between the following expressions suggest that Time entities might be desirable.\n\n","Another restriction is the Topic Restriction. With respect to Entity objects, the Topic restriction models arguments or modifiers that express what an entity is about or what it concerns or pertains to. A Topic restriction associated with a Frame models verbal arguments that express the subject or topic of the event. In general, the Topic restriction has a Slot set to the Entity or Frame that models the topic or subject. Alternatively, the Slot can take a string. Table 62 illustrates the syntax of a Topic restriction according to an embodiment of the present invention.",{"@attributes":{"id":"p-0238","num":"0242"},"tables":{"@attributes":{"id":"TABLE-US-00061","num":"00061"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 62"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Topic Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Topic<topic := Entity>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},"restriction Topic<topic := Frame>"]},{"entry":[{},"{"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In some instances, it may be desirable to label the Topic restriction with a different name. Specifically, given the severe overloading (at least within the field of Linguistics) of the term \u201ctopic\u201d, it may be desirable to use other labels for this restriction. Some alternative labels might include, for example, \u201cConcerning\u201d, \u201cRegarding\u201d, \u201cAbout\u201d, \u201cSubject\u201d, \u201cTheme\u201d, and so on. Table 63 provides some exemplary Terms\/Phrases that can be modeled by the Topic restriction according to an embodiment of the present invention.",{"@attributes":{"id":"p-0240","num":"0244"},"tables":{"@attributes":{"id":"TABLE-US-00062","num":"00062"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 63"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Terms\/Phrases Modeled by Topic Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003\u2002about, on"]},{"entry":[{},"\u2003\u2003\u2002concerning ..., regarding ..."]},{"entry":[{},"\u2003\u2003\u2002remind Sandy "]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003\u2002\u00fcber"]},{"entry":[{},"\u2003\u2003\u2002Zeige die Mail \u00fcber den Hausbau."]},{"entry":[{},"\u2003\u2003\u2002[bez\u00fcglich\/bezgl.] +Genetive case"]},{"entry":[{},"\u2003\u2003\u2002Zeige Mail bzgl. des Hausbaus."]},{"entry":[{},"JAPANESE"]},{"entry":[{},"\u2003\u2003\u2002 NP"]},{"entry":[{},"\u2003\u2003\u2002 VP"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A Quantifier restriction models noun phrase quantifiers and partitive expressions such as two-thirds of. In general, the Quantifier restriction may include type or percentage fields. The type field may be a percentage, which is stored as a floating-point number, typically (but not necessarily) between zero and one. For example, the percentage type models one half of, 75% of, 200% increase, and the like. The type field may also model quantifiers that do not correspond to exact percentages. The terms \u201call\u201d and \u201cnone\u201d are enumerated as different \u201cprivileged\u201d values that do not fall into this \u201cother\u201d type. The percentage field holds the percentage corresponding to the meaning of the quantifier if the type has a value of Percentage. Otherwise, the percentage field is ignored. Table 64 illustrates the syntax for the Quantifier restriction and its associated enumerations.",{"@attributes":{"id":"p-0242","num":"0246"},"tables":{"@attributes":{"id":"TABLE-US-00063","num":"00063"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 64"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Quantifier Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"restriction Quantifier"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003QuantifierType type;"]},{"entry":[{},"\u2003\u2003Float \u2003\u2003percentage;"]},{"entry":[{},"}"]},{"entry":[{},"enum QuantifierType"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003All,"]},{"entry":[{},"\u2003\u2003None,"]},{"entry":[{},"\u2003\u2003Some,"]},{"entry":[{},"\u2003\u2003Most,"]},{"entry":[{},"\u2003\u2003Many,"]},{"entry":[{},"\u2003\u2003Few,"]},{"entry":[{},"\u2003\u2003Percentage"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0243","num":"0247"},"tables":{"@attributes":{"id":"TABLE-US-00064","num":"00064"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 65"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Terms\/Phrases Modeled by Quantifier Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003\u2003\u2002All: all ((of) the), every, each (of the)"]},{"entry":[{},"\u2003\u2003\u2002None: no, none (of the)"]},{"entry":[{},"\u2003\u2003\u2002Some: some (of the)"]},{"entry":[{},"\u2003\u2003\u2002Most: most (of the), the majority of"]},{"entry":[{},"\u2003\u2003\u2002Many: many (of the)"]},{"entry":[{},"\u2003\u2003\u2002Few: few (of the), not many (of the)"]},{"entry":[{},"\u2003\u2003\u2002Percentage: a half of, \u2153 of, 40% of"]},{"entry":[{},"GERMAN"]},{"entry":[{},"\u2003\u2003\u2002All: alle (Gen), jede\/r\/s"]},{"entry":[{},"\u2003\u2003\u2002None: keine\/r\/s (Gen)"]},{"entry":[{},"\u2003\u2003\u2002Some: manche\/r\/s (Gen)"]},{"entry":[{},"\u2003\u2003\u2002Most: die meisten (Gen), der Gro\u03b2teil (Gen)"]},{"entry":[{},"\u2003\u2003\u2002Many: viele (Gen)"]},{"entry":[{},"\u2003\u2003\u2002Few: wenige (Gen)"]},{"entry":[{},"\u2003\u2003\u2002Percentage: die H\u00e4lfte von(Gen), \u2153 von\/(Gen),"]},{"entry":[{},"\u2003\u2003\u200280% von\/(Gen)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":[{},{}]},"The following discussion relates to one aspect of a possible implementation of an LOM object producer (analysis engine), which is referred to as a Lexical Semantic Structure (LSS). This particular aspect was developed in conjunction with the LOM, but numerous other implementations may be utilized to produce LOM objects. The LSS was also used in the design process for the types of the LOM.","The Lexical Semantic Structure (LSS) is based on generalizations about cross-linguistic behavior and child-language acquisition for normalization of natural language input across languages and across linguistic categories. The LSS provides a methodology for mapping elements of a natural language into lexical semantic classes. One such use might include mapping lexical semantic structure representative of the natural language input (linguistic utterance) into the linguistic object model (LOM).","The LSS includes a set of lexical semantic categories and a methodology for assigning natural language input to one or more of the set of lexical semantic categories. Each category of the set of lexical semantic categories implies a mapping of elements of a natural language input to an inventory of syntactic categories and of semantic roles. More specifically, each category implies a mapping of one or more syntactic categories to one or more semantic roles. As used herein, the term \u201csyntactic categories\u201d refer to structural elements of a sentence (for example, subjects, objects, prepositional phrases, clausal complements, modifiers, and the like). The phrase \u201csemantic roles\u201d refers to an identification of a function of a particular syntactic category within a particular utterance\u2014for example, subjects are generally assigned the role \u201cwho\u201d (agent, actor, doer, or cause of the action, and the like), direct objects are \u201cwhat\u201d (patient, affected, done-to, or effect of the action, and the like), and modifiers can have a variety of roles (source, goal, time, and the like). It should be understood that the examples provided above are provided for illustrative purposes, and are not intended to be exhaustive. Finally, as used herein, the term \u201cnormalize\u201d or \u201cnormalization\u201d refers to a process of abstracting a semantic role away from a particular syntactic representation.","The inventory and semantics derive from cross-linguistic behavior and child-language acquisition, and are based on the generalization that lexical semantic features of natural languages share certain properties. In terms of linguistic anchoring and semantic detail, the LSS is situated between artificial intelligence systems that move from language to semantic inference based on world knowledge, and more fine-grained lexical analyses frameworks that model distinctions between apparent synonyms. In other words, all languages have linguistic structures that can be mapped as in the default. Additionally, each natural language has numerous non-default mappings of syntactic categories to semantic roles. These non-default classes with more causally distant semantic roles than subject and object are rarer.","The default lexical semantic structure models a transitive sentence, such as John broke the glass, as above: by categorizing the subject of the sentence as \u201cWho\u201d and the object as \u201cWhat\u201d. Modifiers are identified in an order (or morphological case marking) representative of the temporal unfolding of the causal chain. In other words, modifiers are derived from semantic roles played by additional case marking (indirect object) and adverbial modifiers such as prepositional phrases. In the phrase John broke the glass for me, John is the subject; the glass is the object; and the phrase \u201cfor me\u201d is marked as an indirect object nearer to the object of the sentence.","The default intransitive sentence usually include an agent or \u201cWho\u201d. For example, the phase John ran includes an agent \u201cJohn\u201d. Less commonly, the single argument is a Patient. For example, in the phase The glass broke, the phrase \u201cthe glass\u201d is affected, and the sentence can be modeled in the same manner as if the original sentence were [Something] broke the glass.","For a semantic role to be included in the LSS inventory, it must appear as a syntactic category in some language, and apply as an argument or modifier across a range of noun and verb classes. The roles therefore have both linguistic anchoring and semantic generality. For example, the phrase \u201cthe office\u201d is a Source in each of the following examples:\n\n","The LSS is a set of lexical semantic categories and a methodology for associating natural language input to one or more categories of the set of lexical semantic categories. The methodology includes a collection of procedures for associating content of the natural language to the set of lexical semantic categories and rules for applying the collection of procedures to the natural language input. As used herein, the term \u201cmethodology\u201d refers to a collection of procedures for associating content of the natural language input to the set of lexical semantic categories. Each lexical semantic category includes one or more syntactic categories, one or more roles, and a mapping between the one or more syntactic categories and the associated one or more roles those arguments play within the utterance. Additionally, \u201cmethodology\u201d refers to rules for applying the collection of procedures to the natural language input. In some instances, \u201cmethodology\u201d may include heuristics for determining when different stages of mapping of the content of natural language input are complete. The term \u201cmethodology\u201d includes a collection of techniques, rules, and procedures adopted for associating and\/or normalizing content of a natural language input to one or more linguistic categories of the set of linguistic categories.","As a normalization structure, the LSS assists in identifying semantic roles across syntactic categories (subject\/object of verb, object of prepositional phrases modifying verb, and so on). Moreover, the LSS makes it possible to associate syntactic categories with semantic roles across languages. This normalization is achieved by identifying arguments of classes of syntactic categories, as well as their semantics, and by associating the identified arguments to the appropriate lexical semantic category. The lexical semantic structure can then be abstracted from a particular syntactic representation.","In combination with the Linguistic Object Model and the Semantic Programming Language (and associated user schema), the semantic ambiguity in many linguistic categories is reduced. For example, the preposition \u201cfor\u201d identifies Beneficiaries of an action (I bought a dress for my daughter), Purposes (I go to California for the beaches), Time Extents (I went to school for 20 years), Goals (present for my daughter), and so on. However, within a given application, only a limited set of possibilities is relevant to the context. Consequently, much of the semantic ambiguity is eliminated by context.",{"@attributes":{"id":"p-0254","num":"0262"},"figref":"FIG. 11","b":["1100","1100","1102","1104","1106","1102","1106","1108","1110","1112","1106"]},"Generally, the LSS identifies groups of frames and entities that share syntactic and semantic frames, which differ from the default patterns in one of the supported languages. In general, Lexical Semantics is a subfield of linguistics that deals mainly with word meaning. Lexical semantic structure (LSS) theory relates to the relationship of word meaning to sentence meaning and syntax. Additionally, LSS theory addresses the differences and similarities in lexical semantic structure between different languages.","In general, Frames have two default patterns: a transitive default pattern and an intransitive default pattern. The transitive default pattern links the Who slot to the subject position and the What slot to object position. By contrast, the intransitive default pattern lacks the What slot and object position. Both are illustrated in the following examples headed by a verb type.\n\n","In another non-default linking type, ObliqueAsDefault, classes of verbs express a Who or What argument as an oblique argument. For example, reciprocals in ENGLISH express an additional Who or What participant as the object of an Accompaniment restriction.\n\n","Many verbs have syntactically oblique arguments (marked by idiosyncratic prepositions) that seem to associate semantically with the What slot. That is, if the verb is intransitive, and the prepositional phrase does not fall semantically into one of the restriction categories, and the phrase can be paraphrased (or translated into another language) as a direct object, it may be treated as linking to the What slot. Several examples are provided to illustrate phrases that trigger the Oblique as default slot in Table 66.",{"@attributes":{"id":"p-0259","num":"0273"},"tables":{"@attributes":{"id":"TABLE-US-00065","num":"00065"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 66"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"ObliqueasDefault."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Juan conf\u00eda en Pedro ->\u2032John trusts Peter\u2032"]},{"entry":[{},"I'm waiting for MSN8 -> I'm awaiting MSN8."]},{"entry":[{},"Look  on the internet -> Find  on"]},{"entry":[{},"the internet."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Classes of verbs can vary from the default by having slots in addition to (or instead of) Who and What in the frame. Moreover, some classes of verbs link syntactic subjects or objects to restrictions in the LOM rather than to the Who or What slots. In other words, either or both the default slots may be replaced by a restriction.","SubjectAsRestriction patterns link subjects to a restriction rather than to the What slot. The verb \u201creceive\u201d, for example, takes a Goal as subject.\n\n","Similarly, the ObjectAsRestriction pattern projects frame in which the syntactic object is a Goal rather than a What. For example, the verb \u201center\u201d maps t a frame in which the syntactic object is a Goal or location, rather than a what.\n\n","Frames can also vary from the default in semantically entailing one or more additional restrictions as obliques. AdditionalRestriction patterns link additional restrictions as oblique arguments or clausal complements, in addition to the default slots. For example, change of state verbs can take an additional Goal (as with the verb \u201creset\u201d), or can take both a Source and a Goal (such as with the verb \u201cchange\u201d), as shown below.\n\n","Additionally, Frames can vary from the default in various ways, such as by combining one or more of the above non-default linking types (Unaccusative, SlotAsRestriction [subject or object], and AdditionalRestriction). Moreover, verbs can project multiple frames, which can be construed as taking different senses. The default frame holds for one sense of \u201center\u201d, and SlotAsRestriction for another. The verb \u201center\u201d may be context sensitive.\n\n","For some verbs (such as \u201cexpand\u201d, \u201cincrease\u201d, and so on), only the unaccusative pattern may be valid for the intransitive. For other verbs, unaccusative pattern linking is an additional option.","Table 67 illustrates some exemplary phrases\/terms that can be modeled by LSS Frames with additional restrictions. In each example, the restriction replaces a default argument, or adds an argument to a frame. In principle, each restriction could appear in the subject position, in the object position, or as an additional oblique argument. A few restrictions add a participant to Who and What slots, as noted below. Related Noun Phrase (NP) frames are also given.",{"@attributes":{"id":"p-0267","num":"0292"},"tables":{"@attributes":{"id":"TABLE-US-00066","num":"00066"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 67"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Accompaniment Modeled by LSS Frames with Additional Restrictions"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Accompaniment"]},{"entry":[{},"\u2003\u2003\u2002In subject position"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003Meet: My daughter and I met"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003Chat: My friend and I chatted."]},{"entry":[{},"\u2003\u2003\u2002In object position"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003Accompany: My daughter accompanied "]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003to Minneapolis."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In English, the additional restriction is typically headed by the pronoun \u201cwith\u201d or perhaps \u201cagainst\u201d. A variety of verb subclasses select this pronoun or pronoun phrase on the relevant meaning. A sample is given below in Table 68.",{"@attributes":{"id":"p-0269","num":"0294"},"tables":{"@attributes":{"id":"TABLE-US-00067","num":"00067"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 68"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"LSS Frames with Additional Restrictions"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Abscond: The Enron executives absconded "]},{"entry":[{},{"u":"money"}]},{"entry":[{},"Accommodate: indulge"]},{"entry":[{},"Accredit: accredit, credit"]},{"entry":[{},"Ache: ache, burn, itch"]},{"entry":[{},"Arrange"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In English, the Accompaniment restrictions can also add participants to the Who and What slots. Although this is true for frames in which this restriction is a modifier, it is especially common with \u201creciprocal\u201d verbs. Table 69 provides some examples of Oblique as a default slot.",{"@attributes":{"id":"p-0271","num":"0296"},"tables":{"@attributes":{"id":"TABLE-US-00068","num":"00068"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 69"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Oblique as a Default Slot."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Who"]},{"entry":[{},"\u2003Subject reciprocals"]},{"entry":[{},"\u2003Chat: I IMed with Mary ~ Mary and I IMed;"]},{"entry":[{},"\u2003chat, discuss, talk, visit"]},{"entry":[{},"\u2003Agree"]},{"entry":[{},"\u2003Alternate"]},{"entry":[{},"\u2003Unaccusatives: The file merged (together)"]},{"entry":[{},"\u2003with the data ~ The file and the data"]},{"entry":[{},"\u2003merged (together)."]},{"entry":[{},"What"]},{"entry":[{},"\u2003Object reciprocals:"]},{"entry":[{},"\u2003Merge: I merged the files with the data, I"]},{"entry":[{},"\u2003merged the data and the files"]},{"entry":[{},"\u2003Acquaint: I familiarized them with the"]},{"entry":[{},"\u2003topic; acquaint"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In English, the additional restriction is headed by the PP \u201cfor\u201d with respect to Allocation. A variety of verb subclasses take this PP on the relevant meaning. A sample is given below.\n\n","A secondary predicate with respect to the AsBeing restriction can be utilized as an additional restriction. Some exemplary phrases are provided in Table 70 below.",{"@attributes":{"id":"p-0274","num":"0306"},"tables":{"@attributes":{"id":"TABLE-US-00069","num":"00069"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 70"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Secondary Predicate of the AsBeing"},{"entry":"Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Noun Phrase"]},{"entry":[{},"\u2003Make me "]},{"entry":[{},"Adjunctive Phrase"]},{"entry":[{},"\u2003mark messages "]},{"entry":[{},"\u2003judge the data "]},{"entry":[{},"\u2003mark that completed"]},{"entry":[{},"\u2003mark low priority"]},{"entry":[{},"\u2003judge the data correct"]},{"entry":[{},"Pronoun Phrase (as) variant"]},{"entry":[{},"\u2003mark task one "]},{"entry":[{},"\u2003Mark messages "]},{"entry":[{},"\u2003mark that "]},{"entry":[{},"\u2003mark "]},{"entry":[{},"\u2003judge the data "]},{"entry":[{},"\u2003Additional restriction"]},{"entry":[{},"\u2003Show my status "]},{"entry":[{},"\u2003use "]},{"entry":[{},"\u2003save "]},{"entry":[{},"\u2003Log in "]},{"entry":[{},"\u2003put this message "]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Additional restrictions with respect to the Beneficiary restriction are shown in Table 71 below.",{"@attributes":{"id":"p-0276","num":"0308"},"tables":{"@attributes":{"id":"TABLE-US-00070","num":"00070"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 71"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Beneficiary with Additional Restrictions."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"In object position"]},{"entry":[{},"\u2003Benefit: Relaxed stock option laws"]},{"entry":[{},"\u2003benefited Enron; benefit, gain, profit"]},{"entry":[{},"\u2003Unaccusative: Enron benefited from relaxed"]},{"entry":[{},"\u2003stock option laws"]},{"entry":[{},"In indirect object position"]},{"entry":[{},"\u2003Benefit: Relaxed stock option laws"]},{"entry":[{},"\u2003benefited Enron; benefit, gain, profit"]},{"entry":[{},"\u2003Unaccusative: Enron benefited from relaxed"]},{"entry":[{},"\u2003stock option laws"]},{"entry":[{},"Additional restriction"]},{"entry":[{},"\u2003PP-for and Indirect Object"]},{"entry":[{},"\u2003Build: arrange, assemble, bake"]},{"entry":[{},"\u2003Create: design, dig, mint"]},{"entry":[{},"\u2003Prepare: bake, blend, boil, clean, clear,"]},{"entry":[{},"\u2003cook, fix, fry..."]},{"entry":[{},"\u2003Performance: dance, draw, ding, play,"]},{"entry":[{},"\u2003recite..."]},{"entry":[{},"\u2003Get: book, buy, call, cash, catch"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Some of the restriction types may be non-applicable for verb frames. However, the additional restrictions may still be invoked, such as where a prepositional phrases introduces a comparison set.","Direction restrictions may require additional restrictions such as with the phrase \u201cmove the cursor up (the page)\u201d. Additionally, where the directional element is conflated in the verb itself (such as \u201cthe stocks rose\/fell\/advanced\/retreated\u201d or \u201crotate the picture\u201d), additional restrictions may be required.","An LSS with an additional restriction can be understood from the following phrases, with the example restriction contained in the subject position.\n\n","The extent restriction typically falls within the object position or the additional restriction position. It is possible that all manner of motion type verbs may take an Extent object (e.g. \u201cwalk the mall\u201d, \u201ccrawl the web\u201d, \u201crun the marathon\u201d and so on). Example phrases that can be modeled by the Extent restriction are shown in Table 72.",{"@attributes":{"id":"p-0281","num":"0315"},"tables":{"@attributes":{"id":"TABLE-US-00071","num":"00071"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 72"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Examples of Phrases Modeled by Extent"},{"entry":"Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"In object position"]},{"entry":[{},"\u2003The crawler traverses ."]},{"entry":[{},"\u2003The data in this spreadsheet spans "]},{"entry":[{},"\u2003."]},{"entry":[{},"Additional restriction"]},{"entry":[{},"\u2003I want a border ."]},{"entry":[{},"\u2003Maintain a uniform appearance "]},{"entry":[{},"\u2003."]},{"entry":[{},"\u2003Run  before the review."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A Goal restriction may require additional restrictions, particularly with respect to changing between classes or states. The scope of prepositional phrases that behave as Goals idiosyncratically with some verbs may vary according to implementation. Examples of a prepositional phrase that behave idiosyncratically as a Goal are \u201csave as file.txt\u201d (\u201csave to file.txt\u201d) and \u201creschedule for 5:00\u201d (\u201creschedule to 5:00\u201d).","Some verbs may need to take idiosyncratic goals, either in Bitrecs (if the Goal behavior is due to a single verb) or in LSS classes (if a class of items takes goals idiosyncratically). An additional goal may simply be added, and patterns can be pulled out from the lexicon into classes to address them as they are discovered.","The additional restrictions associated with location can be modeled as illustrated in Table 73 below.",{"@attributes":{"id":"p-0285","num":"0319"},"tables":{"@attributes":{"id":"TABLE-US-00072","num":"00072"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 73"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Location."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Keep, Stand, CausedGoalOfMotion"]},{"entry":[{},"In subject position"]},{"entry":[{},"\u2003Locative alternation (Levin 2.3): The"]},{"entry":[{},"\u2003garden swarmed with bees (cf. Bees swarmed"]},{"entry":[{},"\u2003in the garden)"]},{"entry":[{},"In object position"]},{"entry":[{},"\u2003Search: Canvass , Search"]},{"entry":[{},"\u2003"]},{"entry":[{},"Additional restriction"]},{"entry":[{},"\u2003Transitive:"]},{"entry":[{},"\u2003\u2003Keep: Keep the file "]},{"entry":[{},"\u2003\u2003(hold, keep, locate, store)"]},{"entry":[{},"\u2003\u2003Get: Find a book "]},{"entry":[{},"\u2003Intransitive"]},{"entry":[{},"\u2003\u2003Stay: Stand here, Stay home"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Means restriction may also be modeled with additional restrictions as shown in Table 74.",{"@attributes":{"id":"p-0287","num":"0321"},"tables":{"@attributes":{"id":"TABLE-US-00073","num":"00073"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 74"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Means."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Instrument Subject: The knife cut the cake"]},{"entry":[{},"Additional restriction"]},{"entry":[{},"\u2003Adorn: adorn, festoon, decorate"]},{"entry":[{},"\u2003Adulterate: adulterate, alloy, pollute"]},{"entry":[{},"\u2003Anoint"]},{"entry":[{},"\u2003Afflict"]},{"entry":[{},"\u2003Aid: aid, assist, help"]},{"entry":[{},"\u2003Analogize"]},{"entry":[{},"\u2003Anoint"]},{"entry":[{},"\u2003Answer"]},{"entry":[{},"\u2003Arm"]},{"entry":[{},"\u2003Assail: attack,"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The SortOrder restriction may be modeled by additional restrictions as shown in Table 75.",{"@attributes":{"id":"p-0289","num":"0323"},"tables":{"@attributes":{"id":"TABLE-US-00074","num":"00074"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 75"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Sort Order."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003Arrange alphabetically"]},{"entry":[{},"\u2003Additional restriction"]},{"entry":[{},"\u2003\u2003Arrange: sort alphabetically,"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003par ordre alphab\u00e9tique inverse"]},{"entry":[{},"\u2003du plus petit au plus grand [literally:"]},{"entry":[{},"\u2003from the smallest to the biggest]"]},{"entry":[{},"\u2003du plus grand au plus petit [literally:"]},{"entry":[{},"\u2003from the biggest to the smallest]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Similarly, the structure criteria restriction may be modeled by additional restrictions as shown in Table 76.",{"@attributes":{"id":"p-0291","num":"0325"},"tables":{"@attributes":{"id":"TABLE-US-00075","num":"00075"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 76"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"StructureCriteria"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ENGLISH"]},{"entry":[{},"\u2003Arrange by name (cf. SortOrder above), in"]},{"entry":[{},"\u2003date order"]},{"entry":[{},"FRENCH"]},{"entry":[{},"\u2003{cat\u00e9goriser classer classifier filtrer"]},{"entry":[{},"\u2003grouper indexer ordonner regrouper"]},{"entry":[{},"\u2003r\u00e9arranger r\u00e9indexer trier}"]},{"entry":[{},"\u2003Classe les messages {"]},{"entry":[{},"\u2003, }"]},{"entry":[{},"\u2003\u2018Sort the messages {in alphabetical order,"]},{"entry":[{},"\u2003alphabetically}\u2019"]},{"entry":[{},"Regroupe mon courrier "]},{"entry":[{},"\u2003\u2018Group\/cluster my mail by date"]},{"entry":[{},"\u2003Trie les fichiers "]},{"entry":[{},"\u2003\u2018Sort the files by size\/as a function of"]},{"entry":[{},"\u2003the size\u2019"]},{"entry":[{},"\u2003Indexe la table "]},{"entry":[{},"\u2003\u2018Index the table on the name\u2019"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In general, classes that take a Time argument could be treated as classes that take a Measure restriction of type Time, although they can have the full time expression realized. For example, the following phrase can be modeled as a class that takes a time argument or a measure restriction of type Time: \u201cI spent at least an hour from 9 to 5 every day for weeks looking for a piano.\u201d","Table 77 illustrates some exemplary Topic phrases that may be modeled with additional restrictions.",{"@attributes":{"id":"p-0294","num":"0328"},"tables":{"@attributes":{"id":"TABLE-US-00076","num":"00076"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 77"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Topic."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003Spact: talk about X, talk X, remind X that"]},{"entry":[{},"\u2003Y, book on Martin Luther"]},{"entry":[{},"In subject position"]},{"entry":[{},"\u2003 don't concern you; concern"]},{"entry":[{},"\u2003In object position"]},{"entry":[{},"\u2003Discuss: The article addresses "]},{"entry":[{},"\u2003; address, cover, discuss"]},{"entry":[{},"Additional restriction"]},{"entry":[{},"\u2003PP[{about, concerning, on, regarding}]"]},{"entry":[{},"\u2003takes either NP objects (about cats) or"]},{"entry":[{},"\u2003clausal objects (about John coming to"]},{"entry":[{},"\u2003Seattle)"]},{"entry":[{},"\u2003PRPRTCL"]},{"entry":[{},"\u2003The object of address could also be the"]},{"entry":[{},"\u2003addressee, rather than the topic."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"This section provides a place to collect data on the types of entities supported as SPL libraries, such as Person Entities, Place Entities, and LSS Entities. Additionally, the SPL libraries may include classes of noun phrases (LSS entities) corresponding to each LSS frame class, particularly those that take additional restrictions.","The SPL libraries may also include Restriction classes. For each restriction, there is a (small) set of noun phrases that could be used to name the restriction. In SPL, these can be identified in a small set of structures as signaling the presence of the restriction slot filler. For example, when topic is the subject or object or the copula, the Topic restriction slot filler (in bold) is in the complementary position.\n\n","E1. Architecture.","SPL is a specialized programming language and with an accompanying runtime platform that allows application developers to build rich, natural language (NL) enabled, command and control (C&C) functionality for their application. (See Appendix I for a discussion on command and control scenarios that SPL can enable and the kind of commands that can be enabled, for example, for Outlook.)","SPL is an authoring solution to facilitate the derivation of meaning from utterances and to facilitate action based on that meaning. SPL is designed to scale to complex utterances without the developer having to bear the burden of that scalability. It is SPL's goal to facilitate authorship for both speech and text input without adding a lot of extra burden on the developer. Specifically, it is desirable to provide a NL authoring tool that allows developers with little or no knowledge of linguistic\/semantic analysis to develop NL applications. In general, the SPL is designed to minimize differences between authoring for speech input and authoring for text input. However, due to speech recognition problems, some differences will likely have to be surfaced to the developer.","While the NL application can be written to interface with the analysis engines according to the LOM without the SPL, such programming is difficult, requires greater knowledge of linguistics by the developer, and more housekeeping with respect to lexical structures. In the end, the SPL facilitates development by abstracting specific elements so the developer can focus on the application's functionality, rather than the analysis component.","This is the whole point behind specialized programming languages, which free the developer from having to do the housekeeping and plumbing so he\/she can concentrate on the task at hand (in this case, that's NL enabling applications). SPL allows the developer to express the fundamentals of the programming space in a natural and intuitive way.","In general, the semantics of natural language are complex and inherently ambiguous. Humans employ a great deal of world knowledge and context to understand and disambiguate meaning. In fact, humans do this understanding and disambiguation so naturally that we are often not consciously aware of the process.","For an application to be able to act on the meaning of an utterance, it not only has to decide what the semantics of an utterance mean to the application, but it must also have the authority to disambiguate meaning according to its own knowledge and context. Therefore, SPL provides the developer with the ability to reason about the application domain and to have that reasoning affect the semantic analysis in a deep and meaningful way. This deep integration with application-specific reasoning is intrinsically built into the SPL.","At a high level, in one embodiment, SPL's approach is to have the developer author against only the semantics of an utterance, not the syntax. Back door ways to access the syntax may be provided in some implementations. This is achieved through the LOM (discussed above in Section D). Briefly, the LOM models the semantics of an utterance (what is said) in a domain independent way. In many ways, the SPL programming model embodies this semantic model.","Through the resolution of an utterance against a SPL program, SPL builds the strongly typed, domain-dependent model of what is said that is bound to entities in the application. It is also worthy to note that, because the semantics are separated from the syntax, multilingual support is much easier to achieve.","SPL consists of two main pieces. The first is a language that is strongly-typed, procedural, event-driven, and object-oriented. In one embodiment, the SPL is based on C# (an object-oriented and type-safe programming language for building enterprise-scale applications) very familiar to mainstream developers today. In an alternative embodiment, the SPL is written entirely in C# through the use of attributes. In designing SPL, it was important that SPL not be a new approach to programming. Developers' existing knowledge and experience are leveraged, not invalidated. The second piece is a runtime that builds the domain-dependent model of what was said, in accordance with SPL's language semantics.","SPL enables developers to bind semantic meaning of an utterance with an existing application interface or object model, without impacting the existing application. While SPL does allow developers to write code that reasons about domain knowledge in place, the developer is also free to write that code in any programming language, including any Microsoft\u00ae .NET\u00ae programming language since SPL compiles to the .Net Common Language Runtime.","SPL's basic constructs are entities (nouns), frames (verbs), restrictions (relationships between entities), commands (application task entry points), NamedEntities and Denoters. These are the main first-class types of SPL. The language is command-centric by design, since it is designed for Natural Language-enabling Command and Control (C&C) functionality in applications.","Before discussing the SPL framework in detail, a simple SPL example is detailed in order to provide a mental picture for understanding the rest of the disclosure in context. Table 78 illustrates the SPL code that handles the \u201csend email to Bob\u201d command scenario. This command scenario will be revisited multiple times through the remainder of the disclosure.","Starting at the highest level with the \u2018command\u2019, it should be understood that the SPL code is written to the LOM model previously introduced (see Section D). Commands are authored against frames. Frames are objects that usually represent verbs. Basic frames, those that represent one verb, are supplied by the analysis system. A developer may also define his or her own verb frames, a feature discussed in greater detail in a section detailing Frames.",{"@attributes":{"id":"p-0310","num":"0348"},"tables":{"@attributes":{"id":"TABLE-US-00077","num":"00077"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 78"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"\u201cSend Mail To Bob\u201d SPL Code."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\/\/Bolded tokens are keywords or reserved"]},{"entry":[{},"\u2003\u2003\/\/words."]},{"entry":[{},{"b":["command ","uses"]}]},{"entry":[{},"MySendFrameDoneTo.what MailEntity"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\/\/ begin resolution clause,"]},{"entry":[{},"\/\/invoked before resolution begins"]},{"entry":[{},{"b":"begin"}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003\/\/ Do application specific initialization"]},{"entry":[{},"\u2003\u2003\/\/or fail if we don't want further"]},{"entry":[{},"\u2003\u2003\/\/resolution against this command"]},{"entry":[{},"\u2003\u2003\/\/(eg the application is not in the"]},{"entry":[{},"\u2003\u2003\/\/ correct context\/state)."]},{"entry":[{},{"b":"}"}]},{"entry":[{},"\/\/ success resolution clause, invoked"]},{"entry":[{},"\/\/when resolution of the utterance against"]},{"entry":[{},"\/\/this object succeeds."]},{"entry":[{},{"b":"success"}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\/\/ Do application specific task execution"]},{"entry":[{},"\/\/ (generate url or xml, run the command,"]},{"entry":[{},"\/\/pop up dialogs, and so on)"]},{"entry":[{},{"b":"}"}]},{"entry":[{},"\/\/ failed resolution clause, invoked when"]},{"entry":[{},"\/\/ resolution against this object failed"]},{"entry":[{},{"b":"failure"}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\/\/ Do task specific cleanup (free resources,"]},{"entry":[{},"\/\/pop up dialogs, and so on)"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The SendMailCommand defines an application task entry point that uses the MySendFrame where the object being sent (the \u2018Doneto.what\u2019 slot) is a MailEntity. The command encapsulates the task, allows the developer to perform specific initialization and cleanup, and provides the platform with an entry point into the application.","Table 79 illustrates the SPL code for MySendFrame.",{"@attributes":{"id":"p-0313","num":"0351"},"tables":{"@attributes":{"id":"TABLE-US-00078","num":"00078"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 79"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"MySendFrame."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["Frame ",": ","<",":="]}]},{"entry":[{},"MailEntity"]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"on resolve"}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"begin"}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\/\/ do app specific initialization or fail"]},{"entry":[{},{"b":"}"}]},{"entry":[{},"\/\/RecipientEntity is defined somewhere in"]},{"entry":[{},"\/\/the program"]},{"entry":[{},{"b":["with restriction ","<",":= ",">"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\/\/Code is only executed if there is a valid Goal"]},{"entry":[{},"\/\/ relationship between MySendFrame and"]},{"entry":[{},"\/\/ RecipientEntity in the utterance."]},{"entry":[{},"\/\/"]},{"entry":[{},"\/\/ Do application specific reasoning to bind to"]},{"entry":[{},"\/\/ application objects, set state, or reject the"]},{"entry":[{},"\/\/ resolution."]},{"entry":[{},{"b":"}"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"The semantics of sending \u2018to Bob\u2019 are captured by the Goal restriction (provided by the platform, e.g. the SPL based on the LOM), which is linked to \u2018send\u2019 via the \u2018with restriction\u2019 clause. In addition to this linking, the entity that is being sent \u201cto Bob\u201d is also grounded to a RecipientEntity.","As previously discussed, Restrictions are typed semantic relationships, usually between entities. The SPL platform provides a predefined base-set of relationships. Developers can subtype the base-set of restrictions to create their own relationships. Some examples of predefined restrictions are Location (\u201cmail in Inbox\u201d), Time (\u201cdelete after 3 days\u201d), Possessor (\u201cBob's book\u201d) and Topic (\u201cmail about cats\u201d).","One important thing about restrictions is that the variations in syntax are normalized by the semantic platform. For example, Topic can be expressed in multiple ways semantically: \u201cmail about cats\u201d, \u201cmail with cats as the subject\u201d, \u201cmail regarding cats\u201d, \u201cmail with subject cats\u201d, and the like. Different languages express the semantics of Topic differently. These variations are normalized by the semantic platform so that developers just have to program against the Topic restriction, rather than against each possible semantic variation.","Table 80 illustrates the syntax of MailEntity according to an embodiment of the present invention.",{"@attributes":{"id":"p-0318","num":"0356"},"tables":{"@attributes":{"id":"TABLE-US-00079","num":"00079"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 80"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"MailEntity."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["Entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":"denoter "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003Japanese nounnoun"]},{"entry":[{},"\u2003\u2003English nounmailnounemail"]},{"entry":[{},"\u2003\u2003nounelectronic mail"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Like frames, entities can also have restrictions applied to them. Table 81 illustrates the syntax of an entity with restrictions.",{"@attributes":{"id":"p-0320","num":"0358"},"tables":{"@attributes":{"id":"TABLE-US-00080","num":"00080"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 81"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Entity with Restrictions."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003Locationloc \u2003\u2003"]},{"entry":[{},"\u2003\u2003MailFolder"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"For the utterance \u201csend mail to Bob\u201d or \u201csend Bob mail\u201d, the SPL runtime platform resolves against the SendMailCommand command.  illustrates a flow diagram tracing resolution through a SendMailCommand code according to one embodiment of the present invention. It should be understood by a worker skilled in the art that resolution of a command will vary according to the implementation. For example, referring to Table 78, each of the Begin, Success, and Failure clauses are optional. The OnResolve clause may contain any one of the clauses, any combination of the clauses, or none of the clauses, depending on the specific implementation.","For the purpose of the flow diagram in , it should be understood that the analysis engine has already mapped the utterance to types defined in the declarative schema and derived from the LOM. Denoter objects, for example, have already been considered by the analysis engines. Additionally, it is assumed that the code contains a Begin clause, a Success clause and a Failure clause for each element. It is also important to note that some details are omitted from the flow diagram, in part, because such details are implementation specific and would unnecessarily complicate the discussion.","Referring now to , upon receiving an utterance, the begin resolution clause of SendMailCommand is invoked (block ). If begin resolution clause does not succeed, a different command may be invoked or (optionally) the Interpreter may simply fail resolution, depending on the specific implementation and depending on other commands that may be available in the application (block ).","If the begin resolution clause of the SendMail Command is invoked successfully, the SPL Interpreter invokes the begin resolution clause for a MySend Frame that the SendMail Command uses (block ). If the begin resolution clause for the MySend Frame fails, the SendMail Command failure clause is invoked (block ), and the SPL interpreter can optionally invoke a different command or fail resolution (block ).","If the begin resolution clause for the MySend Frame succeeds, the MailEntity Begin Resolution clause is invoked (block ). If the invocation of the begin resolution clause for the MailEntity fails, then what happens next is largely implementation specific. As shown, depending on the specific implementation, failure of the MailEntity begin resolution clause may imply general failure (option 1), may be ignored (option 2), or may result in other operations to disambiguate the utterance (block ). These \u201cother operations\u201d may include attempting to use a different restriction clause for the part of the input that is being resolved. The restriction clause can even be for a different restriction entirely, due to ambiguities.","If failure is understood to imply general failure (option 1), then the SPL interpreter optionally invokes a different command or fails resolution (block ). If failure is ignored (option 2), then the SPL interpreter may simply invoke the success clause of the MySend frame (block ), invoke the success clause of the SendMail Command (block ), and add the SendMail Command Object to the \u201cactual interpretation\u201d list (block ). If other operations are required by the developer code, then the SPL interpreter may perform further processing, including communications with the natural language analysis engines and\/or call backs to the client application to attempt to disambiguate the utterance.","If the invocation of the begin resolution clause of the MailEntity succeeds, the MailEntity success clause is invoked (block ). Next, the Restriction begin resolution clause is invoked (block ). If the Restriction begin resolution clause fails, then the flow proceeds to block  (described above). If the begin resolution clause of the Restriction succeeds, the Restriction success clause is invoked (block ). The Restriction clause is then invoked on the MySend Frame with the MailEntity slot (block ). If this invocation fails, once again the flow proceeds to block  (described above). If the invocation succeeds, the success clause of MySend Frame is invoked (block ), the success clause of the SendMail Command is invoked (block ), and a SendMail Command object is added to the \u201cactual interpretation\u201d list (block ).","It should be understood that the code blocks lead to virtually infinite permutations, depending on the application and on the developer. In one embodiment, a default for any failed resolution may be to invoke the failure clause and stop execution. In another embodiment, the developer may wish to instantiation partial objects so that the application can utilize the domain context to resolve ambiguities and to perform partial execution of the utterance. Numerous possibilities can be imagined wherein in each clause, the developer is free to write code to perform application specific functions.","In a preferred embodiment, RecipientEntity could be authored with a Named restriction clause taking a RecipientName as a slot. RecipientName would be a NamedEntity defined such that instances of recipient names would have been located in the entire user input before semantic processing was performed. This enables a robust recognition of RecipientEntity instances.","Assuming that \u201cBob\u201d is a valid RecipientEntity, as previously mentioned, RecipientEntity is defined somewhere within the program. In this instance, the \u201cwith restriction\u201d is within the MySendFrame used by the SendMailCommand. The code inside the \u201cwith restriction\u201d clause is invoked. The code inside of the \u201cwith restriction\u201d provides some flexibility to the developer to reject this restriction. If the clause succeeds, then the restriction is accepted. Otherwise alternative \u201cwith restriction\u201d clauses may be invoked in succession until one of them succeeds, and if none of them do then the restriction is ignored. In an alternative embodiment, if a resolution clause fails, a fail resolution is invoked. Finally, the success clauses of MySendFrame and SendMailCommand are invoked, in that order (blocks  and ).","In general, it will be understood by a worker skilled in the art that restrictions and other objects within the LOM and implemented by the SPL can be configured to invoke any number of functions or processes, either on success or failure. The flow diagram is a simple illustration to show how an exemplary flow might proceed. However, numerous other variations are anticipated and are as numerous as the potential client application to which the present invention may be applied.","During this resolution process, a connected graph is produced. Each entity is a node of the connected graph, and the relationships between the entities are defined by the LOM and validated against the application domain. It will be understood by a worker skilled in the art that the nodes and relationships are strongly typed. The connected graph represents what was said in the language of the domain.","It is important to note that the existence of the SPL objects (commands, entities, frames, and restrictions) is determined by authored code in conjunction with the semantic analysis. In general, resolving against a frame, entity, command, or restriction, involves determining the existence\/validity of these objects with respect to the application domain. The objects do not really exist (are not valid) until their constraints are satisfied. An analogy of this can be drawn with C# object construction. In C#, objects can have constructors for which developers can write code to throw an exception. The exception prevents the object's existence if some constraint is not met.","The \u201csystem\u201d invokes these constructors when it attempts to create the object. Thus, the authored code in the constructor can determine the class's existence. Conceptually, SPL resolution of its core types takes this concept a step further, formalizes it, makes it richer, and makes it a native part of the system. The constraints that must be satisfied are a combination of domain authored knowledge and semantic analysis of the utterance.","D3. Inheritance.","Concept encapsulation and compositionality are achieved through traditional object-oriented techniques (such as object reuse, inheritance, polymorphism, and the like). For example, to model \u201csend mail to Bob\u201d and \u201csend instant message to Bob\u201d, we can declare MySendFrame to take a super type of MailEntity and InstantMessage. Table 82 illustrates the MySendFrame according to an embodiment of the present invention.",{"@attributes":{"id":"p-0336","num":"0374"},"tables":{"@attributes":{"id":"TABLE-US-00081","num":"00081"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 82"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"MySendFrame."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"Entity "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["entity ",": "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["entity ",": "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["frame ",": "]},{"b":":="}]},{"entry":[{},"ItemEntity"]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Goalgoal",{"b":":="}]},{"entry":[{},"\u2003\u2003\u2003\u2003RecipientEntity"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"ul":{"@attributes":{"id":"ul0027","list-style":"none"},"li":{"@attributes":{"id":"ul0027-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0028","list-style":"none"},"li":["command SendIMCommand uses MySend<Doneto.what:=InstantMessage>;","command SendMailCommand uses MySend<Doneto.what:=MailEntity>;\n\nThe concept of \u201csending item to Recipient\u201d is encapsulated by MySendFrame and can be reused by SendIMCommand and SendMailCommand. It is also possible to reuse MySendFrame compositionally. An example of this is provided in Table 83.\n"]}}}},{"@attributes":{"id":"p-0337","num":"0377"},"tables":{"@attributes":{"id":"TABLE-US-00082","num":"00082"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 83"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"MySendFrame."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"entity "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003MySendFrame DoneTo.what "]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"In general, SPL provides the ability for developers to reason about the application domain and to have that reasoning affect the analysis in a deep and meaningful way. SPL allows this reasoning to be done declaratively and procedurally. Referring again to the MailEntity syntax, the syntax establishes declarative constraints that say MailEntity is an entity that is denoted by a list of words specified in MailWords, and it can be restricted to being in a MailFolder location. Table 84 illustrates the MailEntity.",{"@attributes":{"id":"p-0339","num":"0379"},"tables":{"@attributes":{"id":"TABLE-US-00083","num":"00083"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 84"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"MailEntity."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003\u2003Location<loc",{"b":":="}]},{"entry":[{},"\u2003\u2003\u2003\u2003MailFolder"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":"entity "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Namedname",{"b":":="}]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"In some instances, it may be desirable to write code to determine if \u201cFoo\u201d is really a currently valid folder in the current user's mailbox. The only way to do this is to write procedural code to check the validity of \u201cFoo\u201d at runtime. Table 85 illustrates the syntax for a MailFolder entity that checks the validity of a Folder name at runtime.",{"@attributes":{"id":"p-0341","num":"0381"},"tables":{"@attributes":{"id":"TABLE-US-00084","num":"00084"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 85"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"MailFolder with Procedural Check Code."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Namedname "]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003IsValidFolderName(Named.name) ;"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003haveName;"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Another way to achieve this effect would be to create a NamedEntity type FolderName, and use that as the slot of the Named restriction.","A nice side effect of invoking the clauses (begin, success, failure, and with restriction) is that the developer can write code to bind the semantic objects to application objects. For example, in the Named restriction clause, the developer can write code to get a reference to a folder application object if the name is valid. Table 86 illustrates the syntax for such a reference.",{"@attributes":{"id":"p-0344","num":"0384"},"tables":{"@attributes":{"id":"TABLE-US-00085","num":"00085"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 86"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Code to Bind Semantic Objects to"},{"entry":"Application Objects."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003MAPIFolder folder;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003Named<name:=>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003folder=GetFolder(name);"]},{"entry":[{},"\u2003\u2003\u2003\u2003if(folder==null) return false;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"In general, developers can easily write code to reason about their application context and state at key points in the analysis. This reasoning can affect the end resolution analysis. For example, to determine if \u201cBob\u201d is a valid recipient or not, the developer can write code that goes to a database of current users of the system. If not, the developer could write code to handle the failure. For example, the developer can display a pop-up window or dialog for user clarification, generate restatement, and the like, right at the point of failure. By providing immediate feedback to the user at the point of failure, the system fosters the appearance of a smart, well-developed application.","Alternatively, the developer can write code at the top level SendMailCommand to prevent resolution against the command if the application is not in an appropriate state. This deep integration between semantic analysis and reasoning about domain knowledge is very important to understanding and disambiguating natural language.","By allowing developers to write code in clauses to reject resolutions, SPL enables the developer to make early rejections of incorrect analyses. In general, the author can assert a lot of control over the interpretations that succeed and those that fail. In some instances, it may be desirable for the author to reject some interpretations at early stages of the process. In general, the earlier the author can disambiguate (remove ambiguities), the easier it is for the application to manage ambiguity. Less ambiguity means fewer interpretations. Any application authored for natural language must have some mechanism for managing multiple interpretations. The author either writes code to evaluate the sanity of interpretations as the interpreter is deciding, or writes code that occurs after semantic analysis is done to disambiguate and pick among the set of interpretations (post processing). It is not hard to see that the former would be easier to manage and code for.","Additionally, it is believed that the earlier interpretations can be rejected, the faster and more accurately the best interpretation can be found.","In some instances, authors may wish to reject interpretations later in the process. Rejecting interpretations earlier quite often involves making call backs into the client application to examine state and\/or context and to reason about the application's object model. If the call backs need to go over a network, then making frequent call backs can cause the system to operate slowly. For example, transmission delays could render the system unusable. SPL allows the author to have complete control over when and what call backs to make. Thus, the developer can decide for himself (herself) what the right balance of call backs and post-analysis disambiguation logic is, depending on the nature of the client application.","Alternatively, in some implementations, the developer may want to reason about the entire resolution before deciding whether to reject resolutions or not. There could be cases where the pieces in isolation cannot determine success or failure and global reasoning over the resolved tree is required.","SPL lets the developer choose how to balance early versus late rejection depending on their needs and the needs of the client application.","As previously discussed, the resolution of the frames, restrictions, and entities by the SPL runtime is essentially building a domain dependent model of an utterance. This statement warrants elaboration.","In natural language, a syntactic construct can be used to express a multitude of meanings. As a very simple example, consider the preposition \u201con\u201d followed by a noun. For example, consider the phrase \u201con Foo\u201d. The phrase \u201con Foo\u201d can refer to a Location (as in \u201cbook on table\u201d) or it might mean Topic (as in \u201cbook on Seattle\u201d). To determine which phrase is correct, the phrase must be disambiguated. This disambiguation can only be done by the application. For example, Table 87 illustrates the syntax for enabling Amazon.com.",{"@attributes":{"id":"p-0354","num":"0394"},"tables":{"@attributes":{"id":"TABLE-US-00086","num":"00086"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 87"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Book Seller Syntax."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003Topic<topic "]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"For coordination, the SPL code defines how entities and their modifiers are distributed over conjunction and disjunction. For the utterance, \u201cfind mail and notes created yesterday\u201d, the possible modeling choices include:\n\n","For negation, the authored code determines how negation scope ambiguity is modeled. For example, take the utterance, \u201cDon't allow mail from Joe\u201d. The phrase can be interpreted as follows:\n\n","For clauses, the authored code determines whether the clause is modeled as a frame-based restriction (restrictions that are headed by verbs) or as one of the predefined restrictions. For example, \u201cbook that discusses Foo\u201d, the clause, \u201cthat discusses Foo\u201d, can be modeled as a Topic restriction or it can be modeled as a frame-based restriction on \u201cbook\u201d. Table 88 provides an example of the syntax for the BookEntity.",{"@attributes":{"id":"p-0358","num":"0405"},"tables":{"@attributes":{"id":"TABLE-US-00087","num":"00087"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 88"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"BookEntity."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["Entity ","denoted by \u201c","\u201d"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003discuss<DoneTo.what  string"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In general, from the perspective of the SPL, the role of the SPL program is to define a natural language semantic model of the application's domain. The role of the semantic analysis is to map utterances to that SPL Program-defined model in accordance to the analysis engines' understanding of linguistics.","From platform's point of view, the role of the semantic platform is to define a highly abstract, domain-independent object model of what is said. From this perspective, the role of the SPL code is to pick from the possibilities the platform provides.","In general, the resolution of a SPL program can be understood as building the domain-dependent semantic model of what is said. In the process of building this domain-dependent model, domain-independent objects become strongly typed and can be anchored (mapped) to the application's objects.","E2. Type System","In general, the core SPL types are commands, frames, entities, and restrictions. These are called resolvable types because they require resolution semantics to determine their existence.",{"@attributes":{"id":"p-0363","num":"0410"},"tables":{"@attributes":{"id":"TABLE-US-00088","num":"00088"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[resolvable type]"]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"The begin clause is invoked at the beginning of resolution of the resolvable type. By default, the clause returns \u2018true\u2019. The developer can return \u2018false\u2019 which signals to the SPL interpreter to stop resolution against this type. This means the resolution fails, and the fail clause is invoked. The begin clause is a convenient place for the developer to do initialization and to check whether the application is in an appropriate context\/state to process the type.","The success clause is invoked when resolution against the type succeeds. This is where the developer can write code to cleanup resources or to package up the resolution result. The developer can still reject the resolution by returning false.","The fail clause is invoked when resolution fails to succeed. Like the begin and success clauses, the fail clause can return \u2018false\u2019 which will effectively make the failed resolution of the type succeed.","In one embodiment, all resolvable types, except for the command, can have any number of restriction clauses. This is discussed in more detail with respect to Slots and \u201cwith restriction\/Frame clauses\u201d. In an alternative embodiment, all resolvable types, including the command type, can have any number of restriction clauses. Each of the resolvable types (Commands, Frames, Entities, and Restrictions are discussed in detail below.","Commands are Natural Language (NL) enabled tasks supported by the client application. During development of the client application, authors create commands to describe the actions they want to handle. Commands provide the semantic analysis with task entry points into the application. SPL resolution begins at the command and recurses down the tree. Commands are invoked in response to user commands. This is analogous to the way Windows events such as mouse click are invoked in response to a user clicking a mouse. Table 89 shows the syntax of the command declaration according to an embodiment of the present invention.",{"@attributes":{"id":"p-0369","num":"0416"},"tables":{"@attributes":{"id":"TABLE-US-00089","num":"00089"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 89"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Command Declaration."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["Command ","uses "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"The begin clause in a command is a useful place to check whether the application is in an appropriate context and\/or state to process the command. This allows for very early rejection of a command based on application knowledge.","In the success clause, the developer can directly execute the command or package up whatever data is needed to execute the command. This packaged data can be in the form of a URL, an XML description of the task, a delegate to the function that can execute the command, and the like. The author can still do additional reasoning in the success clause and reject the interpretation by returning a value of \u201cfalse\u201d. This is useful because it permits the author to reason globally about the whole utterance. In other words, the author can look at the completely resolved semantic tree to see if the resolution as a whole is coherent. The pieces may be coherent independently or in a limited context, but they may not make sense together.","An \u201cUnknown\u201d command handles utterances that do not map to an authored command. In one embodiment, SPL enforces the existence of this command.","Frames generally refer to verbs. There are two types of Frames: basic frames and composite frames. A basic frame refers to one verb. For example, the frame find refers to the verb \u201cfind\u201d. A composite frame is a grouping of multiple verbs, which generally have the same meaning. The composite frame and its multiple verbs can be thought of as a synonym lists. In general, the semantic platform provides a predefined set of basic frames, one for every verb. For consistency, the convention is the names of the basic frames are lower-case, and they have the same name as their corresponding lexical word. By contrast, a name of a composite frame begins with a capital letter. The semantic platform provides a set of composite frames that are common. For example, the platform can provide a Search composite frame that groups together \u201cfind\u201d, \u201csearch\u201d, \u201clook\u201d and \u201crummage\u201d.","Table 90 illustrates the syntax for defining a basic frame.",{"@attributes":{"id":"p-0375","num":"0422"},"tables":{"@attributes":{"id":"TABLE-US-00090","num":"00090"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 90"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Basic Frame."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["frame ","denoted by \u201c","\u201d behaves as"]}]},{"entry":[{},"VerbClass"]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0376","num":"0423"},"tables":{"@attributes":{"id":"TABLE-US-00091","num":"00091"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 91"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Find Frame."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["frame\u2003","denoted\u2003by\u2003\u201c","\u201d\u2003behaves as"]}]},{"entry":[{},"DefaultVerbClass"]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"The lexical words do not have to appear inline. In fact, in order to support multiple languages, it is recommended that the words do not appear inline. They should be defined in their own object. Table 92 illustrates the syntax for a defined denoter object.",{"@attributes":{"id":"p-0378","num":"0425"},"tables":{"@attributes":{"id":"TABLE-US-00092","num":"00092"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 92"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Denoter Object."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"denoter "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003English find"]},{"entry":[{},"\u2003\u2003French chercher"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"All basic frames that are provided by the semantic platform are defined in SPL code in this manner. Developers can also define their own verbs this way. For example, in one embodiment a developer can define a fop base class as follows:\n\n","As mentioned above, composite frames are groupings of verbs. They are essentially synonym lists. In creating composite frames, only the denoters of the frames used in the groupings are \u201cinherited\u201d by the composite frame.","SPL provides developers with the ability to create their own groupings from basic and composite frames. An example is provided in Table 94",{"@attributes":{"id":"p-0382","num":"0431"},"tables":{"@attributes":{"id":"TABLE-US-00093","num":"00093"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 94"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Composite Frame."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["frame","groups"],"sub":["1","n"]}]},{"entry":[{},{"b":"except ","sub":["x","y"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0383","num":"0432"},"tables":{"@attributes":{"id":"TABLE-US-00094","num":"00094"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 95"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Composite Frame with Except Clause."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["frame ","groups ","except "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Derived frames can also be created that inherit from other frames, either basic frames or composite frames. Table 96 illustrates the syntax for a Derived frame.",{"@attributes":{"id":"p-0385","num":"0434"},"tables":{"@attributes":{"id":"TABLE-US-00095","num":"00095"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 96"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Derived Frame."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"Frame ","sub":["1","n"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Entities are the objects that can be referred to, either by name or by a description, in the application. Entities can be concrete things, like file items and email items, but they can also represent abstract concepts, such as color, texture and so on. Entities are usually denoted by lexical words. Table 97 shows the syntax for declaring an Entity.",{"@attributes":{"id":"p-0387","num":"0436"},"tables":{"@attributes":{"id":"TABLE-US-00096","num":"00096"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 97"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Entity Declaration."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d, ",", \u201c","\u201d"],"sub":["1","n"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},"For example:"]},{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d, \u201c"]}]},{"entry":[{},"mailemail"]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0388","num":"0437"},"tables":{"@attributes":{"id":"TABLE-US-00097","num":"00097"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 98"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Denoters"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":"denoter "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003Japanese nounnoun"]},{"entry":[{},"\u2003English \u2003noun(mail\u2003nounemail"]},{"entry":[{},"\u2003nounelectronic mail"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"In some embodiments, it may be desirable that the denoter is optional at the declaration. Additionally, it may be desirable, in some implementations, to add obligatory denoters (words that must be contained in the utterance for the entity to succeed). The presence of an \u201cobligatory\u201d denoter can be enforced through code contained in the success clause. Table 99 shows an example of an obligatory denoter enforced through the success clause.",{"@attributes":{"id":"p-0390","num":"0439"},"tables":{"@attributes":{"id":"TABLE-US-00098","num":"00098"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 99"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Obligatory Denoter Enforce through Success"},{"entry":"Clause."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},"{"]},{"entry":[{},{"b":"\u2003on resolve"}]},{"entry":[{},"\u2003{"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003if (this.Denoter == null)"]},{"entry":[{},"\u2003\u2003\u2003false;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In general, restrictions are typed semantic relationships. The platform provides a predefined base set of relationships. One of the most important things about restrictions is the normalization of variations in syntax, both within a language and across languages. Restrictions are semantic, not syntactic. Thus, the restrictions allow the developer to code against semantics of the language, not the syntax. Restrictions greatly ease the authoring burden and make enabling for other language possible.","Some restrictions come with system-defined slots that have specific meanings. The discussion of the LOM in section D above provided code samples and some discussion of slots. Some common restrictions are listed below in Table 100.",{"@attributes":{"id":"p-0393","num":"0442"},"tables":{"@attributes":{"id":"TABLE-US-00099","num":"00099"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 100"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"List of Common Restrictions."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Restriction Syntax","Application"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Doer<who := Entity>","Applies to frames. It"]},{"entry":[{},{},"represents the entity doing the"]},{"entry":[{},{},"action. Examples: \u201cBob opened"]},{"entry":[{},{},"the file\u201d, \u201cthe file was opened"]},{"entry":[{},{},"by Bob\u201d."]},{"entry":[{},"DoneTo<what:= Entity>","Applies to frames. It"]},{"entry":[{},{},"represents the entity that the"]},{"entry":[{},{},"action is being done to."]},{"entry":[{},{},"Examples: \u201copen the file\u201d, \u201cthe"]},{"entry":[{},{},"file was opened\u201d."]},{"entry":[{},"Location<loc:=Entity>","Models the semantics of being"]},{"entry":[{},{},"located somewhere. Examples:"]},{"entry":[{},{},"\u201cmail in Inbox\u201d, \u201cfile located"]},{"entry":[{},{},"on the desktop\u201d."]},{"entry":[{},"Time","Models actual time expressions,"]},{"entry":[{},{},"i.e. expression that can be"]},{"entry":[{},{},"converted into a point and\/or"]},{"entry":[{},{},"span in time. Examples: \u201cdelete"]},{"entry":[{},{},"after 3 days\u201d, \u201cmail from"]},{"entry":[{},{},"yesterday\u201d, \u201cschedule for"]},{"entry":[{},{},"tomorrow from 1\u20133 pm\u201d."]},{"entry":[{},"Topic<topic\u2003\u2003\u2003:=","Models subject matter."]},{"entry":[{},"Entity>, Topic<topic","Examples: \u201cbook about dogs\u201d,"]},{"entry":[{},":= string>","\u201cbook regarding dogs\u201d, \u201cbook"]},{"entry":[{},{},"with the subject dogs\u201d."]},{"entry":[{},"Source<src := Entity>","Models object or source."]},{"entry":[{},{},"Examples: \u201cmail from Bob\u201d"]},{"entry":[{},"Order","Examples: \u201csort in alphabetical"]},{"entry":[{},{},"order\u201d, \u201cdisplay in reverse"]},{"entry":[{},{},"order by name\u201d"]},{"entry":[{},"Cardinal","Example: \u201c3 files\u201d"]},{"entry":[{},"Ordinal","Example: \u201cfirst file\u201d"]},{"entry":[{},"Means<instrument\u2003:=","Examples: \u201csearch using"]},{"entry":[{},"Entity>","Google\u201d, \u201copen with Word\u201d"]},{"entry":[{},"Possessor<owner\u2003\u2002:=","Examples: \u201cmy book\u201d, \u201cBob's"]},{"entry":[{},"Entity>","book\u201d"]},{"entry":[{},"Accompaniment","Example: \u201cmeeting with Bob\u201d"]},{"entry":[{},"Degree","Examples: \u201calmost in the box\u201d,"]},{"entry":[{},{},"\u201cextremely red\u201d, \u201cvery large\u201d,"]},{"entry":[{},{},"\u201cmore to the left\u201d"]},{"entry":[{},"Negation","Examples: \u201cnot from Bob\u201d,"]},{"entry":[{},{},"\u201cdon't send mail\u201d, \u201cexcept for"]},{"entry":[{},{},"Bob\u201d"]},{"entry":[{},"Named<name := string>","This represents the name of an"]},{"entry":[{},{},"entity. Examples: \u201cInbox"]},{"entry":[{},{},"folder\u201d, \u201cfile named foo.txt\u201d"]},{"entry":[{},"Modifier<mod\u2003\u2003\u2002:=","This represents adjectival"]},{"entry":[{},"Denoter>","modifiers. Examples: \u201clarge"]},{"entry":[{},{},"file\u201d, \u201cschool bus\u201d"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"There is a special restriction called a Default restriction. The Default restriction is fired by the SPL runtime when there is an unresolved or unrecognized restriction on the resolvable type.","Developers create their own restrictions by inheriting from one of the predefined set of restrictions, by creating a frame based restriction, or by specifying a pattern.","In general, restrictions can be applied to entities and to frames, as well as to other restrictions. As a general rule, SPL does not enforce whether applying a certain restriction makes semantic sense. SPL makes some exceptions either to simplify the semantic modeling or to reduce the ambiguity. The exceptions are presented in Table 101 below.",{"@attributes":{"id":"p-0397","num":"0446"},"tables":{"@attributes":{"id":"TABLE-US-00100","num":"00100"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 101"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SPL Exceptions."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1.","Degree restriction is only allowed on"]},{"entry":[{},{},"\u2003\u2003restrictions."]},{"entry":[{},"2.","Doer and DoneTo restrictions are only"]},{"entry":[{},{},"\u2003\u2003allowed on frames."]},{"entry":[{},"3.","Negation is not allowed on entities."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"ul":{"@attributes":{"id":"ul0035","list-style":"none"},"li":{"@attributes":{"id":"ul0035-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0036","list-style":"none"},"li":"with restriction RestrictionName<slot:=type, . . . , slot:=type>;\n\nThe arguments in the angle brackets are called slots. The \u201cwith restriction\u201d statement is called the restriction clause. The label \u201crestriction\u201d was chosen to avoid certain problems. For example, restrictions could be labeled \u201cproperties\u201d, but properties does not always work as a descriptor. For example, one can think of \u201cmail in Inbox\u201d as \u201cmail with the property of being in the Inbox folder\u201d. However, this same relationship does not exist with quantifiers, such as cardinals and ordinals. The phrase \u201cthree files\u201d is not equivalent to \u201cfiles with the property of three\u201d. Moreover, the word \u201cproperty\u201d is already used in conventional programming paradigms (e.g. \u201cproperties of a list box\u201d). It is generally desirable not to overload the term \u201cproperties\u201d, and the same holds true for the word \u201cattribute\u201d.\n"}}}},"Instead, Entity is intended to convey the notion of sets. The \u201centity\u201d declaration in SPL is really specifying a set of entities, and applying restrictions is restricting that set. For example, the syntax for declaring a MailEntity denoted by Mail\n\n",{"@attributes":{"id":"p-0399","num":"0450"},"tables":{"@attributes":{"id":"TABLE-US-00101","num":"00101"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 102"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Restriction Applied to an Entity."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["Entity ","denoted by \u201c","\u201d"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Location<loc\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003MailFolder"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Applying restrictions to frames should be viewed as restricting that action (Frames typically model verbs or actions). Table 103 illustrates a Frame with a restriction.",{"@attributes":{"id":"p-0401","num":"0452"},"tables":{"@attributes":{"id":"TABLE-US-00102","num":"00102"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 103"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Restriction on a Frame."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["frame ",": ","<",":=",">"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003Meansinstrument "]},{"entry":[{},"\u2003\u2003NotepadEntity"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"The same applies to restrictions on restrictions. For example, the Cardinal restriction represents cardinality of an entity. The phrase \u201c3 files\u201d means any 3 files. However, the cardinality can be restricted by an Ordinal, as in \u201cfirst 3 files\u201d. Table 104 illustrates a restriction applied on a restriction.",{"@attributes":{"id":"p-0403","num":"0454"},"tables":{"@attributes":{"id":"TABLE-US-00103","num":"00103"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 104"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Restriction on Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["restriction ",": "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Ordinal;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"In general, resolvable types, except for commands, can have any number of restrictions applied to them. Each restriction type can be applied multiple times as long as the signature is unique. Table 105 shows a Frame having multiple restrictions with unique signatures.",{"@attributes":{"id":"p-0405","num":"0456"},"tables":{"@attributes":{"id":"TABLE-US-00104","num":"00104"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 105"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Frame with Multiple Restrictions."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["frame ",": ","<",":=",">"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Means<instrument \u2003\u2003"]},{"entry":[{},"\u2003\u2003NotepadEntity"]},{"entry":[{},"\u2003valid restriction clause"]},{"entry":[{},"\u2003Means<instrument \u2003\u2003\u2003"]},{"entry":[{},"\u2003MSWordEntity"]},{"entry":[{},"\u2003invalid restriction clause because"]},{"entry":[{},"\u2003the signature is not unique"]},{"entry":[{},"\u2003Means<instrument \u2003\u2003\u2003"]},{"entry":[{},"\u2003NotepadEntity "]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"As mentioned above, slots are the arguments that appear in angle brackets (< >). Slot syntax is used to subtype the slots at point of use. The SPL has a plurality of predefined slots of restrictions. For example, the semantic system defines a Goal restriction as follows:\n\n",{"@attributes":{"id":"p-0407","num":"0459"},"tables":{"@attributes":{"id":"TABLE-US-00105","num":"00105"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 106"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Frame with Subtyped Goal Slot."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"frame "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003\/\/ models \u201csend to ContactItem\u201d"]},{"entry":[{},"\u2003\u2003Goalgoal ContactItem"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"In the code of the restriction clause, the restriction can be accessed as an object. Table 107 shows the syntax for accessing the restriction as an object.",{"@attributes":{"id":"p-0409","num":"0461"},"tables":{"@attributes":{"id":"TABLE-US-00106","num":"00106"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 107"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Accessing Restriction as Object."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["with restriction ","<",":=",">"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003item = Goal.goal;"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In general, the resolvable types can be conceptualized using an analogy to C++ templates. The Goal restriction, for example, can be thought of as a template Goal class with a goal data member of generic type. Then, the pseudo C++ code for the above Goal restriction clause is as follows:\n\n","Consumers of the resolvable types may want to sub-type the type's restriction clauses. For example, consumers of the above send frame may want to subtype the goal slot of its Goal restriction clause using slot syntax as follows:\n\n","Another kind of restriction is the AsProperty restriction. The asproperty attribute allows consumers of resolvable types to subtype slots of restriction clauses using the slot syntax. This attribute is specified at the restriction clause as shown in Table 108.",{"@attributes":{"id":"p-0413","num":"0467"},"tables":{"@attributes":{"id":"TABLE-US-00107","num":"00107"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 108"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"AsProperty Attribute."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"frame "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003Goalgoal"]},{"entry":[{},"\u2003\u2003 ContactItem"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"ul":{"@attributes":{"id":"ul0045","list-style":"none"},"li":{"@attributes":{"id":"ul0045-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0046","list-style":"none"},"li":"command MySendCommand uses send<Goal.goal:=MyContactItem>;\n\nThis declaration says, MySendCommand uses the send frame and sub-types the Goal restriction clause of the send frame to be MyContactItem.\n"}}}},"Generally, the asproperty attribute also allows code in the send frame to access this Goal object using property syntax. All resolvable types have a RestrictionCollection property which allows code to get at its currently resolved collection of restrictions. With the asproperty attribute, the marked restriction can be accessed using property syntax as shown in Table 109. For example:",{"@attributes":{"id":"p-0415","num":"0470"},"tables":{"@attributes":{"id":"TABLE-US-00108","num":"00108"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 109"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Accessing Marked Restriction Using"},{"entry":"Property Syntax."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"frame "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003ContactItem item;"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003Goalgoal"]},{"entry":[{},"\u2003\u2003 ContactItem"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\/\/ normal syntax"]},{"entry":[{},"\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003RestrictionCollectionGoal"]},{"entry":[{},"\u2003\u2003\u2003count  0"]},{"entry":[{},"\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003item \u2003\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003this.RestrictionCollection"]},{"entry":[{},"\u2003\u2003\u2003\u2003Goal0goal"]},{"entry":[{},"\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\/\/ property syntax"]},{"entry":[{},"\u2003\u2003\u2003.Goal.goal != null)"]},{"entry":[{},"\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003item  this.Goal.goal;"]},{"entry":[{},"\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Additionally, only one restriction of each type can be marked with the asproperty attribute, regardless of the type of the restriction slot as shown in Table 110 below.",{"@attributes":{"id":"p-0417","num":"0472"},"tables":{"@attributes":{"id":"TABLE-US-00109","num":"00109"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 110"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"AsProperty Restriction Limitations."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"frame "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Goal<goal"]},{"entry":[{},"\u2003\u2003\u2003\u2003ContactItem"]},{"entry":[{},"\u2003\u2003\u2003\u2003\/\/ illegal"]},{"entry":[{},"\u2003\u2003\u2003\u2003Goal<goal"]},{"entry":[{},"\u2003\u2003\u2003\u2003 UserItem"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"ul":{"@attributes":{"id":"ul0047","list-style":"none"},"li":{"@attributes":{"id":"ul0047-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0048","list-style":"none"},"li":"restriction Goal2:Goal<goal:=UserItem>;\n\nThis eliminates the problem and allows the frame to resolve as shown in Table 112 below.\n"}}}},{"@attributes":{"id":"p-0418","num":"0474"},"tables":{"@attributes":{"id":"TABLE-US-00110","num":"00110"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 112"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Restriction Syntax."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["frame ","denoted by "]}]},{"entry":[{},"\u2003{"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003Goal<goal"]},{"entry":[{},"\u2003\u2003\u2003ContactItem"]},{"entry":[{},"\u2003\u2003\u2003the slot usage here is not"]},{"entry":[{},"\u2003\u2003\u2003\u2003necessary, but is good for"]},{"entry":[{},"\u2003\u2003\u2003documentation purposes."]},{"entry":[{},"\u2003\u2003\u2003Goal2goal"]},{"entry":[{},"\u2003\u2003\u2003 UserItem"]},{"entry":[{},"\u2003\u2003\u2003The clause could have been written"]},{"entry":[{},"\u2003\u2003\u2003as: "]},{"entry":[{},"\u2003\u2003\u2003Goal2;\u201d"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"It is important to understand, with respect to the ordering of the slots in restriction clauses, that some restrictions are defined with system slots. For example, the Goal restriction is defined with a goal slot. When sub-typing the Goal restriction at the point of use (i.e. at the restriction clause), the system slots must be specified first as shown in Table 113.",{"@attributes":{"id":"p-0420","num":"0476"},"tables":{"@attributes":{"id":"TABLE-US-00111","num":"00111"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 113"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Ordering of Slots."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["restriction ",": ","<",":=",">"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Modifier<mod := Denoter>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":"frame "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003\/\/ illegal"]},{"entry":[{},"\u2003\u2003\u2003\u2003Goal2"]},{"entry":[{},"\u2003\u2003\u2003\u2003Modifier.mod  MyDenoters"]},{"entry":[{},"\u2003\u2003\u2003\u2003goal  ContactItem "]},{"entry":[{},"\u2003\u2003\u2003\u2003\/\/ legal"]},{"entry":[{},"\u2003\u2003\u2003\u2003Goal2"]},{"entry":[{},"\u2003\u2003\u2003\u2003goal  ContactItem"]},{"entry":[{},"\u2003\u2003\u2003\u2003Modifier.mod := MyDenoters "]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Entities that have restriction clauses marked with asproperty can have those restriction clauses sub-typed at the point of use. Suppose, for example, ContactItem had a Location restriction clause marked with asproperty, as shown in Table 114.",{"@attributes":{"id":"p-0422","num":"0478"},"tables":{"@attributes":{"id":"TABLE-US-00112","num":"00112"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 114"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Location Restriction Marked AsProperty."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"frame "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Goal"]},{"entry":[{},"\u2003\u2003\u2003\u2003goal\u2003\u2003ContactItem<Location.loc\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003DerEntity>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Restriction clauses can also be marked obligatory, meaning that the clause must be executed and succeed or else the resolution of the type fails. In order for the clause to succeed, the following criteria must be satisfied:\n\n",{"@attributes":{"id":"p-0424","num":"0483"},"tables":{"@attributes":{"id":"TABLE-US-00113","num":"00113"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 115"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Obligatory Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"frame "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Goalgoal\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003ContactItem"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":[{},{}]},"Inheritance is allowed on entities, frames, and restrictions. Currently, commands do not support inheritance. Generally, there does not appear to be a need to support inheritance in commands (at this time). Commands are task entry points that do not require inheritance.","All the \u201cinheritable\u201d code is in the frame that the command uses. As previously discussed, except for the resolution semantics in the on resolve clause, the resolvable types are just normal objects. Outside of the on resolve clause, SPL adopts C# inheritance semantics, which are well-known in the art. For the purpose of this discussion, the disclosure focuses on the inheritance semantics within the on resolve clause which does not follow traditional (C#) inheritance semantics. However, it may be desirable, in certain implementations, to vary from conventional C# inheritance semantics for enabling specific functionality in real applications using inheritance. For the purpose of simplicity, the discussion does not delve into all such possibilities, choosing to err on the prescriptive side in an attempt to keep the discussion simple.","First, it is important to understand scoping within functions, restriction clauses, and variables in the on resolve clause. Table 116 shows syntax for a Mail Entity in order to facilitate the discussion of scope.",{"@attributes":{"id":"p-0428","num":"0487"},"tables":{"@attributes":{"id":"TABLE-US-00114","num":"00114"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 116"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Mail Entity."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"entity "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003int x;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003int y;"]},{"entry":[{},"\u2003\u2003\u2003\u2003Goalgoal  Entity"]},{"entry":[{},"\u2003\u2003\u2003\u2003void foo( );"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003void bar( );"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Functions declared in the on resolve clause are private to the clause, meaning that such functions are not accessible outside of the on resolve clause. Thus, foo( ) would not be accessible in bar( ). Restriction clauses are also private to the on resolve clause, and therefore not accessible outside of it.","Variables declared in the type's scope are accessible to clauses and functions in the on resolve clause through use of the outer keyword. For example, integer x is accessible in the Goal restriction and in function foo( ) as outer.x. Functions declared in the type's scope are accessible to the on resolve clause. Thus, the function bar( ) is accessible in the Goal restriction and in the function foo( ) as outer.bar( ).","The on resolve clause can be conceptualized as an extended constructor, such that everything pertaining to the constructor is private to the constructor. This implies that a derived class cannot call any of the restriction clauses in the base class.","Entities are allowed to inherit from one other entity. No multiple inheritance of entities is allowed. Denoters of the base entity are merged into the denoters of the derived entity. There is no hierarchy in the merged denoter lists (the denoters are flattened) as shown in Table 117.",{"@attributes":{"id":"p-0433","num":"0492"},"tables":{"@attributes":{"id":"TABLE-US-00115","num":"00115"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 117"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Merged Denoter Lists."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d, \u201c","\u201d"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d"]}]},{"entry":[{},{"b":": "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"At the definition, the derived entity can also sub-type the base entity's restriction clauses that are marked with asproperty. For example, if MailEntity had a Location restriction clause marked with asproperty, then the MyMailEntity definition can be as follows:",{"@attributes":{"id":"p-0435","num":"0494"},"tables":{"@attributes":{"id":"TABLE-US-00116","num":"00116"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d:"]}]},{"entry":[{},"\u2003\u2003MailEntity<Location.loc := MyEntity>"]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Like entities, frames can only inherit from one other frame. No multiple inheritance is allowed. In the definition, the derived frame cannot specify any groupings of frames. Composite frame and frame inheritance are separated. It may be possible to handle inheritance for Frames in the same was as for Entities. In composite frames, for example, the denoter lists are grouped together. In some instances, it may be desirable to enforce the requirement that all the frames belong to the same behavioral class when the frames are grouped. If the frames in the groupings do not need to belong in the same LSS class, then frames and entities could be handled the same way.","Like frames and entities, derived restrictions can only inherit from one other restriction. Sub-typing of restriction clauses of the base restriction can also happen at the definition of the derived restriction.","Restriction clauses of a particular restriction type are tried in the derived-type before going to the base-type. This also applies to Default restriction as shown in Table 118 below.",{"@attributes":{"id":"p-0439","num":"0498"},"tables":{"@attributes":{"id":"TABLE-US-00117","num":"00117"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 118"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Default Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d, \u201c","\u201d"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003Location<loc := Entity>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003Default"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d"]}]},{"entry":[{},{"b":": "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003\u2003\u2003Location<loc\u2003\u2003:="]},{"entry":[{},"\u2003\u2003MailFolder>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003Default"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"ul":{"@attributes":{"id":"ul0051","list-style":"none"},"li":{"@attributes":{"id":"ul0051-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0052","list-style":"none"},"li":["1. MyMailEntity.Location","2. MailEntity.Location","3. MyMailEntity.Default","4. MailEntity.Default\n\nThere is currently no notion of public\/private restriction clauses and no notion of overriding restriction clauses. In part, this is because overriding restriction clauses makes little sense given that the restriction clauses are used for resolving the class and that the clauses are private to the on resolve clause. However, it may be desirable to allow restriction clauses to be overridden in certain implementations.\n"]}}}},"Depending on the implementation, it may be necessary to allow the derived class (during resolution) to access members (methods and variables) in the base class. Since the base class is not yet resolved, this may be problematic. If the derived class is not allowed to access members of the base class until the base class is resolved, the derived class must be prevented from being polymorphically set to the base during resolution (through assignment, passing to functions, and the like). In either case, derived classes may be allowed to directly invoke restriction clauses on the base before the base is resolved.","Inheritance can be utilized to add more understanding to existing entities. Referring again to the above MailEntity code of Table 118, it is important to note that the MailEntity only understands Location restriction. It is possible to create an entity that leverages the authored Location logic in MyMailEntity and adds the Topic understanding. Additionally, restriction clauses of the same type as the base may be added as shown in Table 119 below.",{"@attributes":{"id":"p-0442","num":"0505"},"tables":{"@attributes":{"id":"TABLE-US-00118","num":"00118"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 119"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"MyMailEntity."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d"]}]},{"entry":[{},{"b":": "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003\u2003\u2003Location<loc\u2003\u2003:="]},{"entry":[{},"\u2003\u2003MailFolder>"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":"entity "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003Topic<topic := string>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\/\/ deal with topic"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\/\/ Handle locations in MyMailFolder. All"]},{"entry":[{},"\u2003\u2003other locations"]},{"entry":[{},"\u2003\u2003\/\/ will go to base"]},{"entry":[{},"\u2003\u2003\u2003\u2003Location<loc\u2003\u2003:="]},{"entry":[{},"\u2003\u2003MyMailFolder>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"When a restriction clause is invoked and is rejected by the authored code in the clause, the interpreter then invokes a restriction clause, in the current type or in any of its polymorphic-ally equivalent super types. To be considered polymorphic-ally equivalent, the restriction types and the types of its slots must both be polymorphic as shown in Table 120 below.",{"@attributes":{"id":"p-0444","num":"0507"},"tables":{"@attributes":{"id":"TABLE-US-00119","num":"00119"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 120"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Polymorphism."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ",": "]}]},{"entry":[{},{"b":"entity "}]},{"entry":[{},{"b":"{"}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["with\u2003\u2003restriction",":="]}]},{"entry":[{},"SlotEntity2>"]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\/* Since this fails, the interpreter will"]},{"entry":[{},"*automatically invoke the subsequent"]},{"entry":[{},"*Location clause, without resolving the"]},{"entry":[{},"*slot again, since they are polymorphic-"]},{"entry":[{},"*ally equivalent.*\/"]},{"entry":[{},"return false;"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["with\u2003\u2003restriction",":="]}]},{"entry":[{},"SlotEntity1>"]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\/* This\u2003code\u2003can\u2003be\u2003invoked\u2003with"]},{"entry":[{},"SlotEntity2\u2003acting\u2003polymorphically\u2003as"]},{"entry":[{},"SlotEntity1.\u2003If\u2003this\u2003clause\u2003fails,\u2003the"]},{"entry":[{},"interpreter will not automatically invoke"]},{"entry":[{},"the Topic restriction below since Topic is"]},{"entry":[{},"not equivalent to Location even though the"]},{"entry":[{},"slots are equivalent.*\/"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["with\u2003\u2003restriction",":="]}]},{"entry":[{},"SlotEntity1>"]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Although they are not exactly equivalent, it is possible to use inheritance instead of sub-typing at the slots as shown in Table 121.",{"@attributes":{"id":"p-0446","num":"0509"},"tables":{"@attributes":{"id":"TABLE-US-00120","num":"00120"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 121"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Inheritance."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003Location<loc :="]},{"entry":[{},"\u2003\u2003MailFolder>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["entity ",": "]}]},{"entry":[{},"MyMailFolder>"]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["entity ",": "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003Location<loc MyMailFolder"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"It is important to note that caution should be used when declaring restriction clauses with the obligatory attribute. Obligatory clauses must fire and succeed in order for the type to resolve successfully. If a base type declares a clause as obligatory, then the derived class must ensure that it does not handle determinations that should go to the base. Derived types cannot invoke restriction clauses of their base type. Instead, derived types depend on normal resolution semantics to invoke the obligatory restriction clauses in the base.","E4. Resolution Semantics.","The resolution semantics of SPL are implemented by the SPL runtime. The runtime builds the domain-dependent model of the utterance, in accordance with SPL's language semantics. The runtime resolves the natural language command against the authored SPL types, abiding by the rules of linguistics and the SPL language.","In one embodiment, resolution of the types is performed using a top down approach.  illustrates a simplified flow diagram of a top down approach to a type resolution according to an embodiment of the present invention. First, the runtime finds a possible command that can be resolved against the utterance (step ). If there are multiple possible commands, one command is chosen for resolution (step ). If no command is found, the Unknown command is invoked (step ). If one or more commands are found, the run time attempts to resolve the found command (step ). If the command resolution fails, the runtime advances to the next command in the list and repeats steps - until there are no more possible commands. If the command resolution succeeds, the command is added to an interpretation list (step ). Finally, the runtime repeats steps (step  through ) until there are no more possible commands contained in the utterance or until a specified number of requested interpretations is reached (step ).","It should be understood by a worker skilled in the art that numerous variations in the resolution process are possible. For example, in certain instances, failure of a resolution may constitute a general failure, which causes the program to exit the resolution. In other instances, failure may result in an invocation of a failure clause of the type, which may or may not result in failure of the resolution. Additionally, within the failure clause, the success clause and the begin clause, program developers are free to insert application specific code, which allows the framework to be adapted in countless ways. For example, a developer might insert code in a failure clause to return a \u201csuccess\u201d flag, such that failure of the resolution does not result in a failure. The failed resolution might be ignored or other program code might cause the process to call back to the client application to disambiguate a particular resolution and so on. It should be understood that the figures are intended to provide an example, but are not intended to exhaust the possible implementations.","As shown in , one possible embodiment of command resolution proceeds as follows. The begin clause of the command is invoked (step ). If the begin clause fails, the runtime exits the command (step ). If the begin clause succeeds, the runtime attempts to resolve the frame (step ). If frame resolution fails, the frame failure clause is invoked, and depending on the implementation, the runtime may exit the command or perform another operation (step ). Otherwise, the runtime invokes the success clause (step ).","As previously discussed, the semantic programming language of the present invention allows the program developer to exert control over the operation of the various elements. Thus, the resolution semantics of the present invention can be modified in countless ways to implement operations that are desirable for a particular application. Thus, when a resolution fails, in some instances it may be desirable to ignore the failure and proceed. In other instances, it may be desirable to take steps to disambiguate the resolution so that the resolution can succeed (such as by calling back to the client application). In still other instances, it may be desirable to simply exit the resolution if resolution fails.","As shown in , in one embodiment, frame resolution proceeds as follows. The begin clause of the frame is invoked (block ). If the frame resolution fails, the failure clause is invoked (block ), and the runtime optionally resolves another command (block ).","If the frame resolution succeeds, the runtime attempts invoke the Restriction clause (block ) (corresponding to blocks  and sequence in ). If the Restriction clause fails resolution, the runtime considers any derived types for resolution (block ). For example, given an entity type Item with derived types Mail and Notes, a clause on another type SendItem that takes an Item could be resolved by an instance of Mail or Notes.","If the runtime fails to invoke successfully a derived type, depending on the implementation, a failure clause of the frame may be invoked (block ) and then the failure clause of the command may be invoked (block ).","Alternatively, the Restriction clause may simply be ignored. If the Restriction clause is ignored, the runtime invokes the success clauses of the frame and command (block ). The runtime then adds the command object to the \u201cactual interpretations\u201d list (block ), and attempts to resolve another command (block ).","If the runtime successfully invokes the Restriction clause (block ) or succeeds in finding a Derived type for resolution (block ), the runtime invokes the success clause of the Restriction (block ). The runtime then invokes the success clauses of the frame and of the command (block ) and adds the command object to the \u201cactual interpretations\u201d list (block ). The runtime then attempts to resolve another command (block ) until resolution on all possible commands has been attempted.","As previously mentioned, the process flow is intended for illustrative purposes only, and is in no way exhaustive of the many possible implementations. In practice, the resolution process is at least partially, if not largely, determined by the specific implementation. Thus, as indicated, the failure of the restriction resolution may cause a general resolution failure (as indicated by blocks  and ), or restriction resolution may simply be ignored and the command resolution proceeds. In another embodiment, a failed restriction (if the Restriction is obligatory, for example) might cause the runtime to call back to the client application or send flow control information to the analysis engines to try to disambiguate the command. Such decisions are largely implementation specific, and therefore, programming constructs of the semantic programming language can be used to facilitate natural language programming to optimize natural language processing to fit the specific implementation.","As shown in , one possible embodiment of restriction clause resolution proceeds as follows. For each proposed restriction, if there are any restriction slots for the restriction, the runtime resolves each slot by calling a ResolveSlot function (block ). If the ResolveSlot function fails, the runtime selects the next proposed restriction (block ), and attempts to resolve the slot by calling the ResolveSlot function (block ) again. If the ResolveSlot function succeeds (either the first time or on one of the next proposed restrictions), the runtime invokes the restriction clause (block ).","If the restriction clause fails, the runtime looks for a polymorphic-ally equivalent clause in the current class (block ). If a polymorphic-ally equivalent clause is not found in the current class, the runtime searches for one within its inheritance chain (block ). If a polymorphic-ally equivalent clause is found, the runtime invokes the equivalent clause (block ). The runtime repeats (block ) until no more equivalent clauses are found or until an equivalent clause succeeds.","If necessary, the runtime invokes the Default restriction (block ). If all restriction clauses resolve successfully, the runtime invokes the success clause (block ). Otherwise, the runtime ignores the Restriction (block ) and invokes the success clause of the frame (block ).","In an alternative embodiment, if the default restriction clause fails, the restriction is simply ignored. Resolution still succeeds, unless this is a Named or Negation restriction as discussed above.","It is important to note that a restriction clause can fire multiple times on the same resolvable type. For example, the command \u201cshow files in c: in temp folder\u201d has two Location restrictions on \u201cfile\u201d entity (\u201cin c:\u201d and \u201cin temp folder\u201d). Currently, the only enforced order of resolution of the restriction clauses are that the Doer and Doneto restrictions on frames are resolved first (in that order), and the Default restriction is resolved last. However, it may be desirable to enforce ordering on other types, such as Negation and Named.","As shown in , in one embodiment, NamedEntity resolution proceeds as follows. The runtime invokes the begin clause of an Entity (block ). If this fails, the runtime exits the Entity resolution (block ). If the begin resolution clause of the Entity succeeds, the Runtime tries to invoke a named Restriction given a NamedEntity that was found and that corresponds to the Entity (block ). It is important to note that block  encompasses multiple resolution steps, but which are omitted here for simplicity.","If the invocation of the named restriction fails, the failure clause of the Entity is invoked and the runtime exits (block ). If the invocation succeeds, the runtime invokes the success clause of the Entity (block ).","It should be appreciated that the programming language of the present invention can be utilized to alter the resolution steps in countless ways. For example, a success resolution clause may be modified to return a \u201cfalse\u201d or \u201cfailure\u201d under certain circumstances. Similarly, a failure resolution clause can be programmed to return a \u201ctrue\u201d or \u201csuccess\u201d, depending on the specific implementation. Thus, the examples presented herein are not intended to be limiting, but rather are offered to illustrate one possible implementation of resolution semantics. Numerous variations are anticipated, and it is expected that programmers will adapt the resolution to meet the needs of the specific natural language application.","The Default restriction is used to resolve restrictions not handled by the authored code and\/or restrictions not understood by the runtime. The Default restriction is invoked once per resolvable type, and is always invoked last. There can only be at most one Default restriction per resolvable type.","The object model under Default may vary according to implementation. In one embodiment, the Default object model provides a lattice of tokens (elements, items or spans) of text with their proposed restrictions. The tokens do not need to be contiguous within the lattice. For example, suppose we have the following tokens in an utterance: tokentoken, and token. Under Default, the runtime can produce the lattice shown in Table 122.",{"@attributes":{"id":"p-0469","num":"0532"},"tables":{"@attributes":{"id":"TABLE-US-00121","num":"00121"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 122"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Lattice Produced Under Default."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Span[0]"]},{"entry":[{},"\u2003\u2003Tokens = {tokentoken}"]},{"entry":[{},"\u2003\u2003Hypothesis[0]"]},{"entry":[{},"\u2003\u2003\u2003\u2003RestrictionType = restriction"]},{"entry":[{},"\u2003\u2003\u2003\u2003SucceededResolution = boolean"]},{"entry":[{},"..."]},{"entry":[{},"\u2003\u2003Hypothesis[n]"]},{"entry":[{},"\u2003\u2003\u2003\u2003RestrictionType = restriction"]},{"entry":[{},"\u2003\u2003\u2003\u2003SucceededResolution = boolean"]},{"entry":[{},"..."]},{"entry":[{},"Span[n]"]},{"entry":[{},"\u2003\u2003Tokens = {tokentoken}"]},{"entry":[{},"\u2003\u2003Hypothesis[0]"]},{"entry":[{},"\u2003\u2003\u2003\u2003RestrictionType = restriction"]},{"entry":[{},"\u2003\u2003\u2003\u2003SucceededResolution = boolean"]},{"entry":[{},"..."]},{"entry":[{},"\u2003\u2003Hypothesis[n]"]},{"entry":[{},"\u2003\u2003\u2003\u2003RestrictionType = restriction"]},{"entry":[{},"\u2003\u2003\u2003\u2003SucceededResolution = boolean"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Statistical semantic modeling and learning can play a role in SPL. The order in which restriction clauses are invoked can be dependent on some statistics based on linguistic evidence, statistical ranking (e.g. SGM), and automatic learning. As shown in , the system  includes a runtime  and a database . In general, the runtime  can manage the database , which is a repository of utterances and resolution results. The data in this repository can be mined and analyzed (off-line) by an analysis tool  (for example) after a certain threshold of resolutions has been reached. The information in the database  can be analyzed by the analysis tools , and the results can then be fed back to the runtime  to improve its selection and order of commands to resolve and its order of invoking the restriction clauses. As a result, resolutions can be made to perform better and faster, without changes to authored code, as more utterances are resolved. In a broad sense, the system  is an intelligent system that is capable of improving its performance without requiring recoding.","In one embodiment, advanced authors can manage and program against the repository. In another embodiment, advanced authors can return a probability representing a confidence level from clauses instead of just a true\/false value. While this may complicate the programming model, the ability to derive a confidence level instead of a boolean value allows the author to participate statistically in the semantic analysis.","Generally, ambiguity is surfaced to the author and dealt with by the author in the SPL client application. Ambiguity not dealt with by the code results in multiple interpretations. The runtime ranks the interpretations and returns to the application up to a maximum number of interpretations specified by the application. In one embodiment, the list of interpretations is returned synchronously (as part of the API call). In another embodiment, the interpretations are returned asynchronously using events.","The runtime prunes semantically equivalent interpretations from the list. Additionally, the runtime provides a default implementation for determining semantic equivalence of two interpretations. The default implementation can be overridden by the author.","In one embodiment, semantic equivalence is determined by comparing the strings generated by restating the semantic interpretation. However, other techniques may also be utilized to determine equivalence.","In general, developers do not have to write code to deal with all the possible restrictions that may occur in an utterance. Authors just code for the restrictions they want to understand and to handle. Un-authored\/unhandled restrictions are dropped. In other words, un-authored\/unhandled restrictions are ignored as if they did not occur in the utterance. The only exceptions are the Negation and Named restrictions, which must be handled.","The semantics are implemented using inheritance. The resolvable types all inherit from a base class. Thus, there is a base Entity, a base Frame, and a base Restriction class. The base resolvable type has one restriction clause, Default, as shown in Table 123.",{"@attributes":{"id":"p-0477","num":"0540"},"tables":{"@attributes":{"id":"TABLE-US-00122","num":"00122"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 123"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Base Resolvable Type"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[resolvable type]"]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003Default"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\/\/ if the unhandled\/unresolved restriction"]},{"entry":[{},"\u2003is a Negation"]},{"entry":[{},"\u2003\/\/ or Named, then fail the resolution."]},{"entry":[{},"\u2003\/\/ Otherwise, the restriction clause"]},{"entry":[{},"\u2003succeeds."]},{"entry":[{},"\u2003\/\/"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003(Default.TopHypothesis.RestrictionType"]},{"entry":[{},"\u2003\u2003== Negation ||"]},{"entry":[{},"\u2003\u2003Default.TopHypothesis.RestrictionType"]},{"entry":[{},"\u2003\u2003== Named)"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0478","num":"0541"},"tables":{"@attributes":{"id":"TABLE-US-00123","num":"00123"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 124"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003Location<loc \u2003:="]},{"entry":[{},"\u2003\u2003MailFolder>;"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"If this is not the desired behavior, then the developer can easily write code to reject unrecognized\/unhandled restrictions as shown in Table 125.",{"@attributes":{"id":"p-0480","num":"0543"},"tables":{"@attributes":{"id":"TABLE-US-00124","num":"00124"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 125"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"MailEntity with Code to Handle Unrecognized Restrictions."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["Entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003Location<loc \u2003:="]},{"entry":[{},"\u2003\u2003MailFolder>;"]},{"entry":[{},"\u2003\u2003\/\/ \u2002reject \u2002everything \u2002not \u2002recognized"]},{"entry":[{},"\u2003\u2003Default"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Here, the Default restriction clause in MailEntity is tested before the base Entity is invoked. Therefore, \u201cmail received yesterday\u201d will not resolve successfully against MailEntity.","In general, everything outside the scope of on resolve is handled according to conventional C# rules. Code within resolution clauses is also C# code. Thus, it is possible to view the resolvable types as specialized C# classes with special code for determining their constructions.","E5. Programming The LOM","Programming the LOM involves using the restrictions provided by LOM to achieve intended outcomes. This can best be understood by exploring some examples. Thus, the following discussion presents a number of examples, explores in detail the more complicated semantic modeling restrictions and clauses (such as coordination, comparisons, negation, and the like), and discusses some \u201cbest\u201d practices. Details about what kinds of utterances generate which restrictions and the information the restrictions contain was previously discussed above in section D.","Not all restriction types of the LOM are exposed to SPL. SPL focuses on the restriction types to command and control scenarios. LOM, by contrast, has much broader applicability. As new releases are made available, it will be easier to expose a previously uncovered semantic relationship as a new restriction type than to try to narrow or modify an exposed restriction type in subsequent releases for reasons of backward compatibility. In the discussion below, we concentrate mostly on how to use the restrictions for modeling in SPL code. In general, the restrictions surface to the developer as class libraries, similar to the Framework Class Library (FCL) for .Net runtime by Microsoft\u00ae.","The Accompaniment restriction models an entity accompanying the host. Accompaniment is allowed on Entities and Frames. Some examples include meeting with my manager, chat with Bob, email with attachments, and merge File A with File B. The Accompaniment restriction contains one system slot, accomp, of type Entity representing the entity that accompanies the host. The author can constrain the type of entities that can accompany the host as shown in Table 126.",{"@attributes":{"id":"p-0486","num":"0549"},"tables":{"@attributes":{"id":"TABLE-US-00125","num":"00125"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 126"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"\u201cemail with attachments\u201d"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by \u201c"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003Accompaniment<"]},{"entry":[{},"\u2003\u2003accomp := AttachmentEntity>;"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The AsBeing restriction picks out some property of the Doneto.what entity that the verb operates on. The AsBeing restriction is allowed on Frames. Some examples include \u201cshow status as busy\u201d, \u201csave as text file\u201d, and \u201cmake the font large\u201d. The AsBeing restriction has one system slot, restr, which represents the restriction that is being picked out. Instead of allowing any restriction type to fill the slot, the type of the restriction is restricted to particular restriction types. The restriction is limited to particular types by providing overloaded AsBeing restrictions that take the various supported types in its system slot. The following restrictions are supported (for example):\n\n","The AsBeing restriction defines a 3-place relationship between the verb, its Doneto.what entity, and the restrictions on this entity. Although SPL does not enforce strong binding of this relationship, a best practice would be to enforce the relationship as shown in Table 127.",{"@attributes":{"id":"p-0489","num":"0555"},"tables":{"@attributes":{"id":"TABLE-US-00126","num":"00126"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 127"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"\u201cshow my status as busy\u201d."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"denoter "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003English := \u201cbusy\u201d;"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":"entity "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\/\/ models \u201cbusy status\u201d, \u201cstatus is busy\u201d"]},{"entry":[{},"\u2003\u2003Modifier<BusyWords>;"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},"\/* \u2002The \u2002following \u2002AsBeing \u2002restrictions \u2002model"]},{"entry":[{},"\u201cshow \u2002status \u2002as \u2002busy\u201d \u2002with \u2002varying \u2002levels \u2002of"]},{"entry":[{},"strength of binding.*\/"]},{"entry":[{},{"b":["frame ",":="]}]},{"entry":[{},"StatusEntity>"]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\/* Here, we're not making a strong binding"]},{"entry":[{},"\u2003to the DoneTo.what nor to its modifiers*\/"]},{"entry":[{},"\u2003\u2003AsBeing<BusyWords>;"]},{"entry":[{},"\u2003\/* Here, we declare stronger binding (2-"]},{"entry":[{},"\u2003place) with the modifiers of StatusEntity,"]},{"entry":[{},"\u2003but we're not making a strong link to the"]},{"entry":[{},"\u2003DoneTo.what of the verb.*\/"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003AsBeing<typeof(StatusEntity.Modifier.mod"]},{"entry":[{},"\u2003\u2003)>;"]},{"entry":[{},"\u2003\/* Here, we declare a very strong binding"]},{"entry":[{},"\u2003(3-place) \u2002with \u2002the \u2002frame's \u2002DoneTo.what"]},{"entry":[{},"\u2003entity and its modifier.*\/"]},{"entry":[{},"\u2003\u2003AsBeing<"]},{"entry":[{},"\u2003\u2003typeof(DoneTo.what.Modifier.mod)>;"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A Cardinal restriction models cardinality as expressed by numeric quantifiers (for example, \u201c3 files\u201d). The Cardinal restriction is allowed on entities. There is a member on Cardinal object, Cardinal.number, which gives the actual cardinal value as shown in Table 128.",{"@attributes":{"id":"p-0491","num":"0557"},"tables":{"@attributes":{"id":"TABLE-US-00127","num":"00127"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 128"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"\u201c3 email\u201d"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003int CountOfEmail;"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003Cardinal"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003CountOfEmail = Cardinal.number;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Comparison restriction models comparison of an entity with another explicitly-identified entity. It is not used for expressions such as \u201ca bigger file\u201d, where the entity or entities to compare to are left implicit. There are two system slots defined for Comparison: dimension, which is the dimension the comparison is being performed in, and compareTo, which is the entity being compared to. For example, for \u201cbigger file than mydoc.txt\u201d, \u201cbigger\u201d is the dimension of comparison and \u201cmydoc.txt\u201d is the compareTo entity. The dimension is a Restriction type. In general, the Comparison restriction allows a comparison of two entities on some property of the entities.","Some examples of comparison include \u201ca book more about cats than dogs\u201d, \u201cmail larger than 10 KB\u201d, and \u201cmake font smaller than 12 pts\u201d. In some embodiments, it may be desirable to enforce a requirement that the dimension restriction have a Degree modifier attached to it. For example, the phrase \u201cfile big than mydoc.txt\u201d should not resolve because the dimension restriction is not a restriction type.","A Degree restriction models the degree of a restriction, and is allowed on restrictions. It groups together words like very, extremely, slightly, almost, more, less, most, and least. Some examples include \u201calmost in the box\u201d, \u201cextremely red\u201d, \u201cvery large\u201d, and \u201cmore to the left\u201d. The grouped words are categorized into a set representative of \u201cdegree-ness\u201d. The types of degree are as follows:\n\n","For utterances like \u201c10 KB larger file\u201d, this is modeled as \u201c10 KB\u201d (Modifier) modifying \u201cmore\u201d (Degree) and the combined \u201c10 KB more\u201d concept modifying \u201clarge\u201d. By contrast, the utterance \u201c10 KB large file\u201d is modeled as two Modifier restrictions, \u201c10 KB\u201d and \u201clarge\u201d, on \u201cfile\u201d entity (equivalent to \u201clarge, 10 KB file\u201d). Table 129 shows denoter syntax for a denoter list of lexical words that denote \u201clarge\u201d and syntax for a File Entity to which those restrictions are applied.",{"@attributes":{"id":"p-0496","num":"0569"},"tables":{"@attributes":{"id":"TABLE-US-00128","num":"00128"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 129"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"\u201cLARGE\u201d.\/\/ lexical words that denote \u201clarge\u201d"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"denoter "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003English := \u201clarge\u201d, \u201cbig\u201d"]},{"entry":[{},{"b":"}"}]},{"entry":[{},"\/* \u2003Defines \u2003a \u2003Degree \u2003that \u2003must \u2003have \u2003some"]},{"entry":[{},"MeasureEntity \u2003modifying \u2003it. \u2003This \u2003models"]},{"entry":[{},"utterances like \u201c10KB more\u201d*\/"]},{"entry":[{},{"b":"restriction "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003Modifier<mod := MeasureEntity>;"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},"\/* \u2003Define \u2003a \u2003Modifier \u2003restriction \u2003where \u2003the"]},{"entry":[{},"modifiers must be LargeWords *\/"]},{"entry":[{},{"b":"restriction "}]},{"entry":[{},"LargeWords>;"]},{"entry":[{},"\/* \u2003Defines a LargeModifier restriction that must"]},{"entry":[{},"have \u2003a \u2003Degree \u2003restriction. \u2003\u2003This models"]},{"entry":[{},"utterances \u2003like \u2003\u201clarger\u201d, \u2003\u201cless \u2003large\u201d, \u2003and"]},{"entry":[{},"\u201cvery large\u201d *\/"]},{"entry":[{},{"b":"restriction "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003Degree;"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},"\/* \u2003Defines \u2003a \u2003LargeModifier \u2003that \u2003must \u2003have \u2003a"]},{"entry":[{},"ExtentDegree \u2003restriction. \u2003\u2003This \u2003models \u2003\u201c10KB"]},{"entry":[{},"larger\u201d*\/"]},{"entry":[{},{"b":["restriction ",":"]}]},{"entry":[{},"LargeModifier"]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003ExtentDegree;"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},"\/\/And applying those restrictions to an entity:"]},{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003\/\/ \u201clarge file\u201d"]},{"entry":[{},"\u2003\u2003LargeModifier;"]},{"entry":[{},"\u2003\u2003\/\/ \u201c10KB file\u201d"]},{"entry":[{},"\u2003\u2003\u2003Modifier<mod \u2003:="]},{"entry":[{},"\u2003\u2003MeasureEntity>;"]},{"entry":[{},"\u2003\u2003\/\/ \u2003\u201clarger \u2003file\u201d, \u2003\u201cextremely \u2003large"]},{"entry":[{},"\u2003\u2003file\u201d, \u2002\u201cless large file\u201d, and the like"]},{"entry":[{},"\u2003\u2003LargeDegreeModifier;"]},{"entry":[{},"\u2003\u2003\/\/ \u201c10KB larger file\u201d"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003LargeExtentDegreeModifier;"]},{"entry":[{},"\u2003\u2003\/\/ \u201clarger file than mydoc.txt\u201d"]},{"entry":[{},"\u2003\u2003Comparison<"]},{"entry":[{},"\u2003\u2003dimension := LargeDegreeModifier,"]},{"entry":[{},"\u2003\u2003compareTo := FileEntity>;"]},{"entry":[{},"\u2003\u2003\/\/ \u201c10KB larger file than mydoc.txt\u201d"]},{"entry":[{},"\u2003\u2003Comparison<dimension"]},{"entry":[{},"\u2003\u2003:="]},{"entry":[{},"\u2003\u2003LargeExtentDegreeModifier,"]},{"entry":[{},"\u2003\u2003compareTo := FileEntity>;"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Generally, it is not necessary to create separate restriction types for \u201cmore large\u201d and \u201c10 KB larger\u201d. They all could have been placed under LargeModifier. Then consumers, such as FileEntity, simply check LargeModifier's RestrictionCollection property for the existence of \u201c10 KB more\u201d and \u201cmore\u201d in the utterance if desired as shown in Table 130.",{"@attributes":{"id":"p-0498","num":"0571"},"tables":{"@attributes":{"id":"TABLE-US-00129","num":"00129"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 130"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Large Modifier"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"Restriction "}]},{"entry":[{},"LargeWords>"]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003Degree;"]},{"entry":[{},"\u2003ExtentDegree;"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\/*\u201clarge file\u201d, \u201clarger file\u201d, \u201c10KB larger"]},{"entry":[{},"\u2003file\u201c*\/"]},{"entry":[{},"\u2003LargeModifier"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003(LargeModifier.RestrictionCollection(\u201cDegree"]},{"entry":[{},"\u2003\u201d).count > 0)"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A Doer restriction represents the entity doing the action, and is allowed on Frames. For example, \u201cBob opened the file\u201d or \u201cthe file was opened by Bob\u201d both trigger the Doer restriction. The Doer restriction contains one system slot, \u2018who\u2019, of type Entity which represents the actual doer.","Usually, when the frame is used by commands, the Doer is the computer. But, when the frame is used as a frame-based restriction (e.g. \u201cfile opened by Bob\u201d), then the identity of the doer becomes relevant. The author can use the Doer restriction to constrain the type of the doer.","All base frames will have the Doer restriction defined with asproperty to allow easy sub typing at the consumer site as illustrated in Table 131.",{"@attributes":{"id":"p-0502","num":"0575"},"tables":{"@attributes":{"id":"TABLE-US-00130","num":"00130"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 131"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Base Frame (open)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["frame ","denoted \u2003by \u2003\u201c","\u201d \u2003behaves \u2003as"]}]},{"entry":[{},"DefaultVerbClass"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003<who"]},{"entry":[{},"\u2003\u2003:= Entity>;"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\/\/ Use frame but don't constrain the type"]},{"entry":[{},"\/\/of Doer.who"]},{"entry":[{},{"b":["command ","uses "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003\/\/ constrain the entities who can open"]},{"entry":[{},"\u2003\u2003\/\/files to FileUserEntity"]},{"entry":[{},"\u2003\u2003\u2003\u2003open<Doer.who \u2003\u2003:="]},{"entry":[{},"\u2003\u2003FileUserEntity>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Doneto restriction represents the entity that the action is being done to. For example, \u201copen the file\u201d and \u201cthe file was opened\u201d invoke the Doneto restriction. It contains one system slot, what, of type Entity representing the object of the action.","All base frames will have the Doneto restriction defined with asproperty to allow easy sub typing at the consumer site as shown in Table 132.",{"@attributes":{"id":"p-0505","num":"0578"},"tables":{"@attributes":{"id":"TABLE-US-00131","num":"00131"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 132"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Base Frame Open."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ base frame, open"]},{"entry":[{},{"b":["frame ","denoted \u2003by \u2003\u201c","\u201d \u2003behaves \u2003as"]}]},{"entry":[{},"DefaultVerbClass"]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003<who"]},{"entry":[{},"\u2003\u2003:= Entity>;"]},{"entry":[{},"\u2003\u2003<who"]},{"entry":[{},"\u2003\u2003:= Entity>;"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},"\/\/ Define a command that uses the frame and"]},{"entry":[{},"\/\/constrains the DoneTo.what to a FileEntity"]},{"entry":[{},{"b":["command ","uses "]}]},{"entry":[{},"FileEntity>"]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Goal restriction models the endpoint of an action or modification. The Goal restriction is allowed on Frames. Some examples include \u201csend mail to Bob\u201d, \u201cchange password to XXX\u201d. It has one system slot, goal, of type Entity representing the endpoint as shown in Table 133.",{"@attributes":{"id":"p-0507","num":"0580"},"tables":{"@attributes":{"id":"TABLE-US-00132","num":"00132"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 133"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"\u201csend mail to Bob\u201d"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["frame ",": ",":= ",">"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Goal<goal\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003RecipientEntity"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Iteration restriction models repetition of action, and is allowed on Frames. For example, \u201cprint 3 times\u201d triggers the Iteration restriction shown in Table 134.",{"@attributes":{"id":"p-0509","num":"0582"},"tables":{"@attributes":{"id":"TABLE-US-00133","num":"00133"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 134"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Iteration Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ \u201cprint 3 times\u201d"]},{"entry":[{},{"b":["frame ",": "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003NumberOfIterations;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Iteration"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003NumberOfIterations = Iteration.Number;"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Location restriction models the semantics of being located somewhere. The Location restriction is allowed on frames and entities. For example, \u201cmail in Inbox\u201d, \u201cfile located on the desktop\u201d, and \u201csearch the web\u201d all trigger the Location restriction. It has one system slot, loc, of type Entity representing the actual location as shown in Table 135.",{"@attributes":{"id":"p-0511","num":"0584"},"tables":{"@attributes":{"id":"TABLE-US-00134","num":"00134"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 135"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Location Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["frame ",": "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003Location<loc := WebEntity>;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Means restriction is allowed on frames, and is discussed in detail in the LOM in section D. The Modifier restriction is allowed on Frames, Entities and Restrictions. The Modifier restriction represent adjectival modifiers, such as \u201clarge file\u201d, \u201cschool bus\u201d, \u201cfont that is red\u201d, and \u201cprint slowly\u201d. It has one system slot, mod, of type Denoter representing the adjectives. For noun-noun compounds, such as \u201cMSN consumer application\u201d, this can be modeled as:",{"@attributes":{"id":"p-0513","num":"0586"},"tables":{"@attributes":{"id":"TABLE-US-00135","num":"00135"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Modifier(\u201cMSN\u201d) and Modifier(\u201cconsumer\u201d) on"]},{"entry":[{},"\u2003\u2003Entity(\u201capplication\u201d);"]},{"entry":[{},"Modifier(\u201cMSN consumer\u201d) on"]},{"entry":[{},"\u2003\u2003Entity(\u201capplication\u201d);"]},{"entry":[{},"Modifier(\u201cMSN\u201d) and Entity(\u201cconsumer"]},{"entry":[{},"\u2003\u2003application\u201d); and\/or"]},{"entry":[{},"Entity(\u201cMSN consumer application\u201d)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The Named restriction represents the name of an entity. Some examples include \u201cInbox folder\u201d, \u201cfile named foo.txt\u201d, \u201cfile with the name foo.txt\u201d, \u201copen foo.txt\u201d and \u201cthe file foo.txt\u201d. The system slot, name, is the actual name as shown in Table 136.",{"@attributes":{"id":"p-0515","num":"0588"},"tables":{"@attributes":{"id":"TABLE-US-00136","num":"00136"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 136"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"\u201cfile named foo.txt\u201d"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"entity "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Named<name := >"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\/\/ Named.name contains \u201cfoo.txt\u201d"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A Negation restriction on the host means the host is negated, and not that its restriction clauses are negated. Some examples include \u201cdon't allow mail from Joe\u201d and \u201cmail not from Joe\u201d. Table 137 shows the syntax for a Frame with negation.",{"@attributes":{"id":"p-0517","num":"0590"},"tables":{"@attributes":{"id":"TABLE-US-00137","num":"00137"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 137"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Frame with Negation"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ \u201clook on the table\u201d"]},{"entry":[{},{"b":["frame ",": "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Negation"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003\/\/ models \u201cdon't look\u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":"restriction "}]},{"entry":[{},"TableEntity>"]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003Negation"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\/\/ models \u201cnot on the table\u201d"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"If the utterance has a negation but the SPL code does not have a Negation restriction clause, the utterance will fail resolution. This is unlike other restrictions where they are simply dropped if not authored.","Negation restriction is not allowed on entities. For the SPL, the \u201cuniverse\u201d in which the entity occurs depends on how the entity is being used, so negation of the entity is not necessary. For example, in an utterance such as \u201cDisplay everything but the mail,\u201d the universe is everything the application can display, and not necessarily every entity that the application models. In the utterance \u201cdon't allow mail from Bob,\u201d the universe of things that one can allow or disallow might very well be restricted to mail only, so the negation of mail shouldn't make sense in this context. For this reason, entity negation will be handled by consumers of the entities using \u201c!\u201d syntax.","Negation scope disambiguation is determined by the SPL code. For example, \u201cdon't look on the table\u201d can have the following negation scope ambiguities:\n\n",{"@attributes":{"id":"p-0521","num":"0597"},"tables":{"@attributes":{"id":"TABLE-US-00138","num":"00138"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 138"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Negation Scoped"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Negation Scoped over \u201cLook\u201d"]},{"entry":[{},"\/\/ \u201cdon't look on the table (but sit on it)\u201d"]},{"entry":[{},{"b":"frame "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Negation;"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Location<loc\u2003\u2003:="]},{"entry":[{},"\u2003\u2003\u2003\u2003TableEntity>;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},"\/\/ Models negation scoped over Location"]},{"entry":[{},"\/\/ \u201cdon't look on the table (but look under it)\u201d"]},{"entry":[{},{"b":["frame ",": "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003NegatedLocation<loc"]},{"entry":[{},"\u2003\u2003\u2003\u2003:= TableEntity>;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},"\/\/ Models negation scoped over"]},{"entry":[{},"\/\/ Location.loc entity -- \u201cdon't look on the"]},{"entry":[{},"\/\/ table (but look on the chair)\u201d"]},{"entry":[{},{"b":["frame ",": "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Location<loc :="]},{"entry":[{},"\u2003\u2003\u2003\u2003!TableEntity>;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0522","num":"0598"},"tables":{"@attributes":{"id":"TABLE-US-00139","num":"00139"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 139"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ The following negations on look are"]},{"entry":[{},"\/\/equivalent. The first does not allow authors"]},{"entry":[{},"\/\/to insert imperative code to handle the"]},{"entry":[{},"\/\/negation whereas the second one does (i.e. at"]},{"entry":[{},"\/\/the Negation clause of LookFrame."]},{"entry":[{},{"b":["command ","uses !"]}]},{"entry":[{},{"b":["frame ",": "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Negation;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["command ","uses "]}]},{"entry":[{},{"b":"restriction "}]},{"entry":[{},"TableEntity>"]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Negation;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},"\/\/ Similarly, the following negated Locations"]},{"entry":[{},"\/\/ are equivalent, except for the ability to"]},{"entry":[{},"\/\/have code in the Negation clause."]},{"entry":[{},{"b":["frame ",": "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003!Location<loc :="]},{"entry":[{},"\u2003\u2003\u2003\u2003TableEntity>;"]},{"entry":[{},"\u2003\u2003\u2003\u2003NegatedLocation;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The Ordinal restriction models ordinal numerals and other modifiers such as previous that express some notion of position in a sequence. Some examples include \u201cfirst file\u201d, \u201cthird book\u201d, and \u201clast email\u201d. Ordinal restrictions can be applied to other restrictions as well, such as for example, \u201cfirst 3 books\u201d, which is modeled as Ordinal(\u201cfirst\u201d) restriction modifying Cardinal(\u201c3\u201d) restriction as shown in Table 140.",{"@attributes":{"id":"p-0524","num":"0600"},"tables":{"@attributes":{"id":"TABLE-US-00140","num":"00140"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 140"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Ordinal Restrictions."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ models \u201cfirst 3\u201d"]},{"entry":[{},{"b":"restriction "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003Position;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Ordinal"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Position = Ordinal.distance;"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Ordinal"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Possessor restriction models the entity's possessor, and is applied to entities. Some examples include \u201cmy book\u201d and \u201cBob's book\u201d. The system slot, owner, of type Entity represents the possessor of the entity. If the possessor is explicitly uttered, as in \u201cBob's book\u201d, then \u201cBob\u201d will be resolved against the owner slot. If the possessor is a pronoun, as in \u201cher file\u201d, then the runtime will attempt to resolve the pronoun through anaphora resolution. If this anaphora resolution fails to find a possessor entity, then the owner slot will be null. Table 141 shows the syntax for the Possessor restriction.",{"@attributes":{"id":"p-0526","num":"0602"},"tables":{"@attributes":{"id":"TABLE-US-00141","num":"00141"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 141"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Possessor Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Possessor<owner\u2003\u2003:="]},{"entry":[{},"\u2003\u2003\u2003\u2003Entity>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Quantifier restriction is allowed on Entities, and models a quantity expression. Some examples include \u201call files\u201d, \u201ca few books\u201d, and \u201cone third of the page\u201d. The following are the quantifier types:\n\n","The Time restriction models actual time expressions, namely time expressions that can be converted into a point and\/or span in time. Examples include \u201cdelete after 3 days\u201d, \u201cmail from yesterday\u201d, and \u201cschedule for tomorrow from 1-3 pm\u201d. The Time restriction was previously discussed in detail in section D above.","The Topic restriction models subject matter. Some examples include \u201cbook about dogs\u201d, \u201cbook regarding dogs\u201d, and \u201cbook with the subject dogs\u201d. It has one systems slot, topic, of type string representing the topic string. This restriction was discussed previously in detail in section D above. Table 142 shows a BookEntity code block with a Topic.",{"@attributes":{"id":"p-0530","num":"0614"},"tables":{"@attributes":{"id":"TABLE-US-00142","num":"00142"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 142"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"BookEntity."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ book about dogs"]},{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Topic<topic\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003\/\/\u2003\u2003will\u2003contain\u2003the\u2003topic"]},{"entry":[{},"\u2003\u2003\u2003\u2003string, \u201cdogs\u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Conjunction (\u201cand\u201d) and disjunction (\u201cor\u201d) can occur for commands, entities and restrictions. Conjunction and disjunction fall under the heading of Coordination. In general, the ambiguity in coordination comes from how entities and modifiers are distributed over conjunction and disjunction and from bracketing ambiguity in utterances with multiple \u201cand\u201d and \u201cor\u201d operators. Like Negation, this disambiguation is determined by the authored code. For example, with respect to the utterance \u201cfind mail and notes created yesterday\u201d, the SPL author can model this as follows:\n\n","How \u201ccreated yesterday\u201d and \u201cfind\u201d are distributed with its entities, \u201cmail\u201d and \u201cnotes\u201d, is determined by the authored SPL code. For illustration purposes, let's suppose the author codes a FindMailCommand that only understands entities of type MailEntity and a FindNotesCommand that only understands entities of type NotesEntity. Furthermore, the authored code provides that MailEntity does not have the notion of creation time, but NotesEntity does as shown in Table 143.",{"@attributes":{"id":"p-0533","num":"0621"},"tables":{"@attributes":{"id":"TABLE-US-00143","num":"00143"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 143"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Coordination."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["command ","uses ",":="]}]},{"entry":[{},"MailEntity>;"]},{"entry":[{},{"b":["command ","uses "]}]},{"entry":[{},{"b":":="}]},{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003CreateNotesFrame"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["frame ",": ",":="]}]},{"entry":[{},"NotesEntity"]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Time"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Coordinated entities are represented as a list of entities linked together with a coordination type, either \u201cand\u201d or \u201cor\u201d. All entities in the list must be linked together with the same coordination type. Furthermore, all entities in the list must be of the same programming type (e.g. all MailEntity elements).","As a general rule, the runtime will not produce multiple interpretations to model bracketing ambiguities resulting from coordination of the same type. Rather, entities coordinated together with the same type of coordination (i.e. either all with \u201cand\u201d or all with \u201cor\u201d) are modeled as a flat list, and it is left to the application to decide on appropriate bracketing if it matters. For example, take the utterance \u201cfind mail and books and files\u201d. This could mean \u201cfind mail and (books and files)\u201d or \u201cfind (mail and books) and files\u201d. This bracketing ambiguity is not modeled, meaning that only one possible reading will be produced, assuming all entities are of the same SPL type. This utterance is modeled as a flat list where the order of the elements reflects the order in the utterance.","However, with mixed \u201cand\u201d and \u201cor\u201d, the runtime produces multiple readings to model the bracketing ambiguity. Depending on the authored code, these multiple readings may or may not result in multiple resolved interpretations. With respect to the utterance \u201cfind mail or books and files\u201d, since lists of elements must be coordinated with the same coordination type, the following runtime produces the following possible readings (assuming that \u201cmail\u201d, \u201cbooks\u201d, and \u201cfiles\u201d are resolved to the same SPL type and that the Find command takes a list of entities):\n\n","In general, mixed \u201cand\u201d and \u201cor\u201d operators are not common in utterances, so producing multiple interpretations to model bracketing ambiguity should not be too onerous.","In some configurations, it may be necessary to implement Entity lists, which can be specified by the consumers of the entity using [ ] syntax as shown in Table 144.",{"@attributes":{"id":"p-0539","num":"0629"},"tables":{"@attributes":{"id":"TABLE-US-00144","num":"00144"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 144"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Entity Lists."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["command ","uses ",":="]}]},{"entry":[{},{"b":["[","]"]}]},{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d"]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Locationloc \u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003MailFolder"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"An interpretation represents a resolved interpretation of the utterance against the SPL program. Each resolved interpretation contains at least one resolved command. An utterance can result in multiple commands for an interpretation. For example, \u201cfind file foo.txt and print it\u201d, there are two commands in this utterance. The commands in an interpretation are linked together with some condition. Currently, they are linked together by a coordination type, either AND or OR (Other modeling contionals are also possible). The commands in the interpretation do not need to be of the same resolved type.","The following discussion examines various coordination examples to see how elements are distributed over conjunction and disjunction and how the authored code models the coordination. The discussion also examines coordination for commands, entities, and restrictions. For a given utterance, the possible readings are shown to illustrate the ambiguity and distribution.","To reiterate, the SPL author thinks about the semantics of their application (e.g. my Find command can operate over a list of MailEntity). The runtime tries to map the utterance into what is authored in accordance with its linguistic understanding of the rules of distribution of elements over conjunction and disjunction. The code sample in Table 145 is used for the examples presented below.",{"@attributes":{"id":"p-0543","num":"0633"},"tables":{"@attributes":{"id":"TABLE-US-00145","num":"00145"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 145"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Code."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["command ","uses ",":="]}]},{"entry":[{},"MailEntity>;"]},{"entry":[{},{"b":["command ","uses ",":="]}]},{"entry":[{},"FileEntity>;"]},{"entry":[{},{"b":["command ","uses "]}]},{"entry":[{},{"b":":="}]},{"entry":[{},{"b":["command ","uses"]}]},{"entry":[{},"create<DoneTo.what  MailEntity>;"]},{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d : "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Sourcesrc \u2003\u2003"]},{"entry":[{},"\u2003\u2003SenderEntity>;"]},{"entry":[{},"\u2003\u2003\u2003\u2003Location<loc \u2003\u2003:="]},{"entry":[{},"\u2003\u2003MailFolder>;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":["entity ","denoted \u2003by \u2003\u201c","\u201d\u2003:"]}]},{"entry":[{},"ItemEntity;"]},{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d"]}]},{"entry":[{},{"b":": "}]},{"entry":[{},{"b":["entity ","denoted by \u201c","\u201d;"]}]},{"entry":[{},{"b":"\/\/ "}]},{"entry":[{},"\/\/CreatedItemsFrame"]},{"entry":[{},{"b":"entity "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003CreatedItemsFrame<DoneTo.what \u2003\u2003\u2003\u2003:="]},{"entry":[{},"\u2003\u2003\u2003\u2003this>;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"b":"\/\/ "}]},{"entry":[{},{"b":["frame ",": ",":="]}]},{"entry":[{},"ItemEntity"]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003\u2003Time"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The above code resolves the command \u201cFind mail from Bob and delete them\u201d as follows:\n\n","The command \u201cFind and\/or delete mail from Bob\u201d is resolved to have four interpretations as follows:\n\n","The command \u201cFind mail from Bob and\/or delete\u201d is resolved against the above-authored code and results in two possible interpretations as follows:\n\n","The command \u201cOpen file and reply or create mail\u201d is resolved against the code, resulting in the following possible interpretations:\n\n","The command \u201cOpen file or reply and create mail\u201d results in three possible interpretations as follows:\n\n","In general, the \u2018and\u2019 for restrictions is implied by the semantics of SPL. For example, the command \u201cfind mail from Bob and in Inbox\u201d causes two restrictions to fire on MailEntity, a Source restriction and a Location restriction. Therefore, the following discussion examines disjunction for restrictions.","In addition to the above code, we'll add a FindMailListCommand that understands a list of MailEntity using the following line of code.\n\n","The command \u201cfind mail from Bob or created yesterday\u201d resolves to the following interpretation:\n\n","The command \u201cfind mail from Bob or created yesterday and in Inbox\u201d is interpreted as follows:\n\n","In addition to the above commands, a general FindCommand is added that can find a list of mail, notes, and journal items. The FindCommand is shown in Table 1461.",{"@attributes":{"id":"p-0554","num":"0682"},"tables":{"@attributes":{"id":"TABLE-US-00146","num":"00146"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 146"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Find Command."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"command FindCommand uses find<DoneTo.what :="]},{"entry":[{},"[GeneralEntity]>;"]},{"entry":[{},"entity GeneralEntity denoted by \u201cmail\u201d, \u201cnotes\u201d,"]},{"entry":[{},"\u201cjournal items\u201d : ItemEntity"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003on resolve"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003\u2003with \u2003restriction \u2003Source<src \u2003:="]},{"entry":[{},"\u2003\u2003\u2003\u2003SenderEntity>;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"The command \u201cFind mail and\/or notes created yesterday\u201d results in the following interpretations.\n\n","The command \u201cFind mail from Bob and\/or notes created yesterday\u201d results in the following potential interpretations.\n\n","The Command \u201cFind mail, notes, or journal items created yesterday\u201d results in the following potential interpretations.\n\n","The Command \u201cFind mail and notes or journal items created yesterday\u201d results in bracketing issues. Because of the mixed conjunction types (i.e. both \u201cand\u201d and \u201cor\u201d appear in the utterance) and the presence of \u201cfind\u201d commands that take both lists of entities and the singleton entities, there is a potential for many interpretations. It is therefore good practice not to have commands that take list of some entity as well as commands that take that singleton entity. The code is authored so as to generate as many interpretations as possible.\n\n","In some instances, it may be desirable to permit the developer to specify his or her own mapping between various linguistic phenomenon to the restrictions. It may also be desirable to provide \u201cpre-analysis\u201d programming where the patterns affect what restrictions are fired, as opposed to the \u201cpost-analysis\u201d programming in Default. In general, it is desirable to allow a range of patterns from string-based to linguistically-based.","In one embodiment, a general mechanism is provided for specifying patterns that are used internally by LOM developers and externally by SPL developers. External developers should be allowed to use range of patterns, from simple to complex.","In one embodiment, applying patterns will be like using C# attributes as shown in Table 147.",{"@attributes":{"id":"p-0562","num":"0732"},"tables":{"@attributes":{"id":"TABLE-US-00147","num":"00147"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 147"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Applying Patterns."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"entity FlightEntity"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003[MyPattern(\u201cdeparting from\u201d)]"]},{"entry":[{},"\u2003\u2003with restriction Source<src := City>"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In general, the present invention is intended to be as open as possible, allowing developers to create their own patterns, that perhaps are independent of any predefined set. This allows developers to bypass the formalized semantic relationships (i.e. restriction types) and create their own as desired.","With respect to modeling conditionals, in some embodiments, modeling conditional commands may be very valuable. Some simple examples include \u201cif Bob sends me mail, delete it\u201d, \u201cpage me when mail comes from Bob\u201d, \u201cmove the file to c:\\docs after copy it\u201d, and \u201cwarn me before permanently deleting a message\u201d. In general, the mechanism to model this should be similar to that of coordinated commands. In an alternative embodiment, conditionals may be surfaced through a special restriction type.","In some embodiments, authors may want to reason about multiple restrictions in a restriction clause in order to provide narrower interpretations. Authors can mimic the AND reasoning, albeit not elegantly, by storing data in the restriction clauses and reasoning about it in the success clause. Authors can mimic the OR property reasoning by calling out to common functions.","In a preferred embodiment, authors are permitted to specify a list of denotations using imperative code (e.g. calling to databases). The notation for this may vary according to the specific implementation and according to the databases involved.","Generally, the Named restriction provides authors with the name as a string. In one embodiment, authors can create a name class that can be queried by the runtime for a list of names it recognized in a given utterance. For example, considering the phrase \u201cfind Gone with The Wind movie\u201d, the author can create a name class that can recognize \u201cGone with the wind\u201d as a name of a movie. In one embodiment, the SPL can be provided with an overload of Named restriction that takes the name class type as shown in Table 148.",{"@attributes":{"id":"p-0568","num":"0738"},"tables":{"@attributes":{"id":"TABLE-US-00148","num":"00148"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 148"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Overloaded Name Restriction."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"name MovieNames"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003\/\/ some method that the runtime can call to"]},{"entry":[{},"\u2003\u2003get list of recognized"]},{"entry":[{},"\u2003\u2003\/\/ names in a given utterance"]},{"entry":[{},"\u2003\u2003NameList \u2003\u2003FindRecognizedNames(string"]},{"entry":[{},"\u2003\u2003Utterance);"]},{"entry":[{},"}"]},{"entry":[{},"entity MovieEntity denoted by \u201cmovie\u201d"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003on resolve"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003with restriction Named<name := MovieNames>;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In a preferred embodiment, a NamedEntity type is associated with a NamedEntityRecognizer class as follows:","NamedEntity MovieName uses MoveNameRecognizer;",{"@attributes":{"id":"p-0571","num":"0741"},"tables":{"@attributes":{"id":"TABLE-US-00149","num":"00149"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NamedEntity MovieName uses MoveNameRecognizer;"]},{"entry":[{},"class MovieNameRecognizer :"]},{"entry":[{},"NamedEntityRecognizer"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003public override void Recognize( string"]},{"entry":[{},"\u2003\u2003input, \/* other arguments *\/ )"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003\u2003\/\/ Recognize instances of movie titles"]},{"entry":[{},"\u2003\u2003\u2003\u2003\/\/in \u2018input\u2019"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In a preferred embodiment, developers are allowed to specify how unknown\/un-authored commands (e.g. noun phrases) are to be handled. The author can code the application to handle them in place, or ask the runtime to invoke a particular command (or set of commands) for specific entities, or provide a default command handler.","In one embodiment, derived classes are permitted to invoke the restriction clauses of the base class as shown in Table 149.",{"@attributes":{"id":"p-0574","num":"0744"},"tables":{"@attributes":{"id":"TABLE-US-00150","num":"00150"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 149"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Derived Classes Invoke Restriction Clause"},{"entry":"of Base Class."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"entity Entity1"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003with \u2003restriction \u2003Location<loc \u2003:="]},{"entry":[{},"\u2003\u2003SomeEntity>"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"}"]},{"entry":[{},"entity Entity2 : Entity1"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003\/* We want to provide handling for all"]},{"entry":[{},"\u2003\u2003types of locations that are not handled by"]},{"entry":[{},"\u2003\u2003Entity1 but go to Entity1 for locations of"]},{"entry":[{},"\u2003\u2003type SomeEntity. If we do the following,"]},{"entry":[{},"\u2003\u2003Entity1::Location will not get invoked"]},{"entry":[{},"\u2003\u2003since this clause will be tried before that"]},{"entry":[{},"\u2003\u2003of the Entity1.*\/"]},{"entry":[{},"\u2003\u2003with restriction Location<loc := Entity>"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003\u2003\/\/ do processing"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Direct invocation may not be desirable, since resolution of clauses is largely controlled by the runtime. Introducing public\/private\/protected\/ and other restriction clauses and trying to figure out what each means to resolution semantics would add unnecessary complexity. Instead, more constraints can be added (e.g. more declarative constraints) that tell the interpreter to invoke the base restriction clause before invoking its own clause if the base clause succeeded. The compiler can enforce the existence of the clause with exact slot types in the base as shown in Table 150.",{"@attributes":{"id":"p-0576","num":"0746"},"tables":{"@attributes":{"id":"TABLE-US-00151","num":"00151"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 150"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"entity Entity2 : Entity1"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003with invokebase restriction Location<loc :="]},{"entry":[{},"\u2003\u2003SomeEntity>"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003with restriction Location<loc := Entity>"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The semantics of the invokebase is that the base's restriction clause (both declarative and imperative constraints) must succeed before the clause decorated with invokebase is invoked. If it was desirable to change the semantics (i.e. invoke the derived clause before the base), then other syntax should be used. The \u201cwith\u201d clause syntax means that the constraints specified by the clause must be met before the code attached to the clause is executed.","Some verbs interchange Goal and Location. For example, \u201cprint to my printer\u201d means the same as \u201cprint on my printer\u201d. The author should not have to code against two different restrictions, depending on how the location is syntactically realized (i.e. \u201cto\u201d vs. \u201con\u201d). Both restrictions can be surfaced for these verbs, depending on what is authored. In some instances, however, it may be easier to explain to authors that \u201cto\u201d will always be realized as a Goal and forget about trying to explain that for some verbs, Goals can be Location but for others, it cannot.","It is important to understand that abstract types cannot be instantiated (i.e. cannot be directly resolved against), but they are useful for polymorphism and for holding common functionality. If the author has written a command for \u201csend mail to Bob\u201d, then \u201csend to Bob\u201d should also resolve against that command, even though there is no \u201cmail\u201d in the utterance. However, making this default can create a lot of interpretations. In some embodiments, such functionality may be desirable. If empty entities are allowed and are treated as valid by default, the author can write code at the entity's success clause to reject empty entities. If empty entities are not allowed by default (i.e. if there is not evidence of the entity in the utterance, then it won't resolve), then a slot qualifier could be introduced (such as \u201coptional\u201d) that allows commands to accept null entities. In a preferred embodiment, there may be no restriction containing the MailEntity, and the frame or command would explicitly fail resolution, if the author cared to check for this case.","Although the present invention has been described with reference to particular embodiments, workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention.","In this embodiment, Microsoft Outlook\u00ae was enabled for text and speech input using the SPL and the LOM. Most of the enabling was performed by a summer intern, who had no linguistic knowledge or training. The SPL code was designed to compile to and run on Microsoft .Net platform, and the code interacts with Microsoft Outlook via the Outlook 2002 object model and CDO (Collaboration Data Objects) to do the binding and to execute the commands.","Some advanced searching has been enabled, which reasons about different data sources. Some examples include the following scenarios:\n\n","Additionally, the system performs advanced reasoning and modeling such as the following:\n\n","The following discussion analyzes a command from the point of view of the developer. The discussion mimics what the developer sees as he\/she debugs the code. The command is \u201csend mail about package to Seattle group\u201d. This sentence has two possible meanings:\n\n","Depending on the domain knowledge, one or both of these interpretations will be in the final interpretation list.","Below is the code in its entirety. SPL keywords or reserved words are in bold. Code snippets will be left out as the analysis proceeds through the steps:",{"@attributes":{"id":"p-0587","num":"0764"},"tables":{"@attributes":{"id":"TABLE-US-00152","num":"00152"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"b":["command ","uses "]}},{"entry":{"b":"{"}},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return Outlook.IsInSendMailContext( );"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Outlook.SendMail(SendMailFrame.Mail,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003SendMailFrame.Targets);"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\/\/ do whatever cleanup is necessary"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":{"b":"}"}},{"entry":{"b":"frame "}},{"entry":{"b":"{"}},{"entry":"\u2003\u2003public string[ ] Targets;"},{"entry":"\u2003\u2003public MailEntity Mail;"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003DoneTo<what := MailEntity>"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Mail = DoneTo.what.MailEntity;"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003Goal<goal := DLEntity>"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Targets = Goal.goal.DLEntity.People;"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":{"b":"}"}},{"entry":{"b":["entity ","denoted by "]}},{"entry":{"b":"{"}},{"entry":"\u2003\u2003public string MailSubject;"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003Topic<topic := string>"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003MailSubject = Topic.topic.Phrase.topic;"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":{"b":"}"}},{"entry":{"b":["entity ","denoted by "]}},{"entry":{"b":"{"}},{"entry":"\u2003\u2003public string[ ] People;"},{"entry":"\u2003\u2003with restriction Named<name := Entity>"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003People = Outlook.GetDLMembers(Named.name.Phrase.text);"},{"entry":"\u2003\u2003\u2003\u2003if (People == null)"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return false;"},{"entry":"\u2003\u2003\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":{"b":"}"}},{"entry":{"b":"denote "}},{"entry":{"b":"{"}},{"entry":"\u2003\u2003English := (\u201cmail\u201d), (\u201cemail\u201d), (\u201celectronic mail\u201d),"},{"entry":"\u2003\u2003(\u201ce-mail\u201d);"},{"entry":"\u2003\u2003French := (\u201cmail\u201d), (\u201cemail\u201d), (\u201ccourriel\u201d),"},{"entry":"\u2003\u2003(\u201cmessage \u00e9lectronique\u201d);"},{"entry":{"b":"}"}},{"entry":{"b":"denote "}},{"entry":{"b":"{"}},{"entry":"\u2003\u2003English := (\u201cdistribution list\u201d), (\u201clist\u201d), (\u201cgroup\u201d),"},{"entry":{"b":["noun","noun"]}},{"entry":"\u2003\u2003French := (\u201cliste de distribution\u201d), (\u201cdl\u201d);"},{"entry":{"b":"}"}},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Referring again to the command, the first interpretation is that the subject of the mail is \u201cpackage to seattle group\u201d as follows:\n\n",{"@attributes":{"id":"p-0589","num":"0767"},"tables":{"@attributes":{"id":"TABLE-US-00153","num":"00153"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"b":"\u201csend mail about package to seattle group\u201d"}},{"entry":{"b":"command "}},{"entry":{"b":"{"}},{"entry":"\u2003"},{"entry":"\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003\u2003return Outlook.IsInSendMailContext( );"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003\u2003Outlook.SendMail(SendMailFrame.Mail, SendMailFrame.Targets);"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003\u2003\/\/ do whatever cleanup is necessary"},{"entry":"\u2003\u2003"},{"entry":"\u2003"},{"entry":{"b":"}"}},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The constructor for the command is invoked and the code in the clause is executed. If the clause returns \u201cfalse\u201d, then further analysis against this command is stopped. In this case, if SendMailContext( ) returns false (i.e. the application is not currently in the context for sending mail) then the analysis stops.","Assuming that the application can send mail, the SPL interpreter continues its analysis. The next object that gets invoked is the SendMailFrame because the SendMailCommands says it uses the SendMailFrame. The interpreter knows that the word",{"@attributes":{"id":"p-0592","num":"0770"},"tables":{"@attributes":{"id":"TABLE-US-00154","num":"00154"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"\u201csend mail about package to seattle group\u201d"}]},{"entry":[{},{"b":"frame "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003public string[ ] Targets;"]},{"entry":[{},"\u2003public MailEntity Mail;"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003DoneTo<what := MailEntity>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003Mail = DoneTo.what.MailEntity;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003Goal<goal := DLEntity>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003Targets = Goal.goal.DLEntity.People;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0593","num":"0771"},"tables":{"@attributes":{"id":"TABLE-US-00155","num":"00155"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"\u201csend mail about package to seattle group\u201d"}]},{"entry":[{},{"b":"frame "}]},{"entry":[{},"{"]},{"entry":[{},"\u2003public string[ ] Targets;"]},{"entry":[{},"\u2003public MailEntity Mail;"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003DoneTo<what := MailEntity>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003Mail = DoneTo.what.MailEntity;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003Goal<goal := DLEntity>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003Targets = Goal.goal.DLEntity.People;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0594","num":"0772"},"tables":{"@attributes":{"id":"TABLE-US-00156","num":"00156"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"entity "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003public string MailSubject;"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003Topic<topic := string>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003MailSubject = Topic.topic.Phrase.topic;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"As with the other objects, the interpreter invokes the constructor. Since there is no constructor, the default constructor is invoked, which will succeed.","Entities have the concept of being denoted by a list of words. In this case, the interpreter checks to see if \u2018mail\u2019 is a denoter for MailEntity by looking at the English list for MailEntityWords:",{"@attributes":{"id":"p-0597","num":"0775"},"tables":{"@attributes":{"id":"TABLE-US-00157","num":"00157"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"b":"\u201csend mail about package to seattle group\u201d"}},{"entry":{"b":"denote "}},{"entry":{"b":"{"}},{"entry":"\u2003English := mail, email, electronic mail,"},{"entry":"\u2003e-mail;"},{"entry":"\u2003French := mail, email, ourriel,"},{"entry":"\u2003message \u00e9lectronique;"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Next, the interpreter tries to resolve the restrictions on \u2018mail\u2019 against what is coded in MailEntity. In this case, \u201cabout package to seattle group\u201d is a Topic restriction where the actual topic is \u201cpackage to seattle group\u201d:",{"@attributes":{"id":"p-0599","num":"0777"},"tables":{"@attributes":{"id":"TABLE-US-00158","num":"00158"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"\u201csend mail about package to seattle group\u201d"}]},{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003public string MailSubject;"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003Topic<topic := string>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003MailSubject = Topic.topic.Phrase.topic;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The interpreter tries to resolve the actual topic against the slot of the Topic restriction. The \u2018topic\u2019 slot is a string, so no resolution is necessary. The code in the Topic clause is executed.",{"@attributes":{"id":"p-0601","num":"0779"},"tables":{"@attributes":{"id":"TABLE-US-00159","num":"00159"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"\u201csend mail about package to seattle group\u201d"}]},{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003public string MailSubject;"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003Topic<topic := string>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003MailSubject = Topic.topic.Phrase.topic;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The code stores the text of the topic into a member variable, MailSubject. The actual text of the topic is retrieved via the Linguistic Object Model (LOM). The interpreter is now done with the MailEntity object. It invokes the default success destructor for MailEntity since one was not coded.","Control flow is returned to the SendMailFrame where code is executed in the Doneto clause:",{"@attributes":{"id":"p-0604","num":"0782"},"tables":{"@attributes":{"id":"TABLE-US-00160","num":"00160"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"frame "}]},{"entry":[{},{"b":"{"}]},{"entry":[{},"\u2003public string[ ] Targets;"]},{"entry":[{},"\u2003public MailEntity Mail;"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003DoneTo<what := MailEntity>"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003\u2003Mail = DoneTo.what.MailEntity;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003Goal<goal := DLEntity>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003Targets = Goal.goal.DLEntity.People;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"This code just stores the MailEntity object into a member variable. {NOTE: This is where the second interpretation (discussed below) begins}. The interpreter is done resolving the SendMailFrame object and invokes the default success destructor since one was not provided.","Control flow returns to the SendMailCommand. At this point, the interpreter is done resolving the complete command. The success destructor for the SendMailCommand is invoked.",{"@attributes":{"id":"p-0607","num":"0785"},"tables":{"@attributes":{"id":"TABLE-US-00161","num":"00161"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"b":["command ","uses "]}},{"entry":{"b":"{"}},{"entry":"\u2003"},{"entry":"\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003\u2003return Outlook.IsInSendMailContext( );"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003\u2003Outlook.SendMail(SendMailFrame.Mail, SendMailFrame.Targets);"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003\u2003\/\/ do whatever cleanup is necessary"},{"entry":"\u2003\u2003"},{"entry":"\u2003"},{"entry":{"b":"}"}},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":[{},{}]},"Referring now to the second possible interpretation:\n\n","The interpreter knows that \u201cto seattle group\u201d is a Goal restriction on \u2018send\u2019:",{"@attributes":{"id":"p-0610","num":"0789"},"tables":{"@attributes":{"id":"TABLE-US-00162","num":"00162"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"\u201csend mail about package to seattle group\u201d"}]},{"entry":[{},{"b":"frame "}]},{"entry":[{},"{"]},{"entry":[{},"\u2003public string[ ] Targets;"]},{"entry":[{},"\u2003public MailEntity Mail;"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003\u2003DoneTo<what := MailEntity>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003Mail = DoneTo.what.MailEntity;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003Goal<goal := DLEntity>"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003\u2003\u2003Targets = Goal.goal.DLEntity.People;"]},{"entry":[{},"\u2003\u2003"]},{"entry":[{},"\u2003"]},{"entry":[{},{"b":"}"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0611","num":"0790"},"tables":{"@attributes":{"id":"TABLE-US-00163","num":"00163"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"\u201csend mail about package to seattle group\u201d"}]},{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},"{"]},{"entry":[{},"\u2003public string[ ] People;"]},{"entry":[{},"\u2003Named<name := string>"]},{"entry":[{},"\u2003{"]},{"entry":[{},"\u2003\u2003People = Outlook.GetDLMembers(Named.name);"]},{"entry":[{},"\u2003\u2003if (People == null)"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003return false;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0612","num":"0791"},"tables":{"@attributes":{"id":"TABLE-US-00164","num":"00164"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"denote "}]},{"entry":[{},"{"]},{"entry":[{},"\u2003English := (\u201cdistribution list\u201d), (\u201clist\u201d), (\u201cgroup\u201d),"]},{"entry":[{},"noun(\u201cdisc\u201d), (\u201cdiscussion group\u201d);"]},{"entry":[{},"\u2003French := (\u201cliste de distribution\u201d), (\u201cdl\u201d);"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0613","num":"0792"},"tables":{"@attributes":{"id":"TABLE-US-00165","num":"00165"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":["entity ","denoted by "]}]},{"entry":[{},"{"]},{"entry":[{},"\u2003public string[ ] People;"]},{"entry":[{},"\u2003Named<name := string>"]},{"entry":[{},"\u2003{"]},{"entry":[{},"\u2003\u2003People = Outlook.GetDLMembers(Named.name);"]},{"entry":[{},"\u2003\u2003if (People == null)"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003return false;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The code will return \u2018true\u2019 only if \u2018seattle\u2019 is a valid distribution group. If it's not a recognized distribution group, then the clause returns \u2018false\u2019. This is how domain specific knowledge affects the interpretations that the SPL interpreter returns. If \u2018seattle\u2019 is not a distribution group, then resolution of this interpretation will fail and only the first interpretation will be returned.","The interpreter is done resolving the command. Depending on whether \u2018seattle\u2019 is a recognized distribution group or not, either the success or the failed destructor will be invoked.","Control flow returns to the SendMailFrame. If the resolution of DLEntity failed, then the code in the Goal clause will not be executed and the SendMailFrame fails resolution. Otherwise, the code is run and the resolution succeeds.",{"@attributes":{"id":"p-0617","num":"0796"},"tables":{"@attributes":{"id":"TABLE-US-00166","num":"00166"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"b":"frame "}]},{"entry":[{},"{"]},{"entry":[{},"\u2003public string[ ] Targets;"]},{"entry":[{},"\u2003public MailEntity Mail;"]},{"entry":[{},"\u2003"]},{"entry":[{},"\u2003{"]},{"entry":[{},"\u2003\u2003DoneTo<what := MailEntity>"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003Mail = DoneTo.what.MailEntity;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003Goal<goal := DLEntity>"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003Targets = Goal.goal.DLEntity.People;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0618","num":"0797"},"tables":{"@attributes":{"id":"TABLE-US-00167","num":"00167"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"b":["command ","uses "]}},{"entry":"{"},{"entry":"\u2003"},{"entry":"\u2003{"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003return Outlook.IsInSendMailContext( );"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003Outlook.SendMail(SendMailFrame.Mail, SendMailFrame.Targets);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\/\/ do whatever cleanup is necessary"},{"entry":"\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
