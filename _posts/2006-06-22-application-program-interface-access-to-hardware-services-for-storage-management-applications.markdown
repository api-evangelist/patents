---
title: Application program interface access to hardware services for storage management applications
abstract: A method and device for using a set of APIs are provided. Some of the functions which used to be performed by software are now accelerated through hardware.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07594049&OS=07594049&RS=07594049
owner: 
number: 07594049
owner_city: 
owner_country: 
publication_date: 20060622
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims is a continuation application of the utility application filed May 2, 2003 now U.S. Pat. No. 7,093,038 titled \u201cAPPLICATION PROGRAM INTERFACE ACCESS TO HARDWARE SERVICES FOR STORAGE MANAGEMENT APPLICATIONS\u201d with a Ser. No. 10\/428,638, which claimed priority to Provisional Application No. 60\/380,160 filed May 6, 2002, entitled \u201cAPPLICATION PROGRAM INTERFACE-ACCESS TO HARDWARE SERVICES FOR STORAGE MANAGEMENT APPLICATIONS, which is hereby incorporated in its entirety by reference.","1. Field of the Invention","The present invention generally relates to an application program interface (API), more specifically, the present invention relates to an API having access to hardware services for storage management applications. Yet more specifically, the present invention relates to a Virtualization Acceleration Application Programming Interface (VAAPI)","2. Description of the Related Art","Application program interface (API) also known as application programming interface is known in the art. API can be considered as a set of specific methods prescribed by a computer operating system or by an application program, which a programmer who is writing an application program can make request of the operating system or another application.","The explosive growth if storage networks is being driven by the collaboration of business computing and the need for business continuity. The storage data management silicon model makes the assumption that the next logical step in managing storage networks is to move some of the storage management functionality into storage network with the implementation located in switches, router, appliances, NAS and SAN attached arrays. This model envisions storage virtualization application implemented onto storage network nodes using specialized storage data management silicon to ensure that the node does not become a severe performance bottleneck to the network traffic flowing through it.","To implement storage virtualization in the network, the storage virtualization application is effectively split into two function components; the control path and the data path, as shown in . The control path is responsible for all of the control functions of virtualization; including setting up the configuration, changing the configuration, network and availability management, fault tolerance, and error recovery. The data path component is responsible for moving the I\/O through the virtualization application.","The performance characteristics of the storage virtualization engine in this paradigm depends on the amount of the data path that is implemented in hardware. A silicon-assisted solution can significantly reduce latencies over software solutions and increase IOP performance many times.","Therefore, it is desiouse to have specialized APIs residing in the datapath. Further, it is desiouse to have a storage network I\/O handling framework and a set of APIs for better performance.","A storage network I\/O handling system including a set of APIs are provided for enabling the separation of Control path (configuration and complex exception handling) and data path (storage I\/O execution and relatively simpler exception handling) related computing.","A storage network I\/O handling system including a set of APIs is provided, in which the data path processing is kept relatively simple in comparison to control path processing and the system is being accelerated with specialized hardware (HW) for achieving higher performance.","A storage network I\/O handling system including a set of specialized APIs is provided for defining abstracted interfaces to the configuration information repository from the Storage Management applications in the control path.","A storage network I\/O handling system including a set of APIs is provided for defining a set of APIs for device configuration, configuration loading, exception reporting, and access to HW accelerated I\/O processing pipeline such as a storage management processor.","A storage network I\/O handling system including a set of APIs is provided for optimizing storage network environments with emphasis on performance and ease of development.","A storage network I\/O handling system including a set of APIs is provided for facilitating implementations with 10\u00d7 or greater performance scalability characteristics as compared to known processor implementations","A storage network I\/O handling system including a set of APIs is provided with the system further having an extensible and partition-able framework that allows easy integration with a vendor's unique content and APIs","A storage network I\/O handling system including a set of APIs is provided for leveraging the industry standardization efforts as much as possible. For example, CIM and WBEM are heavily leveraged in the repository component of the present application.","A storage network I\/O handling system including a set of APIs is provided for easy adaptation for implementations other than only CIM\/WBEM, including SNMP and proprietary interfaces","A storage network I\/O handling system including a set of APIs is provided for a wide adoptablity, or support to other vendor storage systems.","Accordingly, a storage network I\/O handling system including a set of APIs is provided.","Accordingly, a method is provided. The method includes: providing a virtual disk for an I\/O request; providing an I\/O execution plan based upon the I\/O request; providing an I\/O plan executor in hardware; and using the I\/O plan executor to execute the I\/O plan, thereby at least some storage related function are performed by the I\/O plan executor in hardware.","Accordingly, a storage virtualization engine coupled to a control path and a data path is provided. The engine comprising: a software sub-engine having the control path and data path; and a virtualization repository; a hardware sub-engine having an accelerated data path; an VAAPI coupling the software sub-engine with the hardware sub-engine; a management application coupled to the software sub-engine, wherein command therefrom are processed by the control path, thereby some function are performed by hardware through the VAAPI and data are accelerated through the accelerated data path.","Accordingly, a storage management system having a control path and a data path is provided. The system comprising: a storage virtualization engine, the engine includes: a software sub-engine having the control path and data path; and a virtualization repository; a hardware sub-engine having an accelerated data path; an VAAPI coupling the software sub-engine with the hardware sub-engine; a management application coupled to the software sub-engine, wherein command therefrom are processed by the control path, thereby some function are performed by hardware through the VAAPI and data are accelerated through the accelerated data path.","The present invention provides a Virtualization Acceleration Application Programming Interface (VAAPI) which is interposed between a hardware layer and a software layer. For detailed description of VAAPI, please refer to infra. The present invention intendes to create or modify existing storage virtualization applications to take advantage of the fast path acceleration provided by storage data management silicon, which is included in a commonly assigned application, entitled STORAGE MANAGEMENT PROCESSOR, provisional application No. 60\/427,593, filed on Nov. 19, 2002. Further, VAAPI is a strategy to bring concurrence within the storage virtualization industry for the use of a common platform. By providing hardware-assisted data movement and related functionality through VAAPI, virualization application vendors can boost their performance while positioning their technology on an open platform.","Referring to , VAAPI  is a storage network I\/O handling framework and a set of APIs for the following purposes. The purposeses include: enabling separation of a control path  (configuration and complex exception handling) and data path  (storage I\/O execution and relatively simpler exception handling) related computing. The data path  processing is kept relatively simple in comparison to control path  processing and data path  is being accelerated with specialized HW for achieving higher performance. VAAPI  further defines abstracted interfaces to the configuration information repository from the Storage Management applications in the control path ; and defines a set of APIs for device configuration, configuration loading, exception reporting and access to HW accelerated I\/O processing pipeline in a storage management processor  (silicon).","VAAPI  resides in the datapath  and is a mechanism for implementing the steady state portion of I\/O in hardware for maximum performance. A storage virualization map (not shown) is created in the control portion  of the storage virtualization and is then pushed to the silicon  via the VAAPI interface . If no exceptions to the I\/O occur, it is handled completely in the storage data management silicon  with no external processor (not shown) intervention. In the case of exceptions, the VAAPI framework  is able to push the I\/O and the exception to the external processor for processing. The VAAPI framework  allows for dynamic updates of the mapping tables maintained in the storage data management silicon . Changes in configurations can occur during runtime via the control portion  and be pushed to the silicon  via VAAPI  without requiring I\/O interruption.","The steady state component of the data path  that is implemented in the storage data management silicon  is referred to as the Accelerated Path (AP).","A typical prior art enterprise vendor solution is shown in .","The present invention provides the VAAPI which may operate in new virtualization environments that use Common Information Model\/Web Based Enterprise Management (CIM\/WBEM) interfaces look like the one shown in . Compared with , the interface of the present invention includes a VAAPI layer  interposed between a hardware subsystem  which includes an accelerated data path  and a hardware acceleration interface . Hardware subsystem  is adapted to receive data flow , which terminates at terminating points , . Terminating points ,  may be such devices as hard disks, virtual disks, or tapes. Hardware acceleration interface  is interposed between accelerated data path  and VAAPI layer .","In the present invention, such as in the CIM-based approach, necessary strategic foundations are provided while offering a common basis for adapting to a variety of other environments such as those using Simple Network Management Protocol (SNMP) or proprietary protocols.","Further, the present invention comtemplates a system that has a management application component  and a Virtualization Engine . The management application  generates and handles the control path information. For example, it may use CIM\/WEBM-based interfaces to exchange control information with the Virtualization Engine , which is implemented in the hardware.","As can be seen, the present invention provides VAAPI layer  and hardware subsystem  over prior art systems such as the one shown in .","The control path  may populate a virtualization repository  such as the CIM-based repository using standard CIM\/WBEM formats. A Mapping Table (not shown) is implemented in the hardware and provides the mapping from the virtual storage to the physical storage. The CIM-base repository  provides the static information for the storage mapping in the hardware.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 5","b":["50","50","12","18","16"]},"In  there are two repositories shown, one for the software environment and one for the hardware environment. The software repository  supports existing vendor's current protocols and related data structures. The hardware repository  supports CIM\/WBEM and is provided by the hardware acceleration vendor. The two repositories ,  need to populate each other and maintain a certain level of synchronization. This functionality is, in part, accomplished by the VAAPI interface .","Along with normal data and address flows , VAAPI  also supports delegation of high-usage control functions from the software virtualization engine  to the hardware virtualization engine . This transfer helps improve data rates and related performances. In order to accomplish this delegation function, VAAPI  must also include the interfaces for the software control path  module to interact with the hardware acceleration engine . This permits VAAPI  to handle some of the exception conditions that are normally handled by the current software-based Control Path component.","The overall processing of an I\/O is shown in a flowchart  of . Referring to , a virtual disk for an I\/O is identified from the transport protocol information and validated for proper access and proper client, etc (step ). An appropriate I\/O execution plan is identified for the I\/O request; the logical block addresses are translated to physical block addresses and the corresponding physical devices are identified (step ). If the I\/O plan can be handled by the acceleration hardware, then the I\/O is handed off to the I\/O plan executor hardware (step ). If it is determined that the I\/O plan is not executable by the acceleration hardware, it is then sent to the control path software (step ). In case of any exception in the I\/O plan, the plan is sent to the control path software (step ). The control path software analyzes the incoming I\/O plans (step ), and after performing required I\/O operations and\/or I\/O exception processing operations (step ), resubmits the original I\/O plan to the acceleration hardware.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 7"},"To accomplish the previously-described hardware\/software-based shared processing scheme, there are requirements for sharing information and control at various places within the hardware storage virtualization environment. These interface points are broadly defined in terms of the following API groups. The groups are CIM\/WBEM APIs, RI-APIs, alternative RI-APIs, AP-APIs, I\/O-APIs, and UA-APIs.","CIM\/WBEM APIs are Standard CIM\/WBEM APIs used to access a CIM implementation. These APIs are defined in CIM\/WBEM standards documents. RI-APIs are APIs used by the control path software for interfacing with the storage virtualization information repository. Implementation of this API group is preferably based on top of CIM\/WBEM APIs with the repository related software provided. RI-APIs (Alternative) are, if the storage virtualization information repository of a vendor is such that the repository could not be translated to a CIM repository, then the RI-APIs are to be implemented on top of vendor-provided APIs. AP-APIs are APIs the control path software uses to populate the acceleration hardware with the storage virtualization information that it gets with the RI-APIs. I\/O-APIs are APIs used in the control path software for sharing the control and data related to an I\/O plan with the acceleration hardware. UA-APIs are APIs that provide utility functions, (e.g. Free buffers, etc.)","Repository Population and Synchronization (RPS-APIs)","The repository used by the hardware (AP) environment is an implementation of standard CIM model with standard CIM\/WBEM APIs that are supported over an HTTPS\/XML protocol. These APIs are not described in this document since they are described elsewhere in standards documents.","Repository Interface (RI-APIs) and Accelerated Path (AP-APIs)","The AP-APIs and the corresponding RI-APIs are further classified into the following groups based on their information content. Normally, for any AP-APIs, there will be a complimentary API in the RI-API.","The following are subcategories associated with VAAPI. These configurations are Virtual Disk Configuration, Storage Services Configuration, I\/O Plan Exception Handling Configuration, CP-AP Shared I\/O plans, AP Pass-through I\/O plans, Physical Devices Discovery and Management, CP-AP Transaction Management, Event Handling, Performance and Statistics, and Utility Functions.","Virtual Disk Configuration","This group of APIs deals with configuration related to individual virtual disk and basic virtualization (i.e., disk concatenation and striping). In the VAAPI framework, I\/Os that requires involvement of multiple virtual disks are categorized as Storage Services related I\/Os. For example, mirroring, snapshot, on-line migration etc. are termed as storage services and configuration requirements for these services are handled through a group of APIs termed as Storage Services Configuration that is described later.","The following are examples of VAAPIs of the present invention. The prefixes used to mark this group of APIs are RI (RepositoryInterface) and AP (Accelerated Path).",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["RI_GetVDList_vaVendor","Gets the list of all virtual disks from the"]},{"entry":[{},"repository."]},{"entry":["RI_GetVDInfo_vaVendor","Gets the information for a Virtual Disk"]},{"entry":[{},"from the repository."]},{"entry":["RI_GetMapVD_vaVendor","Gets the full map of a virtual disk from"]},{"entry":[{},"the repository."]},{"entry":["AP_SetMapVD_vaVendor","Sets the full map of a virtual disk in AP"]},{"entry":[{},"hardware, if a map already exists then it"]},{"entry":[{},"is replaced with the new one."]},{"entry":["RI_GetClientInfo_vaVendor","Gets the information for a client from"]},{"entry":[{},"the repository."]},{"entry":["AP_SetClientInfo_vaVendor","Sets the information for a Client in AP"]},{"entry":[{},"hardware."]},{"entry":["RI_GetAclVD_vaVendor","Gets the ACL setup for a virtual disk."]},{"entry":["AP_SetAclVD_vaVendor","Sets the ACL for a virtual disk in the"]},{"entry":[{},"AP hardware."]},{"entry":["RI_GetAclVDClient_vaVendor","Gets the ACL setup for a Client for a"]},{"entry":[{},"virtual disk."]},{"entry":["AP_SetAclVDClient_vaVendor","Sets the ACL setup for a Client for a"]},{"entry":[{},"virtual disk in AP hardware."]},{"entry":["RI_GetCoSVD_vaVendor","Gets Class of Service for a virtual disk"]},{"entry":[{},"from the repository."]},{"entry":["AP_SetCoSVD_vaVendor","Sets Class of Service for a virtual"]},{"entry":[{},"disk in AP hardware."]},{"entry":["RI_GetCoSVDClient_vaVendor","Gets Class of Service for a Client for a"]},{"entry":[{},"virtual disk from the repository."]},{"entry":["AP_SetCoSVDClient_vaVendor","Sets Class of Service for a Client for a"]},{"entry":[{},"virtual disk in AP hardware."]},{"entry":["AP_SetStatusVD_vaVendor","Sets the status of a virtual disk. The"]},{"entry":[{},"state applies to all Clients on a virtual"]},{"entry":[{},"disk. (enable, disable, quiescent)."]},{"entry":["AP_SetStatusVDClient_vaVendor","Sets the status of a virtual disk for a"]},{"entry":[{},"Client in AP hardware."]},{"entry":["RI_GetStatsCollectionDirectiveVD_vaVendor","Gets the statistics collection directive"]},{"entry":[{},"for a virtual disk from the repository."]},{"entry":["AP_SetStatsCollectionDirectiveVD_vaVendor","Sets the statistics collection for a virtual"]},{"entry":[{},"disk in AP hardware."]},{"entry":["RI_GetVDStorageSegment_vaVendor","Gets the map of a specific storage"]},{"entry":[{},"segment (in iDiSX terminology"]},{"entry":[{},"allocation) for a virtual disk from the"]},{"entry":[{},"repository."]},{"entry":["AP_SetVDStorageSegment_vaVendor","Sets the map of a specific storage segment"]},{"entry":[{},"for a virtual disk in the acceleration"]},{"entry":[{},"path. This API could be used to replace"]},{"entry":[{},"part of the map of a VD in the accelerated"]},{"entry":[{},"path at allocation granularity. If the"]},{"entry":[{},"supplied allocation is immediately"]},{"entry":[{},"following the currently used allocation"]},{"entry":[{},"numbers of a VD (i.e., it is not present"]},{"entry":[{},"in the acceleration path) then this is"]},{"entry":[{},"interpreted as extending the size of a VD."]},{"entry":["RI_GetVDStorageExtent_vaVendor","Gets the map of a specific storage extent"]},{"entry":[{},"within an allocation for a virtual disk from"]},{"entry":[{},"the repository."]},{"entry":["AP_SetVDStorageExtent_vaVendor","Sets the map of a specific storage extent"]},{"entry":[{},"within an allocation for a virtual disk in"]},{"entry":[{},"the acceleration path. This API could be"]},{"entry":[{},"used to replace part of the map of a VD"]},{"entry":[{},"in the accelerated path at the storage"]},{"entry":[{},"extent granularity."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"This group of APIs deals with configuration related to various storage services applications like mirroring, snapshot, on-line migration, dynamic multi-path etc. This configuration group may involve more than one virtual disks. For example, establishing a mirror virtual disk for another virtual disk is done through an API in this group.","The prefixes used by this group of APIs are","SSRI (Storage Services Repository Interface) and","SSAP (Storage Services Accelerated Path).",{"@attributes":{"id":"p-0058","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["SSRI_GetIOPlan_vaVendor","For a given virtual disk, the API re-"]},{"entry":[{},"turns the list of other virtual disks"]},{"entry":[{},"that are associated with it in order to"]},{"entry":[{},"implement the currently configured"]},{"entry":[{},"storage services on the given"]},{"entry":[{},"virtual disk. For example, if for a"]},{"entry":[{},"virtual disk VD-A, there are two"]},{"entry":[{},"mirrors VD-A-m1 and VD-A-m2,"]},{"entry":[{},"then this API will return a list giving"]},{"entry":[{},"the identifications of VD-A-m1 and"]},{"entry":[{},"VD-A-m2 along with the information"]},{"entry":[{},"that they are both mirror devices of"]},{"entry":[{},"VD-A."]},{"entry":["SSAP_SetIOPlan_vaVendor","For a given virtual disk, with the"]},{"entry":[{},"result of the"]},{"entry":[{},"API SSRI_GetIOPlan_vaVendor,"]},{"entry":[{},"this API will set up the I\/O plan for"]},{"entry":[{},"the given virtual disk within the"]},{"entry":[{},"accelerated path."]},{"entry":["SSAP_ModifyIOPlan_vaVendor","Modifies an existing I\/O plan for a"]},{"entry":[{},"virtual disk in the accelerated path."]},{"entry":[{},"For example, to remove the mirror"]},{"entry":[{},"VD-A-m1 from the virtual disk"]},{"entry":[{},"VD-A, this API will need to be used."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The APIs in this group provide configuration related to handling of exceptions in an I\/O plan in the accelerated path.","The APIs are prefixed with PERI (Plan Exception Repository Interface) and PEAP (Plan Exception Accelerated Path).",{"@attributes":{"id":"p-0061","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PERI_GetIOPlanParam_vaVendor","Gets the value of a given parameter from the"]},{"entry":[{},"repository for a given I\/O plan component."]},{"entry":[{},"For example, the time-out value for an I\/O to"]},{"entry":[{},"a mirror virtual disk. The list of parameters"]},{"entry":[{},"will be defined during the course of the"]},{"entry":[{},"implementation as needs are identified."]},{"entry":["PEAP_SetIOPlanParam_vaVendor","This API will set up the value of a given parameter"]},{"entry":[{},"in an I\/O plan within the accelerated path."]},{"entry":["PEAP_IOPlanContinuationMask_vaVendor","The API sets a mask in order to determine if the"]},{"entry":[{},"I\/O plan execution for an I\/O should continue in"]},{"entry":[{},"case of failure of an I\/O plan component"]},{"entry":["PEAP_IOPlanSuccessMask_vaVendor","The API sets a mask in order to determine if the"]},{"entry":[{},"I\/O from a client on a virtual disk is to be reported"]},{"entry":[{},"as a success or failure. For example, in one storage"]},{"entry":[{},"management environment, it may be set so that I\/O"]},{"entry":[{},"to all mirrors in a plan must succeed in order to"]},{"entry":[{},"report success to an I\/O client. But, if the virtual"]},{"entry":[{},"disk exposed to the client is based on a RAID-5"]},{"entry":[{},"device, then a determination could be made to"]},{"entry":[{},"succeed the client I\/O even if all the mirrors in"]},{"entry":[{},"the I\/O plan fail"]},{"entry":["PEAP_IOPlanLogMask_vaVendor","he API sets up a mask in order to determine which"]},{"entry":[{},"I\/O components of an I\/O plan need to be logged"]},{"entry":[{},"in case of failure. Also provided in this mask is"]},{"entry":[{},"information regarding whether the original data"]},{"entry":[{},"needs to be logged or not. For example, in case"]},{"entry":[{},"of a failure of a replication component - in one I\/O"]},{"entry":[{},"plan, it may be decided"]},{"entry":["PEAP_VDDeactivateMask_vaVendor","The API sets up a mask in order to determine if"]},{"entry":[{},"failure of an I\/O component results in making a"]},{"entry":[{},"virtual disk unavailable to the clients. The client"]},{"entry":[{},"access is resumed only when the status of the virtual"]},{"entry":[{},"disk is modified from the control path software"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The I\/O APIs provide the facility for dealing with I\/Os that are generated in the acceleration path and then handled through the control path in case of I\/O exception. These APIs are prefixed with IO.","a note about ownership of an I\/O plan. At any point in time, an I\/O plan is either owned by the accelerated path hardware or the control path software. By default the APIs deal with the I\/O plans that are not owned by the accelerated path. The APIs that deal with I\/O plans owned by the accelerated path are suffixed with Inap.",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["IO_GetPlan_vaVendor","Gets the first I\/O plan that was sent from the"]},{"entry":[{},"accelerated path to the control path software."]},{"entry":["IO_GetPlanVD_vaVendor","Gets the first I\/O plan for a virtual disk that was"]},{"entry":[{},"sent from the accelerated path to the control path"]},{"entry":[{},"software."]},{"entry":["IO_GetPlanVDAIIInapva_vaVendor","Gets a list of all the outstanding I\/O plans for a"]},{"entry":[{},"virtual disk in the accelerated path. These I\/O"]},{"entry":[{},"plans have not yet encountered any exception."]},{"entry":[{},"Based on a parameter, the owner of these plans is"]},{"entry":[{},"either kept unchanged or changed to the control"]},{"entry":[{},"path software as part of this list generation."]},{"entry":["IO_ChgPlanVDOwnInap_vaVendor","Change the owner of an I\/O Plan from the"]},{"entry":[{},"accelerated path to the control path."]},{"entry":["IO_ResubmitPlan_vaVendor","Control path software puts back an I\/O plan after"]},{"entry":[{},"doing necessary handling of the exception(s) in"]},{"entry":[{},"the I\/O plan."]},{"entry":["IO_AbortPlan_vaVendor","Aborts an I\/O plan."]},{"entry":["IO_SubmitPlan_vaVendor","For data movement from one virtual disk to"]},{"entry":[{},"another virtual disk, the control path"]},{"entry":[{},"software may generate an I\/O plan itself and"]},{"entry":[{},"submit it to the accelerated path with this API."]},{"entry":["IO_AddDivertRange_vaVendor","For a given virtual disk, add a block range to"]},{"entry":[{},"the acceleration path so that I\/Os involving"]},{"entry":[{},"the block range are diverted to the control path"]},{"entry":[{},"software."]},{"entry":["IO_RemoveDivertRange_vaVendor","For a given virtual disk, remove a previously"]},{"entry":[{},"specified block range from the acceleration"]},{"entry":[{},"path."]},{"entry":["IO_PlanStatusDecode_vaVendor","Decodes the processing status of the I\/O plan"]},{"entry":[{},"components and provides the next I\/O component"]},{"entry":[{},"on which exception occurred"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"These APIs are used to create I\/O plans from the control path and send it to the devices in a passthrough mode through the acceleration path. These APIs are prefixed with IOP.",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["IOP_CreateIOPlan_vaVendor","This creates a new IO plan, which"]},{"entry":[{},"can further be filled with IO"]},{"entry":[{},"commands"]},{"entry":["IOP_AddIO_vaVendor","An IO is added to the IO plan"]},{"entry":["IOP_ChangeIO_vaVendor","The information of an IO is"]},{"entry":[{},"changed"]},{"entry":["IOP_GetErrorCode_vaVendor","Returns the error code for a given"]},{"entry":[{},"IO in the IO plan"]},{"entry":["IOP_ReInitIOPlan_vaVendor","Re-initializes the IO plan"]},{"entry":["IOP_DestroyIOPlan_vaVendor","This releases the IO plan resources"]},{"entry":["IOP_AllocPayIdSGLBuf_vaVendor","If user wants to send down the"]},{"entry":[{},"payload in the form of SGL, he"]},{"entry":[{},"should build the SGL on the"]},{"entry":[{},"256-byte memory area provided by"]},{"entry":[{},"this API"]},{"entry":["IOP_FreePayIdSGLBuf_vaVendor","Free the above-allocated SGL"]},{"entry":[{},"buffer"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The following APIs are related to devices discovery and management.","ISCSI Management APIs",{"@attributes":{"id":"p-0068","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ISCSIAPI_Get_Global_Params","Gets the global ISCSI"]},{"entry":[{},"parameters from the repository."]},{"entry":["ISCSIAPI_Get_Target_List","Gets the Target List from the"]},{"entry":[{},"repository."]},{"entry":["ISCSIAPI_Get_Target_Info","Gets the information for a Target"]},{"entry":[{},"from the repository."]},{"entry":["ISCSIAPI_Get_Initiator_List_VD","Gets the Initiator List for a VD"]},{"entry":[{},"from the repository."]},{"entry":["ISCSIAPI_Get_Initiator_List_Target","Gets the Initiator List for a"]},{"entry":[{},"Target from the repository."]},{"entry":["UA_FreeBuffPointer_vaVendor","Free the allocated buffer."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"These APIs are used to provide a transaction management facility for updating the shared data structures between the control path and the acceleration path in a way that preserves the integrety of the modified data with respect to its use by multiple processors.","These APIs are prefixed with TXCP for the control path part and TXAP for the acceleration path.","Event Handling","In case of any exception while processing an I\/O from a client according to an I\/O plan, the complete I\/O plan along with the data is made available to the control path software. The APIs in this group provide the facilities to decode information from the I\/O plans. Also, this API group provides APIs for determining the recipients of the exception information and APIs for sending the exception information.","The APIs in this group are prefixed with EHRI (Event Handling Repository Interface) and EHAP (Event Handling Accelerated Path).",{"@attributes":{"id":"p-0073","num":"0072"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["EHAP_Register_EventHandler_vaVendor","This API registers a"]},{"entry":[{},"function that is called"]},{"entry":[{},"for a particular type of"]},{"entry":[{},"event."]},{"entry":["EHAP_UnRegister_EventHandler_vaVendor","This API un-registers the"]},{"entry":[{},"event handler."]},{"entry":["EHRI_EventReportingSetup_vaVendor","This API sets up the"]},{"entry":[{},"infrastructure for the"]},{"entry":[{},"control path software for"]},{"entry":[{},"reporting events."]},{"entry":["EHRI_SendEvent_vaVendor","This API sends the event"]},{"entry":[{},"to whoever has registered"]},{"entry":[{},"for receiving the event."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"This API group provides access to various performance related counters and values in the accelerated path of the Storage Virtualization Engine. The API group is prefixed with PSRI (PerformanceStatisticsRepositoryInterface) and PSAP (PerformanceStatisticsAcceleratedPath).",{"@attributes":{"id":"p-0075","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PSRI_UpdateVDStats_vaVendor","Updates all the statistics in the"]},{"entry":[{},"repository for a given virtual disk"]},{"entry":["PSAP_CopyVDStats_vaVendor","Gets all the statistics for a given"]},{"entry":[{},"virtual disk from the accelerated"]},{"entry":[{},"path hardware to a designated area"]},{"entry":[{},"in memory"]},{"entry":["PSAP_ResetVDStats_vaVendor","Resets all statistics for a virtual"]},{"entry":[{},"disk in the accelerated path"]},{"entry":["PSAP_GetMapSizeVD_vaVendor","Gets the map size for a virtual disk"]},{"entry":["PSAP_GetMemReqVD_vaVendor","Gets the full memory requirement"]},{"entry":[{},"for the virtual disk in the SVE"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"These APIs will provide utility functions and are prefixed with UA. Two examples of the API in this category are:",{"@attributes":{"id":"p-0077","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["UA_FreeBuffPtoPArray_vaVendor","This will free all buffers related to"]},{"entry":[{},"an API that requires a parameter of"]},{"entry":[{},"pointer to an array of pointers"]},{"entry":["UA_FreeBuffPointer_vaVendor","This will free the buffer pointed by"]},{"entry":[{},"the pointer"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Briefly, the following changes need to be implemented in an existing virtualization environment to utilize VAAPI with hardware acceleration. The primary driver will supports API calls, including the verbs and formats, as specified in VAAPI. The following identifies several of the important areas of impact.","If the Information Repository of the existing application is not CIM-based, the vendor will either need to convert the existing SNMP or proprietary formats into the CIM object model so that the current VAAPI implementation can get required information from the CIM or the vendor needs to implement the repository interface components of VAAPI on top of the proprietary repository.","The hardware acceleration component may not be able to handle certain error conditions. These error conditions need to be forwarded to the existing virtualization engine (software-based) to process and report them. The vendor needs to provide entry points into the existing code to allow this access","The data path and control path of the existing software-based virtualization engine will also need to support the hardware-based accelerated data path through VAAPI. This will require changes to the control path and data path components of the virtualization engine","One embodiment of the invention is implemented as a program product for use with a computer system such as, for example, the storage network environment as shown in  and described below. The program(s) of the program product defines functions of the embodiments (including the methods described below with reference to  and can be contained on a variety of signal-bearing media. Illustrative signal-bearing media include, but are not limited to: (i) information permanently stored on non-writable storage media (e.g., read-only memory devices within a computer such as CD-ROM disks readable by a CD-ROM drive); (ii) alterable information stored on writable storage media (e.g., floppy disks within a diskette drive or hard-disk drive); or (iii) information conveyed to a computer by a communications medium, such as through a computer or telephone network, including wireless communications. The latter embodiment specifically includes information downloaded from the Internet and other networks. Such signal-bearing media, when carrying computer-readable instructions that direct the functions of the present invention, represent embodiments of the present invention.","Further, the program product can be embedded within a processor such as a storage network processor. The processor may be embodied in an adapter card of a server or other type of computer work station.","In general, the routines executed to implement the embodiments of the invention, whether implemented as part of an operating system or a specific application, component, program, module, object, or sequence of instructions may be referred to herein as a \u201cprogram\u201d. The computer program typically is comprised of a multitude of instructions that will be translated by the native computer into a machine-readable format and hence executable instructions. Also, programs are comprised of variables and data structures that either reside locally to the program or are found in memory or on storage devices. In addition, various programs described hereinafter may be identified based upon the application for which they are implemented in a specific embodiment of the invention. However, it should be appreciated that any particular program nomenclature that follows is used merely for convenience, and thus the invention should not be limited to use solely in any specific application identified and\/or implied by such nomenclature.","While the foregoing is directed to embodiments of the present invention, other and further embodiments of the invention may be devised without departing from the basic scope thereof, and the scope thereof is determined by the claims that follow."],"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["So that the manner in which the above recited features, advantages and objects of the present invention are attained and can be understood in detail, a more particular description of the invention, briefly summarized above, may be had by reference to the embodiments thereof which are illustrated in the appended drawings.","It is to be noted, however, that the appended drawings illustrate only typical embodiments of this invention and are therefore not to be considered limiting of its scope, for the invention may admit to other equally effective embodiments.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
