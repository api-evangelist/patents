---
title: Concept-based method and system for dynamically analyzing unstructured information
abstract: A method, operating model, system, data structure, computer program and computer program product for analyzing and categorizing unstructured information is provided such that conventional structured data access techniques can be utilized over unstructured objects. A analysis and categorization engine builds a set of concept groupings, each grouping consisting of related words and phrases. The concept groupings are augmented by user input. A set of categories is built. The analysis and categorization engine generates a vector representation of each object based on concepts and utilizes a statistical analysis to select concepts that represent each object and assign objects to categories. Information about users, objects, and categories is stored in an open architecture, such as a relational database. An object concept based search is provided to efficiently locate meaningful objects and to provide for updating of the object categorization based on search entries.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06970881&OS=06970881&RS=06970881
owner: Intelligenxia, Inc.
number: 06970881
owner_city: Jacksonville
owner_country: US
publication_date: 20020301
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EMBODIMENTS"],"p":["This application claims priority under 35 U.S.C. \u00a7119(e) and\/or 35 U.S.C. \u00a7120 to U.S. Provisional Patent Application Ser. No. 60\/302,971, entitled System For And Method Of Intelligent Categorization Of Information, filed May 7, 2001, which is hereby incorporated by reference.","This invention pertains generally to a system, method, and computer program product for information classification, retrieval, gathering, and analysis; and more particularly to a system, method, and computer program product for classifying, gathering, classifying, categorizing and analyzing unstructured information.","Structured data or objects generally refers to data existing in an organized form, such as a relational database, that can be accessed and analyzed by conventional techniques (i.e. Standard Query Language, SQL). By contrast, so-called unstructured data or objects refers to objects in a textual format (i.e. faxes, e-mails, documents, voice converted to text) that do not necessarily share a common organization. Unstructured information often remains hidden and un-leveraged by an organization primarily because it is hard to access the right information at the right time or to integrate, analyze, or compare multiple items of information as a result of their unstructured nature. There exists a need for a system and method to provide structure for unstructured information such that the unstructured objects can be accessed with powerful conventional tools (such as, for example, SQL, or other information query and\/or analysis tools) and analyzed for hidden trends and patterns across a corpus of unstructured objects.","Conventional systems and methods for accessing unstructured objects have focused on tactical searches, that seek to match keywords, an approach that has several shortcomings. For example, as illustrated in , a tactical search engine  accepts search text . For purposes of illustration, suppose information about insects is desired and the user-entered search text  is \u2018bug\u2019. The search engine scans available unstructured objects , including individual objects , , , , and . In this example, one unstructured object concerns the Volkswagen bug , one is about insects at night , one is about creepy-crawlies , one is about software bugs , and one is about garden bugs . The tactical search engine  performs keyword matching, looking for the search text  to appear in at least one of the unstructured objects . In this \u2018bug\u2019 example, only those objects about the Volkswagen bug , software bugs , and garden bugs  actually contain the word \u2018bug\u2019 and will be returned . The objects about insects at night , and creepy-crawlies  may have been relevant to the search but unfortunately were not identified by the conventional tactical search engine.","One conventional method of addressing this problem allows a user to enter detailed searches utilizing phrases or Boolean logic, but successful detailed tactical searches can be extremely difficult to formulate. The user must be sophisticated enough to express their search criteria in terms of Boolean logic. Furthermore, the user needs to know precisely what he or she is searching for, in the exact language that they expect to find it. Thus, there is a need for a search mechanism to more easily locate documents or other objects of interest, preferably searching with the user's own vocabulary. Further, such mechanism should desirably enable automatically searching related words and phrases, without knowledge of advanced searching techniques.","In another conventional method, the search is done based on meaning, where each of the words or phrases typed is semantically analyzed, as if second guessing the user (for example, Use of the term Juvenile picks up teenager). This increases the result set though, making analysis of search results even more important. Also this technique is inadequate and quite inaccurate when the user is looking for a concept like \u201cdefinition of terrorism\u201d or \u201cdefinition of knowledge management\u201d, where the \u201cconcept\u201d of the phrase is more important than the meaning of the individual words in the search term.","Even when tactical searches succeed in searching or finding information, the problem of analyzing unstructured information still remains. Analyzing unstructured information goes beyond the ability to locate information of interest. Analysis of unstructured information would allow a user to identify trends in unstructured objects as well as quickly identify the meaning of an unstructured object, without first having to read or review the entire document. Thus, there further exists a need to provide a system and methodology for analyzing unstructured information. In one situation, this need extends to system and method for tracking and optionally reporting the changing presence of words or phrases in a set of documents over time.","Prior art classification systems exist that can organize unstructured objects in a hierarchical manner. However, utilizing these classification systems to locate an object of interest requires knowing what the high-level of interest would be, and following one path of inquiry often precludes looking at other options. Thus, there is also a need for a system and method that can recognize relevant relationships between words and concepts, and can categorize an object under more than one high-level interest. Such a system and method should desirably scan objects for words or phrases and determine the presence of certain patterns that suggest the meaning, or theme, of a document, allowing for more accurate classification and retrieval.","Some prior art technologies store data and information utilizing proprietary methods and\/or data structures, which prevents widespread or open access or analysis by keeping objects in a native non-standard proprietary format. Thus, there is a need to store information about unstructured objects in an open architecture and preferably in a readily accessible standard storage format, one embodiment being a relational database of which many types are known. Storage in a relational database keeps the information readily available for analysis by common tools. Where access protection is desired various known security measures may be employed as are known in the art. In short, there remains a need for a theme or concept-based method and system to analyze, categorize and query unstructured information. The present invention provides such a high precision system and method.","The present invention provides a system, method and computer program and computer program product for categorizing and analyzing unstructured information. The present invention includes a analysis and categorization engine that scans available unstructured objects. The analysis and categorization engine generates structured information in the form of relational database tables, and can accept user-specific input to personalize this process further. Once these relational database data structures have been generated, conventional techniques (such as SQL) can therefore be utilized on the structured information to access the unstructured objects.","The analysis and categorization engine preferably builds a set of categories into which it will classify the unstructured objects. By scanning the categories or further training, the analysis and categorization engine captures a list of relevant concepts, where preferably each relevant concept comprises at least one word. Utilizing language relationships, thesaurus, other industry\/language thesaurus and\/or dictionary-lookup, the analysis and categorization engine expands the concepts into concept groupings. Each concept grouping preferably comprises at least one word and is named by a representative seed concept of at least one word. The concept groupings may be further augmented by user input and modification, allowing the analysis and categorization engine to capture language relationships and usage unique to individual users.","The analysis and categorization engine can bubble up or otherwise identify ideas and concepts embedded in a given set of unstructured data objects and present them in a structured or organized form, such as for example like a \u201ctable of contents for a magazine\u201d. One difference being that in this case, the table of contents provides a dynamically organized collection of concepts embedded in the objects. The collection can be dynamically sorted in multiple ways for the user to access the right set of concepts and view their distribution in the targeted objects.","The analysis and categorization engine receives and filters unstructured objects, and indexes objects utilizing the concept groupings and a variation of the term frequency-inverse document frequency (Tf-Idf) technique. Indexing results in a representation of the object as a selection of weighted concepts. The analysis and categorization engine preferably generates a Gaussian distribution curve for the object to assign probabilities to concepts within the object. Concepts having probabilities within a certain range are selected as key concepts to represent the theme, or meaning, of an object. By setting the range, it possible to dramatically increase precision and recall for objects classification. The analysis and categorization engine utilizes the key concepts and their probabilities to determine an object's score for each category, and associates an object with every category achieving a specified score.","Output generated by the analysis and categorization engine such as concept groupings, object scores, and the users to whom they pertain may be stored in an open architecture format, such as a relational database table. Such storage enables conventional analysis techniques to be employed over unstructured data.","Aspects of the invention also provide an object concept based search engine. The search engine accepts search text, analyzes the text for concepts and retrieves objects represented by those concepts. User preferences are learned by the search engine through passing previously unknown concepts extracted from the query text to the analysis and categorization engine. The analysis and categorization engine incorporates the new concepts into the concept groupings and updates its object scoring based on the new concept groupings.","A novel graphical user interface is also optionally but advantageously provided to assist the user in viewing, organizing, and analyzing unstructured objects, and performing the object concept search and subsequent analysis. The structured information generated by the analysis and categorization engine facilitates integrated views of unstructured objects by concept as well as analysis\u2014for example, capturing trends over time.","Other features and advantages of the invention will appear from the following description in which the preferred embodiments have been set forth in detail, in conjunction with the accompanying drawings.","Exemplary embodiments are described with reference to specific structural and methodological embodiments and configurations. Those workers having ordinary skill in the art in light of the description provided here will appreciate that various changes and modifications can be made while remaining within the scope of the claims. For example, the categorization process is presented in a preferred order utilizing preferred (Gaussian) statistics; however, ordering the steps differently or utilizing a different statistical methodology could achieve the same or analogous end. Examples of relational database tables are given, but those skilled in the art will appreciate that these tables could be structured differently and remain within the scope of the claims. Other variations, changes, and\/or modifications may be made without departing from the scope of the invention.","The inventive system, method, data structure, and computer program software and computer program software product have particular applicability to information and intelligence gathering and analysis. Such information and intelligence identification, gathering, and analysis may be applied in economic, financial, technological, sociological, informatics, educational and learning, and security contexts, as well as in many other disciplines.","With reference to , there is illustrated an outline of the organization of an embodiment of the present system to categorize, search, and deduce the theme, or meaning, of unstructured information. A analysis and categorization engine  accesses unstructured objects , including individual unstructured objects , , , , and . The analysis and categorization engine  also accepts user-specific input  and can include search text . Based on the unstructured objects , the user input  and search text , the analysis and categorization engine  generates structured information . Conventional analysis tools can be employed to access or analyze the unstructured objects  through this structured information . One embodiment of the present invention provides an object concept-based search engine . The search engine  accepts search text  and utilizes the structured information  generated by the analysis and categorization engine  to return unstructured objects having a concept match . Unlike the conventional approach of , the approach illustrated in the  embodiment includes a search capability but returns objects with a concept, not keyword, match and advantageously returns relevant unstructured objects having a conceptual match to the search text even if the text of the returned object does not contain any of the search words. This is different from extracting objects having the concept of what was typed in which is interpolating the typed in text, generating conceptually matching words or phrases and looking for presence or absence of them in the targeted object space. It is further noted that their may optionally be a connection between search text  and analysis and categorization engine  as any search criteria may further refine the engine's understanding of the user.","An embodiment of the analysis and categorization engine  operates as outlined in  to generate or otherwise determine structured information from or about unstructured objects. This generation or determination is described in greater detail hereinafter. Briefly, the analysis and categorization engine  generates, determines, or builds categories (step ) and assigns unstructured objects  to categories (step ). A \u2018category\u2019 as used herein denotes a set of words or phrases that become related to one another when they are grouped or otherwise identified as forming or belonging to a category.","User input  and\/or training objects  are utilized by the analysis and categorization engine to build (step ) categories. The analysis and categorization engine  uses the built categories to capture concepts (step ). A \u2018concept\u2019 as used herein denotes a word or phrase. With further user input  and a dictionary or thesaurus look-up (step ), the analysis and categorization engine generates concept groupings (step ). A \u2018concept grouping\u2019 as used herein denotes a group of concepts related in one or more predefined ways\u2014such as synonyms or meaning words and phrases discovered in a dictionary look-up or set up by the user using a concept customization interface. Each concept grouping is headed, or named, by one concept\u2014referred to herein as a seed concept.","The analysis and categorization engine  accepts an unstructured object as input (step ), filters the object (step ) and utilizes the concept groupings to index the object (step ). Indexing, as generally known in information retrieval, refers to representing an object as a function of the parameters that will be utilized to search, analyze, or retrieve the object. In a preferred embodiment of the present invention, the indexing step  comprises generating a vector representation of the object, having a number of dimensions where each dimension has a weight. Each dimension corresponds to a seed concept, and the weight given to each seed concept depends in part on the frequency of occurrence of that concept within the object.","The index is utilized by the analysis and categorization engine  to generate a Gaussian distribution (step ) of weights for each object and select a set of concepts to represent each object (step ), herein referred to as key concepts. The objects are scored (step ) and assigned to categories (step ). Recall as described relative to  that the analysis and categorization engine stores the information it extracts in a structured open architecture format  for use by available structured analysis tools and the provided interface.","Embodiments of the present invention illustrating a more detailed description of the steps outlined in  is given below. Throughout the steps taken by the analysis and categorization engine, as outlined in , output or information generated or determined by the analysis and categorization engine is stored as structured information  in an open architecture format. In the embodiments below, specific examples of exemplary relational database tables containing preferred output of the analysis and categorization engine are described. It is to be understood that a variety of information output from any stage of the analysis and categorization engine's procedure may be stored, or may not be stored, while remaining within the scope of the present invention.","With reference to , one or more unstructured objects are input (step ) and optionally but advantageously filtered (step ), to remove first predetermined undesired information and\/or to extract only other second predetermined information. In one embodiment, the filtering involves removing one or more of formatting characters, special characters and encoding of information. Other or different characters or information may also be removed when present. It is noted that for certain image files (for example, JPEG, GIF, TIFF, or BMP file types) or other file or information items that do not necessarily provide a title, there may not be a concept that is extracted from such no-existent title. The output of the filtering process (step ) is a filtered object\u2014preferably extracted text along with properties of the unstructured object, such as created date, size, title, description, and modified date. Filters are widely available and known in the art for most object formats. It is noted that for certain image files (for example, JPEG, GIF, TIFF, or BMP file types) or other file or information items that do not necessarily provide a title, there may not be a concept that is extracted from such no-existent title.","Advantageously, each object is available for access using the Universal Naming Convention (UNC) or via some other procedure for providing a unique (globally or locally unique) identifier or ID. The UNC is a way to identify a shared file in a computer without having to specify (or know) the storage device it is on. In the Microsoft Windows operating system, the naming format is \\\\servername\\sharename\\path\\filename. Analogous naming formats are known for other operating systems. Each unstructured object is stored on one or more computer storage media accessible to the analysis and categorization engine through the UNC. A pointer  to the object's physical storage location is generated, for example, by the engine as an integer between \u22122,147,483,648 to 2,147,483,647. Other methods of generating a physical pointer may be utilized. The pointer  is advantageous in that an object can be viewed or analyzed by more than one user without the need to physically copy the object and consume additional space on the computer storage media. Object properties may also be stored in a relational database table. Object properties may include, for example, a string of text representing an object description  such as a name or file type, an object created date  comprising a numeric string representing the day, month, and year the object was created, and an object modified date  comprising a numeric string representing the day, month, and year the object was last modified. A variety of object properties could be stored utilizing a variety of storing methodologies or naming protocols.","In one exemplary object relational database table, shown here as Table 1, the global object IDs  and object properties, such as object description , object created date , object modified date , and the object size 40 in bytes [are stored as structured information  in an open architecture format, a relational database table. Other object properties, attributes, and the like may also be stored in the object relational database table and tracked,",{"@attributes":{"id":"p-0041","num":"0040"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["Global",{},"Object","Object",{}]},{"entry":["Object ID","Object description","created date","modified","Object size"]},{"entry":["(30)","(34)","(36)","date (38)","(units) (40)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["500","INNOVATION Dec","12\/15\/96","12\/16\/96","\u200250000"]},{"entry":[{},"16.txt"]},{"entry":["501","INNOVATION","5\/15\/96","12\/1\/96","250000"]},{"entry":[{},"May 16.txt"]},{"entry":[". . .",". . .",". . .",". . .",". . ."]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}}}},"As illustrated in the embodiment of , categories , including individual categories , , and  are built (step  of ) by the analysis and categorization engine  after scanning a set of training objects , or in concert with user input , or by a combination of these two approaches. One exemplary structure for forming a category is to provide or otherwise generate a category name and a category description that together define the category . A description is a set of words that are in some way related to the category name, and defines the category further. Categories may be specific to a user, or groups of users, and may be built through user input or by automatically training the analysis and categorization engine  on a set of objects, or through a combination of these two techniques. Three exemplary embodiments of category building techniques are described immediately below.","In a first exemplary embodiment, (1) a user  inputs both category name and description . In this case, the user provides the category name or other category identification and a description of the category, where these are desirably provided in natural language. A natural language description is, generally, a descriptive sentence or paragraph further refining what the category name is meant to signify for the user. One illustrative example is:\n\n","In a second exemplary embodiment, (2) user  inputs category name and the analysis and categorization engine  generates the corresponding category description . In this case, the user provides the name of the category and a number of training objects  forming or belonging to the category. The analysis and categorization engine  scans the training objects  to generate a set of descriptive words and\/or phrases to use as the category description b. One illustrative example is:\n\n","The manner in which the analysis and categorization engine generates the category description from the uploaded or otherwise identified documents or information items are described in further detail hereinafter.","As described in greater detail elsewhere in this specification, once the object has been converted into a relevant reduced dimensionality vector, where the primary dimensions of the vector space are seed concepts occurring in that document, the analysis and categorization engine  selects a set of these dimensions, or seed concepts, that are or correspond to key concepts that are most representative of the object (, step ).","After step  (See ), the representative key concepts for objects under a category are known. As referenced in Table 5, each object and key concept combination has a probability  associated with it. The goal is to find out the representative concepts for the category itself by training the system and algorithm or method. This is primarily influenced by two factors. The overall probability  contributed by the key concept to the category under which this object belongs (for example, as determined by score ratio R) and number of objects under a category a given concept occurs (for example, as determined by the object ratio R). Thus we calculate two ratios for every key concept identified under the category as follows:\n\n","From these two ratios, the composite ratio of key concepts under a given category may be determined. This composite ratio R is R*R. If this composite ratio R falls within the high-bound  or low-bound  criteria, then this key concept becomes a concept defining the category as well. It should be noted that this training can occur at any time based on user input and can be controlled by the user through an interface.","In a third exemplary embodiment, (3) the analysis and categorization engine  creates both category name and description. The user  provides training objects  pertaining to Golf, such as, for example, US open, British open, Australian open and TPC tour. The system, specifically the analysis and categorization engine , generates both the category name and the category description . In the example, the system generates category name and category description as follows.\n\n","The category building procedure  for generating the category name and category description from the uploaded objects is described in greater detail hereinafter. It is noted that the examples are illustrative only, and that a variety of methodologies could be utilized to build categories for use in sorting or analyzing objects. For example, a category may simply consist of a list of words or phrases, it need not have a \u2018name\u2019 or \u2018description\u2019 as utilized in the example.","The generated category name will generally be a subset of category description. The creation of category description was described in the previous section. We choose the top N(for example choose N=5, but any other selected number may be chosen) highest key concepts from the category description as the category name and the selection of concepts for the name and description. Creating a category name is based on number of objects for object name and description creation. Generally, the more the number of objects in the training set, the better the generated concept name and description. The user can group a set of objects and instruct the analysis and classification engine to create category description and category name.","With further reference to the embodiment in , once the categories  have been established (note that they may be modified or updated as desired to reflect further intelligence, knowledge, understanding, or data), the analysis and categorization engine  captures (step ) a set of concepts. This capturing process is further depicted in . A concept is usually at least one word and can be a phrase comprising several words. The concepts are preferably given a global concept ID number . This number is generated generally by the database engine and is stored as an unique identifier and is preferably between \u22122,147,483,648 and 2,147,483,647 for reasons of computational and addressing efficiency though there are no procedurally based limits. Other numbering or naming schemes may be utilized to generate global concept IDs. Global concept ID numbers  and concept text  along with an optional but advantageously provided date\/time indicator, such as a timestamp , are stored in a concept relational database table as exemplified by Table 2 below. An expiration or inactivation date and time  may also optionally be provided. These dates and times assist in assessing relevance and currency of the information which may change over time. All concepts may be stored in such table or tables.",{"@attributes":{"id":"p-0053","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},{},{},"Inactivated date"]},{"entry":["concept id (42)","concept text (44)","Created date (46)","(48)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["25","Innovation","Dec. 15, 1996"]},{"entry":["26","Discovery","Dec. 16, 1996"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"It is noted that in one embodiment, the analysis and categorization engine captures or identifies concepts from category names and descriptions during classification, but in one embodiment, the relationships between different words and phrases are created during the thesaurus look-up and are continuously maintained and refined by user interaction.","A seed concept is a concept that will serve as a basis for a concept grouping and is a sub-type of concept. As described, this is either generated by the system when words get extracted (refer word extraction step) or when user provides category name and description. Thus the seed concept id is assigned from the same pool of concept identifiers. Three examples of capturing or generating seed concepts are given below.","In one embodiment, the analysis and categorization engine  accepts a set of training objects  that define a category. The engine extracts seed concepts based on Category description. In this case, the category description is parsed to get individual words by removing the stop and noise words. The resulting set of words become seed concepts.","In another embodiment, the analysis and categorization engine  scans all available documents (such as those stored in a defined directory or a list) and extracts a list of the most frequent keywords and their related words. The analysis and categorization engine  utilizes categories  and training objects  to extract a list of concepts .","Seed concepts  are refined by a dictionary and thesaurus look-up , or according to any other procedure for generating seed concepts. The thesaurus can be augmented by use of additional thesaurus as well. For example, in addition to the English thesaurus, for legal industry we can include a legal thesaurus that will be first accessed for the look-up. This word extraction or generation procedure may, for example, utilize semantic analysis rules or policies and take into account word or phrase occurrence frequency, synonymy, and\/or polysemy, grammatical part of speech as well as other optional attributes and\/or rules. In some instances, the rules may vary depending upon the number and size of documents or other information items available. An electronic dictionary and thesaurus  in the form of a database stored in a memory or storage device are used to generate additional words and\/or phrases. Based on the set of extracted words, seed concepts are generated.","The procedure for extraction uses a variation of Latent Semantic Indexing, a well known information retrieval technique. The idea is to extract best possible words out of every document and build a superset of words or phrases and their relationships that would then be able to describe the object collection. The first step in this process is extracting most frequently occurring words from every document. Documents can be sampled in arithmetic or geometric progression and the sampling selection can be based on several criteria such as time, size, author, and the like. The type and frequency of sampling can be modified by the user. The number of words to be extracted from a document is limited by a constant that can be set by the user. Also in order for smaller documents to contribute at the same proportion as the bigger documents, the word extraction process has to be normalized. According to one embodiment, the steps for extracting words from an individual object is as follows:","An assumption is made that every kilobyte of text has approximately W words (in one implementation, W is set to be 150 but a different number may be selected). Then the number of words (n) that can be extracted from a document is given by the formula n=D\/W where Dis the document size. The user can control the upper limit of nby using upper limits. In the first step, the system and method will extract up to n*10 frequently occurring words from the document. In the next step, for every word extracted, part of speech will be determined based on grammar look-up. In one embodiment, a proper noun will be given the highest weightage W(word), a verb will be given lowest weightage, and a polysemy word will be given medium weightage. (Other weightage rules or policies may alternatively be implemented.) Now the overall weightage by word for every selected word is W(word)*f(word) where f(word) is the number of occurrences of the word. Now choose nn the descending order of W(word)*f(word). If word collection nfrom object Ois called nthen the superset, {n, n, . . . n} becomes a collection of seed concepts for m objects where {O. . . O} is a collection of individual objects.","In yet another embodiment, a list of words and phrases is generated from a user provided description for a category. For at least some applications, this is a preferred way of generating seed concepts as user-specific information is directly input to the system and algorithm or method. The user can input one or more phrases each within double quotes (or other identifiers) and the engine will capture and store each of them as a multi-word concept. In one embodiment, multi-word concepts are given as much weight or weightage as a proper noun for part-of-speech.","Once seed concepts  have been generated (see ), they are extrapolated using a seed concept extrapolation procedure into concept groupings  as depicted in . Seed concepts  are augmented utilizing one or both of a dictionary\/thesaurus look-up  and user-entered words  to form concept groupings  which are a set of related concepts. The concepts in the concept groupings are related in predetermined, structured ways and are stored together, for example, in a relational database table that demonstrates their relatedness. The analysis and categorization engine advantageously extracts not only words from the dictionary or thesaurus, but the relationship between the words and the seed concept and optionally but advantageously the part of speech as well.",{"@attributes":{"id":"p-0063","num":"0071"},"figref":["FIG. 7","FIG. 7"],"b":["600","610","620","630","640","610","620","630","640","200"]},"Concept groupings  are advantageously stored in a seed relationship relational database table as exemplified by Table 3. Since concept groupings are generally user-specific, the user ID  is stored along with a global seed concept ID , a related concept id , and the type of relationship . A status flag or indicator  also may be stored, allowing the user to activate or deactivate specific relationships. Providing this relational database table advantageously allows the system to utilize these concept groupings for multiple users while maintaining the ability of individual users to modify and customize the groupings.","It should be noted that the seed concepts themselves can be interrelated. For example, there may be two seed concepts \u201cbug\u201d and \u201cinsect\u201d and they have the same meaning. The engine scans the database looking for relationships among individual seed concepts. This is done by taking an individual seed concept and looking for the existence of related concepts in Table 2. The relationship is established again using thesaurus look-up. For example, in this case, bug has meaning of insect and when insect appears in Table 2, a concept grouping entry will be created by linking \u201cbug\u201d at level  with \u201cinsect\u201d in Table 3. Thus concepts having similar meanings, synonyms, inflections and related words would be linked.",{"@attributes":{"id":"p-0066","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Global",{},"Type of",{}]},{"entry":["User ID or User","concept id","Related Global","relationship","Status"]},{"entry":["number (56)","(42)","concept id (50)","(52)","(54)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","25","26","Related word","Active"]},{"entry":["16","25","26","User-defined","Active"]},{"entry":[". . .",". . .",". . .",". . .",". . ."]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}}}},"In the embodiment illustrated in , the analysis and categorization engine  utilizes the concept groupings  to generate a vector representation  of each unstructured object . Generating vector representations of objects is well known in the art. In conventional systems and methods, a vector representation is used in which objects are represented as vectors of the descriptors that are employed for information retrieval (see, for example, Salton G, McGill M J 1983: Introduction to Modern Information Retrieval, McGraw-Hill New York incorporated herein by reference). The vector representation  comprises a number of dimensions such as ,  each with a corresponding weight , . In the present invention, the descriptors utilized as vector dimensions are seed concepts and could be as many as the number of words in the body of the text. In contrast to conventional systems, the present invention utilizes the concept groupings\u2014which optionally contain user-entered phrases\u2014to reduce the dimensionality of the vector representation. By combining the user input before building the vectored representation, the inventive technique embodies the knowledge of user interaction directly into the vectored representation. This helps enhance the accuracy of vectored representation of an object from the user view point. It should also be noted that the engine allows the flexibility for multiple users and views to build their own vectored representation of the objects available for that user and\/or view. This results in continuous to an object in the way that particular user or view is looking for. Generating this vector representation corresponds to the indexing procedure  of .","The indexing procedure  is described further in . The analysis and categorization engine  scans an unstructured object (step ) and extracts concepts and the number of occurrences, or hits, of each concept within the object (step ). The engine  desirably neglects or ignores stop and noise words. The words such as \u201ca\u201d, \u201cthe\u201d, and \u201cand\u201d are examples of common noise words that are ignored in search strategies. Stop words are words that need not be processed and are not important for the user or the view. The user has the flexibility to set any word to be a stop word and allow the engine to skip processing. The analysis and categorization engine  advantageously determines if each extracted concept is in the known concept groupings (step ) and generates a vector representation of the object where each dimension corresponds to a seed concept (step ). The known concept groupings utilized may be different for different users or groups for the same unstructured object. Advantageously but optionally, the analysis and categorization engine  assigns a weight to each vector dimension so that more important concepts may be given greater consideration (step ). For example, weight may be assigned based on the frequency of occurrence of that concept in the object. A variation of the Tf-Idf technique may be applied for this weighting. Techniques other than Tf-Idf may instead be used, but a Tf-Idf based approach has been found to perform well with the system and method described here.","The total number of occurrences of a concept within an object or some measure or metric derived from such total is stored in a cross-reference relational database table exemplified by Table 4 below. This table preferably includes the global object ID  (as indexing is desirably independent of user), the concept ID , number of hits , and location of the concept  within the object. Additionally, an index start time  and cross-reference time  are included to keep a block of cross-references for an object together and to enable later search capabilities. Advantageously, a cross-reference entry is made for each concept.",{"@attributes":{"id":"p-0070","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}},{"entry":[{},{},{},"Cross",{},"Total #"]},{"entry":["Object id","Concept id","Cross reference","reference","Index start","of hits"]},{"entry":["(56)","(50)","time stamp (64)","type (60)","time (62)","(58)"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["500","26","3\/5\/01 2:00 PM","Title","3\/5\/01","6"]},{"entry":[{},{},{},{},"1:59 PM"]},{"entry":["500","25","3\/5\/01 2:01 PM","Body","3\/5\/01","3"]},{"entry":[{},{},{},{},"1:59 PM"]},{"entry":[". . .",". . .",". . .",". . .",". . .",". . ."]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}}}},"The Term-Frequency Inverse Document Frequency or Tf-Idf technique is well-known in the art, and is a technique which represents an object as a vector of weighted terms. TF denotes term-frequency and IDF denotes inverse-document-frequency. Terms that appear frequently in one document, but rarely in other documents are more likely to be relevant to the topic of the document. Therefore, the TF-IDF weight of a term in one document is the product of its term-frequency (TF) and the inverse of its document frequency (IDF). In addition the weighted term vectors are used and are normalized to unit length to prevent lengthier documents from having a better chance of retrieval due only or primarily to their length. A standard information retrieval weighting mechanism is:\n\n\n\nwhere w is a weight of a word or phrase in a document, Hc is a header constant, Tf is a frequency of the word or phrase in the current document and idfk is defined as:\n\n=log()\n\nwhere N is the total number of documents already retrieved by the system, and dfk is the document frequency of any given term, for example, the k-th term. The header constant is utilized in the present invention differently from its standard usage in that the invention system and method use the term to reflect the position of the concept in the object and its part of speech.\n","In addition, the inventive system and method differs from the standard Tf-Idf technique in that it looks beyond synonyms, related words, and definition words by using the concept groupings that have already been built and which are described in greater detail elsewhere in this description. The concept groupings advantageously have four levels, spanning synonyms (Level I), related words (Level II), meaning words (Level III), and user specific input (Level IV) that are utilized to reduce the dimensionality of the vector representation. Embodiments of the system and method may provide for only a subset of these levels or may provide additional levels. Reduction of the vector dimensionality is an advantage of the invention for several reasons, including but not limited to providing a more accurate and user-specific representation of the object.","Once the object has been converted into a relevant reduced dimensionality vector, where the primary dimensions of the vector space are seed concepts occurring in that document, the analysis and categorization engine  selects a set of these dimensions, or seed concepts, that are or correspond to key concepts that are most representative of the object (, step ). All the components of the reduced dimensionality vector itself are advantageously stored in a single table or data structure, such as in Table 4. In order to deduce dimensions of the stored vector, for every concept id  for a given object , look up for the corresponding global concept id  in Table 3 by setting related concept id  to concept id  in Table 3. Now combine all of the concept ids  occurring under the global concept id and sum up the corresponding total number of hits . The ordinal of global concept ids  gives the dimension and the sum of total number of hits  by global concept id gives the weightage for that global concept id .","Assuming the number of words\/phrases in a given object as a large integer on an average, according to the central limit theorem, the total number of occurrences of concepts derived from the object can be approximated to standard normal distribution.","As shown in , a standard normal (Gaussian) distribution curve  is specified for each object. Curves or functions other than the Gaussian curve or function may be used but the standard normal Gaussian distribution curve is preferred. The Gaussian or normal distribution is characterized by two parameters: the mean (\u03bc) , and the standard deviation (\u03c3) . Thus, a specific curve for each object is specified by determining a mean weight and a standard deviation of weights, and the Gaussian curve built according to the expression Z=(X\u2212\u03bc)\/\u03c3 where Z is the probability along axis  and X is the weight, along axis . A probability Z can be assigned to each concept, based on the weight X of that concept. Those workers have ordinary skill in the art in light of the description provided here will appreciate that other statistical functions or characterization could alternately be employed. It is observed that normal distribution can be positively or negatively skewed and can be leptokurtic or platykurtic.","Key concepts are seed concepts that are selected to represent the object. In a symmetrical normal distribution, Key concepts have a weight closer to the mean  than some distribution lower limit (or low-bound) , and further from the mean  than some upper limit (or high-bound) . A concept whose weight falls further from the mean than low-bound is deemed to make an insignificant contribution to the concept of an object. A concept whose weight falls closer to the mean than high-bound occurs very frequently and thus contributes little to inherent meaning of the object. These criteria are broadly based on Claude Shannon's information theory, which states in general terms that the more frequently an information pattern occurs, the less its intrinsic value. Low- and high-limits can be modified by the user, and are advantageously expressed as some multiple of the standard deviation.","Key concepts are advantageously stored as structured information in an open architecture format, such as a relational database table. As the same object can be used by multiple users in different ways, in order to provide a way for object to be classified in a user specific way, objects are given a user object ID  or identification. This ensures that the same object can be categorized in multiple ways without duplicating the object and its contents every time it needs to be categorized for a user and for a view (a view may be defined by the user or the system, but may typically be a logical grouping of objects as specified by the user). User object IDs  are preferably a number between 0 and 2,147,483,647 but may be in different ranges. Utilizing a user object ID , as opposed to a global object ID  in this captured concept relational database table allows different users to store different vector representations of the same object. The key concept ID  for each key concept identified for the object is stored. The probability  associated with each key concept id , as determined from the Gaussian distribution, is stored. The probability  is preferably stored as a floating point number between 0 and 1 but may be scaled to other number-ranges, formats, or representations, such as an integer representation between 0 and 9,999,999,999 or any other convenient range providing sufficient resolution or precision for the task or query. The rank  of each key concept is stored. A rank of one preferably indicates that key concept had the highest probability of representing that object, while a rank of 3, for example, indicates the key concept had a lower priority than two other concepts, and so on. An exemplary embodiment of such a captured concepts relational database table is shown as Table 5.",{"@attributes":{"id":"p-0078","num":"0086"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},{},"Score (68)",{}]},{"entry":["User object id (66)","Key concept id (42)","Probability","rank (70)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","25","0.66","2"]},{"entry":["15","26","0.95","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"In one embodiment, a conditional probabilistic method is advantageously used for classification to determine whether an object belongs to a given category. Referring back to , a score for each category is computed for (step ) each object by processing the probabilities of all concepts in the object for that category. Even though low-bound  and high-bound can be any real number from 0 to 1 (or any other defined range), by setting the low-bound  to [\u03bc\u22122*\u03c3] (where \u03bc is the mean and a the standard deviation) and high-bound  to [\u03bc+2*\u03c3], we can capture many representative concepts for an object. This may be necessary or desirable for objects whose contents span several areas such as magazine articles. Normal distribution thus helps us remove certain high occurrence and low occurrence concepts from consideration. In such cases, the precision of classification can decrease dramatically if we have the same concept or phrase defining multiple categories. As an example, if the word \u201cWoods\u201d occurs in \u201cTiger Woods the Golfer\u201d, \u201cWoods Hole Oceanarium\u201d and \u201cBretton Woods Ski Resort\u201d, then the word \u201cWoods\u201d itself does not mean as much as the context under which it occurs. Thus the importance given to Woods should be reduced in the context of surrounding concepts and description. On the other hand, if there was a document about Tiger Woods where Woods occurs frequently with minimal mention of Golf, it should still be classified as \u201cTiger Woods the Golfer\u201d. Otherwise recall will decrease. Thus in this case importance given to Woods should be increased despite the fact that Woods occurs in other categories as well. In order to address both of these situations, we define two ratios namely:\n\n","The combined ratio R=R*Ris multiplied with object scores (the probability of key concept)  for final classification to categories. As individual component of the multiple is less than or equal to one, the combined score will always be greater than or equal to zero and less than or equal to one. In one embodiment, the processing of probabilities is an average. For each category, the combined score R of all key concepts appearing in the category and the object are summed and the total is divided by the total number of key concepts appearing in the object (R). In order to give equal weightage to categories with less descriptive concepts vis-\u00e0-vis more descriptive concepts, we define category normalization ratio (R). This category normalization ratio is defined as the ratio between the total number of concepts that occur in both the category and the object over the total number of concepts in the category. The final object score  is then R*R. Note that the object score according to usage here will always be greater than or equal to zero and less than or equal to one. Thus it can be represented as a percentage for convenience. Other mathematical objects or processes may be used to assign a score to the categories, particularly modification to a straight averaging.","The use of standard normal distribution to capture central theme or idea helps in the manner described as follows:\n\n","Objects are assigned to categories having a score greater than a threshold value of 25% (step ). The threshold value is a percentage and can have a value between 0 and 100. It is determined or set by the user based on several characteristics of the corpus of objects. These characteristics include features such as whether the corpus has objects with similar contents, whether a single object can have multiple themes (for example, as in a news feed), and the like characteristics. In general, it is observed that for object with multiple themes, lower threshold value such as 25% (or equivalent fraction) would be needed as opposed to object with single theme for which threshold can be higher such as 40%. As more objects are input to the engine, the more accurate the engine becomes and thus large volumes of objects input implies a lower threshold value as well. For example, threshold value in the range of 25% to 35% may typically be encountered, but are not limited to this range. More particularly, the threshold value range may have any upper and lower bound and be any range It is noted that each user may have different categories, concepts, and\/or concept groupings, as is true also for groups or organizations. Thus, the category to which an object is assigned may be different for different users (or groups or organizations).","Output from the analysis and categorization engine is advantageously stored in a user object relational database table, such as, for example, a relational database table illustrated in Table 6. Table 6 includes the user ID , user object ID , and global object ID  as well as user object hierarchy pointer . The user object hierarchy pointers  indicate the parent, or category, ID to which the object belongs and the relative location of the object pointer which indicates an ordering of objects as provided to the analysis and categorization engine. The score  for the object under that category is also stored. A status  is also provided to enable the display of the objects in a manner desirable to a user, for example, the categories may appear in a user interface as a folder and these folders may appear open or shut. Status  may also indicate that the object has been deleted or is active. One object can belong to more than one category, and thus can have more than one entry in this table.",{"@attributes":{"id":"p-0084","num":"0096"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 6"},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}},{"entry":[{},{},{},"User object hierarchy",{},{}]},{"entry":[{},{},{},"pointers (level, parent","Object status"]},{"entry":["User id\/","User object","Objectid","id, relative location of","(active, deleted, how to","Object score"]},{"entry":["Group id (56)","id (66)","(30)","the object pointer) (72)","display - shut or open) (76)","(74)"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","200","500","(3, 490, 150)","Active","\u221276.5"]},{"entry":["16","201","501","(4, 20, 200)","Deleted","\u2009\u200926.2"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}}}},"The above remarks have focused on the analysis and categorization engine  provided by the present invention to deduce the theme, or meaning of unstructured information and store output as structured information  in an open architecture format, we now turn to aspects of the present invention that further provide interface tools for viewing and analyzing unstructured information based on the categorization data collected and stored via the analysis and categorization engine. These tools enable intelligent views of unstructured information, the ability to view trends in a group of unstructured objects, and the ability to execute object concept based searches.","The inventive system and method advantageously provide and utilize an object concept based search utilizing the structured information  generated by the analysis and categorization engine . An embodiment of this object concept based search process  is outlined in . First, the search engine parses the user-entered search text to capture a seed concept or seed concepts of the entered text (step ). The search engine then determines whether at least one of the captured concepts are available as a key concepts associated with an object in the relational database tables (step ). The process is repeated for all seed concepts entered. Then, within the resulting list of objects, the search engine then determines if all the seed concepts and their user customizations exist, even the ones that have not been picked up as key concepts. The resulting object list gets narrowed down to accommodate the existence of all entered seed concepts with their special user customizations. Objects whose concepts match will then be returned to the user.","The objects returned as results for the object concept based search are then scored according to the following algorithm. The scores for the individual key concepts that contributed to the search are averaged for each object returned. If the search was performed by using a combination of key concepts and seed concepts, the number of hits for the seed concepts are then divided by the total number of hits picked up for all seed concepts in the document to determine how much the seed concept actually contributed to the concept of the document. This figure is then added and averaged with the average score for the key concepts to arrive at a relevancy score for the object as pertains to this particular search.","If the captured concept is not contained in the relational database tables, the search engine optionally performs a keyword search and phrase matching, directly accessing the unstructured information (step ). In addition, the search text is passed to the analysis and categorization engine (step ). The engine can re-capture the object concepts and update the relational database tables (step ).","The process then comprises capturing search text , and parsing the search text as individual words and phrases. The words within double quotes are considered as phrases, even though this definition of phrase can vary. It then uses the seed concepts extrapolation procedure to produce concept groupings  as depicted in . Based on the additional concepts, the engine will now refine the already generated and stored components of the reduced dimensionality vectors in Table 4. If the additional concept exists in an object, it will be added as a new entry in the data structure represented here as Table 4. The objects whose reduced dimensionality vectors have been modified in Table 4 will now go through steps , . Table 5 would be modified because of the newly added seed concepts and\/or concepts. Specifically, Key Concept id  would be modified to reflect newly added information.","As any user search continuously refines Table 4 and Table 5, the captured object concepts continue to get more accurate and thus can anticipate user search needs. Thus over time, the system can meet the user concept search needs with accuracy in step . The next time a user enters a similar phrase, the concepts look-up would contain the relevant information.","A graphical user interface advantageously provided by the inventive system provides a dynamic matrix view of concepts and their occurrence within unstructured objects. Concepts () are advantageously displayed versus object description  in a matrix, or spreadsheet, format. This assists a user in quickly determining an object or objects of interest. A user can choose concepts  to add or remove from this view and can compare concepts within the view. The provided view is personalized, that is, the view provided for a first user viewing a first set of unstructured objects user id and can have all the functionalities associated for the user. Each of the multiple views accessing the same object have their user object identifiers that link an object id to a specific user\/view. Thus it is possible in this embodiment or design for multiple user or views to have access to the same object. As captured and refined concepts and categories can vary by user and\/or view, it is possible for the same user object to be categorized and analyzed differently in every view.","The user\/view has to specify through an interface what categories need to be shared with other users\/views. This has to be done for all the categories that need to be shared once. Now, as soon as an object is classified under an user or view, the category under which the object is classified is examined to see if this would be shared and the targeted user or view for sharing, Then the user object will be reclassified for the targeted user or view. If the object (pointed to by the user object id) already exists under a category, then the object will not be classified again. If the category (or categories) under which a user object gets classified for a targeted user or view is shared, then the object will be shared based on the targeted user or view sharing setup. This process thus creates a dynamic flow of objects in the network of users or views without duplication of objects as only user object ids that point to the object id get created every time.","The use of views are advantageously more than just sharing. Views facilitate multidimensional analysis of unstructured information. For example, we can share a view on Golf (View I) to another view created on Tiger Woods (View II). Now the contents of View II, will have Golf and Tiger Woods. We can take that information and share it with another view (View III) on Vijay Singh. Then that view will have information only on Golf, Tiger Woods, and Vijay Singh. We can share the contents of View III and share with View IV on Chip Shots. Then the contents of View IV would be Golf, Tiger Woods, Vijay Singh and Chip Shots. This way we can drill down on unstructured data along multiple dimensions. Once the views are setup, the information will continue to flow and be updated.","It will be appreciated that the algorithms, procedures, and methods described herein may be implemented as computer program software and\/or firmware to be executed on a general of special purpose computer or information appliance having a processor for executing instructions and memory associated with the processor for storing data and instructions. The computer program may be stored on a tangible media such as a magnetic storage device, optical storage device, or other tangible media customarily used to store data and\/or computer programs. It will also be appreciated that the computer program product may be stored at one location and transmitted electronically, such as over the Internet or other network of connected computers, for receipt and storage at another location.","The inventive system and method further provide a data structure, such as a data structure defined in electronic memory of a computer or stored in other tangible media. Embodiments of the data structures have been described with reference to the tables herein above.","The inventive system and method also provide a business or operating model or method for concept-based dynamic analysis of unstructured information. Such operating model or method may for example provide access to a server that implements the inventive techniques on a pay-per-usage, pay-per-information item, pay-per-time, or other quantity or time basis. The inventive method may also or alternatively be provided in an application service provider context.","Workers skilled in the art will appreciate that, in light of the description, a variety of interfaces can be provided for a user to view, and understand the meaning of, unstructured objects based on the structured information generated by the analysis and categorization engine.","Although several embodiments of the invention have been described, it should be understood that the invention is not intended to be limited to the specifics of these embodiments. For example, specific information extracted by the analysis and categorization engine could be stored at different stages in relational database tables having a slightly different organization. Further, other data storing mechanisms could be utilized for making available the output of the analysis and categorization engine's analysis."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
