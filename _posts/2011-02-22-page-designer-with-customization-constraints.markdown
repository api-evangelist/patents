---
title: Page designer with customization constraints
abstract: A page design system addresses the need to impart flexibility into the design and customization of graphical user interfaces for applications. The graphical user interface includes pages and display groups within each page, and the page design system permits each individual page to be modified to suit the needs of a particular customer. So that the pages do not depart from their fundamental purpose to too great of an extent, the page design system guides and constrains the modifications to each page. In particular, the page design system constrains customization of each display group according to established definitions of admissible graphical user interface elements that are appropriate for each page, and each display group of elements within the page.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08793568&OS=08793568&RS=08793568
owner: Accenture Global Services Limited
number: 08793568
owner_city: Dublin
owner_country: IE
publication_date: 20110222
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Technical Field","This disclosure relates to the design of graphical user interfaces. In particular, this application relates to a page designer that guides and constrains customization of user interface pages of an application in an appropriate manner.","2. Related Art","Explosive growth in digital processing technology has led to the ubiquitous presence of applications of every kind running on an immense spectrum of devices. Most applications include a graphical user interface through which an operator interacts with the application. For instance, an insurance claim processing application presents user interface screens that guide the operator through the claim submission, validation, and payment\/rejection process.","It is the case, however, that not every customer of an application has exactly the same needs. In some instances it would be beneficial to customize the graphical user interface of an application to better suit the needs of a particular customer. Generally speaking, tools exist that assist with the creation of graphical user interfaces (as examples, the Adobe\u2122 Dreamweaver\u2122 web page designer and the Microsoft\u2122 Visual Basic\u2122 programming language). However, existing tools also present a bewildering array of design options that may not always be appropriate for a particular application.","A need exists to solve this problem and others previously experienced with graphical user interface design.","A page design system addresses the need to constrain modification of pages of a graphical user interface in an appropriate manner. The graphical user interface includes pages and display groups within each page, and the page design system permits each individual page to be modified to suit the needs of a particular customer. So that the pages do not depart from their fundamental purpose to too great of an extent, the page design system guides and constrains the modifications to each page. In particular, the page design system constrains customization of each display group according to established definitions of admissible graphical user interface elements that are appropriate for each page and each display group of elements within the page.","Other systems, methods, features and advantages will be, or will become, apparent to one with skill in the art upon examination of the following figures and detailed description. It is intended that all such additional systems, methods, features and advantages be included within this description, be within the scope of the invention, and be protected by the following claims.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 1","FIGS. 1-3"],"b":["100","100","100","102","104","104"]},"The GUI shown in  displays a GUI selection palette , a GUI page , and a configuration palette . The GUI page  shows, in the example shown in , a Policy Details GUI page for an insurance application. The page designer application facilitates constrained customization of GUI pages. Although the example of an insurance application is used below, the GUI pages may be tailored to any application.","The Policy Details page includes display groups, four of which are labeled , \u201cPolicy Information\u201d; , \u201cAdditional Policy Information\u201d; , \u201cProducer Information\u201d; and , \u201cAdditional Maintenance Marketing Information\u201d. A GUI page for an application may include any number of display groups. Any of the display groups may organize specific GUI elements together under the display group. The organization may be visual, for example, in which the organized GUI elements are grouped together for display, such as within a displayed boundary (e.g. a shape such as a rectangle drawn around the elements); logical, for example, in which the organized GUI elements are linked together in a functional way; or implemented in other ways. Thus, the display group represents a section on an application page. Typically, the application groups GUI elements logically into these sections. The GUI elements appear grouped together in display groups within the page designer application. For example, the Additional Policy Information display group  visually organizes together the Custom GUI element , the Excluded Driver GUI element , and the Additional Insured GUI element .","The GUI elements may vary widely in form and function. Examples of GUI elements include: text boxes, read-only text fields, display text, number fields, and description text. Additional examples of GUI elements include date fields, checkboxes, combo boxes, multi-select combo boxes, radio buttons and hyperlinks.","As explained in more detail below, the page designer application applies standard data objects and custom data objects to constrain customization of the GUI page . A standard data object links to the GUI page  and establishes permissible GUI elements with respect to the GUI page  as a whole. In other words, the standard data objects define GUI elements that are allowed to appear in any display group present in a particular GUI page. A custom data object links to one or more particular display groups and establishes permissible GUI elements specifically respect to those display groups. In other words, the custom data object defines GUI elements that are allowed to appear in particular display groups. Accordingly, as the designer selects different display groups in the GUI page  to customize, the admissible GUI elements for the selected display group change depending on the custom data objects linked to the selected display group. More specifically, the page design logic determines that a particular display group is selected from among multiple display groups, determines the custom data objects linked to the display group, and determines the permissible GUI elements with respect to the selected display group established by the custom data objects linked to the selected display group (in addition to the permissible GUI elements defined by the standard data objects).","As mentioned above, the page designer application displays the GUI page , the display groups - in the GUI page, and the GUI selection palette . The page design logic that implements the page designer application analyzes the custom data objects and the standard data objects to determine how to constrain customization of the GUI page . In particular, the page design logic populates the GUI selection palette  with selections of admissible GUI elements, such as the Lien Holder GUI element selection . The admissible GUI elements include the permissible GUI elements established with respect to the GUI page  by the standard data objects and the permissible GUI elements with respect to the selected display group established by the custom data objects. The page design logic constrains customization of the selected display group to the admissible GUI elements in the GUI selection palette .","Further with regard to the GUI selection palette , the Pages selector  may be a drop down list of the pages defined in the application. The designer may then select any page desired to configure from the drop down list. The Available Fields selector  may present a list of permissible GUI elements (e.g., data fields) defined by the custom and standard data objects for a particular selected page. Custom selectors, such as the Additional Policy Fields selector  may display a list of permissible GUI elements for a particular selected display group such as the Additional Policy Information display group . The permissible GUI elements displayed in the selector  may then change depending on the selected display group and the custom data objects defined for the selected display group (the standard data objects are defined for the selected page as a whole and are therefore consistently display regardless of which display group is selected). The system may, if desired, further constrain configuration by preventing the same permissible GUI element from being added twice to the same page. The Policy Fields selector  may display a drop down list of standard data objects for a particular page.","In one implementation, the page design logic organizes the GUI selection palette  by custom data objects. For example, the GUI selection palette  may include an expandable\/collapsible entry for any given custom data object, under which are organized the permissible GUI elements defined by that custom data object. The GUI selection palette  may include separate links or other mechanisms to switch display to permissible GUI elements defined by custom data objects or standard data objects.","There may be multiple custom data objects that each establish permissible GUI elements with respect to the selected display group. In such cases, the page design logic may populate the GUI selection palette  with the permissible GUI elements from each custom data object. The page design logic accepts from the designer a selection of a specific admissible GUI element from among the admissible GUI elements in the GUI selection palette  and permits the designer to add the specific admissible GUI element to the selected display group (e.g., through a drag and drop, double click, or other operation).  shows an example in which the designer has added the permissible Lien Holder GUI element  from the GUI selection palette  to the Additional Policy Information display group .","In some implementations, the page designer application may setup data type definitions that establish allowable data types for the admissible GUI elements. The page design logic may then interact with the designer to customize GUI elements by assigning a designer selected data type definition to the specific admissible GUI element that the designer has added to a display group. Given the selected data type definition, the page design logic may also accept, from the designer, GUI element customization information constrained by the selected data type definition.","To support the customization, the page design logic may establish a correspondence table from data types to available GUI controls. Table 1 shows an example of the correspondence table that the page design logic may implement. In other words, when a designer chooses a particular data type definition for the GUI element to the selected display group, the page design logic may then allow the designer, as a customization, to select between various available controls that the GUI element will implement, as constrained by the correspondence table for the selected data type definition.",{"@attributes":{"id":"p-0029","num":"0028"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Data Type","Available GUI controls"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Phone","Text Box, Read-Only Text Field,"]},{"entry":[{},{},"Display Text"]},{"entry":[{},"Number","Number"]},{"entry":[{},"Text","Description Text, Read-Only Text"]},{"entry":[{},{},"Field, Text Box, Display Text"]},{"entry":[{},"Date","Date"]},{"entry":[{},"Valid Value List","Checkbox, Combo Box, Multi-Select"]},{"entry":[{},{},"Combo Box, Radio Button"]},{"entry":[{},"Single Valid Value","Display Text, Read-Only Text Box"]},{"entry":[{},"Boolean","Checkbox, Combo Box, Radio Button"]},{"entry":[{},"Time","Time"]},{"entry":[{},"Currency","Currency"]},{"entry":[{},"Year","Text Box, Read-Only Text Field,"]},{"entry":[{},{},"Display Text"]},{"entry":[{},"Email","Text Box, Read-Only Text Field,"]},{"entry":[{},{},"Display Text"]},{"entry":[{},"Web Address","Hyperlink, Text Box, Read-Only Text"]},{"entry":[{},{},"Field, Display Text"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Alternatively or additionally, the page design logic may establish a correspondence table from available GUI controls to data types. Table 2 shows an example of the correspondence table that the page design logic may implement. In other words, when a designer chooses a particular GUI control for the new GUI element added to the selected display group, the page design logic may then allow the designer, as a customization, to select between various available data types established in the correspondence table for the selected GUI control.",{"@attributes":{"id":"p-0031","num":"0030"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"GUI control","Available Data Types"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Currency","Currency"]},{"entry":[{},"Checkbox","Boolean, Valid Value List"]},{"entry":[{},"Combo Box","Boolean, Valid Value List"]},{"entry":[{},"Date","Date"]},{"entry":[{},"Description Text","Text"]},{"entry":[{},"Display Text","Phone, Text, Single Valid Value, Year,"]},{"entry":[{},{},"Email, Web Address"]},{"entry":[{},"Hyperlink","Web Address"]},{"entry":[{},"Multi-Select Combo Box","Valid Value List"]},{"entry":[{},"Number","Number"]},{"entry":[{},"Radio Button","Valid Value List, Boolean"]},{"entry":[{},"Read-Only Text Field","Phone, Text, Single Valid Value, Year,"]},{"entry":[{},{},"Email, Web Address"]},{"entry":[{},"Text Box","Phone, Text, Year, Email, Web"]},{"entry":[{},{},"Address"]},{"entry":[{},"Time","Time"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["110","302","202","302"]},"The Field Display Properties selection may include customization options for a label for the GUI element , the type of GUI element (e.g., a text box), the GUI element width, or other customization options. The Valid Values selection may include customization options for limiting the values that may be entered into the GUI element . In particular, the Valid Values selection shows the valid values which are associated to this GUI element (i.e., if the GUI element is a combo box, this shows the values that may appear in the combo box). The user can customize individual valid values through the Valid Values selection (including expiring the ones they no longer want to appear in the combo box) as well as add additional valid values. The user can also relate valid values to other valid values. For example, if there are GUI elements for State and County, the user can relate State valid values to applicable County valid values so that if user selects a State, the GUI element for County will only contain applicable Counties.","The Display Rules selection may include customization options that specify when the GUI element  is displayed. In particular, the Display Rules selection allows the user to configure when the selected GUI element is hidden or disabled. The default behavior may be, for example, to always to show and enable (make editable) the GUI element. The Display Rules selection allows the user to always hide or hide based on an expression (e.g., a logical condition that the user specifies) as well as always disable or disable based on expression (e.g., a logical condition that the user specifics).","Additional, fewer, or different property customization options may be present, and they may change depending on the type of GUI element to which they apply. For example, a text box GUI element may have field width or label property customization options, while a combo box GUI element may have property customization options that define the entries in the combo box, how they are formatted and displayed, and other customization options.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4","b":["400","400","400","402","404","406","408","402","406"]},"To that end, the memory  stores the information on which the page design logic  operates. For example, the page design logic  may store, define, read or modify, in the memory , the GUI selection palette , GUI page , customization palette , standard data objects , and custom data objects . As shown in , the page design logic  populates the GUI selection palette  with permissible display group GUI elements (\u201cPDGEs\u201d), two of which are labeled PDGE  and PDGE . There may be any number, including zero, of such PDGEs for any given display group. The page design logic  also populates the customization palette  with customization options  appropriate for a selected GUI element.","The GUI page  includes any number of display groups. Three such display groups are labeled in  as display groups , , and . The display groups organize GUI elements. There may be any number of GUI elements organized under a display group. As examples, display group  includes GUI elements , , , , and ; display group  includes GUI elements  and ; and display group  includes the GUI element .","As noted above, the standard data object  is linked to the GUI page  to define permissible display group GUI elements for the GUI page  as a whole. Three PDGEs , , and  from the standard data object  are shown in . Any of the PDGEs may be defined in advance. In this way, the designer has some flexibility to change the design of the GUI pages, yet cannot stray too far from the original design of the GUI pages . Similarly, the custom data object  defines PDGEs , , and  that are available for the display groups to which the custom data object is specifically linked. The system  may implement the links as pointers, database fields defined in tables (e.g., as described in more detail below) that represent the standard data objects  and custom data objects  (e.g, with a database field specifying identifiers of linked GUI pages and display groups), or in other ways.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 5","b":["500","406","404","402","500","404","410","502","410","410","404","500","504","500","414","412","406","404","506"]},"The page design logic  displays the GUI page (e.g., on the display ), including the display groups defined for the GUI page, as well as the GUI selection palette  and configuration palette  (). Based on the selected GUI page, display group, and associated custom and standard data objects, the page design logic  populates the GUI selection palette  with permissible display group elements (). The page design logic  constrains customization of the GUI page to the permissible display group elements. To that end, the page design logic  may accept a selection of a specific admissible GUI element from among the admissible GUI elements () and add the specific admissible GUI element to the selected display group ().","In addition, the page design logic  may accept a selection of, and assign a specific data type definition to, the selected permissible GUI element (). The data type definition may contribute to determining the customization options available for the GUI elements. Accordingly, the page design logic  populates the customization palette  with the permissible customization options  (). The page design logic  accepts customization information from the designer constrained by the permissible customization options  and sets the GUI element properties accordingly ().",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 6","b":["600","600","600","602","604","606","608","610","600","612","614","616","618"]},{"@attributes":{"id":"p-0044","num":"0043"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE STANDARD DATA OBJECT"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Description","Table Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Defines data items in the system. A data item may be a data","Data Item (602)"]},{"entry":"element, extended data element, logical table or column, alias or"},{"entry":"other data item."},{"entry":["Defines the fully-qualified name for a data item. For example, if","Data Item Fully Qualified"]},{"entry":["the \u201cState\u201d data element exists in a data item then this table","Name (604)"]},{"entry":"would specify the full \u201cpath\u201d (e.g., Contract.Address.State)."},{"entry":["Specifies the validations that should be performed for a specific","Data Item Fully Qualified"]},{"entry":["data item.","Name Validation (606)"]},{"entry":["Contains locale-specific information about a data item, to provide","Data Item Localized (608)"]},{"entry":"language or other localization characteristics of the data item."},{"entry":["This table lists the physical tables (as defined elsewhere in the","Data Item Table (610)"]},{"entry":"data model) that the given data item has the primary keys for."},{"entry":"The data item may be defined as a \u201cData Group\u201d"},{"entry":"(DATAITEM.C_DATAITEM_TYP = \u2018DATAGRP\u2019) data item."},{"entry":["Defines the various types of data items that are defined in the","Data Item Type (612)"]},{"entry":"Data Item table."},{"entry":["Contains locale-specific information about a Data Item Type","Data Item Type Localized"]},{"entry":[{},"(614)"]},{"entry":["Defines the data types that are available and used within the","Datatype (616)"]},{"entry":"system. This includes, e.g., both core .NET data types and"},{"entry":"application-specific types."},{"entry":["Contains locale-specific information about a Data Type.","Datatype Localized (618)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The data item table  stores both standard and custom data objects, and the permissible GUI elements (e.g., the fields) for both standard and custom objects. For example, to define a standard data object (which may be referenced as a \u201cDTO\u201d below), an application designer may insert the standard data objects and their fields into the data item table . The system  may then query the data item table  to determine available standard (and custom) data objects and their fields.","Table DATAITEM table, below, provides an example of how the data item  may be implemented.",{"@attributes":{"id":"p-0047","num":"0046"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE DATAITEM"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Description","Column Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["This column uniquely identifies the data item. If the data item is a","Data Item Name"]},{"entry":"standard data object, then this column is the name of the class (without"},{"entry":"the namespace prefix). If the data item is an Element\/property within a"},{"entry":"standard data object then this is the name of the property as specified in"},{"entry":"the code."},{"entry":["This is a code used for representing a type of Data Item in the data","Data Item Type Code"]},{"entry":"dictionary. There is a pre-defined and fixed set of Data Item types that"},{"entry":"the architecture supports."},{"entry":["This column contains the code that represents the datatype of the data","Datatype Code"]},{"entry":"item. The list of valid datatypes is defined in the Datatype table."},{"entry":["This column will contain the name of a RefData category if the data item","Category Name"]},{"entry":"corresponds to a key within a RefData category. For example, if the"},{"entry":"Data Item is \u201cStateCode\u201d then this column might contain the name of a"},{"entry":"RefData category called \u201cStates\u201d. This can be used by configuration"},{"entry":"consoles to aid the user when configuring activities, extension points,"},{"entry":"etc."},{"entry":["If the data item is of type \u201cALIAS\u201d, then this column contains the name of","Aliased Data Item Name"]},{"entry":"the data item that is being aliased. For example, if a standard data"},{"entry":"object data item has a name \u201cCustomerDTO\u201d it may be necessary to"},{"entry":"define an alias of that called \u201cCustomer\u201d. In that case, the \u201cCustomer\u201d"},{"entry":"data item would be defined of type \u201cALIAS\u201d and this column would"},{"entry":"contain \u201cCustomerDTO\u201d."},{"entry":["This is a code that indicates the format mask (defined in a FRMT_MSK","Default Format Mask Code"]},{"entry":"table) that, by default, should be used when displaying a formatted value"},{"entry":"for this data item. It is possible for this to be overridden if the data item"},{"entry":"is added to a Display Group."},{"entry":["This column contains the name of the functional data group that the data","Functional Data Group Code"]},{"entry":"item belongs to. This does not necessarily represent a physical group"},{"entry":"and is different than a \u201cdata group\u201d type of data item. This column"},{"entry":"provides a way of functionally grouping together similar data items to aid"},{"entry":"in the configuration activities."},{"entry":["This field contains the code that represents the help text to display for","Help Text Code"]},{"entry":"field level help associated with this data time."},{"entry":["This optionally contains the name of an anchor (location tag) in the help","Help Anchor Name"]},{"entry":"text that should be navigated to when the help is displayed. This allows"},{"entry":"a single help entry to contain information for multiple data items and the"},{"entry":"appropriate help section will be navigated to when displayed."},{"entry":["This column serves two purposes. It identifies the last transaction that","Last Transaction Id"]},{"entry":"modified the record. This may tie to the system auditing columns. The"},{"entry":"other purpose of this column is to be the optimistic lock key."},{"entry":["If this column is not null it contains the code for the Business Data Type","Business Data Type Code"]},{"entry":"that was used as the template when creating the Data Item."},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table DATAITEM_FQN table, below, provides an example of how the data item fully qualified name table  may be implemented.",{"@attributes":{"id":"p-0049","num":"0048"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE DATAITEM_FQN"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Description","Column Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["This is the fully qualified name for the data item, e.g., the full listing","Data Item Fully Qualified Name"]},{"entry":"of the DTOs in which the data item is located (e.g.,"},{"entry":"DTO1.DTO2.DATAITEM)."},{"entry":["Primary key that points to the data item itself in the data item table.","Data Item Name"]},{"entry":["Used to set an edit rule that determines, e.g., which users can edit","Edit Authorization Rule Name"]},{"entry":"the data item."},{"entry":["Used to set a real-only rule that determines, e.g., which users have","Read Authorization Rule Name"]},{"entry":"read-only access to the data item."},{"entry":["This column serves two purposes. It identifies the last transaction","Last Transaction Id"]},{"entry":"that modified the record. This may tie to the system auditing"},{"entry":"columns. The other purpose of this column is to be the optimistic"},{"entry":"lock key."},{"entry":["This is the name of the model data service that can be used to","Model Data Service Name"]},{"entry":"retrieve the data corresponding to the given data item fully qualified"},{"entry":"name.."},{"entry":["This is the fully qualified name for the data item, e.g., the full listing","Data Item Fully Qualified Name"]},{"entry":"of the DTOs in which the data item is located (e.g.,"},{"entry":"DTO1.DTO2.DATAITEM)."},{"entry":["This is a primary key that point to the validation itself in the","Validation Name"]},{"entry":"validation table."},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table DATAITEM_FQN_VLDTN table, below, provides an example of how the data item fully qualified name validation table  may be implemented.",{"@attributes":{"id":"p-0051","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE DATAITEM_FQN_VLDTN"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Table Column Name","Description","Column Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["N_DATAITEM_FQN","This is the fully qualified name for the data item, e.g.,","Data Item Fully"]},{"entry":[{},"the full listing of the DTOs in which the data item is","Qualified Name"]},{"entry":[{},"located (e.g., DTO1.DTO2.DATAITEM)."]},{"entry":["N_VLDTN","This is a primary key that point to the validation itself in","Validation Name"]},{"entry":[{},"the validation table."]},{"entry":["V_SRT_ORD","This is the sort order of the validations for the data","Sort Order Value"]},{"entry":[{},"item fully qualified name (e.g., if the a data item FQN"]},{"entry":[{},"has more than one validation, this determines the"]},{"entry":[{},"order of those validations for that data item FQN)."]},{"entry":["B_RQRD_VLDTN_TYP","If this column is true (1) it indicates that the given","Required Validation"]},{"entry":[{},"validation exists to verify the data item contains a","Type Flag"]},{"entry":[{},"value. In other words, the data item is required to"]},{"entry":[{},"have a value and this validation exists to make sure a"]},{"entry":[{},"value exists."]},{"entry":["G_LAST_TXN_ID","This column serves two purposes. It identifies the last","Last Transaction Id"]},{"entry":[{},"transaction that modified the record. This may tie to"]},{"entry":[{},"the system auditing columns. The other purpose of"]},{"entry":[{},"this column is to be the optimistic lock key."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table DATAITEM_LCL table, below, provides an example of how the data item localized table  may be implemented.",{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE DATAITEM_LCL"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Description","Column Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Primary key that points to the data item itself in the","Data Item Name"]},{"entry":"data item table."},{"entry":["This column contains the identifier of the locale","Locale Id"]},{"entry":"that the record is for. This value and other values"},{"entry":"used in other tables may be defined in separate"},{"entry":"table in the system (e.g., a table called LCL)."},{"entry":["This is the description for the data item as shown","Data Item Text"]},{"entry":"on the page designer user interface in the Field"},{"entry":"Properties panel Description Field."},{"entry":["The G_LAST_TXN_ID column serves two","Last Transaction Id"]},{"entry":"purposes. It identifies the last transaction that"},{"entry":"modified the record. This may tie to the system"},{"entry":"auditing columns. The other purpose of this"},{"entry":"column is to be the optimistic lock key."},{"entry":["This is the display name for the data item which","Data Item Display"]},{"entry":["may be displayed in the configuration user","Name"]},{"entry":"interface."},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table DATAITEM_TBL table, below, provides an example of how the physical data item table  may be implemented.",{"@attributes":{"id":"p-0055","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE DATAITEM_TBL"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Description","Column Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Primary key that points to the data item itself in","Data Item Name"]},{"entry":"the data item table."},{"entry":["This is the name of a physical table (defined in","Table Name"]},{"entry":"the TBL table) that the given Data Item contains"},{"entry":"the primary keys for. The Data Item may be"},{"entry":"specified, e.g., as \u201cDATAGRP\u201d. This information"},{"entry":"may be used when doing configuration."},{"entry":["This column serves two purposes. It identifies","Last Transaction Id"]},{"entry":"the last transaction that modified the record. This"},{"entry":"may tie to the system auditing columns. The other"},{"entry":"purpose of this column is to be the optimistic"},{"entry":"lock key."},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table DATAITEM_TYP table, below, provides an example of how the data item type table  may be implemented.",{"@attributes":{"id":"p-0057","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE DATAITEM_TYP"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Description","Column Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["This is a code used for representing a type of Data","Data Item"]},{"entry":["Item in the database. There may be a pre-defined","Type Code"]},{"entry":"and fixed set of Data Item types that the architecture"},{"entry":"supports."},{"entry":["This column contains the date that the record went into","Begin Date"]},{"entry":"effect. It is possible for this date to be in the future."},{"entry":["The column contains the date the record will expire.","End Date"]},{"entry":"This date may be greater than or equal to the"},{"entry":"D_BEG column's value. Setting this field"},{"entry":"equal to the D_BEG value may logically delete"},{"entry":"the record (e.g., make the record so it was"},{"entry":"never active)."},{"entry":["This column serves two purposes. It identifies the","Last Transaction"]},{"entry":["last transaction that modified the record. This may","Id"]},{"entry":"tie to the system auditing columns. The other"},{"entry":"purpose of this column is to be the optimistic"},{"entry":"lock key."},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table DATAITEM_TYP_LCL table, below, provides an example of how the data item type localized table  may be implemented.",{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE DATAITEM_TYP_LCL"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Description","Column Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["This is a code used for representing a type of Data","Data Item"]},{"entry":["Item in the data dictionary. There is a pre-defined","Type Code"]},{"entry":"and fixed set of Data Item types that the architecture"},{"entry":"supports."},{"entry":["This column contains the identifier of the locale that","Locale Id"]},{"entry":"the record is for."},{"entry":[{},"Data Item"]},{"entry":[{},"Type Text"]},{"entry":["This column serves two purposes. It identifies the","Last"]},{"entry":["last transaction that modified the record. This may","Transaction"]},{"entry":["tie to the system auditing columns. The other","Id"]},{"entry":"purpose of this column is to be the optimistic"},{"entry":"lock key."},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table DATATYP table, below, provides an example of how the datatype table  may be implemented.",{"@attributes":{"id":"p-0061","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE DATATYP"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Description","Column Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["This is a code that represents the datatype. Other","Datatype Code"]},{"entry":"tables will reference this code."},{"entry":["This is the fully qualified name for the data type, e.g.,","Datatype Fully"]},{"entry":["the full listing of the DTOs in which the data type is","Qualified Name"]},{"entry":"located (such as DTO1.DTO2.DATATYPE)."},{"entry":["This flag is used to indicate whether the datatype","Allow Extended"]},{"entry":["can be used when defining a Data Item of type","Data Flag"]},{"entry":"Extended Data (i.e.,"},{"entry":"DATAITEM.C_DATAITEM_TYP = \u2018EXTDATA\u2019)."},{"entry":["This column serves two purposes. It identifies the","Last Transaction"]},{"entry":["last transaction that modified the record. This may","Id"]},{"entry":"tie to the system auditing columns. The other"},{"entry":"purpose of this column is to be the optimistic"},{"entry":"lock key."},{"entry":["This flag is used to indicate whether the datatype","Allow Element"]},{"entry":["can be used when defining a Data Item of type","Flag"]},{"entry":"Element (i.e.,"},{"entry":"DATAITEM.C_DATAITEM_TYP ="},{"entry":"\u2018ELEMENT\u2019)."},{"entry":["This flag is used to indicate whether the datatype","Allow Data"]},{"entry":["can be used when defining a Data Item of type Data","Group Flag"]},{"entry":"Group (i.e., DATAITEM.C_DATAITEM_TYP ="},{"entry":"\u2018DATAGRP\u2019)."},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table DATATYP_LCC table, below, provides an example of how the datatype localized table  may be implemented.",{"@attributes":{"id":"p-0063","num":"0062"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE DATAITEM_TYP_LCL"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Description","Column Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["This is a code that represents the datatype and is","Datatype Code"]},{"entry":"defined in the Datatype table."},{"entry":["This column contains the identifier of the locale","Locale Id"]},{"entry":"that the record is for."},{"entry":["This is the description of the data item type, which","Datatype Text"]},{"entry":"may not be exposed in the page designer user"},{"entry":"interface or other interfaces."},{"entry":["This column serves two purposes. It identifies the","Last Transaction Id"]},{"entry":"last transaction that modified the record. This may"},{"entry":"tie to the system auditing columns. The other"},{"entry":"purpose of this column is to be the optimistic lock"},{"entry":"key."},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 7","b":["700","700","702","704","706"]},"Regarding the terminology used below, a logical table is an analog for a custom data object, and a logical column is an analog for a custom field that is included in the custom data object. In one implementation, applications define physical tables that may be extended with logical tables which define custom data objects. For example, if an application includes a physical table storing claim numbers, then a logical table may be defined and linked to the claim number table to define custom fields related to the claim number table.","A display group may correspond to one or more logical tables linked to a physical table. The custom fields that a designer may then add to the display group are available based on logical tables associated together into the display group. For example, a separate association table may associate one or more logical tables to a display group so that the display group includes one or more sets of custom fields defined by one or more logical tables.","As mentioned above, a logical column may define a custom field. Thus, each time that a custom field is desired to be added, a logical column defining that custom field is added to the logical table. Furthermore, the data item table  may store field property data as noted above. More specifically, logical columns are defined in the data item table . When the column is defined it is given a name, description, and data type. A given logical column may be used in multiple logical tables. When a logical column is added to a logical table, that association is stored in the LGCL_TBL_DATAITEM table  and a new fully qualified name is created in the form<logical table>.<logical column> and is associated with the logical column's data item. In addition, the system generates a Logical Column Id, which may be an integer that uniquely identifies the logical column on the logical table. The system may expose public Application Programming Interfaces (APIs) that accept physical table names, logical table names, and logical column names to manipulate logical tables and logical columns. Internally the APIs may translate a logical table and logical column into the appropriate logical column ID.","As stated above, a logical column can be added to multiple logical tables. In one implementation, when a logical column is added to multiple different logical tables then each \u201cinstance\u201d of that logical column will contain different data. There need not be sharing of data across logical tables.","The system  allows logical extension of the data model by defining new logical tables that contain one or more logical columns. Data extensibility provides the ability to logically add new fields to an existing physical table in an application database without modifying the physical structure of the table. The physical table is logically extended to support capturing additional related data. A physical table can be extended by more than one logical table.","Applications that use data extensibility allow their customers to define new fields without code changes. In one implementation, there are three different tables involved: physical, extension, and logical. The application developer decides which physical tables in the data model can be extended. Extending a physical table may be accomplished by creating an additional database table, the extension table that stores the value for any extended data for the physical table. For example, if the application has a physical table called Customer that stores basic customer information and the application needs to allow clients to define custom data elements related to a customer, the application developer may create an extension table called, e.g., Customer_Extn. The extension table stores the values of all logical columns that a client defines for a customer. The definitions of logical columns are grouped together into logical tables. This allows the client to define many different logical tables that map to the extension table associated with a physical table. For example, the client could define logical tables such as Bank Customer, Person Customer, Airline Customer, and so on, where each logical table has different logical columns, some of which may be in common.","An application team may decide what physical tables can be extended and create the corresponding extension table. Consumers of the application may then define the logical tables and fields that belong to each logical table they define. For example, assume that the application is flexible and reusable software for a bank with core functionality that could apply to numerous banks with slightly different business models and terminology. Any bank system has a core Customer table and a set of fields that would most likely apply to all banks (e.g., CustomerId, CustomerType, DateEnrolled, and Address), but frequently, the customer types among the individual banks vary with different processing and terminology. For example, some banks might have only corporate customers while another bank might have individuals, companies, and government as customer types.","In this scenario, the developer might want to have a single physical table called Customer with the fixed fields CustomerId, CustomerType, DateEnrolled, and Address. The developer also permits extension of the information collected for each customer type to meet their business needs and terminology. With several customer types, a developer may not want to create new tables for each of these types as they could contain duplicate information. Creating normalized tables that join to a common Customertable may also not be an option as the application may need the capability to add and remove fields in the metadata at design-time so the customer site can customize the application. The runtime can then automatically retrieve and display data without requiring modification to the data access service, business service, or web page.","Table Custom Data Object provides an example of the tables that may be used to implement custom data objects.",{"@attributes":{"id":"p-0074","num":"0073"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE CUSTOM DATA OBJECT"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Description","Table Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Contains the definition of a Logical Table. A physical","Logical Table"]},{"entry":["table that has been enabled for extensibility will have","(702)"]},{"entry":"a corresponding \u201cextension table\u201d (which is also a"},{"entry":"physical table). The application and clients can define"},{"entry":"one or more \u201cLogical Tables\u201d that will use the"},{"entry":"physical extension table for storing data."},{"entry":["This contains the list of fields that are part of a given","Logical Table"]},{"entry":["logical table. In other words, this table lists the","Data Item (704)"]},{"entry":"\u201ccolumns\u201d of each logical table."},{"entry":["Contains locale-specific information about a Logical","Logical Table"]},{"entry":["Table, to provide language or other localization","Localized (706)"]},{"entry":"characteristics of the table."},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table LGCL_TBL, below, provides an example of how the logical table  may be implemented.",{"@attributes":{"id":"p-0076","num":"0075"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE LGCL_TBL"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Description","Column Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["This column contains the name of the logical table. A","Logical Table"]},{"entry":["physical table can have multiple logical tables","Name"]},{"entry":"defined to extend it."},{"entry":["This is the name of the physical table (defined","Table Name"]},{"entry":"elsewhere in the system) that the logical table extends."},{"entry":["This column contains the date that the record went","Begin Date"]},{"entry":"into effect. It is possible for this date to be in the"},{"entry":"future."},{"entry":["The column contains the date the record will expire.","End Date"]},{"entry":"This date may be controlled to be greater than or"},{"entry":"equal to the Begin Date column's value. Setting"},{"entry":"this field equal to the Begin Date value may cause"},{"entry":"logical deletion of the record (e.g., make the record"},{"entry":"so it was never active)."},{"entry":["This column serves two purposes. It identifies the","Last"]},{"entry":["last transaction that modified the record. This may","Transaction"]},{"entry":["tie to the system auditing columns. The other purpose","Id"]},{"entry":"of this column is to be the optimistic lock key."},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table LGCL_TBL_DATAITEM, below, provides an example of how the logical table data item  may be implemented.",{"@attributes":{"id":"p-0078","num":"0077"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE LGCL_TBL_DATAITEM"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Description","Column Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["This is the name of the logical table (as defined in the LGCL_TBL table)","Logical Table Name"]},{"entry":"that the data item (i.e., logical column) is to be associated with."},{"entry":["Primary key that points to the data item itself in the data item table.","Data Item Name"]},{"entry":["This is the fully qualified name of the data item.","Data Item Fully Qualified"]},{"entry":[{},"Name"]},{"entry":["This is the name of the physical table (defined elsewhere in the system)","Table Name"]},{"entry":"that the logical table extends. This column exists on this table so that a"},{"entry":"unique constraint may be enforced that prevents the same data item to"},{"entry":"be part of two different Logical Tables that extend the same physical"},{"entry":"table."},{"entry":["The column contains the date the record will expire. This date may be","End Date"]},{"entry":"controlled to be greater than or equal to the Begin Date column's value."},{"entry":"Setting this field equal to the D Begin Date value will logically delete the"},{"entry":"record (e.g., make the record so it was never active)."},{"entry":["This column contains the date that the record went into effect. It is","Begin Date"]},{"entry":"possible for this date to be in the future."},{"entry":[{},"Default Value Text"]},{"entry":["This is one of four \u201cdefault value\u201d columns on the table. This allows a","Default Decimal Value"]},{"entry":"new logical column to be added to an existing logical table along with a"},{"entry":"default value. This is similar to adding a new column to a physical table"},{"entry":"(that already contains data) and specifying a default value for it. This"},{"entry":"column is used for storing the default of a logical column that is a"},{"entry":"decimal datatype. If the logical column's datatype is not decimal or no"},{"entry":"default is needed then this column must be null."},{"entry":[{},"Default Value Timestamp"]},{"entry":[{},"Default Value Number"]},{"entry":["This column serves two purposes. It identifies the last transaction that","Last Transaction Id"]},{"entry":"modified the record. This may tie to the system auditing columns. The"},{"entry":"other purpose of this column is to be the optimistic lock key."},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table LGCL_TBL_LCL, below, provides an example of how the logical table localized  may be implemented.",{"@attributes":{"id":"p-0080","num":"0079"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE LGCL_TBL_LCL"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Description","Column Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["This is the name of the logical table.","Logical Table"]},{"entry":[{},"Name"]},{"entry":["This column contains the identifier of the locale that","Locale Id"]},{"entry":"the record is for, which may be defined in another"},{"entry":"system table."},{"entry":["This is the description of the Logical Table. As","Logical"]},{"entry":["shown in the Configuration Console, this is the","Table Text"]},{"entry":"description field for the Custom Data Object."},{"entry":["This column serves two purposes. It identifies the","Last"]},{"entry":["last transaction that modified the record. This may","Transaction Id"]},{"entry":"tie to the system auditing columns. The other purpose"},{"entry":"of this column is to be the optimistic lock key."},{"entry":["This is a localized version of the name of the logical","Logical Table"]},{"entry":["table that can be displayed to users.","Display Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Below is example pseudo code for inserting a new logical column to define a custom field for Eye Color:",{"@attributes":{"id":"p-0082","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003LogicalColumnDTOeyeColor = new LogicalColumnDTO( )"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003Set name for new logical column to EyeColor;"},{"entry":"\u2003\u2003\u2003\u2003Set BeginDate to the earliest date allowed;"},{"entry":"\u2003\u2003\u2003\u2003Set EndDate to the highest date allowed;"},{"entry":"\u2003\u2003\u2003\u2003Set Data Type for new logical column to String;"},{"entry":"\u2003\u2003\u2003\u2003Assign eye color logical column to desired logical table (e.g., the"},{"entry":"Resident table);"},{"entry":"\u2003\u2003\u2003\u2003Assign eye color logical column to desired functional data group"},{"entry":"(e.g., the Customer Data functional data group);"},{"entry":"\u2003\u2003\u2003\u2003Assign locale specific information for the eye color logical"},{"entry":"column by:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Set a locale ID (e.g., to 1033 for English - US);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Set a description for the eye color logical column which"},{"entry":"will be shown in the page designer field properties panel in the description"},{"entry":"field (e.g., \u201cThe color of the person's eyes\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Assign a display name for the new eye color logical column"},{"entry":"which will be shown in the page designer field properties panel in the field"},{"entry":"name field (e.g., \u201cEye Color\u201d);"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Insert new logical column into the tables noted above (e.g., by calling an application programming interface function that inserts the column).","In the description above, one aspect of the page design innovation related to a method for guided design of pages for a graphical user interface (GUI) to an application. The method included defining, in a memory, page design logic, a GUI page, and a display group within the GUI page. The display group organizes specific GUI elements together under the display group. Also defined in the memory is a standard data object linked to the GUI page. The standard data object establishes permissible GUI elements with respect to the GUI page as a whole. Furthermore, a custom data object is defined in memory and is linked to the display group. The custom data object establishes permissible GUI elements with respect to the display group specifically.","The method further includes displaying the GUI page, the display group in the GUI page, and a GUI selection palette. The page design logic is executed with a processor in communication with the memory to populate the GUI selection palette with admissible GUI elements and constrain customization of the display group to the admissible GUI elements in the GUI selection palette. The admissible GUI elements populated into the GUI selection palette include the permissible GUI elements with respect to the GUI page, and the permissible GUI elements with respect to the display group.","The custom data object may be one of multiple custom data objects that each establishes permissible GUI elements with respect to the display group. The page design logic may then populate the GUI selection palette with the permissible GUI elements from each custom data object. To facilitate constrained customization, the page design logic may accept a selection of a specific admissible GUI element from among the admissible GUI elements and add the specific admissible GUI element to the display group.","The admissible GUI elements of the custom data object may vary widely. The memory may also store data type definitions that establish the data types for the admissible GUI elements. The method may also assign a selected one of the data type definitions to the specific admissible GUI element and accept GUI element customization information constrained by the selected one of the data type definitions.","The display group may be one of multiple display groups within the GUI page. Each display group may organize specific GUI elements together under that display group. The method may then execute the page design logic to determine that the display group is selected from among the multiple display groups, determine that the custom data object is linked to the particular selected display group, and determine the permissible GUI elements with respect to the display group established by the custom data object.","In another aspect, a page design system includes a processor and a memory in communication with the processor. The memory stores the GUI page, the display group, the standard and custom data objects, and the page design logic. The system executes the page design logic to perform the processing noted above with respect to constrained customization of the display group. In yet another aspect, a product comprises a machine readable medium and logic stored on the medium, that, when executed by a processor, is operable to cause a page design system to perform the processing noted above with respect to constrained customization of the display group.","The logic and processing described above may be encoded or stored in a machine-readable or computer-readable medium such as a compact disc read only memory (CDROM), magnetic or optical disk, flash memory, random access memory (RAM) or read only memory (ROM), erasable programmable read only memory (EPROM) or other machine-readable medium as, for examples, instructions for execution by a processor, controller, or other processing device. The medium may be implemented as any device or tangible component that contains, stores, communicates, propagates, or transports executable instructions for use by or in connection with an instruction executable system, apparatus, or device. Alternatively or additionally, the logic may be implemented as analog or digital logic using hardware, such as one or more integrated circuits, or one or more processors executing instructions, or in software in an application programming interface (API) or in a Dynamic Link Library (DLL), functions available in a shared memory or defined as local or remote procedure calls, or as a combination of hardware and software.","The logic and processing described above may include additional or different logic and may be implemented in many different ways. A processor may be implemented as a controller, microprocessor, microcontroller, application specific integrated circuit (ASIC), discrete logic, or a combination of other types of circuits or logic. Similarly, memories may be DRAM, SRAM, Flash, or other types of memory. Parameters (e.g., conditions and thresholds) and other data structures may be separately stored and managed, may be incorporated into a single memory or database, or may be logically and physically organized in many different ways. Programs and instructions may be parts of a single program, separate programs, implemented in libraries such as Dynamic Link Libraries (DLLs), or distributed across several memories and processors.","While various embodiments of the invention have been described, it will be apparent to those of ordinary skill in the art that many more embodiments and implementations are possible within the scope of the invention. Accordingly, the invention is not to be restricted except in light of the attached claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The system may be better understood with reference to the following drawings and description. In the figures, like reference numerals designate corresponding parts throughout the different views.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
