---
title: System and method for communicating state and title information between a browser and a rich Internet application
abstract: A system and method communicates address and state information from a browser to a rich Internet application to allow the rich Internet application to start at a location, or preload variables, corresponding to the state information. The system and method communicates address and state information from the rich Internet application to the browser to allow such information to be displayed by the browser for use or retrieval.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08001458&OS=08001458&RS=08001458
owner: Adobe Systems Incorporated
number: 08001458
owner_city: San Jose
owner_country: US
publication_date: 20051115
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF INVENTION","DETAILED DESCRIPTION OF A PREFERRED EMBODIMENT"],"p":["This application claims the benefit of U.S. provisional patent application Ser. No. 60\/736,978, entitled \u201cMethod and Apparatus for Communicating State and Title Information Between a Browser and a Rich Internet Application\u201d, filed on Nov. 14, 2005 by Kevin Lynch, having the same assignee as the present invention, and is hereby incorporated by reference in its entirety.","The present invention is related to computer software and more specifically to computer software for the Internet.","Many internet addresses employ representational state transfer information (known as \u201cREST information\u201d) to specify the contents of a web page. The REST information is used by the server to retrieve and provide the web page.","For example, selecting a book at the Web Site of Amazon.com takes you to a link: amazon.com\/exec\/obidos\/tg\/detail\/-\/0321213432\/qid=1107977455\/sr=1-8\/ref=sr18\/104-2847832-6485547?v=glance&s=books. Everything after the domain name may be REST information (the http:\/\/www has been omitted from the link above).","REST information is not only useful to the server: it can also be useful for the user. A browser will record the entire link, including the REST information, to allow a user to use the back button on a browser and get back to a prior-viewed page, or a user can bookmark the link. The user can also cut the link from the browser's address box, and provide it in an e-mail message, for example. In either case, the link can be used to navigate directly to the page desired, bypassing the site navigation tools that would otherwise be required to get there if one had only the domain name.","The representational state transfer information may contain information that can be useful for other purposes. For example, John Udell's Library Lookup Bookmarklets scrapes the ISBN from the REST information used in popular book retailer's web sites to show a user whether one or more specified libraries carries the book being viewed on the retailer's web site.","Another form of information that the user of a web page can use is a title of a web page. The title of a web page is displayed in certain locations, notably across the title bar of the browser window. If the title describes the information in the web page being displayed, the user can use the title to identify the information contained in the web page being displayed. The title may also be captured with a bookmark and used as the title of the bookmark, simplifying the bookmarking process. Additionally, the title can be used as the title of the window, and the title may be displayed in a status area of the operating system, indicating all windows active, to assist the user in selecting among the various windows.","The REST information and the title can change as described above for every web page displayed. This allows the exact location of a web page to be freely available, and the title information to remain current. However, when the information being displayed in a browser contains a Rich Internet Application (known as \u201cRIA\u201d), such as a Flash movie, the title and REST information will not change from the web page used to download the RIA. Thus, the title can become out of sync with the content of the RIA and the REST information only indicates the web page used to navigate to the start of the RIA. This REST information cannot be used to mark a specific point in the RIA for the purposes described above or be used to directly navigate to a point past the starting point of the RIA.","Some web sites have read in REST information in the URI that was either entered by a user or part of a link, to allow a user to jump to a specific web page, but such information was never updated in the address box of the browser as the RIA progressed.","What is needed is a system and method that can allow the browser to display REST information that corresponds to various points in a RIA, can utilize the RIA information provided to navigate to a point in the RIA after the start of the RIA and can update the browser title to correspond to the information being displayed in the RIA.","A system and method allows REST information to be retrieved from the address box of the browser and used by a rich Internet application (\u201cRIA\u201d) to navigate to the point to which the REST or other information corresponds, preload variables, or both. As the RIA operates, at various points in the RIA, the system and method inserts an address and REST information into the address box of a browser, and\/or a title to the title bar of the browser, to identify the state of the Rich Internet Application at each of those points. The user can capture the address and REST information from the address box to refer to the identified point at a later time.","To implement the operations described above, in one embodiment, the system and method adds a visual basic script and certain JavaScript functions, described below, to the web page that references the RIA (the \u201creferring page\u201d). One of the JavaScript functions identifies the type of the browser, for example, whether the browser is Internet Explorer or another type of browser, and provides the initial address and REST information used to load the page to the RIA via an HTML object and embed tag. The RIA can then parse the REST information in the information it receives and determine how to start in a manner that corresponds to the REST information. If no REST information is received, the RIA can start at a usual beginning point.","As the RIA operates, it can provide to the browser an address and REST information and title information that corresponds to the approximate location of the program as certain reference points in the program are reached or as other events occur. This may be accomplished for non-IE browsers by the RIA communicating to JavaScript functions in the referring web page that then provide this information to the browser. For Flash-based RIAs, communication with JavaScript is accomplished using the getURL instruction in Flash Actionscript. The RIA communicates with IE using VBScript functions in the referring web page that then provide the address and REST information and the title to the Browser. For Flash-based RIAs, communication with VBScript is accomplished using the fscommand in Flash Actionscript. The name of the VBScript function on the referring page will start with same name as the Flash application's ID used in the Object tag (e.g. \u201cflashapp\u201d). Other characters can finish the name of the VBScript function.","The present invention may be implemented as computer software on a conventional computer system. Referring now to , a conventional computer system  for practicing the present invention is shown. Processor  retrieves and executes software instructions stored in storage  such as memory, which may be Random Access Memory (RAM) and may control other components to perform the present invention. Storage  may be used to store program instructions or data or both. Storage , such as a computer disk drive or other nonvolatile storage, may provide storage of data or program instructions. In one embodiment, storage  provides longer term storage of instructions and data, with storage  providing storage for data or instructions that may only be required for a shorter time than that of storage . Input device  such as a computer keyboard or mouse or both allows user input to the system . Output , such as a display or printer, allows the system to provide information such as instructions, data or other information to the user of the system . Storage input device  such as a conventional floppy disk drive or CD-ROM drive accepts via input  computer program products  such as a conventional floppy disk or CD-ROM or other nonvolatile storage media that may be used to transport computer instructions or data to the system . Computer program product  has encoded thereon computer readable program code devices , such as magnetic charges in the case of a floppy disk or optical encoding in the case of a CD-ROM which are encoded as program instructions, data or both to configure the computer system  to operate as described below.","In one embodiment, each computer system  is a conventional SUN MICROSYSTEMS ULTRA  workstation running the SOLARIS operating system commercially available from SUN MICROSYSTEMS, Inc. of Mountain View, Calif., a PENTIUM-compatible personal computer system such as are available from DELL COMPUTER CORPORATION of Round Rock, Tex. running a version of the WINDOWS operating system (such as 95, 98, Me, XP, NT or 2000) commercially available from MICROSOFT Corporation of Redmond Wash. or a Macintosh computer system running the MACOS or OPENSTEP operating system commercially available from APPLE COMPUTER CORPORATION of Cupertino, Calif. and the NETSCAPE browser commercially available from NETSCAPE COMMUNICATIONS CORPORATION of Mountain View, Calif. or INTERNET EXPLORER browser commercially available from MICROSOFT above, although other systems may be used.","Browser Loads Referring Page",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2","FIG. 2"],"b":"210"},"In one embodiment, an author adds the following code to the referring page (the web page that refers to the RIA), the operation of which is described in more detail further below:",{"@attributes":{"id":"p-0023","num":"0022"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"function showFlash(swf, w, h) \u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002(instruction 1)",{}]},{"entry":[{},"{",{}]},{"entry":[{},"var isMSIE = navigator.appName.indexOf",{}]},{"entry":[{},"(\u201cMicrosoft\u201d)\u2003! = \u22121;d(instr 2)",{}]},{"entry":[{},"var 11 = \u2032<object classid=\u2033clsid:",{}]},{"entry":[{},"D27CDB6E-AE6D-11cf-96B8-444553540000\u2033",{}]},{"entry":[{},"codebase=\u2033 http:\/\/fpdownload.macromedia.com\/",{}]},{"entry":[{},"pub\/shockwave\/cabs\/flash\/",{}]},{"entry":[{},"swflash.cab#version=7, 0, 0, 0\u2033",{}]},{"entry":[{},"width=\u2033\u2032+w+\u2032\u2033\u2003\u2003height=\u2033\u2032+h+\u2032\u2033\u2003\u2003\u2003\u2003id=\u2033flashapp\u2033",{}]},{"entry":[{},"align=\u2033\u2033>\u2032 \u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002(instr 3)",{}]},{"entry":[{},"var 12 = \u2032< param name=\u2033movie\u2033",{}]},{"entry":[{},"value=\u2033\u2032+sw+\u2032\u2033\u2003\/>\u2032 \u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002(instr 4)",{}]},{"entry":[{},"var 13 = \u2032<param name=\u2033menu\u2033",{}]},{"entry":[{},"value=\u2033false\u2033\u2003\/>\u2032 \u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(instr 5)",{}]},{"entry":[{},"var 14 = \u2032<param name=\u2033quality\u2033",{}]},{"entry":[{},"value=\u2033best\u2033\u2003\/>\u2032 \u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002(instr 6)",{}]},{"entry":[{},"var 15 = \u2032< param name=\u2033FlashVars\u2033",{}]},{"entry":[{},"value=\u2033initialURL=\u2032+document.location+",{}]},{"entry":[{},"\u2032&isMSIE=\u2032+isMSIE+\u2032\u201d\u2003\/>\u2032\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(instr 7)",{}]},{"entry":[{},"var 16 = \u2032<embed src=\u2033\u2032+swf+\u2032\u2033",{}]},{"entry":[{},"FlashVars=\u2033initialURL=\u2032+document.location+",{}]},{"entry":[{},"\u2032&isMSIE=\u2032+isMSIE+\u2032\u2033\u2003 menu=\u2033false\u2033 \u2003quality=\u2033best\u2033",{}]},{"entry":[{},"width=\u2033\u2032+w+\u2032\u2033 height=\u2033\u2032+h+\u2032\u2033",{}]},{"entry":[{},"name=\u2033flashapp\u2033align=\u2033\u2033",{}]},{"entry":[{},"type=\u201capplication\/x-shockwave-flash\u201d",{}]},{"entry":[{},"pluginspage=\u2033http:\/\/www.macromedia.com\/\u2033\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003.",{}]},{"entry":[{},"go\/getflashplayer\u2033><\/embed><\/object>\u2032 \u2003\u2003\u2003\u2003\u2003\u2009(instr 8)",{}]},{"entry":[{},"document.write(11+12+13+14+15+16);\u2002\u2003\u2003\u2003\u2003\u2003\u2002(instr 9)",{}]},{"entry":[{},"}",{}]},{"entry":[{},"-->",{}]},{"entry":[{},"<\/script>",{}]},{"entry":[{},"<script language=\u2033JavaScript\u2033>",{}]},{"entry":[{},"showFlash(\u2033example.swf\u2033, 500, 400);\u2003\u2003\u2003\u2003\u2003\u2003(instr 10)",{}]},{"entry":[{},"<\/script>"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"In one embodiment, the REST information that may be received with the address may contain location references, variable information, or both. The browser displays the title of the referring page in the title bar of the browser and displays the address of the referring page in the address bar of the browser.","Supply RIA Name","The name of an RIA is supplied  by the referring page in instruction 10 of the code above, and the function \u201cshowFlash\u201d is called with the name of an RIA, as shown below:","showFlash (\u201cexample.swf\u201d, 500, 400);","In this example, the Flash Application \u201cexample.swf\u201d is supplied , as the RIA name by the referring page.","Obtain Browser Type","The browser type is obtained  from the browser by the referring page. In one embodiment, the function \u201cnavigator.appName.indexOf\u201d is used by the referring page with an argument of \u201cMicrosoft,\u201d as shown above in instruction 2, and the value, true or false, is stored in the variable \u201cis MSIE\u201d. In the above example, if the function returns any response other than \u22121, then the referring page obtains  Internet Explorer as the browser type, and \u201cis MSIE\u201d is set to true; otherwise, \u201cis MSIE\u201d is set to false.","Arrange RIA Setup","The setup of the RIA is arranged  by the referring page. To arrange such setup, in one embodiment, the referring page constructs strings, which can be later carried out as commands, that assign values to parameters used by the browser to instantiate the RIA. For example, in line 7 above, the string \u201cvar \u201d is a command, stored at this point as a string, to set the values of the variables \u201cobject classid\u201d, \u201ccodebase\u201d, \u201cwidth\u201d, \u201cheight\u201d, \u201cid\u201d and \u201calign\u201d to the values shown above in instruction 3. In the above example, instructions 4 through 8 are similarly used to arrange the setup of an RIA that runs under the Flash player commercially available from Macromedia Inc. of San Francisco, Calif. at the web site macromedia.com.","Obtain Address and REST Information","The address and REST information is obtained  by the referring page from the browser. In one embodiment, the referring page obtains the address and REST information from the browser using \u201cdocument.location\u201d, as shown in instructions 7 and 8 above, which retrieves any REST information supplied with the address used to load the referring page.","Provides RIA Name, Address, REST Info, Browser Type to Browser","The name of the RIA, the address and REST information and the browser type are provided  by the referring page to the browser. In one embodiment, the referring page uses the various strings it has arranged in step  with the \u201cdocument.write\u201d in instruction 9 to provide the browser with the RIA name, address and REST information and browser type. The example above uses \u201cdocument.write\u201d with the argument \u201cl1+l2+l3+l4+l5+l6\u201d, which strings together variables l1 through l6, all of which are commands arranged by the referring page as described above. For example, instruction 7 of the code above shows \u201cvar l5,\u201d which is part of the argument used by the referring page with \u201cdocument.write,\u201d to be a string which commands the browser to set FlashVars \u201cinitialURL\u201d to the address and REST information of the page referring to the Flash application, and to set \u201cis MSIE\u201d to be true if the browser is Microsoft Internet Explorer. FlashVars are used to pass parameters to a Flash RIA and are described in more detail at the web page macromedia.com\/cfusion\/knowledgebase\/index.cfm?id=tn16417. When \u201cdocument.write\u201d executes, \u201cvar l5\u201d will execute as a command, providing the REST information supplied with the address of the referring page and the browser type to the browser, which will make them available to the browser. Using \u201cvar l5,\u201d with \u201cdocument.write,\u201d along with variables l1, l2, l3, l4 and l6, the RIA name, address and REST information and browser type are provided to the browser by the referring page, and the browser is commanded to instantiate the RIA and Flash.","Instantiate RIA, Provide REST Info and Browser Type","At step , the RIA is instantiated by the browser, and the address and REST information and browser type are provided, or otherwise made available, to the RIA by the browser as well. In one embodiment, as noted above, the Flash application and Flash are instantiated by the browser as a result of the document.write in instruction 9. The REST information and browser type are obtained from the browser by a Flash application, having been made available via the \u201cFlashVars\u201d parameter, set up as shown in instruction 7. As an example, \u201cinitialURL\u201d, which is set to the whole URL of the page referring to the Flash application, including any REST information, and \u201cis MSIE\u201d, which is set to true if the browser is Microsoft Internet Explorer, are provided, or otherwise made available, to the RIA, as arranged in instructions 7 and 8.","Instantiate Communications to Receive Rest Info and Browser Type at RIA","At step , the communication capability between the RIA and the browser is optionally instantiated, and the REST information and browser type are received at the RIA. In one embodiment, to instantiate communications, a Flash RIA imports a BrowserStateManager class using \u201cimport BrowserStateManager\u201d, and then creates a new instance of it, using \u201cvar browserstate=new BrowserStateManager( )\u201d. The BrowserStateManager class is available at the web site www.klynch.com\/apps\/flashlinking\/flashlinking.zip.","Start RIA at Normal Starting Point","If REST information has not been received  at the RIA, then the RIA starts operating  at the default starting point, for example the beginning of a movie. In one embodiment, to determine whether REST information has been received, the RIA parses the URL it receives for any REST information that corresponds to starting point information. The RIA may also parse the URL for initial variable information. Variables used by the program are initialized to their default values if no REST information corresponding to the variable information is present.","Start RIA According to REST Information","If REST information has been received at the RIA , then the RIA starts operating at the location in the RIA corresponding to the REST information, preloads certain variables, or both . The method continues at step  of .","RIA Identifies New Title","In step , the RIA determines whether a new title should be displayed by the browser, and if so, it identifies  the new title for the browser to display. In one embodiment, if no new title is to be displayed , then the method continues at . In one embodiment, the RIA determines  whether the browser is Microsoft Internet Explorer or a non-Microsoft Internet Explorer browser, such as Firefox, a Mozilla-based Internet browser. In one embodiment, this determination is made based on the value of the \u201cisMSIE\u201d Flashvar received or retrieved by the RIA as part of step .","RIA Provides Title to Ref. Page Via VBScript Function","If the browser is Microsoft IE , then the RIA provides  the new title to the referring page by calling a VBScript function, and passing the title as a parameter to this function. In one embodiment, an FSCommand Flash ActionScript instruction is used to provide the new title to the VBScript function added to the referring page by the author of the referring page. In one embodiment, the function is added as follows:","<script language=\u201cVBScript\u201d>","<!--","Sub flashapp_FSCommand(ByVal command, ByVal args)","select case command","case \u201cputHREF\u201d location.href=args","case \u201cputTitle\u201d document.title=args","end select","end sub","-->","<\/script>","Fscommand is described at the web page, macromedia.com\/support\/flash\/action_scripts\/actionscript_dictionary\/actionscript_dictionary372.html","The name of the VBScript function on the referring page starts with same name as the Flash application's ID used in the Object tag (e.g. \u201cflashapp\u201d). Other characters can finish the name of the VBScript function.","Ref. Page Provides Title to Browser for Display","In step , the new title is provided to the browser by a VBScript function by the referring page, and the title display on the browser is updated accordingly. In one embodiment, the title information is provided  by the VBScript function on the referring page by setting the value of \u201cdocument.title\u201d, and the window title of the browser is updated by the browser in response. The method continues at step .","RIA Provides Title Info to Ref. Page Via Javascript","If the browser is not Microsoft Internet Explorer , then the RIA provides  the title information to the referring page using a JavaScript function. In one embodiment, the title information can be provided by the Flash RIA to a JavaScript function on the referring page by calling the getURL( ) function in ActionScript and using the \u201cJavascript\u201d prefix to indicate that there is an external JavaScript to be run. In one embodiment, receiving JavaScript functions are defined in the referring page as","<script language=\u201cJavaScript\u201d>","<!--","function flashPutHref(href) {location.href=href;}","function flashPutTitle(title) {document.title=title;}","-->","<\/script>","The getURL( ) function is described at the Web page macromedia.com\/support\/flash\/action_scripts\/actionscriptdictionary\/actionscriptdictionary377.html","Referring Page Provides Title to Browser for Display","The referring page provides the title information to the browser, which updates the display, using \u201cdocument.title\u201d . In the JavaScript functions above,","function flashPutTitle(title) {document.title=title;}","assigns a new value to \u201cdocument.title\u201d, updating the window title .","RIA Identifies REST Info","If the RIA determines that the address and new REST information should be displayed  by the browser, it identifies  the new REST information to be displayed, and the method continues at step . In one embodiment, the address is the same address received by the RIA as described above. In one embodiment, if no new REST information is to be displayed , then the method continues at step . At step , the RIA determines  whether the browser is Microsoft Internet Explorer or a non-Microsoft Internet Explorer browser, such as Firefox, a Mozilla-based internet browser, as described above.","RIA Provides REST Info to Ref. Page Via VBScript","In a manner similar to the way the title is provided to Internet Explorer, as described above, if the browser is Microsoft IE , then the RIA provides  the REST information to the referring page using a VBScript function. The address may be the one received by the RIA as described above. In one embodiment, FSCommand Flash ActionScript is used, as shown above, to provide  the address and REST information to the referring page. In one embodiment, the REST information is provided to the referring page using a Flash ActionScript FSCommand function as follows:","Fscommand(\u201cputHREF\u201d, \u201c#\u201d+this.stateStr);","Although only the REST information is provided, in another embodiment, the REST information and address (received as described above) are provided by the RIA to the referring page.","Ref. Page Provides REST Info to Browser for Display","In step , the address and REST information are provided to the browser by the referring page, and the URL display on the browser is updated to display the address and REST information. In one embodiment, to provide the address and REST information to the browser, the VBScript function sets the value of location.href as shown in the example above. In this embodiment, the referring page appends the address to the REST information received from the RIA, though in other embodiments, the address and REST information are received from the RIA and provided to the browser as received.","The browser will display a URL that includes a web address as well as location and\/or variable information. This information may be used, as described above, with reference to steps - to return the RIA to the same location.","RIA Provides REST Info to Ref. Page Via JavaScript","If the browser is not Microsoft Internet Explorer , then the RIA provides  the address and REST information to the referring page using a JavaScript function. In one embodiment, the address and REST information can be provided by the RIA to a JavaScript function on the referring page by calling \u201cgetURL\u201d in ActionScript and using the \u201cjavascript\u201d prefix to indicate that there is script to be run. For example,","getURL(\u2018javascript:flashPutHref(#\u2018+this.stateStr+\u2019\u201d);\u2019);","is one way of providing the REST information to the referring page via a JavaScript function if the browser is a non-Internet-Explorer browser. In one embodiment, the REST information is provided to the referring page by the RIA and the referring page appends it to the address as described below. In another embodiment, the RIA provides the address and REST information to the referring page, using the address received as described above.","Ref. Page Provides REST Info to Browser for Display","The referring page then provides the address and REST information to the browser . In one embodiment, to provide the REST information to the browser, the JavaScript function sets a new value to \u201clocation.href\u201d, as shown in line below:","function flashPutHref(href) {location.href=href;}","The browser then displays the address and REST information in the address box of the browser.","As noted, the referring page may append the address information to the REST information received from the RIA and provide the address and REST information to the browser. In another embodiment, the RIA provides both the address and REST information and the referring page receives it and provides it to the browser as received.","RIA Runs","The Rich Internet Application runs  in a conventional fashion. The RIA may run using any conventional technique of any conventional program. In one embodiment, if the RIA is a Flash movie, then the movie is displayed as an animation. At any time, the RIA may determine that a new title or new REST information may apply , . If the RIA determines that a new title applies , then the method continues at step . If the RIA determines that new REST information applies , then the method continues at step .","It can be helpful for the URL provided by the referring page to the browser as described above to be URL encoded as described at the web page blooberry.com\/indexdot\/html\/topics\/urlencoding.htm. Alternatively, the RIA can avoid the use of non-permitted characters, such as \u2018&\u2019 in the REST information.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 3","FIG. 3"],"b":["310","310","314","316","320","318","300"]},"When RIA name supplier  receives the signal from browser , it supplies the name of the RIA to name\/REST\/type provider  as described above.","When browser type obtainer  receives the signal from browser , browser type obtainer  obtains the browser type from browser  as described above, and provides it to name\/REST\/type provider .","When RIA setup manager  receives the signal from browser , RIA setup manager  arranges the setup of the RIA in the manner described above and sends the setup information to name\/REST\/type provider .","When REST info obtainer  receives the signal from browser , REST info obtainer  obtains the address and REST information from browser  as described above, and sends the REST information to name\/REST\/type provider .","When name\/REST\/type provider  receives the RIA name, browser type, address and REST information and RIA setup information from the different sources described above, it sends the information as a bundle to browser , in the manner described above.","When browser  receives the RIA name, browser type, address and REST information and the RIA setup information from name\/REST\/type provider , browser  uses the RIA name and RIA setup information to identify the RIA  and passes REST the information and browser type to instantiator\/receiver  of the RIA .","When instantiator\/receiver  receives the address and REST information and browser type from the browser , it stores the browser type information in browser type storage  and signals and provides any address and REST information to starting point identifier\/executor . When so signaled, starting point identifier\/executor  determines whether. REST information is indeed present. If REST information has not been provided, then starting point identifier\/executor  begins executing RIA operation code  at the default starting point, for example, the beginning. RIA operation code  is a conventional rich internet application that executes using a browser, such as an application that runs under a plugin to a browser, such as the conventional Flash Player. If REST information has been provided, starting point identifier\/executor  identifies the corresponding location in the RIA code , as described above, it makes available the address and any REST information to RIA operation code , and it begins execution of the RIA operation code  at the location it identifies. The RIA may use the REST information to preload the value of variables used by the RIA.","At any time during the operation of RIA operation code , the RIA code  may identify a new title, address and REST information, or both, to be displayed by the browser. When RIA code  identifies a new title or new address and REST information, it sends the new title information to title manager  and sends the new address and REST information to REST info manager . In one embodiment, the address is the same one received by RIA operation code , as described above.","When title manager  receives new title information, it determines the browser type specified in browser type storage , and sends the title information to either IE referring page title provider  or non-IE referring page title provider , as described below. If title manager  determines that the browser type in browser type storage  indicates that the browser is Microsoft Internet Explorer, then title manager sends the title information to IE referring page title provider ; however if the browser type in browser type storage , indicates that the browser is not Microsoft Internet Explorer, then title manager  sends the title information to non-IE referring page title provider .","When IE referring page title provider  receives title information from title manager , it sends the title information to IE browser title provider  in the manner described above. In one embodiment, IE browser title provider  is part of the VBScript function on the referring page , as described above, and communication between IE referring page title provider  and IE browser title provider  is performed in the manner described above.","When IE browser title provider  receives title information from IE referring page title provider, it provides the title information to browser  in the manner described above, and browser  displays the title information in the window title.","When non-IE referring page title provider  receives title information from title manager , it sends the title information to non-IE browser title provider , in the manner described above. In one embodiment, non-IE browser title provider  is part of the JavaScript function on the referring page , as described above, and communication between non-IE referring page title provider  and non-IE browser title provider  is performed in the manner described above.","When non-IE browser title provider  receives the title information from non-IE referring page title provider , it provides the title information to browser  in the manner described above, and browser  displays the title information in the window title.","In a similar fashion, when RIA operation code  identifies new address and REST information, it sends the new address and REST information to REST info manager .","When REST information manager  receives new address and REST info from RIA operation code , it determines the browser type in browser type storage , and sends the address and REST information to either IE referring page REST information provider  or non-IE referring page REST information provider , as described below. (As noted above, REST information manager  may receive only the REST information from the RIA, and the referring page REST information provider  or  will prepend the address to the REST information. If the browser type in browser type storage , indicates that the browser is Microsoft Internet Explorer, then REST information manager  sends the REST information to IE referring page REST information provider ; otherwise, REST information manager  sends the REST information to non-IE referring page REST information provider .","When IE referring page REST information provider  receives the address and REST information from REST information manager , it sends the REST information to IE browser REST information provider  in the manner described above. In one embodiment, IE browser REST information provider .  is part of the VBScript function on the referring page , as described above, and communication between IE referring page REST info provider  and IE browser REST information provider  is performed in the manner described above.","When IE browser REST information provider  receives the address and REST information from IE referring page REST information provider, it provides the address and REST information to browser  in the manner described above, and browser  displays the address and REST information in the address box of the browser.","When non-IE referring page REST info provider  receives the address and REST information from REST information manager , it sends the address and REST information to non-IE browser REST information provider , in the manner described above. In one embodiment, non-IE browser REST information provider  is part of the JavaScript function on the referring page , as described above, and communication between non-IE referring page REST information provider  and non-IE browser REST information provider  is performed in the manner described above.","When non-IE browser REST info provider  receives the address and REST information from non-IE referring page REST info provider , it provides the address REST information to browser  in the manner described above, and browser  displays the REST information in the address bar of the browser.","Starting point identifier\/executor  continues executing RIA operation code , which may update the title and\/or REST information on the browser any number of times as described above. In one embodiment, when starting point identifier\/executor  completes executing the RIA operation code  it terminates operation in a conventional manner."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 2","FIGS. 2A and 2B"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
