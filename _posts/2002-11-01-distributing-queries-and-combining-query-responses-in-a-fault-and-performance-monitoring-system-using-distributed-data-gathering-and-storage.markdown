---
title: Distributing queries and combining query responses in a fault and performance monitoring system using distributed data gathering and storage
abstract: Combining system fault and performance monitoring using distributed data collection and storage of performance data. Storage requirements are relaxed and real-time performance monitoring is possible. Data collection and storage elements can be easily configured via a central configuration database. The configuration database can be easily updated and changed. A federated user model allows normal end users to monitor devices relevant to the part of a service they are responsible for, while allowing administrative users to view the fault and performance of a service in an end-to-end manner.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06985944&OS=06985944&RS=06985944
owner: Fidelia Technology, Inc.
number: 06985944
owner_city: Princeton
owner_country: US
publication_date: 20021101
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["\u00a7 1. BACKGROUND OF THE INVENTION","\u00a7 2. SUMMARY OF THE INVENTION","\u00a7 4. DETAILED DESCRIPTION"],"p":["\u00a7 1.1 Field of the Invention","The present invention concerns network management systems (\u201cNMSs\u201d). In particular, the present invention concerns combining fault and performance management.","\u00a7 1.2 Description of Related Art","The description of art in this section is not, and should not be interpreted to be, an admission that such art is prior art to the present invention.","As computer, hardware, software and networking systems, and systems combining one or more of these systems, have become more complex, it has become more difficult to monitor the \u201chealth\u201d of these systems. For example,  illustrates components of a system  that may be used by a so-called e-commerce business. As shown, this system may include a web interface server , a search and navigation server  associated with a product inventory database , a purchase or \u201cshopping cart\u201d server  associated with a user database , a payment server  associated with a credit card database , a transaction server  associated with a transaction database , a shipping server  associated with a shipping database , a local area network (\u201cLAN\u201d) , and a network  including linked routers . As shown, the search and navigation server , the purchase or \u201cshopping cart\u201d server , the payment server  and the transaction server  may communicate with one another via the LAN . As further shown, these servers may communicate with the shipping server  via the network .","Each of the servers may include components (e.g., power supplies, power supply backups, printers, interfaces, CPUs, chassis, fans, memory, disk storage, etc.) and may run applications or operating systems (e.g., Windows, Linux, Solaris, Microsoft Exchange, etc.) that may need to be monitored. The various databases (e.g., Microsoft SQL Server, Oracle Database, etc.) may also need to be monitored. Finally, the networks, as well as their components, (e.g., routers, firewalls, switches, interfaces, protocols, etc.) may need to be monitored.","Although the system  includes various discreet servers, networks, and databases, the system can be thought of as offering an end-to-end service. In this exemplary system, that end-to-end service is on-line shopping\u2014from browsing inventory, to product selection, to payment, to shipping.","Tools have been developed to monitor these systems. Such tools have come to be known as network management systems (NMSs). (The term network management systems should not be interpreted to be limited to monitoring networks\u2014network management systems have been used to monitor things other than networks.) Traditionally, NMSs have performed either fault management, or performance management, but not both. Fault management pertains to whether something is operating or not. Performance management pertains to a measure of how well something is working and to historical and future trends.","A fault management system generates and works with \u201creal time\u201d events (exceptions). It can query the state of a device and trigger an event upon a state change or threshold violation. However, fault management systems typically do not store the polled data\u2014they only store events and alerts (including SNMP traps which are essentially events). Generally, the user interface console for a fault management system is \u201cexception\u201d driven. That is, if a managed element is functioning, it is typically not even displayed. Generally, higher severity fault events are displayed with more prominence (e.g., at the top of a list of faults), and less critical events are displayed with less prominence (e.g., lower in the list).","On the other hand, performance management systems generally store all polled data. This stored data can then be used to analyze trends or to generate historical reports on numerical data collected. A major challenge in performance management systems is storing such large amounts of data. For example, just polling 20 variables every 5 minutes from 1000 devices generates 6 million data samples per day. Assuming each data sample requires 50 bytes of storage, about 9 GB of data will be needed per month. Consequently, performance management systems are designed to handle large volumes of data, perform data warehousing and reporting functions.","Performance management systems are typically batch oriented. More specifically, generally, distributed data collectors poll data and periodically (e.g., each night) feed them to a centralized database. Since the size of the centralized database will become huge, database management is a prime concern in such products.","As can be appreciated from the foregoing, conventional fault management systems are limited in that they do not store data gathered for later use in performance analysis. Conventional performance management systems are limited in that they require huge amounts of storage. Furthermore, since data is batched and sent to a centralized location for storage, the stored data can become \u201cstale\u201d if enough time has elapsed since the last batch of data was stored.","Furthermore, most enterprises currently use a minimum of two, if not more, products for information technology management. It is common to find several independent products being used by various departments within an enterprise to meet the basic needs of monitoring and performance management across networks, servers and applications. Moreover, since the performance and fault monitoring systems are disjointed, correlating data from these different systems is not trivial.","Recognizing that correlation between the collective information technology (\u201cIT\u201d) infrastructure and business service is needed, several Manager of Manager (\u201cMoM\u201d) tools have appeared in the market. These products interface with the various well known commercial tools and try to present a unified view to IT managers. Unfortunately, however, such integration is complex and requires depending on yet another product which needs to be learned and supported each time an underlying tool is updated. The addition of yet another tool just adds to the operational costs rather than reducing it.","In view of the foregoing limitations of existing network management systems, there is a need to simplify the processing related to monitoring faults and performance. There is also a need to monitor end-to-end service faults and performance of a service. Such needs should be met by a technique or system that is simple to install and administer, that has real-time capabilities, and that scales well in view of the large amount of data storage that may be required by a performance management system. Finally, there is a need to provide different users with different levels of monitoring, either for purposes of security, for purposes of software licensing, or both.","The present invention discloses apparatus, data structures, and\/or methods for distributing queries and combining query responses in a fault and performance monitoring system using distributed data gathering and storage.","The present invention involves methods, apparatus and\/or data structures for monitoring system faults and system performance. The following description is presented to enable one skilled in the art to make and use the invention, and is provided in the context of particular applications and their requirements. Various modifications to the disclosed embodiments will be apparent to those skilled in the art, and the general principles set forth below may be applied to other embodiments and applications. Thus, the present invention is not limited to the embodiments shown and the inventor regards his invention as the following disclosed methods, apparatus and data structures and any other patentable subject matter.","\u00a7 4.1 Exemplary Architecture",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 2","FIG. 1"],"b":["200","210","100","160","170","180","210","220"]},"DGEs  can be configured using system configuration operations , in accordance with a configuration database . Basically, the system configuration operations  can (i) allow configuration information to be entered into the configuration database , (ii) inform each DGE of its startup configuration , and (iii) inform each DGE  of runtime changes to its configuration.","Information extraction, combination and presentation operations  may collect fault information from the DGEs  (either by asking a proxy process or directly via their databases ), may collect performance information from the databases  of the DGEs , may combine fault and performance information from different DGEs, and may present fault and performance information to a user in a unified, integrated manner. The presentation of this information may be in the form of screens, graphs, reports, etc.","Finally, an application programming interface (\u201cAPI\u201d) operation  may be provided to permit users to expand the fault and performance monitoring functionality of the present invention. In one embodiment consistent with the principles of the present invention, the API permits provisioning accounts, users, devices, tests, actions, DGE locations, and DGE hosts through a socket interface. Such an embodiment enables mass data entry, updates and searches. Searches for test results and events are also permitted via this interface. A limited number of reports are available, although a full complement of reporting is offered via a graphical user interface (\u201cGUI\u201d). In a particular embodiment of the present invention, a perl API is provided which uses the underlying socket interface. Organizations with large numbers of monitored devices can provision, update or search systems using the API.","In one embodiment of the invention, the system configuration operations , the configuration database , the information extraction, combination and presentation operations , and the API operations  may all be performed from and provided at the same facility or server. The information extraction, combination and presentation operations may be referred to as a \u201cbusiness visibility engine\u201d or \u201cBVE\u201d. A \u201cBVE\u201d may also include the configuration operations , the configuration database , and the API operations .","Recall that although some traditional NMS products have distributed collectors, they require consolidating all the data into a central database for reporting. Thus the architecture  of  is much different in that the information extraction, combination and presentation operations  seamlessly integrates distributed DGE databases  and can issue queries in parallel across the distributed DGEs . The responses from such queries can then be combined (also referred to as response \u201ccorrelation\u201d). The n-tier architecture  is centered on a configuration database management system. The distributed nature of the system  permits committing explicit resources to important processes and systems, hence achieving real-time scalability and performance. Typical traffic flow across an n-tier system consists of a number of clients that access services from one tier, which in turn requests services from one or more systems.","This architecture pushes even the correlation and notification to the distributed DGEs so that there is no central bottleneck and the system operates as a loosely coupled but coordinated cluster. One embodiment, consistent with the principles of the present invention, uses key technology standards such as XML, JMS, JDBC, SOAP and XSLT layered on a J2EE framework.","\u00a7 4.2 Environment in which the Present Invention May Operate",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 3","FIG. 2","FIG. 1"],"b":["300","100","100","310","320","160","310","320","180","310","320","170","390","390","330","340","350","360"],"i":["a","a ","b","b ","c","c "]},"\u00a7 4.3 Exemplary Methods, Apparatus and Data Structures","Exemplary methods, apparatus, and data structures that may be used to effect the configuration, data gathering, and information extraction, combination and presentation operations are now described.","\u00a7 4.3.1 Configuration","System configuration may include information learned or discovered from the system and\/or information entered via the API operation.  is a flow diagram of an exemplary method  that may be used to generate system configuration information. As indicated by block , a list of (e.g., Internet Protocol) networks can be read and this list can be used to discover devices (e.g., servers, routers, applications, etc.) on those networks. Alternatively, this information may be manually entered or otherwise defined (e.g., via the API operation). Each of the devices is associated with one or more fault and\/or performance tests as indicated by block . This association may be established via an auto-discovery mechanism. Alternatively, this association may be manually entered or otherwise defined (e.g., via the API operation). As shown in the exemplary data structure  of , each of a number of device objects  may include one or more test objects .","Further, each of at least one data gathering operation (e.g., a DGE) is associated one or more of the devices as indicated by block . This association may be manually entered or otherwise defined (e.g., via the API operation), but is preferably discovered. In one embodiment, a DGE at a particular location is associated with devices at the same location. In this embodiment, when additional DGEs are added to a location, the load of monitoring the devices at that location may be balanced across the DGEs at that location. As shown in the exemplary data structure  of , a location  may include one or more DGEs . Each of the DGEs  may be associated with one or more device objects .","As indicated by block , thresholds are associated with the tests. The thresholds may be default thresholds, or may be provided, for example via the API operation, on a case-by-case basis. Exemplary thresholds, for example, may include a \u201cwarning\u201d threshold and a \u201ccritical\u201d threshold. As just alluded to, the test may, by definition, include (default) thresholds. Similarly, as indicated by block , performance test parameters may be associated with at least some of the tests. The parameters may be default parameters, or may be provided, for example via the API operation, on a case-by-case basis.","As indicated by block , a number of actions may be provided, and one or more tests may be associated with each action. For example, an action may be \u201ce-mail a critical threshold violation to network administrator\u201d. A number of fault tests may be associated with this action such that if any of the tests violate a critical threshold, the network administrator is informed. These associations may be entered via the API operation, or may be defined in some other way (e.g., by default). As shown in the exemplary data structure  of , an action object  may include one or more test objects .","The various associations may be stored in the configuration database . Although these associations may be stored in an object-oriented database, other data structures may be used to store this information in an alternate database type. However, an object-oriented database allows easy and flexible schema maintenance as compared to other database types available today.","Referring back to , the fault and performance configuration information may be provided (e.g., signaled) to respective data gathering operations as indicated by block . If the respective data gathering operations are already available (e.g., on standby), this signaling may occur immediately. If, on the other hand, the respective data gathering operations are not yet available, this signaling may be done in response to an indication that a new data gathering objection has been added. For example, in such an embodiment, upon startup, a DGE only needs to know its own identifier (as used in the configuration database) and the (IP) address of the server running the configuration database. Further, if there is a failure, a new DGE can be started up with the identifier of the failed DGE, and this new DGE will download its configuration from the configuration database and thus assume the work of the failed DGE. Furthermore, if a connection to the configuration database is lost, or if the configuration database goes down, configured DGEs can continue to function as presently configured until the connection and\/or configuration database is restored.","\u00a7 4.3.1.1 Monitors and Plug-Ins","Recall from block  that tests may be associated with a device. A \u201cmonitor\u201d at a DGE performs a test based on the test object. A \u201cscheduler\u201d at the DGE determines a test type from the test object and then puts it onto a queue for the monitor. Thus, the actual testing is done via a monitor of a DGE.","Although monitors may be predefined, the API operation may allow users to create \u201cplug-ins\u201d to define new tests (e.g., for a new device) to be performed by new monitors. In this regard, monitors are similar to device drivers in an PC operating system. More specifically, a PC operating system has drivers for may popular peripherals. However, device drivers for new peripherals or less popular peripherals may be added. Similarly, as new devices types are added to the system being monitored, new monitors for testing these new device types may be added. The present invention may overprovision a DGE with monitors. In this way, even though some monitors might not be used, as devices are added, the DGE can simply activate a monitor needed to test the newly added device.","A list of at least some exemplary monitors that may be supported by the present invention is provided in \u00a7 4.3.1.1.1 below.","\u00a7 4.3.1.1.1 Exemplary Network Monitors","ICMP network monitors may be used to check the reachability of hosts on an Internet Protocol (\u201cIP\u201d) network using the ICMP protocol. The ICMP monitor reports on packet loss and latency for a sequence of ICMP packets. These monitors may include:\n\n","SNMP network monitors for querying devices using the standard SNMP v1, v2 and v3 protocol. Certain enhancements have been made to the monitor such using 64-bit counters where available, account for rollover of 32-bit counters, asynchronous polling to avoid waiting for responses and optimize timeout periods, multiple queries in the same SNMP packet, automatically sending individual queries if the multiple query packet fails for any reason, and querying an alternate SNMP port. In an exemplary embodiment, a external definition library has been built which defines which SNMP variables and post processing (such as rate, delta, etc.) needs to be queried based on the device type. This permits easily updating the definition library without having to edit the core product resources (SNMP v1, v2, v3) may use 64-bit counters where available, and may also account for rollover of 32-bit counters. Multiple SNMP queries to the same host may be sent in the same packet for optimization. An alternate SNMP port may be queried instead of default. These monitors may include:\n\n","SNMP Host Resources (SNMP v1, v2, v3) monitors may include:\n\n","TCP Port monitors for monitoring the transaction of well known Internet services such as HTTP, HTTPS, FTP, POP3, IMAP, IMAPS, SMTP, NNTP.","Exemplary port monitors may include:\n\n","The Simple Network Management Protocol (\u201cSNMP\u201d) is a popular protocol for network management. SNMP facilitates communication between a managed device (i.e., a device with an SNMP agent, such as a router for example) and an SNMP manager or management application (represents a user of network management). The SNMP agent on the managed device provides access to data (managed objects) stored in the managed device. The SNMP manager or management application uses this access to monitor and control the managed device.","Communication between the managed device and the management operation is via SNMP Protocol Data Units (\u201cPDUs\u201d) that are typically encapsulated in UDP packets. Basically, four kinds of operations are permitted between managers and agents (managed device). The manager can perform a GET (or read) to obtain information from the agent about an attribute of a managed object. The manager can perform a GET-NEXT to do the same for the next object in the tree of objects in the managed device. The manager can perform a SET (or write) to set the value of an attribute of a managed object. Finally, the agent can send a TRAP, or asynchronous notification, to the manager telling it about some event in the managed device.","SNMP agents for different types of devices provide access to objects that are specific to the type of device. To enable the SNMP manager or management application to operate intelligently on the data available in the device, the manager needs to know the names and types of objects in the managed device. This is made possible by Management Information Base (\u201cMIB\u201d) modules, which are specified in MIB files usually provided with managed devices. (See, e.g., the publication Request for Comments 1213, the Internet Engineering Task Force (incorporated herein by reference).)","One embodiment of the present invention may support at least some of the following SNMP MIBs:","RFC1253\u2014OSPF Version 2",{"@attributes":{"id":"p-0061","num":"0000"},"ul":{"@attributes":{"id":"ul0009","list-style":"none"},"li":{"@attributes":{"id":"ul0009-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0010","list-style":"none"},"li":["OSPF {neighbor} Status","OSPF {neighbor} Errors","OSPF External LSA","OSPF LSA Sent\/Received\n\nRFC1514\u2014Host Resources MIB\n","Disk Space Utilization","Physical Memory Utilization","Swap\/Virtual Memory Utilization","CPU Load","Running Application\/Process Count","Logged In User Count\n\nRFC1657\u2014Border Gateway Protocol (BGP-4)\n","BGP {neighbor} Status","BGP {neighbor} Updates","Sent\/Received","BGP {neighbor} FSM Transitions\n\nRFC1697\u2014Relational Database Management\n","{rdbms} Status","{rdbms} Disk Space Utilization","{rdbms} Transaction Rate","{rdbms} Disk Reads\/Writes","{rdbms} Page Reads\/Writes","{rdbms} Out Of Space Errors\n\nRFC1724\u2014RIP Version 2\n","RIP Route Changes","RIP {interface} Updates Sent","RIP {neighbor} Bad Routes Received\n\nRFC1759\u2014Printer MIB\n","Printer Status","Printer Paper Capacity","Printer Door Status\n\nRFC2115\u2014Frame Relay DTE\n","Frame Relay {dlci} Status","Frame Relay {dlci} FECN\/BECN","Frame Relay {dlci} Discards\/DE","Frame Relay {dlci} Traffic In\/Out\n\nRFC2863\u2014Interfaces Group MIB\n","{interface} Status","{interface} Utilization In\/Out","{interface} Traffic In\/Out","{interface} Packets In\/Out","{interface} Discards In\/Out","{interface} Errors In\/Out."]}}}},"One embodiment of the present invention may support at least some of the following vendor specific MIBs:","APC UPS",{"@attributes":{"id":"p-0063","num":"0000"},"ul":{"@attributes":{"id":"ul0011","list-style":"none"},"li":{"@attributes":{"id":"ul0011-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0012","list-style":"none"},"li":["UPS Battery Status","UPS Battery Capacity","UPS Battery Temperature","UPS Voltage","UPS Output Status\n\nCheckpoint FW-1\n","Packets Accepted","Packets Rejected","Packets Dropped","Packets Logged","CPU Utilization\n\nCisco 340\/350 Wireless Access Points\n","Associated Stations","Neighbor Access Point Count\n\nCisco Local Director\n","Virtual {server}:{port} status","Virtual {server}:{port} Connections","Virtual {server}:{port} Traffic In\/Out","Virtual {server}:{port} Packets In\/out","Real {server}:{port} status","Real {server}:{port} Connections","Real {server}:{port} Traffic In\/Out","Real {server}:{port} Packets In\/out","Failover Cable Status\n\nCisco PIX Firewall\n","Firewall Status","Active IP Connections","Active FTP Connections","Active HTTP Connections","Active HTTPS Connections","Active SMTP Connections","Active H.323 Connections","Active NetShow Connections","Active NFS Connections\n\nCisco Router\/Catalyst Switch\n","{interface} CRC Errors","Backplane Utilization","VLAN Traffic In\/Out","VLAN Error In\/Out","CPU Utilization","Memory Utilization","Buffer Allocation Failure","Chassis Temperature","Fan Status","Power Supply Status","Module Status\n\nCompaq Insight Manager\n","Network Interface Status","Network Interface Utilization In\/Out","Network Interface Alignment Error In\/Out","Network Interface FCS Error In\/Out","CPU Utilization","Disk Space Utilization","RAID Controller Status","RAID Array Chassis Temperature","RAID Array Fan Status","RAID Array Power Supply Status\n\nFoundry Network Router\/Switch\n","CPU Utilization","Chassis Temperature","Fan Status","Power Supply Status\n\nHP\/UX\n","Disk Space Utilization","Physical Memory Utilization","Swap\/Virtual Memory Utilization","CPU Load","Running Application\/Process Count","Logged In User Count\n\nLAN Manager (Windows Only)\n","Windows Login Errors","System Errors","Workstation I\/O Response","Active Connections\n\nMicrosoft DHCP Server\n","Available Address In Scope","DISCOVER Request Received","REQUEST Request Received","RELEASE Request Received","OFFER Response Sent\u201d","ACK Request Received","NACK Request Received\n\nMicrosoft Exchange Server\n","Exchange Server Traffic In\/Out","Exchange Server ExDS Access Violations","Exchange Server ExDS Reads","Exchange Server ExDS Writes","Exchange Server ExDS Connections","Exchange Server Address Book Connections","Exchange Server LDAP Queries","Exchange Server MTS","Exchange Server SMTP Connections","Exchange Server Failed Connections","Exchange Server Queue","Exchange Server Delivered Mails","Exchange Server Looped Mails","Exchange Server Active Users","Exchange Server Active Connections","Exchange Server Xfer Via IMAP","Exchange Server Xfer Via POP3","Exchange Server Thread Pool Usage","Exchange Server Disk Operation (delete)","Exchange Server Disk Operation (sync)","Exchange Server Disk Operation (open)","Exchange Server Disk Operation (read)","Exchange Server Disk Operation (write)\n\nMicrosoft Internet Information Server (IIS)\n","Incoming\/Outgoing Traffic","Files Sent\/Received","Active Anonymous Users","Active Authenticated Users","Active Connections","GET Requests","POST Requests","HEAD Requests","PUT Requests","CGI Requests","Throttled Requests","Rejected Requests","Not Found (404) Errors\n\nMicrosoft SQL Server (Using Network Harmoni ACM)\n","{database} Status","{database} Page Reads\/Writes","{database} TDS Packets","{database} Network Errors","{database} CPU Utilization","{database} Threads","{database} Page Faults","{database} Users Connected","{database} Lock Timeouts","{database} Deadlocks","{database} Cache Hit Ratio","{database} Disk Space Utilization","{database} Transaction Rate","{database} Log Space Utilization","{database} Replication Rate\n\nOracle 8\/9i Database \u25a1.Oracle DB {database} Status\n","Oracle DB {database} Disk Utilization","Oracle DB {database} Transaction Rate","Oracle DB {database} Disk Reads\/Writes","Oracle DB {database} Page Reads\/Writes","Oracle DB {database} OutOfSpace Errors","Oracle DB {database} Query Rate","Oracle DB {database} Committed\/Aborted Transactions","Oracle Table {table} Space Utilization","Oracle Table {table} Status","Oracle Datafile {file} Reads","Oracle Datafile {file} Writes","Oracle Replication Status","Oracle Listener Status","Oracle SID Connections\n\nSun Solaris\n","System Interrupts","Swap In\/Out to Disk","CPU Load\n\nNET-SNMP (formerly UCD-SNMP) \u25a1.Disk Space Utilization\n","Physical Memory Utilization","Swap\/Virtual Memory Utilization","CPU Load","System Interrupts","Swap In\/Out to Disk","Block I\/O Sent\/Received","System Load Average."]}}}},"One embodiment of the present invention may support at least some of the following non-SNMP tests:","Networking",{"@attributes":{"id":"p-0065","num":"0000"},"ul":{"@attributes":{"id":"ul0013","list-style":"none"},"li":{"@attributes":{"id":"ul0013-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0014","list-style":"none"},"li":["Ping Packet Loss","Ping Round Trip Time","RPC Ping\n\nInternet Services\n","HTTP","HTTPS","SMTP","IMAP","IMAPS","POP3","POP3S","NNTP","FTP\n\nApplications\n","Radius","NTP","DNS Domain","SQL Query","LDAP Search","DHCP Request","URL\/Web Transaction Test\n\nCustom\n","External Data Feed","External Plug in Monitors","Advanced Port Test","Advanced SNMP Test.\n\n\u00a7 4.3.1.1.2 Exemplary Application Monitors\n"]}}}},"Exemplary application monitors may include:\n\n","SQL Server\u2014Checks state, transaction rate, write operations performance, cache hit rate, buffers, concurrent users, available database and log space.\n\n","External data feeds (\u201cEDF\u201d) monitors may be used to insert result values into the system using a socket interface. The inserted data is treated just as if it were collected using internal monitors.","\u00a7 4.3.1.1.4 Plug-In Monitors","The present invention can provide a plug-in monitor framework so that a user can write a custom monitor in Java or any other external script or program. The monitor itself and a definition file in XML are put into a plugin directory, and treated as integrated parts of the DGE itself.","\u00a7 4.3.1.2 Monitoring Business Services (End-to-End)","Since IT infrastructure is typically used to deliver business services within an enterprise, it is increasingly important to correlate the different IT components of a business service. As an example, a payroll service may consist of a payroll application on one server, a backend database on another server, and a printer, all connected by a network router. Any of these underlying IT components can fail and cause the payroll service to go down.","Service views and reports can be created in the exemplary product by grouping together all the underlying components of a service into a consolidated service view. If and when any of the underlying IT components fails, the entire service is reported as down, thus allowing one to measure the impact of underlying IT components on business services.","\u00a7 4.3.1.3 Test Provisioning","Most of the test discovery on a device is done by a separate task. Note that any adds\/changes are made to the configuration database which essentially controls the behavior of the DGE processes as described earlier.","Tests can be provisioned using one or more of the following techniques.","Automated Test Discovery","Port and SNMP tests can be automatically \u201cdiscovered\u201d by querying the device to see what services are running. The system can automatically detect disk partitions, volumes and their sizes so that the usage is normalized as a percentage. This normalization may also be done for memory, disk partitions, and database tablespace.","Auto-Discovery of Vendor, Model, OS","When the auto-discovery for SNMP occurs, the target device database record may be updated with vendor and model information. If a user has checked the SNMP tests box when creating a device, the model and vendor information may be displayed on a configure tests page.","Auto-Update for Device Capacity Change","The present invention can provide a mechanism for refreshing maximum values or SNMP object identifiers (SNMP OID) when an SNMP test has changed. For example, when memory or disk capacity has changed, tests that return percentage-based values would be incorrect unless the maximum value (for determining 100%) is refreshed. Similarly, in the case of a device rebuild, it is possible that the SNMP OIDs may change, thus creating a mismatch between the current SNMP OIDs and the ones discovered during initial provisioning. If any of these situations occurs, the user need only repeat the test provisioning process in the web application for a changed device. The present invention can discover whether any material changes on the device have occurred and highlight those changes on the configure tests page, giving the user the option to also change thresholds and\/or actions that apply to the test.","Centralized Administration of Thresholds and Notifications","Default warning and critical thresholds may be set globally for each type of test. Tests can be overridden at the individual device level, or reset for a set of tests in a department or other group. In addition, a service level (SLA) threshold can be set separately to track levels of service or system utilization, which will not provide alarms or actions.","At this point, the system is configured. Data gathering and storage (in accordance with the configuration) is described in \u00a7 4.3.2 below. Then, information extraction, combination and presentation (in accordance with the configuration) is described in \u00a7 4.3.3 below.","\u00a7 4.3.2 Data Gathering and Storage","To reiterate, under the present invention, data gathering may be performed by distributed data gathering operations (e.g., DGEs). Gathered data may be stored locally by each DGE. Further, DGEs may optionally perform some local data preprocessing such as calculating rate, delta, percentages, etc.",{"@attributes":{"id":"p-0080","num":"0317"},"figref":"FIG. 6","b":["600","600","605","610","605","615"]},"The remainder of the method  may depend on whether the DGE gathers data using a \u201cpull model\u201d (i.e., with distinct requests) or whether it gathers data using a \u201cpush model\u201d (i.e., without a distinct request). In either model, the DGE can receive an exception indication if a device performs a self-test and finds an error. Such errors are typically reported using SNMP traps or via a log message. For purposes of simplicity, the various ways of gathering data are shown together. However, a particular implementation of the present invention need not use all of these alternative data gathering techniques.","Referring to trigger (event) block , if it is time for the DGE to get data for a particular test (e.g., as specified by a polling scheduler in the DGE), it requests (polls for) data as indicated by block  and the requested data is accepted as indicated by block . Since these blocks \u201cpull\u201d data from devices, they effect a pull data gathering technique. The period at which data for a particular test is requested may be defined by the test (object) and\/or configuration data associated with the test. The request may be placed in a queue. The method  then proceeds to decision block , described later.","Referring back to trigger (event) block , if data is made available (e.g., \u201cpushed\u201d) to the DGE, it accepts the data as indicated by block , before the method  proceeds to decision block . Since this branch accepts data that has been \u201cpushed\u201d to the DGE from a device, it effects a push data gathering technique.","Referring now to decision block , it is determined whether the data is fault data or performance data. If the data is performance data, it is stored locally as indicated by block , before the method  is left via return node . In one embodiment, the stored data is aggregated (e.g., daily data is combined to weekly data, weekly data is combined to quarterly data, quarterly data is combined to annual data, etc.). As shown by optional block , the performance data may be pre-processed. For example, the DGE can pre-process the performance data to calculate rates, deltas, percentages, etc. It can also normalize the collected data.","Referring back to decision block , the data is compared with one or more thresholds as indicated by block . Then, as indicated by decision block , it is determined whether or not the threshold is violated. (In the following, it will be assumed that the fault data is only checked against one threshold to simplify the description. However, the data can be compared against more than one threshold, such as a \u201ccritical\u201d threshold and a \u201cwarning\u201d threshold.) If the threshold is not violated, the method  is simply left via RETURN node . If, on the other hand, the threshold is violated, the method  branches to block  which starts processing for a fault exception.","Referring back to trigger (event) block , notice that the method  proceeds to block  if a fault exception (e.g., generated by a device self-test) is reported to it. As indicated by blocks  and , an action for the fault exception is determined (Recall, e.g., data structure  of .) and performed. Thus, fault events may be handled by the DGE. As indicated by optional block , the occurrence of the fault exception may be stored. Thus, in this embodiment, although fault data is not stored if no threshold violation exists, the data itself, or merely the fault exception, can and should be stored in the event of a fault exception occurrence.","In one embodiment, if a threshold has been crossed, an event is generated and fed into a correlation-processor. This thread looks at a rules engine to determine the root-cause of the problem (e.g., upstream devices, IP stack, etc.) and if a notification or action needs to be taken.","\u00a7 4.3.2.1 Data Storage","In an exemplary embodiment, consistent with the principles of the present invention, all data is stored in a JDBC compliant SQL database such as Oracle or MySQL. Data is collected by the DGEs and stored using JDBC in one of a set of distributed databases which may be local or remote on another server. Such distributed storage minimizes data maintenance requirements and offers parallel processing. All events (a test result that crosses a threshold) may be recorded for historical reporting and archiving. Information may be permanently stored for all events (until expired from database). All messages and alerts that may have been received may be permanently stored by the appropriate DGE (until expired from the database). Raw results data (polled data values) may be progressively aggregated over time. In one embodiment, a default aggregation scheme is five-minute samples for a day, 30-minute averages for a week, one-hour averages for three months and daily averages for a year.","\u00a7 4.3.2.2 Events and Messages","Recall from blocks ,  and  that a threshold violation or exception may cause an event to be generated. Each event, as well as each exception or message received by the DGE is assigned a severity. A message is assigned a severity based on a user specified regular expression pattern match.","Based on these severity levels, the visual GUI indicates these severity conditions by unique icons or other means. The following severity states are supported:\n\n","Events may be recorded for these state changes in order to track historical activity, or lack thereof. Tests can be \u2018suppressed\u2019 when they are in a known condition, and are hidden from view until the state changes after which the suppressed flag is automatically cleared.","An event may be recorded for a test's very first result and for every time a test result crosses a defined threshold. For example, the very first test result for an ICMP round trip time test falls into the \u201cOK\u201d range. Five minutes later, the same test returns a higher value that falls in the \u201cWARNING\u201d range. Another five minutes passes, the test is run again, and the round trip time decreases and falls back into the \u201cOK\u201d range. For the ten minutes that just past, 3 separate events may have been recorded\u2014one because the test was run for the first time, and two more for crossing the \u201cWARNING\u201d threshold, both up and back.","One time text messages, or SNMP traps, or text alarms may be displayed in a separate \u2018message\u2019 window. All messages should have a severity and device associated with them, and the user can filter the messages displayed and acknowledge them to remove from the messages window. A user can match on a regular expression and assign a severity to a text message, thus triggering actions and notifications similar to events.","\u00a7 4.3.2.3 Actions","Recall that events and exceptions trigger actions. An action may be a notification via email or pager, or any other programmable activity such as opening a trouble ticket or restarting a server. Actions may be configured and assigned to tests in the form of a profile, with each profile preferably containing any number of individual sub-actions. Each of these sub-actions may configured with the following information:\n\n","Having described data gathering (in accordance with the configuration), information extraction, combination and presentation (in accordance with the configuration) is now described in \u00a7 4.3.3 below.","\u00a7 4.3.3 Information Extraction, Combination and Presentation","To reiterate, under the present invention, data collection and storage is distributed across various DGEs which each store data locally or a remote distributed database. Further, at least some data analysis may be distributed across various DGEs, each of which may analyze local data. Thus, a (more) centralized reporting facility is relieved of at least some data storage and analysis responsibilities.",{"@attributes":{"id":"p-0097","num":"0345"},"figref":"FIG. 5","b":["500","510","500"]},"In response to a user query (Note that a user login may infer a default query.), the user should be authenticated as indicated by block . Any known authentication techniques, such as password, radius, or external directory, etc., may be used.","Then, the user's authorization is determined as indicated by block . A user's authorization may depend on a group to which the use belongs. (Recall, e.g., data structure  of .) An administrator may associate a user to a group using the configuration API. For example, in one exemplary embodiment, a group object may have defined \u201cpermissions\u201d (e.g., create actions, create devices, see data of other user, etc.) and defined \u201climits\u201d (e.g., number of devices, types of devices, device locations, number of tests, etc.). The defined permissions are typically provided for security purposes. The defined limits are typically provided for security purposes and\/or for providing flexible software licensing terms.","Referring back to , as indicated by block , a database query may be generated using a report type (e.g., fault report or performance report) and the user's authorization. Finally, as indicated by block , the dissemination (e.g., multicast or broadcast fan-out) of the database query to appropriate ones of the data gathering elements is started, before the method  is left via RETURN node . That is, since the fault and performance data is distributed among various data gathering elements, and is not centrally stored, a query is distributed to the appropriate data gathering operations (e.g., DGE databases). Since the configuration information associates users with devices (See, e.g.,  and  of .) and devices with DGEs (See, e.g.,  and  of .), the appropriate DGEs can be determined. Alternatively, as alluded to above, the query can be simply broadcast to all DGEs. Non-relevant DGEs can simply not transmit back their data. Alternatively, the data combination act (described later with reference to block ) could suppress such non-relevant data.","Referring back to trigger (event) block , if a query response is received, as indicated by decision block , it is determined whether all (or enough) responses have been received. If not, it is determined whether a time out (for receiving enough query responses) has occurred. If, not, the method  branches back to trigger (event) block . If, on the other hand, a time out has occurred, a time out error action may be taken as indicated by block , before the method  is left via RETURN node . Referring back to decision block , if it is determined that all (or enough) responses have been received, the data from the various DGEs is combined (e.g., correlated) for presentation, as indicated by block . The correlation is transparent from the user's perspective. Then, as indicated by block , a presentation of the information (e.g., a report, a table, a graph, etc.) is generated for rendering to the user. Since the method  gets \u201cfresh\u201d data from the distributed databases, real-time performance reporting is possible in addition to real-time fault reporting. Accounting, if any, is performed as indicated by block , before the method  is left via RETURN node .","Although not shown, in one embodiment, the user can \u201cdrill-down\u201d into a report to view data or information underlying a presentation result.","\u00a7 4.3.3.1 Reports, Graphs and Tables","Recall from block , information is presented back to the user. Such a presentation may be in the form of reports, graphs and tables. Exemplary reports, graphs and tables are now described. Various embodiments of the presented invention may support some or all of the following reports.","An \u201cAvailability\u201d report may be based on event data which shows the number of threshold violations, the distribution of such violations and total downtime. This report can be generated for a device, or individual tests or a business service. Device availability may be measured by the ICMP packet loss test. Metrics are captured for the device state equal to CRITICAL or UNREACHABLE. The report shows the top n (e.g., n=10) violations by amount of \u201cunavailability\u201d, displaying total time unavailable and % unavailable, with graphics showing either view. Users may link to an availability distribution report\/graph for either accounts or devices, depending on which view is being accessed. This histogram is a distribution of the numbers of accounts or devices falling into blocks of 10% availability. That is, itdisplays the number of accounts\/devices falling between 0\u201310% availability, 10\u201320% availability, and so on. Administrative users can view this report at the account level.  illustrates an exemplary account status summary report. Similarly,  illustrates an exemplary service status summary report. Administrative users can then drill down on individual devices for more detail. End users running the report will only see the device level metrics.","A \u201cDowntime\u201d report is similar to the Availability report, in that it is based on device availability as measured by the ICMP packet loss test. However, the results are only for device states equal to CRITICAL, rather than CRITICAL and UNREACHABLE. This more accurately reflects the situation when a single device outage occurs, with no regard for any possible parent device outages that may cause a child device to become UNREACHABLE. Again, downtime distribution metrics and a histogram permit administrative users to see account level metrics and drill down to individual device details, whereas end users may only see the device level metrics.","A \u201cTop N\u201d report displays the top N (e.g., N=10 accumulations (based on number of events recorded) during the reporting period per account, per device, and per test. Users may select time frame and event severity. Administrative users can view this report at the account level and then drill down on individual devices and tests for more detail. End users running the report may only see the device and test level metrics. An exemplary \u201cEvent\u201d report is illustrated in .","A \u201cNumber of Events per Day\u201d report displays the number of events recorded each day during the reporting period per account, per device, and per test. Users may select time frame and event severity. Administrative users can view this report at the account level and then drill down on individual devices and tests for more detail. End users running the report may only see the device and test level metrics.","A \u201cNumber of Events\u201d report displays the total number of events recorded during the reporting period per account, per device, and per test. Users may select time frame and event severity. Administrative users can view this report at the account level and then drill down on individual devices and tests for more detail. End users running the report may only see the device and test level metrics.","An \u201cEvent Distribution\u201d report displays the total number of events recorded during the reporting period per account, per device, and per test. Users may select time frame and event severity. Administrative users can view this report at the account level and then drill down on individual devices and tests for more detail. End users running the report may only see the device and test level metrics. The histogram is an event duration distribution of the numbers of accounts\/devices\/tests falling into bins of equal duration for the reporting period. That is, the reporting period may be divided into an equal number of multi-hour (e.g. 4 hour) blocks, with the number of accounts\/devices\/tests falling into each of those blocks.","A \u201cDevice Performance\u201d report snapshot is a period (e.g., 24 hour) snapshot (hour by hour) of event summaries for all tests on a single device. Raw event data is analyzed hourly and the worst test state is displayed for each test as a colored block on the grid (24 hours\u00d7list of active tests on the device). For example, if a test is CRITICAL for one minute during the hour, the entire hour may be displayed as a red box representing the CRITICAL state. The Device Performance Report only applies to target devices, not to device groups. An exemplary test status summary report is illustrated in .","From the \u201cTest Details\u201d pages, users can view the \u201craw\u201d data, showing all the individual test results for a single test. The difference between the raw data and viewing events is that events only occur when thresholds are crossed, whereas raw data shows the test results for every test interval. An exemplary test details report is illustrated in .","Statistical reports calculate statistics from raw results data such as mean, 95th and 98th percentiles, max and min values.","Trend reports can use regression algorithm for analyzing raw data and predicting the number of days to hit the specified thresholds. An exemplary service instability report is illustrated in . An exemplary usage and trend report is illustrated in .","Users can define custom reports in which devices, tests and the type of report to generate for these devices (e.g., top 10, events per day, statistical, trend, event distribution) are selected.","In one embodiment, the method  runs under an application server such as Jakarta Tomcat or BEA Weblogic.","\u00a7 4.3.4 Exemplary Apparatus",{"@attributes":{"id":"p-0116","num":"0364"},"figref":"FIG. 18","b":["1800","1800","1810","1830","1820","1840","1832","1834","1830"]},"The processor(s)  may execute machine-executable instructions (e.g., C or C++ or Java running on the Solaris operating system available from Sun Microsystems Inc. of Palo Alto, Calif. or the Linux operating system widely available from a number of vendors such as Red Hat, Inc. of Durham, N.C.) to perform one or more aspects of the present invention. At least a portion of the machine executable instructions may be stored (temporarily or more permanently) on the storage device(s)  and\/or may be received from an external source via an input interface unit .","In one embodiment, the machine  may be one or more conventional personal computers. In this case, the processing unit(s)  may be one or more microprocessors. The bus  may include a system bus. The storage devices  may include system memory, such as read only memory (ROM) and\/or random access memory (RAM). The storage device(s)  may also include a hard disk drive for reading from and writing to a hard disk, a magnetic disk drive for reading from or writing to a (e.g., removable) magnetic disk, and an optical disk drive for reading from or writing to a removable (magneto-) optical disk such as a compact disk or other (magneto-) optical media.","A user may enter commands and information into the personal computer through input devices , such as a keyboard and pointing device (e.g., a mouse) for example. Other input devices such as a microphone, a joystick, a game pad, a satellite dish, a scanner, or the like, may also (or alternatively) be included. These and other input devices are often connected to the processing unit(s)  through an appropriate interface  coupled to the system bus .","The output device(s)  may include a monitor or other type of display device, which may also be connected to the system bus  via an appropriate interface. In addition to (or instead of) the monitor, the personal computer may include other (peripheral) output devices (not shown), such as speakers and printers for example.","\u00a7 4.3.4 Additional Features","Various refinements to the present invention are now described. Various embodiments of the present invention may include some or all of these refinements.","\u00a7 4.3.4.1 Smart Event Notification","A refined embodiment of the present invention can eliminate sending multiple notifications when a device goes down or is unavailable. Based on the inherent dependency between the ping packet loss test results and the availability of the device, if the ping packet loss test returns a CRITICAL result, then communication with the device has somehow been lost. Configured notifications for all other tests on the device are suppressed until packet loss returns to normal. Smart notification may include:\n\n","A refined embodiment of the present invention supports device dependencies to suppress excessive notifications when a gateway-type device has gone down or is unavailable. Switches, routers, and other hardware are often the physical gateways that govern whether other network devices are reachable. Monitoring of many devices may be impeded if one of these critical \u201cparent devices\u201d becomes unavailable. To provide correlation, a parent and child hierarchy is created between monitored devices in order to distinguish the difference between a CRITICAL test on a device and an UNREACHABLE one.","In many cases, a device is considered to be \u201creachable\u201d. However, if a test on a device is CRITICAL (for all thresholds), UNKNOWN, or FAILED, some additional processing is used to determine if the device is truly reachable. Such additional processing may involve the following. First, a current packet loss test is examined for the device. If such a test exists and the packet loss test result is not CRITICAL, the device is considered reachable. If no such test exists, all immediate parent devices are examined. If the device has no parents, the device is considered reachable and the result of the test is the measured value. The device is only considered unreachable if all the immediate parents have a \u201ccurrent\u201d packet loss test result=100%. \u201cOld\u201d packet loss tests (those that occurred prior to the state change in the child's test result (i.e., OK to CRITICAL)) or the inexistence of a parent packet loss test for a parent has no effect on the result.","\u00a7 4.3.4.3 Multi-Tiered Administration Model","A refined embodiment of the present invention supports a \u201cfederated user model\u201d. End user security may be controlled by permissions granted to a \u201cUser Group\u201d. Each end user can only belong to a single \u201cAccount\u201d, and each Account can only belong to a single User Group. Thus, an end user belongs to one and only one User Group for ease of administration. End users of one account are isolated from all other accounts, thus allowing various departments within an enterprise to each have a fully functional \u201cvirtual\u201d copy of the invention.","Each User Group may have a unique privilege and limits matrix as defined by an Administrative user with administrative control over the User Group. Privileges for User Groups may be defined for devices, tests & actions. Limits at the User Group level may be defined for minimum test interval, max devices, max tests, max actions and max reports.","In addition to end-users, the system permits separate administrative users who can look at multiple \u2018accounts\u2019 (which a normal end-user cannot do). This framework allows senior management or central operation centers or customer care to report on multiple departments that they are responsible for. This eliminates the need for multiple deployments of the same product, while allowing seamless reporting across services that span IT infrastructure managed by different departments in an enterprise.","Administrative user security may be controlled by permissions granted to an Administrative Group. Administrative Groups and User Groups have a many-to-many relationship, allowing the administration of User Groups by numerous administrators who have varying permissions. Privileges for Administrative Groups may be defined for accounts, users, user groups, limits, devices, tests, and actions. A separate set of privileges is defined for each relationship between an Administrative Group and a User Group. A very simple configuration could establish the organization's Superuser as the only administrative user and all end-users belonging to a single User Group. In contrast, a complex organizational model might require the establishment of Administrative Groups for Network Administration, Database Administration, and Customer Service, with User Groups for C-level executives, IT Support, Marketing, etc.","Unlike administrators, the actions of \u201cSuperusers\u201d are not constrained by a privileges matrix\u2014they can perform any of the actions in the matrix on any user. Superusers create Administrative Groups and User Groups, and define the privileges the former has over the latter. The \u2018superuser\u2019 accounts are used to effectively bootstrap the system.","\u201cPrivileges\u201d are the right to create, read, update, delete, suspend, etc. Each User Group has a privileges matrix associated with it that describes what operations the members of that User Group can perform. As mentioned previously, there is a similar, but more complex privileges matrix that describes what operations a member of an Administrative Group can do to administer one or more User Groups.","\u201cLimits\u201d are numerical bounds associated with a User Group that define minimum test interval, maximum devices, maximum tests, maximum actions and maximum reports for end-user accounts. An end user's actions are constrained by the Limits object associated with their User Group, unless there is another Limits object that is associated with the particular user (e.g. Read-only user) that would override the limits imposed by the User Group.","Administrative users occasionally need to directly administer an end-user's account, by logging into that account and providing on-line support to view the account and perform operations. This capability is especially helpful when an end-user's capabilities are limited to administer their own account. To circumvent the limited privileges of the end-user, the administrative user need not use the end-user's login\/password, but rather \u201cmasquerades\u201d as the end-user subject only to the administrative user's own privileges, which are often more extensive.","Administrators that have permissions to create end users and their accounts, have the option of creating users with read-only capabilities. In this way, administrators may give certain end users access to large amounts of data in the system, but without authority to change any of the characteristics of the devices, tests, actions or reports they are viewing.","When representing an end user, an administrator (if given proper create privileges) may create devices and tests for the end user in the end user's own account, via a \u201cRepresent\u201d feature. One option the administrator has at the time of device creation is to make the device read-only. The tests on the read-only device become read-only as well. This feature was created to enable an end-user to observe the activity on a mission-critical network component, such as a switch or even a switch port, but not have the authority to modify its device or test settings.","\u00a7 4.3.4.4 Graphical User Interface","Data may be collected from all DGEs and presented a consolidated view to the user primarily using a Web based interface. An end user only needs a commonly available Web browser to access the full functionality and reporting features of the product. Real-time status views are available for all accounts or devices or tests within an administrator's domain, all tests or devices or tests within an account, or all tests on a single device or device Group. Users can drill down on specific accounts, devices, and tests, and see six-hour, daily, weekly, monthly, and yearly performance information.","By using user administration pages, users can set default filters for the account and device summary pages to filter out devices in OK state, etc. For example, administrators may elect to filter out accounts and devices that are in an \u201cOK\u201d status. Especially for large deployments, this can dramatically cut down on the number of entries a user must scroll through to have a clear snapshot of system health. A toggle switch on the account and device summary pages may be used to quickly disable or enable the filter(s).","General administration features including: DGE location and host creation; administration of Administrative Group domains; Administration of User Group thresholds, privileges and actions; Account and user management; Administration of devices, device groups, tests and actions; and Password Management, all may be supported by a graphical user interface.","Via either an \u201cUpdate Device\u201d page or during device suspension, a user can enter a comment that will display on a \u201cDevice Status Summary\u201d page. This could be used to identify why a device is being suspended, or as general information on the current state of the device.","\u00a7 4.3.4.5 Integration with External Systems","The present invention can export data to other systems, or can send notifications to trouble ticketing or other NOC management tools. In addition, the present invention can import data from third party systems, such as OpenView from Hewlett-Packard, to provide a single administrative and analytical interface to all performance management measurements. More specifically, the present invention can import device name, IP address, SNMP community string and topology information from the HP OpenView NNM database, thereby complementing OpenView's topology discovery with the enhanced reporting capabilities of the present invention. Devices are automatically added\/removed as the nodes are added or removed from NNM. Traps can be sent between NNM and the present invention as desired.","The present invention can open trouble tickets automatically using the Remedy notification plug in. It can automatically open trouble tickets in RT using the RT notification plug in.","\u00a7 4.4 Exemplary Deployment and Administration","The following exemplifies how the present invention may be deployed on a system and administered. All configuration can be done by the GUI or via the API.","Physical locations (which are arbitrarily defined by the superuser) of where Data Gathering Elements are installed are created in the system. Recall that a DGE is a data collection agent assigned to a \u201clocation.\u201d To create a new DGE, its IP address and location are provided. Since multiple DGEs can exist in one location, soft and hard limits that define DGE load balancing may be set. The present invention may use a load balancing mechanism based on configurable device limits to ensure that DGE hosts are not overloaded. In this embodiment, each device is provisioned to a DGE when it is created based on the following heuristics:\n\n","After creating the DGEs in the system, user groups and accounts are created in the configuration database. After this, devices and tests are provisioned in the system, typically using an auto-discovery tool which finds all IP devices and available tests on them in the given subnets. Default thresholds and actions are used if none is provided by the user. At this stage, the system is ready to be operational. When a DGE is enabled (either a process on the same machine as the configuration database or on another machine), it connects to the configuration database, identifies itself and downloads its configuration. After download its configuration, the DGE starts monitoring tests as described earlier.","The fault and performance monitoring system of the present invention can be set up and installed in a stand-alone environment in a few hours. Default test settings, action profiles, and reports may be pre-loaded into the system. Lists of devices can be batch-imported automatically into the system using the API.","\u00a7 4.5 Conclusions","As can be appreciated from the foregoing disclosure, the present invention discloses apparatus, data structures and methods for combining system fault and performance monitoring. By using distributed data collection and storage of performance data, storage requirements are relaxed and real-time performance monitoring is possible. Data collection and storage elements can be easily configured via a central configuration database. The configuration database can be easily updated and changed. A federated user model allows normal end users to monitor devices relevant to the part of a service they are responsible for, while allowing administrative users to view the fault and performance of a service in an end-to-end manner across multiple accounts or departments."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"\u00a7 3. BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3","b":"1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIGS. 7\u201310"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIGS. 11A and 11B"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 13A and 13B"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIGS. 14A and 14B"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 18"}]},"DETDESC":[{},{}]}
