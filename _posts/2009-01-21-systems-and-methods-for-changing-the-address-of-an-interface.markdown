---
title: Systems and methods for changing the address of an interface
abstract: In one aspect, the invention provides a method of reconfiguring a network interface. In some embodiments, this method includes the following steps: receiving information indicating that an operator desires to remove a first network address from the network interface and assign a second network address to the network interface; and in response to receiving the information, providing a notification to at least one computer program executing in the node such that the computer programs can take a necessary measure (e.g., close a connection that uses the first network address).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08560638&OS=08560638&RS=08560638
owner: Telefonaktiebolaget L M Ericsson (publ)
number: 08560638
owner_city: Stockholm
owner_country: SE
publication_date: 20090121
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention relates to the field of computer networking. In one aspect, the invention relates to systems and methods for changing the network address of an interface.","Typically, a communication device (e.g., computer or other communication device) connects to a network (e.g., an Internet Protocol (IP) network) via one or more interfaces. Each interface is assigned a network address (e.g., an IP address). When an administrator (or \u201coperator\u201d) changes the network address of an interface, any currently established connections using that address may not function correctly. Accordingly, changing the IP addresses of an interface usually requires service disrupting measures (e.g., a system restart or at least a process restart). While it is possible to add an alias address to an interface, it is still problematic to remove the primary address without impacting negatively on the applications running in the device that are using the primary address.","What is desired are improved systems and methods for changing the address of an interface.","In one aspect, the invention provides a method of reconfiguring a network interface. In some embodiments, this method includes the following steps: receiving information indicating that an operator desires to remove a first network address from the network interface and assign a second network address to the network interface; and in response to receiving the information, providing a notification to at least one computer program executing in the node such that the computer programs can take a necessary measure.","In some embodiments, the information comprises a command received from an external node or directly from the operator, and the first network address is not removed from the network interface until after the notification is provided to the executing computer program.","In some embodiments, the information includes the second network address and the notification provided to the computer program includes the second network address. The information may further include the first network address and\/or a subscriber identifier, wherein the computer program is associated with the first network address and\/or the subscriber identifier.","In some embodiments, the information includes (a) the second network address and (b)(1) a subscriber group identifier or (b)(2) the first network address, wherein a set of two or more computer programs is associated with the subscriber group identifier and\/or the first network address. The method may further include providing the notification to at least a subset of the computer programs included in the set of computer programs.","The method may also include the step of monitoring connections that are using the first network address, and the step of monitoring the connections comprises detecting when a connection using the first network address is closed, and the method may further include removing the first network address from the network interface only after (1) all of the monitored connections have been closed or (2) a predetermined period of time has elapsed.","In some embodiments, the necessary measure includes sending a signal to a second computer program.","In some embodiments, the step of receiving the information that indicates that an operator desires to remove the first network address from the network interface and assign a second network address to the network interface comprises: (1) receiving, from a protocol stack, information indicating that an operator has removed the first network address from the network interface and added the second network address to the network interface; and (2) after step (1), receiving, from the protocol stack, information indicating that an operator has assigned the first network address to the network interface as an alias.","In another aspect, the present invention provides a computer program product comprising a computer readable medium storing address change service software for providing a notification to a computer program in response to an event. In some embodiments, the event is one of: (a) detecting that an operator has assigned a new network address to a network interface to which a previous network address was assigned and (b) receiving a command to assign the new network address to the network interface, and the notification includes the new network address.","In some embodiments, the computer readable medium further stores interface monitoring software for (a) detecting (i) the assigning of the new network address to the network interface and (ii) the assigning of the previous network address to the network interface as an alias, and (b) triggering the address change service software to provide the notification to the computer program in response to the interface monitoring software detecting said events (i) and (ii). In these embodiments, the computer readable medium may further store connection tracking service software configured to monitor connections that are using the previous network address in response to event (a) or (b). The connection tracking service software may comprise computer code for detecting when a connection closes. The address change service software may further be configured to remove the previous network address from the network interface in response to the software for monitoring the connections detecting that all of the monitored connections are closed.","In some embodiments, the computer readable medium further stores computer code configured to receive, directly from an operator or from an external application, a command to assign the new network address to the network interface. The computer readable medium may further store computer code that is configured to assign the new network address to the network interface in response to the receipt of the command. The computer readable medium may further store computer code that is configured to remove the previous network address from the network interface in response to (a) a timer expiring or (b) the closing of all connections that were using the previous network address.","In some embodiments, the command includes a subscriber identifier that is associated with only the executing computer program to which the notification is provided or a subscriber group identifier that is associated with a set of two or more executing computer programs, said set including the executing computer program to which the notification is provided. The computer code for providing the notification may be configured to provide the notification to each computer program identified by the subscriber group identifier.","In some embodiments, the computer program is configured to send a signal to a second computer program in response to receiving the notification.","The above and other aspects and embodiments are described below with reference to the accompanying drawings.","Referring to ,  is a functional block diagram of a communication device (or \u201cnode\u201d)  according to some embodiments of the invention. As illustrated, communication device  includes one or more applications  using a protocol stack , such as, for example, an Internet protocol stack (e.g., a TCP\/IP stack), to communicate with other applications running on other communication devices connected to network .","As is known in the art, node  may include a program  to configure stack . That is, program  enables an administrator  to: (a) assign a primary addresses to a network interface (physical or virtual); (b) assign an alias address to the interface; and (c) remove an address from the interface. Accordingly, admin  can change the network address assigned to a network interface by using program  to remove the currently assigned primary address from the interface, assign a new primary address to the interface, and assign to the interface the removed address as an alias address. In some embodiments, program  is the ifconfig utility. Ifconfig is short for \u201cinterface configurator.\u201d","A problem with using the ifconfig utility (or other similar utility) to change the address assigned to an interface is that applications  that, at the time of the change, have established connections that use the address are not notified of the change, and thus, must discover the change themselves. Additionally, even if an application  were able to discover that a change has occurred, the application  may not be able to determine the new address.","To overcome this problem, node  includes an address change service (ACS) . While service  is shown being separate and apart from program , this was done solely for the sake of illustration as it is contemplated that program  could be modified to include address change service .","In some embodiments, admin  can directly use service  to change the address assigned to an interface much in the same way that today admin  can directly use ifconfig  to change the address assigned to an interface. However, service  is configured such that, in response to service  receiving information indicating that admin  desires to change the address of the interface from an existing address to a new address (e.g., receiving a change command from admin  or from a maintenance system ), service  provides a notification to all of (or a subset of) the applications  that are using the existing address so that the notified applications  can take necessary measures (e.g., terminate a connection and\/or establish a new connection).","The notification that is provided to the applications  may include the new address so that the applications will be made aware that not only has a change taken place, but also made aware of the new address. In some embodiments, the notification is only sent to those applications  that have \u201csubscribed\u201d to a notification service for the network interface (or to a subset of the \u201csubscribers\u201d).","The ability to split the subscribers into subsets (e.g. two or more subsets) allows for advanced controlled network reconfiguration. For example, two subscribing applications (application A and application B) that share the same network address could, in runtime, be reconfigured to be separated addressing wise (i.e., use two individual IP destination addresses). For example, it may be desired to reconfigure the system so that application B uses an address that is different than the address it shares with application A. This can be accomplished by, for example, having admin  use service  to specify the new address that application B should use and cause service  to send a notification to application B, but not application A. The notification, which may include information identifying the new address, should cause application B to, for example, close gracefully all of the connections it has open that use the old address and reestablish those connections using the new address.","In other embodiments, applications  can still be notified of changes to stack  even when admin  uses program  to configure stack  because node  includes an interface monitor  that monitors stack  and communicates with service . For example, in some embodiments, interface monitor  is configured to monitor stack  for the purpose of detecting a specific event that indicates that admin  desires to change the configuration of a network interface (e.g., detect a pattern of IP address alterations to an interface activated through conventional procedures) and, in response to detecting the event, provide information about the event to service , which uses the information to notify one or more applications that an interface change is underway.","More specifically, in some embodiments, monitor  is configured to detect the following changes to an interface: (1) the removal of an address from the interface; (2) the assigning of a new address to the interface; and (3) the assigning of the removed address to the interface as an alias address. In response to monitor  detecting that these three actions have occurred within some time window, monitor  may signal service  that an interface address change is underway. For example, monitor  may provide to service  the removed address and the new address. In response,  may use this information to notify one or more applications  that an address change is underway. Thus, the application  can take necessary measures (e.g., gracefully terminating connections that use the removed address and initiate new connections). As discussed above, in some embodiments, the notification is sent only to those applications  that have \u201csubscribed\u201d to the notification service for the network interface.","The new connections that are initiated by application  in response to receiving the notification from service  will use the new address. This can be done, for example, by application  binding to the new address in the socket interface. It can also be done automatically by stack  (i.e., stack  will choose the new address as the source address for the connection).","Incoming connections from a remote application to application  should, of course, use the new IP address. This can be done by notifying the remote application of the new address or can be handled by other layers (e.g. through the domain name system (DNS)) or through manual intervention by manually reconfiguring the remote application in response to the notification.","An application  should be able to keep a socket open during the process of address change, but should denying incoming connection requests (e.g. TCP SYN) to the old IP address (i.e., denied or discarded for a period covering the change). This way, the connections to the old IP address will not grow and consume resources. This can be done by a temporary IP-filter or a temporary route to a \u201cblack hole interface\u201d which discards the traffic. An Internet control message protocol (ICMP) message could also be sent back to originator if needed. Once the controlled IP address is completed, then the above temporary measures may be removed. The application  could also discard the connection if it recognizes that it is to the wrong IP address but this will make, for example, a layer of stack  (e.g., a TCP layer) go through its states and end up in TIME_WAIT state. It is also possible for the application  to simply close the listening socket upon receiving the notification, thereby preventing the establishment of new connections. It is also possible notify applications about the address change and then set the new IP address and remove the old one. The applications will then decide what to do with the old already established connections (that are no longer working).","In some embodiments, an address change handler (ACH) application programming interface (API) is provided so that applications  can react to an address change notification in the following ways: controlled shutdown of sockets, restart process or create new communication endpoint (e.g. SCTP). Another option is to give the applications a warning before the actual address change starts. The address change would then be implemented as a delayed event which could start after given time or when the application signals back that they are ready, for example, when they have closed all external communication sessions.","Referring now to ,  is a flow chart illustrating a process  according to some embodiments of the invention. Process  may begin in step , where service  receives a subscription request  (see ) from a subscriber (e.g., an application  or an application monitor ). Request  may identify an address or interface for which the subscriber would like to receive notifications. Alternatively, request  may simply contain a subscriber identifier associated with the subscriber.","In step , admin  (a.k.a., operator ) requests an address change. For example, admin  may send an address change request message  to maintenance system  (a.k.a., O&M ) that may include information identifying node , an interface in node , a new address to be assigned to the identified interface, and one or more subscriber identifiers. In response, maintenance system  transmits an address change request message  to service . Message  may include information identifying an interface in node , the new address to be assigned to the identified interface, and the subscriber identifiers. If node  only has one interface, then message  need not include information identifying the interface. In some embodiment, admin  can interface directly with service  using, for example, a graphical user interface provided by service . That is, it is not necessary for admin  to use maintenance system  to provide to service  an address change request.","In response to message , service : (a) adds the new address to the interface by, for example, providing an insert new address message  to stack  (step ); (b) transmit a monitor connections message  to a connection tracking service  (a.k.a., CTS ), which monitors connections that use the old address that the new address is intended to replace (step ); and (c) provides a notification message  to a set of subscribers (e.g., the subscribers identified by the subscriber identifier(s) and\/or the subscribers that indicated they want to receive a notification whenever the old address is removed from the interface or the interface is modified) (step ). Monitor connections message  may include the old address. Notification message  may include the new address and the old address. The subscriber, in response to notification , decides what actions to take as described herein.","As mentioned above, in response to message , CTS  will monitor some or all of the established connections that use the old address. CTS  may accomplish this by interrogating stack , which, in some embodiments, maintains a connection table. CTS  may be configured to transmit to service  a notification  once (a) a timeout has occurred (i.e., a certain amount of time has elapsed since CTS  received message ) or (b) all of the monitored connections are closed, whichever occurs first. That is, CTS  may be configured to send a notification  to service  as soon as the usage of the old address is complete (step ). Preferably, notification  indicates whether notification  was sent as a result of the timeout or as a result of detecting that all of the monitored connections are closed.","In response to receiving notification , service  may remove the old address from the interface by, for example, providing a remove address message  to stack  (step ). For example, in embodiments where all applications that use the old address are notified, it may be desirable to remove the old address. However, in embodiments where less than all the applications are notified it may be desirable to not remove the old address. For instance, there may be an embodiment were two applications use the same address and an administrator would like to migrate just one of the applications to a new address. In such an embodiment, step  may be skipped.","Next (step ), service  may notify admin  that the address change is complete. For example, in step , service may transmit a notification message  to O&M , which may then provide to admin  a notification  that informs admin  that the address change is complete. Alternatively to performing steps  and , service  may signal an error condition if notification  indicates that a timeout occurred.","Referring now to ,  is a data flow diagram that is very similar to the data flow diagram shown in . The difference is that  shows multiple subscribers subscribing to the notification service.  also shows that the address change notification message is sent only to a subset of the subscribers. Of course, in some embodiments, the notification is sent to all subscribers.","Referring now to ,  is a flow chart illustrating a process  according to some embodiments of the invention. Process  may begin in step , where service  receives a subscription request  (see ) from an application monitor . Request  may identify an address or interface for which monitor  would like to receive notifications. In step , admin  requests an address change (see , message ). In response, maintenance system  transmits an address change request message  to service .","In response to message , service : (a) adds the new address to the interface (step ); (b) transmit a monitor address message  to CTS  (step ); and (c) provides a notification message  to monitor  (step ). Monitor , in response to notification , causes one or more applications  (e.g., legacy applications or third party applications that are not capable of being subscribers to the notification service) to restart (step ). For example, in step , monitor may cause a kill signal  (e.g., a SIGKILL signal) to be sent to the one or more applications. After terminating the one or more applications , monitor  may restart the applications. When restarted, the applications should use the new address.","As discussed above, in response to message , CTS  monitors some or all of the established connections that use the old address and sends a notification  to service  as soon as the usage of the old address is complete (step ).","In response to receiving notification , service  removes the old address from the interface by, for example, providing a remove address message  to stack  (step ). Next (step ), service  may notify admin  that the address change is complete.","Referring now to ,  is a flow chart illustrating a process  according to some embodiments of the invention. Process  may being in step , where service  receives a subscription request  (see ) from a set of one or more subscribers (e.g., an application  or an application monitor ).","In step , service receives from operator  information  identifying a subset of the subscribers (e.g., all of the subscribers or less than all of the subscribers). Information  may also identify an address.","In step , interface monitor  (\u201cIM\u201d ) subscribes to an interface change notification service provided by stack  (e.g., IM  may send to stack  a subscribe message  that identifies an interface).","In step , IM  receives notifications from stack  when changes to the subscribed to interface occur. For example, as illustrated in , if we assume operator  uses, for example, utility  to (a) remove an address from the interface (the \u201cold address\u201d), (b) add a new address to the interface, and (c) add the old address to the interface as an alias, then stack  will provide notifications ,  and  to IM .","In step , IM  determines, based on information received from stack , whether service  should be notified that an address change has occurred. For example, IM  may be configured such that it determines that service  should be so notified immediately after IM  receives the following set of notifications: notifications ,  and .","If IM determines that service  need not be notified the process may return to step , otherwise it may proceed to step . In step , IM  send to service  a notification of address change message . Message  may include the new address and the old address.","In response to message , service  determines whether the old address identified in message  matches the address included in message  (step ). If it does, then process proceeds to step , otherwise it may return to step .","In step , service  transmit a monitor connections message  to CTS , which, in response, monitors connections that use the old address. Message  may include information identifying the old address so that CTS  will know which connections need monitoring.","In step , service  provides a notification message  to a set of subscribers (e.g., the subscribers identified by the information in message  and\/or the subscribers that indicated they want to receive a notification whenever the old address is removed from the interface or the interface is modified).","In step , CTS  transmits to service  a notification  once (a) a timeout has occurred or (b) all of the monitored connections are closed, whichever occurs first. In response to notification  indicating that all of the monitored connections are closed, service  provides a connections closed notification  to operator  (step ). Notification  informs operator  that is \u201csafe\u201d to remove the alias from the interface. Accordingly, in response to notification , operator  may use utility  to remove the alias (step ).","Referring now to ,  is a functional block diagram of node  according to some embodiments of the invention. As shown, node  may comprise a data processing system  (e.g., one or more microprocessors), a data storage system  (e.g., one or more non-volatile and\/or volatile storage devices) and computer software  stored on the storage system . Configuration parameters  (e.g., the above mentioned timeout values and tables) may also be stored in storage system . Node  also includes transmit\/receive (Tx\/Rx) circuitry  for transmitting data to and receiving data from network . Software  is configured such that when processor  executes software , node  performs steps described above with reference to the flow charts and data flow diagrams.","Referring now to ,  is a functional block diagram of software . As shown in , software may include: computer instructions  that implement some or all of the layers of protocol stack ; computer instructions  that implement service  (e.g., computer instructions that perform the steps described herein that are performed by service ); computer instructions  that implement CTS ; computer instructions  that implement IM ; and computer instructions  that monitor .","While various embodiments of the present invention have been described above, it should be understood that they have been presented by way of example only, and not limitation. Thus, the breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments.","Additionally, while the processes described above and illustrated in the drawings are shown as a sequence of steps, this was done solely for the sake of illustration. Accordingly, it is contemplated that some steps may be added, some steps may be omitted, the order of the steps may be re-arranged, and some steps may be performed in parallel."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated herein and form part of the specification, illustrate various embodiments of the present invention and, together with the description, further serve to explain the principles of the invention and to enable a person skilled in the pertinent art to make and use the invention. In the drawings, like reference numbers indicate identical or functionally similar elements.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
