---
title: Methods and apparatus for data center management independent of hypervisor platform
abstract: In some embodiments, an apparatus can include a memory configured to store a first hypervisor message and a second hypervisor message. The apparatus can further include a hypervisor interface module. The hypervisor interface module can retrieve, from the memory, the first hypervisor message and the second hypervisor message. The hypervisor interface module can define a first signal, the first signal being based at least in part on the first hypervisor message and having a first format associated with a first hypervisor platform. The hypervisor interface module can define a second signal, the second signal being based at least in part on the second hypervisor message and having a second format associated with a second hypervisor platform. The hypervisor interface module can send the first signal to a first virtual machine instantiated according to the first hypervisor platform. The hypervisor interface module can send the second signal to a second virtual machine instantiated according to the second hypervisor platform.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08615759&OS=08615759&RS=08615759
owner: Virtustream, Inc.
number: 08615759
owner_city: Bethesda
owner_country: US
publication_date: 20110222
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority to and the benefit of U.S. Provisional Patent Application Ser. No. 61\/306,752, entitled \u201cMethods and Apparatus for Data Center Management Independent of Hypervisor Platform,\u201d filed Feb. 22, 2010, the disclosure of which is hereby incorporated by reference in its entirety.","Embodiments described herein relate generally to virtual resources within a data center, and, in particular, to methods and apparatus for data center management independent of hypervisors that have different hypervisor platforms.","A hypervisor can be configured to manage hardware resources of, for example, a host device within a data center environment (e.g., a cloud computing data center environment) so that multiple virtual resources can operate concurrently at the host device. Within a relatively large-scale infrastructure of a data center environment, several incompatible hypervisors, such as a VMware hypervisor and a Xen hypervisor, may be operating within different host devices of the data center environment. Hypervisors can be incompatible because they have different hypervisor platforms. Accordingly, management modules configured to manage virtual resources via a hypervisor based on a first hypervisor platform using a particular signaling protocol may not be able to manage virtual resources via a hypervisor based on a second hypervisor platform. Management of host devices and virtual resources operating on these host devices can be relatively inefficient, complicated, and, in some cases, impossible, because of the incompatibility of the various hypervisors installed on these host devices. Methods and apparatus for managing a data center having various hypervisors with diverse functionality in a unified management system in a desirable fashion are not known.","Thus, a need exists for methods and apparatus for data center management independent of hypervisors that have different hypervisor platforms.","In some embodiments, an apparatus can include a memory configured to store a first hypervisor message and a second hypervisor message. The apparatus can further include a hypervisor interface module. The hypervisor interface module can retrieve, from the memory, the first hypervisor message and the second hypervisor message. The hypervisor interface module can define a first signal, the first signal being based at least in part on the first hypervisor message and having a first format associated with a first hypervisor platform. The hypervisor interface module can define a second signal, the second signal being based at least in part on the second hypervisor message and having a second format associated with a second hypervisor platform. The hypervisor interface module can send the first signal to a first virtual machine instantiated according to the first hypervisor platform. The hypervisor interface module can send the second signal to a second virtual machine instantiated according to the second hypervisor platform.","A management module can be configured to manage operations of a data center independent of hypervisor platform. For example, the management module can be configured to manage disaster recovery of the data center, virtual resource provisioning and\/or reallocation, virtual resource operation, event reporting, data center security, and\/or so forth (which can be collectively referred to as management functions) via interactions with various potentially incompatible hypervisors executing within a data center environment. Specifically, the management module can be configured to perform various management functions associated with the operation of virtual resources at host devices, which can each be operating hypervisors that have incompatible hypervisor platforms. A virtual resource when operating with a hypervisor that has a hypervisor platform can be referred to as operating within the hypervisor environment.","Because they have different hypervisor platforms (or because they operate based on different hypervisor platforms) hypervisors can be incompatible. For example, signals such as function calls and\/or signaling protocols that can be used by a hypervisor based on a first hypervisor platform may not be compatibly used by another hypervisor based on a second hypervisor platform. Said differently, signals associated with a first hypervisor platform may have a first format associated with that hypervisor platform, and as such may be incompatible with signals associated with a second hypervisor platform having a second format. The management module is configured to, for example, handle signaling so that the management module can manage one or more virtual resources of a data center via a hypervisor independent of the platform of the hypervisor. The platform of a hypervisor can be defined, for example, by a particular runtime library, a functionality, an architecture, a communication protocol, an operating system, a programming language, a hypervisor version, and\/or so forth. In some embodiments, the platform of a hypervisor can be, for example, based on a hosted software application architecture executing within an operating-system environment, or a native software application architecture that executes directly on the hardware of one or more host devices.","In some embodiments, the management module can be configured to detect the different hypervisors and can be configured to manage virtual resources operating with the different hypervisors via a hypervisor interface module. In some embodiments, the management module can be configured to manage (e.g., perform management functions related to) the virtual resources based on signals exchanged between the management module and the virtual resources and\/or the hypervisor. In some embodiments, the management module can be configured to send and\/or receive one or more signals configured to cause a specified command, function, method and\/or operation to be executed by a managed hypervisor or a virtual resource included therein (e.g., a virtual machine). The hypervisor interface module can be configured to handle (e.g., translate) signaling related to hypervisors having different platforms so that the differences in hypervisor platforms are transparent (or substantially transparent) to the hypervisors and the management module.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 1","FIG. 1"],"b":["120","100","110","130"],"sub":["Q ","Q+N ","S ","S+M ","Q ","Q+N ","S ","S+M "]},"As shown in , the operation of each of the virtual resources VRthrough VRat host device A is managed by hypervisor A, and the operation of each of the virtual resources VRthrough VRat host device C is managed by hypervisor C. Hypervisor A, hypervisor B, and hypervisor C represent hypervisors that are incompatible with one another because they have (or operate based on) different hypervisor platforms. For example, hypervisor A can be a VMware hypervisor, hypervisor B can be a Xen hypervisor, and hypervisor C can be a Hyper-V hypervisor. The hypervisors A through C can be collectively referred to as hypervisors .","The management module  shown in  is configured to perform various management functions related to, for example, the operation of the virtual resources  at the host devices  of the data center  even though hypervisor A, which is operating at host device A, is different than (e.g., incompatible with) hypervisor C, which is operating at host device C. Specifically, the management module  is configured to perform management functions related to the virtual resources  of the host devices , which may require exchange of signals (e.g., signals that include data, signals to call (or invoke) one or more functions) with the hypervisors  of the host devices , even though each of the host devices  shown in  is operating based on a hypervisor  that has a different hypervisor platform.","In some embodiments, each of the virtual resources  can be, for example, a resource configured to share underlying hardware resources and\/or software resources of the data center  such as the hardware resources and\/or software resources of the host devices A and C. In some embodiments, one or more of the virtual resources  can be a virtual machine, a software module, and\/or so forth. In such embodiments, one or more of the virtual resources  can be a virtual machine executing a given operating system or platform, the operating system including or executing one or more instances of one or more processes or applications, each including one or more associated functions, modules and\/or the like. In some embodiments, one or more of the virtual resources  can be configured to emulate the functionality of, for example, a physical device such as a server.","The management module  is configured perform various management functions related to the operation of the virtual resources VRthrough VRat host device A even when hypervisor A is replaced with hypervisor B as shown in . In some embodiments, hypervisor A can be uninstalled from the host device A and hypervisor B can be subsequently installed at host device A. In some embodiments, hypervisor A can be replaced in a hot-swap transition (e.g., in a real-time transition, in a dynamic transition) by hypervisor B. In some embodiments, the virtual resources VRthrough VRcan be translated (e.g., reformatted, changed from one protocol to another protocol) using a translation module (not shown) so that the virtual resources VRthrough VRcan operate with hypervisor B after hypervisor A is replaced with hypervisor B. In such embodiments, the above-described hot-swap and\/or virtual resource translation can be performed by the management module  and\/or the above-described translation module. Although not shown, in some embodiments, the management module  can be configured to perform management functions related to the operation of virtual resources at a host device that is partitioned so that incompatible hypervisors concurrently operate within the different partitions of the host device.","In some embodiments, one or more of the hypervisors  shown in  can be a different version of another hypervisor. For example, hypervisor A can be an earlier version of hypervisor B. Accordingly, the management module  can be configured to, for example, send signals to and\/or receive signals from both the hypervisor version A and the hypervisor version B.","Although not shown, in some embodiments, the hardware resources and\/or software resources of the data center  can include one or more levels of infrastructure. For example, in some embodiments, the hardware resources of the data center  can include storage devices, host devices, access switches, aggregation devices, routers, interface components, cables, and\/or so forth. Although the specifics are not shown in , the host devices  can be included in and\/or integrally connected to the infrastructure of the data center . For example, the data center  can be configured so that the host devices  can be in communication with (e.g., coupled to) a layer of access switches that are in communication with (e.g., coupled to) a layer of aggregation devices. The aggregation devices can function as gateway devices into a set of routers\/switches that function as core switching elements of the data center . The host devices  can be configured to communicate with one another via at least a portion of the infrastructure of the data center .","In some embodiments, the data center  can also include software resources, for example, management modules (such as management module ), operating systems, hypervisors (such as hypervisors A, B, and C), and\/or so forth. The software resources can be configured to enable use of the hardware resources of the data center  in a particular fashion. For example, the hypervisors can be configured to facilitate (or enable) virtualization of hardware resources of a host device(s). The operating systems can be installed at hardware resources such as routers, aggregation devices, routers, core switching elements, and\/or forth so that other software can function at these hardware resources in a desirable fashion.","In some embodiments, the data center  can be a cloud computing environment where the hardware resources and\/or software resources are shared by multiple virtual resources associated with one or more users (e.g., clients, customers). In other words, the hardware resources (e.g., host devices, access switches, aggregation devices, core switching elements) and\/or software resources (e.g., operating systems, hypervisors) can collectively define a virtualized environment within which the virtual resources (such as virtual resources ) can operate. In some embodiments, the virtualized environment defined by the data center  can be referred to as a data center virtualized environment. More details related to a virtualized environment are described in co-pending patent application having attorney docket no. VITU-001\/00US 311331-2001, filed on same date, entitled, \u201cMethods and Apparatus for Movement of Virtual Resources within a Data Center Environment,\u201d and co-pending patent application having attorney docket no. VITU-003\/00US 311331-2003, filed on same date, entitled, \u201cMethods and Apparatus Related to Unit-Based Virtual Resources within a Data Center Environment,\u201d both of which are incorporated herein by reference in their entireties.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 2","FIG. 2"],"b":["220","250","228","228","220","250","220","240"]},"For example, hypervisor Q interface component can be configured to translate (e.g., reformat, recast) one or more signals produced by hypervisor Q so that the signal can be processed (e.g., processed in a compatible fashion) at one or more of the management components . Similarly, the hypervisor Q interface component can be configured to translate one or more signals produced by one or more of the management components  into a signal that can be processed be processed (e.g., processed in a compatible fashion) at hypervisor Q. In some embodiments, the hypervisor Q interface component can be configured to translate a signal from a first protocol compatible with the hypervisor Q to a signal compatible with one or more of the management components , and vice versa. In sum, the hypervisor interface module  can be configured to handle (e.g., translate) signaling between the hypervisors  and the management components  so that the differences in hypervisor platforms are transparent (or substantially transparent) to the hypervisors  and the management components .","In some embodiments, the hypervisor interface module  (e.g., a hypervisor interface component from the hypervisor interface module ) can be configured to facilitate communication based on one or more application programming interfaces (APIs). For example, the hypervisor interface module  can be configured to handle signaling between the management components  and the hypervisors  based on an API associated with one or more of the management components  and an API associated with one or more of the hypervisors . Specifically, the hypervisor interface module  can be configured to translate a signal based on an API associated with the management components  into a signal based on an API associated with the hypervisors .","In some embodiments, one or more of the functions of the hypervisor interface module  can be implemented as a plug-in module to the hypervisors . For example, the translation functionality of the hypervisor R interface component can be an individually compiled (or interpretable) module that can be plugged into the hypervisor R. In other words, the one or more portions of the hypervisor R interface component can be complied before being associated with hypervisor R. The pluggable functionality of the hypervisor R interface component can be implemented using, for example, a run-time environment and\/or an application framework such as a Microsoft .NET framework and\/or an object oriented programming language such as C++ or an interpreted programming language such as Java. In some embodiments, the plug-in module can be an uncompiled module. In some embodiments, the functionality of the hypervisor interface module  can be configured to execute in a device separate from the management module  and host devices where the hypervisors  can be installed. In some embodiments, the hypervisor interface modules  can be configured to operate in one or more stand-alone devices.","In some embodiments, the hypervisor interface module  can be updated when, for example, a new hypervisor is introduced into a data center. For example, the hypervisor interface module  can be updated to include a new hypervisor interface component (or new version of a hypervisor interface component) associated with a hypervisor not previously associated with (e.g., installed within) a data center. Because the hypervisor interface module  can be updated, the management functions  can continue operation (e.g., continue operation in an uninterrupted fashion) without being modified (or substantially without being modified). In other words, the operation of the management functions  related to virtual resources associated with other hypervisor platforms can seamlessly continue even with the introduction of the new hypervisor platform. When the new hypervisor platform is activated, the management module  can be configured to being management functions related to virtual resources associated with the new hypervisor platform. In some embodiments, the hypervisor interface module  can be configured so that such updates can be made during run-time of the management module  (without terminating or pausing the operation of the management module ). Similarly, hypervisor interface components that are obsolete can be removed from the hypervisor interface module .","In some embodiments, the hypervisor interface module  can be configured to detect (using a detection module (not shown)) that a signal is produced by a particular hypervisor (from the hypervisors ) and can be configured to trigger (e.g., invoke) the appropriate hypervisor interface component of the hypervisor interface module  to handle the signal. For example, the hypervisor interface module  can be configured to receive a signal from hypervisor R and can be configured to detect that the signal is from hypervisor R based on, for example, a protocol and\/or format of the signal based at least in part on a hypervisor platform of the hypervisor R. Accordingly, the hypervisor interface module  can be configured to send (or direct) the signal to the hypervisor R interface component so that the hypervisor R interface component can process the signal for use by, for example, one or more of the management components .","In some embodiments, the hypervisor interface module  can be configured to invoke (or trigger) one or more of the hypervisor interface components to handle one or more signals produced at one or more of the management components . For example, the hypervisor interface module  can be configured to receive a signal from provisioning module . The hypervisor interface module  can be configured to determine, for example, based on the contents of the signal and\/or another indicator accompanying the signal, that the signal is directed to a virtual resource (not shown) associated with hypervisor S. Accordingly, the hypervisor interface module  can be configured to send (or direct) the signal to the hypervisor S interface component so that the hypervisor S interface component can process the signal so that it can be used by, for example, hypervisor S.","As shown in , the management components  include a disaster recovery module , an onboard module , a provisioning module , a reporting module , and a security module . The management components  shown in  are presented by way of example. Accordingly, the management components  can include different management components  than those shown in . For example, the management components  of the management module  can exclude some of the management components  shown in  and\/or can include additional management components (not shown). For example, the management components  can include a cost module (not shown) configured to handle cost calculations related to a data center.","The disaster recovery module  can be configured to handle recovery of a virtual resource of a data center in response to a failure of a hardware resource (e.g., a host device) operating the virtual resource. For example, the disaster recovery module  can be configured to manage a failover process (e.g., a storage failover process) and a failback process (e.g., a storage failback process). In some embodiments, the disaster recovery module  can be configured to implement an orderly shutdown of a device during failover, register virtual resources after failover, and\/or manage a workflow related to disaster recovery. The hypervisor interface module  can be configured to, for example, translate signaling between the disaster recovery module  and the hypervisors  so that disaster recovery related to virtual resources of the hypervisors  can be performed.","More specifically, the disaster recovery module  can be configured to determine that a hardware resource (e.g., server device) at which the virtual resource is hosted is experiencing a partial or complete failure. For example, the disaster recovery module  can receive a first signal from a hardware resource at which the hypervisor Q is hosted, indicating an imminent failure thereof. This first signal can optionally be received in response to one or more user input signals, indicating the failure of the hardware resource and\/or a reallocation of virtual and\/or hardware resources per user input and\/or instruction.","In some embodiments, the first signal can be formatted in accordance with a first hypervisor platform of the hypervisor Q. In some embodiments, the disaster recovery module  can receive the first signal via the hypervisor Q interface component of the hypervisor interface module  of the management module . In such embodiments, the hypervisor Q interface component can be configured to translate the received first signal from the format of the hypervisor Q into a format that can be discerned and\/or processed by the disaster recovery module .","In response to the received signal, the disaster recovery module  can define and send a second signal to a second hardware resource (e.g., server device), such as a hardware resource hosting the hypervisor R. By sending the second signal via the hypervisor R interface component, the disaster recovery module  can ensure compatibility of the second signal with the hypervisor R. In some embodiments, the second signal can include one or more instructions configured to cause the hypervisor R to define a new virtual resource, such as a copy of the virtual resource configured to be compatible with the format and\/or hypervisor platform of the hypervisor R. In this manner, the disaster recovery module  can replace a first (e.g., imminently failing) virtual resource operating at a first hypervisor according to a first hypervisor platform by defining a functional copy of the virtual resource operating at a second hypervisor according to a second hypervisor platform.","In some embodiments, the disaster recovery module  can be further configured to send one or more additional signals to the copy of the hypervisor operating at the hypervisor R (via the hypervisor R interface component). The one or more signals can optionally include, for example, one or more instructions configured to trigger and\/or invoke one or more functions, subroutines, methods, and\/or other modules to perform a specified function or functions. In some embodiments, the copy of the virtual resource can be a copy of a virtual machine, and the one or more signals can include setting, state and\/or environment information sufficient to cause an application executing within the copy of the virtual machine to have a desired state. The desired state can be, for example, a same state as that of an initial version of that application formerly executing at an initial copy of the virtual machine at the first hardware resource prior to the above-described translation\/transplant process.","The one or more signals can alternatively include one or more management instructions for the virtual resource, such as a \u201cplay\u201d (i.e., execute), pause, unpause, or other command configured to cause the virtual machine to execute, pause, and\/or recommence execution. As described above, each of the one or more signals can be formatted according to a second format of the second hypervisor platform, such that the second virtual resource (e.g., copy of a virtual machine) can interpret and\/or process the one or more signals. The onboard module  can be configured to facilitate migration of one or more portions of a source (e.g., a legacy physical device, a legacy application) to a data center (e.g., a cloud computing data center environment). Migration can include the process of converting one or more functions of the source into a virtual resource (e.g., a virtual machine) that can emulate (or replicate) the source and that can be executed within the data center. The onboard module  engine can be configured to facilitate (e.g., implement) various portions of the migration process, which can include, for example, an assessment phase, a conversion phase, a quarantine phase, a management phase, and\/or so forth. In some embodiments, the onboard module  can be referred to as an onboard engine. The hypervisor interface module  can be configured to facilitate signaling related to, for example, conversion of a source into virtual resources and\/or quarantine of the virtual resources at host devices where the hypervisors  are executing. More details related to an onboard module are described in co-pending patent application having attorney docket no. VITU-002\/00US 311331-2002, filed on same date, entitled, \u201cMethods and Apparatus Related to Migration of Customer Resources to Virtual Resources within a Data Center Environment,\u201d which is incorporated herein by reference in its entirety.","The provisioning module  can be configured to provision the virtual resources at host devices where the hypervisors Q, R, and\/or S may be executing. The hypervisor interface module  can be configured to facilitate signaling (e.g., exchange of configuration profiles) between the provisioning module  and the hypervisors , for example, as related to provisioning of virtual resources associated with each of the hypervisors . More specifically, the provisioning module  can send one or more signals to any virtual resource executing at any of the host devices where the hypervisors Q, R, and\/or S may be executing. The one or more signals can be sent such that the recipient hypervisor causes one or more new virtual resources to be defined and\/or provisioned at that host device. In some embodiments, such a signal can be sent in response to a user command, input or directive and\/or in response to one or more resource constraints or optimization algorithms associated with the management module  and\/or the host devices. In some embodiments, such a signal can be sent in response to a failure of a host device and\/or virtual resource, so as to preserve a functioning copy of that virtual resource (as described above).","The reporting module  can be configured to define one or more alerts (e.g., error alerts) that can be sent to a user (e.g., a customer, a network administrator) (not shown) via a user interface (not shown). For example, the reporting module  can be configured to send a message related to a status of a disaster recovery process and\/or a message related to a failure of a virtual resource. Status messages from virtual resources that are transmitted via the hypervisors  can be translated by the hypervisor interface module  so that they can be processed by the reporting module .","The security module  can be configured to handle security functions related to the data center such as authentication of new virtual resources, security protocols, firewalls, and\/or so forth. The hypervisor interface module  can be configured to translate signals exchanged between the security module  and the hypervisors  so that, for example, authentication of new virtual resources associated with the hypervisors  can be performed.","In some embodiments, one or more portions of the management module  (e.g., the hypervisor interface module  of the management module ) can be (or can include) a hardware-based module (e.g., an application-specific integrated circuit (ASIC), a digital signal processor (DSP), a field programmable gate array (FPGA)) and\/or a software-based module (e.g., a module of computer code, a set of processor-readable instructions that can be executed at a processor). Although not shown, in some embodiments, the management module  can include one or more memory portions (e.g., a random access memory (RAM) portion, a shift register, a cache) that can be used during operation of one or more functions of the management module . In some embodiments, one or more of the functions associated with the management module  can be included in different modules and\/or combined into one or more modules.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 3","FIG. 3","FIG. 1"],"b":"120"},"As shown in , a platform of a hypervisor that has been activated at a host device is determined at a hypervisor interface module, at . In some embodiments, the hypervisor can be activated (e.g., installed) at the host device in place of another hypervisor that has been deactivated (e.g., uninstalled). In some embodiments, the hypervisor can be a more recent version of the same hypervisor.","In some embodiments, the platform of the hypervisor can be determined based on analysis of a signal produced by the hypervisor. In some embodiments, the hypervisor can be configured to announce its activation to, for example, a management module (e.g., the hypervisor interface module of the management module). In some embodiments, a hypervisor interface module can be configured to query the hypervisor about the platform of the hypervisor. The hypervisor can be configured to respond to the query with details (e.g., APIs) about the hypervisor platform.","A hypervisor interface component can be selected from a library of hypervisor interface components based on the platform of the hypervisor, at . In some embodiments, a hypervisor interface component configured to handle signaling related to the platform of the hypervisor in a desirable fashion (according to a set of criteria) can be selected. Specifically, the hypervisor interface module can be configured to select a hypervisor interface component from the library of hypervisor interface components that is capable of handling signaling related to the platform of the hypervisor according to a criteria (or set of criteria). In some embodiments, the hypervisor interface module can be configured to store in a memory information (e.g., a database of information) related to the capabilities (e.g., translation capabilities, processing capabilities, processing speed, efficiency) of each of the hypervisor interface components. Based on this information the hypervisor interface module can be configured to select one or more of the hypervisor interface components to handle signaling related to the platform of the hypervisor.","In some embodiments, the hypervisor interface module can be configured to select a hypervisor interface component from a library of hypervisor interface components based the type of signaling from the hypervisor. For example, a particular hypervisor interface component can be selected from a set of hypervisor interface components capable of processing a signal because the particular hypervisor interface component can process the signal in a particular fashion (e.g., at a particular time, according to a user preference).","In some embodiments, the hypervisor interface component can be selected based on a user preference. For example, the hypervisor interface module can be configured to select a hypervisor interface component from a library of hypervisor interface components based on a user preference that a particular type of hypervisor interface component be used to handle signaling associated with the hypervisor platform. In some embodiments, one or more of the hypervisor interface components can be selected based on a default preference or default selection criteria.","In some embodiments, a hypervisor interface component can be configured to handle signaling related to multiple hypervisor platforms that may be incompatible with one another. In some embodiments, multiple hypervisor interface components can be selected and used to handle signaling from a single hypervisor platform. For example, in some embodiments, a first hypervisor interface component can be selected and used to handle a first signal (or portion thereof) from a hypervisor based on a platform. A second hypervisor interface component can be selected and used to handle another portion of the first signal and\/or a second signal (or a portion thereof) from the hypervisor (or another hypervisor) based on the platform.","Signaling related to the hypervisor is handled based on the platform of the hypervisor, at . In some embodiments, the signaling, which can include data, function calls, and\/or so forth, can be translated by the hypervisor interface module. In some embodiments, a signal produced by a management module (e.g., a management component of the management module) can be sent to the hypervisor after being translated by the hypervisor interface module into a signal based on the platform of the hypervisor. In some embodiments, a signal produced by a hypervisor, and based on the platform of the hypervisor, can be sent to a management module (e.g., a management component of the management module) after being translated by the hypervisor interface module into a signal that can be processed by the management module.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 4","FIG. 4"],"b":"400"},"An indicator that the virtual resource has moved from the first hypervisor environment to a second hypervisor environment is received, at . In some embodiments, the indicator can be received in response to a query to, for example, the virtual resource, the first hypervisor of the first hypervisor environment, and\/or first hypervisor of the second hypervisor environment. The query can be defined by and can be sent from the hypervisor interface module. In some embodiments, the indicator can be sent (to a hypervisor interface module) from, for example, the virtual resource, the first hypervisor of the first hypervisor environment, and\/or the second hypervisor of the second hypervisor environment.","The management function can be performed for the virtual resource when the virtual resource is executing within the second hypervisor environment, at . In some embodiments, signaling related to the management function can be translated by a hypervisor interface component associated with the second hypervisor environment.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 5","FIG. 1"],"b":["540","550","580","540","555","540","580","100"]},"Although not shown, in some embodiments, the management module  can be configured to execute on multiple processors and\/or use multiple memory components. In some embodiments, the processor  can include a memory (e.g., a level-1 (L1) cache) (not shown). In such instances, the memory  (also can be referred to as a memory component) can be optionally included in the processing device .","Some embodiments described herein relate to a computer storage product with a computer-readable medium (also can be referred to as a processor-readable medium) having instructions or computer code thereon for performing various computer-implemented operations. The media and computer code (also can be referred to as code) may be those designed and constructed for the specific purpose or purposes. Examples of computer-readable media include, but are not limited to: magnetic storage media such as hard disks, floppy disks, and magnetic tape; optical storage media such as Compact Disc\/Digital Video Discs (CD\/DVDs), Compact Disc-Read Only Memories (CD-ROMs), and holographic devices; magneto-optical storage media such as optical disks; carrier wave signal processing modules; and hardware devices that are specially configured to store and execute program code, such as Application-Specific Integrated Circuits (ASICs), Programmable Logic Devices (PLDs), and Read-Only Memory (ROM) and Random-Access Memory (RAM) devices.","Examples of computer code include, but are not limited to, micro-code or micro-instructions, machine instructions, such as produced by a compiler, code used to produce a web service, and files containing higher-level instructions that are executed by a computer using an interpreter. For example, embodiments may be implemented using, for example, a run-time environment and\/or an application framework such as a Microsoft .NET framework and\/or Java, C++, or other programming languages (e.g., object-oriented programming languages) and\/or development tools. Additional examples of computer code include, but are not limited to, control signals, encrypted code, and compressed code.","While various embodiments have been described above, it should be understood that they have been presented by way of example only, not limitation, and various changes in form and details may be made. Any portion of the apparatus and\/or methods described herein may be combined in any combination, except mutually exclusive combinations. The embodiments described herein can include various combinations and\/or sub-combinations of the functions, components and\/or features of the different embodiments described."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
