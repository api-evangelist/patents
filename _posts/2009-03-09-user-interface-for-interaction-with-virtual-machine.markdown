---
title: User interface for interaction with virtual machine
abstract: Systems, methods, and computer program products are described that provide a user interface to a user of a first operating system to enable the user to interact with a second operating system executing in a virtual machine. If the first and second operating systems are in communication in accordance with an operating system remote terminal (OSRT) protocol, such as Remote Desktop Protocol, a first user interface is provided as the user interface. If the first and second operating systems are not in communication in accordance with the OSRT protocol, a second user interface is provided as the user interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09286088&OS=09286088&RS=09286088
owner: Microsoft Technology Licensing, LLC
number: 09286088
owner_city: Redmond
owner_country: US
publication_date: 20090309
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION","I. Introduction","II. Techniques for Providing a User Interface","III. Example Computer System Implementation","IV. Conclusion"],"p":["1. Field of the Invention","The present invention generally relates to virtual machines. In particular, the present invention is related to techniques for providing a user interface for interacting with an operating system executing in a virtual machine.","2. Background","An operating system traditionally consumes substantially all of the resources of a physical computer on which it executes. However, a software-implemented virtual machine may be also executed on the physical computer to enable a user of the physical computer to execute a second operating system in the context of the virtual machine. The first operating system, which operates independently from the virtual machine, provides a user interface that enables the user to interact with the second operating system. The virtual machine buffers pixels generated by the second operating system and transfers the pixels to the interface for display as video output to the user.","User interfaces for interacting with a virtual machine traditionally provide hardware-based operational capabilities for interfacing to the second operating system, but not software-based operational capabilities (referred to herein as \u201cenhanced features\u201d) that might be enabled by modern operating systems. Example hardware-based operational capabilities include enabling the user to view video output of the virtual machine, enabling the user to provide mouse or keyboard input to the virtual machine, enabling the user to play audio output of the virtual machine, etc. Example software-based operational capabilities include sharing clipboard data among the first and second operating systems, providing user verification support to the second operating system, redirecting a drive volume or smart card functionality of the physical computer to the virtual machine, etc.","Systems, methods, and computer program products are described herein for providing a user interface to a user of a first operating system to enable the user to interact with a second operating system executing in a virtual machine. One example system includes a user device and a virtual machine. The user device is configured to execute a first operating system. The virtual machine is configured to execute a second operating system. The user device includes user interface logic configured to execute within the context of the first operating system and to provide a user interface for enabling a user of the first operating system to interact with the second operating system. The user interface logic is configured to provide a first user interface as the user interface when the first operating system and the second operating system are in communication in accordance with an operating system remote terminal (OSRT) protocol. An OSRT protocol is a communication protocol that enables a user of one operating system to interact with a second operating system through the use of a \u201cterminal client\u201d program running in the context of the first operating system and a \u201cterminal server\u201d program running in the context of the second operating system. The user interface logic is configured to provide a second user interface as the user interface when the first operating system and the second operating system are not in communication in accordance with the OSRT protocol.","In an example method, a first user interface is provided when a first operating system and a second operating system are in communication in accordance with an OSRT protocol. A second user interface is provided when the first operating system and the second operating system are not in communication in accordance with the OSRT protocol.","An example computer program product includes a computer-readable medium having computer program logic recorded thereon for enabling a processor-based system to provide a user interface to a user of a first operating system. The user interface is for interacting with a second operating system executing in a virtual machine. The computer program product includes first and second program logic modules. The first program logic module is for enabling the processor-based system to provide a first user interface when the first operating system and the second operating system are in communication in accordance with an OSRT protocol. The second program logic module is for enabling the processor-based system to provide a second user interface when the first operating system and the second operating system are not in communication in accordance with the OSRT protocol.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter. Moreover, it is noted that the invention is not limited to the specific embodiments described in the Detailed Description and\/or other sections of this document. Such embodiments are presented herein for illustrative purposes only. Additional embodiments will be apparent to persons skilled in the relevant art(s) based on the teachings contained herein.","The features and advantages of the present invention will become more apparent from the detailed description set forth below when taken in conjunction with the drawings, in which like reference characters identify corresponding elements throughout. In the drawings, like reference numbers generally indicate identical, functionally similar, and\/or structurally similar elements. The drawing in which an element first appears is indicated by the leftmost digit(s) in the corresponding reference number.","The following detailed description refers to the accompanying drawings that illustrate exemplary embodiments of the present invention. However, the scope of the present invention is not limited to these embodiments, but is instead defined by the appended claims. Thus, embodiments beyond those shown in the accompanying drawings, such as modified versions of the illustrated embodiments, may nevertheless be encompassed by the present invention.","References in the specification to \u201cone embodiment,\u201d \u201can embodiment,\u201d \u201can example embodiment,\u201d or the like, indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Furthermore, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the art to implement such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.","Embodiments of the present invention provide a user interface to a user of a first operating system to enable the user to interact with a second operating system executing in a virtual machine. One method for providing the user interface will now be described with reference to flowchart  of . The method is described herein by way of example and is not intended to be limiting.","As shown in , the method of flowchart  begins at step  in which a determination is made as to whether the first operating system and the second operating system are in communication in accordance with an operating system remote terminal (OSRT) protocol. As used herein, the term OSRT protocol is defined to mean a communication protocol that enables a user of one operating system to interact with a second operating system through the use of a \u201cterminal client\u201d program running in the context of the first operating system and a \u201cterminal server\u201d program running in the context of the second operating system. Example OSRT protocols include but are not limited to Remote Desktop Protocol (RDP) developed by Microsoft Corporation, Apple Remote Desktop (ARD) developed by Apple Inc., Citrix Independent Computing Architecture (ICA) developed by Citrix Systems, Inc., Remote Framebuffer (RFB) developed by Olivetti Research Laboratory (ORL) and maintained by RealVNC Ltd., the protocol used in pcAnywhere developed by Symantec Corporation, etc. It will be recognized that any suitable OSRT protocol may be utilized for implementing embodiments of the present invention.","If the first and second operating systems are in communication in accordance with an OSRT protocol, a first user interface by which the user of the first operating system may interact with the second operating system is provided to the user at step . The first user interface provides certain software-based operational capabilities that are premised on communication in accordance with the OSRT protocol between the first operating system and software that runs within the context of the second operating system. Examples of the software-based operational capabilities may include but are not limited to sharing folder(s) and\/or clipboard data among the first and second operating systems, providing user verification support to the second operating system, redirecting a drive volume or smart card functionality of the physical computer to the virtual machine, etc. One or more of the software-based operational capabilities may be based on the redirection of input to and\/or output from drivers (e.g., a graphics driver, a keyboard driver, a mouse driver, etc.) running in the context of the second operating system.","However, if the first and second operating systems are not in communication in accordance with the OSRT protocol, a second user interface by which the user of the first operating system may interact with the virtual machine is provided to the user at step . The second user interface provides the user with certain hardware-based operational capabilities for interacting with the virtual machine. The hardware-based operational capabilities are based on communication between the first operating system and at least one emulated hardware component of the virtual machine. Examples of such hardware-based operational capabilities include but are not limited to enabling the user to view video output of the virtual machine, enabling the user to provide mouse or keyboard input to the virtual machine, enabling the user to play audio output of the virtual machine, etc.","The second user interface may be capable of operating regardless of whether the second operating system is installed or executing in the virtual machine. For instance, the second user interface may enable the user to diagnose the cause of a termination of communication between the first and second operating systems even if the second operating system fails (i.e., crashes).","In accordance with the foregoing, the first user interface may be thought of as providing an \u201cenhanced mode\u201d of operation in that it provides capabilities beyond those provided by the second user interface; whereas, the second user interface may be thought of as providing a \u201cbasic mode\u201d of operation in that it provides relatively limited capabilities, which are available regardless of the existence or status of the second operating system.","Providing the first user interface may include automatically switching from providing the second user interface to providing the first user interface in response to detecting that OSRT communication between the first and second operating systems is established. Providing the second user interface may include automatically switching from providing the first user interface to providing the second user interface in response to detecting a termination of the OSRT communication between the first and second operating systems. Embodiments may enable a user to manually switch between the first and second user interfaces.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2","b":["200","200","100","100"]},"Referring to , processing system  includes a first operating system , a second operating system , and a virtual machine . First operating system  includes user interface logic  for generating a user interface that enables a user of first operating system  to interact with second operating system . User interface logic  includes communication determination module , first interface module , second interface module , switch module , and OSRT functionality module .","Communication determination module  is configured to determine whether first operating system  and second operating system  are in communication in accordance with the OSRT protocol. First interface module  is configured to provide the first user interface as the user interface when first operating system  and second operating system  are in communication in accordance with the OSRT protocol. Second interface module  is configured to provide the second user interface as the user interface when first operating system  and second operating system  are not in communication in accordance with the OSRT protocol.","OSRT functionality module  is configured to support the software-based operational capabilities of the first user interface by maintaining an OSRT connection between first operating system  and second operating system  in accordance with the OSRT protocol.","First interface module  is configured to provide a user of first operating system  with a first user interface that includes software-based operational capabilities supported by OSRT functionality module . Second interface module , on the other hand, is configured to provide the user of first operating system  with a second user interface that includes the hardware-based operational capabilities supported by communication between second interface module  and software running within virtual machine . Communication between second interface module  and software running within virtual machine  may be carried out using an application programming interface (API), such as ActiveX, though the scope of the embodiments is not limited in this respect. Persons skilled in the relevant art(s) will recognize that any suitable protocol may be used for facilitating communication between second interface module  and software running within virtual machine .","Communication determination module  may be configured to monitor the status of communication between first and second operating systems , . For instance, communication determination module  may be configured to detect when OSRT communication between first and second operating systems ,  is established and\/or terminated. If communication determination module  detects that OSRT communication between first and second operating systems ,  is terminated while first interface module  is providing the first user interface, communication determination module  provides a termination indicator to switch module . Upon receiving the termination indicator, switch module  provides an instruction to second interface module , instructing second interface module  to provide the second user interface. Switch module  may further provide a notification to first interface module , so that first interface module  does not attempt to provide the software-based capabilities of the first user interface to the user while OSRT communication between first and second operating systems ,  is terminated.","If communication determination module  detects that communication in accordance with the OSRT protocol between first and second operating systems ,  is established while second interface module  is providing the second user interface, communication determination module  provides an establishment indicator to switch module . Upon receiving the establishment indicator, switch module  provides an instruction to first interface module , instructing first interface module  to provide the first user interface.","The first and\/or second interface module ,  may be configured to enable the user to manually switch between the first and second user interfaces. For instance, each of the first and second user interfaces may be configured to include a \u201cCancel\u201d button or other interface element that the user may select to switch to the other user interface. Switch module  may be configured to provide an instruction to the first or second interface module ,  in response to receiving a command from the user. For example, the user may provide a first command to switch from using the first user interface to using the second user interface, in which case switch module  provides an instruction to second interface module  to provide the second user interface. In this example, switch module  may provide a notification to first interface module , so that first interface module  does not attempt to provide the software-based capabilities of second operating system  to the user. In another example, the user may provide a second command to switch from using the second user interface to using the first user interface, in which case switch module  provides an instruction to first interface module  to provide the first user interface.","Software  runs in the context of second operating system  that facilitates the provision of the software-based operational capabilities of the first user interface. Software  is shown in  to include redirection drivers , though the scope of the present invention is not limited in this respect. Like conventional drivers, redirection drivers  operate to convert hardware-agnostic function calls from computer programs running within the context of second operating system  to hardware-specific commands so that such computer programs can interact with specific hardware devices (e.g., video hardware, a keyboard, a mouse, etc.). However, unlike conventional drivers, redirection drivers  are configured to direct the hardware-specific commands to hardware devices associated with first operating system  rather than to the emulated hardware devices associated with second operating system . One or more of the software-based operational capabilities of the first user interface may be provided based on this redirection.","Second operating system  executes in virtual machine , which includes a plurality of hardware component emulators. As shown in , virtual machine  includes a video hardware (HW) emulator , a keyboard emulator , and a mouse emulator  for emulating respective video hardware, keyboard, and mouse components of virtual machine . Persons skilled in the relevant art(s) will recognize that virtual machine  may include hardware emulators for emulating other hardware components of virtual machine  in addition to emulators , , and . For instance, virtual machine may include an emulator for emulating a keypad, touchpad, stylus, audio hardware, or any other hardware component that enables the user to provide information to and\/or receive information from virtual machine .","Video HW emulator  includes a video buffer  for storing pixels that are generated by second operating system  and for transferring the pixels to second interface module  for display as video output to the user. Video buffer  may transfer the pixels to second interface module  using an application programming interface (API) control, such as an ActiveX control, though the scope of the embodiments is not limited in this respect.","All of the elements of processing system  may be incorporated into a single processing device (e.g., a single computer). Alternatively, the elements may be distributed among a plurality of processing devices. For instance, processing system  may be a computer network including first and second processing devices. The first processing device may execute first operating system . The second processing device may execute second operating system  and virtual machine .",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 3","FIG. 2","FIG. 4"],"b":["300","202","202","202","300"]},"As shown in , the method of flowchart  begins at step  in which OSRT enablement determination module  of communication determination module \u2032 determines whether communication in accordance with the OSRT protocol is enabled in first operating system \u2032. For example, first operating system \u2032 may be configured to disable OSRT communication functionality with respect to first operating system \u2032. If OSRT communication is not enabled in first operating system \u2032, second interface module  provides the second user interface at step . If OSRT communication is enabled in first operating system \u2032, however, flow continues to step  in which OSRT availability determination module  determines whether communication in accordance with the OSRT protocol is available with respect to second operating system .","It will be recognized that OSRT communication is available in second operating system when second operating system  is properly configured to support OSRT communication. For instance, OSRT availability determination module  may check one or more configuration settings of second operating system  to determine whether second operating system  is properly configured to support OSRT communication. If OSRT communication is not available in second operating system , second interface module  provides the second user interface at step . However, if OSRT communication is available in second operating system , flow continues to step  in which OSRT connection determination module  determines whether a connection in accordance with the OSRT protocol has been established between first and second operating systems \u2032, .","If an OSRT connection has been established between first and second operating systems \u2032, , flow continues to step . Otherwise, OSRT functionality module  establishes an OSRT connection at step . During this process, OSRT functionality module  may generate a startup screen for display to the user, showing a progress indicator to indicate the progress made toward establishing the OSRT connection. The startup screen may include a \u201cCancel\u201d button or other interface element that the user may click to cancel the establishment of the OSRT connection. OSRT functionality module  determines whether establishment of the OSRT connection has been canceled at step . The establishment of the OSRT connection may be canceled in any of a variety of ways, such as when the time necessary for establishing an OSRT connection exceeds a threshold, when the user clicks on the \u201cCancel\u201d button in the startup screen, etc.","If the connection is canceled, second interface module  provides the second user interface at step . If the connection is not canceled, however, OSRT connection determination module  again determines whether a connection in accordance with the OSRT protocol has been established between first and second operating systems \u2032, . If an OSRT connection has not been established between first and second operating systems \u2032, , flow returns to step . Otherwise, flow continues to step .","Logon module  determines whether second operating system  is configured for automatic logon. If second operating system  is configured for automatic logon, first interface module  provides the first user interface at step . However, if second operating system  is not configured for automatic logon, logon module  requests the credentials of the user at step .","Logon module  determines whether the credentials supplied by the user are valid at step . If the credentials are not valid, second interface module  provides the second user interface at step . However, if the credentials are valid, first interface module  provides the first user interface at step .",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 5","FIG. 2","FIG. 6"],"b":["500","202","202","202","500"]},"As shown in , the method of flowchart  begins at step  in which first interface module  provides the first user interface. At step , sleep detection module  of communication determination module \u2033 determines whether a sleep operation has been performed with respect to virtual machine . A sleep operation causes virtual machine  to become inactive, thereby suspending OSRT communication between first and second operating systems \u2033, . If a sleep operation has not been performed with respect to virtual machine , flow continues to step .","However, if a sleep operation has been performed with respect to virtual machine , sleep module  grays out the last video output of video hardware emulator  within virtual machine  at step . At step , sleep module  determines whether a request to resume the OSRT communication between first and second operating systems \u2033,  is received. For example, the interface provided to the user may include a \u201cResume\u201d button or other interface element, which the user may select to request that the OSRT communication between first and second operating systems \u2033,  is resumed. If a resume request is not received, flow returns to step . Otherwise, flow returns to step  in which first interface module  again provides the first user interface.","At step , shutdown\/restart detection module  determines whether a shutdown operation or a restart operation has been performed with respect to virtual machine . If neither a shutdown operation nor a restart operation has been performed with respect to virtual machine , flow continues to step . However, if a shutdown operation or a restart operation has been performed with respect to virtual machine , switch module  causes the second user interface to be provided in lieu of the first user interface at step . For instance, switch module  may provide an instruction to second interface module , instructing second interface module  to provide the second user interface. In an alternate implementation, a view may be presented to the user that displays an indication of the shutdown\/restart process. Switch module  may further provide a notification to first interface module , so that first interface module  does not attempt to provide the software-based capabilities of the first user interface.","At step , unexpected termination detection module  determines whether an unexpected termination of the OSRT communication between first and second operating systems \u2033,  has occurred. If an unexpected termination of the OSRT communication has not occurred, flow returns to step  in which first interface module  continues to provide the first user interface.","However, if an unexpected termination of the OSRT communication has occurred, OSRT functionality module  attempts to re-establish communication in accordance with the OSRT protocol at step . OSRT functionality module  determines whether OSRT communication is re-established at block . If OSRT communication is re-established, flow returns to step  in which first interface module  continues to provide the first user interface. If OSRT communication is not re-established, however, switch module  causes the second user interface to be provided in lieu of the first user interface at step .","Embodiments described herein have a variety of benefits, as compared to conventional processing systems that are capable of providing a user interface for interacting with a virtual machine. For example, embodiments may advantageously enable a user of first operating system  to take advantage of software-based operational capabilities for interacting with second operating system  when first operating system  and second operating system  are in communication in accordance with an OSRT protocol, while enabling the user to interact with virtual machine  when OSRT communication between first and second operating systems ,  fails to be established or terminates. For instance, the user may be provided the capability of diagnosing the cause of the failure or termination. Moreover, the user may be provided the capability to interact with second operating system  during boot up of virtual machine .","Embodiments may automatically switch from providing a first user interface to providing a second user interface when a termination of an OSRT communication is detected. Embodiments may automatically switch from providing the second user interface to providing the first user interface when establishment of an OSRT connection is detected. The user may be provided the capability to manually switch between the first and second user interfaces.","The embodiments described herein, including systems, methods\/processes, and\/or apparatuses, may be implemented using well known servers\/computers, such as computer  shown in . For example, elements of example processing system , including first operating system  depicted in , , and , second processing system  depicted in , virtual machine  depicted in , and each of the steps of flowcharts , , and  depicted in respective , , and , can each be implemented using one or more computers .","Computer  can be any commercially available and well known computer capable of performing the functions described herein, such as computers available from International Business Machines, Apple, Sun, HP, Dell, Cray, etc. Computer  may be any type of computer, including a desktop computer, a server, etc.","As shown in , computer  includes one or more processors (e.g., central processing units (CPUs)), such as processor . Processor  is connected to a communication infrastructure , such as a communication bus. In some embodiments, processor  can simultaneously operate multiple computing threads. Processor  may be configured to execute any one or more of first operating system , second operating system , and\/or virtual machine , for example.","Computer  also includes a primary or main memory , such as a random access memory (RAM). Main memory has stored therein control logic A (computer software), and data.","Computer  also includes one or more secondary storage devices . Secondary storage devices  include, for example, a hard disk drive  and\/or a removable storage device or drive , as well as other types of storage devices, such as memory cards and memory sticks. For instance, computer  may include an industry standard interface, such as a universal serial bus (USB) interface for interfacing with devices such as a memory stick. Removable storage drive  represents a floppy disk drive, a magnetic tape drive, a compact disk drive, an optical storage device, tape backup, etc.","Removable storage drive  interacts with a removable storage unit . Removable storage unit  includes a computer useable or readable storage medium  having stored therein computer software B (control logic) and\/or data. Removable storage unit  represents a floppy disk, magnetic tape, compact disc (CD), digital versatile disc (DVD), Blue-ray disc, optical storage disk, memory stick, memory card, or any other computer data storage device. Removable storage drive  reads from and\/or writes to removable storage unit  in a well known manner.","Computer  also includes input\/output\/display devices , such as monitors, keyboards, pointing devices, etc.","Computer  further includes a communication or network interface . Communication interface  enables computer  to communicate with remote devices. For example, communication interface  allows computer  to communicate over communication networks or mediums  (representing a form of a computer useable or readable medium), such as local area networks (LANs), wide area networks (WANs), the Internet, etc. Network interface  may interface with remote sites or networks via wired or wireless connections. Examples of communication interface  include but are not limited to a modem, a network interface card (e.g., an Ethernet card), a communication port, a Personal Computer Memory Card International Association (PCMCIA) card, etc.","Control logic C may be transmitted to and from computer  via the communication medium .","Any apparatus or manufacture comprising a computer useable or readable medium having control logic (software) stored therein is referred to herein as a computer program product or program storage device. This includes, but is not limited to, computer , main memory , secondary storage devices , and removable storage unit . Such computer program products, having control logic stored therein that, when executed by one or more data processing devices, cause such data processing devices to operate as described herein, represent embodiments of the invention.","For example, each of the elements of example processing system , including first operating system  depicted in , , and  and its sub-elements, second processing system  depicted in , virtual machine  depicted in , and each of the steps of flowcharts , , and  depicted in respective , , and  can be implemented as control logic that may be stored on a computer useable medium or computer readable medium, which can be executed by one or more processors to operate as described herein.","The invention can be put into practice using software, hardware, and\/or operating system implementations other than those described herein. Any software, hardware, and operating system implementations suitable for performing the functions described herein can be used.","While various embodiments of the present invention have been described above, it should be understood that they have been presented by way of example only, and not limitation. It will be apparent to persons skilled in the relevant art(s) that various changes in form and details can be made therein without departing from the spirit and scope of the invention. Thus, the breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS\/FIGURES","p":["The accompanying drawings, which are incorporated herein and form part of the specification, illustrate the present invention and, together with the description, further serve to explain the principles of the invention and to enable a person skilled in the relevant art(s) to make and use the invention.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIGS. 4 and 6","FIG. 2"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
