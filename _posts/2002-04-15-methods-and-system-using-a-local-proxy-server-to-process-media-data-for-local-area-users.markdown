---
title: Methods and system using a local proxy server to process media data for local area users
abstract: Methods and system are disclosed to minimize inefficiencies for local area users to share and access data. A local proxy server operates in conjunction with a central server. Local area users can post or store (“store”) data, e.g., media data, on the local proxy server in order for the data to be accessed locally. The local proxy server can also store the data from the local area users on a central server. Additionally, the local proxy server can copy data being stored on the central server for local access by the local area users. In this manner, local area users can utilize the benefits (e.g., higher bandwidth and faster download speed) of storing and accessing media data to and from a local area source (i.e., the local proxy server).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07668901&OS=07668901&RS=07668901
owner: Avid Technology, Inc.
number: 07668901
owner_city: Tewksbury
owner_country: US
publication_date: 20020415
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATION","FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Exemplary System Configuration","Exemplary Computer System","Project","Media Application","Object and Media Flow","Storing Media Data on Local Proxy Server","Downloading Media Data by Local Area User","Downloading Media Data by Non-Local Area User","Selectively Enabling Local Proxy Server"],"p":["This application is related to U.S. patent application Ser. No. 10\/123,332 entitled, \u201cMETHODS AND SYSTEM USING SECONDARY STORAGE TO STORE MEDIA DATA ACCESSIBLE FOR LOCAL AREA USERS,\u201d filed on Apr. 15, 2002. The disclosure of this application is hereby expressly incorporated by reference.","This invention relates generally to data sharing systems and, more particularly, to methods and system using a local proxy server to process media data for local area users.","Data sharing capabilities have increased tremendously with the popularity of wide area networks (WANs) such as the Internet. For example, disparate users in different countries or continents can share large amounts of shared data. Shared data may include multimedia data, audio data, and\/or video data, typically in the form of large data files. Data sharing applications are commonly used to store or \u201cpost\u201d shared data on a central server connected to the Internet for access by other users. Thus, a user can access the posted data via the central server.","One type of data sharing application is a \u201ccollaboration application.\u201d A collaboration application allows multiple users to work together on the same project from remote locations. For example, users in California and New York can work on the same project via the Internet through a collaboration application. Typically, in a collaboration application, a user \u201cposts\u201d or stores data for the project on the central server connected to the Internet. Other users connected to the Internet can then request the posted data from the central server. The central server processes these requests to provide the users with posted data for collaboration purposes.","This configuration is suitable for users in remote locations. However, one limitation with such a configuration is that it is inefficient for multiple users collaborating on a project from the same local area, e.g., users on a local area network (LAN). Often, communicating with a central server can be slow. For example, if the central server is experiencing a high volume of traffic, the central server will be slow in delivering requested data to LAN users. Low bandwidth connections to the central server can exacerbate the situation. Thus, requiring local area users to download data from only a central server inefficiently uses network resources when the data may already exist locally. Furthermore, multiple local area users collaborating on a project using such a configuration can result in data being downloaded multiple times, causing further inefficient use of local area resources.","There exists, therefore, a need to allow local area users a fast and efficient manner of accessing posted data.","Methods and system consistent with the invention, as embodied and broadly described herein, allow local area users to store and access data to and from a local proxy server.","Consistent with the invention, one method is disclosed for implementing collaboration between a plurality of users operating a media application for processing media data. The users are interconnected via a first network and connected to a second network. The second network includes a central server and the first network includes a selectively enabled local proxy server. The method comprises determining if the local proxy server is enabled. Media data is stored on the local proxy server and stored on the on the central server by the local proxy server if the local proxy server is enabled.","Consistent with the invention, another method is disclosed for implementing collaboration between a plurality of users operating a media application for processing media data. Each user has access to a central server and to at least one selectively enabled local proxy server. Each local proxy server is accessible to only a subset of the users. The method comprises determining if the local proxy server is enabled. The media data is stored on the local proxy server and stored on the central server by the local proxy server if the local proxy server is enabled.","Consistent with the invention, another method is disclosed for implementing collaboration between a plurality of users operating a media application for processing media data. Each user has access to a central server and to at least one selectively enabled local proxy server. The method comprises determining if the local proxy server is enabled. If the local proxy server is enabled, the media data is stored on the local proxy server. The media data includes an identifier. The media data with the identifier is stored on the central server by the local proxy server.","Consistent with the invention, another method is disclosed for implementing collaboration between a plurality of users on a network operating a media application for processing media data. Each user has access to a central server. The method comprises connecting a local proxy server to the network. The local proxy server is selectively enabled. At least one user is configured to recognize the enabled local proxy server and to post media data for the media application on at least one of the central server and the enabled local proxy server.","Reference will now be made in detail to implementations of the invention, examples of which are illustrated in the accompanying drawings. Wherever possible, the same reference numbers will be used throughout the drawings to refer to the same or like parts.","The following implementations use a local proxy server to minimize inefficiencies for local area users to share and access data. The local proxy server operates in conjunction with a central server. Local area users can post or store data, e.g., media data, on the local proxy server in order for the data to be accessed locally. The local proxy server can also store the data from the local area users on a central server. Additionally, the local proxy server can copy or download data being stored on the central server for local access by the local area users. In this manner, local area users can utilize the benefits (e.g., higher bandwidth and faster download speed) of storing and accessing media data to and from a local area source (i.e., the local proxy server).",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 1","b":["100","100","130","135","140","190","190","130","135","140","110","120","160","160","190","130","140","150","150","110","110","130","140"]},"LAN users - and user  (\u201cWAN user \u201d) can share data via WAN  and LAN . For example, LAN users - and WAN user  can share data by collaborating on a project including project data. Project data may comprise media data and object data. Media data is a component of a project and object data is \u201cmeta data\u201d associated with a component or element of media data. Object data may embody a change to media data within a project. Examples of media data include digital audio and\/or video data, MIDI data, text data, or large data files. Further details of media data and object data are described in .","The central server , LAN users - and WAN user , and local proxy server  will now be described. Central server  is a computing system that can communicate with LAN users -, WAN user , local proxy server , and any other devices connected to WAN . Examples of such a computing system include Apple\u00ae Power Macintoshes or Intel\u00ae Pentium-based personal computers running a version of the Windows\u00ae operating system.","Central server  may include client\/server software and\/or hardware for implementing collaboration between LAN users - and WAN user . For example, central server  can store, manage, and distribute media data and object data in a project database to facilitate collaboration between users - and WAN user  on the same project using techniques described in U.S. Pat. No. 6,598,074 (\u201cthe '074 patent\u201d) entitled \u201cSYSTEM AND METHOD FOR ENABLING MULTIMEDIA PRODUCTION COLLABORATION OVER A NETWORK,\u201d which was issued Jul. 22, 2003, and is assigned to the same assignee of this application.","Attached to central server  is a storage device (\u201cproject data storage \u201d) storing project data including media data (\u201cmedia data \u201d). Central server  can store other types of project data including object data in project data storage . In one implementation, central server  stores and manages media data and object data in a project database within project data storage . Examples of project data storage  include a hard disk, compact disc read\/write (CD R\/W) drives, tape drives, random access memory (RAM), or other like memory devices. Although one storage device is shown, any number of project data storage devices may be attached to central server .","To facilitate collaboration between users, central server  handles authentication tasks. For example, central server  can control which users (including local proxy server ) are able to access or post project data (i.e., media data and object data) for a particular project. Central server  also provides notifications to users of available project data. For example, central server  can notify LAN users - and WAN user  (if all are collaborating on the same project) of posted media data and object data related to the project. Central server  can also notify local proxy server  of posted media data and object data. Central server  can notify these users or devices using techniques described in the '074 patent noted above. These users can thus request the media data or object data from central server  after being notified. Accordingly, central server  can provide media data and object data \u201con demand\u201d or upon request by a user.","Central server  can also handle download requests of project data from LAN users -, WAN user , and local proxy server . Central server  can send status updates to these users or devices regarding a status of a download request or if project data is being stored on central server . For example, if requested project data has not been completely stored or posted central server , central server  can send status updates to the users or devices connected via WAN . Although central server  is shown connected to WAN  outside of LAN , central server  can be located within LAN  to facilitate collaboration from within LAN .","Referring to , central server  stores media data from LAN users - or WAN user  as media data  in media storage . Central server  can receive media data  from LAN users - through local proxy server . For example, LAN users -, when posting media data, can store media data on local proxy server . Local proxy server  can then store the media data for the users on central server  as media data . Alternatively, LAN users - can send media data directly to central server . The same process can be implemented for other types of data, e.g., object data.","LAN users - and WAN user  are computing systems, which may include the same type of computing system as central server . LAN users - and WAN user  include a media application  for sharing data. The users can use media application  to share data by collaborating on a project using media data and object data. For example, LAN users - and WAN user  can \u201clog in\u201d to central server  and navigate to a session regarding a project and collaborate on the project with other users using media application . Central server  may include one or more applications to communicate with media application .","Examples of media application  include Logic Audio from Emagic Inc. of Grass Valley, Calif. Cubase\u2122 from Steinberg Soft-und Hardware GmbH of Hamburg, Germany; or ProTools\u2122 from Digidesign\u2122, Inc. of Palo Alto, Calif. Media application  may also be implemented as a client\/server type application capable of sharing data with other users. Further details of the operation of media application  are described in .","Media application  can operate with one or more functions, procedures, routines, or application program interfaces (APIs) that allow media application  to collaborate, e.g., on a project, with other users and applications. For example, the collaboration system of Rocket Network, Inc. of San Francisco, Calif. can be implemented as an application program interface (API) to media application  in order for LAN users - and WAN user  users to collaborate on a project over WAN . This collaboration system can be based on the system described in the '074 patent noted above.","In one implementation, such a collaboration system is configured to communicate with a server application  operating within local proxy server . The collaboration system within LAN users - and WAN user  can be configured to recognize central server  and\/or local proxy server  when sending or receiving project data as described below.","Within LAN , LAN users - can store media data (e.g., media data ) on local proxy server  and store object data on central server . Alternatively, LAN users - can store both media data and object data on either central server  or local proxy server . If LAN users - post media data or object data on local proxy server , local proxy server  can forward or store the project data from the users on central server . Additionally, local proxy server  can copy or download media data or object being stored on central server . In this manner, LAN users - can copy project data being stored on central server  from local proxy server , thereby accessing project data locally, e.g., on LAN .","Local proxy server  is a computing system, which may include the same computing system as central server , LAN user -, or WAN user . Attached to local proxy server  is a local storage . Local proxy server  can provide a shared storage system for LAN users - using local storage . Local proxy server  can store project data (e.g. media data ISO) in local storage  for LAN users -, or, alternatively, any user connected to LAN  via one or more networks. The project data can be stored as one or more data files. Other users, e.g., WAN user  may also access data in local storage  from local proxy server .","Local storage  may represent a database storage system having one or more storage devices, a stand-alone storage device providing shared data access for LAN users -, or other appropriate shared storage systems or devices. Alternatively, storage devices contained within local proxy server  may operate as a shared stored device. Local proxy server  can provide standard network data file sharing capabilities or read\/write capabilities to files stored in local storage .","Local proxy server  can be selectively enabled for each individual LAN user - to permit storing and downloading of project data including media data  or object data (not shown) from local storage  using the methods described below. For example, an API operating with media application  can be configured to recognize local proxy server  and to send and receive project data from local proxy server .","Local proxy server  includes a server application , which can communicate with media application  to handle requests for media data or object data from LAN users - or store media data or object on central server  for the LAN users -. Server application  can be software operating within local proxy server  to handle communications between central server  and LAN users -. Server application  can maintain storage of media data (\u201cmedia data \u201d) or object data (not shown) in local storage  as one or more data files for access by LAN users -. Proxy server application  may also be used to transfer such data files to LAN users - or other users. Proxy server application  can be used to identify, organize, and reference data files in local storage .","Proxy server application  provides download status information to LAN users - if requested data files are being downloaded from central server . Proxy server application  can determine the location of data files being stored in local storage  using the same identifiers for data files generated by LAN users -. Proxy server application  can also maintain a connection or session with central server  for LAN users -. In one implementation, local proxy server , using proxy server application , can download project data, data files, or other types of data for LAN users - even if any of the users are not in a direct connection or session with a project maintained by central server .","Proxy server application  provides download status information to LAN users - if requested data files are being downloaded from central server . Proxy server application  can determine the location of data files being stored in local storage  use the same identifiers for data files generated by LAN users -. Proxy server application  can also maintain a connection or session with central server  for LAN users -. In one implementation, local proxy server , using proxy server application , can download project data, data files, or other types of data for LAN users - even if any of the users are not in a direct connection or session with a project maintained by central server .","Local proxy server  may also be accessible to central server  and WAN user . For example, central server  or WAN user  may store and download project data to and from local proxy server . Local proxy server  may operate with applications to identify, organize, and reference posted media data  for LAN users - or other users (e.g., WAN user ). Local proxy server  may store media data  or other types of data (e.g., object data) in a compressed or uncompressed format and provide password protection for media data  or other types of data. In one example, LAN users - must logon to local proxy server  to access media data .","WAN  may be the Internet or a proprietary network. LAN  may be an Ethernet, Token Ring, ARCNET, fiber distributed data interface (FDDI) local area network, or other appropriate local area networks. Although not shown in , additional network devices may be connected to WAN  such as, for example, network routers, switches, hubs, or gateways. System configuration  is thus suitable for communicating data on LAN  and WAN  using standard local and wide area communication protocols.","The process of collaborating on a project by LAN users - and WAN user  will now be described. LAN users - and WAN user  logon onto a project via central server . To make contributions to the project, WAN user  can store project data on central server  and LAN users - can store project data on local proxy server , if enabled; otherwise to central server . If enabled, local proxy server  stores project data received from LAN users - on central server . In this manner, LAN users - only store project data once on local proxy server . Additionally, because project data is stored on local proxy server , project data can be accessed locally by LAN users -. Central server , IAN users -, WAN user , and local proxy server  can send and receive project data using techniques described in the '074 patent noted above.","To make a change to a project, e.g., to make a change to media data within the project, LAN users - and WAN user  can send object data embodying the change to central server . Central server  can distribute the object data to users or clients (including local proxy server ) collaborating on the same project. LAN users - can also send object data to local proxy server , which can forward the object data from LAN users - to central server . Additionally, central server  can send object data to local proxy server , which can forward the object data from central server  to LAN users -.","To download project data, LAN users - and WAN user  can request project data from central server  directly. LAN users - can also request project data from local proxy server . If local proxy server  does not contain the requested project data, local proxy server  can request it from central server  and then distribute it to LAN users -. Local proxy server  can also mirror or store project data being stored on central server  by maintaining an active connection with central server .","Thus, in the example of , because media data  or other data can be mirrored or stored on local proxy server , LAN users - are capable of accessing media data  within LAN . Additionally, if, e.g., media data  is not stored in local storage , local proxy server  can request the data from central server  to make it accessible to LAN users -. As such, the fast high-bandwidth qualities of a LAN are utilized for LAN users -.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","130","140","120","110","150","200","170"]},"Computer system  includes several components all interconnected via a system bus . An example of system bus  is a bi-directional system bus having thirty-two data and address lines for accessing a memory  and a cache memory  and for transferring data among the components. Alternatively, multiplexed data\/address lines may be used instead of separate data and address lines. Examples of memory  and cache memory  include a random access memory (RAM), read-only memory (ROM), video memory, flash memory, or other appropriate memory devices. Additional memory devices may be included in computer system  such as, for example, fixed and removable media (including magnetic, optical, or magnetic optical storage media). These types of media may also operate as cache memory.","Computing system  may communicate with other computing systems (e.g., central server  or WAN user ) via a network interface . Examples of network interface  include Ethernet or dial-up telephone connections. Computer system  contains a central processing unit (CPU) , examples of which include the Pentium\u00ae family of microprocessors manufactured by Intel\u00ae Corporation. However, any other suitable microprocessor, micro-, mini-, or mainframe type processor may be used for computer system . CPU  provides the support for storing and downloading media data and is configured to carry out the methods described below.","Memory  may store instructions or code for implementing a program (e.g., media application ) and an application programming interface (API) (e.g., local proxy server API  as shown in ). CPU  may execute instructions for media application  and local proxy server API  to perform the methods described herein. Cache memory  may store media data (or data files) for storing or downloading to and from central server  and\/or local proxy server . Cache memory  may store other types of data, e.g., object data as shown in , to allow LAN users - to collaborate on a project. Computer system  may also receive input via input\/output (I\/O) devices . Examples of I\/O devices  include a keyboard, pointing device, or other appropriate input devices. I\/O devices  may also represent external storage devices or computing systems or subsystems. Computer system  may also present information (e.g., media data or user interfaces as described in ) via a display .",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 3","b":["300","300","110","185","130","140","120","300","130","140"]},"Referring to , project  includes sets , , , and  of object data tied to sets ,  and  of media data. In particular, sets  and  of object data are associated with set  of media data; set  of object data is associated set  of media data; and set  of object data is associated with set  of media data. Project  may also include a set  of other data, e.g., this may contain a list of all users collaborating on project .","Sets , , and  of media data are components of project  in which user modifications or changes can be made. Sets , , , and  of object data are \u201cmeta data\u201d associated with sets , , and  of media data. Object data may represent a change or modification of an element of media data. For example, a change or modification to set  of media data can be embodied in sets  and  of object data.","Referring back to , to collaborate on project  between LAN users -, LAN user  can post set  of media data on local proxy server  and sets  and  of object data on central server . Local proxy server  can store set  of media data on local storage  and on central server  thereby allowing set  of media data to be accessible locally for LAN users  and . Central server  notifies LAN users  and  of the posted set  of media data and sets  and  of object data. LAN users  and  can thus download set  of posted media data from local proxy server  and sets  and  of object data from central server . Alternatively, sets  and  of object data can also be posted and downloaded to and from local proxy server .",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 4","b":["170","130","140","120","170","193","193","193","170","193","170","290","110","150","193","170","290","300","170"]},"API  can be configured or programmed to implement the methods described below. For example, the collaboration system of Rocket Network, Inc. can be implemented as API  and be configured or programmed to selectively enable local proxy server  for use by LAN users - using the techniques described in . In one implementation, local proxy server  can be selectively enabled for use by LAN users by configuring or programming API  to recognize and to post\/download media data and\/or object data to and from local proxy server .","To post media data, API  can send media data stored in media cache  to central server  or local proxy server . To download posted media data, API  can copy posted media from central server  or local proxy server  and store the data in media cache . The above process can be implemented for object data.","To communicate with central server  or local proxy server , API  may use a File Transfer Protocol (FTP) or other standard file sharing protocols to transfer and access media data to and from central server  or local proxy server . API  can be seamlessly integrated into media application  such that media application  is unaware that media data is being stored or downloaded from local proxy server .","API  may perform other types of functions. For example, API  may determine whether posted media data  is stored on local proxy server  and access it from local proxy server  if requested by media application . If API  determines that posted media data  is not stored on local proxy server , API  may download posted media data  from central server . API  can also determine if media data (or data files) cached or stored in media cache  is stored on local proxy server . Additionally, API  may provide interfaces (e.g., as shown in ) for a user to configure preferences for local proxy server , to display media data, to provide a status of the storing or downloading process.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 5","b":["130","140","130","140","120","300","150","110","110","130","140"]},"Referring to , LAN users - store or post media (\u201cmedia data\u201d) on local proxy server . In this manner, media data being stored or posted by LAN users - can be accessed locally on LAN  via local proxy server . Local proxy server  stores or posts media data from LAN users - on central server . LAN users - can avoid posting or storing media data directly to central server  by using local proxy server . Local proxy server  can also copy or mirror media data being stored on central server . For example, if WAN user  posts or stores media data for a project on central server , local proxy server  can copy the media data being posted by WAN user . In this manner, posted media data by WAN user  can be accessed locally by LAN users - instead of downloading the media data from central server .","To make changes to a project, LAN users - or WAN user  can store or post object data to central server . As described previously, object data can embody a specific change to media data. Alternatively, LAN users - can also post or store object data to local proxy server , which stores or posts the object data to central server  for the local area users. Local proxy server  can also copy or mirror object data being stored on central server  for access by LAN users -. LAN users - and WAN user  can also access object data from central server .","The following flow diagrams detail methods for storing media data on local proxy server . The following methods can be implemented for storing or mirroring other types of data on local proxy server  including object data, text data, image data, graphical data, binary data, compressed data, rendered data, or any combination of the above data.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 6","b":"150"},"After the process begins, a check is made to determine if local proxy server  is enabled (stage ). This check can be made to determine if a local proxy server is present on LAN . LAN users - or any other local area user can enable local proxy server  connected in LAN  by using interfaces such as those shown in . If local proxy server  is not enabled, media data is stored or posted on central server  (stage ).","If local proxy server  is enabled, the media data is stored or posted on local proxy server  (stage ). For example, a LAN user can determine if local proxy server  is enabled within LAN , and, if enabled, store media data on local proxy server . A user can queue media data to be stored on local proxy server . The user can also inform central server  and local proxy server  when it is done storing media data.","Local proxy server  then stores or posts the media data on central server  (). Local proxy server  can queue media data to be stored on central server . Local proxy server  can inform central server  when it is done storing media data on it.","Local proxy server  is thus responsible for storing or posting the media data to central server  for LAN users -. Local proxy server  can also copy or download media data being stored or posted on central server  by other users connected on WAN . Local proxy server  can operate behind the scenes of the collaboration between LAN users - and WAN user  to copy data being stored on central server . For example, media data  being stored on central server  can be mirrored on local proxy server  for access by LAN users - via LAN .",{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 7","b":"150"},"After the process begins, a unique identifier (ID) or file name is generated for media data (stage ). Examples of a unique identifier may include a globally unique ID (GUID) identifying a version or attribute of the media data. By using a GUID, media data on local proxy server  can be differentiated. Alternatively, a unique ID can be generated for groups of media data, e.g., by a common project. That is, folders can be created to store common media data and only a unique folder name is required.","In one implementation, if a standard filing system (such as UNIX) is used to organize and store the media data, attributes such as: \u201cFile Creator\u201d, \u201cUser Name\u201d, \u201cFile Creation Time\u201d, and \u201cOriginal File Name\u201d can be used. With these attributes, a unique file name or ID can be generated concatenating the Creator User Account Name, the File Creation Time and the Original File Name. (e.g. Matt1-123456789456123-datafile1.doc). This ensures that the name of each media data will be unique. By using such an ID generating process, an exemplary folder hierarchy is shown below.","Parent Directory (root directory on the local proxy server)","Project1 (folder)\n\n","Project2 (folder)\n\n","Project3 (folder) . . . .","As shown in the above example, each folder name (e.g., Project1 to Project3) is unique and media data name within the folder is unique. After a unique ID is generated for the media data, the media data is posted on local proxy server  with its unique ID (stage ). While the media data is being posted or stored, an indication can be provided to LAN users - that posting of the media data has not yet been completely posted. After the media data is completely posted on local proxy server , a completion signal is generated (stage ). This completion signal notifies other LAN users - that the media data has been completely posted or stored on local proxy server  and is ready for downloading.","By using the completion signal, a user can avoid downloading an incomplete copy of media data. The completion signal can be indicated, e.g., by appending \u201c.cmpit\u201d to the unique ID for the media data, storing an indication in a database record, or checking the media data size on local proxy server  with the required file size for the media data. Other examples of the completion signal include local proxy server  broadcasting a signal that the media data has been successfully posted. The completion signal may also be based on media data attributes.","The following flow diagrams detail methods for downloading media data from local proxy server . The following methods describe using a completion signal to ensure that stored media data is completely downloaded. The following methods can be implemented for downloading other types of data including object data, text data, image data, graphical data, binary data, compressed data, rendered data, or any combination of the above data.",{"@attributes":{"id":"p-0086","num":"0089"},"figref":"FIG. 8","b":"150"},"Initially, a LAN user is requesting media data to be downloaded. A check is made to determine if local proxy server  is enabled (stage ). If local proxy server  is not enabled, the requested media data is downloaded from central server  (stage ). If local proxy server  is enabled, a unique ID for the media data is generated as described in  (stage ). This stage is optional if the unique ID has been previously generated. The unique ID can be generated for the media data before implementing this method.","A check is then made to determine if the media data having the unique ID is stored on local proxy server  (stage ). If no media data having the unique ID is stored on local proxy server , the media data is downloaded from central server  (stage ). If the media data having the unique ID is stored on local proxy server , a check is made to determine if there is a completion signal for the media data (stage ). If there is no completion signal, the media data is downloaded from central server  (stage ). If there is a completion signal, the media data is downloaded from local proxy server  (stage ). The media data can then be stored in a cache media  within one of the LAN users - or other storage devices.",{"@attributes":{"id":"p-0089","num":"0092"},"figref":"FIG. 9","b":"150"},"Initially, a LAN user is requesting media data to be downloaded. A check is made to determine if local proxy server  is enabled (stage ). If local proxy server  is not enabled, the requested media data is downloaded from central server  (stage ). If local proxy server  is enabled, a unique ID for the media data is generated as described in  (stage ). This stage is optional if the unique ID has been previously generated. The unique ID can be generated for the media data before implementing this method.","A check is then made to determine if the media data having the unique ID is stored on local proxy server  (stage ). If no media data having the unique ID is stored on local proxy server  and local proxy server  is enabled, the media data is copied from central server  by local proxy server  (stage ). That is, local proxy server  downloads the requested media data with the unique ID from central server . From stage , the process continues to stage  to wait for a completion signal.","If media data having the unique ID is stored on local proxy server , a check is made to determine if there is a completion signal (stage ). If there is no completion signal, the process waits until a completion signal is generated or found (stage ). The completion signal indicates that the media data is completely stored on local proxy server . Alternatively, during stage , a streaming process can be implemented to download segments of the requested media data as soon as the segments become available on local proxy server .","A user may receive status updates regarding the requested media data. For example, the user may receive an update that the requested media data is currently being stored on local proxy server  and local proxy server  will inform the user when the media data is completely stored using a completion signal.","Once the completion signal is found, the media data is downloaded from local proxy server  (stage ). The above method can be modified such that the media data is downloaded from local proxy server  within a predetermined time period. The downloaded media data can then be stored in a cache media  within one of the LAN users - or other storage devices.",{"@attributes":{"id":"p-0095","num":"0098"},"figref":"FIG. 10","b":"110"},"Initially, a user (not accessible to a local proxy server) is requesting media data to be downloaded from central server . A check is made to determine if the requested media data is on central server  (stage ). If the requested media data is on central server , the requested media data is downloaded from central server  (stage ). If the requested media data is not on central server , the user waits until the requested data is on central server  (stage ). For instance, a local proxy server may be in the process of storing or posting the media data to central server .","During this wait process, the user may receive status updates regarding the progress of the requested media data. Alternatively, during this stage, a streaming process can be implemented to download segments of the requested media data as soon as the segments become available on central server . Once the requested media is on central server  (which can be indicated by a completion signal), the requested media data is downloaded from central server  (stage ).",{"@attributes":{"id":"p-0098","num":"0101"},"figref":"FIGS. 11-14","b":["1110","1210","1310","1410","170","193","130","140","150"]},"Referring to , user interface  depicts a local proxy server (or mirror settings) dialog interface for selectively enabling local proxy server . User interface  includes a plurality of inputs  through  allowing a user to configure settings for posting or downloading media data. Media application  can provide a menu option or an access button to initiate user interface .","At interface , a user can input \u201cServer URL\u201d, \u201cPathname\u201d, \u201cUsername\u201d, and \u201cPassword\u201d information at inputs , , , and . A window  can display sessions or projects assigned to the user. When posting or receiving media data for a session for the first time, user interface  presents an options window  allowing a user to choose one of the following: \u201cAsk Me What to Do\u201d, \u201cDon't Mirror\u201d, or \u201cAssign To:\u201d. If the \u201cAsk Me What to DO\u201d option is selected, a help type window is displayed informing the user of options that can be selected for user interface . If the \u201cDon't Mirror\u201d option is selected, local proxy server  is not enabled and media data is posted directly on central server .","If \u201cAssign To:\u201d option is selected, a drop down menu is provided that allows a user to choose one of the following options: \u201cAdd Configuration\u201d, \u201cRemove Session\u201d, \u201cRename Configuration\u201d, \u201cDelete Configuration\u201d, or \u201cSave Configuration\u201d. If the \u201cAdd Configuration\u201d option is selected, interface , as shown in , is provided to the user. The user can then add a name at input  for the new configuration to be created. If the \u201cRemove Session\u201d option is selected, a list of session names is provided in which the user can select to have removed from interface . If the \u201cRename Configuration\u201d, \u201cDelete Configuration\u201d, and \u201cSave Configuration\u201d options are selected, an interface is provided to allow the user to perform the corresponding function. With the above options, a user can configure settings to copy and download media from local proxy server .","Referring to , user interface  depicts a select configuration dialog for creating or loading a session. A user can assign or select a session using input . An \u201cEdit Local Proxy Server Settings\u201d option  is provided for a user. If a user selects option , the user can change or edit the local proxy server settings for the selected session as shown by interface  of . Referring to , user interface  is provided if there is an error in communicating with local proxy server . For example, window  can display a message such as \u201cCannot communicate with Local Proxy Server. Edit your settings and select OK.\u201d Thus, user interface  provides a \u201cEdit Cache Mirror Settings\u201d option  or \u201cDon't Use Local Proxy Server\u201d option  for a user to select. The user can select option  to change settings to correct the error or can select option  to avoid communicating with local proxy server .","The above implementations can have many variations without departing from the spirit and scope of the invention. For example, the above methods can be modified to post media data and object data to only local proxy server  and media data or data file ID information is passed to central server  that distributes the ID information. In this case, media data and object data are posted and downloaded to and from local proxy server . Additionally, for the above methods, different or varying versions of media data can be posted on local proxy server , e.g., media data can be posted in a compressed format or with low quality resolution.","Furthermore, although aspects of the invention are described in which programs, application, modules, functions, routines, or sub-routines are stored in memory, such memory may include computer-readable media such as, for example, hard disks, floppy disks, CD-ROMs; a carrier wave from the Internet; or other forms of RAM or ROM. Similarly, the methods of the invention may conveniently be implemented in software and\/or hardware modules that are based upon the flow diagrams of  and user interfaces shown in .","No particular programming language has been indicated for carrying out the various methods described above because it is considered that the operations, stages and procedures described herein and illustrated in the accompanying drawings are sufficiently enabling to practice the invention. Moreover, any number of computers and operating systems may be used to practice the invention. Each user of a particular computer will be aware of the language and tools which are most useful for that user's needs and purposes to practice and implement the invention. Accordingly, the scope of the present invention is defined by the appended claims rather than the foregoing description."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in, and constitute a part of the specification, illustrate implementations of the invention and, together with the detailed description, serve to explain the principles of the invention. In the drawings,",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 14"}]},"DETDESC":[{},{}]}
