---
title: Hybrid memory system with backup power source and multiple backup an restore methodology
abstract: A memory subsystem includes a volatile memory and a nonvolatile memory. A controller includes logic to interface the volatile memory to an external system, so that the volatile memory is addressable for reading and writing by the external system. The controller includes logic to back up data from the volatile memory to the nonvolatile memory upon receiving a backup signal from the external system. A power controller includes logic to detect when power from the external system fails, and when power from the external system fails, to provide backup power for long enough to enable the controller to back up data from the volatile memory to a first region of the nonvolatile memory. The controller, upon receiving the backup signal from the external system, backs up data from the volatile memory to a second region of the nonvolatile memory different that the first region used to back up data from the volatile memory to the nonvolatile memory when power from the external system fails.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08200885&OS=08200885&RS=08200885
owner: AgigA Tech Inc.
number: 08200885
owner_city: San Diego
owner_country: US
publication_date: 20090524
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["PRIORITY","TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["This application claims priority under 35 USC 120 as a continuation-in-part of U.S. application Ser. No. 11\/881,346 filed on Wednesday, Jul. 25, 2007, which is presently pending.","The present disclosure relates to hybrid memory systems including volatile and nonvolatile memory components, and to monolithic nonvolatile memories that require stored energy in a capacitor or temporary use of a battery to perform a save operation upon power loss.","There are many computing applications that may benefit from the use of fast nonvolatile memory. These include disk caches, solid-state drives, hard disk emulation, hybrid drives, and file systems.","For example, popular PC file systems based on FAT (File Allocation Tables) and NTFS (New Technology File System) have frequently-written file management data associated with the storage of the files. This is called \u201cmetadata\u201d\u2014the data that manages the file system. For a FAT32 and FAT16 based file system this is termed \u201cFAT\u201d, for a NTFS file system this is called MFT (Master File Table).","Accurate metadata is essential to the operation of the file system. File systems might save their metadata on one or multiple (for redundancy) disk files. However, the importance of the metadata, the frequency of metadata access and alteration, and the need for speed when accessing or altering metadata, make metadata well suited for storage in a nonvolatile RAM instead of slower disk files (or wear-sensitive NAND Flash devices), and\/or as a disk cache for file system operations.","A traditional block or page accessed nonvolatile RAM such as a limited endurance (Erase Write cycling) Multi Level Cell (MLC) NAND flash device may be used to store frequently accessed data. However, directly reading and writing a NAND flash device for applications involving frequent memory operations may prove slow and cumbersome, due to the non-RAM (e.g. block-sequential) access methods typically associated with such devices. The frequently-altered nature of data in such applications may cause premature memory system failure because NAND flash devices have limited erase\/write capabilities before they may wear out and become unreliable. This may result in unreliable system operation and may ultimately necessitate the replacement of the NAND flash. More frequent NAND flash replacement may greatly increase the life-cycle cost of the system.","References to \u201cone embodiment\u201d or \u201can embodiment\u201d do not necessarily refer to the same embodiment, although they may.","Unless the context clearly requires otherwise, throughout the description and the claims, the words \u201ccomprise,\u201d \u201ccomprising,\u201d and the like are to be construed in an inclusive sense as opposed to an exclusive or exhaustive sense; that is to say, in the sense of \u201cincluding, but not limited to.\u201d Words using the singular or plural number also include the plural or singular number respectively. Additionally, the words \u201cherein,\u201d \u201cabove,\u201d \u201cbelow\u201d and words of similar import, when used in this application, refer to this application as a whole and not to any particular portions of this application. When the claims use the word \u201cor\u201d in reference to a list of two or more items, that word covers all of the following interpretations of the word: any of the items in the list, all of the items in the list and any combination of the items in the list.","\u201cLogic\u201d refers to signals and\/or information that may be applied to influence the operation of a device. Software, hardware, and firmware are examples of logic. Hardware logic may be embodied in circuits. In general, logic may comprise combinations of software, hardware, and\/or firmware.","Those skilled in the art will appreciate that logic may be distributed throughout one or more devices, and\/or may be comprised of combinations of instructions in memory, processing capability, circuits, and so on. Therefore, in the interest of clarity and correctness logic may not always be distinctly illustrated in drawings of devices and systems, although it is inherently present therein.","Hybrid Memory Subsystem",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 1","b":["102","104"]},"The memory subsystem includes, but may not be limited to, SDRAM  (volatile memory), NAND FLASH  (nonvolatile memory), analog power control circuitry , power capacitor , and a system controller . Other elements and\/or couplings among the elements may be apparent to skilled practitioners in the relevant art(s).","The volatile memory in this embodiment is an SDRAM  (Synchronous Dynamic Random Access Memory). For example, the volatile memory may be DDR3 SDRAM (double-data-rate three synchronous dynamic random access memory). Other types of volatile random access memory may also be used. The nonvolatile memory in this embodiment is a NAND FLASH , and again, other types of nonvolatile memory may be used.","The analog power control circuitry  interfaces the memory subsystem to an external power source, typically the power source of a larger system that incorporates and uses the hybrid memory subsystem. For example, the external power source may be the power of personal or business computer system that incorporates the memory subsystem.","The analog power control circuitry  also interfaces the memory subsystem to a backup power source that is local to the memory subsystem. The backup power source may be, for example, a capacitor  or small battery (or a combination of the two). In the embodiment of , a capacitor  provides power to the memory subsystem for a temporary time when external power fails. The capacitor  may provide power for long enough to copy data blocks from volatile memory  to nonvolatile memory .","In the event of an external power failure, the hybrid memory subsystem may operate as an isolated subsystem of the larger, external system. The analog power circuitry  may recognize that external system power has failed. The system controller  may then initiate backup of data currently stored in the volatile memory  into the non-volatile memory . Herein, the term \u201cbackup\u201d means that data of the volatile memory  is stored into the nonvolatile memory . Upon restoration of external system power, the system controller  may initiate restoration of backed-up data from non-volatile memory  to volatile memory . Herein, the term \u201crestore\u201d and \u201crestoration\u201d means that data of the nonvolatile memory  is stored into the volatile memory .","The system controller  may thus include logic to backup data from volatile memory  to nonvolatile memory  when the external power source fails, and to restore data from nonvolatile memory  to volatile memory  when the external power source becomes available.","Those skilled in the art will appreciate that various functional components, such as the power controller logic  and the system controller logic , and even the volatile memory  and nonvolatile memory , may in fact be implemented together as one or more integrated circuit devices, and packaged as one or more discrete physical components.","Data stored within the hybrid memory subsystem persists even when the power of the external system fails. The external system may interact with the hybrid memory subsystem as though interacting with volatile memory  (of the same or another type), even though, transparently, the data is stored internally by the memory subsystem in nonvolatile memory  persistently in the absence of external system power.","The hybrid memory system may write data to non-volatile memory  only in the event that external system power fails. Thus, the non-volatile memory  undergoes many fewer write cycles than would occur if it were being written every time data were written to the hybrid memory subsystem. When the non-volatile memory  is a low-cost, limited duty cycle NAND FLASH, the result in an extension of the useful lifetime of the non-volatile memory .","The system controller  provides a memory interface to the external system. The memory interface may comprise a standard data and control interface for some particular kind of volatile memory. For example, the system controller may provide an SDRAM data, address, and control interface to the external system. The interface provided to the external system may or may not be the interface for the type of volatile memory  actually used by the memory subsystem.","The system controller  may additionally provide an interface whereby the external system may send commands to the hybrid memory subsystem or obtain status. For example, in some embodiments the external system may command the hybrid memory subsystem to initiate a backup of data from volatile memory  to non-volatile memory , even though the system power is still available. Additionally or alternatively, the hybrid memory subsystem or external system may provide a direct user interface, such as a switch or control on a graphic user interface, whereby a user of the external system may directly initiate a copy of data from volatile  to non-volatile memory . Another action which may in some embodiments be initiated either through the system interface of the system controller , or directly by a user, is restoring data from non-volatile memory  to volatile memory . In some embodiments the external system may use its system interface to the hybrid memory controller  to initiate a self test of the hybrid memory subsystem.","Other examples and\/or embodiments of the various system components may now be apparent to skilled practitioners in the relevant art(s).","Hybrid Memory Subsystem Operation","As previously described, the system controller  may comprise logic to interface the volatile memory  to an external system, such as a personal computer system or a business computer system. Other examples of applications of the hybrid memory subsystem are embedded control applications, communications, and consumer products.","The system controller  may present an interface to the external system, so that the volatile memory  is addressable for reading and writing of data by the external system.","Logic of the power controller  may detect when power from the external system to at least one of the volatile and nonvolatile memories and to the controller fails. For example, the external system may suffer a power source outage or battery failure. When external system power fails, the power controller  may provide backup power to the volatile memory , nonvolatile memory , and to the controller  for long enough to enable the backup of data from the volatile memory  to the nonvolatile memory . The capacitor or battery power source  may act as the source of this backup power.","In some embodiments, the controller  may include logic to enable the external system to initiate a backup of data from the volatile memory  to the nonvolatile memory , instead of waiting for a power failure to initiate the backup. The controller  may also comprise logic to emulate to the external system a type of volatile memory other than a type of the volatile memory. For example, internally the memory subsystem may employ SDRAM for the volatile memory . However, the controller may include logic to emulate single data rate RAM (SDRAM), double data rate RAM (DDRAM), DDR2, asynchronous SRAM, C-F card, or PCI-Express (among other examples) to the external system.","The volatile memory , nonvolatile memory , controller , and power controller  may implemented in various ways. For example, these components may be implemented as one of a multi-chip set, a board subsystem, or even a single chip.","The embodiment shown in  shows that backups and restores of data are implemented as data moves from the volatile memory  to the nonvolatile memory , and vice versa, via the controller . In other embodiments, backups and restores may be implemented via data moves from the volatile memory  to the nonvolatile memory  directly, without passing through the controller .",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 2","b":["202","204","206","208"]},"The backup power source has been discussed in terms of one or more capacitors local to the hybrid memory subsystem. However, the backup power source, such as one or more capacitors, may also be provided by the external system.","The backup power source may be applied upon failure of external system power (i.e. the primary power source), which may involve some form of switching function from primary to backup power. Power switching functions inherently involve some latency (switching time), which may provide a vulnerability to losing all power to the memory subsystem if the switching function fails, or becomes too slow. Thus, in some embodiments power is always supplied to the hybrid memory subsystem via the backup power source. The hybrid memory subsystem may for example always draw power from one or more backup power capacitors, which in turn are continually recharged from external system power when such power is available. Upon external system power failure, the memory subsystem continues to draw power from the backup power capacitors, drawing down their voltage, while for example performing a power-down save of data in volatile memory  to nonvolatile memory .","Thus, the term \u201cexternal system power\u201d may refer to power from the external system as applied to the memory subsystem via one or more backup power sources, such as power capacitors. The term \u201cbackup power\u201d may refer to power applied to the memory subsystem via the backup power sources once power from the external system fails.","The memory subsystem is thus isolated from the external system that uses it in at least two ways. First, memory access isolation is provided by interposing the controller interface  (which may or may not be the same as the volatile memory  interface) between the memory subsystem and the external system. Second, power isolation from the main system may be provided by \u201cgating\u201d external system power through the backup power source.","Upon restoration of external system power, logic of the controller  may operate to restore data from the nonvolatile memory  to the volatile memory .",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 3","b":["302","304","306"]},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 4","FIG. 1"],"b":["104","102","104"]},"The controller  implements the interface to the non-volatile memory  internally, so that this interface is not exposed to the external system. The controller  comprises logic to drive the interactions between the volatile memory  and the non-volatile memory  in the event of failure or shutdown of external system power, and restoration of external system power.","In the embodiment of , the hybrid memory subsystem controller  provides a \u2018pass through\u2019 of data, address, and control signals from the external system to the volatile memory . This is possible when the controller  provides the external system with a volatile memory interface that is consistent with the type of volatile memory actually used internally by the hybrid memory subsystem. For example, if the interface to the external system is an SDRAM interface, and the hybrid memory subsystem uses SDRAM for volatile memory internally, the controller  may \u2018pass through\u2019 signals from the external system to the internal SDRAM. Performance benefits may be obtained from such \u2018pass through\u2019 signaling.","In the embodiment of , the hybrid memory subsystem controller  may alternately provide a \u2018re-clocking\u2019 of data, address, and control signals from the external system to the volatile memory . This is possible when the controller  provides the external system with a volatile memory interface that is consistent with the type of volatile memory actually used internally by the hybrid memory subsystem but retiming the signals by one or more clock delays. For example, if the interface to the external system is an SDRAM interface, and the hybrid memory subsystem uses SDRAM for volatile memory internally, the controller  may \u201cre-clock\u201d or re-register\u201d signals from the external system to the internal SDRAM. Alternate performance behavior may be obtained from the approach of \u2018re-clocking\u2019 signals.","In other situations, the internal volatile memory  may be of a different type than the interface provided by the controller  to the external system. In this case, the controller  may translate signals from the external system to be compatible with the type of the internal volatile memory . There may be some performance cost associated with such signal translation.","The controller  may expose additional control\/status signaling to the external system. This additional signaling may enhance and\/or modify the typical volatile memory interface exposed to the external system by the controller . The external system may or may not comprise logic to take advantage of this additional signaling.","In the illustrated exemplary embodiment, the following volatile RAM control, address, and data signals, familiar to those having skill in the art, are included to and\/or from the volatile RAM  and the system controller : SDCLK, CKE, CS#, WE#, RAS#, CAS#, DQM, DQ-D, A-Al, BA, and BA. These same signals are also included between the system controller  and the host system. The illustrated exemplary embodiment also includes the following NAND FLASH control, address, and data signals, familiar to those having skill in the art, between the NAND FLASH  and the system controller . CE#, CLE, ALE, WE#, RE#, WP#, R\/B#, and I\/O [7:0]. The following signals are also included between the system controller  and the host system: \u201cSystem Ready\u201d, indicating the memory subsystem is ready for operation, \u201cPower Fail Interrupt\u201d, indicating a failure of primary power, \u201cSAVE#\u201d, instructing the memory module to perform a SAVE (and the image number of the SAVE), \u201cSave Done\u201d, indicating completion of a SAVE, \u201cPOR\u201d, indicating a restore, and \u201cPOR#\u201d, indicating which image is restored. The illustrated exemplary embodiment also includes the following signals between the analog power control circuitry  and the system controller : \u201cdigital power supply\u201d, providing digital power, \u201cclock\u201d, a clock signal, \u201cpower good\u201d, indicating sufficient backup power for a SAVE operation, \u201cpower fail detect\u201d, indicating a failure of primary system power, \u201creserve full\u201d, indicating the backup capacitors are fully charged to their operating level, and \u201csave done\u201d, indicating completion of a SAVE operation. A flash power supply signal (either primary or backup power source) is provided from the analog power control circuitry  to the NAND FLASH . A volatile memory power supply signal is provided from the analog power control circuitry  to volatile RAM .","Capacitor Power Delivery Verification","The capacitor  or other backup power source is a crucial component for enabling reliable operation of the memory subsystem in the event of a discontinuation of external system power. Thus, it is important that the capacitor  or other backup power source always be operationally ready.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 5","b":["502","502","106","502"]},"Some embodiments may use multiple power capacitors. Using multiple power capacitors may have several benefits, including delivery of additional backup power, and redundancy for more reliable operation. For example, if one power capacitor fails, the system may still operate reliably using backup power from the other capacitors. Capacitors are typically inexpensive relative to other system components, so that these benefits may be obtained at relatively low incremental cost over using a single power capacitor.","The logic  may verify that the at least one power capacitors, e.g. capacitor , has sufficient power to enable a data backup from volatile memory  of the memory subsystem to nonvolatile memory  of the memory subsystem in the event that external system power is discontinued.","Verification of the power capability of a capacitor may be accomplished in a number of ways. One way is to time at least one of a charge and discharge rate of the capacitor using a predetermined load and voltage.  is an illustration of an embodiment of a capacitor discharge curve under a predetermined load (R) and voltage. The vertical axis of the curve is the percentage (%) of starting voltage remaining on the capacitor. The horizontal axis is the number of RC time constant intervals (RC, 2RC, 3RC, 4RC, SRC, etc.), where C is the capacitance of the capacitor(s) and R is the predetermined load. Time T represents a point on the discharge curve at which a first voltage measurement is made, and T the point at which a second voltage measurement is made. Both measurements may be made within the capacitor's operational zone during a data backup. If the rate of discharge becomes too great, it may indicate that the capacitor is of an improper value, miss-installed or has degraded and is nearing the end of its reliable life.","Another way to verify capacitor power delivery capability is to measure an ending voltage of the capacitor at an end of a data backup operation from the volatile to the nonvolatile memories, and to determine if there is a sufficient voltage margin to provide reliable data backup. Referring again to , the capacitor's voltage may be measured at T, at the end of a complete data backup from volatile memory  to nonvolatile memory . The voltage at T may represent a reference point for determining the capacitor's margin of operation. If the voltage difference between T and T provides an insufficient margin of operation, the capacitor may be ending its useful reliable life or the power load represented by the elements , ,  and  or harsh environmental conditions exceed that for which the subsystem was designed.","Yet another way to verify capacitor power delivery capability is to measure a natural oscillation frequency of the capacitor when the capacitor is re coupled to a predetermined impedance (one that includes an inductive component).  is a diagram of an embodiment of an LC (inductive-capacitive) loop circuit, i.e. an inductive RC oscillator. The inductance  may be coupled into a loop with the capacitor  for purposes of power verification. The capacitor  may discharge into the inductance , and vice-versa, creating a natural resonance frequency in the loop. This frequency may characterize the capacitance of the capacitor , which provides an indication of the capacitor's  power delivery capability.","More advanced embodiments may go further, and may include logic to measure and apply one or more of an operating temperature, operating voltage, and component age of the capacitor when performing power verification. Some embodiments may even apply prior operational behavior of the system and\/or capacitor when performing power verification.","Capacitor power verification may be performed under different circumstances. For example, verification may occur upon restoration of external system power, after such power has been discontinued or when such power is applied for the first time. This situation is illustrated in , which is a flow chart of an embodiment of capacitor power verification at system power-up.","In , external system power is applied () and capacitor power delivery capability is determined at that time (). If the capacitor has sufficient power capability (), the memory subsystem is enabled (). Otherwise, the memory subsystem is disabled (). At  the process concludes.","In other embodiments, verification may occur periodically, after a certain time interval has passed, or at certain times of the day or on certain dates. Verification may occur in response to a signal from the external system, such as a signal produced as a result of executing a diagnostic routine.","The verification logic  may signal the external system with an indication of the result of capacitor power verification. For example, the logic  may signal the external system with an indication that the memory system is fully functional, non-functional, or functional in a degraded mode of operation, according to a result of power verification of the capacitor(s). The memory subsystem may, in some cases, be placed into a degraded mode of operation if the power verification indicates that the capacitor(s) do not comprise enough power for a full data backup from volatile memory  to nonvolatile memory  in the event of a discontinuation of external system power. One example of a degraded mode of operation is a reduction in the \u2018advertised\u2019 memory capacity of the memory subsystem. For example, if the verification logic  determines that the power capacitor comprises only enough power to backup 50% of the data in volatile memory  to nonvolatile memory , the memory subsystem may indicate to the external system that it only has 50% of its fully-functional memory capacity.","In some embodiments, the verification logic  may prioritize the use of multiple capacitors for backup power according to results of power verification. For example, all else being equal capacitor  may be the primary backup power source, with other capacitors being second and tertiary sources. However, if verification indicates that capacitor  is only operational at 60% of its full power rating, the verification logic may cause one of the backup capacitors to become the primary backup power source instead, with a third capacitor being a secondary source and the capacitor  the tertiary source.","Memory Subsystem Initialization",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 9","b":["102","104","110"]},"Initialization may involve capacitor verification, described above, as well as verification of the nonvolatile memory capability.","The nonvolatile memory capability may be verified (), for example by checking that the minimum amount of usable flash blocks are in an erased state to support a power loss save operation. This may take place in embodiments where flash memory is used for the nonvolatile memory . Verification that a usable flash block is in an erased state may involve examining each erasable flash block to determine if it is \u201cdirty\u201d, i.e. has been programmed, and, if so, erasing it. A list of usable, erased flash blocks may be established ().","The presence and power delivery capability of the backup power source for the hybrid memory subsystem may also be verified (). The backup power source may be a capacitor or capacitors. Verification of the presence and power delivery capability of the backup power source helps ensure that in the event of power failure, sufficient backup power will be available to backup the data content of the volatile memory  to the nonvolatile memory . At , the initialization is complete.","Power Down Interrupt Recovery",{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 10","b":["102","104","110"]},"\u201cInterrupt Recovery Time\u201d is the time between when external system power is restored after failing, and when the memory subsystem is again available for use by the external system. To reduce the interrupt recovery time, the memory subsystem may signal the external system that it is ready for use as soon as enough nonvolatile memory  space is available to completely backup the contents of volatile memory .","If another failure of external system power occurs while the system is processing a resumption of power, the power-down save operation that was previously interrupted by the resumption of external system power may resume where it left off.","The memory subsystem may comprise logic to delay enabling use of the memory subsystem by the external system after a power down save operation of the memory subsystem is interrupted by restoration of external system power. The delay will typically be at least long enough to allow the memory subsystem to ensure that sufficient nonvolatile memory capacity of the memory subsystem is available to backup an amount of volatile memory capacity that the memory subsystem makes available (i.e. provides) to the external system.","In one embodiment, the delay is incurred while the memory subsystem erases sufficient dirty blocks of nonvolatile memory to backup the amount of volatile memory capacity that the memory subsystem provides to the external system. However, if sufficient nonvolatile memory capacity is already available to backup the amount of volatile memory capacity that the memory subsystem provides to the external system, no delay may be incurred, and the memory subsystem may indicate its substantially immediate availability to the external system.","In some embodiments, the memory subsystem may indicate to the external system that it is available for use, but may update the amount of volatile memory capacity that it makes available to the external system as more and more nonvolatile memory capacity is made available, for example by erasing nonvolatile memory blocks.","At , the memory subsystem examines whether the backup power source, in this embodiment a capacitor, has enough power to handle a complete power down operation, including backup of data from volatile memory  to nonvolatile memory . In some embodiments,  may not take place every time during power down interrupt recovery. The return of external power during a power down backup operation may result in the suspension of the backup process from volatile memory  to nonvolatile memory . In this situation, the volatile memory  continues to have power and retain its data content. It may therefore be unnecessary to continue the backup of data of the volatile memory  to nonvolatile memory  if external system power is restored before completing the backup or running out of backup power. Nonetheless, the memory subsystem may not signal the external system that it is ready for use until there is sufficient usable and erased memory capacity in the nonvolatile memory  for a complete backup of the contents of the volatile memory . Otherwise, if external system power failed again very soon after it was restored, it might create a situation in which there was not enough capacity in the nonvolatile memory  to completely backup the contents of the volatile memory , and valuable data could be lost.","An evaluation () is made of whether there is enough usable erased flash memory blocks to perform a backup of the contents of volatile memory  to non-volatile memory  in the event of a subsequent failure of external system power. The next data block is erased () until there are a sufficient number of erased and available nonvolatile memory blocks. When there are enough usable erased flash memory blocks to perform a data backup of volatile memory  to nonvolatile memory , the memory subsystem indicates that it is available for use by the external system (). This indication may take the form of a signal to the external system, or a status indication available for reading by the external system. At , the process is complete.","If the power fails at any time after one or more flash memory blocks are erased at , the interrupt recovery process is terminated and data backup resumes from volatile memory  to nonvolatile memory  for the blocks that were erased, but not necessarily for blocks that were not erased (unerased blocks remain backed up in the nonvolatile memory). Thus, the memory subsystem may include logic to erase sufficient dirty nonvolatile memory to backup the amount of volatile memory capacity that the memory subsystem provides to the external system before enabling use of the memory subsystem by the external system. In the event that external system power fails before enabling use of the memory subsystem, the memory subsystem may backup at least portions of the volatile memory having data corresponding to data erased from the nonvolatile memory.",{"@attributes":{"id":"p-0093","num":"0092"},"figref":"FIG. 11","b":"110"},"A flash memory  comprises \u201cdirty\u201d blocks , which have been programmed, and \u201cusable\u201d blocks  which are in an erased state and not otherwise impaired. In  the area between the dotted lines indicates a quantity of nonvolatile memory  needed to perform a data backup of the entire contents of the volatile memory , in the event of external system power failure. In condition A, although the nonvolatile memory  has some dirty blocks , there are more than enough usable erased blocks  to perform a data backup operation. In fact, the total flash memory capacity may often be over two times the size of the volatile memory , so in that case there will typically be enough erased blocks available to backup the volatile memory  contents in the event of external system power failure. The memory subsystem should thus be available soon after external system power up for use by the external system.","The dirty blocks and erased usable blocks are illustrated as contiguous ranges. However, such contiguous placement may not always be the case, and the process is generally the same regardless of the contiguous or noncontiguous nature of the nonvolatile memory blocks.","The nonvolatile memory  as illustrated in state B also has dirty blocks  and erased usable blocks . In this case, however, there are not enough erased and useable blocks in the nonvolatile memory  to fully backup the contents of the volatile memory . A portion  of the space needed to backup the volatile memory  is not yet available as erased blocks.","The nonvolatile memory  as illustrated in state C may have originally had the same quantity of dirty and erased flash blocks as in state B. However, the quantity  of erased blocks which were needed but unavailable in state B have now been obtained through erasure of dirty blocks in the memory . Therefore, the memory  in state C now has fewer dirty blocks and more erased blocks than it did in state B, with the result that it has enough erased usable blocks to perform a backup of the entire contents of the volatile memory . When performing an erasure of dirty blocks, it is not necessary that the blocks that are erased are done so in any particular location or order. The memory subsystem may indicate to the external system that it is ready for use once the number of useable and erased blocks is equal or greater than the amount of the volatile memory  that will be used by the external system.","Power Up Restore",{"@attributes":{"id":"p-0099","num":"0098"},"figref":"FIG. 12","b":["104","102","110"]},"Once the external system power is available (), if initialization process has not been performed (), at  initialization is commenced at ,  (GOTO ).","If the subsystem is in a properly initialized state, one flash memory page of data is restored to volatile memory (). This continues so long as more flash memory pages are available to be restored ().","When all flash memory pages containing data to be restored to volatile memory have been processed. At  the action continues at  of  (GOTO ).","If the external power fails anytime during , , or , the process may be terminated. The memory subsystem may thus include logic to eliminate a data backup from volatile memory  of the memory subsystem to nonvolatile memory  of the memory subsystem if external system power is restored before the data backup is completed.","Data from volatile memory  remains fully backed up in nonvolatile memory , and nothing more need be done in terms of backup and restore before shutting down the memory subsystem. Typically, the memory subsystem may not begin erasing blocks in nonvolatile memory  until the restore is fully performed.","Thus, the memory subsystem may include logic to restore data from the nonvolatile memory  to the volatile memory  after restoration of external system power, but before ensuring that sufficient nonvolatile memory capacity of the memory subsystem is available to backup an amount of volatile memory capacity that the memory subsystem provides to the external system. The memory subsystem may restore the data from the nonvolatile memory  to the volatile memory  after restoration of system power only if the restoration of system power did not interrupt a power down save operation.","Power Down Save",{"@attributes":{"id":"p-0107","num":"0106"},"figref":"FIGS. 13 and 14","b":["106","110","110"]},"The memory subsystem may first disable the external system's use of the memory subsystem (). This disabling of the external system is usually done with the awareness and participation of the external system such that the external system may complete any non-interruptible data operations. Once disabled, data may then be read from the volatile memory (). This data may be written to a non-volatile memory page (). The non-volatile memory page just written may now be written with data (). Non-volatile memory pages may be written in small data increments (whereas they are typically read or erased in increments of one block at a time). The amount of data read from volatile memory may not fill the non-volatile memory page, in which case more data for writing is read from volatile memory (). The non-volatile memory page is full at .","A new nonvolatile memory page programming operation may now be performed. The integrity of data not yet read from the volatile memory should be preserved for the duration of this page programming operation. For DRAM memories requiring refresh this may be accomplished by performing a burst refresh of the volatile memory based on the worst case duration of the page program time. A new non-volatile memory page is programmed at . At  processing continues at ,  (GOTO ).","If there is more data to save to nonvolatile memory and more pages of non-volatile memory to program (), volatile memory is returned from the low power mode to a fully operational state so that it may be read to obtain the unsaved data (). At  processing continues at ,  (GOTO ).","If there is not more data to save from volatile to nonvolatile memory, the memory subsystem is shut down (), and the process is complete ().","Thus, the memory subsystem may include logic to burst refresh the volatile memory  for a time at least equal to a worst-case nonvolatile page preparation time, to place the volatile memory  into a lower than fully operational power state while a new nonvolatile memory page is prepared and written, and to restore the volatile memory  to a fully operational power state after the new nonvolatile memory page is prepared and written.",{"@attributes":{"id":"p-0113","num":"0112"},"figref":"FIG. 15"},"A set of registers  or other mechanism may be employed to provide the external system with a capability to configure the volatile memory  and\/or the nonvolatile memory  of the memory subsystem. In some situations the memory subsystem may be \u201chard wired\u201d for a particular configuration.","The configuration provides that one or more portions  of the volatile memory  are supported by backup capacity  of the nonvolatile memory. The external system may read and write data from and to these portions  as if interacting with volatile memory (e.g. using a RAM data\/address protocol), but these portions  will be backed up automatically to nonvolatile memory  in the event of external system power failure. Hence, these portions  may be considered by the external system to be nonvolatile memory having the speed and usability advantages of volatile memory.","Other portions  of the volatile memory  may be used by the external system as standard volatile memory. In other words, the external system may read and write data from and to these portions  as if interacting with volatile memory (e.g. using a RAM data\/address protocol), but, like typical volatile memory, these portions  will not be backed up automatically to nonvolatile memory  in the event of external system power failure.","Other portions  of nonvolatile memory  may be used by the external system as nonvolatile memory. The external system may read and write data to these portions  directly, i.e. via the controller  without first writing the data to volatile memory  from where it is backed up to nonvolatile memory .","Thus, the hybrid memory subsystem may be configured to provide three types of memory to the external system. One type is \u201cnonvolatile\u201d memory  having the interaction advantages (e.g. speed, reusability) of volatile random access memory, and backed up automatically to a portion  of nonvolatile random access memory in the event of system power failure. Another type of memory provided to the external system is standard random access volatile memory . Still another type provided to the external system is standard nonvolatile memory  accessed in a manner native to the nonvolatile memory (block-sequential rather than random accessed).","The portion  of nonvolatile memory that is not reserved for backups of volatile memory  may contain program code or other information and may be \u201cbooted\u201d or otherwise loaded into the portion  of volatile memory that is not backed up. Thus, the nonvolatile memory  may act as a repository of program code or other \u201cimage\u201d information for use by the external system.","Thus, the volatile memory  may be partitioned into three logical memory regions: \u201cnonvolatile memory\u201d () which is volatile memory that is backed up to nonvolatile memory in the event of system power failure; volatile memory () which is volatile memory that will not be backed up if system power fails; and volatile memory (also potentially in portion ) that will not be backed up if system power fails, but which has a corresponding image in the portion  of nonvolatile memory that is not reserved for backups.","The hybrid memory subsystem may thus include logic to make available to the device into which it is installed at least one portion of the volatile memory that will be backed up to the nonvolatile memory in the event of device power failure. The logic may make available to the device at least one portion of the volatile memory that will not be backed up to the nonvolatile memory in the event of device power failure, and make available to the device at least one portion of the nonvolatile memory that is not reserved for backups from the volatile memory.","The memory subsystem may include one or more configuration registers to enable the device to specify at least one portion of the volatile memory that will be backed up to the nonvolatile memory in the event of device power failure, and to enable the device to specify at least one portion of the nonvolatile memory that is not reserved for backups from the volatile memory.","Archive Backups","In one embodiment of the present invention, multiple images of the SDRAM or other volatile memory contents may be stored in a non-volatile, e.g. flash memory. For example, an image may be stored when the power is lost by applying the secondary power of a capacitor to power the volatile\/non-volatile memory subsystem to enable the contents of the volatile memory to be backed up to the non-volatile memory when normal primary system power fails. A secondary image, herein called an archived image may also be stored in a non-volatile memory. This image of the contents of the volatile memory may be stored upon initiative of the system during normal system power. For example, if an archive bite is set in the memory subsystem, indicating that an archived image may be taken, despite the fact that the system power, e.g. primary power is still applied. A number of bits may specify different archived images, e.g. different images of the volatile memory contents which are taken while the system power is applied. Note that all described herein, the memory subsystem as described herein is described as receiving power always via the secondary power source, e.g. capacitor even when primary system power is available.","In another embodiment, the subsystem power may be powered directly from primary system power and may only draw power from the secondary sources upon a failure of a system power. In other embodiments, those typically described herein, primary system power is applied to charge the secondary power source, e.g. the capacitor which in turn at all times powers the memory subsystem both while system primary power is available and when system primary power fails to perform a back up of volatile memory to a non-volatile memory.","Herein, volatile memory image operations to non-volatile memory which are initiative by the host not in response to a primary power failure are referred to as FORCE_SAVE corresponding RESTORE operations initiative by the host and not in response to restoration of system primary power are referred to herein as FORCE_RESTORE. A volatile memory back up operation to non-volatile memory responds to a loss system power is referred to herein as POWERLOSS_SAVE the corresponding restore operation is POWERLOSS_RESTORE.",{"@attributes":{"id":"p-0127","num":"0126"},"figref":"FIG. 16","b":["1","2","1","2","102","104","102","104","102"]},{"@attributes":{"id":"p-0128","num":"0127"},"figref":["FIG. 17","FIG. 17"]},"When power is restored while in this FORCE_SAVE\/POWERLOSS_SAVE state, normal operation resumes, terminating both the FORCE_SAVE and the POWERLOSS_SAVE that are in process. If the FORCE_SAVE POWERLOSS_SAVE concludes with system power still being unavailable, the system moves to the SHUT DOWN state and shuts down.","During normal operation, a FORCE_RESTORE command from the host moves the memory subsystem to a FORCE_RESTORE state. Once the archive image from volatile memory is restored to the volatile memory, the memory subsystem returns to normal operation. A power failure during a FORCE_RESTORE will move the memory subsystem to a POWERLOSS_SAVE state, during which the contents of the volatile memory are saved to the normal area of the non-volatile memory. The normal back up area may physically change, and may even be a non-contiguous range that varies over time, depending upon management and allocation of the non-volatile memory and how that management and allocation evolves over time. Once a POWERLOSS_SAVE concludes, the system shuts down, unless power is restored during the POWERLOSS_SAVE, in which case the system resumes normal operation.","From SHUT_DOWN, restoration of power moves the system into the POWERLOSS_RESTORE state, during which the contents of the normal backup region of the non-volatile memory are restored to the volatile memory. Once this process concludes, the system moves to the normal operation state. However if there is a power failure during the POWER_RESTORE process, the system goes back into the SHUT DOWN state.","Those having skill in the art will appreciate that there are various vehicles by which processes and\/or systems described herein can be effected (e.g., hardware, software, and\/or firmware), and that the preferred vehicle will vary with the context in which the processes are deployed. For example, if an implementer determines that speed and accuracy are paramount, the implementer may opt for a hardware and\/or firmware vehicle; alternatively, if flexibility is paramount, the implementer may opt for a solely software implementation; or, yet again alternatively, the implementer may opt for some combination of hardware, software, and\/or firmware. Hence, there are several possible vehicles by which the processes described herein may be effected, none of which is inherently superior to the other in that any vehicle to be utilized is a choice dependent upon the context in which the vehicle will be deployed and the specific concerns (e.g., speed, flexibility, or predictability) of the implementer, any of which may vary. Those skilled in the art will recognize that optical aspects of implementations may involve optically-oriented hardware, software, and or firmware.","The foregoing detailed description has set forth various embodiments of the devices and\/or processes via the use of block diagrams, flowcharts, and\/or examples. Insofar as such block diagrams, flowcharts, and\/or examples contain one or more functions and\/or operations, it will be understood as notorious by those within the art that each function and\/or operation within such block diagrams, flowcharts, or examples can be implemented, individually and\/or collectively, by a wide range of hardware, software, firmware, or virtually any combination thereof. Several portions of the subject matter described herein may be implemented via Application Specific Integrated Circuits (ASICs), Field Programmable Gate Arrays (FPGAs), digital signal processors (DSPs), or other integrated formats. However, those skilled in the art will recognize that some aspects of the embodiments disclosed herein, in whole or in part, can be equivalently implemented in standard integrated circuits, as one or more computer programs running on one or more computers (e.g., as one or more programs running on one or more computer systems), as one or more programs running on one or more processors (e.g., as one or more programs running on one or more microprocessors), as firmware, or as virtually any combination thereof, and that designing the circuitry and\/or writing the code for the software and\/or firmware would be well within the skill of one of skill in the art in light of this disclosure. In addition, those skilled in the art will appreciate that the mechanisms of the subject matter described herein are capable of being distributed as a program product in a variety of forms, and that an illustrative embodiment of the subject matter described herein applies equally regardless of the particular type of signal bearing media used to actually carry out the distribution. Examples of a signal bearing media include, but are not limited to, the following: recordable type media such as floppy disks, hard disk drives, CD ROMs, digital tape, and computer memory; and transmission type media such as digital and analog communication links using TDM or IP based communication links (e.g., packet links).","In a general sense, those skilled in the art will recognize that the various aspects described herein which can be implemented, individually and\/or collectively, by a wide range of hardware, software, firmware, or any combination thereof can be viewed as being composed of various types of \u201celectrical circuitry.\u201d Consequently, as used herein \u201celectrical circuitry\u201d includes, but is not limited to, electrical circuitry having at least one discrete electrical circuit, electrical circuitry having at least one integrated circuit, electrical circuitry having at least one application specific integrated circuit, electrical circuitry forming a general purpose computing device configured by a computer program (e.g., a general purpose computer configured by a computer program which at least partially carries out processes and\/or devices described herein, or a microprocessor configured by a computer program which at least partially carries out processes and\/or devices described herein), electrical circuitry forming a memory device (e.g., forms of random access memory), and\/or electrical circuitry forming a communications device (e.g., a modem, communications switch, or optical-electrical equipment).","Those skilled in the art will recognize that it is common within the art to describe devices and\/or processes in the fashion set forth herein, and thereafter use standard engineering practices to integrate such described devices and\/or processes into larger systems. That is, at least a portion of the devices and\/or processes described herein can be integrated into a network processing system via a reasonable amount of experimentation.","The foregoing described aspects depict different components contained within, or connected with, different other components. It is to be understood that such depicted architectures are merely exemplary, and that in fact many other architectures can be implemented which achieve the same functionality. In a conceptual sense, any arrangement of components to achieve the same functionality is effectively \u201cassociated\u201d such that the desired functionality is achieved. Hence, any two components herein combined to achieve a particular functionality can be seen as \u201cassociated with\u201d each other such that the desired functionality is achieved, irrespective of architectures or intermedial components. Likewise, any two components so associated can also be viewed as being \u201coperably connected\u201d, or \u201coperably coupled\u201d, to each other to achieve the desired functionality."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In the drawings, the same reference numbers and acronyms identify elements or acts with the same or similar functionality for ease of understanding and convenience. To easily identify the discussion of any particular element or act, the most significant digit or digits in a reference number refer to the figure number in which that element is first introduced.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIGS. 13 and 14"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 17"}]},"DETDESC":[{},{}]}
