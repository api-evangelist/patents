---
title: Programming protocols for powered cards and devices
abstract: A programming device is provided that programs cards, such as payment cards, with data, such as personal data, using light transmitters and receivers. For example, an infrared transmitter may be provided to program personal data (e.g., a customer's credit card number) into a card wirelessly. In doing so, the card may be, for example, completely laminated such that there are no exposed electronic components on the exterior surface of the card and be programmed via light. The programming device may shield the programming components to block ambient light from interacting with those programming components during programming. A conveyor may be utilized to align multiple cards with a programming device to allow assembly-line style programming of the cards.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09306666&OS=09306666&RS=09306666
owner: DYNAMICS INC.
number: 09306666
owner_city: Pittsburgh
owner_country: US
publication_date: 20100924
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application claims the benefit of U.S. Provisional Patent Application No. 61\/249,692, titled \u201cProgramming with Light for Powered Cards and Devices,\u201d filed Oct. 8, 2009 and U.S. Provisional Patent Application No. 61\/287,366, titled \u201cProgramming Protocols for Powered Cards and Devices,\u201d filed Dec. 17, 2009, which are hereby incorporated by reference herein in their entirety.","This invention relates to magnetic cards and devices and associated payment systems.","A card may include a dynamic magnetic communications device. Such a dynamic magnetic communications device may take the form of a magnetic encoder or a magnetic emulator. A magnetic encoder may change the information located on a magnetic medium such that a magnetic stripe reader may read changed magnetic information from the magnetic medium. A magnetic emulator may generate electromagnetic fields that directly communicate data to a magnetic stripe reader. Such a magnetic emulator may communicate data serially to a read-head of the magnetic stripe reader.","All, or substantially all, of the front as well as the back of a card may be a display (e.g., bi-stable, non bi-stable, LCD, LED, or electrochromic display). Electrodes of a display may be coupled to one or more capacitive touch sensors such that a display may be provided as a touch-screen display. Any type of touch-screen display may be utilized. Such touch-screen displays may be operable of determining multiple points of touch. Accordingly, a barcode may be displayed across all, or substantially all, of a surface of a card. In doing so, computer vision equipment such as barcode readers may be less susceptible to errors in reading a displayed barcode.","A card may include a number of output devices to output dynamic information. For example, a card may include one or more RFIDs or IC chips to communicate to one or more RFID readers or IC chip readers, respectively. A card may include devices to receive information. For example, an RFID and IC chip may both receive information and communicate information to an RFID and IC chip reader, respectively. A device for receiving wireless information signals may be provided. A light sensing device or sound sensing device may be utilized to receive information wirelessly. A card may include a central processor that communicates data through one or more output devices simultaneously (e.g., an RFID, IC chip, and a dynamic magnetic stripe communications device). The central processor may receive information from one or more input devices simultaneously (e.g., an RFID, IC chip, dynamic magnetic stripe devices, light sensing device, and a sound sensing device). A processor may be coupled to surface contacts such that the processor may perform the processing capabilities of, for example, an EMV chip. The processor may be laminated over and not exposed such that such a processor is not exposed on the surface of the card.","A card may include one or more light transmitters and light receivers. The light transmitters and receivers may be the same, or different, devices. A light transmitter may be able to transmit visible, infrared, or visible and infrared light. A light transmitter may be able to transmit additional types of light (e.g., ultraviolet light). A light receiver may be able to receive visible, infrared, or visible and infrared light. A light receiver may be able to receive additional types of light (e.g., ultraviolet light). A light transmitter may take the form of, for example, an LED. A light receiver may take the form of, for example, a photo-transistor, photo-diode, or photo-resistor.","A card may include a light transmitter (e.g., an infrared transmitter) about one end of a card and a light receiver (e.g., an infrared receiver) about the opposite end of a card. In doing so, the light transmitter and receiver may be located at a distance from one another (e.g., greater than half an inch, one inch, one and a half inch, two inches, or two and a half inches away from one another) such that the light receiver cannot pick up transmissions from the light transmitter.","For example, a light receiver may be located along about a top edge of a card at a particular distance from one side edge (e.g., 1.067 inches from one side edge). A light transmitter may also be located about the top edge at that same particular distance from the other side edge (e.g., 1.067 inches from the other side edge). Accordingly, a programming fixture may include a light transmitter spaced similarly from a light receiver such that the light receiver of the programming fixture may communicate with the light transmitter of the card and the light transmitter of the programming fixture may communicate with the light receiver of that same card. In this manner, cards may be moved through the programming fixture and stopped in front of the programming fixture for programming. A programming module may be included with multiple programming fixtures such that multiple programming fixtures may simultaneously program cards.","Multiple programming fixtures, for example, may be implemented along a portion of an assembly line. A transport mechanism (e.g., a conveyor belt) may be implemented to carry each card to one or more programming fixtures that may be implemented along an assembly line. In so doing, multiple cards may be carried in a forward and\/or reverse direction to one or more programming fixtures of an assembly line. Each card may be programmed by one or more of the programming fixtures of an assembly line.","A personalization machine may include multiple modules (e.g., multiple programming modules) such that cards may be personalized utilizing the personalization machine. For example, a personalization machine may include one or more modules for embossing a card, modules for printing indicia on a card, modules for writing to a static magnetic stripe of a card, modules for reading from a static magnetic stripe of a card, modules for reading and\/or writing information to an IC chip (e.g., EMV chip) of a card, modules for reading and\/or writing information to a Radio-Frequency Identification Tag of a card, modules for laser engraving to a card, modules for flex-testing a card, modules for placing holograms onto a card, modules for placing protective coatings on a card, modules for optically reading physical information on a card (e.g., a credit card number), and modules for placing a material operable to receive an ink-based signature\/mark on a card. The personalization machine may be able to communicate with a remote server to, for example, download information to be programmed into a card. The personalization machine may be able to communicate with a remote server to, for example, upload information confirming data programmed into a card.","A card may include a universal identification number. In this manner, multiple card accounts may be programmed into a card. A universal identification number may be supplied by a card (e.g., via a light transmitter) during programming to identify a universal card number. Such information may be communicated to a remote server, in which one or more multiple card account information (e.g., magnetic stripe data for multiple card accounts), may be communicated to the personalization machine and then communicated to a card via a light transmitter. The magnetic stripe data may be stored in a memory of a card during programming.","Application code may be pre-programmed into the card before programming by the personalization machine such that the application code is programmed when the magnetic stripe data is programmed into the card. Particular magnetic stripe data may then be emulated, for example, through a magnetic emulator located on a card in accordance with the previously programmed application code. Additional data may be stored during programming of magnetic stripe data. For example, information utilized by application code other than magnetic stripe data may be programmed. For example, a particular one or more security codes for a particular universal identification number may be programmed into a card. The remote server may keep track of the one or more security codes programmed into a particular card (e.g., using a universal identification number or a payment card account number such as a credit card number).","Numerous types of light may be utilized to program a card. For example, infrared light of a particular frequency may be utilized. All cards programmed by a particular module may be programmed, for example, utilizing the same frequency of infrared light. Alternatively, for example, different cards may be programmed utilizing different frequencies of light. In doing so, multiple cards may be programmed in close proximity to one another and different frequencies of communication for each card may protect against infrared cross-talk within the programming module. A card may include an identification number (e.g., a universal identification number or a payment card account number such as a credit card account number) that is optically read by a module of a personalization machine.","A remote database may store a pre-programmed infrared communications frequency for a card. Accordingly, the personalization machine may receive the frequency from the remote database. Accordingly, the card and an IR programming module of the personalization machine may each know the frequency of communication without, for example, the need to directly communicate with one another.","Multiple types of data may be communicated to a card. For example, one or more account numbers, expiration dates, user names, and other data (e.g., magnetic stripe track data) may be loaded into a card using communication ports on the card (e.g., IR transmitters and\/or receivers).","A protocol is provided for infrared data communication between a programming device and an infrared client device such as a programmable card. The client device may be, for example, a one-time programmable low-power device. The protocol may exhibit a high tolerance for device-dependent operational frequency error, such that a low speed (e.g., 2.4 kbit\/s) may be implemented at the infrared physical layer. A factory test feature may be provided such that a client device failure due to parts deviation may be detected during a manufacture production process.","The protocol may include a high security feature such that the communication port of a client device may be disconnected and the programming memory erased permanently after infrared communication. The communication process time may occur within one or more seconds (e.g., 1-2 seconds).",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 1","b":["100","112","111","111","100","113","125","120"]},"Card  may include one or more buttons such as buttons -. Such buttons may be mechanical buttons, capacitive buttons, or a combination of mechanical and capacitive buttons. Card  may include button . Button  may be used, for example, to place card  into a programming mode to receive programming (e.g., programming of a user's personal payment card data). A button (e.g., button ) may be utilized in a variety of ways (e.g., to communicate information through a dynamic magnetic communications device indicative of a user's intent to purchase a particular product with points instead of credit).","Architecture  may be utilized with any card. Architecture  may include processor . Processor  may have on-board memory for storing information (e.g., application code). Any number of components may communicate to processor  and\/or receive communications from processor . For example, one or more displays (e.g., display ) may be coupled to processor . Persons skilled in the art will appreciate that components may be placed between particular components and processor . For example, a display driver circuit may be coupled between display  and processor .","Memory  may be coupled to processor . Memory  may include data that is unique to a particular card. For example, memory  may store discretionary data codes associated with buttons of card . Such codes may be recognized by remote servers to effect particular actions. For example, a code may be stored on memory  that causes a non-merchant product to be purchased with points during a merchant transaction. Memory  may store loyalty information such as identifying information for a points account (e.g., a points account number) and associated information (e.g., a default preference on how points are earned during a purchase, such as 50% of a purchaser's points is given to the user and 50% of a purchaser's points is used to purchase lottery entries for a lottery that has at least one award of a particular number of points).","Memory  may be partially implemented as non-volatile memory. Accordingly, memory  may be pre-programmed with, for example, a programming protocol that may define how data (e.g. IR data) may be received by data input  and how data (e.g., IR data) may be transmitted by data output .","Memory  may receive data as received from data input  (e.g., an IR receiver). For example, data may be received by memory  that may be indicative of a universal identification number associated with card . Such a universal identification number may, for example, uniquely identify card . Memory  may receive data via data input  that may represent a security code that may be associated with the universal identification number of card .","Memory  may provide data, such as a universal identification number associated with card , to data output . Accordingly, data output  (e.g., an IR transmitter) may transmit such a universal identification number to, for example, a personalization machine. The personalization machine may relay the universal identification number to a remote server, which in turn, may respond with personalization data that may be associated with the universal identification number of card .","Memory  may receive data from data input  (e.g., an IR receiver) that may be associated with a universal identification number of card . For example, one or more account numbers, user names, discretionary data, and expiration dates may be stored within memory . Such data may be provided by card , for example, as one or more tracks of magnetic stripe data during a transaction (e.g., a purchase transaction).","Any number of reader communication devices may be included in architecture . For example, IC chip  may be included to communicate information to an IC chip reader. IC chip  may be, for example, an EMV chip. As per another example, RFID  may be included to communicate information to an RFID reader. A magnetic stripe communications device may also be included to communicate information to a magnetic stripe reader. Such a magnetic stripe communications device may provide electromagnetic signals to a magnetic stripe reader.","Different electromagnetic signals may be communicated to a magnetic stripe reader to provide different tracks of data. For example, electromagnetic field generators , , and  may be included to communicate separate tracks of information to a magnetic stripe reader. Such electromagnetic field generators may include a coil wrapped around one or more materials (e.g., a magnetic material and\/or a non-magnetic material).","Each electromagnetic field generator may communicate information serially to a receiver of a magnetic stripe reader for a particular magnetic stripe track. Read-head detectors  and  may be utilized to sense the presence of a magnetic stripe reader (e.g., a read-head housing of a magnetic stripe reader). The sensed information may be communicated to processor  to cause processor  to communicate information serially from electromagnetic generators , , and  to magnetic stripe track receivers in a read-head housing of a magnetic stripe reader. Accordingly, a magnetic stripe communications device may change the information communicated to a magnetic stripe reader at any time.","Processor  may, for example, communicate user-specific and card-specific information through RFID , IC chip , and electromagnetic generators , , and  to card readers coupled to remote information processing servers (e.g., purchase authorization servers). Driving circuitry  may be utilized by processor , for example, to control electromagnetic generators , , and .",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 2","b":["200","200","202","203","200"]},"Receiver  and transmitter  may represent, for example, a non-contact, opto-isolated, bi-directional communications port. Such a communications port may, for example, transmit and receive at differing frequencies so as to reduce interference. For example, signals transmitted by transmitter  may be cross-coupled into receiver  if the peak wavelength sensitivity of receiver  is at or near the peak wavelength emission of transmitter . Accordingly, receiver  may be implemented with a peak wavelength sensitivity (e.g., 870 nanometers) that may be sufficiently different from the peak wavelength emission (e.g., 940 nanometers) of transmitter . Alternate interference reduction methods (e.g., half-duplex communication methods) may also be used. In so doing, a communications port may transmit and receive at the same frequency, but not at the same time so as to reduce interference.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 3","b":["300","300","301","302","302","303","304","302","311","300","311","310","300","311","312"]},"Initially, programming device  may send a sequence of clock pulses (e.g., ten clock pulses) to wake up a client device which may be in a low-power, deep-sleep mode. Once the client device is in communication range (e.g., an IR communication range), the client device may return a sequence of clock pulses to the programming device. Accordingly, the programming device may measure and determine the frequency difference between the clock signal generated by the programming device and the clock signal generated by the client device.","The programming device may verify that the client device's clock frequency is within a specification range. The programming device may send a set of personalization requests containing client's account information and\/or other data to the client device based on the client device's clock frequency.","At the end of the personalization sequence, the programming device may send a \u201cterminate\u201d request to the client to terminate the personalization sequence. A \u201csuccessful\u201d personalization sequence response to the request may be sent by the client device to the programming device, which may constitute the minimum test requirement of the personalization sequence.","The personalization sequence may be time limited. Accordingly, a timeout may be experienced during the personalization sequence if a maximum time limit (e.g., 3-4 seconds) has transpired. A timeout may cause the client device to return to a low-power operational mode to conserve battery energy.","The command messages may be sequenced for maximum user account protection. Accordingly, strict sequencing rules may be applied, such that any sequencing error that may occur during the personalization sequence may cause the client device to return to a low-power operational mode to conserve battery energy and to terminate the personalization sequence. In so doing, any personalization data that may otherwise be transmitted to the client device may instead remain protected within the programming device in the event that an attempt is made to receive unauthorized personalization data from the programming device.","The physical layer of a communications protocol implemented by a programming device may use a pulse width modulation scheme. \u201cInter-byte\u201d and \u201cinter-message\u201d idle timing may be implemented. The programming device may initiate all requests to the client device within a few seconds (e.g., 1-2 seconds). A delay (e.g., a 30 ms delay) may be implemented in between the exchange of message packets according to, for example, communication  of .","The data transmission of a programming device and a client device may use an infrared physical layer protocol. The baud rate may be, for example, approximately 2400 bps, 8-bit data with a start and a stop bit. The start bit may be \u201c0\u201d and the stop bit may be \u201c1\u201d. A \u201c0\u201d bit may be represented by a 3\/16bit width pulse and \u201c1\u201d bit may be represented by the lack of a pulse. An exemplary byte scheme is shown in communication  of . The order of the transmission may be LSB first, 8-bit data followed by a stop bit. A delay (e.g., approximately 5 ms delay) may be allowed between bytes. An idle period (e.g., approximately 30 ms idle time) may be inserted between messages.","The delays, for example, may allow the processor to identify the messages and to provide sufficient time to process the messages. Accordingly, for example, a communication sequence may cause an interrupt to occur in a processor that may be running on the client device and\/or the programming device. Delays, therefore, may provide sufficient time to process the interrupt and to execute, for example, a programming sequence in response to the interrupt.","Infrared data reception, for example, may occur as follows. When a byte of data is transmitted from the programming device, a start bit may generate an interrupt in a processor running on the client device. 8-bit data may be shifted, for example, to a data register of the client device at a rate that may be in accordance with a baud rate of data transmission established between the programming device and the client device. A negative 3\/16 bit pulse may correspond to a \u201c0\u201d bit, while a \u201c1\u201d bit may be represented by the lack of a pulse as shown in communication  of .","The message structure, for example, may be implemented as follows. Each message may be transmitted with a header (e.g., 0x80) followed by, for example, two bytes that may define a length of the message to follow the header. A 16-bit circular redundancy check (CRC) may be transmitted with the message packet. The CRC may not, for example, be considered as a part of message. It may not, for example, be included in the data length.",{"@attributes":{"id":"p-0057","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},{},"# of",{},{}]},{"entry":[{},"Item","Bytes","Content","Defined Values"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","1","Start of","0x80"]},{"entry":[{},{},{},"header",{}]},{"entry":[{},"2","2","Length (2 byte)","N - Count of data bytes"]},{"entry":[{},{},{},{},"in the message"]},{"entry":[{},"3","N","Message as defined","Variables"]},{"entry":[{},"4","2","CRC16 (2 byte)","CRC for the above"]},{"entry":[{},{},{},{},"message"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"A 16-bit CRC, for example, may be used in the protocol. The CRC value may be generated and may be inserted into the transmission data packet (e.g., at the end of the transmission data packet). At the receiving end (e.g., at the client device) the CRC may be calculated with the corresponding message and compared with the CRC received from the transmitting end (e.g., the programming device). If a CRC error occurs during communication, the entire message may be ignored by the receiving end. Accordingly, the CRC error may be considered as a communication failure. In order to preserve data integrity and user security, the programming device may not retry to send the message.","Message character strings, for example, may include the following.",{"@attributes":{"id":"p-0060","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Message Character Strings"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"byte","0x00 to 0xFF (hexadecimal), 0 to 255"]},{"entry":[{},{},"(unsigned), \u2212128 to 127 (signed). Used"]},{"entry":[{},{},"typically for string lengths."]},{"entry":[{},"short","2-byte integer value, 0x0000 to 0xFFFF"]},{"entry":[{},{},"(hexadecimal), 0~65535 (unsigned), \u221232768 to"]},{"entry":[{},{},"32767 (signed)."]},{"entry":[{},"int","4-byte integer value representing 0x00000000 to"]},{"entry":[{},{},"0xFFFFFFFF (hexadecimal), 0 to 4294967295"]},{"entry":[{},{},"(unsigned), \u22122147483648 to 2147483647 (signed)"]},{"entry":[{},"long","8-byte integer value representing"]},{"entry":[{},{},"0x0000000000000000 to 0xFFFFFFFFFFFFFFFF"]},{"entry":[{},{},"(hexadecimal), 0 to 2{circumflex over (\u2009)}64-1 (unsigned), \u22122{circumflex over (\u2009)}63 to"]},{"entry":[{},{},"2{circumflex over (\u2009)}63-1 (signed). Used typically for absolute"]},{"entry":[{},{},"time and data."]},{"entry":[{},"double","8-byte value in IEEE 754 64-bit double-"]},{"entry":[{},{},"precision binary floating-point format."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Byte ordering, for example, may occur as follows. The programming device and client device communication protocol, for example, may utilize big-endian byte ordering. Accordingly, for a 16-bit, 2-byte transmission, the most significant byte may have the lower address order. The lower address byte may be transmitted first.","Clock initialization, for example, may occur as follows. The clock initialization may be designed to wake the client device from a low-power (e.g., deep-sleep) mode of operation. Upon receiving a set of initial clock signals from the programming device, the client device may transmit a data sequence (e.g., 0x000000) to the programming device according to an internal clock rate of the client device. The clock signal may be measured by the programming device, for example, to determine the communication bit rate to be used during subsequent communication with the client device. The programming device may tolerate clock frequency errors and monitor and collect the data for future analysis.","A security password, for example, may be provided as follows. The programming device, for example, may transmit a security password to the client device once the communication rate is determined. The client device, for example, may only respond to communications from the programming device once the correct security password is received and verified by the client device.","The message specification, for example, may be provided as follows. A number of available messages may be provided, where each message may include the application control and user data information. A communication protocol may provide flexibility for implementation, such that it may not be necessary to implement all of the messages at one time. However, each message that may be sent by the programming device may, for example, require an acknowledgement response. Such an acknowledgement response, for example, may contain header information, message length, CRC and message type information. Failure to respond to a request, for example, may result in a communication error. Other requests (e.g., a password request), however, may not require a response.","A protocol implementation may include, for example, a security password request, a write device request, a read device request, and a terminate request. The terminate request, for example, may permanently disable communication to the client device. Other message types, for example, may include the following message types.",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Message",{}]},{"entry":["Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","Password"]},{"entry":[{},"Security password sent to the client device"]},{"entry":[{},"from the programming device for"]},{"entry":[{},"communication validation."]},{"entry":["2","Read Device"]},{"entry":[{},"A request sent by the programming device to"]},{"entry":[{},"the client device to obtain TRACK 1, TRACK"]},{"entry":[{},"2, and\/or TRACK 3 information contained"]},{"entry":[{},"within the client device."]},{"entry":["3","Read Device Response"]},{"entry":[{},"A response sent by the client device to the"]},{"entry":[{},"programming device containing TRACK 1,"]},{"entry":[{},"TRACK 2, and\/or TRACK 3 information."]},{"entry":["4","Write Device"]},{"entry":[{},"A request sent to the client device from"]},{"entry":[{},"the programming device to write TRACK 1,"]},{"entry":[{},"TRACK 2, and\/or TRACK 3 information."]},{"entry":["5","Write Device Response"]},{"entry":[{},"A response from the client device to a"]},{"entry":[{},"\u201cWrite Device\u201d request from the programming"]},{"entry":[{},"device."]},{"entry":["6","Read Battery Information"]},{"entry":[{},"A request sent from the programming device"]},{"entry":[{},"to the client device to obtain battery"]},{"entry":[{},"voltage\/capacity information from the"]},{"entry":[{},"client device."]},{"entry":["7","Battery Information Response"]},{"entry":[{},"A response from the client device to a"]},{"entry":[{},"\u201cRead Battery Information\u201d request from the"]},{"entry":[{},"programming device that contains battery"]},{"entry":[{},"voltage and capacity information."]},{"entry":["8","Read Memory"]},{"entry":[{},"A request sent from the programming device"]},{"entry":[{},"to the client device to fetch a memory"]},{"entry":[{},"block from the client device."]},{"entry":["9","Read Memory Response"]},{"entry":[{},"A response from the client device to a"]},{"entry":[{},"\u201cRead Memory\u201d request from the programming"]},{"entry":[{},"device."]},{"entry":["10","Write Memory"]},{"entry":[{},"A request sent from the programming device"]},{"entry":[{},"to the client device to update a block of"]},{"entry":[{},"memory contained within the client device."]},{"entry":["11","Write Memory Response"]},{"entry":[{},"A response from the client device to a"]},{"entry":[{},"\u201cWrite Memory\u201d request from the programming"]},{"entry":[{},"device."]},{"entry":["12","Firmware Version"]},{"entry":[{},"A request sent from the programming device"]},{"entry":[{},"to the client device to obtain a firmware"]},{"entry":[{},"version contained within the client device."]},{"entry":["13","Firmware Version Response"]},{"entry":[{},"A response from the client device to a"]},{"entry":[{},"\u201cFirmware Version\u201d request from the"]},{"entry":[{},"programming device."]},{"entry":["14","Terminate"]},{"entry":[{},"A request sent from the programming device"]},{"entry":[{},"to the client device to terminate"]},{"entry":[{},"communication operation."]},{"entry":["15","Response to Terminate"]},{"entry":[{},"A response from the client device to a"]},{"entry":[{},"\u201cTerminate\u201d request from the programming"]},{"entry":[{},"device."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Message Type 1, for example, may be directed to the Password. The Password may be sent from the programming device to the client device to initiate communications between the programming device and the client device. This may be a security feature added to the protocol that may not require a response from the client device.",{"@attributes":{"id":"p-0068","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},"# of",{},"Defined"]},{"entry":["Item","Bytes","Content","Values"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","1","Message Type","0x01"]},{"entry":["2","1","N - PASSWORD length (hex)","N (hex)"]},{"entry":["3","N","PASSWORD (N bytes in hex)","TBD"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"Message Type 2, for example, may be directed to the Read Device request that requests track information that may be contained within the client device. Item fields 2, 3, and\/or 4 may specify the request for specific track data information. A value of \u201c0\u201d may be used to indicate that no track information is requested.",{"@attributes":{"id":"p-0070","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},{},"# of",{},"Defined"]},{"entry":[{},"Item","Bytes","Content","Values"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","1","Message Type","0x02"]},{"entry":[{},"2","1","Track 1 information","Any value."]},{"entry":[{},{},{},{},"0, no info."]},{"entry":[{},"3","1","Track 2 information","Any value."]},{"entry":[{},{},{},{},"0, no info."]},{"entry":[{},"4","1","Track 3 information","Any value."]},{"entry":[{},{},{},{},"0, no info."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"Message Type 3, for example, may be directed to the Read Device Response from the client device and may be used for read and write verification during personalization of the client device. The client device can provide a \u201c0\u201d in track string length field to indicate that track information is not provided.",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},{},"# of",{},"Defined"]},{"entry":[{},"Item","Bytes","Content","Values"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","1","Message Type","0x03"]},{"entry":[{},"2","1","N - Track 1 character","Any value."]},{"entry":[{},{},{},"string length (hex)","0, no info."]},{"entry":[{},"3","N","Track 1 character string","Any value."]},{"entry":[{},"4","1","M - Track 2 character","Any value."]},{"entry":[{},{},{},"string length (hex)","0, no info."]},{"entry":[{},"5","M","Track 2 character string","Any value."]},{"entry":[{},"6","1","O - Track 3 character","Any value."]},{"entry":[{},{},{},"string length (hex)","0, no info."]},{"entry":[{},"7","O","Track 3 character string","Any value."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"Message Type 4, for example, may be directed to the Write Device request. This request may be used to write personalization data (e.g., user information) to the client device tracks (e.g., write information to a memory of the card that communicates the information to a dynamic magnetic stripe communications device). Track 1, 2, and\/or 3 character string information may be specified in separate item fields.",{"@attributes":{"id":"p-0074","num":"0073"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},"# of",{},"Defined"]},{"entry":["Item","Bytes","Content","Values"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","1","Message Type","0x04"]},{"entry":["2","1","N - Track 1 Character","Any value."]},{"entry":[{},{},"String Length (hex)",{}]},{"entry":["3","N","Track 1 Character String","Any value."]},{"entry":[{},{},"(ASCII hex)",{}]},{"entry":["4","1","M - Track 2 Character","Any value."]},{"entry":[{},{},"String Length (hex)",{}]},{"entry":["5","M","Track 2 Character String","Any value."]},{"entry":[{},{},"(ASCII hex)",{}]},{"entry":["6","1","O - Track 3 Character","Any value."]},{"entry":[{},{},"String Length (hex)",{}]},{"entry":["7","O","Track 3 Character String","Any value."]},{"entry":[{},{},"(ASCII hex)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"Message Type 5, for example, may be directed to the Write Device Response and may be the client device response to Message Type 4.",{"@attributes":{"id":"p-0076","num":"0075"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},{},"#of",{},"Defined"]},{"entry":[{},"Item","Bytes","Content","Values"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","1","Message Type","0x05"]},{"entry":[{},"2","1","Track 1 String Character","Length"]},{"entry":[{},{},{},"Length Written (hex)","written"]},{"entry":[{},{},{},{},"Track 1"]},{"entry":[{},"3","1","Track 2 String Character","Length"]},{"entry":[{},{},{},"Length Written (hex)","written"]},{"entry":[{},{},{},{},"Track 2"]},{"entry":[{},"4","1","Track 3 String Character","Length"]},{"entry":[{},{},{},"Length Written (hex)","written"]},{"entry":[{},{},{},{},"Track 3"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"Message Type 6, for example, may be directed to a Read Battery Information request that may request battery information from the client device. An option field, for example, may define a battery type for which battery voltage and\/or capacity information may be requested.",{"@attributes":{"id":"p-0078","num":"0077"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},{},"# of",{},"Defined"]},{"entry":[{},"Item","Bytes","Content","Values"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","1","Message Type","0x06"]},{"entry":[{},"2","1","Option","0x00"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"Message Type 7, for example, may be directed to a Battery Information Response that may include a 12-bit battery voltage value and a battery-type option field to indicate a battery type that may correspond to the battery voltage value.",{"@attributes":{"id":"p-0080","num":"0079"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},"# of",{},"Defined"]},{"entry":["Item","Bytes","Content","Values"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","1","Message Type","0x07"]},{"entry":["2","2","Battery Voltage 12-bit A\/D","12-bit A\/D"]},{"entry":[{},{},"Value (hex)",{}]},{"entry":["3","1","Option (battery type)","0x00"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"Message Type 8, for example, may be directed to a Read Memory request and may be the request sent by the programming device to the client device for specific memory blocks. The Read Memory request may be used for test purposes (e.g., to verify data previously written into a memory block of the client device). A Read Memory request for undesignated and\/or unauthorized memory information may be denied.",{"@attributes":{"id":"p-0082","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},"# of",{},"Defined"]},{"entry":["Item","Bytes","Content","Values"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","1","Message Type","0x08"]},{"entry":["2","2","N - Length of Memory to",{}]},{"entry":[{},{},"Read (byte)",{}]},{"entry":["3","2","Address of Memory ","Address of"]},{"entry":[{},{},"(2 byte in hex)","Memory"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"Message Type 9, for example, may be directed to a Read Memory response, which may be designated for test verification purposes. For example, only information from a designated memory block, as defined by the client device, may be accessible. A return value of \u201c0\u201d may indicate that the Read Memory request is rejected.",{"@attributes":{"id":"p-0084","num":"0083"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},"# of",{},"Defined"]},{"entry":["Item","Bytes","Content","Values"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","1","Message Type","0x09"]},{"entry":["2","2","N - Length of Memory Read","0, info"]},{"entry":[{},{},{},"request"]},{"entry":[{},{},{},"rejected."]},{"entry":["3","N","N bytes of Memory","Memory"]},{"entry":[{},{},"Contents (hex)","contents"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"Message Type 10, for example, may be directed to a Write Memory request, which may be a request to write a block of data to client device memory. The length and address may be specified in the request. The client card device may reject the Write Memory request to protect the client device memory area.",{"@attributes":{"id":"p-0086","num":"0085"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},"# of",{},"Defined"]},{"entry":["Item","Bytes","Content","Values"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","1","Message Type","0x0A"]},{"entry":["2","2","N - Length of Memory to",{}]},{"entry":[{},{},"Write (2 bytes)",{}]},{"entry":["3","2","Address of Memory ","Address of"]},{"entry":[{},{},"(2 bytes)","Memory"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"Message Type 11, for example, may be directed to a Write Memory Response. The client device may respond to the Write Memory request with the length of memory written, where a value of \u201c0\u201d may indicate that the request is rejected.",{"@attributes":{"id":"p-0088","num":"0087"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},{},"# of",{},"Defined"]},{"entry":[{},"Item","Bytes","Content","Values"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","1","Message Type (byte)","0x0B"]},{"entry":[{},"2","2","N - Length of Memory","Length of"]},{"entry":[{},{},{},"Written (2 bytes)","memory"]},{"entry":[{},{},{},{},"written"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"Message Type 12, for example, may be directed to a Firmware Version request, which may request the version of firmware currently being executed by the client device. The Firmware Version request may also request hardware information associated with the client device firmware.",{"@attributes":{"id":"p-0090","num":"0089"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},{},"# of",{},"Defined"]},{"entry":[{},"Item","Bytes","Content","Values"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","1","Message Type (byte)","0x0C"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"Message Type 13, for example, may be directed to a Firmware Version Response. The client device may respond, for example, with one byte of hexadecimal version code corresponding to its embedded firmware and hardware revision. The client device may respond, for example, with an application number that may define a specific type of client device. A status field may be provided, for example, that may indicate an operational status (e.g., battery capacity) of the client device.",{"@attributes":{"id":"p-0092","num":"0091"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},{},"# of",{},"Defined"]},{"entry":[{},"Item","Bytes","Content","Values"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","1","Message Type (byte)","0x0D"]},{"entry":[{},"2","1","Version Number (byte)","Version"]},{"entry":[{},{},{},{},"Number"]},{"entry":[{},"3","1","Application Number","Any value"]},{"entry":[{},"4","1","Status","Any value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"Message Type 14, for example, may be directed to a Terminate request. The programming device may send a Terminate request to the client device, for example, to terminate the communication process. A Terminate request with option 0x00 may set the client device to a normal mode where no further programming of the client device is possible, but the client device is ready for commercial use. A Terminate request with option 0x01 may set the client device to test mode, whereby personalization data may be transmitted to the client device, but not stored within the client device. A terminate request with option 0x02 may set the client device to test mode, whereby personalization data may be stored within the client device and further programming of the client device may still be possible.",{"@attributes":{"id":"p-0094","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},{},"# of",{},"Defined"]},{"entry":[{},"Item","Bytes","Content","Values"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","1","Message Type (byte)","0x0E"]},{"entry":[{},"2","1","Option (0x00 hex, Normal)","0x00, 0x01,"]},{"entry":[{},{},{},{},"0x02"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"Message Type 15, for example, may be directed to a Response to Terminate, which may be sent by the client device to the programming device before terminating the communication process. The option status byte may contain the terminating status information. For example, a hexadecimal byte of 0xFF may indicate an error termination.",{"@attributes":{"id":"p-0096","num":"0095"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},{},"# of",{},"Defined"]},{"entry":[{},"Item","Bytes","Content","Values"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","1","Message Type (byte)","0x0E"]},{"entry":[{},"2","1","Option (status)","TBD"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 5","b":["500","502","504","508","506","510","512"]},"The optical characteristics, for example, of programming device  may be as follows. The transmission and\/or reception range of programming device  may include a relatively short range of distance (e.g., a few centimeters or less than an inch). For example, the reception and transmission range may be approximately less than 10 cm (e.g., approximately 5 mm).","The IR transmitter\/IR receiver of the card device may be aligned with the corresponding IR receiver\/IR transmitter of the programming device for optimized communication. The IR receivers of the client device and the programming device may be sensitive to ambient light. Accordingly, a sealed environment may be provided to substantially block ambient light from potentially interfering with IR communications between the client device and the programming device. Interference may be reduced, for example, by establishing half-duplex communications between a client device and a programming device.","Interference may be further reduced, for example, by establishing a wavelength sensitivity of the IR receiver that is different than a peak wavelength as transmitted by the IR transmitter. The wavelength sensitivity of the IR receiver may be selected to, for example, 870 nm+\/\u221210 nm. Other parameters that may be exhibited by an IR receiver of a client device and\/or a programming device may be as follows.",{"@attributes":{"id":"p-0101","num":"0100"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["Receiver Parameter","Min.","Typ.","Max.","Unit"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Irradiance in angular range",{},"110",{},"mW\/cm"]},{"entry":["SIR mode",{},{},{},{}]},{"entry":["Peak Wavelength","860","870","890","nm"]},{"entry":["Spectral Radiation Bandwidth",{},"45",{},"nm"]},{"entry":["Leading edge jitter",{},"50",{},"ns"]},{"entry":["Latency",{},"500",{},"us"]},{"entry":["Rise\/Fall Time",{},"15",{},"us"]},{"entry":["Link Distance",{},"10",{},"mm"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0102","num":"0101"},"figref":"FIG. 6","b":["600","602"]},{"@attributes":{"id":"p-0103","num":"0102"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["Transmitter Parameter","Min.","Typ.","Max.","Unit"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Radiated Power",{},"100",{},"mW\/sr"]},{"entry":["Peak Wavelength",{},"940",{},"nm"]},{"entry":["Half Angle",{},"15",{},"Deg"]},{"entry":["Optical output pulse duration",{},"80",{},"us"]},{"entry":["(2.4 kbit\/s)",{},{},{},{}]},{"entry":["Rise\/Fall Time",{},"15",{},"us"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 7","b":["700","700","702","704","700","700","702","704"]},"Once card  has been programmed successfully, the infrared transceiver on the card may be permanently disabled for the remainder of the card's life. Prior to personalization, card  may reside in a \u201cwait\u201d state, such that card  may be sensitive to all types of light (e.g., infrared light). Accordingly, card  may be provided in a dark container and introduced to light only during personalization of card .","The IR reactive components (e.g., IR receiver  and IR transmitter ) may be accessible through any surface of card . Accordingly, personalization of card  may be accomplished through alignment of IR transmitter  to a corresponding IR receiver of a programming device and alignment of IR receiver  and a corresponding IR transmitter of a programming device. For example, light pipes may be used to align the IR reactive components of card  and the corresponding IR reactive components of a programming device.",{"@attributes":{"id":"p-0107","num":"0106"},"figref":"FIG. 8","b":["800","800","806","812","808","814","802","804","800","808","806","814","800","808"]},"Programming device  may include an application programming interface (API) that may be executing within a computing platform of programming device . The computing platform may, for example, be executing a high-level windows application that may be used to interface with IR device . Accordingly, cards  having no user account information may nevertheless be programmed with user account information so as to personalize cards  for commercial use. Persons skilled in the art will appreciate that multiple IR devices  may be controlled by a single programming device  to, for example, further increase a number of cards that may be personalized on a daily basis.","Bidirectional interface  may represent a communications medium (e.g., a USB communications medium) whereby card personalization information may be exchanged between programming device  and IR device . IR device  may perform a transceiver operation, whereby communications received from programming device may be converted, for example, to corresponding IR signals and communications received from card  may be converted, for example, to USB signals.","Personalization data that may be used to personalize card  may be derived from media that may be localized to programming device . For example, personalization data may be extracted from a computer readable medium, such as a CD or DVD, by programming device  and subsequently programmed into card  via IR device . Alternately, personalization data may be extracted from a remote server  via a network (e.g., the internet) by programming device  and subsequently programmed into card  via IR device .","Cards  may be removably attached to conveyer . Conveyer  may be actuated, for example, such that cards  may be sequentially brought within a programming distance of IR device . For example, infrared components  and  on IR device  may be closely aligned within 5 mm or less (e.g., within approximately 1.0 mm) of the corresponding components on card  via operation of conveyer . IR device  may utilize sensor , which may determine whether IR components of card  are properly aligned with the corresponding IR components of IR device . Persons skilled in the art will appreciate that conveyer  may be actuated in both a forward and reverse direction to bring cards  within a programming distance of IR device .","The IR receiver on card  may be configured, for example, to have a peak wavelength sensitivity of 870 nm. Therefore, corresponding IR transmitter  on IR device  may be provided so as to closely match the IR receiver specifications of card .","The IR transmitter on card  may be configured, for example, to have a peak wavelength emission at approximately 940 nanometers. Therefore, corresponding IR receiver  of IR device may be provided so as to closely match the IR transmitter specifications of card .","A low-level, IR communication schema may be used in the personalization of cards . The schema, for example, may be an asynchronous, bidirectional, serial communication method. Communication may occur, for example, at a rate of approximately 2400 bps with no parity error checking, 1 start bit, and 1 stop bit (2400-N-8-1). The start bit, for example, may be zero (0) and the stop bit, for example, may be one (1).","Bit encoding using infrared pulses may be implemented with a common 18% ( 3\/16) duty cycle pulse width scheme as shown in .  shows an example of a transmitted zero (0) bit where the IR pulse width is 78 microseconds (\u03bcS) and the entire bit time is 416.7 \u03bcS.  shows an example of a typical byte frame that may utilize the pulse width scheme of .","After initial manufacturing, cards  may be placed into a low-power, deep-sleep condition. To wake card , for example, programming device  may send a series of clock pulses (e.g., ) at a particular rate (e.g., a rate of 600 bits per second) using a 78.1 us infrared pulse encoding scheme. For example, the clock pulses have a bit width, or period, of 1.7 ms and a corresponding infrared pulse width of 78.1 us.","After the initialization sequence (e.g., ten clock pulses) are sent by programming device , card  may wake up and provide a response (e.g., three bytes of 0x00 at a baud rate of approximately 2400 bps). Since card  may not be able to accurately produce a specific baud rate, programming device  may nevertheless use the response from card  to measure the baud rate produced by card . Accordingly, programming device  may make any timing adjustments that may be necessary to substantially match the baud rate produced by card  so as to improve subsequent communications with card .",{"@attributes":{"id":"p-0118","num":"0117"},"figref":"FIG. 11","b":["1102","1104","1104","1102"]},"The programming device may receive response  from the client device. In so doing, the programming device may ascertain a communication rate (e.g., transmission clock timing) that may be used by the client device to transmit response . The programming device may adjust its communication timing to be compatible with the timing characteristics of the client device and the transfer of personalization data (e.g., messages) may commence.","Upon receipt of a message, the client device may evaluate the validity of the message. A client device may also evaluate a CRC that may be transmitted with the message. If the message validity and CRC are evaluated favorably, the client device may accept the message and may acknowledge receipt of the message. If either of the message or CRC are evaluated unfavorably, the client device may not respond at all.","If the programming device receives an acknowledgment from the client device, the programming device may proceed to send additional messages. However, if after a timeout period (e.g., 30 ms) the client device has not yet responded, the programming device may assume that a communication error has occurred and may not attempt resending messages to the client device.","The programming device may try to resend any unacknowledged message. If after a resend, the client device still has not acknowledged, the programming device may report an error condition and the client device may be marked as a suspected defect.","Data exchanged between a programming device and a client device may observe communication timeout rules. Inter-Byte timeouts may be tolerated, such that a maximum delay (e.g., 5 mS) between consecutive bytes in a message may be permitted. If more than a maximum timeout delay elapses between consecutively transmitted bytes, a client device may assume an error condition has occurred and return to a low-power (e.g., sleep) condition. In so doing, no data may be saved within the client device and the entire personalization session may be ignored.","Inter-Message timeouts may be tolerated, such that a maximum delay (e.g., 30 mS) between consecutive messages during a personalization sequence may be permitted. If more than a maximum timeout delay elapses between messages, the client device may assume an error condition has occurred and return to a low-power (e.g., sleep) condition. In so doing, no data may be saved within the client device and the entire personalization session may be ignored.",{"@attributes":{"id":"p-0125","num":"0124"},"figref":"FIG. 12","b":["1210","1240","1210","1211","1212","1213","1214"]},"Sequence  may include, for example, loading multiple client devices onto one or more conveyors (e.g., as in step ), moving the conveyor to align each client device with a corresponding programming device (e.g., as in step ), detecting a proper alignment of each client device with a respective programming device (e.g., as in step ), and commencing a personalization sequence of the client device (e.g., as in step ).","Sequence  may include, for example, commencing a personalization sequence of a client device (e.g., as in step ), transmitting a byte of a personalization message from a programming device to a client device (e.g., as in step ), setting a timeout delay to receive an acknowledgment from the client device (e.g., as in step ), waiting for the acknowledgment from the client device (e.g., as in step ), and terminating the personalization session if the acknowledgment is not received from the client device before the timeout delay expires.","Sequence  may include, for example, commencing a personalization sequence of a client device (e.g., as in step ), transmitting a personalization message from a programming device to a client device (e.g., as in step ), setting a timeout delay to receive an acknowledgment from the client device (e.g., as in step ), waiting for the acknowledgment from the client device (e.g., as in step ), and terminating the personalization session if the acknowledgment is not received from the client device before the timeout delay expires.","Persons skilled in the art will appreciate that the present invention is not limited to only the embodiments described. Instead, the present invention more generally involves dynamic information. Persons skilled in the art will also appreciate that the apparatus of the present invention may be implemented in other ways then those described herein. All such modifications are within the scope of the present invention, which is limited only by the claims that follow."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The principles and advantages of the present invention can be more clearly understood from the following detailed description considered in conjunction with the following drawings, in which the same reference numerals denote the same structural elements throughout, and in which:",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
