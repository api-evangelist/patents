---
title: Image sampling from multicast streams
abstract: The disclosed methods and system may gain access to a plurality of content streams, and periodically capture still images from each stream. The captured stills may be stored in a predetermined location, and the location may be made available to various clients. By discovering the locations, application clients can issue requests to receive the latest image for a current stream, and use that image to improve a user interface or enhance a user experience in consuming the content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08949892&OS=08949892&RS=08949892
owner: 
number: 08949892
owner_city: 
owner_country: 
publication_date: 20111107
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present application claims priority to U.S. Provisional Application No. 61\/442,628, filed Feb. 14, 2011, and entitled \u201cImage Sampling From Multicast Streams,\u201d the contents of which are hereby incorporated by reference as a nonlimiting example embodiment.","With the increasing proliferation of content, such as video content, being offered to users, there is an increased demand for easy ways to let users view, search for and\/or access the content, or allow users to communicate information related to content.","Some aspects of features described herein relate to helping users locate and use the content that is available to them. In one aspect, a server can be used to obtain periodic image samples for various video services (e.g., television channels, movies, etc.), and offer those periodic image samples to client devices and\/or applications that, in turn, can use those samples to help their users locate or use desired content.","In some embodiments, one or more servers may simultaneously access or subscribe to a plurality of content sources, such as video multicast stream sources. The servers may periodically capture images from each stream, and store the images in different corresponding storage locations associated with different streams. The storage locations may then be provided or made accessible to requesting clients, who may receive periodically updated still images from a plurality of live video streams.","This summary is not intended to identify critical or essential features of the disclosures herein, but instead merely summarizes certain features and variations thereof. Other details and features will also be described in the sections that follow.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["100","100","100","101","102","103","103","101","102"]},"There may be one line  originating from the central office , and it may be split a number of times to distribute the signal to various homes  in the vicinity (which may be many miles) of the central office . Although the term home is used by way of example, locations  may be any type of user premises, such as businesses, institutions, etc. The lines  may include components not illustrated, such as splitters, filters, amplifiers, etc. to help convey the signal clearly, but in general each split introduces a bit of signal degradation. Portions of the lines  may also be implemented with fiber-optic cable, while other portions may be implemented with coaxial cable, other lines, or wireless communication paths. By running fiber optic cable along some portions, for example, signal degradation in those portions may be significantly minimized, allowing a single central office  to reach even farther with its network of lines  than before.","The central office  may include a termination system (TS) , such as a cable modem termination system (CMTS), which may be a computing device configured to manage communications between devices on the network of lines  and backend devices such as servers - (to be discussed further below). The TS may be as specified in a standard, such as, in an example of an HFC-type network, the Data Over Cable Service Interface Specification (DOCSIS) standard, published by Cable Television Laboratories, Inc. (a.k.a. CableLabs), or it may be a similar or modified device instead. The TS may be configured to place data on one or more downstream channels or frequencies to be received by devices, such as modems at the various homes , and to receive upstream communications from those modems on one or more upstream frequencies. The central office  may also include one or more network interfaces , which can permit the central office  to communicate with various other external networks . These networks  may include, for example, networks of Internet Protocol devices, telephone networks, cellular telephone networks, fiber optic networks, local wireless networks (e.g., WiMAX), satellite networks, and any other desired network, and the interface  may include the corresponding circuitry needed to communicate on the network , and to other devices on the network such as a cellular telephone network and its corresponding cell phones, or other network devices. For example, the network  may communicate with one or more content sources, such as multicast or unicast video sources -, which can supply video streams for ultimate consumption by the various client devices in the homes .","As noted above, the central office  may include a variety of servers - that may be configured to perform various functions. For example, the central office  may include a push notification server  that can generate push notifications to deliver data and\/or commands to the various homes  in the network (or more specifically, to the devices in the homes  that are configured to detect such notifications). The central office  may also include a content server  configured to provide content to users in the homes. This content may be, for example, video on demand movies, television programs, songs, text listings, etc. The content server may include software to validate user identities and entitlements, locate and retrieve requested content, encrypt the content, and initiate delivery (e.g., streaming) of the content to the requesting user and\/or device.","The system may also include computing devices such as an image capture management server  and one or more image capture servers . As will be described below, the image capture servers  may process multiple video streams and periodically extract images from each stream. The image capture management server  may coordinate the image capture process and interact with various cache servers  to handle client requests for images and related services.","The central office  may also include one or more application servers . An application server  may be a computing device configured to offer any desired service, and may run various languages and operating systems (e.g., servlets and JSP pages running on Tomcat\/MySQL, OSX, BSD, Ubuntu, Redhat, HTML5, JavaScript, AJAX and COMET). For example, an application server  may be used to implement a cache server for the image capture system described herein. As will be described further below, the image cache server  may receive and process requests from various clients for up-to-date images that have been captured by the system described herein. Other example application servers may be responsible for collecting data such as television program listings information and generating a data download for electronic program guide listings. Another application server may be responsible for monitoring user viewing habits and collecting that information for use in selecting advertisements. Another application server may be responsible for formatting and inserting advertisements in a video stream being transmitted to the homes . And as will be discussed in greater detail below, another application server may be responsible for receiving user remote control commands, and processing them to provide an intelligent remote control experience.","An example home may include an interface . The interface  may comprise a device , such as a modem, which may include transmitters and receivers used to communicate on the lines  and with the central office . The device  may be, for example, a coaxial cable modem (for coaxial cable lines ), a fiber interface node (for fiber optic lines ), or any other desired device having similar functionality. The device  may be connected to, or be a part of, a gateway interface device . The gateway interface device  may be a computing device that communicates with the device  to allow one or more other devices in the home to communicate with the central office  and other devices beyond the central office. The gateway  may be a set-top box (STB), digital video recorder (DVR), computer server, or any other desired computing device. The gateway  may also include (not shown) local network interfaces to provide communication signals to devices in the home, such as televisions , additional STBs , personal computers , laptop computers , wireless devices  (wireless laptops and netbooks, mobile phones, mobile televisions, personal digital assistants (PDA), etc.), and any other desired devices. Examples of the local network interfaces include Multimedia Over Coax Alliance (MoCA) interfaces, Ethernet interfaces, universal serial bus (USB) interfaces, wireless interfaces (e.g., IEEE 802.11), Bluetooth interfaces, and others. Any of the devices in the home, such as the gateway , STB , computer , etc., can include an application software client that can make use of the video images captured by the image capture servers.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2","b":["200","201","201","202","203","204","205","200","206","207","208","200","209","210","209","210","101","109"]},"Various features described herein offer improved remote control functionality to users accessing content from the central office  or another content storage facility or location. For example, one such user may be a viewer who is watching a television program being transmitted from the central office . In some embodiments, the user may be able to control his\/her viewing experience (e.g., changing channels, adjusting volume, viewing a program guide, etc.) using any networked device, such as a cellular telephone, personal computer, personal data assistant (PDA), netbook computer, etc., aside from (or in addition to) the traditional infrared remote control that may have been supplied together with a television or STB.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3","b":["105","106","107","301","105"]},"The registration itself can be requested in a variety of ways. For example, the clients may be provided with a URL to log in to, or register for, the image capture service. The client may send an HTTP request to the image capture management server . In response to a registration request, the management server  may authenticate the client in step . The authentication can take any desired form. For example, a client's request may include a unique identifier (e.g., an account login, a device address such as a media access control (MAC) address, etc.) and security information (e.g., a digital signature, password, etc.), and the management server  may use this information to determine if the particular client is permitted to access the image capture service. To make this determination, the management server  may issue a request to an entitlement server (not shown), identifying the user who may be associated with the client, and may receive a response indicating what video services the user (or the user's devices) is allowed to access. For example, some services may require subscription and\/or payment to access (e.g., pay services like HBO, Showtime, or video on demand content), and the entitlement server's response can identify what services the user is permitted to receive. The management server  may store information identifying the user's access rights (e.g. identifying permitted and prohibited services), and can respond to the client and provide it with an additional key or password or other information that can be used for subsequent communications with the client. In some embodiments, this key or password can have a limited life (e.g.,  minutes), and the client may need to issue a new login request periodically in order to continue to receive access to the captured images described herein.","In some embodiments, the management server  is preconfigured with a listing of all content, such as video and\/or data streams, that it needs to support. Alternatively, the server  may allow for the dynamic addition\/removal of supported streams (or other content). For example, the server  may automatically scan through one or more predetermined addresses known to be used for multicasting content, or a video asset management system (e.g., a video on demand server) can affirmatively notify the server  when a new stream begins. For such systems, in step , the management server may determine whether a new video or data stream is being transmitted and needs to be added to the service. The streams may correspond to linear (e.g., transmitted according to a predetermined schedule) or on demand video services, such as television networks (e.g., ESPN, HBO, etc.) or Internet Protocol streaming services (e.g., webcasts, online videos, etc.) that are transmitting (e.g., broadcasting, multicasting, or otherwise making available) content, and this determination can be done in a variety of ways. For example, a content server  at the central office  may be responsible for offering the streams to its users, and in so doing, the content server may be configured to send a message to the image capture management server , informing the management server  of the new stream. The message may identify, for example, details about the stream, such as information identifying the program's name, its service provider, its video resolution, its encoding type and decoding requirements, an MPEG2 transport stream identifier, and any other information needed to locate the stream. A stream may be active so long as it is actively transmitting content, such as streaming live video captured from a camera at a sporting event, or streaming a previously-recorded video in response to a video on demand request.","If a new stream is to be added, then in step  the management server  may determine what capture parameters should be used for the new stream. The capture parameters may identify, for example, how frequently frames should be sampled from the stream (e.g., once per second), what size those frames should be (e.g., pixel resolution), color quality, and where the frames should be stored (e.g., creating a directory path or file location on the server 's memory device). In some embodiments, the capture parameters may be constant across all captured streams. In other embodiments, different streams may be subject to different parameters. For example, some programs may have their images captured more or less frequently than others. The images captured may also be manipulated in different ways. For example, an advertisement image or watermark logo may be added to the captured still image. The various parameters may be established by the management server , by a content provider, by a requesting client device, or any other desired source.","In step , the management server  may assign the new stream to a capture server . The assignment may be based on the capture server's existing load, as well as the parameters determined in step , in order to balance the processing load among the capture servers. When a capture server is assigned a stream, the corresponding capture server may begin a new instance of a software process to capture images from that stream (e.g., each stream being captured may be serviced by its own instance of image capturing software). The software instance may then join or subscribe to the video stream. For example, the video stream may be a unicast feed, multicast feed, or source-specific multicast feed, and the software instance may transmit a request to a multicast server to join the feed and begin receiving its video. From there, the capture server can monitor the video stream, capture images at the rate and type specified in the capture parameters, generate a still image in accordance with those parameters (e.g., having the required pixel dimensions\/size), and store the image in the specified path or file location on the server 's hard drive. Alternatively, the captured images may be transferred to a different storage location, such as the server 's hard drive, or any other shared memory space.","The joining of a stream and capturing from the stream can be done in any desired manner. For example, the capture server may join an MPEG2 source-specific multicast stream, and may use a media tool such as a VideoLAN client, MPlayer media player, or out of browser Silverlight application to capture the desired still images from the stream. For the MPlayer media player, an example command line instruction may be as follows:","mplayer -lavdopts skipframe=nonref:skiploopfilter=nonkey:lowres=2 -sstep60 -nodouble -nosound -vc $codec -ni -vo jpeg:outdir=output-cnn -frames 1000 -vf scale=320:180, framestep=8 -reuse-socket -tsprog $3 udp:\/\/@232.47.254.0:47000>\/dev\/null","The \u201c-nosound\u201d parameter may cause the player to omit processing of sound data, which can be useful to streamline processing. The \u201clowres=2\u201d parameter may establish a resolution or image quality level for the capture of the images, while the \u201cscale=320:180\u201d parameter may set the pixel resolution to be 320\u00d7180.","The \u201c-vc $codec\u201d parameter may identify the codec being used to encode and decode the stream.","The \u201cjpeg:outdir=output-cnn\u201d parameter identifies the file or path location on the capture server  where the captured still images should be stored.","The \u201c-frames 1000\u201d, \u201c-framestep=8\u201d and \u201c-sstep60\u201d parameters may define a limit on the number of frames to capture, or how frequently to capture them.","The \u201c-lavdopts skipframe=nonref:skiploopfilter=nonkey\u201d parameter may cause the player to skip frames and relieve demands for CPU performance.","The \u201c-reuse-socket\u201d parameter may be useful if multiple instances of the MPlayer need to connect to the same IP port of a multicast feed if the feed is using a multiple program transport stream (MPTS) format.","The \u201c-tsprg <id>\u201d parameter may help identify the particular program in the transport stream, if the feed is using an MPTS. The \u201cudp:\/\/\u201d parameter may identify the multicast source IP address for the stream.","A call to a VideoLAN client can contain similar parameters identifying the output format, lack of audio, output location, etc., such as follows:","cvlc -V image udp:\/\/@232.47.254.0:47000 -image-out-prefix=PREFIX -image-out-format=png -image-out-ratio=30 -image-out-width=320 -image-out-height=180 -no-video-title-show noaudio","Other parameters may also be used to skip frames (ffmpeg-skip-frame or ffmpeg-skip-idct), lower the resolution (ffmpeg-lowres, ffmpeg-fast, scene-ratio), use hardware decoding (ffmpeg-hw), and any other desired operation parameter.","The image capture server can also dynamically resize the images that are initially captured, to provide one or more alternate sizes of the same image that can be made available. For example, after images are captured by the VideoLAN client, the capture server  may pass the images to another tool, such as ImageMagick, to generate resized versions.","Referring back to , after the video stream has been assigned to a capture server , the management server  may proceed to step , and add the new stream to a list file identifying the streams that are being actively captured. The list may be a simple text file stored on the management server 's hard drive, and may list the streams by service provider or source name, source address (e.g., IP address), multicast port ID, transport stream ID, and universal resource locator (URL) identifying where the captured images for a particular stream are available. The list may also identify other parameters for the capture, such as time\/date of latest or first capture, capture frequency, image quality (size, resolution, pixel dimensions, compression type, etc.), title of current program being captured, alternate images captured, etc.","As noted above, some embodiments of the management server  may be preconfigured to process a predetermined set of video streams, and need not include the option of adding a new stream. Steps - may also be performed in those embodiments, for example, when the service initializes.","Returning to step , the management server  may determine if it has received a request for captured images. For example, a client EPG on a user's computer  may be configured to incorporate the latest images from program sources in a channel listing, and may send the request for the images. The request itself may be in any desired format. For example, the request can be an HTTP request such as the following:","http:\/\/flab.xcal.tv\/api\/request","In some embodiments, the request can be directed to the cache server , and the cache server  can be configured to serve as a transparent proxy for the management server . The cache server  can then redirect the request to the management server . Such a transparent proxy may allow the management server  and\/or capture servers  to remain hidden from normal public view, as a security precaution. The cache servers  may instead be trusted with the actual URLs of the management server  and capture servers , and can store an address conversion or lookup table mapping the URL requested by the client and the corresponding address\/URL for the servers \/.","The request can also include parameters identifying the requested information. For example, the request can be a request to obtain a listing of available services, or to retrieve captured images. In some embodiments, the request can specify which streams are of interest for sampling or viewing (e.g., allowing clients to avoid receiving images from streams that are of no interest to the client's user). In some embodiments, the request can ask to filter the still images to avoid receiving images from certain types of programs or service providers. For example, the requesting client can ask that it not be given still images from adult video content, specific programs, or content from certain predefined service providers known to offer content in which the client's user has no interest.","If a request has been received, then in step , the management server  may authenticate the request. The authentication may be based on the authentication performed when the client originally registered for the service, and may involve a simple lookup to determine whether the client's identifier (e.g., its MAC address) is found in a listing of authorized clients maintained by the server  from step 's authentication. Alternatively, the request may carry with it a value that has been signed by a key provided in the authentication , or a password, or any other desired form of authentication that can determine if the requesting client is permitted to receive the requested content. As another alternative, the request can simply identify the requesting user or device (e.g., a subscriber ID, a hardware identifier, an address, etc.), and the management server  can use that identification information to determine the preferences and\/or entitlements of the user or device. The management server  can also provide the identification information to an entitlement server (not shown), requesting confirmation of the user's entitlements\/restrictions\/preferences.","If the request is authenticated, then the server  may proceed to step , and collect the relevant information that is responsive to the request. This may include examining the request, or querying the requesting client, for parameters and\/or restrictions on the information requested. For example, the requesting client may provide a list of content, such as television programs or video content services (e.g., ESPN, HBO), whose still images or other descriptive data are requested, or whose still images are to be avoided. The requesting client can also specify formatting preferences for the requested images, such as desired sizes, file formats, etc. In some embodiments, the management server  and\/or capture server  can be configured to dynamically resize images for requesting clients, in response to a client's request. Additionally, or alternatively, the capture servers can be configured to capture and store multiple different versions of images from the stream, storing them in different sizes, formats, etc. The server  may then gather the information that is responsive to the request, and return it to the requesting client. The response can include data such as a series of records, one for each stream monitored by the system and available to the requesting user, and the following is an example of a record that can be returned to the client:","{\u201cname\u201d:\u201c18324\u201d,\u201csource\u201d:\u201c10.252.251.74\u201d,\u201cactive\u201d:true,\u201cnode\u201d:\u201chttp:\/\/ia.ula.lab.xcal.tv\u201d,\u201cimageUrl\u201d:\u201chttp:\/\/127.0.0.1:8080\/liveimage\/18324\u201d,\u201cmulticastlp\u201d:\u201c232.39.254.231\u201d,\u201cmultic astPort\u201d:\u201c39238\u201d,\u201ctsProgramld\u201d:\u201c1\u201d,\u201ccodec\u201d:\u201cffh264\u201d,\u201ccdnUrl\u201d:\u201cccp-cmc-smooth-pod01iis01.cds.bdn.lab.xcal.tv\/cnn.isml\/manifest\u201d,\u201clongName\u201d:\u201cCNHNHD\u201d,\u201cstationld\u201d:\u201c853 7732268987025117}","The above example is an entry for a single feed being captured by the capture service. The parameters returned can include a \u201cname\u201d parameter (18324) as a handle identifying this particular record; a \u201csource\u201d parameter (10.252.251.74) identifying a multicast source IP for the stream; and an \u201cactive\u201d parameter (true) indicating whether this particular stream is actively being captured. The \u201cactive\u201d parameter may be used, for example, to indicate whether a recent capture for the stream has been successfully captured. If the stream has experienced an error or is no longer transmitting, or if an error capturing the image has occurred, the \u201cactive\u201d value can be set to \u201cfalse,\u201d to indicate that there is no current valid image available for the stream, but that the stream remains among the ones that the system is attempting to capture.","The \u201cnode\u201d parameter (http:\/\/ia.ula.lab.xcal.tv) can identify the URL of the specific capture server  that has been assigned to capture this stream. In embodiments in which the cache server  acts as the point of contact for clients, a well-behaved client will have no need for the direct \u201cnode\u201d URL, as the client will be interacting with the cache , and not the actual server .","The \u201cimageURL\u201d parameter (http:\/\/127.0.0.1:8080\/liveimage\/18324) provides the URL that the requesting client should use to retrieve the current image for this stream. This URL can be registered to point to the cache , and the cache  can contain its own internal lookup table to redirect the request to an address of the management server  where the current image can be found.","The \u201cmulticastIP\u201d parameter (232.39.254.231) and tsProgramID (1) parameters can identify the multicast group IP address and transport stream identifier for the stream being captured.","The \u201ccodec\u201d parameter (ffh264) may identify the codec (coding\/decoding) being used for the stream, and the \u201ccdnURL\u201d (ccp-cmc-smooth-pod01 . . . \/manifest) may provide the URL for the video stream being captured. This may be used, for example, if the client wishes to directly view the stream.","The \u201clongName\u201d parameter (CNHNHD) may be an alphanumeric or textual name of the stream represented by the record.","The \u201cstationid\u201d parameter (85377322 . . . ) may be an identifier used to associate the current record with an overall metadata EPG database. For example, if the current program being streamed on the CNHNHD network is a nightly news program, then the stationid parameter may correspond to an identifier used to identify that program in an EPG database, which can contain additional information about the program (e.g., its nightly topics, text description, duration, other air times, etc.). This value may be useful, for example, if a client wishes to request additional information about the given program, in which case the client can use this identifier to submit a request to the EPG database.","In addition to retrieving and returning entries identifying the streams being captured, the manager  can respond to other types of requests as well. For example, a client may request to receive a slate of the most recent image (or predetermined number of images) for a plurality of services identified in the request. In response, the cache  (via the manager ) may provide the URLs for the images in the sample entry above, and the client may issue URL requests for the particular images of interest to the client.","In step , the responsive information may be transmitted to the client for use in the client's own application. At that point, the client may determine which of the listed records is of interest, and can issue new requests to the corresponding URLs.","In step , if the client's request fails authentication, then the server  may respond in step  by reporting the denial to the client (or outright ignoring the request).","Proceeding to step  (), the manager server  can check to determine if there has been a request to change any of the capturing parameters. As noted above in step , each stream can be captured according to its own set of parameters (e.g., its own capture rate, image quality, etc.) that can be established when capturing begins. After capturing has begun, however, the manager server  and\/or video source (e.g., source ) may be asked to change those parameters. For example, the manager server  may receive indication from a capture server  that the server  has exceeded a maximum processing threshold, or is exhausting processing resources, and the server  may determine to reduce the workload by adjusting the capture parameters or reallocating the capturing to a different capture server . As another example, a new client may register with the system, and may make a request to receive a different type of still image (e.g., different resolution, different capture frequency, etc.), and the manager server  may determine to alter the capture parameters to accommodate the new client's request.","In step , the manager  may send an instruction to one or more of the capture servers , instructing the servers to change their capturing parameters. The capture servers may accept the new parameters and restart the various capture instances for the various streams or feeds that they are capturing.","In step , the manager  may determine if a stream has ended. For example, if a program being streamed terminates, or is no longer being viewed by viewers, the stream may be torn down by the streaming server or video source , and accordingly, the capturing for those streams can be torn down as well. The streaming servers may be configured to transmit a message to the manager , informing it of the termination of the stream. Alternatively, the manager  may periodically (e.g., once per minute) inspect all of the streams in the active stream list, and check to verify that those streams remain active (e.g., by looking for recent images, or by sending a heartbeat query to the multicast server handling the stream).","If a stream has ended or is no longer desired or available, then the manager  may proceed to step , and instruct the corresponding capture server to terminate its capturing of the stream, and to release any resources that were reserved and\/or occupied by the capturing process for that stream. In step , the manager  may update its active stream list to remove the entry for the closed stream, or to otherwise indicate that the stream is no longer being captured.","In step , the manager  (or other computing devices such as the various capturing servers ) may run a cleaner routine. The cleaner routine may inspect the file directories in which each capturer instance (e.g., each instance of the capture software that is running on a server) is storing images, and delete outdated or unneeded images. For example, the cleaner may be configured to maintain a predetermined number (e.g., 5, 10, 100, etc.) of previous images for each stream, and can delete the older images that are no longer needed. Alternatively, each captured image may be associated with a time to live value, and the cleaner routine may involve determining whether an image's time to live has expired. For example, an image may have a time of 10 seconds to live in the capture directory, and 10 seconds after the image is captured, the image will be deleted from the directory (or the next time the cleaner runs after 10 seconds have passed). In some alternative embodiments, each capture instance may maintain a predetermined number of images (e.g., 5), each having a time to live, and the capture instance can capture a new image only if one of the existing images has exceeded its time to live.","In step , the manager  may monitor system data and requests, such as by running a watchdog routine. The watchdog routine may monitor the various active streams that are identified in the active stream list, and verify that new files are being written to the directory according to the requirements set in the list. For example, if the capture server is supposed to be capturing one still image per second for a particular stream, the watchdog routine may inspect the directory over the course of several seconds to confirm that new images are indeed being written. This can include, if desired, a comparison with prior images to confirm that the image content is actually changing as well. Additionally, the watchdog may inspect the image files themselves, to confirm that the files are valid image files (e.g., such as by using the Unix file command) and are not corrupted in some fashion. If the watchdog identifies a directory in which image files are no longer being written, or the images are not being updated, the manager server  can transmit an inquiry to the corresponding capture server  to request its current status for the capture instance that is responsible for capturing the given stream, and to take corrective action (e.g., restarting the instance, tearing it down due to a closed stream, etc.).","The process can then return to step , and repeat indefinitely (or until the capture service is paused, terminated, or no longer desired by a client).","As a result of the  process or similar processes, clients may be able to obtain current, real-time, image captures for various video streams. One use of the disclosed methods may be applicable to guides, such as electronic program guides (EPGs). Traditionally, EPGs have offered users a textual listing, typically in a grid format, of television shows arranged by channel and time. While the text grid EPG remains a mainstay for some viewers, there is an increasing need for simpler and more appealing ways to search for and access content.  illustrate several examples of the types of features that can be implemented by using the capture service, which can, for example, offer users a more intuitive way to find and view content. In , an onscreen mosaic  can be displayed on a consumption device (e.g., a DVR's associated display, a computer, a smartphone display, etc.). To support this, for example, the consumption device can simply register (as in step ), and then transmit periodic requests to the manager , requesting the latest images that have been captured for each service.","The client device may display the images (or other data descriptive of the content) in the mosaic , along with source identification information (e.g., \u201cHBO,\u201d \u201cCBS\u201d, etc.), and allow the user to peruse the mosaic to select a program. While the user is viewing the mosaic , the client can repeatedly request updated images from the capture manager , and update the images appearing in the mosaic . In this manner, the user viewing the mosaic  can see a dynamically updating set of tiles reflecting the current happenings on that piece of content or service. This can allow the user to identify a program (or portion) that may be of the most interest, and choose it for viewing and\/or recording. The user can navigate through the mosaic  by moving a cursor to highlight different tiles, and the highlighted tile may be enlarged with respect to other tiles. When the user chooses a tile for viewing, the client can then send a message to the server supporting that service, and request to receive the content, such as join the multicast group for that service.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 4B","FIGS. 4A & 4B"],"b":["402","105","105","105"]},"In some embodiments, a user may select one of the images to filter the view to depict programs that are similar to the selected one, thereby allowing for a recommendation based on similarity. The similarity can be based on any desired measure, such as genre, actors, series (episodic content, movie sequels, etc.), etc. The recommended content can be differentiated from the other content in many ways, such as the heat map examples discussed above. In other examples, the less popular programs may be removed altogether from the display, or their images may no longer be updated (e.g., resulting in only the recommended programs having the updated images). The selection may be made, for example, by navigating a cursor or mouse pointer and clicking on an image. An intermediate selection may be made as well by hovering a pointer over an image.","In some embodiments, a user's selection of a program may be transmitted to the management server , which can then aggregate the selection to determine which programs are the most popular. A user's selection of a particular program can also be forwarded to other individuals, such as those who have previously identified themselves to be friends with the selecting user. The selection and\/or associated images can also be passed along to social media servers for further user and\/or distribution.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 5","b":["501","501","501","502","502","503"]},"Another client preview implementation may involve channel changes. When the viewer requests to change the channel or switch to viewing a different stream, it can often take a moment for the user device's (e.g., STB's) decoder to locate, tune and decode the stream carrying the new program or service. In some embodiments, when a channel change request is received, the user device may issue a request to retrieve the most recent image for the new channel, and can display that last image while the user device obtains the live feed for that new channel. Alternatively, the user device can request a predetermined number of the captured images (e.g., the last 5 images), and can present those in a timed sequence prior to displaying the current stream. In that manner, the user can be given a preview and advanced context for what is happening in the program, and perceived \u201cdown time\u201d can be minimized. In some embodiments, when a user tunes to a particular channel or service, the client device can automatically request and retrieve captured images for one or more neighboring channels or services (e.g., the next three channels or services that would be displayed should the user press a channel up or channel down key on a remote control three times). These captured images may be stored for use should the user press the channel up\/down key, providing the user with immediate feedback on the channel change.","Another client implementation can involve a user who wishes to view a different portion of the program they are currently watching. The user can be presented with a slider bar representing the timeline of the current program, and can be given the option of dragging a pointer along the timeline to select a position to select a starting point for playing back the program content. As the user drags the pointer along the timeline, the client device can retrieve and display the still image nearest the pointer's position along the timeline. For example, the client device can retrieve and cache still images for content that the user is viewing (and also for content the user is not viewing), and store those still images along with a time identifier indicating the time within the program represented by the still image. As the user moves the pointer to make a selection, the client device can determine the time of the pointer relative to the start of the program, find a still image that is nearest to that time, and display that image to assist the user in selecting a starting point.","In some embodiments, the user may be given the option to rewind and\/or fast forward through content appearing in either of the windows \/. For example, the user can move a cursor through the grid guide to highlight a particular program, and a preview of the program may appear in window . The user may then enter a rewind or fast-forward command, and the client device can map the command to the program highlighted by the cursor, and can retrieve earlier or later images from the captured images and present them to the user in window , thereby allowing the user to fast forward or rewind through a program that is being previewed in the guide.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIGS. 6 and 7","FIG. 6"],"b":["105","105","106","105"],"i":"a . . . n"},"Along with each entry, the  display can include an option to select or deselect each entry. Selected streams may have their captured images made available to clients, while unselected streams might not have their captured images available, and the images being made available can be viewed on another mosaic . With the  implementation, a system administrator at the manager  can inspect the images being made available, and identify problems such as dead streams. Also, the administrator can use the interface to define one or more mosaic profiles, picking and choosing different services to be included in each profile. So, for example, the administrator can define a \u201cfootball\u201d profile, and select the services that are streaming live football games. A client can request that particular profile, and receive captured still images for ongoing football games.","In some embodiments, the management server  may be configured to prevent end clients from identifying which capture server  is capturing particular streams. To obscure that assignment, the management server  may be implemented as a web server with proxying through the cache server , such that client requests are directed to the client , which in turn communicates with the management server .","As noted above, the management server  may be a standalone computing device, or it can be implemented as a process on the same device as one of the capture servers . When implemented as a standalone, it can serve as an aggregation server, collecting information from the various capture servers regarding what is being captured. To collect this information, the server  and capture servers  may use RESTful API's to facilitate the exchange of information being captured. The server  can also serve as a proxy for incoming requests, and distribute the requests on to the various capture servers  when, for example, static images are needed.","In some embodiments, the management server  and capture server  may be identical hardware, both configured to perform either role, and the selection of one or the other role for a particular piece of hardware can be made based on any desired factor, such as demand, estimated need, etc.","In some embodiments, the features above may be implemented using tools such as the Linux operating system, Tomcat and Varnish tools, and image tools such as MPlayer, VLC, Silverlight and\/or ImageMagick to perform the capturing and resizing. Nagios tools may be used to help monitor the performance of the various system components.","Applicants have noted that some optimization parameters may be used in Linux. The Linux soft nofiles parameter may be increased (e.g., set to 16384 files) to increase the number of soft files that a user is permitted to have open at one time, while the Linux hard nofiles parameter may also be similarly increased to allow more open hard files. The queue length (e.g., net.unix.max_dgram_qlen=4096) may be increased to allow for a larger packet queue, and a queue backlog timer (e.g., net.core.netdev_max_backlog=40000) may be increased to allow for more time to process queues.","Various memory values may be increased as well, to allocate more space for handling the processes described herein. The following are example memory settings that can be used in a Linux implementation:","net.ipv4.udp_wmem_min=65536","net.ipv4.udp_rmem_min=65536","net.ipv4.udp_mem=33554432 33554432 33554432","net.core.rmemdefault=33554432","net.core.wmem default=33554432","net.core.rmem_max=33554432","net.core.wmem_max=4096","Ethernet flow control can also be deactivated, so that the manager  can simply drop packets when it gets too far behind in its packet handling, without asking the capture servers  to adjust their capture and\/or reporting rate. Also, the various security measures (e.g., use of keys, duration of keys, use of the cache server  to proxy access to the management server  or capture servers ) can be deactivated as desired.","The various features described above are merely nonlimiting examples, and can be rearranged, combined, subdivided, omitted, and\/or altered in any desired manner. For example, features of the servers can be subdivided among multiple processors and computing devices. The true scope of this patent should only be defined by the claims that follow."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Some features herein are illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings and in which like reference numerals refer to similar elements.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 3A&B"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIGS. 4A&B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 7","FIG. 6"]}]},"DETDESC":[{},{}]}
