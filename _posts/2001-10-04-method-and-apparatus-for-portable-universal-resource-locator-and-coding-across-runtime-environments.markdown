---
title: Method and apparatus for portable universal resource locator and coding across runtime environments
abstract: A method, apparatus, and computer instructions in a data processing system for generating links. The present invention provides a mechanism for constructing a link in a manner that removes the need to rely on hard-coded strings. Generation of a page containing a link to a target is detected. A link is generated using parameters associated with the target.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07134076&OS=07134076&RS=07134076
owner: International Business Machines Corporation
number: 07134076
owner_city: Armonk
owner_country: US
publication_date: 20011004
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["1. Technical Field","The present invention relates generally to an improved data processing system, and in particular, to a method and apparatus for generating links to resources. Still more particularly, the present invention provides a method, apparatus, and computer instructions for generating links to resources that may be used across different runtime environments.","2. Description of Related Art","The Internet, also referred to as an \u201cinternetwork\u201d, is a set of computer networks, possibly dissimilar, joined together by means of gateways that handle data transfer and the conversion of messages from a protocol of the sending network to a protocol used by the receiving network. When capitalized, the term \u201cInternet\u201d refers to the collection of networks and gateways that use the TCP\/IP suite of protocols.","The Internet has become a cultural fixture as a source of both information and entertainment. Many businesses are creating Internet sites as an integral part of their marketing efforts, informing consumers of the products or services offered by the business or providing other information seeking to engender brand loyalty. Many federal, state, and local government agencies are also employing Internet sites for informational purposes, particularly agencies which must interact with virtually all segments of society such as the Internal Revenue Service and secretaries of state. Providing informational guides and\/or searchable databases of online public records may reduce operating costs. Further, the Internet is becoming increasingly popular as a medium for commercial transactions.","Currently, the most commonly employed method of transferring data over the Internet is to employ the World Wide Web environment, also called simply \u201cthe Web\u201d. Other Internet resources exist for transferring information, such as File Transfer Protocol (FTP) and Gopher, but have not achieved the popularity of the Web. In the Web environment, servers and clients effect data transaction using the Hypertext Transfer Protocol (HTTP), a known protocol for handling the transfer of various data files (e.g., text, still graphic images, audio, motion video, etc.). The information in various data files is formatted for presentation to a user by a standard page description language, the Hypertext Markup Language (HTML). In addition to basic presentation formatting, HTML allows developers to specify \u201clinks\u201d to other Web resources identified by a Uniform Resource Locator (URL). A URL is a special syntax identifier defining a communications path to specific information. Each logical block of information accessible to a client, called a \u201cpage\u201d or a \u201cWeb page\u201d, is identified by a URL. The URL provides a universal, consistent method for finding and accessing this information, not necessarily for the user, but mostly for the user's Web \u201cbrowser\u201d. A browser is a program capable of submitting a request for information identified by an identifier, such as, for example, a URL. A user may enter a domain name through a graphical user interface (GUI) for the browser to access a source of content. The domain name is automatically converted to the Internet Protocol (IP) address by a domain name system (DNS), which is a service that translates the symbolic name entered by the user into an IP address by looking up the domain name in a database.","Web pages requested by users may be static or dynamic. With respect to dynamic Web pages, code, such as a Java server page is used to generate this type of dynamic content. In designing dynamic content, embedded links, such as URLs, should be avoided. The reason for this avoidance is that hard-coded strings for links cause additional maintenance. This maintenance occurs because files containing hard-coded strings for links will need to be modified any time a component of the URL changes. Additionally, the use of a hard-coded string also is a problem when content is moved from development, to test and on to production. For example, http:\/\/development.internal.company.com\/Accounts is used in development but may be changed to https:\/\/testing.internal.company.com\/Accounts in testing and further changed to https:\/\/www.company.com\/Banking\/Accounts in production. Currently, when a change in the location of the content occurs, the programmer or developer is required to change each of the URL strings to reflect the current location of the content. Similar changes must be made if the name of the content changes. In some cases, a Web site may contain hundreds or thousands of links, all of which require changes when the Web site is moved. These changes are tedious and time consuming and may be prone to errors.","Therefore, it would be advantageous to have an improved method, apparatus, and computer instructions for generating links that do not rely on hard-coded strings.","The present invention provides a method, apparatus, and computer instructions in a data processing system for generating links. The present invention provides a mechanism for constructing a link in a manner that removes the need to rely on hard-coded strings. Generation of a page containing a link to a target is detected. A link is generated using parameters associated with the target.","With reference now to the figures,  depicts a pictorial representation of a network of data processing systems in which the present invention may be implemented. Network data processing system  is a network of computers in which the present invention may be implemented. Network data processing system  contains a network , which is the medium used to provide communications links between various devices and computers connected together within network data processing system . Network  may include connections, such as wire, wireless communication links, or fiber optic cables.","In the depicted example, server  is connected to network  along with storage unit . In addition, clients , , and  are connected to network . These clients , , and  may be, for example, personal computers or network computers. In the depicted example, server  provides data, such as boot files, operating system images, and applications to clients \u2013. Clients , , and  are clients to server . Network data processing system  may include additional servers, clients, and other devices not shown.","The mechanism of the present invention may be implemented in any of the clients or in the server illustrated in network data processing system . The mechanism of the present invention allows for resources, such as a Java server page, servlet, or other code referencing a link, such as a URL, to avoid hard-coded strings for referencing the link. A servlet is a Java application that runs in a Web server or application server and provides server-side processing, typically to access a database or perform e-commerce processing. Thus, if a resource is moved from one client to another, from one server to another server, or from a client to a server, the link does not have to be modified.","For example, a user may develop a Java server page (JSP) on client  and then move the final version of the JSP to server . A Java server page is an extension to the Java servlet technology that provides a simple programming vehicle for displaying dynamic content on a Web page. The JSP is an HTML page with embedded Java source code that is executed in the Web server or application server. The HTML provides the page layout that will be returned to the Web browser, and the Java provides the processing; for example, to deliver a query to the database and fill in the blank fields with the results.","These types of changes do not require the developer to change and verify all of the links for the JSP. In these examples, the link is dynamically constructed at runtime based on a set of input parameters as will be discussed in more detail below. This type of feature is especially advantageous when a developer works on a set of Web pages, which may include hundreds or thousands of links.","In the depicted example, network data processing system  is the Internet with network  representing a worldwide collection of networks and gateways that use the TCP\/IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high-speed data communication lines between major nodes or host computers, consisting of thousands of commercial, government, educational and other computer systems that route data and messages. Of course, network data processing system  also may be implemented as a number of different types of networks, such as for example, an intranet, a local area network (LAN), or a wide area network (WAN).  is intended as an example, and not as an architectural limitation for the present invention.","Referring to , a block diagram of a data processing system that may be implemented as a server, such as server  in , is depicted in accordance with a preferred embodiment of the present invention. Data processing system  may be a symmetric multiprocessor (SMP) system including a plurality of processors  and  connected to system bus . Alternatively, a single processor system may be employed. Also connected to system bus  is memory controller\/cache , which provides an interface to local memory . I\/O bus bridge  is connected to system bus  and provides an interface to I\/O bus . Memory controller\/cache  and I\/O bus bridge  may be integrated as depicted.","Peripheral component interconnect (PCI) bus bridge  connected to I\/O bus  provides an interface to PCI local bus . A number of modems may be connected to PCI local bus . Typical PCI bus implementations will support four PCI expansion slots or add-in connectors. Communications links to clients \u2013 in  may be provided through modem  and network adapter  connected to PCI local bus  through add-in boards.","Additional PCI bus bridges  and  provide interfaces for additional PCI local buses  and , from which additional modems or network adapters may be supported. In this manner, data processing system  allows connections to multiple network computers. A memory-mapped graphics adapter  and hard disk  may also be connected to I\/O bus  as depicted, either directly or indirectly.","Those of ordinary skill in the art will appreciate that the hardware depicted in  may vary. For example, other peripheral devices, such as optical disk drives and the like, also may be used in addition to or in place of the hardware depicted. The depicted example is not meant to imply architectural limitations with respect to the present invention.","The data processing system depicted in  may be, for example, an IBM e-Server pSeries system, a product of International Business Machines Corporation in Armonk, N.Y., running the Advanced Interactive Executive (AIX) operating system or LINUX operating system.","With reference now to , a block diagram illustrating a data processing system is depicted in which the present invention may be implemented. Data processing system  is an example of a client computer. Data processing system  employs a peripheral component interconnect (PCI) local bus architecture. Although the depicted example employs a PCI bus, other bus architectures such as Accelerated Graphics Port (AGP) and Industry Standard Architecture (ISA) may be used. Processor  and main memory  are connected to PCI local bus  through PCI bridge . PCI bridge  also may include an integrated memory controller and cache memory for processor . Additional connections to PCI local bus  may be made through direct component interconnection or through add-in boards. In the depicted example, local area network (LAN) adapter , SCSI host bus adapter , and expansion bus interface  are connected to PCI local bus  by direct component connection. In contrast, audio adapter , graphics adapter , and audio\/video adapter  are connected to PCI local bus  by add-in boards inserted into expansion slots. Expansion bus interface  provides a connection for a keyboard and mouse adapter , modem , and additional memory . Small computer system interface (SCSI) host bus adapter  provides a connection for hard disk drive , tape drive , and CD-ROM drive . Typical PCI local bus implementations will support three or four PCI expansion slots or add-in connectors.","An operating system runs on processor  and is used to coordinate and provide control of various components within data processing system  in . The operating system may be a commercially available operating system, such as Windows 2000, which is available from Microsoft Corporation. An object oriented programming system such as Java may run in conjunction with the operating system and provide calls to the operating system from Java programs or applications executing on data processing system . \u201cJava\u201d is a trademark of Sun Microsystems, Inc. Instructions for the operating system, the object-oriented operating system, and applications or programs are located on storage devices, such as hard disk drive , and may be loaded into main memory  for execution by processor .","Those of ordinary skill in the art will appreciate that the hardware in  may vary depending on the implementation. Other internal hardware or peripheral devices, such as flash ROM (or equivalent nonvolatile memory) or optical disk drives and the like, may be used in addition to or in place of the hardware depicted in . Also, the processes of the present invention may be applied to a multiprocessor data processing system.","As another example, data processing system  may be a stand-alone system configured to be bootable without relying on some type of network communication interface, whether or not data processing system  comprises some type of network communication interface. As a further example, data processing system  may be a personal digital assistant (PDA) device, which is configured with ROM and\/or flash ROM in order to provide non-volatile memory for storing operating system files and\/or user-generated data.","The depicted example in  and above-described examples are not meant to imply architectural limitations. For example, data processing system  also may be a notebook computer or hand held computer in addition to taking the form of a PDA. Data processing system  also may be a kiosk or a Web appliance. The present invention provides a method, apparatus, and computer instructions for encoding links, which are useable across different runtime environments.","The present invention recognizes that a URL for a dynamically generated Web page in a servlet or JSP includes a protocol, a host name, a path, a servlet alias, and any other applicable parameters. A URL for static content includes a protocol, a document route, a content directory, an optional subdirectory, and a file name. A URL for an active server page (ASP) includes a protocol, a host name, a path, an ASP file name, and any applicable parameters. An ASP is a Web server technology available from Microsoft Corporation that allows for the creation of dynamic interaction sessions with the user. More particularly, an ASP is a Web page that contains HTML and embedded programming code. The mechanism of the present invention provides an application programming interface for URL construction in these examples.","With reference now to , a diagram illustrating data flow in generating links is depicted in accordance with a preferred embodiment of the present invention. Network data processing system  illustrates functional components used to generate URLs in different runtime environments. In this example, network data processing system  includes a server  and a server , which may receive requests from browser , browser , or browser . These browsers are located in clients , , and  in these examples.","The servers are separated from the clients by firewall . Requests received across firewall  are sent to the appropriate server using IP sprayer , which performs load balancing. The IP Sprayer in  balances incoming requests between HTTP servers  and . If one of the servers is taken out of service the other server will continue to serve all incoming requests.","In this example, the data flow begins by the user initiating a request  at browser , which is sent to IP sprayer  (step S). Request  is sent from IP sprayer  to HTTP server  in server  (step S). In the case of a request for static content, HTTP server  may locate and return that content to browser . With respect to a request for dynamic content, those requests are forwarded to application server  for processing (step S).","In this example, application server  includes servlet  and URL constructor . Extensible markup language (XML) files  is accessed by URL constructor . XML is an open standard for describing data. XML uses tags to describe data elements within a file or stream. XML is often used for defining data elements in Web pages, business-to-business documents, or self-contained files. XML tags are defined by the developer or the business application. As such, XML tags can describe virtually any data item, such as product, sales rep, and amount due. HTML uses a similar tag structure as XML. HTML is used primarily for describing the data and its layout on Web pages. HTML requires that a certain set of tags be used. Well-formed HTML is equivalent to XML.","Servlet , may be, for example, a JSP. Servlet  dynamically generates a Web page based on a request. The URLs for this Web page may be generated by URL constructor  in response to an indication of URL constructor  by servlet  (step S). In response, URL constructor  generates and returns a URL to servlet  (step S). The generation of the URL may be performed using data or other imprinting information located in a data structure, such as XML files . This URL returned by URL constructor  may be used to redirect control to another JSP or servlet, such as servlet  in application server , located in server . Application server  also includes URL constructor . XML files  are located within server  for use by URL constructor . This redirection may be handled by HTTP server  in server . Alternatively, the URL returned by URL constructor  to servlet  may be used to construct links on a Web page that is to be returned in response to request .","In this example, servlet  generates Web page , which is sent to HTTP server  (step S). In turn, HTTP server  sends Web page  to IP sprayer  (step S). IP sprayer  returns Web page  to Web browser  in client  for display (step S).","The actual links specified for the Web page in servlet  are not hard-coded in these examples. Instead, these links may contain a call or a base link, which is abstracted in a fashion that allows URL constructor  to dynamically build the URL string based on a set of input parameters located in the call or base link. The specifics of this type of call are described in more detail in  below.","The architecture and arrangement of components illustrated in  are meant as exemplary implementations of the present invention and not as architectural limitations to the present invention. For example, XML files  may be located in another server other than server . URL constructor  may be implemented as a separate application depending on the particular implementation.","Turning now to , a diagram illustrating an application programming interface (API) call is depicted in accordance with a preferred embodiment of the present invention. Call  is an example of an API call which may be made to URL constructor  by servlet . This call may be made in response to encountering a base URL containing parameters that are used to generate the URL that is to be returned in the Web page or used to redirect the process to another servlet or JSP. The base URL may be, for example, http:\/\/servername.com\/path\/resource. The base URL includes, in these examples, the following: host, type, target, file, and parameters. The host is a host name (i.e. web.com). The type is a resource type name, which is, for example, either a Java type, ASP type, external type or file type. The target is a dynamic content application name for Java type, ASP type, external type or optional static content subdirectory name for file type. The file is the file name if the resource is of file type, static content. The parameters are any optional parameters required in the URL supplied with the input parameters that URL constructor , may use to build the URL. In addition to the parameters supplied by the caller, the URL constructor  requires information located in XML configuration files, such as XML files , to provide information.","In this example, the hostname may be obtained from an EnvironmentProfile or a HTTPServletRequest. A default hostname is also provided. For example: String host=anEnvironmentProfile.getHostName( ); or String host request.getServerName( );.","Referring back to , in this example, API call  may take the following form: URLConstructor.construct(host, type, target, file, params). In this example it is URLConstructor.construct(beta.company.com, servlet, BKMainMenu, null, null). The processing in URL constructor  will take the path for type, which is a servlet in this example. URL constructor  then looks up the passed parameters in host (beta.company.com) in HostAliases.xml looking for a match on the name attribute of the host elements in the file. This search is made using XML files . When a match is found the alias element is retrieved. This alias element contains the host name to use and a port number if any. If no match is found, the alias attribute of the default host element is retrieved. In this example, the alias for beta.company.com found in XML files  is beta.company.com:8080.","The target parameter is used as a lookup to retrieve protocol and resource information. URL constructor  looks for a match of target, BkMainMenu, in the name attribute of the alias element. When a match is found, the protocol and resource elements are retrieved from the URL element contained in the alias element with matching name. In this example, the protocol retrieved for BkMainMenu is HTTP and the resource is gas_bank\/BkMainMenu.","Next, the protocol plus \u201c:\/\/\u201d plus the hostname plus \u201c\/\u201d plus resource are appended together in a string buffer. If any query parameters are passed in on the params parameter, a \u201c?\u201d is appended to the string buffer followed by the passed parameters in a params string. The string buffer is then converted to a string and returned to the calling servlet . In the depicted example, the returned string is http:\/\/beta.company.com:8080\/gas_bank\/BkMainMenu.","With reference next to , a flowchart of a process for creating a URL is depicted in accordance with a preferred embodiment of the present invention. The process illustrated in  may be implemented using a URL constructor, such as URL constructor  in .","The process begins by receiving a call from a caller to construct a URL (step ). In these examples, this call may take the form of API call  in . A host name and port are identified using host parameter (step ). Protocol and resource information are identified using target parameter (step ). Next, a URL is built (step ). The URL is built based on information identified from the parameters passed in the call. The URL is returned to the caller (step ) with the process terminating thereafter.","In these examples, XML files  in  contains five XML files, which are used for configuration, static content aliases XML file (StaticContentAliases.xml), dynamic content aliases XML file (DynamicContentAliases.xml), ASP AspPaths.xml, ExternalPaths.xml and HostAliases.xml. In particular, StaticContentAliases.xml defines the resource document root name and the resource directory names based on type. StaticContentAliases is referenced for file types only. DynamicContentAliases.xml defines the protocol and the path and Java resources associated with the application. Lookup reference in DynamicContentAliases.xml starts with the application name. AspPaths.xml identifies the path and ASP file name associated with a given application. AspPaths is referenced for ASP types only. StaticContentAliases.xml is the reference for file types and DynamicContentAliases.xml is the reference for Java types. HostAliases provides an alias including port number, if any, for each machine name. Configuration of an alias on a per machine name basis is useful when directing resources to a specific server for load balancing purposes. HostAliases also provides a default host name.","Turning next to , a diagram illustrating a static content aliases XML file is depicted in accordance with a preferred embodiment of the present invention. StaticContentAliases.xml  is an example of an XML file that may be found in XML files  in .","StaticContentAliases.xml  contains information about the static content naming. Each element in this XML file has a name attribute. The name attribute specifies a category of static content. The attribute DocumentRoot in line  in this example specifies the document root of the static content. The ResourceTypeX attributes specify the content directory names. Some examples are HTML, Java script and media.","With reference now to , a diagram illustrating a dynamic content aliases XML file is depicted in accordance with a preferred embodiment of the present invention. DynamicContentAliases.xml  is an example of an XML file that may be found in XML files  in .","DynamicContentAliases.xml  contains information about specific components of URLs that access dynamic content. In these examples, all lookup in DynamicContentAliases  is based on the application name. The ApplicationName tag in line  is the Web application name in the actual XML file. This application name tag is the target parameter passed to the URL constructor in these examples. An example is BkMainMenu. Protocol, security, and resource information in section  is associated with the application named in line . The protocol tag in line  contains the protocol name. In this environment the protocol will most likely be HTTP. However, the grammar allows for use of other protocol names, such as file transfer protocol (FTP) and mailto. The secure tag in line  indicates whether security is used. The resource tag in line  contains the full resource name including path. Typically this is the name of the servlet or JSP. In the BkMainMenu example the resource is gas bank\/BkMainMenu.","Turning next to , a diagram illustrating an ASP paths XML file is depicted in accordance with a preferred embodiment of the present invention. AspPaths.xml  is an example of an XML file that may be found in XML files  in .","AspPaths.xml  contains the information needed to construct the path to an ASP. The application name found in line  is the name parameter passed to the URL constructor for use in searching AspPaths.xml . This file name and the path in line  is retrieved on lookup of the name attribute in the ASP element. AspPaths.xml  is a particular XML file used for ASPs. Other types of files may be used to handle other types of components. For example, DynamicContentAliases.xml is used to construct the path to a JSP or servlet. HostAliases.xml is used to retrieve the host and port. AspPaths.xml is used to construct the path to an ASP. An entry in HostAliases.xml or another xml configuration file is used to retrieve the host and port for the ASPs. The ASP host is uniquely identified by the xml element. For example, the element IIS-Server may be used to contain the protocol, host and port for ASPS.","With reference now to , a diagram illustrating a host aliases XML file is depicted in accordance with a preferred embodiment of the present invention. HostAliases.xml  is an example of an XML file that may be found in XML files  in .","HostAliases.xml  contains the information needed for the full host name, machine name and port number. Default host name  including port number in line  is retrieved on lookup of the element default_host, default_host name . The other entries in the HostAliases file provide the alias for a given machine. The repeating tag host encloses the alias tag which provides the full host alias name for a given machine name.","Turning next to , a diagram illustrating an external path XML file is depicted in accordance with a preferred embodiment of the present invention. ExternalPaths.xml  is an example of a file used to identify a path to an external resource. The external resource is typically one provided by a third party or a vendor. In this example, each URL tag in ExternalPaths.xml  contains a resource tag which includes the complete URL for a third party or vendor. The vendor name, in these examples, is passed as a target parameter to the URL constructor. This target parameter is used as a lookup in ExternalPaths.xml  to search for a match with the name attribute of a URL tag.","The different XML files illustrated in  are provided for purposes of illustration and are not meant to limit the manner in which configuration and encoding information used to generate URLs for a Web page or redirection is stored. Other formats or other types of files may be used depending on the particular parameters used in generating a link, such as a URL.","Thus, the present invention provides an improved method, apparatus, and computer instructions for generating links in documents, such as Web pages. The mechanism provides for the dynamic generation of links from a base link or URL, which is a set of parameters that are used to generate a link or URL for the Web page or redirection. In this manner, changes, such as changes in the location of resources do not require a programmer or developer to make changes to each and every document. Instead, these changes may be made to a configuration file, such as XML files  in .","Consequently, the present invention reduces the amount of time and reduces the need for a content developer to understand the details of a link for a Web page. In this manner, specific configuration, paths, resources, and servers do not have to be specified by a developer or programmer. This information is placed in a configuration file and the links are generated at runtime using this file. As a result, content may be developed and executed independently of the runtime environment on which the content executes.","It is important to note that while the present invention has been described in the context of a fully functioning data processing system, those of ordinary skill in the art will appreciate that the processes of the present invention are capable of being distributed in the form of a computer readable medium of instructions and a variety of forms and that the present invention applies equally regardless of the particular type of signal bearing media actually used to carry out the distribution. Examples of computer readable media include recordable-type media, such as a floppy disk, a hard disk drive, a RAM, CD-ROMs, DVD-ROMs, and transmission-type media, such as digital and analog communications links, wired or wireless communications links using transmission forms, such as, for example, radio frequency and light wave transmissions. The computer readable media may take the form of coded formats that are decoded for actual use in a particular data processing system.","The description of the present invention has been presented for purposes of illustration and description, and is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. For example, although the illustrated embodiments are directed towards HTML pages, the mechanism of the present invention may be applied to other types of content. The embodiment was chosen and described in order to best explain the principles of the invention, the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, however, as well as a preferred mode of use, further objectives and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
