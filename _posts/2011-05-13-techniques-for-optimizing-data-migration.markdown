---
title: Techniques for optimizing data migration
abstract: Techniques for optimizing data migration are disclosed. In one particular embodiment, the techniques may be realized as a method for optimizing data migration may comprise receiving a request for initiating a data migration application and migrating, via at least one computer processor, at least one data file from a migration list during the data migration application. The method for optimizing data migration may also comprise monitoring the migration of the at least one data file and determining whether the at least one data file is active during the migration of the at least one data file. The method for optimizing data migration may further comprise deferring the migration of the at least one data file based at least in part on a determination that the at least one data file is active and recording information associated with the at least one data file if the at least one data file is active.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08515919&OS=08515919&RS=08515919
owner: Symantec Corporation
number: 08515919
owner_city: Mountain View
owner_country: US
publication_date: 20110513
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE DISCLOSURE","BACKGROUND OF THE DISCLOSURE","SUMMARY OF THE DISCLOSURE","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["The present disclosure relates generally to data migration and, more particularly, to techniques for optimizing data migration.","Data migration relates to the process of transferring data between storage types, formats, and\/or devices. Data migration may be accomplished by mapping data on a source system to a target system. After loading data from the source system to the target system, results are subjected to data verification to determine whether data was accurately mapped from the source system to the target system. During data migration, file access may get serialized between the source system and the target system. Also, during data migration, files may be accessed by other applications when migrated from the source system to the target system. If any changes are made to the files by other applications, many file system operations may be needed to be performed on the source system and the target system. Thus, data migration processes may be inefficient and time-consuming.","In view of the foregoing, it may be understood that there may be significant problems and shortcomings associated with current techniques for data migration.","Techniques for optimizing data migration are disclosed. In one particular embodiment, the techniques may be realized as a method for optimizing data migration may comprise receiving a request for initiating a data migration application and migrating, via at least one computer processor, at least one data file from a migration list during the data migration application. The method for optimizing data migration may also comprise monitoring the migration of the at least one data file and determining whether the at least one data file is active during the migration of the at least one data file. The method for optimizing data migration may further comprise deferring the migration of the at least one data file based at least in part on a determination that the at least one data file is active and recording information associated with the at least one data file if the at least one data file is active.","In accordance with other aspects of this particular exemplary embodiment, the request for initiating the data migration application may comprise at least one of user information, data information, migration information, source system information, target system information, server information, server location, database information, network information, network connection, operating environment information, and directory information.","In accordance with further aspects of this particular exemplary embodiment, the migration list may be generated based at least in part on the request for initiating the data migration application.","In accordance with additional aspects of this particular exemplary embodiment, monitoring the migration of the at least one data file may comprise monitoring a reference identifier associated with the at least one data files.","In accordance with yet another aspect of this particular exemplary embodiment, the reference identifier may comprise a reference counter.","In accordance with still another aspect of this particular exemplary embodiment, the reference count may be incremented based at least in part on a number of applications accessing the at least one data file.","In accordance with other aspects of this particular exemplary embodiment, determining whether the at least one data file is active may be based at least in part on the reference counter.","In accordance with further aspects of this particular exemplary embodiment, the information associated with the at least one active data file may be recorded in a deferred list.","In accordance with additional aspects of this particular exemplary embodiment, the method may further comprise determining whether the data migration application is complete by accessing the migration list.","In accordance with yet another aspect of this particular exemplary embodiment, the method may further comprise migrating the at least one active data file based at least in part on a determination that the data migration application is complete.","In accordance with still another aspect of this particular exemplary embodiment, the method may further comprise determining whether one or more new data files are created during the data migration application.","In accordance with other aspects of this particular exemplary embodiment, the method may further comprise deferring a migration of the one or more new data file.","In accordance with further aspects of this particular exemplary embodiment, the method may further comprise recording information associated with the one or more new data file in a deferred list.","In another particular embodiment, the technique(s) may be realized as a system for optimizing data migration and the system may comprise at least one processor configured to: receive a request for initiating a data migration application and migrate at least one data file from a migration list during the data migration application. The at least one processor may be also configured to monitor the migration of the at least one data file and determine whether the at least one data file is active during the migration of the at least one data file. The at least one processor may be further configured to defer the migration of the at least one data file based at least in part on a determination that the at least one data file is active; and record information associated with the at least one data file if the at least one data file is active. The system may also comprise at least one memory, coupled to the at least one processor, configured to provide the at least one processor with instructions.","In another particular embodiment, the technique(s) may be realized as a system for optimizing data migration comprising an interface module configured to receive a request for initiating a data migration application and a migration module comprising at least one computer processor configured to migrate at least one data file from a migration list during the data migration application. The system for optimizing data migration may also comprise a monitoring module configured to monitor the migration of the at least one data file, determine whether the at least one data file is active during the migration of the at least one data file, and defer a migration of the at least one data file based at least in part on a determination that the at least one data file is active, and a deferred list module configured to store information associated with the at least one data file if the at least one data file is active.","In accordance with other aspects of this particular exemplary embodiment, the monitoring module may be further configured to monitor a reference identifier associated with the at least one data files.","In accordance with further aspects of this particular exemplary embodiment, the reference identifier may comprise a reference counter.","In accordance with additional aspects of this particular exemplary embodiment, the reference count may be incremented based at least in part on a number of applications accessing the at least one data file.","In accordance with yet another aspect of this particular exemplary embodiment, the monitoring module may be configured to determine whether the at least one data file is active is based at least in part on the reference counter.","In accordance with still another aspect of this particular exemplary embodiment, the migration module may be further configured to migrate the at least one active data file based at least in part on a determination that the data migration application is complete.","The present disclosure will now be described in more detail with reference to particular embodiments thereof as shown in the accompanying drawings. While the present disclosure is described below with reference to particular embodiments, it should be understood that the present disclosure is not limited thereto. Those of ordinary skill in the art having access to the teachings herein will recognize additional implementations, modifications, and embodiments, as well as other fields of use, which are within the scope of the present disclosure as described herein, and with respect to which the present disclosure may be of significant utility.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 1","FIG. 1","FIG. 2"],"b":["100","100","100","110","120","140","140","200","110","120","150","140","190","150","140","160","1","140","170","170","180","1","140","110","150"]},"The description below describes network elements, computers, and\/or components of a system and method for optimizing data migration that may include one or more modules. As used herein, the term \u201cmodule\u201d may be understood to refer to computing software, firmware, hardware, and\/or various combinations thereof. Modules, however, are not to be interpreted as software which is not implemented on hardware, firmware, or recorded on a processor readable recordable storage medium (i.e., modules are not software per se). It is noted that the modules are exemplary. The modules may be combined, integrated, separated, and\/or duplicated to support various applications. Also, a function described herein as being performed at a particular module may be performed at one or more other modules and\/or by one or more other devices instead of or in addition to the function performed at the particular module. Further, the modules may be implemented across multiple devices and\/or other components local or remote to one another. Additionally, the modules may be moved from one device and added to another device, and\/or may be included in both devices.","Servers A and B may be communicatively coupled to a SAN (Storage Area Network) fabric . SAN fabric  may support access to storage devices ()-(N) by servers A and B, and by client  via network . Server A may be communicatively coupled to network . According to some embodiments, server A may be a proxy server, a datacenter, and\/or other network device capable of optimizing data migration. Server A may be communicatively coupled to network .","Server A may comprise a data migration module  for optimizing data migration. For example, the data migration module  may be capable of creating a deferred list of active files or newly created files during data migration. In an exemplary embodiment, the data migration module  may monitor transferring of files during data migration. When a file is active (e.g., in use or accessed by other applications) during a data migration, the data migration module  may defer transferring of the file to a target system (e.g., client  or client ) at a later time and add the file identification to the deferred list. When a file is created during a data migration, the data migration module  may defer transferring the newly created file to a target system (e.g., client  or client ) while the newly created file is created on a source system (e.g., server A). The newly created file identification may be added to the deferred list to be transferred at a later time. Thus, the data migration module  may achieve optimization of data migration by reducing an amount of down-time and a number of system operations performed. After the completion of the data migration, the data migration module  may access the deferred list to verify whether one or more files have not been transferred. If one or more files are listed in the deferred list, the data migration module  may transfer the one or more files listed in the deferred list.","The clients - may be communicatively coupled to the server A via the network . For example, the clients - may comprise similar modules (e.g., data migration module ) as the server A in order to optimizing data migration. Data migration may be accomplished between client  and client . Data migration may be also accomplished between clients - and server A.","With reference to computer system  of , modem , network interface , or some other method may be used to provide connectivity from of clients - to network . Clients - may be able to access information on server A or B using, for example, a web browser or other client software. Such a client software may allow clients - to access data hosted by servers A or B or one of storage devices A()-(N), B()-(N), and\/or ()-(N).","Networks  and  may be local area networks (LANs), wide area networks (WANs), the Internet, cellular networks, satellite networks, or other networks that permit communication between clients -, servers A and B, and other devices communicatively coupled to networks  and . Networks  and  may further include one, or any number, of the exemplary types of networks mentioned above operating as a stand-alone network or in cooperation with each other. Networks  and  may utilize one or more protocols of one or more clients - or servers A and B to which they are communicatively coupled. Networks  and  may translate to or from other protocols to one or more protocols of network devices. Although networks  and  are each depicted as one network, it should be appreciated that according to one or more embodiments, networks  and  may each comprise a plurality of interconnected networks.","Storage devices A()-(N), B ()-(N), and\/or ()-(N) may be network accessible storage and may be local, remote, or a combination thereof to server A or B. Storage devices A()-(N), B()-(N), and\/or ()-(N) may utilize a redundant array of inexpensive disks (\u201cRAID\u201d), magnetic tape, disk, a storage area network (\u201cSAN\u201d), an internet small computer systems interface (\u201ciSCSI\u201d) SAN, a Fibre Channel SAN, a common Internet File System (\u201cCIFS\u201d), network attached storage (\u201cNAS\u201d), a network file system (\u201cNFS\u201d), optical based storage, or other computer accessible storage. Storage devices A()-(N), B()-(N), and\/or ()-(N) may be used for backup or archival purposes.","According to some embodiments, clients - may be a smartphone, PDA, desktop computer, a laptop computer, a server, another computer, or another device coupled via a wireless or wired connection to network . Clients - may receive data from user input, a database, a file, a web service, and\/or an application programming interface. According to some embodiments, clients - may be a mobile client such as, for example, a smart phone. Clients - may comprise data migration module  (e.g., similar to the data migration module  in the server A) in order optimizing data migration.","Servers A and B may be application servers, archival platforms, virtualization environment platforms, backup servers, network storage devices, media servers, email servers, document management platforms, enterprise search servers, or other devices communicatively coupled to network . Servers A and B may utilize one of storage devices A()-(N), B()-(N), and\/or ()-(N) for the storage of application data, backup data, or other data. Servers A and B may be hosts, such as an application server, which may process data traveling between clients - and a backup platform, a backup process, and\/or storage. According to some embodiments, servers A and B may be platforms used for backing up, archiving, and\/or migrating data.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 2","b":["200","200","200","212","200","214","217","218","220","222","224","226","228","230","232","233","234","237","238","235","290","235","239","240","242","246","212","228","247","212","230","248","212","250","252"]},"Bus  allows data communication between central processor  and system memory , which may include read-only memory (ROM) or flash memory (neither shown), and random access memory (RAM) (not shown), as previously noted. The RAM may be the main memory into which the operating system and application programs may be loaded. The ROM or flash memory can contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components. Applications resident with computer system  may be stored on and accessed via an non-transitory computer readable medium, such as a hard disk drive (e.g., fixed disk ), an optical drive (e.g., optical drive ), a floppy disk unit , or other storage medium. For example, data migration module  may be resident in system memory .","Storage interface , as with the other storage interfaces of computer system , can connect to a standard computer readable medium for storage and\/or retrieval of information, such as a fixed disk drive . Fixed disk drive  may be a part of computer system  or may be separate and accessed through other interface systems. Modem  may provide a direct connection to a remote server via a telephone link or to the Internet via an internet service provider (ISP). Network interface  may provide a direct connection to a remote server via a direct network link to the Internet via a POP (point of presence). Network interface  may provide such connection using wireless techniques, including digital cellular telephone connection, Cellular Digital Packet Data (CDPD) connection, digital satellite data connection or the like.","Many other devices or subsystems (not shown) may be connected in a similar manner (e.g., document scanners, digital cameras and so on). Conversely, all of the devices shown in  need not be present to practice the present disclosure. The devices and subsystems can be interconnected in different ways from that shown in . Code to implement the present disclosure may be stored in an non-transitory computer-readable storage media such as one or more of system memory , fixed disk , optical disk , or floppy disk . Code to implement the present disclosure may also be received via one or more interfaces and stored in memory. The operating system provided on computer system  may be MS-DOS\u00ae, MS-WINDOWS\u00ae, OS\/2\u00ae, OS X\u00ae, UNIX\u00ae, Linux\u00ae, or another known operating system.","Power manager  may monitor a power level of battery . Power manager  may provide one or more APIs (Application Programming Interfaces) to allow determination of a power level, of a time window remaining prior to shutdown of computer system , a power consumption rate, an indicator of whether computer system is on mains (e.g., AC Power) or battery power, and other power related information. According to some embodiments, APIs of power manager  may be accessible remotely (e.g., accessible to a remote backup management module via a network connection). According to some embodiments, battery  may be an Uninterruptable Power Supply (UPS) located either local to or remote from computer system . In such embodiments, power manager  may provide information about a power level of an UPS.","Referring to , there is shown a data migration module  in accordance with an embodiment of the present disclosure. As illustrated, the data migration module  may contain one or more components including an interface module , a migration module , a monitoring module , and\/or a deferred list module .","The interface module  may comprise at least one processor to provide an interface between users and the data migration module . The interface module  may include a user interface, e.g., a graphical user interface, to receive one or more queries\/requests from the user. The interface module  may provide a separate or a unified graphical user interface. The interface module  may include an Application Programming Interface (API) to interact with the user of the data migration module  in order to optimize data migration. In an exemplary embodiment, the interface module  may present one or more input requests or displays to the user of the data migration module . For example, the interface module  may provide input requests to the user for user information, data information, migration information, source system information, target system information, server information, server location, database information, network information, network connection, operating environment information, directory information, or other requests for information to optimize data migration.","The interface module  may receive one or more queries\/requests from the user to migrate data from a source system (e.g., client ) to a target system (e.g., client ). For example, a user may input a request to the interface module  to migrate data selected by the user. In another exemplary embodiment, a user may input a request to the interface module  to periodically migrate data from a source system to a target system. The user request may include data identification information, source system information, target system information, time information, network information, and\/or other information for optimizing data migration.","The migration module  may comprise at least one processor, transmission device, and\/or reception device for optimizing data migration from a source system (e.g., client ) to a target system (e.g., client ). The migration module  may access selected data for the data migration. The migration module  may create a migration list of data files selected for data migration. In an exemplary embodiment, data may be stored in a hierarchical tree structure with a set of linked nodes. Each of the hierarchical data tree structure may contain a value, a condition, and\/or a data structure. The migration module  may migrate data by traversing the hierarchical data tree structure (e.g., tree-traversal). The migration module  may traverse each node of the hierarchical data tree structure in order to complete the data migration.","During the data migration, the monitoring module  may monitor the data migration process. The monitoring module  may monitor the data migration process by monitoring a reference identifier associated with the data files for data migration. In an exemplary embodiment, a reference identifier associated with the data files for data migration may comprise a reference counter. The reference counter may be configured to have a default value of zero, when no application is accessing the data file. The reference counter may increment based at least in part on a number of applications accessing the data file. For example, the reference counter may increment by one when one application is accessing the data file and the reference counter may increment by two when two applications are accessing the data file, etc.","The monitoring module  may comprise at least one processor to monitor and\/or determine whether one or more data files for data migration are active (e.g., in use or being accessed by other applications) during the data migration. The monitoring module  may monitor a reference identifier associated with the data files for data migration in order to determine whether the data files are active or newly created. In an exemplary embodiment, when one or more data files for data migration are not active, the reference counter may be zero. The monitoring module  may determine that the one or more data files for data migration are inactive when the reference counter is zero. In another exemplary embodiment, when one or more data files for data migration are active, the reference counter may be incremented to one. The monitoring module  may determine that the one or more data files for data migration are active when the reference counter is one. In other exemplary embodiments, during data migration, the reference counter may be incremented to one because data migration application is accessing the one or more data files. Another application may access (e.g., become active) one or more data files during the migration (e.g., transfer) of the one or more data files, and the reference identifier may be incremented to two. Thus, the monitoring module  may determine that the one or more data files for data migration are active when the reference counter is incremented to two.","The monitoring module  may monitor one or more new data files created during the data migration. For example, one or more new data files may be created during data migration to be included in the data migration. The monitoring module  may monitor for one or more new data files created during the data migration.","When the monitoring module  determines that one or more data files are active or new during data migration, the migration module  may defer the transfer of one or more active or new data files during the data migration. The monitoring module  may record information associated with the one or more active or new data files to the deferred list module . The information associated with the one or more active or new data files may comprise file name, file date, file location, file usage, metadata, and\/or other information for identifying the one or more active or new data files. The deferred list module  may store the information associated with the one or more active or new data files in a predetermined format. For example, the deferred list module  may store the information associated with the one or more active or new data files in a hierarchical tree structure, tree chart, flow chart, pedigree chart, and\/or other predetermined format.","After completion of the data migration (e.g., transferring of inactive data files), the migration module  may access the deferred list module  to determine whether one or more data files are active or newly created during the data migration. When the one or more data files are recorded in the deferred list module , the migration module  may migrate the data file recorded in the deferred list module . The migration module  may migrate (e.g., transfer) the one or more data files recorded in the deferred list module , even when the one or more data files are still active.","Referring to , there is depicted a method  for optimizing data migration in accordance with an embodiment of the present disclosure. At block , the method  may begin.","At block , a user may initiate a data migration from a source system (e.g., the client ) to a target system (e.g., the client ). For example, an interface module  may receive a request from a user to initiate a data migration. For example, a user may input a request to the interface module  to migrate data comprises one or more data files selected by the user. The user request may include data identification information, source system information, target system information, time information, network information, and\/or other information for optimizing data migration.","At block , data may be migrated from the source system (e.g., client ) to the target system (e.g., client ). The migration module  may access selected data for the data migration. The migration module  may create a migration list comprising a list of data files to be migrated during the data migration. The migration module  may generate the migration list based at least in part on the request to initiate a data migration. In an exemplary embodiment, data may be stored in a hierarchical tree structure with a set of linked nodes. Each of the hierarchical data tree structure may contain a value, a condition, and\/or a data structure. The migration module  may migrate data by traversing the hierarchical data tree structure (e.g., tree-traversal). The migration module  may traverse each node of the hierarchical data tree structure in order to complete the data migration.","At block , data migration may be monitored. The monitoring module  may monitor the data migration process. The monitoring module  may monitor the data migration process by monitoring a reference identifier associated with the data files for data migration. In an exemplary embodiment, a reference identifier associated with the data files for data migration may comprise a reference counter. The reference counter may be configured to have a default value of zero, when no application is accessing the data file. The reference counter may increment based at least in part on a number of applications accessing the data file. The monitoring module  may monitor the reference counter in order to determine a number of applications accessing the data files for data migration.","At block , the monitoring module  may determine whether one or more data files are active or newly created during data migration. The monitoring module  may monitor a reference identifier associated with the data files for data migration in order to determine whether the data files are active or newly created. In an exemplary embodiment, when one or more data files for data migration are not active, the reference counter may be zero. The monitoring module  may determine that the one or more data files for data migration are inactive when the reference counter is zero. In another exemplary embodiment, when one or more data files for data migration are active, the reference counter may be incremented to one. The monitoring module  may determine that the one or more data files for data migration are active when the reference counter is one. In other exemplary embodiments, during data migration, the reference counter may be incremented to one because the data migration application is accessing the one or more data files. Another application may access (e.g., become active) one or more data files during the migration (e.g., transfer) of the one or more data files, and the reference identifier may be incremented to two. Thus, the monitoring module  may determine that the one or more data files for data migration are active when the reference counter is incremented to two.","The monitoring module  may monitor one or more new data files created during the data migration. For example, one or more new data files may be created during data migration to be included in the data migration. The monitoring module  may monitor for one or more new data files created during the data migration.","The monitoring module  may determine that one or more data files are inactive, the data migration method  may return to block  and transfer the one or more data files. In another exemplary embodiment, the monitoring module  may determine that one or more data files are active, the data migration method  may proceed to block .","At block , the one or more active or newly created data files are deferred from data migration. For example, the migration module  may not transfer the one or more active or newly created data files and defer the transfer of the one or more active or newly created data files at a later time.","At block , information associated with the one or more active or newly created data files may be recorded. For example, the monitoring module  may record information associated with the one or more active or newly created data files to the deferred list module . The information associated with the one or more active or newly created data files may comprise file name, file date, file location, file usage, metadata, and\/or other information for identifying the one or more active or newly created data files. The deferred list module  may store the information associated with the one or more active or newly created data files in a predetermined format. For example, the deferred list module  may store the information associated with the one or more active or newly created data files in a hierarchical tree structure, tree chart, flow chart, pedigree chart, and\/or other predetermined format.","At block , the migration module  may determine whether the data migration is completed. For example, the migration module  may continue to migrate data files listed in the migration list. The migration module  may continue to migrate data files until all the data files listed in the migration list are processed (e.g., transferred or deferred). If the one or more data files remain in the migration list, the data migration method  may proceed to block  to migrate the data files remained on the migration list. If no more data files remain in the migration list, the data migration method  may proceed to block .","At block , data files from the deferred list may be migrated. For example, the migration module  may access the deferred list module  to determine whether one or more data files are recorded in the deferred list module . In an exemplary embodiment, the migration module  may determine that one or more data files are recorded in the deferred list module . The migration module  may migrate the data file recorded in the deferred list module , as described above with reference to block . The migration module  may migrate the data file recorded in the deferred list module  even if the data file is active.","At block , the method  may end.","At this point it should be noted that optimizing data migration in accordance with the present disclosure as described above typically involves the processing of input data and the generation of output data to some extent. This input data processing and output data generation may be implemented in hardware or software. For example, specific electronic components may be employed in a data migration module or similar or related circuitry for implementing the functions associated with optimizing data migration in accordance with the present disclosure as described above. Alternatively, one or more processors operating in accordance with instructions may implement the functions associated with optimizing data migration in accordance with the present disclosure as described above. If such is the case, it is within the scope of the present disclosure that such instructions may be stored on one or more non-transitory processor readable storage media (e.g., a magnetic disk or other storage medium), or transmitted to one or more processors via one or more signals embodied in one or more carrier waves.","The present disclosure is not to be limited in scope by the specific embodiments described herein. Indeed, other various embodiments of and modifications to the present disclosure, in addition to those described herein, will be apparent to those of ordinary skill in the art from the foregoing description and accompanying drawings. Thus, such other embodiments and modifications are intended to fall within the scope of the present disclosure. Further, although the present disclosure has been described herein in the context of a particular implementation in a particular environment for a particular purpose, those of ordinary skill in the art will recognize that its usefulness is not limited thereto and that the present disclosure may be beneficially implemented in any number of environments for any number of purposes. Accordingly, the claims set forth below should be construed in view of the full breadth and spirit of the present disclosure as described herein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In order to facilitate a fuller understanding of the present disclosure, reference is now made to the accompanying drawings, in which like elements are referenced with like numerals. These drawings should not be construed as limiting the present disclosure, but are intended to be exemplary only.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
