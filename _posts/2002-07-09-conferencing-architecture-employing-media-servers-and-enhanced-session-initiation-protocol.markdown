---
title: Conferencing architecture employing media servers and enhanced session initiation protocol
abstract: A conferencing system that can access advanced conferencing features while following essentially the same call flow as conventional conferencing systems. The conferencing system includes a computer network, and at least one conferencing application server, at least one media server, and at least one user agent connected to the network. The conferencing application server establishes and manages multimedia conferences by engaging in Session Initiation Protocol (SIP) signaling with the user agents and the media server. Once the conference is established, the media server generates multimedia data such as audio data and conveys the data to the conference participants. In order to access advanced conferencing features, the conferencing system employs an enhanced SIP signaling technique including a conferencing Application Programming Interface (API) implemented by incorporating Extensible Mark-up Language (XML) messages in the bodies of respective SIP request/response messages. The XML messages are incorporated in the SIP request/response message bodies to convey conference specific commands and/or parameters that cannot be easily described via the Session Description Protocol (SDP).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07590692&OS=07590692&RS=07590692
owner: Dialogic Corporation
number: 07590692
owner_city: Montreal, Quebec
owner_country: CA
publication_date: 20020709
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application claims priority of U.S. Provisional Patent Application No. 60\/303,837 filed Jul. 9, 2001 entitled CONFERENCING ARCHITECTURE EMPLOYING MEDIA SERVERS AND ENHANCED SESSION INITIATION PROTOCOL.","N\/A","The present invention relates generally to conferencing systems, and more specifically to techniques for accessing enhanced conferencing capabilities.","Conferencing systems are known that employ the Session Initiation Protocol (SIP) to establish and manage multimedia sessions (also known as \u201cconferences\u201d) over computer networks. For example, a conference having zero or more conference participants may be established over a network by a conferencing application server, which communicates with each conference participant and at least one media server on the network using SIP call control signaling. In the event a prospective conference participant wishes to join the conference, the prospective participant sends a SIP request message to the conferencing application server. After receiving the SIP request message, the conferencing application server sends a corresponding SIP request message to at least one media server assigned to the conference.","In the event the conference Universal Resource Identifier (URI) exists on the media server, the media server sends a SIP 200 OK message to the conferencing application server to indicate that the prospective conference participant has been successfully joined to the conference. If the conference URI does not exist on the media server, then the desired conference is created before the media server sends the SIP 200 OK message. The conferencing application server then sends a corresponding SIP 200 OK message to the conference participant to indicate the participant's success in joining the conference. Next, the conference participant sends a SIP ACK message to the conferencing application server to acknowledge its receipt of the SIP 200 OK message, and the conferencing application server sends a corresponding SIP ACK message to the media server. Because the prospective conference participant has successfully joined the conference, a multimedia session is established during which multimedia data such as audio data is generated and conveyed between the media server and the conference participant.","In the event the conference participant wishes to be removed from the conference, the participant sends a SIP BYE request message to the conferencing application server, which in turn conveys the SIP BYE request to the media server. Next, the media server sends a SIP 200 OK message to the conferencing application server, which in turn conveys the SIP 200 OK message to the conference participant, thereby indicating that the participant has been successfully removed from the Conference. In this way, the conferencing application server can both create a multimedia conference and control prospective conference participants' access to the conference.","Although the above-described SIP call control signaling technique may be employed to establish and manage multimedia conferences, the technique has drawbacks in that it is generally not amenable to establishing and managing conferences that provide advanced conferencing features such as notification of conference events (e.g., the identification of conference participants whose voices are mixed into the audio output of the conference) or packet mixing for determining the scope of multimedia data delivery within a conference. The above-described technique also provides no mechanism for detecting and reporting media events such as DTMF\/MF digits input by conference participants. Such events are commonly used to invoke advanced conferencing features. This is because conventional SIP call control signaling techniques employing SIP INVITE\/BYE request messages typically do not provide interfaces that can easily access such advanced conferencing features.","It would therefore be desirable to have a conferencing system for establishing and managing multimedia conferences over computer networks. Such a conferencing system would employ enhanced call control signaling techniques to provide a conferencing application server\/media server interface capable of accessing advanced conferencing features It would also be desirable to have a conferencing system that can access advanced conferencing features while following essentially the same call flow as conventional conferencing systems.","In accordance with the present invention, a conferencing system is provided that can access advanced conferencing features while following essentially the same call flow as conventional conferencing systems. Benefits of the presently disclosed conferencing system are achieved by employing a conferencing application programming interface based on the Extensible Mark-up Language (XML) in conjunction with Session Initiation Protocol (SIP) call control signaling to create full-featured conferencing applications.","In one embodiment, the conferencing system comprises a computer network including a signaling plane and a media plane, and at least one conferencing application server, at least one media server, and at least one user agent communicably connected to the network. The conferencing application server is configured to establish and manage at least one multimedia conference by engaging in SIP signaling with one or more of the user agents wishing to participate in the conference and the media server in the signaling plane of the network. Once the multimedia conference is established, the media server generates multimedia data such as audio data and conveys the data to the conference participants in the media plane of the network.","In the presently disclosed embodiment, the conferencing system employs a SIP INVITE signaling method to create the multimedia conference and subsequently join prospective participants to the conference. The conferencing system also employs a SIP BYE signaling method to remove participants from the conference and\/or terminate the conference. In order to access advanced conferencing features that may be inaccessible via conventional SIP call control signaling methods, the conferencing system employs an enhanced SIP signaling technique including a conferencing Application Programming Interface (API) that facilitates the interaction between the conferencing application server and the media server in the network signaling plane. The enhanced SIP signaling technique including the conferencing API is implemented by incorporating XML messages, and messages based on the Session Description Protocol (SDP), in the bodies of respective SIP request and response messages. The XML messages are incorporated in the SIP request\/response message bodies to convey conference specific commands and\/or parameters that cannot be easily described via the SDP.","By incorporating XML payloads into SIP requests\/responses to signal the addition of advanced conferencing features, the conferencing system can provide advanced conferencing capabilities without significantly modifying the signal and media flows through the network.","Other features, functions, and aspects of the invention will be evident from the Detailed Description of the Invention that follows.","U.S. Provisional Patent Application No. 60\/303,837 filed Jul. 9, 2001 entitled CONFERENCING ARCHITECTURE EMPLOYING MEDIA SERVERS AND ENHANCED SESSION INITIATION PROTOCOL is incorporated herein by reference.","A conferencing system is disclosed that is capable of accessing advanced conferencing features, which cannot be easily accessed via conventional call control signaling methods. The presently disclosed conferencing system accesses such advanced conferencing features via a conferencing application programming interface that allows enhanced call control signaling techniques.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","101","108","110","108","112","1","112","114","116","110","118","1","118","100","102","104","106","1","106","102","104","106","1","106","108","104","106","1","106","110","101"]},"The conferencing application server  is configured to create at least one multimedia session (\u201cconference\u201d), enable prospective conference participants to join the conference, and manage the overall operation of the conference within the conferencing system . The media server  is configured to provide requested conferencing services to the conference participants, which may comprise one or more of the user agents .-.n. Each user agent .-.n is capable of requesting admission to\/removal from the conference, and engaging in the multimedia session with the media server .","It is understood that the conferencing application server , the media server , and the user agents .-.n comprise respective components in the computer network  such as server computers, client computers, or software processes running on network nodes. It is further understood that the user agents .-.n may comprise Internet devices such as SIP phones and\/or non-Internet devices such as Public Switched Telephone Network (PSTN) phones. For example, one or more of the user agents .-.n may comprise a PSTN phone configured to access the conference through a PSTN\/Internet Protocol (IP) gateway device.","Moreover, the conferencing application server , the media server , the user agents .-.n, and the gateway may comprise respective logical devices, two or more of which may be included in the same physical device. For example, the conferencing application server  and one of the user agents .-.n may comprise respective logical devices included in the same SIP phone or desktop computer (e.g., a WINDOWS XP\u2122 SIP client and a media player). Alternatively, the conferencing application server , the media server , and the PSTN\/IP gateway may comprise respective logical devices included in the same conferencing server device. The conferencing application server , the media server , and the user agents .-.n are depicted in  as separate devices for clarity of discussion.","Specifically, the conferencing application server  creates one or more conferences and manages the overall operation of the conferences by engaging in call control signaling using a predetermined signaling protocol with one or more of the user agents .-.n and the media server  in the signaling plane  of the network . In the presently disclosed embodiment, the predetermined signaling protocol is the Session Initiation Protocol (SIP), however, it is understood that any suitable signaling protocol for session initiation may be employed. The Session Initiation Protocol is described in Internet Engineering Task Force (IETF) Request For Comments (RFC) 2543 (1999), which is incorporated herein by reference. As shown in , the conferencing application server  engages in SIP signaling with the user agents .-.n over the respective control legs .-.n, and with the media server  over the control leg , in the signaling plane . As a result, the media server  is conceptually invisible to the user agents .-.n in the network signaling plane .","Further, the media server  generates and conveys multimedia data such as audio data over the conference legs .-.n in the media plane  of the network  according to the Real Time Transport Protocol (RTP) or any other suitable protocol for transmitting multimedia data. The Real Time Transport Protocol is described in IETF RFC 1889 (1996), which is incorporated herein by reference. In the presently disclosed embodiment, the conferencing application server  is not involved in the processing of media flows between the media server  and the respective user agents .-.n in the network media plane .","The media server  is further configured to provide notice of asynchronous events (e.g., the identification of conference participants whose voices are mixed into the audio output of the conference) over at least one control leg in the signaling plane , e.g., the control leg , which may comprise a HyperText Transfer Protocol (HTTP) side channel. In alternative embodiments, the media server  may employ SIP INFO or NOTIFY signaling methods over a suitable control leg, e.g., the control leg , to provide notice of such asynchronous events to the conferencing application server .","As described above, the conferencing application server  is configured to create one or more multimedia conferences within the conferencing system , and enable prospective conference participants to join the conferences. In the presently disclosed embodiment, the conferencing application server  employs a SIP INVITE signaling method to create a conference and join prospective participants to the conference, and a SIP BYE signaling method to remove conference participants from the conference.","The SIP INVITE\/BYE signaling methods employed by the conferencing application server  will be better understood with reference to the following first illustrative example and . In this first example, Participant  (e.g., the user agent ..; see ) represents a prospective conference participant wishing to join a multimedia conference. To that end, Participant  sends a SIP request message  (see ) to the Control Agent (e.g., the conferencing application server ; see ) over a signaling control leg indicating its desire to join the conference, which is identified by a public conference Universal Resource Identifier (URI). Universal Resource Identifiers are described in IETF RFC 2396 (1998), which is incorporated herein by reference.","For example, the SIP request URI for the desired conference may have the following format:\n\n","After receiving the SIP request message , the Control Agent sends a corresponding SIP request message  to the Media Server over the signaling control leg. In this illustrative example, the SIP request message  is directed to a non-public conference URI identifying the desired conference. In this way, network security is enhanced because the non-public portion of the SIP control interface for the conference is not exposed to Participant  or any other prospective conference participant. It is noted that network security can be further enhanced by providing a secure link between the Control Agent and the Media Server to prevent unauthorized entities from creating conferences on the Media Server. For example, security mechanisms that may be employed to provide the secure link between the Control Agent and the Media Server include authenticated SIP, Access Control Lists (ACLs), or any other suitable security mechanism.","In the event the Media Server fails to recognize the conference URI because the URI does not currently exist on the Media Server, the Media Server creates the desired conference according to the Session Initiation Protocol. If the conference URI already exists on the Media Server, then the Media Server sends a SIP 200 OK message  to the Control Agent to indicate that Participant  has been successfully joined to the conference. The Control Agent then sends a corresponding SIP 200 OK message  to Participant , and a SIP ACK message  to the Media Server to acknowledge its receipt of the SIP 200 OK message . Next, Participant  sends a SIP ACK message  to the Control Agent to acknowledge its receipt of the SIP 200 OK message . Because the desired conference has been successfully created and Participant  has been successfully joined to the conference, an RTP session  is established to allow multimedia data such as audio data to be generated and conveyed between Participant  and the Media Server over a suitable media conference leg.","In this illustrative example, if Participant  wishes to be removed from the conference, then Participant  sends a SIP BYE request message  to the Control Agent, which then conveys a SIP BYE request message  to the Media Server. Next, the Media Server sends a SIP 200 OK message  to the Control Agent, which in turn conveys a SIP 200 OK message  to Participant  to indicate that Participant  has been successfully removed from the conference.","It should be appreciated that the SIP INVITE\/BYE signaling methods in the above-described first illustrative example may be employed to manage relatively simple conferencing applications such as applications that use the default conferencing parameters provisioned on the Media Server. For example, a relatively simple conferencing application may comprise a 3-way calling application involving three conference participants (e.g., Participants - of ) with no advanced conferencing features. In such simple conferencing applications, required conference specific commands and\/or parameters are typically incorporated in the bodies of SIP request and\/or SIP response messages using the Session Description Protocol (SDP).","In order to access advanced conferencing features that are normally inaccessible via conventional SIP call control signaling techniques, the conferencing system  (see ) employs an enhanced SIP signaling technique including a conferencing Application Programming Interface (API) that facilitates the interaction between the conferencing application server  and the media server  in the network signaling plane . The enhanced SIP signaling technique includes incorporating at least one command in a predetermined payload format in the bodies of SIP request and\/or SIP response messages to convey conference specific commands and parameters that cannot be easily described using the SDP. In the presently disclosed embodiment, the predetermined payload format is a form of the Extensible Mark-up Language (XML). It is understood, however, that any suitable form of XML or non-XML language (e.g., a suitable binary representation or text scripting language) may be employed. It is noted that the formal definition of the document structure, i.e., the XML Document Type Definition (DTD), for the XML messages incorporated in the SIP requests\/responses is herein referred to as \u201cMediaServerXML\u201d. Accordingly, the conference specific commands and\/or parameters for achieving enhanced conferencing control are incorporated in the bodies of SIP request\/response messages as MediaServerXML payloads.","Specifically, the presently disclosed conferencing API exploits the ability of the Session Initiation Protocol to carry payloads as multi-part MIME message bodies. In the presently disclosed embodiment, the MIME type used to describe the MediaServerXML payloads is \u201capplication\/xml\u201d. Further, each MediaServerXML payload typically comprises a single request or response, and the size of each MediaServerXML payload is approximately equal to that of a typical SDP payload.","As in the first example above, SIP request messages incorporating MediaServerXML payloads are conveyed in the conferencing system  from the conferencing application server  to the media server  via the SIP INVITE signaling method. In the presently disclosed embodiment, each SIP request message carries at least one MediaServerXML payload. Further, in order to simplify the development of the conferencing application and reduce the size of the MediaServerXML payload, one or more of the MediaServerXML request attributes may take on default values or be defined as \u201c#IMPLIED\u201d, thereby allowing these attributes to be omitted from the request if they are subsequently not needed.","Moreover, at least one MediaServerXML payload can be carried from the media server  back to the conferencing application server  in the body of a SIP response message (e.g., a SIP 200 OK message) corresponding to the above-mentioned SIP request message. In the presently disclosed embodiment, MediaServerXML payloads carried by SIP response messages are defined in the XML DTD using a relatively simple and concise form of XML that makes limited use of nesting. This makes the SIP response messages easier to parse, which obviates the need for a full XML parser on the conferencing application server .","It is noted that conferencing applications can be configured to subscribe to event notifications using MediaServerXML commands. For example, MediaServerXML commands included in SIP request messages may be employed to specify events of interest (e.g., the identification of conference participants whose voices are mixed into the audio output of the conference) and how notifications of these events are to be performed. Moreover, the event notifications may be delivered via HTTP (e.g., over the control leg ; see ) or using the SIP INFO or SIP NOTIFY signaling methods (e.g., over the control leg ; see ). If the event notifications are delivered via HTTP, the conferencing application may employ a MediaServerXML command to define a Uniform Resource Locator (URL) as the target for the HTTP request (i.e., the \u201chttp\/get\u201d request, as mentioned below), and the format of the event information. Further, the conferencing application may use the above-described uniqueIdentifier and a SIP Call ID to tie the HTTP event notification to the corresponding conference.","The presently disclosed conferencing API enables enhanced SIP signaling techniques to perform conferencing functions including but not limited to creating a conference, modifying a conference, joining participants to a conference, modifying a conference leg, playing audio, recording audio, and the detection and notification of media events such as DTMF\/MF digits. It should be appreciated that these conferencing functions are described below for purposes of illustration.","Creating a Conference","An enhanced SIP signaling technique employed by the conferencing system  (see ) to create a conference will be better understood with reference to the following second illustrative example and . It is noted that the conference is created using a dedicated control leg that has no associated media flow. This ensures that the conference remains in existence even if one or more of the conference participants leaves the conference.","As shown in , Participant  (e.g., the user agent .; see ) sends a SIP request message  to the Control Agent (e.g., the conferencing application server ; see ) to create the conference. After receiving the SIP request message , the Control Agent sends a corresponding SIP request message  to a Media Server (e.g., the media server ; see ) over the dedicated control leg (e.g., the signaling control leg ; see ).","In accordance with the presently disclosed conferencing API, the SIP request messages  and  (see ) comprise MediaServerXML payloads including conference specific commands and parameters for creating the desired conference. For example, a MediaServerXML payload including the following XML request message (\u201c<create_conference>\u201d) may be employed to request the creation of a conference having up to ten (10) conference participants (or more if sufficient resources are available), and to subscribe to the \u201cjoin\u201d and \u201cleave\u201d conference events:",{"@attributes":{"id":"p-0044","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xml version=\u201c1.0\u201d?>"]},{"entry":[{},"<MediaServerXML version=\u201c1.0\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<request>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<create_conference maxparties=\u201c10\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<subscribe method=\u201chttp\/get\u201d"]},{"entry":[{},"target=http:\/\/appserver.provder.net\/cgi\/conf.pl?conf=$"]},{"entry":[{},"conf&amp; leg=$leg&amp; event=$event&amp; value=$value>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<events>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<join\/>"]},{"entry":[{},"<leave\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/events>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/subscribe>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/create_conference>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/request>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/MediaServerXML>."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In this second example, the variables $conf, $leg, $event, and $value are expanded to form a URL comprising the target for the http\/get request. Specifically, the $conf variable is set to the value of the unique conference identifier specified by the conferencing application in the SIP request URI (i.e., $conf=uniqueIdentifier). This provides a way of associating the conference with event notifications sent on the HTTP side channel. Further, the $leg variable is set to the unique SIP Call ID for the leg on which the event occurred. Moreover, the $event variable describes the type of event that occurred (e.g., the \u201cjoin\u201d or \u201cleave\u201d conference event). Finally, the $value variable includes the value associated with the event. Because there is no value associated with either one of the \u201cjoin\u201d or \u201cleave\u201d conference events, the $value variable is empty in this example.","Next, the Media Server sends a SIP 200 OK response message  to the Control Agent over the dedicated control leg to indicate that the desired conference has been successfully created. In the presently disclosed embodiment, a SIP response message issued in response to a SIP request message including at least one MediaServerXML payload may also include at least one MediaServerXML payload. For example, the following XML response message may be employed in the SIP 200 OK message :",{"@attributes":{"id":"p-0047","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xml version=\u201c1.0\u201d?>"]},{"entry":[{},"<MediaServerXML version=\u201c1.0\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<response request=create_conference code=\u201c200\u201d text=\u201cOK\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/MediaServerXML>,"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"b":["308","306"]},"In order for Participant  to join the existing conference, the Control Agent sends a SIP request message  to the Media Server, which sends a SIP 200 OK response message  to the Control Agent to indicate that Participant  has been successfully joined to the conference. The Control Agent then sends a SIP 200 OK response message  to Participant . Next, Participant  sends a SIP ACK message  to the Control Agent, which in turn sends a SIP ACK message  to the Media Server, thereby acknowledging the receipt of the SIP 200 OK messages  and . As a result, an RTP session  is established between Participant  and the Media Server over a suitable media conference leg.","In the event Participant  wishes to leave the conference, SIP BYE request messages  and  are sent, and SIP 200 OK messages  and  are generated, as similarly described with reference to the first example above. It should be appreciated that additional conference participants such as Participants - may be joined to\/removed from the conference, in accordance with the call flow depicted in .","Modifying a Conference","In the presently disclosed embodiment, the conferencing application server  (see ) is capable of modifying an existing conference by sending a SIP \u201cre-INVITE\u201d request message including an XML request message with conference parameters for modifying the conference to the media server . For example, the following XML message (\u201c<modify_conference>\u201d) may be included in the body of a SIP re-INVITE request message to change the size of an existing conference to 14 conference participants:",{"@attributes":{"id":"p-0051","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xml version=\u201c1.0\u201d>"]},{"entry":[{},"<MediaServerXML version=\u201c1.0\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<request>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<modify_conference maxparties=\u201c14\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/request>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/MediaServerXML>."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"It is noted that the <modify_conference> XML message can be used even if the conference were not created using the above-mentioned <create_conference> XML message. As a result, the conferencing application can modify conference parameters regardless of the initial conferencing requirements.","Moreover, the following illustrative XML message may be included in the body of a SIP response message issued in response to the above SIP request message including the illustrative",{"@attributes":{"id":"p-0054","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<modify_conference> XML message:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xml version=\u201c1.0\u201d>"]},{"entry":[{},"<MediaServerXML version=\u201c1.0\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<response request=\u201cmodify_conference\u201d code=\u201c200\u201d text=\u201cOK\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/MediaServerXML>,"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":[{},{}]},"As described above, one or more conference participants may be joined to a conference by directing a suitable SIP request message to the conference URI. In order to provide advanced conferencing features while joining the conference participants, an XML message requesting the advanced conferencing features is included in the body of the SIP request message. For example, the following XML message (\u201c<add_leg>\u201d) may be included in the SIP request message body to add a leg to an existing conference:",{"@attributes":{"id":"p-0056","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d?>"},{"entry":"<MediaServerXML version=\u201c1.0\u201d>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<request>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<add_leg mixmode=\u201cparked\u201d toneclamp=\u201cno\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<subscribe method=\u201chttp\/get\u201d"]},{"entry":[{},"target=http:\/\/appserver.provider.net\/cgi\/cont.pl?conf=$"]},{"entry":[{},"conf&amp; event=$event&amp; value=$value>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<events>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<digits collectmask=\u201c6789\u201d numdigits=\u201c1\u201d\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/events>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/subscribe>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/add_leg>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/request>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/MediaServerXML>."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"It is noted that the above <add_leg> XML message includes conference parameters for providing advanced mix-mode and tone-clamp conferencing features and notification of specific Dual Tone Multi-Frequency (DTMF) events. Further, as described above, the variables $conf, $leg, $event, and $value are expanded to form a URL comprising the target for the http\/get request. Moreover, in this XML request message, the $event variable is set to \u201cDTMF\u201d, and the $value variable includes a corresponding DTMF digit string.","Modifying a Conference Leg","In the presently disclosed embodiment, the conferencing application server  (see ) is capable of modifying an existing conference leg (e.g., changing the packet mixing mode or event subscription) by sending a SIP re-INVITE request message including an XML message with conference parameters for modifying the leg to the media server . For example, the following XML message (\u201c<modify_leg>\u201d) may be included in the body of a SIP re-INVITE request message to change the packet mixing mode:",{"@attributes":{"id":"p-0059","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xml version=\u201c1.0\u201d>"]},{"entry":[{},"<MediaServerXML version=\u201c1.0\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<request>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<modify_leg mixmode=\u201clisten\u201d>"]},{"entry":[{},"<\/modify_leg>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/request>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/MediaServerXML>."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"For example, the illustrative <modify_leg> XML message above may be used to change the packet mixing mode to \u201clisten\u201d to assure that the multimedia data input of the conference participant on that leg is \u201cmuted\u201d and not mixed into the conference.","Playing Audio","In the presently disclosed embodiment, there are at least two SIP call control signaling methods for playing audio within the conferencing system  (see ). The first call control signaling method requires at least one new or existing conference leg having an associated media flow. The scope of the audio data within the conference is determined by the current mix-mode setting for that conference leg. Specifically, a mix-mode value of \u201cpreferred\u201d indicates that the audio input from the conference leg is to be mixed and delivered to all of the conference participants, and a mix-mode value of \u201cparked\u201d indicates that the conference leg's audio Input\/Output (I\/O) are isolated from the conference. For example, the mix-mode may be set using either the <add_leg> or <modify_leg> XML request message, as described above. It is noted that in order to play audio data to the entire conference, the \u201cvirtual\u201d attribute on the conference leg is set to \u201cyes\u201d. Finally, a SIP re-INVITE request message including a MediaServerXML payload \u201c<play>\u201d (as described below) is sent to the media server .","The \u201cparked\u201d mix-mode is useful when an announcement or an Interactive Voice Response (IVR) script is desired before joining a prospective conference participant to the conference. Specifically, a single SIP request message directs the prospective participant to the conference, but completely isolates the prospective participant from the conference. After the announcement or the IVR script is completed, the conferencing application sends a SIP request message including a <modify_leg> XML message to enable the prospective participant to join the conference. This reduces the amount of SIP signaling between the conferencing application server  and the prospective conference participant because there is no need to first \u201cINVITE\u201d the prospective participant to the conference and then re-INVITE the participant to the conference.","The second call control signaling method can be used to play audio to the entire conference. It is noted, however, that the second signaling method requires a conferencing system with a dedicated control leg having no associated media flow. Specifically, the conferencing application sends a SIP re-INVITE request message including the <play> XML message (as described below) to the Media Server over the dedicated control leg. Because there is no media flow associated with the dedicated control leg, it is understood that the audio is to be played to the entire conference.","For example, the following <play> XML message may be included in the body of a SIP request message sent by the conferencing application server  to the media server  to play audio data within the conferencing system  (see ):",{"@attributes":{"id":"p-0065","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d>"},{"entry":"<MediaServerXML version=\u201c1.0\u201d>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<request>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<play url=http:\/\/audio.provider.net\/greeting.g711"]},{"entry":[{},"encoding=\u201culaw\u201d \/>"]},{"entry":[{},"<subscribe method=\u201chttp\/get\u201d"]},{"entry":[{},"target=\u201chttp:\/\/appserver.provider. net\/cgi\/conf.pl?conf=$co"]},{"entry":[{},"nf&amp; event=$event&amp; value=$value\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<events>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<done\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/events>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/subscribe>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/request>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/MediaServerXML>."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"It is noted that the <play> XML message has two attributes, particularly, a first attribute specifying the source URL of the audio data (\u201curl=http:\/\/audio.provider.net\/greeting.g711\u201d) and a second attribute that specifies the encoding of the audio data (\u201cencoding=\u2018ulaw\u2019\u201d). Further, in order to receive notification that the audio playing is completed, the <play> XML message subscribes to the \u201c<done>\u201d event, as shown above. In this case, the value of $event is \u201cdone\u201d, and $value includes a text string describing how the <play> request completed, e.g., End of File (EOF).","Recording Audio","In the presently disclosed embodiment, the SIP call control signaling methods employed to record audio data are similar to the above-described signaling methods used to play audio. For example, the mix-mode for a particular conference leg may be set to \u201clisten\u201d, and the virtual attribute on the conference leg may be set to \u201cyes\u201d, using either the <add_leg> or <modify_leg> XML request message. Next, a SIP re-INVITE request message including a MediaServerXML payload \u201c<record>\u201d (see below) is sent to the media server . For example, the following <record> XML message may be included in the body of a SIP request message sent by the conferencing application server  to the media server  to record audio data within the conferencing system  (see ):",{"@attributes":{"id":"p-0068","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d>"},{"entry":"<MediaServerXML version=\u201c1.0\u201d>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<request>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<record url=\u201cfile:\/\/\/\/audio\/conf.gsm\u201d encoding=\u201cms_gsm\u201d \/>"]},{"entry":[{},"<subscribe method=\u201chttp\/get\u201d"]},{"entry":[{},"target=\u201chttp:\/\/appserver.provider.net\/cgi\/conf.pl?conf=$co"]},{"entry":[{},"nf&amp;event=$event&amp;value$=value\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<events>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<done\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/events>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/subscribe>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/request>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/MediaServerXML>."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In alternative embodiments, the conferencing application may issue the <record> XML request message on a dedicated control leg having no associated media flow. Because no media flow is associated with the dedicated control leg, it is understood that the entire conference audio output is to be recorded. It is noted that local URLs using the \u201cfile:\/\/ . . . \u201d format may be used to identify the location of the source of the recording. Alternatively, the HTTP format may be employed.","In order to receive notification that the audio recording is completed, the conferencing application subscribes to the <done> event, as shown above. In this case, the value of the $event variable is \u201cdone\u201d, and the value of the $value variable includes text describing how the <record> request completed, e.g., \u201cend_silence\u201d indicating that trailing silence was detected.","It will further be appreciated by those of ordinary skill in the art that modifications to and variations of the above-described conferencing architecture may be made without departing from the inventive concepts disclosed herein. Accordingly, the invention should not be viewed as limited except as by the scope and spirit of the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWING","p":["The invention will be more fully understood with reference to the following Detailed Description of the Invention in conjunction with the drawings of which:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 3","FIG. 1"]}]},"DETDESC":[{},{}]}
