---
title: Music recognition method and system based on socialized music server
abstract: A music recognition method and system for retrieving metadata based on content associated with a media file. The system includes a music recognition plug-in module associated with a music management unit that communicates with a centralized music repository. The unknown media file may be scanned for collecting a snippet and sent to the music repository in response to a user request for identifying metadata associated with the unknown media file. The music management unit responds to the user with a matching set of standardized metadata, one or more potentially matching sets of data, or an indication that no match is made. The unidentified media file can be made available to the user via a Web interface associated with a socialized music server in order to populate the repository with the standardized metadata. A rating indicative of the user response to identify the metadata associated with the unknown media file can be provided in order to attract the user to contribute for the unknown media file identification.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09069771&OS=09069771&RS=09069771
owner: Xerox Corporation
number: 09069771
owner_city: Norwalk
owner_country: US
publication_date: 20091208
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["Embodiments are generally related to data management systems and methods. Embodiments also relate in general to the field of computers and similar technologies and, in particular, to software utilized in this field. In addition, embodiments relate to the retrieval of metadata associated with media content.","Many computing devices such as, for example, personal computers, desktop computers, and various handheld computing devices include software that permits various types of media (e.g., audio, video, etc) to be played on the device. Such media-playing software typically plays or renders digital media in the form of audio and video data. Such computing devices may download a variety of musical composition files via music collection software (e.g., iTunes) and store such data on a hard disk integrated with the device. The music collection software organizes digital media file such as, for example, audio music tracks, in accordance with metadata or other digital properties data associated with the media files.","Metadata generally includes information pertaining to the media file and is usually stored within a file. For example, a particular audio file may include metadata such as, for example, a song title, artist name, date of release, genre, a thumbnail graphic, and so forth. The media file acquired from the music collection software may be automatically integrated with specified metadata types. Some media files acquired from remote sites via the Internet, however, lack metadata or may include metadata that is inconsistent or incomplete. As a result, large collections become difficult if not impossible to use because a user is forced to listen to the track to determine the metadata, and in most cases, are unable to identify the track of interest. Therefore, a need is required for obtaining relevant metadata for such media files.","In some existing systems, a user may request updated metadata for the media file by sending, via a media player, the incomplete metadata to a system capable of accessing additional metadata. Such systems, however, often fail to identify the correct media content associated with the received metadata due to the incompleteness or insufficiency of the received metadata. As such, existing systems are unable to return relevant metadata or provide correct metadata to the user, especially when dealing with large collections of music and related data.","Based on the foregoing, it is believed that a need exists for an improved music recognition method and system for retrieving metadata based on the content of a media file. A need also exists for a socialized music server that is capable of identifying musical content, as described in greater detail herein.","The following summary is provided to facilitate an understanding of some of the innovative features unique to the disclosed embodiments and is not intended to be a full description. A full appreciation of the various aspects of the embodiments disclosed herein can be gained by reviewing the entire specification, claims, drawings, and abstract as a whole.","It is, therefore, one aspect of the disclosed embodiments to provide for an improved music collection management method and system.","It is another aspect of the disclosed embodiments to provide for an improved music recognition method and system for retrieving metadata based on content associated with media files.","It is a further aspect of the disclosed embodiments to provide for a socialized music server that identifies musical content.","The aforementioned aspects and other objectives and advantages can now be achieved as described herein. A music recognition method and system based on a socialized music server is disclosed herein. A music recognition plug-in module is associated with a music management unit that communicates with a centralized music repository, wherein metadata can be retrieved based on content associated with one or more media files (e.g., music tracks, audio data, video clips, snippets of music, etc). An unknown media file may be scanned so that a snippet of data can be collected from the unknown media file and transmitted to the music repository, in response to a user request for identifying metadata associated with the unknown media file. The music management unit responds by generating a matching set of metadata, one or more potentially matching sets of data, or an indication that no match has been identified. The unidentified media file can be made available to a user via a Web interface associated with the music server in order to populate the repository with the metadata. The music server provides data communications between the repository and the Web interface.","A rating indicative of the user response to identify the metadata associated with the unknown media file can be promulgated in order to entice a user to contributing the unknown media file for identification. The metadata associated with the unknown media file may be retrieved by matching the content of the unknown media file with a known media file.","The music recognition plug-in module may be invoked to process the unknown media file. The centralized repository can be configured to include a rich collection of indexed music tracks and metadata associated with each track and may be configured with an existing database. The socialized music server permits a user (i.e., including crowd-source approaches) to access an unknown media file in the centralized repository to assist in identifying the musical content. Such a music recognition system thus identifies a music track by analyzing the content associated with the music track.","The particular values and configurations discussed in these non-limiting examples can be varied and are cited merely to illustrate at least one embodiment and are not intended to limit the scope thereof.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIGS. 1-3","FIGS. 1-3"]},"As illustrated in , the disclosed embodiments may be implemented in the context of a data-processing system  comprising, for example, a central processor , a main memory , an input\/output controller , a keyboard , a pointing device  (e.g., mouse, track ball, pen device, or the like), a display device , and a mass storage  (e.g., hard disk). Additional input\/output devices, such as a rendering device  (e.g., printer, scanner, fax machine, etc), for example, may be associated with the data-processing system  as desired. As illustrated, the various components of data-processing system  communicate electronically through a system bus  or similar architecture. The system bus  may be a subsystem that transfers data between, for example, computer components within data-processing system  or to and from other data-processing devices, components, computers, etc. The input\/output controller  can be, in some embodiments, for example, a computer chip or extension card that interfaces with a peripheral device. This may be a link between two parts of a data-processing system  (for example a memory controller that manages access to memory for the data-processing system ) or a controller on an external device that manages the operation of (and connection with) that device.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 2","FIG. 1"],"b":["150","100","152","102","107","151","153","152","107","102","100","100","153","100","151","152"]},"The following discussion is intended to provide a brief, general description of suitable computing environments in which the method and system may be implemented. Although not required, the disclosed embodiments will be described in the general context of computer-executable instructions, such as program modules, being executed by a single computer.","Generally, program modules include, but are not limited to, routines, subroutines, software applications, programs, objects, components, data structures, etc., that perform particular tasks or implement particular abstract data types and instructions. Moreover, those skilled in the art will appreciate that the disclosed method and system may be practiced with other computer system configurations such as, for example, hand-held devices, multi-processor systems, data networks, microprocessor-based or programmable consumer electronics, networked PCs, minicomputers, mainframe computers, servers, and the like.","Note that the term module as utilized herein may refer to a collection of routines and data structures that perform a particular task or implements a particular abstract data type. Modules may be composed of two parts: an interface, which lists the constants, data types, variable, and routines that can be accessed by other modules or routines; and an implementation, which is typically private (accessible only to that module) and which includes source code that actually implements the routines in the module. The term module may also simply refer to an application such as a computer program designed to assist in the performance of a specific task, such as word processing, accounting, inventory management, etc. Such a module may also constitute a software application such as a \u201cplug-in\u201d. Note that the term plug-in as utilized herein refers generally to a computer program that interacts with a host application (e.g., a Web browser) to provide a certain, usually very specific, function \u201con demand\u201d. The terms \u201cplug-in\u201d and \u201cplug-in module\u201d and \u201cmodule\u201d may be utilized interchangeably to refer to the same component or application.","The interface , which is preferably a graphical user interface (GUI), can serve to display results, whereupon a user may supply additional inputs or terminate a particular session. In some embodiments, operating system  and interface  can be implemented in the context of a \u201cWindows\u201d system. It can be appreciated, of course, that other types of systems are possible. For example, rather than a traditional \u201cWindows\u201d system, other operation systems such as, for example, Linux may also be employed with respect to operating system  and interface . The software application  can include a music recognition plug-in module  that can be adapted for retrieving metadata based on actual content associated with a media file. Module  can be adapted for populating a music repository with standardized metadata based on crowd sourcing approach. Software application module , on the other hand, can include instructions such as the various operations described herein with respect to the various components and modules described herein such as, for example, the method  depicted in .",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3","b":["300","300","302","100","302"]},"In the depicted example, server  and server  connect to network  along with storage unit . In addition, clients , , and  connect to network . These clients , , and  may be, for example, personal computers or network computers. Data-processing system  depicted in  can be, for example, a client such as client , , and\/or . Alternatively, data-processing system  can be implemented as a server such as servers  and\/or , depending upon design considerations.","In the depicted example, server  provides data such as boot files, operating system images, and applications to clients , , and . Clients , , and  are clients to server  in this example. Network data-processing system  may include additional servers, clients, and other devices not shown. Specifically, clients may connect to any member of a network of servers which provide equivalent content.","In the depicted example, network data-processing system  is the Internet with network  representing a worldwide collection of networks and gateways that use the Transmission Control Protocol\/Internet Protocol (TCP\/IP) suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high-speed data communication lines between major nodes or host computers, consisting of thousands of commercial, government, educational, and other computer systems that route data and messages. Of course, network data processing system  also may be implemented as a number of different types of networks such as for example, an intranet, a local area network (LAN), or a wide area network (WAN).  is intended as an example and not as an architectural limitation for varying embodiments of the present invention.","The description herein is presented with respect to particular embodiments of the present invention, which may be embodied in the context of a data-processing system such as, for example, data-processing system  and computer software system  illustrated with respect to . Such embodiments, however, are not limited to any particular application or any particular computing or data-processing environment. Instead, those skilled in the art will appreciate that the disclosed method and system may be advantageously applied to a variety of system and application software. Moreover, the present invention may be embodied on a variety of different computing platforms, including Macintosh, UNIX, LINUX, and the like.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 4","FIGS. 1-7","FIG. 1"],"b":["400","400","152","410","420","405","410","100","410","405"]},"The media content associated with the digital media file  is described in the context of content embodied on a CD or a DVD. It may be appreciated and understood that the media content may be embodied on any suitable media, including digital files downloaded to memory accessible by the data-processing system . Note that the digital media file  generally refers to one or more files representing, for example, a single song track or a collection of tracks such as may be found on an audio CD. The media content  may include, without limitation, specially encoded media content in the form of an encoded media file. A music track is generally a data module containing binary data that encodes recorded music corresponding to a music title. The data can be read from the file and processed to produce an audio output exploitable by the data-processing system  or suitable sound reproduction system. Music tracks are generally handled and managed like other computer files and have arbitrarily chosen file names which serve to indicate the associated audio content, usually a music title and artist.","The music management system  may invoke the music recognition plug-in module  to process the unknown media file . The unknown media file  may be scanned for collecting a snippet  and sent to the music repository  in response to a request from a user for identifying metadata associated with the unknown media file . The music recognition plug-in module  identifies and retrieves metadata  associated with the unknown media file  from the music repository . Note that the term plug-in as utilized herein refers generally to a computer program or other module that interacts with a host application to provide a certain, usually very specific, function \u201con demand\u201d. The music recognition plug-in module  includes an API (Application Programming Interface) for communicating with the centralized music repository . The centralized music repository  generally includes indexed music track(s)  and metadata  associated with each music track. The repository  focuses on maintaining a vast collection of standardized metadata  with respect to the music track . The repository  delivers the metadata associated with the unknown media file  to the music management unit .","The music repository  is intended to mean not only traditional database structures, but more generally, collections of music tracks and metadata that may be configured in association with an existing database. The centralized music repository  can be located locally in association with the data-processing system . Additionally or alternatively, the music repository  or portions thereof can be located remotely. The music repository  may index music track(s)  comprising one or more pieces of music that can be played or rendered by the music management unit . The music management unit  responds to the user with a matching set of standardized metadata, one or more potentially matching sets of data, or an indication that no match is made with respect to the unknown music track . The identified media file  may be provided to the music management unit  and utilized to update the associated music track metadata .","Note that as utilized herein, the term \u201cmetadata\u201d generally refers to \u201cdata about data\u201d, or of any sort of data contained in any media. An item of metadata may describe an individual datum, or content item, or a collection of data including multiple content items and hierarchical levels, for example, a database schema. In data processing, metadata is definitional data that provides information about or documentation of other data managed within an application or environment. For example, metadata would document data about data elements or attributes (name, size, data type, etc.), data about records or data structures (length, fields, columns, etc.), and data about data (where it is located, how it is associated, ownership, etc.). Metadata may include descriptive information about the context, quality, and condition, or characteristics of the data. Metadata can be thought of as data used to identify, describe, and locate resources.","In the context of the disclosed embodiments, metadata includes information related to specific content of the digital media file being played on a media player. Basic metadata includes a title, composer, performer, genre, a description of content, and the like. Extended metadata includes cover art, performer biographies, reviews, related performers, where to buy similar items, upcoming concerts, ticket sales, URLs to other related experiences including purchase opportunities, and the like. This information includes, but is not limited to, an artist name, an album title, a track name, a track number, and a track length. The metadata associated with the unknown music track  may be retrieved by matching the content of the unknown music track  with known music track.","The music recognition system  further includes a socialized music server  that includes a Web interface  that allows for data communication between the database  and the Web interface . Note that the socialized music server  is similar and analogous to the server  and server  depicted in . Note additionally that the term \u201cWeb\u201d or \u201cweb\u201d as utilized herein generally refers to the \u201cWorld Wide Web,\u201d which is the well-known system of interlinked hypertext documents accessed via the Internet. With a web browser, for example, one can view Web pages that may contain text, images, videos, and other multimedia and navigate between them using hyperlinks.","The socialized music server  may be employed to populate the database  with standardized metadata  via a user . The socialized music server  permits the user  to access the unknown media file  in the centralized database  based on a crowdsourcing approach to help identify the musical content. Note that as utilized herein, the term \u201ccrowdsourcing\u201d generally refers to an approach when an entity (such as a corporation) outsources a task to an undefined set of task performers, such as a large group of people over the Internet. The crowdsourcing approach leverages talents of willing people and facilitates communication with agents who might otherwise not be available for a task, or who might not otherwise be known.","The user  may be prompted with support tools to increase the effectiveness as the user  provides information with respect to the unknown media file . A rating can be provided for each correctly identified media file  so as to entice the user  to contribute to the identification process. The socialized music server  communicates with the centralized music repository  via a data communication network . The socialized music server  and the music management unit  are coupled to the data communication network . While the network  in this example is the Internet, the disclosed embodiments may be applied to any data communication network. The music recognition plug-in module  may also periodically check to determine if the music tracks that failed identification previously have been identified. Such information can also be updated in the centralized music repository  once the metadata becomes available.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 5","b":["500","500","500","405","410","405","510","460","154","515"]},"As depicted at block , the data snippet(s)  can be presented to the centralized music repository . Thereafter, as illustrated at block , each snippet  of data can be compared with the music track  stored in the centralized repository . Next, as described at decision block , a determination can be made as to whether or not a match is found. If so, then the operations depicted at blocks  and  can be processed. As shown at block , an operation can be implemented to record the media file and publish on a website associated with the socialized music server. As depicted at block , an operation can be implemented to inspect the results and optionally rate each media file for accurate identification. As indicated at block , metadata associated with a known media file can be sent to the music recognition plug-in module. As illustrated at block , the unknown media file metadata is updated. Note that in some embodiments, if the snippet  matches with the music track  stored in the centralized repository , the metadata associated with the music track can be sent back to the music management unit . Following processing of the operation illustrated at block , the unknown track metadata can be updated, as indicated at block . Otherwise, the music track can be stored in the centralized music repository  and published on the website  associated with the socialized music server  for identifying the unknown media file , as illustrated at block . The results can be inspected and optionally rated for accurate music identifications, as depicted at block .",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 6","FIGS. 1-3"],"b":["600","600","410","154","610","620","154","630","410","640","650"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 7","b":["700","435","430","710","720","730","740","435","400"]},"Based on the foregoing, it can be appreciated that an embodiment is disclosed herein involving a method that includes scanning an unknown media file to obtain a snippet from the unknown media file in response to a user request for identifying metadata associated with the unknown media file, by executing a program instruction in a data-processing system, transmitting the snippet to a repository in order to thereafter search the repository based on the snippet, by executing a program instruction in a data-processing system (e.g., data-processing system ), and automatically retrieving a matching set of metadata with respect to a known media file stored in the repository if the snippet matches content associated with the known media file, by executing a program instruction in a data-processing system.","In another embodiment of such a method, the step of retrieving a matching set of metadata with respect to a known media file, by executing a program instruction in a data-processing system, can further comprise storing the unknown media file in the repository, if the snippet associated with the unknown media file does not match content associated with the known media file, by executing a program instruction in a data-processing system.","In yet a further embodiment of such a method, a web interface can be configured in association with a socialized music server, by executing a program instruction in a data-processing system. Additionally, the repository can be populated with the metadata with respect to the unknown media file via the web interface by the user, by executing a program instruction in a data-processing system. In other embodiments a rating can be provided, which is indicative of the user response to identify the metadata associated with the unknown media file in order to attract the user to contribute the unknown media file identification, by executing a program instruction in a data-processing system.","Additionally, in an alternative embodiment to such a method, an operation can processed for providing data communication between the repository and the web interface in order to populate the repository with the metadata, by executing a program instruction in a data-processing system. Also, in another embodiment of such a method, a music recognition plug-in module can be configured in association with the repository to process the unknown media file, by executing a program instruction in a data-processing system.","In still other embodiments, the aforementioned media file can be, for example, a music track. Additionally, the repository can include a plurality of indexed music tracks and metadata associated with each music track. Also, in some embodiments an operation can be processed for permitting the user to access the unknown media file stored in the repository to assist in identifying the metadata, by executing a program instruction in a data-processing system. Additionally, an operation can be processed in some embodiments for updating the unknown media file with the metadata from the repository, by executing a program instruction in a data-processing system.","It can be appreciated that in another embodiment, a system can be configured to include a processor, a data bus coupled to the processor, and a computer-usable medium embodying computer code, with the computer-usable medium being coupled to the data bus. In such a system, the computer program code can include: instructions executable by the processor and configured for scanning an unknown media file to obtain a snippet from the unknown media file in response to a user request for identifying metadata associated with the unknown media file; transmitting the snippet to a repository in order to thereafter search the repository based on the snippet; and automatically retrieving a matching set of metadata with respect to a known media file stored in the repository if the snippet matches content associated with the known media file.","In another embodiment of such a system, such instructions can be further configured for storing the unknown media file in the repository, if the snippet associated with the unknown media file does not match content associated with the known media file, by executing a program instruction in a data-processing system. Additionally, the instructions for retrieving a matching set of metadata with respect to a known media file can be further configured for storing the unknown media file in the repository, if the snippet associated with the unknown media file does not match content associated with the known media file.","In another embodiment of such a system, the aforementioned instructions can be further configured for configuring a music recognition plug-in module in association with the repository to process the unknown media file. In such a system, the media file can be, for example, a music track, or other appropriate data. The repository can be, for example, a plurality of indexed music tracks and metadata associated with each music track. In still another embodiment of such a system, the instructions can be further configured for permitting the user to access the unknown media file stored in the repository to assist in identifying the metadata and for updating the unknown media file with the metadata from the repository.","It will be appreciated that variations of the above-disclosed and other features and functions, or alternatives thereof, may be desirably combined into many other different systems or applications. Also, that various presently unforeseen or unanticipated alternatives, modifications, variations or improvements therein may be subsequently made by those skilled in the art which are also intended to be encompassed by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying figures, in which like reference numerals refer to identical or functionally-similar elements throughout the separate views and which are incorporated in and form a part of the specification, further illustrate the disclosed embodiments and, together with the detailed description of the invention, serve to explain the principles of the disclosed embodiments.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
