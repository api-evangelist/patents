---
title: Application programming interface for managing time sharing option address space
abstract: A method includes receiving a start request from a client at a launcher application programming interface (API), determining whether an existing time sharing option (TSO) address space associated with a user of the client is available, retrieving security environment data associated with the user from a security product responsive to determining that no existing TSO address space associated with a user of the client is available, saving the retrieved security environment data as a security object, generating a message queue, generating a terminal status block (TSB) and saving the terminal status block, creating a TSO address space in a processor, sending an instruction to an operating system to start the TSO address space, and sending a message queue identifier associated with the message queue and an address space token associated with the TSO address space to the client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08533734&OS=08533734&RS=08533734
owner: International Business Machines Corporation
number: 08533734
owner_city: Armonk
owner_country: US
publication_date: 20110404
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["The present invention relates to mainframe computing, and more specifically, to mainframe computing with time sharing option (TSO).","Mainframe computers typically interact with terminals that are communicatively connected to the mainframe. The terminals are operative to send and receive messages and data using TSO messages and interactive system productivity facility (ISPF) messages. TSO allows a user to, for example, create, maintain, and compile programs and interactively test batch and on-line programs. ISPF provides a terminal interface having a set of panels. The panels often include means to run tools on TSO. ISPF often includes an application programming interface (API).","According to one embodiment of the present invention, a method includes receiving a start request from a client at a launcher application programming interface (API), determining whether an existing time sharing option (TSO) address space associated with a user of the client is available, retrieving security environment data associated with the user from a security product responsive to determining that no existing TSO address space associated with a user of the client is available, saving the retrieved security environment data as a security object, generating a message queue, generating a terminal status block (TSB) and saving the terminal status block, creating a TSO address space in a processor, sending an instruction to the TSO address space to start the TSO address space, and sending a message queue identifier associated with the message queue and an address space token associated with the TSO address space to the client.","According to another embodiment of the present invention, a system includes a client processor, and a processor communicatively connected to the client processor, the processor operative to receive a start request from the client processor at a launcher application programming interface (API), determine whether an existing time sharing option (TSO) address space associated with a user of the client is available, retrieve security environment data associated with the user from a security product responsive to determining that no existing TSO address space associated with a user of the client processor is available, save the retrieved security environment data as a security object, generate a message queue, generate a terminal status block (TSB) and save the terminal status block, create a TSO address space in a processor, send an instruction to the TSO address space to start the TSO address space, and send a message queue identifier associated with the message queue and an address space token associated with the TSO address space to the client.","According to yet another embodiment of the present invention, a non-transitory computer-readable storage medium including computer executable instructions that, when executed on a processor of a computer apparatus, directs the processor to perform a method where the method comprises receiving a start request from a client at a launcher application programming interface (API), determining whether an existing time sharing option (TSO) address space associated with a user of the client is available, retrieving security environment data associated with the user from a security product responsive to determining that no existing TSO address space associated with a user of the client is available, saving the retrieved security environment data as a security object, generating a message queue, generating a terminal status block (TSB) and saving the terminal status block, creating a TSO address space in a processor, sending an instruction to the TSO address space to start the TSO address space, and sending a message queue identifier associated with the message queue and an address space token associated with the TSO address space to the client.","Additional features and advantages are realized through the techniques of the present invention. Other embodiments and aspects of the invention are described in detail herein and are considered a part of the claimed invention. For a better understanding of the invention with the advantages and the features, refer to the description and to the drawings.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1","b":["100","100","101","103","103","102","101","105","102","101","102","101","101","101","104","102","104","106","108","108","102","104","100","102","102","104","101","108","110","112"]},"In this regard, the servlet  provides interfaces for the client  to request a TSO  address space. Once the TSO address space  is reserved, the servlet  may send and receive both TSO and ISPF messages to and from the TSO  and ISPF . The servlet  communicates with the client  using a JavaScript Object Notation (JSON) message format and converts messages received from the client  into a Unicode Transformation Format-8-bit (UTF-8) format readable by the TSO  address space (unless the messages have been received in UTF-8 format) such as, for example, {\u201cTSO RESPONSE\u201d: {\u201cVERSION\u201d:\u201c0100\u201d,\u201cDATA\u201d:\u201cTIME\u201d}} The client  is operative to receive JSON messages from the servlet  and convert the JSON messages into a format that may be displayed to a user in a web browser interface using a communications protocol such as, for example hypertext transfer markup language (HTML) or another type of communications protocol. The servlet  provides a service to the client  to, for example, terminate the address space by calling the launcher API  and provides \u201chousekeeping duties\u201d to properly maintain the address spaces in the processor  by calling the launcher API . In the illustrated embodiments the interactions with the message queues , the launcher API  and TSO  address spaces may be performed using user credentials provided by the client . The servlet  maintains a hash map that maps the client  or user to the proper message queue  and maintains other pertinent data.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 2","FIG. 1","FIG. 2"],"b":["101","110","112","202","204","206","204","110","110","108","205","204","202","204","108","111","212","111","106","205","111","208","106","206","210","110","108","212"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 3","FIG. 1","FIG. 3","FIG. 1"],"b":["101","302","106","110","102","304","106","110","106","210","110","108","110","102","304","106","210","307","212","308","212","111","310","312","101","101","314","106","106","307","308","310","312","102","316","314","110","318","110","320","210","210","110","108","110","322","110","322","110","102","306","102","110","110","110","110","110"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 4","FIG. 2","FIG. 2","FIG. 4"],"b":["110","110","110","204","110","110","110","106","208","110","106","402","106","210","106","102","404","106","406","408","106","212","212","410","106","106","110","412","108","110","102","108"]},"As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon. Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language, PL\/I, or assembler programming languages such as HL\/ASM. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the present invention are described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks. These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks. The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks. The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one more other features, integers, steps, operations, element components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.","The flow diagrams depicted herein are just one example. There may be many variations to this diagram or the steps (or operations) described therein without departing from the spirit of the invention. For instance, the steps may be performed in a differing order or steps may be added, deleted or modified. All of these variations are considered a part of the claimed invention.","While the preferred embodiment to the invention had been described, it will be understood that those skilled in the art, both now and in the future, may make various improvements and enhancements which fall within the scope of the claims which follow. These claims should be construed to maintain the proper protection for the invention first described."],"heading":["BRIEF SUMMARY","DETAILED DESCRIPTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["The subject matter which is regarded as the invention is particularly pointed out and distinctly claimed in the claims at the conclusion of the specification. The forgoing and other features, and advantages of the invention are apparent from the following detailed description taken in conjunction with the accompanying drawings in which:",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 4","FIG. 1"]}]},"DETDESC":[{},{}]}
