---
title: System and method for capturing digital images
abstract: The present invention provides system for capturing displayed digital images. The system includes a selection tool utilisable by a user to select at least one portion of at least one displayed image; and, a capture routine arranged to reproduce the selected portion. If the selection tool selects only a portion of one image, then the captured image is sourced from a secondary storage source and if the selection tool selects more than one portion of one image, then the captured image is sourced from a primary storage source.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09053529&OS=09053529&RS=09053529
owner: Smart Internet CRC PTY LTD
number: 09053529
owner_city: Eveleigh, NSW
owner_country: AU
publication_date: 20080911
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention provides a system and method for capturing digital images is disclosed. The system and method is used with a computing device and particularly though not exclusively, used in a digital image capturing and management context.","Conventionally, computer users find it useful to capture portions of digital images for the purpose of editing or creating additional digital images. The user may wish to create a separate image that focuses on a particular subject, or the user may wish to combine a group of images in a specific arrangement.","Traditionally, for a computer user to create a new digital image from existing digital images, the user must go through a number of complex and tedious steps. This may include opening a digital image utilising suitable digital image editing software and then using a capture tool to carefully select the portions of the image the user wishes to capture. Thereafter, the user must reshape or resize the image and save the file as a new digital object.","Computer users wishing to combine digital images must load each individual image, form the desired arrangement and then use digital image editing software to tediously bring the combination together. Advanced users who wish to reduce the time taken for the task may use the \u201cprintscreen\u201d function, which takes a snapshot of what is displayed on the screen into a storage memory as a new digital image. Whilst this approach is useful, the approach is cumbersome and often cannot provide the user with a useful image, unless the user undertakes further editing.","The conventional methods of capturing digital images are tedious and cumbersome even for an advanced computer user who may not always be familiar with the different types of software and processes required to do this task. Many users will often have unpredictable results with new software or interfaces and many computer users would rather not undertake the task of having to learn to use advanced tools.","In a first aspect the present invention provides a system for capturing displayed digital images comprising a selection tool utilisable by a user to select at least one portion of at least one displayed image, and a capture routine arranged to reproduce the selected portion, wherein if the selection tool selects only a portion of one image, then the captured image is sourced from a secondary storage source and if the selection tool selects more than one portion of one image, then the captured image is sourced from a primary storage source.","In an embodiment of a system, the selection tool is a frame arranged to define a selection area.","In an embodiment of a system, the user defined selection tool is resizable.","In an embodiment of a system, the preceding claims, wherein the selection tool is rotatable.","In an embodiment of a system, the preceding claims, wherein the capture routine provides feedback to the user.","In an embodiment of a system, the feedback is in the form of a visual animation.","In an embodiment of a system, the feedback is in the form of an audio signal.","In an embodiment of a system, the primary storage is a frame buffer memory.","In an embodiment of a system, the secondary storage is a hard disk.","In an embodiment of a system, the capture routine is arranged to execute on a plurality of threads.","In an embodiment of a system, the captured image is further processed by changing the size or orientation of a viewport relating to the image.","In an embodiment of a system, the captured image is rendered by anisotropic texture filtering.","In accordance with a second aspect the invention provides a method for capturing displayed digital images comprising utilising a selection tool to select at least one portion of at least one image and, initiating a capture routine arranged to reproduce the selected portion, wherein if the selection tool selects only a portion of one image, then the captured image is sourced from a secondary storage source and if the selection tool selects more than one portion of one image, then the captured image is sourced from a primary storage source.","In accordance with a third aspect the present invention provides a system for capturing digital images comprising a computer unit, the computer unit implementing a system according to the first aspect.","In accordance with a fourth aspect the present invention provides a computer program comprising at least one instruction for controlling a computer system to implement a method according to the first aspect.","In accordance with a fifth aspect the present invention provides a computer program comprising at least one instruction for controlling a computer system to implement a method according to the second aspect.","In accordance with a sixth aspect the present invention provides a computer readable medium providing a computer program in accordance with any one of the fourth or fifth aspects.","With reference to , there is shown a computing system  arranged to implement a method in accordance with an embodiment of the present invention. The system  is in the form of a personal computer (hereafter \u201ctabletop computer\u201d) including a surface-mount display . The display  is arranged to display a user interface  (hereafter \u201ctabletop\u201d) and receive user input for capturing digital images displayed thereon. The digital images are sourced from either or both the primary storage  or the secondary storage on the computer . The system has a software implemented selection frame adapted to select at least one portion of at least one image for capture and a software implemented capture routine, wherein one instance is arranged to reproduce the selected portion of the image from secondary storage to a new image whereupon the selection is a portion wholly from one image. In the second instance, the routine reproduces a plurality of portions of a plurality of images from primary storage into a new image whereupon the user's selection for capture is a plurality of digital images.","To achieve the aforementioned functionality, the tabletop computer  comprises computer hardware including a motherboard , central processing unit (CPU) , graphics processing unit (GPU) , read only memory (ROM), primary storage  such as random access memory (RAM), registers, cache, RAM exclusively for use by the GPU (e.g. frame buffer), and secondary storage  such as disk drives, hard disk, non-volatile memory modules, and input\/output devices such as Ethernet ports etc . There may also be provided a plurality of communication links which connect to one or more other computing devices, such as servers, personal computers, terminals, wireless or handheld computing devices etc. At least one of the pluralities of communications links may be connected to an external computing network through a telephone line or other type of communications link .","The tabletop computer also includes a display including a projector  connected to the tabletop computer. The projector projects the user interface onto a surface. The display also includes a sensor  capable of detecting user inputs for manipulating objects displayed on the user interface. In an embodiment, the user inputs may comprise hand movements (or gestures) and\/or inputs from a stylus or pen.","In addition to the hardware, the tabletop computer includes an operating system (such as the Microsoft Windows XP operating system, which is provided by Microsoft Corporation) that resides on the hard disk and which co-operates with the hardware to provide an environment in which software applications can be executed. In this regard, the tabletop computer  is loaded with a digital image capture software application which allows a user to capture a portion of the user interface, such as a portion of a digital image displayed on the user interface, or a plurality of digital images displayed on the user interface. In the embodiment described herein, the digital image is in the form of digital data stored on either a secondary storage device such as, but not limited to, a hard disk, optical drive, or a non volatile memory source (e.g. USB memory device), and\/or a primary storage device such as RAM, cache, registers or memory accessible by the graphics processing unit (frame buffer).","The digital image capture application provides the user with a selection frame which is displayed on the tabletop computer display and responds to user manipulation. The frame can be positioned to cover or bound any of the tabletop display and can be resized, rotated or reshaped. The frame can also be placed over a digital image or over a portion of a digital image or over a plurality of portions of digital images on the table top. The selection frame provides a capture action whereby the user can initiate a capture request. When the capture request is made, the capture application invokes a capture routine, whereby the image bounded by the selection frame is reproduced.","With reference to , the capture routine utilises different types of procedures to reproduce the contents of the selection frame, depending on whether the selection frame is wholly within a displayed digital image  or whether the selection frame encumbers a portion of the table top or a portion of other digital images on the table top . If the selection frame is wholly within a displayed digital image, the capture routine will crop  and reproduce the portion of the digital image within the frame using the digital data in the secondary storage device . By using digital data which is contained in a secondary storage device, the reproduced image contains a resolution which is equal to the resolution of the original image. The capture routine will then display the reproduced portion in equal or higher resolution, depending on the intrinsic resolution of the digital data and the amount of storage space available in the secondary storage device.","If the selection is not wholly within a displayed digital image , the capture routine crops  and reproduces the displayed contents within the selection frame using digital data from the primary storage device , such as, but not limited to, a frame buffer, which may be the memory contents addressed by the GPU. This new image has an equal resolution to the resolution of the image displayed on the table top .","Following the reproduction of the digital images the capture routine stores the new image produced into a new file and saves the file in the secondary storage . During this process, the image may also be displayed onto the table top display for further viewing or manipulation by the user.","This embodiment allows a user to reproduce portions of an image quickly without the complex steps of choosing the resolution levels of captured images and the troublesome, yet crucial process of saving the file. It also provides for the captured image to be concurrently displayed for visual inspection or manipulation by the user without the additional steps of having to reload or reposition the captured image.","In one embodiment, the captured image is created by copying the orthogonally aligned block (e.g. in rectangular, circular or any other shape) of pixels within the boundaries of the selection frame from the frame buffer and loading the pixels as a new image.","In another embodiment, the capture routine is implemented for parallel execution in a multitask environment such that performance of the capture routine provides for a smoother graphical feedback to the user, and thus enhances the ease of use of the table top interface. In this embodiment, when the capture routine is initiated by holding a pen, stylus or finger stationary on the selection frame for more than 1 second , a capture event is placed onto the event queue . When the scene is next redrawn , usually within a few milliseconds, it is drawn without the non-capture objects such as the personal space polygons or menu bars. When the selection frame itself would have been drawn, the capture routine instead calculates the boundaries of the selection frame , copies pixels within the partially drawn frame buffer to system memory  and enqueues two events, a full redraw to the event queue  and a save-capture event , which is posted to a thread of execution specifically for encoding screen captures in memory and saving them to secondary storage.","In the main event queue , the routine redraws the entire scene and continues to process events as normal. Simultaneously in the save capture thread , the routine receives the event via a semaphore post, which points to the copied frame buffer data. This keeps the interactive interface responsive while processor-intensive tasks occur on the frame buffer data in a routine executing in parallel. The routine first performs the texture pre-processing steps  on the frame buffer data by scaling it to have dimensions that are the closest powers of two to the original (width, height) and generating mipmaps , which are a set of images with dimensions 2\u00d72, 2\u00d72, . . . , 1\u00d71 required for anisotropic filtering; (i.e. to provide an image that can be rapidly rendered in high quality within a 3D scene on a modern graphics card). The mipmaps are kept temporarily in system memory. The texture processing  can take some time. For example, if the capture was large, a number of redraws and the processing of other manipulation events may have occurred since the routine was initiated.","Once the texture processing  is complete, a low-priority \u201ctexture ready\u201d event  is placed onto the event queue. Between redraws, if there are no other events (e.g. pen movements), low priority events are processed . The texture ready event will transfer the pre-generated mipmaps from system memory into texture memory and create a new Image object . An Animation object is created  that will move the newly created Image from the corner of the screen to a position on a spiral at the centre of the screen. This occurs in the main thread as other threads cannot access the graphics card. In the background thread, immediately after placing the texture ready event , the routine begins converting the captured pixels into a jpeg image . First the routine inverts the rows to support an alternate coordinate system, and then converts the image using the open source \u201clibjpeg\u201d library. The image is saved to disk with a time stamp and an identifier which identifies the user that initiated the frame capture. None of this requires access to the graphics card, and so while this process occurs the routine may continue to process input events and redraw the scene with the newly loaded texture. Once the new image is saved to disk, the routine waits  on the capture semaphore for the next capture. However, the routine repeats the above processes immediately if there is already a capture event waiting.","In another embodiment, the image may be further processed before display. For example, the frame buffer pixels do not contain all the information that could be obtained from the image data, and the pixel orientation does not reflect the orientation of the selection frame. The routine accommodates for this with minimal computation impact, by changing the size, orientation and shape of the \u2018viewport\u2019 to wholly encompass the selection frame before the first redraw. The \u2018viewport\u2019 is a set of transformation matrices used by the graphics processor to efficiently translate image data in the 3-dimensional \u201cworld\u201d coordinate system to the 2-dimensional screen coordinates for display. So, when the user dwells on the selection frame, the action repositions the virtual camera, a reference point in which the graphics displayed on the table top are drawn, resulting in the preservation of the rotation of the digital image. Following this the action captures; saves a composited, full-screen image to disk; and loads it (without actually redrawing the display, so the virtual camera repositioning is not seen by the user). Because the orientation is now important, the representation of the selection frame includes an arrow to indicate \u201cup\u201d.","To achieve the repositioning, a point at the centre-top of the frame object is converted to world coordinates to become the desired \u201ctop\u201d of the new virtual camera position. The centre of the frame in world coordinates becomes the centre of the new viewport and the virtual camera is positioned at a point in the positive Z-direction from this centre. With these three points (top, centre and eye), the field of view in the vertical, or \u201cy\u201d direction can be calculated as the arccosine of the dot product of the two vectors (centre-eye) and (top-eye), divided by the square of their magnitudes multiplied together. This information, and the aspect ratio of the frame, is sufficient to calculate a temporary viewport for the graphics processor to render a scene with the display contents directly under the frame filling the frame buffer entirely.","This embodiment solves the orientation problem and improves image quality when the selection frame is small. It also requires very little additional computational overhead, and produces images the same size as the screen (e.g. 1024\u00d7768) to save on disk, this is sufficient as any larger sizes would be impractical for most purposes for what the saved frames were intended for (e.g. attaching to email).","As a way of illustrating an implementation of this embodiment, without limitation, a listing of code for one method of implementation is provided in Annexure .","In another embodiment, the routine detects whether the selection frame is wholly contained in another Image (i.e. the routine is performing a crop of a single image). If it is not, the routine keeps the virtual camera-reposition image created, loads it into texture memory and stops. Otherwise, the routine still keeps this image and saves it to disk (as it is a low-quality version of the eventual result), but the routine performs further processing. To detect containment, the routine determines whether the same image is located at the centre, and at all four corners of the selection frame by selecting the object at those pixels, ignoring the selection frame itself. At the same time, the routine determines where (what offsets) in the digital image the corners are, thus determining offsets into that digital image's texture. It follows that instead of loading the screen-grab (which is still saved to secondary storage devices), the routine instead loads a special Resource that shares the texture of the target image, but uses the texture offsets previously found. To display this new image, the routine creates a display list that shares the texture with the image captured but, rather than binding points (,), (,), (,), (,) of the texture, the routine binds the points of the corners of the Capture selection frame, translated onto the image that is being captured. As a way of illustrating an implementation of this embodiment, without limitation, a listing of code for one method of implementation is provided in Annexure .","With reference to annexure, the routine returns a Boolean indicating whether the selection frame is wholly within the displayed digital image. If it is, the object coordinates for displayed digital image that correspond to where the corners of the selection frame lie are returned to the caller in the first argument\u2014these may then easily be translated into texture offsets for the displayed digital image texture. First, the routine creates object coordinates for the corners of the selection frame, relative to the selection frame\u2014these are the four points (\u00b1a\/2, \u00b11\/2), where \u2018a\u2019 is the aspect ratio of the selection frame. We first convert these to world coordinates, using the cached transformation matrices used to position selection frame in the virtual environment, then convert them to source-object coordinates using the inverse of the transformation matrices used to position displayed digital image in the virtual environment. If any of these transformed points is outside the bounds of the object coordinates for the displayed digital image (i.e. outside the range (\u00b1a\/2, \u00b11\/2), with \u2018a\u2019 the aspect of the displayed digital image) the routine knows that the corners of selection frame are not wholly contained within displayed digital image. Once the routine has these points, they are used to bind the corresponding points of the existing texture in the displayed digital image to the corners of a newly created \u201creferenced\u201d Image that the routine loads at the same position as the selection frame, with an animation. This new \u201creferenced\u201d Image is initially given the same dimensions and aspect of the capture frame, and appears at the same location. Its contents are exactly what lie beneath it, so to make the new image stand out, it is given an animation. In one embodiment, this animation increases the scale of the new Image by some factor, gradually over one second. Thus the new Image appears to \u201cgrow\u201d out of the underlying image, once the capture frame is activated. Without limitations, this behaviour is shown in .","In a further embodiment, the routine can obtain the full details from the original digital image file, this is particularly useful for a \u201czoom-in\u201d request. This embodiment offers improvement as texture detail beyond a 1024\u00d71024 resolution is discarded when the original file is loaded. Hence, for greater detail, the routine refers to the file on the secondary storage device. However, the routine can no longer use the graphics card for the clipping, scaling, rotating and compositing of the images that compose the area beneath the selection frame object. The routine uses a program such as \u201cconvert\u201d from the open source ImageMagick toolkit to perform these tasks by manipulating the files on the secondary storage device.","In this embodiment, the routine has access to the image file on disk, then after loading the referenced Image, the routine formulates a 3-step transformation for the convert program from ImageMagick, as discussed above. This involves a crop to the bounding box of the rotation (to speed up the next stage), a rotation, followed by another crop. This results in a new file on disk, made from the original image rather then the textures in memory\u2014that is, the best data available. Once the operation completes, the routine reloads the newly created image off the secondary storage device. Notably in this embodiment, the routine crops twice\u2014crop is a much faster operation to perform than rotate, and so the routine performs an initial crop to reduce to the minimum number of pixels that are required to perform the rotate. The result has \u201cwaste\u201d where rotated parts now lie outside the final crop, which are subsequently removed. The values off[].x, off[].y . . . off[].x, off[].y are the texture offsets (each in the range [0.0, 1.0]) that were found from the Texture Offsets calculations discussed earlier. As a way of illustrating an implementation of this embodiment, without limitations, a listing of code for one method of implementation is provided in Annexure .","With reference to , to use the capture system, a user may first arrange to have the original digital images displayed on the table top display , this can be done by loading the image from the secondary storage and the projector will display the digital images on the table top. In one instance, the user may choose a particular image that comprises three notable subjects (e.g. the three features of a house) and wishes to create a new image of only one subject, and thereby providing a new image with more details for that one subject, such as better defined features of the wall. The user may by using a stylus, pen or finger position the selection frame over the specific subject (e.g. the wall) through the dragging or directing with input the selection frame over the table top . The user then provides instructions to initiate the capture routine, such as by dwelling on the frame with a stylus, pen or finger . Upon which a new digital image is loaded consisting of the area that was below the selection frame . In this instance, as the selection frame was wholly within the digital image, the new digital image is larger and has more details since the digital image was reproduced from the secondary storage device , where the original digital image is stored in a much higher resolution file than what is stored in the frame buffer. This new digital image is then saved automatically into the secondary storage device as a new file, and will only comprise of the subject, which can be used as a new image for further capturing or other uses. In this embodiment, the user is able to quickly produce a capture of a portion of a digital image quickly in a minimum number of steps. The ease of which the new image is displayed and saved as a file is demonstrated by the basic input required for the entire process. The new image is also displayed in an enlarged formate on the table top to allow for immediate visual inspection of additional details.","With reference to , the user may also wish to capture a combination of original digital images displayed on the table top display . In this instance, the user may have a plurality of images arranged in a specific order on the table top display . Using the selection frame, the user positions the frame to enclose portions of each original digital image displayed . The user may resize or rotate the selection frame to capture each of the original digital images as desired. There may also be part of the table top background that is within the selection frame as there may be spaces between the original digital images. Having positioned the frame, the user provides instructions to initiate the capture routine . A new image is loaded consisting of the area that was below the selection frame, including any portions of the table top background that may be below the selection frame . As the selection frame was not wholly within one digital image, the new digital image will be reproduced from the frame buffer, after repositioning the virtual camera and redrawing so that the captured contents fill the tabletop display. The virtual camera is returned to its original position and the display drawn again before activating the frame buffer, so this repositioning is not noticed by the user. The new digital image is displayed initially as an animation of the image spiralling towards the table top from the corner , and finally coming to rest on the table top where the user can select the image. This new digital image is then saved automatically into the secondary storage device as a new file, which can be used as a new image for further capturing or other uses. In this embodiment, the user is able to quickly produce a combination capture of a plurality of portions of a plurality of digital images quickly in a minimum number of steps. The ease of which the new image is displayed and saved as a file is demonstrated by the basic input required for the entire process. The new image is also displayed with an animation process which allows the user to visually track the new image as it comes to be displayed on the table top.","Although the display described above was in the form of a surface displaying a projected image, it will be understood that the display can take any form. For example, the display may take the form of a touch-screen display or may simply be a conventional display where inputs to the display are received by traditional inputs such as a keyboard and mouse.","Although not required, the embodiments described with reference to the Figures can be implemented via an application programming interface (API) or as a series of libraries, for use by a developer, and can be included within another software application, such as a terminal or personal computer operating system or a portable computing device operating system. Generally, as program modules include routines, programs, objects, components, and data files that perform or assist in the performance of particular functions, it will be understood that the functionality of the software application may be distributed across a number of routines, objects and components to achieve the same functionality as the embodiment described and the broader invention claimed herein. Such variations and modifications are within the purview of those skilled in the art.",{"@attributes":{"id":"p-0055","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"ANNEXURE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20021",{}]},{"entry":["\u20022","void Camera::fillView(const Pt &centre, const Pt &top, double"]},{"entry":[{},"aspect) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20023","current.eye = current.ctr = centre;"]},{"entry":["\u20024","current.eye.z += RConfig::ENV_CAMERA_HEIGHT;"]},{"entry":["\u20025","current.aspect = aspect;"]},{"entry":["\u20026","Pt forward = current.ctr \u2212 current.eye;"]},{"entry":["\u20027","Pt upward = top \u2212 current.eye;"]},{"entry":["\u20028","double costheta = forward.dot (upward)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u20029","\/ ( sqrt(forward.lensq( ))*sqrt(upward.lensq( )));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["10","current.fovy = RAD2DEG * acos(costheta);"]},{"entry":["11","current.up = top \u2212 centre;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["12","}"]},{"entry":["13",{}]},{"entry":["14","DWELL_STATUS SmartFrame::dwell(int scr_x, int scr_y,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["15","unsigned user, double movement) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["16","checkOverlap( );"]},{"entry":["17","Camera *c = env\u2212>getCamera( );"]},{"entry":["18","P3<GLfloat> up;"]},{"entry":["19","toWorld(up, P3<GLfloat>(0.0, 1.0, 0.0));"]},{"entry":["20","c\u2212>pushView( );"]},{"entry":["21","c\u2212>fillView(position, up, aspect);"]},{"entry":["22","return FramePic::dwell(scv_x, scr_y, user, movement);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["23","}"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"ANNEXURE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20021","\u2003bool SubTexImage::findSourceCoords(P3<GLfloat>"]},{"entry":[{},"\u2003(&obj_source)[4],"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20022","Image *source,"]},{"entry":["\u20023","SmartFrame *creator) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20024","GLfloat creator_aspect = creator\u2212>getAspect( );"]},{"entry":["\u20025","GLfloat source_aspect = source\u2212>getAspect( );"]},{"entry":["\u20026","P3<GLfloat> obj_creator[4];"]},{"entry":["\u20027","P3<GLfloat> world_creator[4];"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u20028"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20029","obj_creator [0].set(\u22120.5*creator_aspect, \u22120.5, 0.0);"]},{"entry":["10","obj_creator [1].set( 0.5*creator_aspect, \u22120.5, 0.0);"]},{"entry":["11","obj_creator [2].set( 0.5*creator_aspect,\u2009\u20020.5, 0.0);"]},{"entry":["12","obj_creator [3].set(\u22120.5*creator_aspect,\u2009\u20020.5, 0.0);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"13"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["14","for (unsigned i = 0; i < 4; ++i) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","creator\u2212>toWorld(world_creator[1], obj_creator[i]);"]},{"entry":["16","world_creator[i].z = 0;"]},{"entry":["17","source\u2212>toObject(obj_source[i], world_creator[i]);"]},{"entry":["18","if\u2003(fabsf(obj_source[i].x) > 0.5*source_aspect"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["19","\u2003|| fabsf(obj_source[i].y) > 0.5) {"]},{"entry":["20","return false; \/\/a corner did not hit - reject"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["21","}"]},{"entry":["22","obj_source[i].z = 0; obj_source[i].y*=\u22121;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["23","}"]},{"entry":["24","return true; \/\/all 4 corners hit"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["25","}"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0057","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"ANNEXURE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u20021","int SubTexImage::convert_upgrade_async( ) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20022","GLfloat radsrotated , xw, xh;"]},{"entry":["\u20023","std::ostringstream crop1, rot, crop2, command;"]},{"entry":["\u20024","std::string fname = fileName;"]},{"entry":["\u20025","{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20026","\/* Step 1: crop to bounding box *\/"]},{"entry":["\u20027","std::vector<GLfloat> xs(4), ys(4);"]},{"entry":["\u20028","for (size_t i = 0; i < 4; ++i) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20029","xs[i] = off[i].x;"]},{"entry":["10","\u2002ys[i] = off [i].y;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["11","}"]},{"entry":["12","std::sort(xs.begin( ), xs.end( ));"]},{"entry":["13","std::sort(ys.begin( ), ys.end( ));"]},{"entry":["14","crop1 << \u201c -crop,,\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","<< (xw = (xs[3] \u2212 xs[0])*source\u2212>width) << \u2018x\u2019"]},{"entry":["16","<< (xh = (ys[3] \u2212 ys[0])*source\u2212>height) <<"]},{"entry":["17","\u2002\u2018+\u2019 << xs[0]*source\u2212>width <<"]},{"entry":["18","\u2002\u2018+\u2019 << ys[0]*source\u2212>height;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["19","}"]},{"entry":["20","{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["21","\/* Step 2: rotate *\/"]},{"entry":["22","rot << \u201c\u2423-rotate\u2423\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["23","<< (radsrotated = atan2f(","off[0].y \u2212 off[3].y,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["24","off[0].x \u2212 off[3].x))"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["25","* -RAD2DEG + 90;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["26","}"]},{"entry":["27","{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["28","\/* step 3: re-crop centres are all the same point, so reuse *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["29","GLfloat w = distf(","(off[1].y \u2212 off[0].y)*source\u2212>height,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["30","(off[1].x \u2212 off[0].x)*source\u2212>width);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["31","GLfloat h = distf(","(off[2].y \u2212 off[1].y)*source\u2212>height,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["32","(off[2].x \u2212 off[1].x)*source\u2212>width);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["33","\/* now where do we put it: depends how big it is *now* *\/"]},{"entry":["34","crop2 << \u201c_-gravity\u2423Center\u2423-crop\u2423\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["35","<< w << \u2018x\u2019 << h << \u201c+0+0\u201d;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["36","}"]},{"entry":["37","{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["38","const size_t trim = strlen(QUICKCROP \u201c.jpg\u201d);"]},{"entry":["39","\/* step 4: figure out a new filename *\/"]},{"entry":["40","if (fname.size( ) > trim)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["41","fname = fname.substr(0, fname, size( ) \u2212 trim) + \u201c"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},".jpg\u201d;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["42","}"]},{"entry":["43","int rval;"]},{"entry":["44","\/\/need a temporary image for convert"]},{"entry":["45","command << PATH_TO_CONVERT"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["46","<< \u201c\u2423\\\u201c\u201d << source\u2212>fileName << \u2018\u201d\u2019"]},{"entry":["47","<< crop1.str( ) << rot.str( ) << \u2018_\u2019 << fname;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["48","rval = system(command.str( ).c_str( ));"]},{"entry":["49","if (rval)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["50","return rval;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["51","command.str(\u201c\u201d);"]},{"entry":["52","command << PATH_TO_CONVERT << \u2018\u2423\u2019"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["53","<< fname"]},{"entry":["54","<< crop2.str( ) << \u2018 \u2019"]},{"entry":["55","<< fname;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["56","rval = system(command.str( ).c_str( ));"]},{"entry":["57","if (rval)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["58","return rval;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["59","if (!load(fname)) \/* load the newly created image off disk *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["60","return 1;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["61","upgraded = true;"]},{"entry":["62","pushMemberEvent(&Image::reload, Image::Ref(this), true);"]},{"entry":["63","return rval;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"64"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Notwithstanding any other forms which may fall within the scope of the present invention, a preferred embodiment will now be described, by way of example only, with reference to the accompanying drawings in which:",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIGS. 4A to 4D"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIGS. 5A to 5D"}]},"DETDESC":[{},{}]}
