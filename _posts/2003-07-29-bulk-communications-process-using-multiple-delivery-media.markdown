---
title: Bulk communications process using multiple delivery media
abstract: A method (), a system and, a computer program product for bulk communication of information to recipients via multiple delivery media are disclosed. The media include facsimile, email, surface mail, SMS messaging, and archiving (and is adapted for new media types in the future). A single interface is used to receive information () for distribution including one or more template documents () and data () specific to each recipient. At least one document based on the received information () is transmitted using a specified delivery media () for each recipient based on the recipients' delivery preferences (). Escalating () transmission of the document may occur using a different delivery media for any recipients for whom transmission by the specified delivery media fails. The escalating step () may depend upon status information () from a carrier regarding delivery of the document to each recipient.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07715032&OS=07715032&RS=07715032
owner: ConnXion Ventures Limited
number: 07715032
owner_city: Sydney
owner_country: AU
publication_date: 20030729
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATION","FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","A. First Embodiment","B. Second Embodiment","A. First Embodiment","B. Second Embodiment"],"p":["The present application claims the benefit of the earlier filing date of Australian Provisional Patent Application No. 2002950435 filed on 29 Jul. 2002 in the name of Trade Wind Communications Ltd and having the same title, the contents of which are incorporated by reference herein.","The present invention relates generally to bulk communications and in particular to methods and systems for bulk communications using multiple delivery media.","Businesses, companies, and organizations (simply originators hereinafter) use bulk communications with their clients, suppliers, and other parties (simply recipients hereinafter) for a variety of reasons. Typically, such bulk communications are carried out using one of the following media: Surface Mail, Email, Facsimile, and Short Message Service (SMS) messages sent to recipients' mobile phones.","Originators of communications have different types of bulk communications with their recipients ranging from ad-hoc marketing communications through to recurring delivery of essential information such as invoices, statements, and reminder notices. Generally, these bulk communications have the following common elements:\n\n","Communication with recipients can originate from different departments or entities of the originator and be carried out in different ways depending on the type of communication media being used. In carrying out these various communications, the originators use different interfaces and technology depending on whether originators are sending information out via Surface Mail, Email, Facsimile, or SMS. The originators may choose to host some or all of the technology required for the relevant communications in-house, but in other cases the originators may out-source the communications.","Mail merge software applications exist for generating address stickers for envelopes and for merging and printing letters. Originators may also have proprietary systems and printing departments set up in-house to manage surface mail merging. Mailing houses provide originators with the ability to outsource their surface mailing requirements. Generally, customized scripts are written to map data extracted from the originators' databases and overlay the extracted data onto pre-printed paper stock.","Facsimile (fax) machines have the capability to store lists and do bulk message delivery. Depending on the size of the communication, bulk emailing can be carried out using tools such as Microsoft Outlook. This application enables a user to merge data fields of a data repository into a Microsoft Word document and then email a merged document to a recipient list via its mail merge tools. Other software applications beside Microsoft Outlook and Microsoft Word have similar functionality. For software solutions in this area, fax cards and fax print drivers, etc., must be installed on the network or the workstation that the software is installed. Businesses or companies also provide bulk fax and email services. Some require personalized documents for the different recipients to be supplied by the originators; others carry out merging of data for the originator. Enterprise Resource Planning (ERP) and accounting software may also support the capability to email or fax from within the application or software package. However, this is usually geared to individual communications (i.e., send a single email or fax from within the package at a certain point within a business process), rather than allowing for a bulk personalisation and delivery.","Originators may adapt their systems to issue SMS messages via a carrier. Usually, this is done using \u2018email to SMS\u2019 type services that enable an email to be sent to a specified address, formatted in a given manner, and then forwarded on as an SMS message to a mobile phone. Originators may enable the bulk outsourcing of SMS messaging, but generally do not provide a capability, or support provision by third party products of a capability to merge personalized data from the same database as the other delivery mechanisms.","Limited, combined services exist, usually capable of forwarding emails to fax or to SMS. Amongst other things, these services do not provide formatting and merge functionality. Such services do not allow for specific formatting rules to be specified for the different delivery mechanisms whilst using the same recipient list and database, and do not support surface mail as one of the delivery options.","MessagingDirect (from ACI) offers e-Courier. E-Courier 1 is a direct electronic billing and payment solution. These tools seek to combine traditional direct business-to-business paper transactions with the speed, efficiency and flexibility of electronic delivery. Both also attempt to facilitate a streamlined business process through direct e-business: digitally signed, legally binding and securely delivered end-to-end e-transactions, such as bills, statements, invoices, confirmations, policies. The entire business process aims to be online, enabling e-transactions to flow through an electronic channel directly between businesses and their customers, partners and suppliers. The MessagingDirect system does not support a unified interface for email, Fax or Surface Mail delivery. The MessagingDirect product requires all recipients to enroll with the service.","MessageReach and Fax MailMERGE (from Xpedite) have different offerings for different media, but do not simultaneously personalize and deliver a single recipient list to multiple media.","Pulse Enterprise (from Esker Software) is another similar application, but does not incorporate escalation, is not offered as an ASP model (or as a Web Service), and does not support surface mail delivery. Pulse Enterprise also requires Fax cards, etc., to be installed along with the software. The company making use of Pulse Enterprise must install the software and hardware in their environment and manage Pulse Enterprise as well as all Fax, SMS, Email interfaces etc. Pulse Enterprise includes a General Document Recognition\u2122 (GDR) component. General Document Recognition\u2122 seeks to automate the conversion of text and print-stream data into multiple electronic formats and the processing and delivery of these documents to any receiving device.","Thus, a need clearly exists for an automated service that enables originators to use one bulk communications service with a single common interface and to re-use the same set of recipient data, so that bulk communications to recipients can be carried out via all existing, different media including Conventional or Surface Mail, Email, Fax and SMS (and any other new delivery media that might arise in the future). Further, a need clearly exists for an automated service that enables an originator to manage the delivery of messages to recipients based on each recipient's preference for receiving the information including how that information is delivered if unsuccessful on a first media, without the need for the originator to install and manage technology specific to a particular delivery type. Still further, a need exists for an automated service that can format and deliver data via a single interface to the full spectrum of delivery media (Fax, Email, SMS, Paper and Archiving) based on the recipients' preferences.","In accordance with a first aspect of the invention, there is provided a method for bulk communication of information to recipients via multiple delivery media including facsimile, email, surface mail, and SMS messaging. Preferably, this includes the ability to expand to other new media types in the future. Information for distribution including information regarding recipients is received via a single interface. The received information may include one or more template documents and data specific to each recipient (including embeddable image data). At least one document based on the received information is transmitted using a specified one of the delivery media for each of the recipients based on the recipients' delivery preferences.","Preferably, the method includes the step of escalating transmission of the at least one document using a different one of the delivery media for each of one or more of the recipients for whom transmission by the specified delivery media fails. The at least one document may be converted into a format suitable for the specified one or different one of delivery media for each recipient. The formatted document may then be sent to a carrier for transmission using the specified one or the different one of the delivery media. A report from the carrier regarding the transmission may be processed to provide status information regarding delivery of the document to each recipient. In turn, the escalating step may be dependent upon the status information.","The method may further include the step of merging the one or more template documents and the data specific to each recipient (optionally including image data specific to each recipient) to provide the at least one document for each of the recipients. The method may also include the steps of determining a document template type for each delivery media and selecting a merging process for the document template type. The data specific to each recipient may be provided to the respective merging process. The delivery media may include archiving in order to facilitate recipient requests for additional copies of merged template documents at some time in the future.","Further aspects of the invention include a system and a computer program product for bulk communication of information to recipients via multiple delivery media including facsimile, email, surface mail, and SMS messaging (and able to be extended to other new media types), based on the method described above. These and further aspects of the invention are described in greater detail hereinafter.","Methods, systems, and computer program products are disclosed for bulk communication of information to a single set of recipients via multiple delivery media based on the recipients' delivery preferences and incorporating escalation. Preferably, the method, the system and the computer program enable a service that is delivered as a Web Service. Further, the delivery media include Surface Mail, Email, Encrypted Email, Facsimile, SMS, and Archiving (and caters for inclusion of other media types in the future. In the following description, numerous specific details are set forth including communications networks, communications protocols, data formats such as MHTML, Postscript, and the like. However, it will be apparent to those skilled in the art that, in the light of this disclosure, modifications and\/or substitutions may be made without departing from the scope and spirit of the invention. In other instances, details well known to those skilled in the art may be omitted so as not to obscure the invention.","The terms \u201cescalation\u201d, \u201cescalate\u201d, \u201cescalating\u201d and other forms of the word \u201cescalate\u201d mean re-directing in the context of this document. Thus, the phrase \u201cescalating transmission of at least one document using a different one of the delivery media\u201d means that the transmission is re-directed using another media.","The recipient specifies, amongst other things, by which medium, delivery of information is preferred. Further, the recipient is able to specify the media by which information is to be delivered if the delivery cannot be achieved using the preferred media. Thus, in the event of delivery failure, the escalation to different media is according to the recipients' preferences. Preferably, the process is implemented using computer software that has been developed in an object-oriented manner, made up of multiple sub-components. The user interface to the software is preferably delivered as a web service. More preferably, the software application is written in Java and the eXtensible Markup Language (XML). A general overview is provided immediately hereinafter, followed by a more detailed description of an embodiment of the invention with reference to the drawings.","Some portions of the following description are explicitly or implicitly presented in terms of algorithms and symbolic representations of operations on data within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self-consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. At times principally for reasons of common usage, these signals are conveniently referred to as bits, values, elements, symbols, characters, terms, numbers, or the like.","However, the above and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise, and as apparent from the following, it will be appreciated by those skilled in the art that passages herein utilizing terms such as \u201ccomputing\u201d, \u201cmerging\u201d, \u201ccalculating\u201d, \u201cconverting\u201d, \u201cdetermining\u201d, \u201ccomparing\u201d, \u201cgenerating\u201d, \u201cselecting\u201d, \u201coutputting\u201d, or the like, refer to the action and processes of a computer system, or similar electronic device, that manipulates and transforms data represented as physical (electronic) quantities within the registers and memories of the computer system into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.","The present specification also discloses apparatuses for performing the operations of the methods. Such an apparatus may be specially constructed for the required purposes, or may comprise a general-purpose computer or other device selectively activated or reconfigured by a computer program stored in the computer. The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general-purpose machines may be used with programs in accordance with the teachings herein. Alternatively, the construction of more specialized apparatus to perform the required method steps may be appropriate. For example, an Internet Directory Server computer may be configured to populate a directory stored thereon by installing computer programs for performing the calculations, comparisons and selection steps described below.","Further, the present specification also discloses computer program products including a computer readable medium having a computer program for performing the operations of the methods stored thereon. The computer readable medium is taken herein to include any transmission medium for communicating the computer program between a source and a destination. The transmission medium may include storage devices such as magnetic or optical disks, memory chips, or other storage devices suitable for interfacing with a general-purpose computer. The transmission medium may also include a hard-wired medium such as exemplified in the Internet system, or wireless medium such as exemplified in the GSM mobile telephone system. The computer program is not intended to be limited to any particular programming language and implementation thereof. It will be appreciated that a variety of programming languages and coding thereof may be used to implement the teachings of the disclosure contained herein.","Where reference is made in any one or more of the accompanying drawings to steps and\/or features, which have the same reference numerals, those steps and\/or features have for the purposes of this description the same function(s) or operation(s), unless the contrary intention appears.","For ease of reference, the description is set forth hereinafter with the following subheadings:",{"@attributes":{"id":"p-0059","num":"0000"},"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":["I. Overview,","II. Message Processing,","III. Service Interface(s),","IV. Pluggable Data File Converter,","V. Document Merger,","VI. Preference Rules Process,","VII. Transmitters,","VIII. Carrier Interfaces,","IX. Escalation Processor,","X. Reporting,","XI. Concurrency\/Pipelining of Merge\/Transmission."]}}}},{"@attributes":{"id":"p-0060","num":"0000"},"ul":{"@attributes":{"id":"ul0005","list-style":"none"},"li":{"@attributes":{"id":"ul0005-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0006","list-style":"none"},"li":["I. Overview,","II. Concepts,","III. The Web Interface,","IV. System Architecture,","V. Data File Structures,","VII. The Database Structure,","VIII. Java Mapping Classes and XSL Templates."]}}}},"I. Overview","Significant aspects of the bulk communications process and system in accordance with an embodiment of the invention include:\n\n","The process or system utilizes one or more of the following techniques to provide features not found in other messaging services:\n\n",{"@attributes":{"id":"p-0063","num":"0099"},"figref":"FIG. 1","b":["100","102","106","108","110","104","108","112","114","114","116","118","120","114","120"]},"In step , the XML recipient list is validated and parsed, and then stored to a database. This produces stored recipient data and delivery preferences . In step , recipient delivery preferences are processed and broken up into bundles for different media types. In step , a check is made to determine the document template types for each media type and a corresponding document merger is selected. The Document Template is the same for all recipients for a specific media type. The Document Merger takes each individual recipient's data and merges that data into the document template to produce a personalized document for that recipient. The Document Template may be an XSL template. Alternately, MS Word Templates and HTML Templates are supported. This is the \u2018Template Type\u2019. Depending on the template type, a different document merger (an XSL-FO Merger, an MS Word Merger, a HTML Merger etc.) is loaded. From step , one or more of several merge steps or operations may be performed. The merge steps include text merge , PDF merge , Postscript merge , HTML merge , and Microsoft Word merge . It will be appreciated by those skilled in the art, in the light of this disclosure, that other types of merges may be practiced without departing from the scope and spirit of the invention. Recipient data  is provided to the merge steps -.","From each of steps -, processing continues at step . In step , a check is made to choose delivery carriers for recipients. This is done by re-examining the outcome of the previous Process Recipient Delivery Preferences step  in combination with the preferred carrier for each media configured for the originator of this Job. The combination of these two pieces of information is used to decide on the carrier modules to use. If a fax is to be sent, processing continues through the path including steps -. If an email is to be sent, processing continues through the path including steps -. If surface mail is to be sent, processing continues through the path including steps -. If an SMS message is to be sent, processing continues through the path including steps -. If the document is to be archived, processing continues through the path including steps -.","For the fax path, the merged document is converted to a bitmap format, which is preferably TIFF in step . In step , the TIFF format document is sent to a fax carrier for transmission. In step , a fax carrier report that is generated is processed and parsed. The status of the transmission is set on the recipient list. Processing then continues at step .","For the email path, the merged document is converted in step  to MHTML format, if necessary. Often, conversion to MHTML is not required because the document remains as a PDF, HTML or Microsoft Word Attachment. In step , the email message containing the document either as an attachment or as embedded MTHML, is sent to an email carrier for transmission. In step , an email carrier report that is generated is processed and parsed. The status of the transmission is set on the recipient list. Processing then continues at step .","For the surface mail path, the merged document is converted in step  to the Postscript format, if necessary. In step , the Postscript format document is sent to a conventional surface mail carrier for transmission. In step , a surface mail carrier report that is generated is processed and parsed. The status of the transmission is set on the recipient list. Processing then continues at step .","For the SMS message path, the merged document is formatted in step  for SMS, if necessary. In step , the SMS format document is sent to an SMS carrier for transmission. In step , an SMS carrier report that is generated is processed and parsed. The status of the transmission is set on the recipient list. Processing then continues at step .","For the archiving path, the merged document is formatted in step  for archiving, if necessary. This format is generally PDF or Postscript, however no particular format is mandated by the archiving system and so the format is dependent on the originator's preferences. In step , the formatted document is sent to the archiving system. In step , a report that is generated by the archiving system is processed and parsed. The status of the transmission is set on the recipient list. Processing then continues at step .","In step , escalations are processed, if necessary, dependent on the recipient list status and delivery preferences . In step , a check is made to determine if any escalations are required. If step  returns true (YES), processing continues at step  in respect of the recipients for whom escalation occurs. Otherwise, if step  returns false (NO), processing terminates in step .","The software architecture used to provide the process  of  is depicted in the class diagram of FIGS. 11 and 11A-11M of Australian Provisional Patent Application No. 2002950435, which is incorporated by reference. In Australian Provisional Application No. 2002950435, FIG. 11 depicts the arrangement of the portions in FIGS. 11A-11M. The class diagram provides a detailed description of the application architecture and the components that make up the application. The components include escalation processing, status processing, job submission and processing, merging, formatting and carrier transmission. The schema communicates several aspects of the architecture.","Additional aspects of this process are described in detail hereinafter.","III. Service Interface(s)","The embodiment of the invention is preferably provided as a hosted service, commonly known as the Application Service Provider (ASP) model. Preferably, three different access methods are used for accessing the hosted service and are supported by three different interface components, respectively. The services interface  is depicted in  including a Web Services Interface (SOAP) , an FTP interface , and a Web Graphical User interface (Browser\/HTML based) . The three external interface components ,  and  all utilise the same underlying common interface component , which is preferably XML.","A Web Service is a formal interface described by the Universal Description, Discovery and Integration (UDDI) and Web Services Definition Language (WSDL) standards. The hosted service provides an interface  that conforms to this standard. FTP (File Transfer Protocol) is a common protocol for transferring files over the Internet. The hosted service provides the FTP interface , because this interface  is a commonly understood interface that is easy for originators to access. The Web Graphical User interface  is provided to enable originators to submit jobs manually via a graphical user interface.","The various interfaces , ,  are lightweight and marshal data into a common format for submission to an underlying common interface  as shown in . The interface parameters are passed as XML. An XML Schema has also been defined to describe a job. This schema provides a mechanism for providing different document templates for different media, and also for specifying other preferences for a particular job. The format of this common XML Job Description File (\u2018JobDescriptor\u2019 XML)  of , including important tags within this XML schema, is set forth in Table 1.",{"@attributes":{"id":"p-0077","num":"0113"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Tag","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["<job_type>","The job_type tag allows for an overall job type to be set which"]},{"entry":[{},"defines the media via which all recipients are sent messages."]},{"entry":[{},"This tag takes precedence over the transmission_rules tag,"]},{"entry":[{},"which is intended for use with the impending escalation"]},{"entry":[{},"functionality, allowing for a set of transmission rules to be"]},{"entry":[{},"supplied as escalation rules at a job level rather than at the"]},{"entry":[{},"recipient level."]},{"entry":[{},"Supported job types include:"]},{"entry":[{},"<job_type>FAX ONLY<\/job_type>"]},{"entry":[{},"<job_type>EMAIL ONLY<\/job_type>"]},{"entry":[{},"<job_type>FAX AND EMAIL<\/job_type>"]},{"entry":[{},"<job_type>FAX AND EMAIL AND SMS<job_type>"]},{"entry":[{},"(. . . etc - all combinations of media are allowed)"]},{"entry":[{},"<job_type>LIST PREFERENCE<\/job_type>"]},{"entry":[{},"The LIST PREFERENCE job type uses the transmission rules"]},{"entry":[{},"set at a recipient level. See description of the"]},{"entry":[{},"RecipientData.xml for more details."]},{"entry":["<transmission_rules>","The transmission_rules tag allows for a set of transmission"]},{"entry":[{},"rules to be defined at the job level. These rules are applied to"]},{"entry":[{},"all recipients for that particular job, e.g.,"]},{"entry":[{},"<transmission_rules>f:e<\/transmission_rules>"]},{"entry":["<fax_template>","The fax template tag allows a template to be defined for"]},{"entry":[{},"documents produced for the purpose of fax transmission, e.g.,"]},{"entry":[{},"<fax_template>AcmeRelativeImage.xsl<\/fax_template>"]},{"entry":["<email_template>","The email template tag allows a template to be defined for"]},{"entry":[{},"documents produced for the purpose of email transmission,"]},{"entry":[{},"e.g."]},{"entry":[{},"<email_template>AcmeRelativeImage.xsl<\/email_template>"]},{"entry":["<paper_template>","The paper template tag allows a template to be defined for"]},{"entry":[{},"documents produced for the purpose of sending via snail mail,"]},{"entry":[{},"e.g.,"]},{"entry":[{},"<paper_template>AcmeRelativeImage.xsl<\/paper_template>"]},{"entry":["<email_body_template>","The email body template allows for a text email body to be"]},{"entry":[{},"included which are sent to all recipients receiving messaging"]},{"entry":[{},"via the email media. This tag contains text data that is"]},{"entry":[{},"included as the email body. The tag may contain merge fields"]},{"entry":[{},"that are defined <<ff_(merge_field_name)>>. The merge field"]},{"entry":[{},"tags are created by holding down the alt key and typing 0171"]},{"entry":[{},"to create << and 0187 to create >>, e.g.,"]},{"entry":[{},"<email_body_template>"]},{"entry":[{},"Dear <<ff_firstname>>,"]},{"entry":[{},"Please find included your statement for the month of"]},{"entry":[{},"<<ff_month>>."]},{"entry":[{},"Regards"]},{"entry":[{},"<<ff_creditmanager>>"]},{"entry":[{},"<\/email_body_template>"]},{"entry":["<email_subject_template>","The email subject template allows for a text email subject to"]},{"entry":[{},"be included that is sent to all recipients receiving messaging"]},{"entry":[{},"via the email media. This tag contains text data that are"]},{"entry":[{},"included as the email subject. The tag may contain merge"]},{"entry":[{},"fields that are defined <<ff_(merge_field_name)>>. The merge"]},{"entry":[{},"field tags are created by holding down the alt key and typing"]},{"entry":[{},"0171 to create << and 0187 to create >>, e.g.,"]},{"entry":[{},"<email_subject_template>"]},{"entry":[{},"Please find included your statement for the month of"]},{"entry":[{},"<<ff_month>>."]},{"entry":[{},"<\/email_subject_template>"]},{"entry":["<sms_template>","The email subject template allows for an SMS message body"]},{"entry":[{},"to be included to be sent to recipients. This tag contains text"]},{"entry":[{},"data that is sent as the SMS body and may contain merge"]},{"entry":[{},"fields that are defined <<ff_(merge_field_name)>>. The merge"]},{"entry":[{},"field tags are created by holding down the alt key and typing"]},{"entry":[{},"0171 to create << and 0187 to create >>, e.g.,"]},{"entry":[{},"<sms_template>"]},{"entry":[{},"Your statement for the month of <<ff_month>> has been emailed"]},{"entry":[{},"to <<ff_emailaddress>>."]},{"entry":[{},"<\/sms_template>"]},{"entry":["<associated_image>","The associated image tag allows for the inclusion of 0-n"]},{"entry":[{},"images which may be required as part of a document merge,"]},{"entry":[{},"e.g. <associated_image>Acme.gif<\/associated_image>"]},{"entry":["<recipient_list>","The recipient list tag defines the recipient data that is used to"]},{"entry":[{},"supply all recipient details and merge data. See description of"]},{"entry":[{},"RecipientData.xml for more information. E.g.,"]},{"entry":[{},"<recipient_list>AcmeSmall.xml<\/recipient_list>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Originators using the hosted service submit a file containing information about the recipients being targeted as part of a particular bulk communication. These files may be extracts from an internal database or accounting system of a business, organization, etc. The embodiment of the invention standardises on XML input files, and thus data conversion  converts the recipient list file  into XML  as shown . For example, the recipient list file  may be a text or flat file. This done using a data file converter , which is preferably a component that enables customized converters to be plugged into the underlying platform. The conversion of the input files is then transparent to the user of the service. In the embodiment of the invention, data conversion is implemented as follows:\n\n","The embodiment of the invention formats data for delivery to different types of media.",{"@attributes":{"id":"p-0080","num":"0122"},"figref":["FIG. 4","FIG. 3"],"b":["400","410","314","412","414","416","414","412","410","416"]},"To enable a single recipient list to be used for merging (personalization) and delivery of data to a variety of different media, based on the recipients' delivery preferences, a special XML recipient list schema  has been defined and is illustrated in , , and . While a specific schema is set forth in , it will be appreciated by those skilled in the art, in the light of this disclosure, that modifications and\/or substitutions may be made to the schema without departing from the scope and spirit of the invention. The schema  is broken into two major sub-sections:\n\n","The embodiment of the invention allows preference rules, including complex ones, to be specified for individual recipients using a specified notation for defining the preference rules. For example, the embodiment of the invention utilises the following notation (F:S-P) to mean send a Fax and an SMS, and if both of these fail, send by Surface Mail (Paper) instead. Preferably, a user interface is used for selecting delivery preferences, and a shorthand notation is used for specifying delivery preferences. The rules notation for delivery media types are set forth in detail in Table 2.",{"@attributes":{"id":"p-0083","num":"0127"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Media","Notation"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Fax","F or f"]},{"entry":[{},"Email","E or e"]},{"entry":[{},"SMS","S or s"]},{"entry":[{},"Paper","P or p"]},{"entry":[{},"Voice","V or v"]},{"entry":[{},"Archiving","A or a"]},{"entry":[{},"Encrypted Email (cipher)","C or c"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"New Media Types to be determined"]}]}}}}},"To cater for precedence rules and also the ability to combine more than one media type into a rule, several operators are used. A list preference is specified as a series of rules, separated by a dash (-). The dash (-) indicates that if the previous rule fails, use the next rule. A rule can be as simple as specifying a single media type (e.g., F for Fax) or a string of media types separated by the plus (+) or colon (:) operators, described hereinafter. Parentheses \u2018(\u2018 \u2019)\u2019 are used to encapsulate rules that involve more than one media type.","An example of a simple precedence rule demonstrating the use of the dash (-) operator is:\n\nE-F-P.\u2003\u2003(1)\n","This rule denotes send an Email (rule 1). If rule 1 fails (e.g. if no email address is specified), then send a Fax (rule 2). If rule 2 fails, then send the item via paper-based media (rule 3).","If two media types are separated by a plus (+) operator, this denotes send the information to both of those particular media types (no precedence order). The rule fails if neither can be sent to. For example, the rule (F+E) indicates to try to send both an email and a fax. The rule fails if neither a fax number nor an email address is provided.","An example of the combination of the plus (+) operator and the precedence operator (\u2212) is:\n\n(E+F)-P.\u2003\u2003(2)\n","This rule denotes send both a fax and an email. If neither of these media succeed (e.g., because a fax number and a email address are not specified), the dash (-) operator comes into play and processing moves to the next rule, which denotes to send the document by Paper.","If two media types are separated by a colon (:) operator, this denotes to send to both of the particular media types (no precedence order; i.e., same as the plus (+) operator). However, the rule fails if one of the media is not able to be sent to. For example, (F:E) denotes to try to send both an email and a fax. The rule fails if either the fax number or an email address is not provided. An example of a combination of the colon (:) operator and the precedence operator (\u2212) is:\n\n(E:F)-P.\u2003\u2003(3)\n","This rule denotes to send both a fax and an email. If either media fails (e.g, because neither a fax number nor an email address is specified, the dash (-) operator comes into play and processing moves to the next rule, which denotes to send the document by Paper.","The precedence order for the various operators is as follows: ( ), +, :, \u2212. The parenthesis is evaluated first, the plus (+) operator is evaluated before the colon (:), which are all evaluated before the dash (-). An example illustrating a complex rule, utilizing all of the different operators and showing how the precedence rules work, is:\n\n(F:F+S)-(P:V).\u2003\u2003(4)\n","In this scenario, the parentheses take precedence, so the rule (E:F+S) is evaluated first. The plus (+) follows in preference to the parentheses, so the rule F+S is evaluated next. This denotes to send the information to both Fax and SMS. The \u2018:\u201d is evaluated next, so the rule E:\u201cF+S\u201d is the next thing to be evaluated. This denotes to send the information to both email and \u201cF+S\u201d (which denotes to send to Fax and SMS). The information is sent to all three of email, fax and SMS. If there is a failure of the rule (F+S), this is because both the fax and SMS failed. A failure of the rule E:\u201cF+S\u201d occurs because either the email or the \u201cF+S\u201d failed. If the whole first rule E:\u201cF+S\u201d fails, the dash (-) comes into play and the next rule comes into effect (P:V). This rule (P:V) denotes to send the information to both Paper and Voice. In summary, the rule of Example (4) denotes to send the information to Email, Fax and SMS media. If either the email fails (e.g., no email address specified), or both the SMS and Fax fail (e.g., no SMS and fax numbers), then the information is sent to both Paper and Voice.","In the embodiment of the invention, a user interface component or module allows quick entry of simple delivery combinations while at the same time providing the option of entering complex rules. The user interface component  shown in  is entitled broadcast options and contains several tick boxes  for each media type, including fax, email, SMS, voice, and paper. Radio buttons  are also provided to send to all and use list preference. A user can specify a rule to override the list preference in box text entry  (e.g., (E+S)-F-P).","The preference rules processor interprets the recipient preferences and determines for each recipient what delivery media to send to.  shows a method  for handling the preference rules. Recipient data  in the XML format is provided to step , which loads preference rule data for the first, or next, recipient as the case may be. In step , processing starts from the position that any previous processing finished. In step , a check is made to determine if any more characters remain for processing. If step  returns false (NO), the current round of rule processing terminates in step . Otherwise, if step  returns true (YES), processing continues at step .","In step , an execution branch is performed dependent on the character representing a precedence operator or media notation. If step  determines \u201c(\u201cor\u201d)\u201d, processing continues at step . In step , a check is made to determine what parenthesis type is involved. If a \u201c(\u201d is determined in step , processing continues at step  and an open parenthesis is recorded. Otherwise if a \u201c)\u201d is determined in step , processing continues at step . In step , a close parenthesis is recorded and a group for the previous rule set is created. From each of steps  and , processing continues at step .","If step  determines the current character is a letter (F, E, S, P, A, C), processing continues at step . In step , a check is made to determine if the letter is F, E, S, P, A, or C. If step  returns F, processing continues at step  and the recipient is added to the fax list. If step  returns E, processing continues at step  and the recipient is added to the email list. If step  returns C, processing continues at step  and the recipient is added to the encrypted email list. If step  returns P, processing continues at step  and the recipient is added to the surface mailing (paper) list. If step  returns S, processing continues at step  and the recipient is added to the SMS list. If step  returns A, processing continues at step  and the recipient is added to the archiving list. From each of steps , , , , , and , processing continues at step .","If step  determines the current character is an operator \u201c:\u201d, \u201c+\u201d, or \u201c\u2212\u201d, processing continues at step . In step , a check is made to determine which operator is the current character. If step  returns \u201c-\u201d, processing continues at step  and the position after the \u201c-\u201d symbol is record. Processing then proceeds to step . If step  returns \u201c-\u201d, processing continues at step  and \u201c-\u201d (OR) operator is recorded. Processing continues at step . If step  returns \u201c+\u201d, processing continues at step  and \u201c+\u201d (AND) operator is recorded. Processing then continues at step .","VII. Transmitters","The transmitters carry out final conversion of data for presentation to the carrier interface. For example, for faxing, a PDF document output from the document merger process is converted into a Tiff file for presentation to a fax carrier. The system allows different transmitters to be plugged in where appropriate for different carriers.","VIII. Carrier Interfaces","The carrier interfaces carry out final data conversion and batching into a carrier-specific file format for transmission to the chosen carrier for that particular media type. Alternative carriers may be plugged in for the different carrier interfaces, and the choice of carrier may be dynamically configured as part of an originator's user profile.","IX. Escalation Processor","The escalation process checks for a response from the carrier interfaces and parses the results of the transmission for each recipient. If a transmission fails, the escalation process uses the recipients' preference rules (via the preference rules processor) to determine whether to retry the communication via a different media, and manages the activity of re-scheduling the transmission of data via the different media. The flow diagram in  illustrates escalation processing  and in particular how the escalation rules for Email work (Email being the most complicated). For the other media types, the escalation is simply based upon success\/failure reports received back from the carrier.","In , processing commences in step  in which an attempt is made to send email to the carrier. In step , a check is made to determine if an error occurred due to an unknown SMTP server. If step  returns true (YES), processing continues at step . If step  returns false (NO), processing continues at step . In step , a check is made to determine if the bounced email arrived in the originator's (client's) inbox at the hosted service (Emdirect). If step  returns true (YES), processing continues at step . In step , the originator manually indicates that the email delivery failed for the recipient. This is preferably done via a web interface. Processing then continues at step . If step  returns false (N)), processing continues at step .","In step , a check is made to determine if the email opening timeout has expired. If step  returns false (NO), processing continues at step . In step , processing waits until the timeout expires and then processing proceeds to step . If step  returns true (YES), processing continues at step . In step , a check is made to determine if email tracking shows that the email has been opened. If step  returns true (YES), processing terminates in step  and escalation is not performed. If step  returns false (NO), processing continues at step .","In step , a check is made to determine if the originator's approval is required for escalation. If step  returns false (NO), processing continues at step  and escalation to the next media type occurs. Otherwise, if step  returns true (YES), processing continues at step . In step , a check is made to determine if originator approval has been given. If step  returns false (NO), processing continues at step . In step , manual originator approval event is awaited via web interface. Processing then continues at step . If step  returns true (YES), processing continues at step . Further details of this process are set forth hereinafter.","The escalation processing provides the following functionality:\n\n","For the different media types, the escalation criteria are as follows. For some of the media types, alternative mechanisms have been described. Where alternatives are available, the originator has the choice of which escalation criteria the originator would like to apply. This is configured as part of the originator's user preferences.","If fax was not able to be sent after the prescribed number of retries, escalation may occur. This can be due to a variety of reasons, from an invalid fax number, through to a network difficulty (NCN) connecting to the specified fax machine.","If email is not tracked as opened by the recipient within the prescribed number of days, escalation may occur. No automated processing of email bounces may be carried out, however, a facility may be provided whereby the submitter of the job can manually indicate that particular emails were not successfully sent (via the web interface). If the SMS number could not be contacted (is invalid), escalation may occur. This is dependent on whether or not this level of reporting can be provided by the mobile service provider.","If the surface mail address cannot be successfully barcoded, escalation may occur. The inability to barcode a mail address can be for a variety of reasons\u2014for example there may be no postcode or an invalid postcode, or an invalid street number for a particular street.","The following fields are available on the user configuration screen to store the following user preferences in relation to escalation:\n\n","For originators that have \u2018Escalation\u2019 configured, all jobs submitted via the web interface automatically have escalation switched on. Escalation proceeds according to either the broadcast preference chosen, or if List preference is chosen as the broadcast preference, then escalation proceeds according to the list preference of the individual recipients.","For originators that have escalation configured, an additional option is available via the FTP interface in the JobDescriptor.XML file. This is the \u2018Escalation\u2019 flag. If the \u2018Escalation\u2019 flag is set to \u201cY\u201d, then escalation applies for this Job. Escalation proceeds according to either the broadcast preference chosen, or if List preference is chosen as the broadcast preference, escalation proceeds according to the list preference of the individual recipients.","The Job Processing engine tracks the delivery status of each recipient and moves recipients along the escalation path when an escalation event occurs for that recipient (e.g. receipt of a bad fax report, or non-opening of an email within X days, or manual flagging by user that a particular job requires escalation).","Manual flagging of escalation for emails may be set via the web interface. After submitting a Job, an originator is able to search for the Job, and then select an \u2018Add Email Escalations\u2019 button. This provides the originator with a list of all email recipients, and the originator is able to check an \u2018escalate\u2019 box next to any recipients that the originator would like escalated. The purpose of this screen is primarily to cater for the situation where the originator has received an email bounce and so would like to manually indicate that escalation is required. This facility also caters for other situations where the originator\/sender has some other prior knowledge that the recipient will not receive the email (for example\u2014emailing to the accounts dept, but know that the regular email contact is on holidays and so want to send a fax\/letter so that their stand-in receives the fax\/letter).","Escalation Status After submitting a Job, a user can at any time search for a Job and then view the current status of all of the recipients and whether the recipients have escalated or are awaiting originator approval to proceed with escalation. The reason for the escalation is also be shown (e.g. \u201cfax failed after 3 retries\u201d, \u201cEmail unopened within 5 days\u201d, \u201cStreet number invalid for street address\u201d, \u201cmanually flagged for escalation\u201d, etc.).","Escalation Processing From the Escalation Status screen, if the originator has \u2018manual intervention\u2019 configured in their profile, the originator is able to select a \u2018Process Escalations\u2019 function. This displays the list of recipients awaiting escalation. For any recipient that has had an escalation event occur, there is a \u2018proceed\u2019 checkbox next to the line for that recipient's status. The originator is able to tick some or all (via a \u2018tick all\u2019 button) of the recipients that originator would like the escalation to proceed for and then press a \u2018Proceed with Selected Escalations\u2019 button.","Message Retry From the Escalation Status screen, the originator is also able to select a \u2018Retry Messages\u2019 function, which displays a list of recipients awaiting escalation. Instead of escalating, the originator is able to select either \u2018Retry\u2019 or \u2018Retry with Modified Address\u2019 against a particular recipient. If \u2018Retry with Modified Address\u2019 was selected, the user is first shown a screen to prompt them for the modified fax number, email address or surface mail address. For both options the application then proceeds to attempt a re-send to that recipient using the old or updated details. The user can carry out this procedure (one at a time) for each recipient they want to resend to. If the resend attempt succeeds, the is will no longer in the escalation state. If the resend attempt fails, the recipient reverts back to the awaiting escalation state. Whenever a \u2018Retry with Modified Address\u2019 is selected, the originator is also emailed a copy of the original and modified details to remind the originator to update their own database.","When an Escalation event occurs for a set of recipients (either due to the receipt of a Fax status report that shows failures, or alternately the timing out of the \u2018opened by\u2019 period that is used to indicate an email requires escalating), an email is sent to the originator that submitted the job. The originator can then go to the Escalation Status screen on the web to proceed manually with the escalations if the originator has the \u2018Manual Intervention\u2019 option configured.","X. Reporting Component","The reporting component is responsible for receiving the delivery reports from the carrier interfaces, and combining the delivery reports together into one common status format for storage into a relational database. The reporting component also comprises of graphical interfaces and tools for use by originators to generate and view integrated delivery reports (either viewing them via a Web Based HTML interface, or receiving them via Email).",{"@attributes":{"id":"p-0120","num":"0174"},"figref":"FIG. 7","b":["700","710","712","714","716","718","720","722","720"]},"In a separate but related process, the user originator may request the status report in step . The updated status information in the recipient database is provided to step , which follows from step .","XI. Concurrency\/Pipelining of Merge\/Transmission","The hosted service is designed in such a way that sub-tasks that make up the merge and delivery process are run concurrently, where possible. This design enables a high level of throughput within the hosted service and also enables the hosted service to provide the complex escalation procedures that the hosted service supports.  shows how multiple instances  of the different components , ,  operate concurrently to streamline the throughput of the data. In particular, multiple instances of the merger module  operate concurrently and provide output to respective ones of multiple concurrent transmitter modules . The transmitter modules  are in turn coupled to respective ones of the multiple carriers .","I. Overview","Embodiments of the invention provide a method, a system, and a computer program product (Web Service) for bulk communication of information to a single set of recipients via multiple delivery media (Fax, Email, SMS, Surface Mail and Archive) based on the recipients' delivery preferences and incorporating escalation to different media according to the recipients' preferences in the event of delivery failure. Computer software has been developed in an object oriented manner such that it is made up of multiple sub-components. The user interface to the software is preferably delivered as a web service.","The message broad service utilizes the following techniques:","(A) The system recognizes the common elements required in communication with customers and encapsulates those elements in an XML Document. These elements include a customer's delivery preferences and a set of redirection criteria. The delivery preferences and redirection criteria are specified using a unique shorthand notation. A proprietary XML schema has also been defined to describe the XML document format.","(B) The system provides a remotely accessible and secure electronic interface. The one single data stream supports all forms of messaging in a consistent manner. The data stream can be supplied via an interactive Web user interface or by non-interactive bulk submission through the Internet (by means of the FTP or other protocols).","(C) The system supports a mechanism for specifying a Data Converter. The system has special code built in that enables customized Data Converters to be written and plugged in dynamically. The Data Converters take the recipient data in any format (i.e. as extracted from an organisation's accounting or ERP systems) and converts the data into a common XML format for feeding into the messaging engine.","(D) The system provides data merging (personalization) capabilities enabling the system to merge recipient data into a variety of document formats, including PDF, HTML, TIFF, Microsoft Word and Text. The system uses an XSL-FO formatting engine to carry out the data merging. The personalization capability includes the ability to personalize the subject line and body text of email messages as well as messages being sent via SMS.","(E) The System manages all of the following carrier interfaces: SMS, Email, Fax, Conventional (Surface) Mail and Archiving. This is done by having a separate code layer in the system that presents a common carrier interface to the rest of the messaging engine. This also enables future media types to be easily incorporated into the System (e.g. WAP).","(F) The System provides a single, integrated reporting interface to the user by taking the different types of reports that are received back from the carriers and converting the reports into a common format for storage in a relational database. The system then reconciles these delivery reports against the individual messaging recipients in order to track delivery and drive the escalation procedures. This enables the system to provide reports to the user on the success and failure of individual messages and show the redirection path that has been taken for individual recipients.","(G) The System has been implemented in a manner that enables a high volume of messaging throughput. It does this by breaking out the steps in the messaging process into different components. These components are then executed concurrently, so that many different steps are being executed simultaneously.\n\n","The technology can be provided as either a hosted service, commonly known as the Application Service Provider model, or in the form of a fully licensed model. There are three different ways to access the system and these three different access methods are supported by two different interface components. The two external interface components all utilise the same underlying common interface component.  is a block diagram depicting a system  comprising a bulk interface , a web interface , and a common interface .","A. Web Graphical User Interface (Browser\/HTML Based) ","For entities that wish to submit jobs manually via a graphical user interface, a web browser based HTML interface  is provided to the system.","B. Bulk Interface ","Bulk submission of jobs across the Internet is supported. This allows customers' ERP systems to send jobs directly to the system. FTP (File Transfer Protocol) is a common protocol for transferring files over the Internet. The service provides an FTP interface as the bulk interface  because this interface is a commonly understood interface that is easy for entities to access. Other submission interfaces such as the formal interface described by the Universal Description, Discovery and Integration (UDDI) and Web Services Definition Language (WSDL) standards may also be used.","C. Common Interface ","All of the various interfaces ,  are lightweight, and marshal data into a common format for submission to an underlying common interface  as shown in . The interface parameters are passed as XML.","The reporting component is responsible for receiving the delivery reports from the carrier interfaces, and combining the reports together into one common status format for storage into a relational database. This component also comprises of screens and tools for use by users to generate and view integrated delivery reports (either viewing them via a Web Based HTML interface, or receiving them via Email). The diagram in  shows how the different carrier reports are parsed and stored in the database to enable the web site to present integrated reports to the user.","In order to provide a mechanism to enable a single recipient list to be used for merging (personalization) and delivery of data to a variety of different media, based on the recipients delivery preferences, a special XML schema has been defined. The Recipient List XML Schema is shown in .","The key differentiating points are as follows:\n\n","In the second embodiment of the invention, an electronic message broadcasting system  is disclosed as shown in . The message distribution system  is designed specifically to handle a \u2018one to many\u2019 situation, where a single message  is received by the message distribution system  (and in particular by a system engine ) and broadcast to dozens, hundreds or thousands of destinations . The message distribution system provides facilities for the message to be \u2018tailored\u2019 individually for each recipient. Messages are received and transmitted via the Internet or by dedicated communications links.","Messages can comprise text, graphics, embedded audio\/video, in fact, virtually anything that can be represented electronically.","The message distribution system can be used to broadcast a wide range of information ranging from memos and marketing materials to invoices and statements.",{"@attributes":{"id":"p-0142","num":"0219"},"figref":["FIG. 12","FIG. 11"],"b":["1120","1210","1220","1240","1220","1232"]},"The application server  comprises a Java Virtual Machine , JDBC , the Apache Tomcat web server , and JBoss application server . The application server  also comprises the application software  including Java programs and utilities.","The database server  comprises an operating system level (e.g. Microsoft Windows 2000) on PC hardware , JDataConnect , and SQL Server .","The system preferably runs on computers located in a secure data centre. It is intended that other message distribution systems are installed in data centres in other places. The system software  is preferably written in the Java programming language and may include a number of third party utility packages (most of which are also designed for the Java platform). The message distribution system uses XML standards for representing data.","The message distribution system can be run on a wide range of platforms, e.g. the system can be run on PC \u2018application servers\u2019 ,  utilising Microsoft's Windows 2000 operating system. The Java program environment is provided by the Apache Tomcat web server  and the JBoss application server .","All persistent data is kept in a message distribution system database in another PC \u2018database server\u2019 , which is accessed via the Java JDBC interface . The database software may be Microsoft's SQL Server  which utilises JDataConnect software  to handle the link to the message distribution system server.","I. Concepts","The message distribution system is preferably implemented as a software suite developed specifically for the mass messaging market. The system controls the messaging computers known as message distribution System Engines.","The message distribution system accepts a message (i.e., an electronic representation of text, graphics, sound\/video files, etc.) from a sender and distributes a copy of that message to a number (a few dozen, a few hundreds or many thousands) of recipients. Typically the sender is an organisation of some sort and the recipients are individuals or other organisations. The sender may be a customer and be identified by a customer id. The terms \u2018sender\u2019 and \u2018customer\u2019 are used interchangeably in this document depending upon the context. The content of the message may be tailored specifically for each recipient, but the overall format of the message is typically similar for all recipients. As an example, suppose the sender is a bank and the message represents a monthly bank statement. The overall format of the message (i.e., the name of the bank, the bank's logo, the column headings, etc.) is the same for all recipients but the details (i.e., the recipient's name and address, the account balance and the individual credit\/debit transactions) are different for each recipient.","The whole process of accepting a message from a sender and distributing multiple copies of the message to recipients is referred to as a job. When a job is complete, the message distribution system automatically prepares a job status report for the sender. This report summarises the outcome of the job (i.e., how many recipient messages were delivered successfully and how many failed) and provides details of success\/failure on an individual recipient basis (e.g., how many times delivery to a particular recipient was tried and why it failed).","The message distribution system also prepares a set of billing records containing more detailed information about the outcome of each recipient message transmission. The billing records are sent to a Billing System, where the billing records may be used at the end of the month for invoicing the customer.","Each customer is allocated one or more message distribution system accounts (each identified by an account id). Every job must be associated with an account. The account defines certain operational characteristics of the job (such as the maximum size of a fax page, the quality of printing required, the message distribution system features which can be used, etc.) and is used in the billing process to determine how much to charge the customer for the job. A customer might typically assign groups of appropriately configured accounts to his organisational units (cost centres, departments or whatever) within his enterprise.","A sender normally interacts with the message distribution system (i.e., submits jobs, retrieves job status reports, etc.) by means of an online web interface. The customer nominates certain individuals within his organisation to do this; these individuals are known as users (and are identified by a user id which is unique within customer). Users access the web interface by means of a web browser such as Internet Explorer or Netscape.","In some cases, as an alternative to the web interface, it is possible for a user to submit a job using FTP file transfer across the Internet to the message distribution system. This option is discussed later in this document.","A recipient can receive his message via a number of different media delivered by various carriers. The media include the following:\n\n","It is anticipated that other media will be introduced in the future. The system architecture is designed to support introduction of new media with minimal development effort. An \u2018archive\u2019 medium to allow outgoing messages to be sent to an archive file may be implemented.","All the media listed above are uniquely addressable. This address is referred to as a destination id.","The format of the destination id is different for each medium type. For fax machines and mobile telephones, the destination id is a telephone number, for paper the destination id is a postal address, and for e-mails the destination id is an e-mail address. Thus a particular recipient might have the following destination ids, for example:",{"@attributes":{"id":"p-0159","num":"0240"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Fax destination id","+61 2 1234 5678"]},{"entry":["SMS destination id","+61 438 987654"]},{"entry":["Paper destination id","Mr P Jones, 24 Waratah St, St Leonards, NSW,"]},{"entry":[{},"2065"]},{"entry":["E-mail destination id","pjones@bigpond.com.au"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"One destination id per medium type is used. Destinations are specified on a \u2018per recipient\u2019 basis; in any particular job each recipient can specify different media and different destinations.","To initiate a job, a user submits template files and recipient files to the message distribution system. A job may require one or more template files. A template file contains just a single template. A job requires one or more templates for each delivery medium. For example, a job that handles SMS and e-mail might require one template for the SMS messages and five templates for the e-mail messages (one for the e-mail subject, one for the textual version of the e-mail body, one for the HTML version of the e-mail body and one for each of the two e-mail attachments).","Templates are supplied in a number of different formats including Adobe Acrobat PDF (PDF) format, TIFF image (TIF) format, Postscript URN) format, XML stylesheet (XSL) format, Microsoft Word (DOC) format and simple text (TXT) format.","Each template describes the invariant portions of the message (i.e., those portions which are identical for all recipients).","Certain types of templates (i.e., DOC, XSL and TXT only) are \u2018personalisable\u2019 (i.e., they may optionally contain one or more \u2018merge fields\u2019). Also XSL templates may be accompanied by \u2018template artifact files\u2019.\n\n","A job requires one or more recipient files. When the recipient files are received, the message distribution system concatentates or otherwise combines the recipient files all together into a single file. The contents of this file are known as the recipient list.","The recipient list comprises many recipient records (typically hundreds or thousands). Each recipient record may contain text that describes one intended recipient of the message. A recipient record may comprise the following information:\n\n","If the master transmission is unsuccessful (e.g., if the fax number is engaged or unobtainable), the message distribution system initiates attempt number 2 (i.e., the system tries to send the master transmission to paper and a copy to SMS). This marks the end of the message distribution system's processing because a third attempt is not specified.","II. The Web Interface","Interaction between users and the message distribution system may occur by means of a web browser interface. To commence interacting with the message distribution system, a user simply starts a web browser (e.g., Microsoft's Internet Explorer or Netscape's Navigator) and enters the appropriate URL.","Entering the URL establishes a logical link between the user and the message distribution System Engine and causes the \u2018logon screen\u2019  shown in  to be displayed.","The following description sets forth the screens to be displayed by the message distribution system and how they are used.","Customers, Users and Accounts","The web interface allows \u2018users\u2019 (representing \u2018customers\u2019 and operating under the message distribution system \u2018accounts\u2019) to submit jobs to the message distribution system and perform other operations.","Within the organisation of a system operator, there may be a group of staff who are responsible for operational control of the message distribution system and for supporting the message distribution system's customers. They are referred to here as the message distribution system Support Team. The Support Team has overall administrative responsibility for the system and, in particular, has the job of setting up new customers to use the system.","When a member of the message distribution system Support Team introduces a new customer to the system, the Team member creates the following items in the message distribution system database:\n\n","The message distribution system maintains information relating to a particular customer. This information may comprise the customer's account information, user information, and information about the various jobs submitted by that customer's users. This information may comprise and normally forms a \u2018closed group\u2019 from an access control point of view. A customer's users can only access information about accounts, users and jobs related to that customer. The users cannot access information about other customers. This is a security requirement of the message distribution system.","There may be one exception to this. The message distribution system Support Team may be registered within the message distribution system as a \u2018special customer\u2019 with a customer id of \u2018control\u2019. Users belonging to this special customer (\u2018control users\u2019) may have special powers as befits the supervisory role performed by the message distribution system Support Team. In particular, for control users only:\n\n","Control users may \u2018impersonate\u2019 a user of any nominated customer and thereby access the system as if the control users were representing that customer. When a customer is \u2018impersonated\u2019 by a control user in this way, it is known as a proxy customer.","The rules governing the web interface functions which various types of users are allowed to perform are summarised in the table  in . Descriptions of the functions shown in  are provided hereinafter.","The functions denoted with footnote \u201c1\u201d of  are customer-specific. They are performed for the nominated proxy customer (i.e., the control user first nominates a particular proxy customer and then performs the function). Other control customer functions do not require nomination of a proxy customer first. In relation to footnote \u201c2\u201d in , users may also be allowed to alter certain fields on their own USER record, but not on other users' USER records.","Logging On","A logon screen  that may be used is displayed in . The user may be required to enter a customer id, a user id and a password on the logon screen .","The Screen Layout","Once a user has successfully logged on, a main screen  in  is displayed and remains displayed until the user \u2018cancels\u2019 out of the screen. The main screen takes the form of a main menu on the left and, in some cases, a series of tabs across the top.  shows the scheme.","The left hand side is occupied by the main menu (\u2018Main menu 1\u2019, \u2018Main menu 2\u2019, etc.). The currently selected main menu option may be highlighted by enclosing the option in a black border (\u2018Main menu 2\u2019 in ).","The top of the screen may contain the customer name (followed by a customer id in brackets) and the user name (followed by the user id in brackets). The user name and id identify the user who is currently logged on. The customer name and id may denote the customer who \u2018owns\u2019 the user or, if the customer is \u2018control\u2019, the proxy customer. Proxy customers and administrator users may be displayed in italics.","The remainder of the screen comprises a panel or a panel group (i.e., one or more panels conceptually stacked on top of each other) corresponding to the currently selected main menu item. In the case of a panel group, tabs at the top of the screen may be used to display (i.e., bring to the top of the stack) the individual panels within the group. Each panel contains information comprising descriptive text, data entry fields, drop-down lists, radio buttons, checkboxes and other artifacts. Buttons to submit or cancel the panel or to invoke help information may be situated at the bottom.","Administration","An administration panel group allows a customer's USER and ACCOUNT records to be viewed and, in some cases, altered.","An example of a panel for viewing a user is shown in . There may be several variants of this panel, one for normal users, one for the customer's (or control) administrator user and one for the specific user represented by this USER record.  shows the panel , which would be seen by an administrator user.","The control administrator users and the customer's administrator users can enter information into any of the fields on this panel. For most standard users, all fields are \u2018read only\u2019. For the standard user to which this record applies, all fields except the \u2018password\u2019, \u2018contact\u2019 and \u2018test destination\u2019 fields are \u2018read only\u2019.","Most of the fields have a \u2018one to one\u2019 correspondence to the fields in the USER record on the database. The ticked items in the list of \u2018accounts for which this user may submit jobs\u2019 reflect the \u2018USER_ACCOUNT_XREF\u2019 records for this user.","Submitting a Message Distribution System Job","A user may submit a job to the message distribution system using one of two interfaces.\n\n","The standard interface is well suited to a customer who wishes to quickly generate simple memos or marketing materials and broadcast those messages to its customers. The enterprise interface is suited for stable applications, such as statements and invoices, where the format endures over a period of time, but is used repeatedly during that time.","Tables 3 and 4 summarise the differences between the two interfaces in technical terms.",{"@attributes":{"id":"p-0191","num":"0302"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Features"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Enterprise Interface","Standard Interface"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Templates and associated images are","Templates are submitted with each"]},{"entry":["predefined and stored in the message","job"]},{"entry":"distribution system database"},{"entry":["Mergeable templates are in XML","Mergeable templates are in"]},{"entry":["Stylesheet (XSL) format","Microsoft Word (DOC) or simple"]},{"entry":[{},"text (TXT) format"]},{"entry":["Recipient files can be in any format","Recipient files may be in CSV"]},{"entry":["(but are converted to XML by the","format (but are converted to XML"]},{"entry":["message distribution system)","by the message distribution"]},{"entry":[{},"system)"]},{"entry":["May output to e-mail, fax, SMS or","May output to e-mail, fax or SMS"]},{"entry":["paper","but not paper"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0192","num":"0303"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Template Formats"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Enterprise Interface","Standard Interface"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Type of Template",{},"Non-","Non-"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Medium","Usage","Mergeable","mergeable","Mergeable","mergeable"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}},{"entry":["Paper","One or","XSL","\u2014","\u2014","\u2014"]},{"entry":[{},"several"]},{"entry":[{},"pages"]},{"entry":["Fax","Subject","XSL","\u2014","TXT","\u2014"]},{"entry":[{},"page"]},{"entry":[{},"One or","XSL","\u2014","DOC","PDF,"]},{"entry":[{},"several",{},{},{},"Post-"]},{"entry":[{},"pages",{},{},{},"script,"]},{"entry":[{},{},{},{},{},"TIFF"]},{"entry":["E-mail","Subject","XSL","\u2014","TXT","\u2014"]},{"entry":[{},"line"]},{"entry":[{},"HTML","XSL","\u2014","\u2014","HTML"]},{"entry":[{},"body"]},{"entry":[{},"Text","XSL","\u2014","\u2014","TXT"]},{"entry":[{},"body"]},{"entry":[{},"Attach-","XSL","PDF","DOC","Any"]},{"entry":[{},"ment",{},{},{},"format"]},{"entry":["SMS","Message","XSL","\u2014","TXT","\u2014"]},{"entry":[{},"text"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}]}}},"The corresponding format of messages sent to carriers may vary:\n\n","The user first selects the account under which this job is run. The \u2018drop-down\u2019 list may list the names of all of the customer's (or proxy customer's) accounts that the user is authorised to use. When the user clicks \u2018Submit\u2019, a new panel is displayed to reflect either the enterprise or the standard interface (as specified in the selected account).","The Enterprise Interface",{"@attributes":{"id":"p-0195","num":"0316"},"figref":"FIG. 19","b":"1900","ul":{"@attributes":{"id":"ul0041","list-style":"none"},"li":{"@attributes":{"id":"ul0041-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0042","list-style":"none"},"li":["Job Reference","The job reference field may be optional. The user may enter a name for the job which is meaningful to him. This name is displayed on all reports concerning this job.","Job Type","This field offers the user a list of job types, each of which is identified by a name that is meaningful to the user. The user must select one item from the list.","Job types are represented in the message distribution system database as job configurations. Each job configuration comprises job-level information and a collection of template files and template artifact files that have been pre-prepared by the message distribution system Support Team, tested and stored within the database.","Recipient Files\n        \n        ","Job Start Time\n        \n        "]}}}},"The user selects \u2018Submit\u2019 to submit the job. After the job is submitted, the message distribution system locates the templates, template artifacts, and other job information corresponding to the specified job type in its database. The system then validates the recipient files as necessary. If errors are encountered during this validation process, the message distribution system displays details of the recipients in error. The user then corrects the errors and resubmits the job.","Viewing Job Status Reports","A user may request a job status report at any time after a job has been submitted. The message distribution system obtains the current status of the job from information on its database and displays an appropriate job status report on the screen (which the user may then print if the user wishes).","The example in  shows a full job status report  (i.e., including all four options) for an invoice distribution job submitted using the enterprise interface. The report  may be displayed in a \u2018printer friendly\u2019 format (black on white) and may be displayed in a new browser window. In the example, the message distribution system job id is \u201834656\u2019 and the job reference assigned by the user is \u2018Invoice3\u2019.","The job was submitted at 22:21 under account \u2018Essential Mail\u2019 and the job status report was generated 4 hours and 31 minutes later (at 2:52 am next morning), while the job was still in the \u2018second attempt\u2019 phase (as indicated by the \u2018job status\u2019). The possible job statuses are \u2018Processing not started\u2019, \u2018Attempt 1 in progress\u2019, \u2018Attempt 2 in progress\u2019, \u2018Attempt 3 in progress\u2019 and \u2018Complete\u2019 plus various error statuses. The job specified 763 recipients and was submitted via the enterprise interface.","The remainder of the report indicates the status of the message transmission at the time the report was generated. Information is divided into three categories:\n\n","In the example report , 763 master messages were sent, one per recipient. Altogether, 12 of them failed and caused a second attempt. Of the 763 master messages, two failed (even after attempting any specified redirections). Another four are still outstanding (i.e., the four messages were sent but the delivery status has not been determined yet). Another 94 \u2018copy\u2019 messages were sent. Of these, 89 were successfully delivered, two failed and three more are still outstanding.","The second and third sections of the report specify details of each individual transmission. Each transmission status is presented in the following format:\n\n","In the \u2018master message\u2019 section, all recipients whose master message transmission failed (even after several attempts) or is still \u2018in progress\u2019 are grouped at the front of the report. The others are sorted by recipient reference. In the \u2018copy message\u2019 section, recipients are sorted in the same sequence. The last section of the report indicates times when e-mail attachments were opened. Each attachment is identified by \u2018Xn\u2019 where \u2018n\u2019 is a number which identifies the attachment in the legend at the beginning of the section. The foregoing report  is merely an example, and numerous variations may be practiced without departing from the scope and spirit of the invention.","Job Configuration (Control Users Only)","The job configuration panel  of  is available to control users and is used to add, change and delete a cluster of records in the message distribution system database corresponding to a job configuration. Only the job configurations for enterprise interface jobs may be accessed.","After selecting the \u2018Job Configuration\u2019 main menu option, a selection panel is displayed offering the user a choice of selecting an existing job configuration or creating a new one. After completing this panel the main job configuration panel  is displayed.","The panel  of  shows full details of the specified job configuration. The information may be formatted as a number of sections divided by horizontal lines. Each section may represent one record in the job configuration record cluster. In the example shown, the job configuration comprise a JAVA_MAPPING_CLASS record, a JAVA_MAPPING_CLASS_RESOURCE record, a CONFIG_DATA record, a TEMPLATE record, and two TEMPLATE_ARTIFACT records.","Each section shows the filename of the file that is imported into the record and the values of other fields in the record. The user may alter fields as necessary. The user may also import new files (replacing the existing ones) by using the \u2018Browse\u2019 button (which may invoke a \u2018browse\u2019 window from which the user can select the file to import) followed by the \u2018Import\u2019 button. Alternatively, the user may use the \u2018Delete\u2019 button to delete the whole section (i.e., to delete the associated record).","For sections which can repeat, an \u2018Add a new . . . record\u2019 button is provided to add another empty section.","The section at the bottom of the panel allows the files within the cluster to be exported as a ZIP archive to a nominated file. The file may be stored on the message distribution system server in a specified directory (e.g., \u2018C:\\JobConfigurations\u2019) and may have an automatically generated name that is a concatenation of the customer name, job configuration display name (i.e., job type) and date. Changes are not made to the database until the user clicks the \u2018Submit\u2019 button. The delete button allows the whole cluster to be deleted if necessary.","IV. The FTP Interface","In certain cases, customers may need to generate recipient files from their enterprise systems and send the files to the message distribution system for distribution automatically (i.e., without human intervention). In such situations, the web interface may not be appropriate to their needs. The message distribution system therefore allows \u2018enterprise interface\u2019 style jobs to be submitted through the Internet by an FTP transmission. The FTP transmission replaces the job submission (and associated) screens. The customer, user and account records should be set up correctly before the FTP transmission.","After an FTP job submission, a user may use the normal message distribution system facilities (i.e., inspection of the Job Status Report) to monitor the progress of the job.","To submit a job via the FTP interface, the user employs an FTP client program to send a single ZIP file to the message distribution system via the Internet. The transmission process may be performed using SSL security and require the user to enter an FTP \u2018user id\u2019 (which may take the form \u2018ccccc-uuuuu\u2019, where \u2018ccccc\u2019 is the user's message distribution system customer id and \u2018uuuuu\u2019 is the user's message distribution system user id) and an FTP \u2018password\u2019 (which may be the same as the user's message distribution system user password).","The ZIP file contains the following files:\n\n","The format of the job control file (jobcontrol.xml)  is shown in . Most fields in the file are counterparts of their web interface equivalents. The test attribute specifies whether this is a test job or not. Customers may specify a unique \u2018job-reference\u2019 so that the customers can identify the job on the \u2018status report\u2019 screen later.","V. System Architecture","The internal architecture of the message distribution system is described hereinafter, including a selection of the major processing flows through the message distribution system. An overall knowledge of J2EE and Java web container concepts is desirable, but not essential for understanding the following description. Occasionally this section makes reference to tables (or \u2018record types\u2019) in the database. The names of these are printed in upper case. Details of the function and structure of the records are contained in Section VII.",{"@attributes":{"id":"p-0216","num":"0363"},"figref":"FIG. 23","b":["2400","2400","2410","2420","2402","2412","2414","2416","2410","2404","2412"]},"In the standard interface , job information is received from the user , and recipient lists and templates are uploaded. \u201cValidate\u201d is invoked to check recipient list. The submit request is received from the user, and the \u201csubmit\u201d process is invoked.","From interface , the standard job submission processor  of the back end  validates or checks the input data and submits the job. This involves converting the recipient list to XML and storing the job in the job queue. Processing then continues at flux module .","The enterprise interface receives job information from the user  and also uploads the recipient list. The recipient list is checked by invoking the validate process. The submit request is received from the user and submit is invoked to process the request. From the interface , processing continues at the enterprise job submission processor . This validates the recipient list by checking the input data, and operates the submit process, which converts the recipient list into XML and stores the job in a job queue. Processing then continues at flux . The output of processors  and  is an event. Actions then occur from flux .","The action proceeds to the bundle processor . The module  builds one transmission bundle for each medium type, and then initiates a process bundles thread (a, b, c and d) for each transmission bundle. These threads are depicted A, B, C and D and are coupled respectively to modules , , , and . Each of these modules , , , and  has a similar format. For example, the fax transmission bundle  involves merge, format and then transmit operations. The paper transmission bundle , the SMS transmission bundle , and the e-mail transmission bundle  have similar arrangements. The output of each bundle module is provided to a respective carrier, for example, expedite , EDI post , SMS reach , and message reach , which are all carriers. Each carrier provides a status report back to the back end . Expedite  provides a fax status report , EDI post  provides a paper status report , SMS reach  provides an SMS status report , and message reach  provides an e-mail status report .","The e-mail status report , the SMS status report , the paper status report , and the fax status report  are provided to the status collector module . This module  is invoked periodically by Flux. . It retrieves status information supplied by the carriers and applies it to the job queue. The job queue  has job and template information, recipient information and status information. The job queue  can provide billing records to the billing system  and update status information to the bundle processor . The job queue  provides output to the status report module , which retrieves status information, as an XML document preferably. The status report module  provides the job status report that is retrieved by the module  in the front end . The user  can retrieve the XML status report, formatted using XSL stylesheet and display it in a printer friendly format. These and other details are set forth in greater detail hereinafter.","The Job Queue","The job queue  is a main component of the message distribution system . The queue  contains details of every message distribution system job which is currently running, waiting to run or has recently completed. Each job is represented in the database by a cluster of records of various types. Each cluster is headed by a JOB record. The record contains details of the job itself, the templates that are used, the recipients to which messages are to be sent, the merge fields, and the destinations.","During normal operation, the message distribution system  scans the job queue  at predefined times (e.g. every minute) and extracts details of all jobs that are running or which have recently completed. Any message distribution system Support Team browsers that are displaying the \u2018console\u2019 panel access this data extract and use the data obtained to display the current status of jobs in the system. In this way, the message distribution system Support Team has an up-to-date overview of the job queue .","The team makes use of the functions offered by the \u2018Job control\u2019 panels to influence the processing of a job (e.g., recover a faulty job, retransmit transmission bundle files, etc). Thus, the job queue provides a central point of control which can be used to smooth processing loads on the system , react rapidly to customers' requests and fix unexpected problems without the need to resubmit users' jobs from scratch.","A job is placed in the job queue  as soon as the job has been validated and then submitted by the user via processor , or . The job remains in the queue  until the job has completed and for some time thereafter (to give the user time to inspect the job status report  produced by the job). It may be removed by a \u2018garbage collection\u2019 process later.","Processing a Job","Again,  shows the high level architecture  of the message distribution system. The large box  denotes the message distribution system itself. Data structures are modules , , , , , , , , and  and external entities are modules , , , , , , and . Processes are depicted by modules , , and  (servlets and JSPs) and modules , , , , and  (session beans).","The system  is essentially split into two halves, the front end  and the back end , and the job queue  represents the \u2018bridge\u2019 between them:\n\n","The front end does not access the database directly, but instead invokes session beans in the back end  to do so.","The Front End","The message distribution system front end  contains the logic concerned with handling the user interface. The front end  is designed to provide fast response to users , so lengthy processing tasks may be excluded from the front end .","The front end's main function is to receive jobs submitted by users ,  and to place them on the job queue  to await processing. The diagram shows three of the more important front end processes , , :\n\n","There may be other front end processes but, for the sake of brevity, such processes are not included in .","Each \u2018front end\u2019 process (comprising a mixture of servlets and JSPs) has a corresponding \u2018back end\u2019 session bean, which performs all its database retrievals and updates. This allows the front end  to provide good interactive response by freeing the servlets and JSPs from database access\/locking considerations.","Flux","Whenever the front end  places a job on the job queue , the \u2018front end\u2019 (or, to be more precise, the front end's session bean) triggers a Flux event . Flux is an event scheduling tool supplied by SIMS Software. The scheduling tool runs continually, as an independent process within the Java virtual machine, whenever the message distribution system  is active. The tool keeps its own tables of information within the message distribution system database. These are managed entirely by Flux . Flux module  responds to events triggered by timers or by other processes and takes predefined actions for each one. For example, when a new job is placed on the job queue , the front end's session bean defines an event to Flux  to be triggered immediately (or at some future time if the user has scheduled a job to be run later). When the event is triggered, Flux  invokes a session bean in the \u2018back end\u2019  to deal with the event.","The Back End","The \u2018back end\u2019  contains a set of session beans which act as \u2018helpers\u2019 to front end processes. The back end session beans perform the database access operations, which the front end components require. For example,\n\n","The back end  also contains the session beans which perform the \u2018real work\u2019 of the message distribution system , namely the processing of jobs obtained from the job queue . The processing of a job proceeds broadly as follows:\n\n","Once all the various carrier status reports for the first \u2018attempt\u2019 have been received and placed in the job queue , the message distribution system  scans the recipient data in the job queue  again. If there are any recipients for which the master (i.e., first) transmission of the first attempt failed, those jobs are reprocessed by the message distribution system  (by repeating steps 1 to 4 above) using their \u2018second attempt\u2019 transmissions. If the master transmissions of any of these second attempts fail, the process is repeated once more for the third attempt transmissions.","At any time during or after the processing of a job, the customer may request a consolidated \u2018job status report\u2019. This gives a complete summary of the job details, the number of recipients, and the fate of each message sent as at that instant in time. Optionally, the user can have this report automatically e-mailed to the user when the job completes. This option is indicated in the account record. The message distribution system may create a set of billing records (one for each attempted transmission to a recipient) containing full details of each transmission attempt (i.e., number of pages, number of bytes sent, success\/failure status, etc.) and sends them to the Billing System  where the records may be used to invoice customers.","VI. Data File Structures","The formats of several data files used by the message distribution system are described hereinafter.","Template Files","Template files can be supplied in a wide range of formats, which may be divided into two groups, namely those that can contain merge fields and those that cannot.","The first group may comprise XML Stylesheet (XSL) files, Microsoft Word (DOC) files and simple text (TXT) files.\n\n","Other types of template, which cannot contain merge fields, include the following:\n\n","Users of the enterprise interface  submit files to the message distribution system  in a wide variety of formats, whereas users of the standard interface  preferably submit them in \u2018comma separated values\u2019 (CSV) format. A special Java class (part of the Data Converter) is used to convert the submitted files to XML format in module  or  before placing them in the job queue  (in the message distribution system database). This class is held within the JAVA_MAPPING_CLASS record within the job configuration held in the database. The java mapping class may make use of other artifacts to assist in the mapping process. This might include other Java classes, XFlat mapping files, and XSL stylesheets. These artifacts are kept in JAVA_MAPPING_CLASS_RESOURCE records within the job configuration held in the database.","An XFlat mapping file is a set of statements (expressed in a format conversion definition language known as XFlat), which can be submitted to the \u2018XML Convert utility\u2019, a program which handles a wide variety of simple format conversions.","XML Format","A recipient file in XML format comprises a number of <recipient> elements, one per recipient. An example of such a file  (containing just one recipient) is shown in . The data in this example are described briefly below:\n\n",{"@attributes":{"id":"p-0245","num":"0429"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<address-line-1> <\/address-line-1>,"]},{"entry":[{},"<address-line-2> <\/adddress-line-2>"]},{"entry":[{},"... ..."]},{"entry":[{},"<address-line-6> <address-line-6>."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0076","list-style":"none"},"li":{"@attributes":{"id":"ul0076-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0077","list-style":"none"},"li":"Recipient Data\n        \n        "}}}},"The message distribution system database contains a variety of tables.  is an entity relationship diagram,  showing the tables and relationships. In , a \u2018many to one\u2019 correspondence between database tables is denoted by \u2018crows feet\u2019 on the \u2018many\u2019 side of the relationship.","Each table (variously referred to as \u2018record\u2019 or \u2018entity\u2019) and the columns (sometimes referred to as \u2018fields\u2019) within the table are described hereinafter. Every table contains a unique primary key preferably named \u2018xxxx_PK\u2019 (where \u2018xxxx\u2019 is the name of the table). This key is required for database replication reasons and is usually automatically generated.","Customers, Accounts and Users","The message distribution system has information relating to customers, accounts and billing preferences. The message distribution system only requires a subset of this information. For this reason, customers may be provided with direct online access to the billing system so that the customers have direct control over their accounts and billing preferences (and the message distribution system subset is downloaded to the message distribution system when necessary).","Data may be duplicated manually between the message distribution system and the billing system. If so, the amount of such data kept within the message distribution system may be kept to a minimum. The message distribution system stores customer-related information as three primary entities, namely customers , users , and accounts . Each customer \u2018owns\u2019 and administers his own group of users and accounts. The database tables and each field are described hereinafter.","Customer","This table  represents the customer and is an \u2018anchor point\u2019 in the database, to which all other entities are linked.\n\n","A user record  contains information about a user (i.e., a human being who accesses the message distribution system). The actual name of this table in the database is \u2018USER_\u2019. The trailing underscore character has been added to avoid conflicts with the SQL reserved word \u2018user\u2019.\n\n","The account record  contains information about an account. Each account  defines characteristics and constraints placed upon jobs run under that account.\n\n","This \u2018cross-reference\u2019 entity  specifies a single valid combination of users  and accounts . For each user, this entity defines the accounts the user may specify when the user submits the message distribution system job. For each account, this entity  defines the users which may use the entity.\n\n","The job queue exists as a set of tables within the message distribution system's relational database . In the entity relationship diagram of , job queue entities are:\n\n","Records , , , , , , , , , , , , , and  do not change once the job queue entry has been created whereas the records , , , and  are updated from time to time to indicate the state of job processing.","The records , , , , , ,  and  are set up at job submission time. The records , , , , ,  are also set up at job submission time for the standard interface but, in the case of the enterprise interface, may be set up by the message distribution system Support Team when the job is first implemented and retained across several jobs.","Job","At the top of the job queue hierarchy is the JOB record . There is one of these for each job in the queue and the JOB record  constitutes the \u2018anchor\u2019 record for all information related to a job.\n\n","The cluster of records comprising record types JOB_CONFIGURATION , TEMPLATE , TEMPLATE_ARTIFACT , CONFIG_DATA , JAVA_MAPPING_CLASS_RESOURCE  and JAVA_MAPPING_CLASS  defines various artifacts and configuration used by a job.","For a job submitted using the enterprise interface, this cluster of records is defined when the job is first set up by the message distribution system Support Team. The cluster of records is used by many jobs and remains unchanged from job to job. The cluster includes the contents of various data files (templates, images, etc.), each of which may be \u2018imported\u2019 into the database record as a binary object (BLOB) by the message distribution system Support Team when the cluster is set up.","For a job submitted using the standard interface, this cluster of records is created at the time the job is submitted and is relevant for that particular job. The templates are referred to from within the cluster but are not actually stored within the database itself; rather the templates are held separately as a flat file.","Job_Configuration","This record  is the \u2018anchor\u2019 for the job configuration record cluster.\n\n","This record  defines a template (i.e., a mergeable Microsoft Word, XSL or text document, or a non-mergeable document in PDF, TIFF, HTML or postscript format). For enterprise interface jobs, the template  itself is held within this record as a binary image. For standard interface jobs, the template  is held outside the database as a flat file (within the job submission folder).\n\n","This record  denotes images and other multimedia files used by the TEMPLATE records  in this JOB_CONFIGURATION . This record is defined for enterprise interface jobs (which use XSL templates).\n\n","This record  contains configuration data that is specific to a media type. The record is used for paper and contains information such as which paper feeder bins to use, whether to print double sided, etc. This record is defined for enterprise interface jobs.\n\n","This record  is mandatory and contains a Java class that is used to convert the recipient file to XML (possibly also making use of one or more JAVA_MAPPING_CLASS_RESOURCE records). Standard interface jobs use CSV-formatted recipient files, so those jobs utilise a standard java mapping class called \u2018CSVMapping.class\u2019.\n\n","This record  is optional and contains resource objects used by the Java mapping class for reformatting the recipient list information. The record  may contain any type of resource, for example, other java classes, XML stylesheets, or statements in the XFlat language (for input to the \u2018XML Convert\u2019 product).\n\n",{"@attributes":{"id":"p-0267","num":"0544"},"figref":"FIG. 27","b":"2800"},"Recipient Information","The RECIPIENT, ATTEMPT, TRANSMISSION, MERGE_DATA, DESTINATION, PAPER_ADDRESS_PARSED, PAPER_ADDRESS_UNPARSED, PHONE_NUMBER, and EMAIL_ADDRESS records , , , , , , , , , respectively, define the recipient information for a job.","Recipient","Each of these records  represents one recipient.\n\n","Up to three ATTEMPT records  may exist per recipient. Each one represents one \u2018<attempt>\u2019 as specified in the recipient list record. The ATTEMPT records  are sequence numbered so that the records can be accessed in the correct order. The ATTEMPT record's purpose is to group the TRANSMISSION records under it.\n\n","Up to three TRANSMISSION records  may exist per attempt. Each one represents a transmission specified in the \u2018<attempt>\u2019 element in the recipient list record. The TRANSMISSION records  are sequence numbered so that the records can be accessed in the correct order. The first one (always sequence number \u20181\u2019) represents the master transmission (which causes redirection if it fails).","The following fields are set up when the job is placed in the job queue:\n\n","The merge data  from the recipient record is stored here in XML text form here.\n\n","For each recipient, there is a DESTINATION record  for each medium (i.e., a maximum of four). The record contains the \u2018media id\u2019 (indicating fax, paper, SMS or e-mail) and \u2018points to\u2019 a single \u2018sub-record\u2019 which is one of the following record types.)\n\n","This record  contains an unparsed paper destination address.\n\n","This record  contains a parsed paper destination address.\n\n","This record  contains a phone number (i.e., a destination address for SMS or fax).\n\n","This record  contains an e-mail destination address.\n\n","When the message distribution system processes a particular job transmission attempt, the system sorts the recipients into \u2018transmission bundles\u2019 each targeted at a particular medium. Each transmission bundle is transmitted to a carrier and the fate of the transmission is eventually passed from the carrier back to the message distribution system. A TRANSMISSION_BUNDLE record  is created for each transmission bundle and is used to track its status.","Transmission_Bundle","There is one TRANSMISSION_BUNDLE record  for each transmission bundle. The record  is created when the bundle itself is created and deleted when the job is finally deleted from the database.\n\n","There is one CARRIER_REFERENCE record  for each transmission bundle file sent to a carrier for a particular medium type and job id. The record  is created when the transmission bundle file itself is created and deleted when the job is finally deleted from the database.","In most cases, an attempt only produces one transmission bundle file per media type but in some cases (e.g., fax transmission bundle files destined for Xpedite and exceeding 10 Mbytes), the file may be split into several separate files. For this reason, there may occasionally be several CARRIER_REFERENCE records  per TRANSMISSION_BUNDLE record .\n\n","This is a singleton record  that is used to allocate unique job ids to new jobs and unique record keys to other records.\n\n","The message distribution system is designed as a generalised message processing engine. The \u2018core\u2019 of the message distribution system itself is designed to broadcast messages of any type to any destination. However, the job types' (aka \u2018job configurations\u2019) of each the message distribution system customer have special processing characteristics. These fall into two categories:\n\n","These processing categories are referred to as Java Mapping Class processing and template merge processing, respectively. These processing categories both involve processing that is specific to each customer and job type, and the programs\/stylesheets for each are developed as part of the procedure for setting up a new job type on the system. Furthermore, the development of the programs\/stylesheets may be performed by a development team that is separate from the team which develops the message distribution system itself.",{"@attributes":{"id":"p-0286","num":"0628"},"figref":"FIG. 28","b":["2900","2910","2930","2940"]},"The \u2018core\u2019 of the message distribution system  is invariant. The system software  represents a generalised platform upon which any type of the message distribution system job can be run. The customer-specific components  and  are different for each job type.","In step , the user submits a job to the system software . The job information is assembled in step . In the Java Mapping Class , the recipient list is validated in step . Then the recipient list is mapped in step . Processing then continues in the system software , when the job is started in step . In step , the next recipient's merge data is obtained (\u201cget\u201d). The template  substitutes the recipient's merge values into the template's merge fields. The messages are sent in step  to recipients; also the next recipient's merge data is obtained in step .","Java Mapping Classes","A Java Mapping Class  (otherwise known as a Data Converter) is a powerful feature of the message distribution system . This class  allows a customer's recipient data to be supplied to the message distribution system in any format. The Java Mapping Class  is a separate adjunct to the message distribution system  itself which is tailored for specific customers' jobs. The class  converts all customers' recipient lists into the message distribution system's standard format as described in Section VI. The class  also offers the capability to make universal changes to a customer's recipient lists automatically. For example, a Java Mapping Class  may implement a universal requirement such as \u201csend by fax to all recipients in NSW but by e-mail to other recipients\u201d. There is one java mapping class  for each job type (aka \u2018job configuration\u2019), whose function is to validate  recipient files received from a customer and to convert  them into the message distribution system's standard recipient list format.","The class  provides two major methods, \u2018validate\u2019 and \u2018map\u2019 which are called by the message distribution system when necessary. The Java Mapping Class  itself is kept in the database (in a JAVA_MAPPING_CLASS record) and the various resources which the class needs (i.e., XFlat schemas and XSLT stylesheets) are also kept in the database (in JAVA_MAPPING_CLASS_RESOURCE records).","The Special Java Mapping Class Environment","The class file of a Java Mapping Class is not stored within a JAR file like other the message distribution system classes; instead this file is kept within the database, in a JAVA_MAPPING_CLASS record, as part of the Job Configuration. The message distribution system automatically reads the class file into memory from the database whenever the class file is needed and then loads the file using a special message distribution system subclass of the Java ClassLoader (referred to here as the \u2018special ClassLoader\u2019).","The Java virtual machine distinguishes all classes by the ClassLoader used to load the classes. Classes loaded by a particular ClassLoader can only access other classes which are specifically designated on the \u2018classpath\u2019 for that ClassLoader. The Java virtual machine is split into separate \u2018worlds\u2019. All classes that are loaded with the same ClassLoader can access each other directly but a class in one \u2018world\u2019 cannot easily access a class in another \u2018world\u2019. The term \u2018world\u2019 has been coined here to describe this concept.","This Java feature has been deliberately used to restrict Java Mapping Classes from accessing the message distribution system \u2018core\u2019 classes. Java Mapping Classes operate in a different \u2018world\u2019 from the rest of the message distribution system:\n\n","Thus Java Mapping Classes are \u2018divorced\u2019 from the message distribution system and cannot access the message distribution system classes at all, so Java Mapping Classes can be enhanced or amended without requiring corresponding changes to the message distribution system itself. This significantly simplifies system administration and protects the system against \u2018rogue\u2019 Java Mapping Classes.","The message distribution system itself and its Java Mapping Classes can be visualised as separate \u2018islands\u2019 within the same Java virtual machine. The message distribution system passes arguments to the Java mapping classes using the \u2018reflection API\u2019 (ordinary method invocations do not work).","Regarding the argument-passing mechanism, as a practical example, consider how the job information (job id, job reference, job submission folder and recipient files) for an enterprise job is passed from the message distribution system to a Java Mapping Class.","The message distribution system includes a class called \u2018EnterpriseJobSubmission\u2019 that contains all this information and more (stored in a variety of formats including simple strings and other the message distribution system-defined classes). An obvious strategy is to simply pass the EnterpriseJobSubmission object to a \u2018setJobSubmission\u2019 method in the Java Mapping Class. This fails, because the Java Mapping Class has no knowledge of the \u2018EnterpriseJobSubmission\u2019 class since the definition of this class is not included in the classpath supplied to the ClassLoader that was used to load the Java Mapping Class. In short, the Java Mapping Class is only aware of classes in its own \u2018world\u2019; the class knows nothing of classes in the message distribution system's \u2018world\u2019. However, each Java Mapping Class is aware of a class called \u2018EnterpriseJobSubmissionData\u2019. This class definition is part of the Java Mapping Class's own \u2018world\u2019 (and therefore is not part of the message distribution system's world). So, before invoking the Java Mapping Class, the message distribution system creates an instance of EnterpriseJobSubmissionData (using the special ClassLoader) and places the necessary data (ie, job id, job reference, job submission folder and recipient files) into the instance using its \u2018setter\u2019 methods. The message distribution system has to invoke these setter methods by reflection because the object exists in the other \u2018world\u2019. The message distribution system then creates an instance of the Java Mapping Class itself (again using the special ClassLoader). Finally, the system passes the EnterpriseJobSubmissionData object to the Java Mapping Class  using one of its \u2018setter\u2019 methods.","The Java Mapping Class  can access this object and store the object in one of its member variables in the usual way, because the object is within its own \u2018world\u2019 and all the objects which it contains are simple objects (Strings, Arrays, Files, etc.) that are part of the standard Java environment. Passing of information between the message distribution system and Java Mapping Classes  uses the technique just described.","Java Mapping Class Methods","A Java Mapping Class for an enterprise interface job must extend the EnterpriseMapper class (which, in turn, extends the Mapper class) and must also implement the CustomMapper interface. This requires the methods shown in Table 5:",{"@attributes":{"id":"p-0300","num":"0644"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Method Type","Method Signature","Where Defined","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["public void","setJobSubmissionData(Object","Mapper","Set information"]},{"entry":[{},"jobSubmissionData);",{},"about the job"]},{"entry":["public void","SetMappingResources(ArrayList","Mapper","Set information"]},{"entry":[{},"mappingResources);",{},"about mapping"]},{"entry":[{},{},{},"resources"]},{"entry":[{},{},{},"(XFlat files,"]},{"entry":[{},{},{},"XSL templates,"]},{"entry":[{},{},{},"etc.)"]},{"entry":["public","validate( );","Java Mapping","Validate the"]},{"entry":["boolean",{},"Class","recipient files"]},{"entry":["public","map( );","Java Mapping","Create the"]},{"entry":["boolean",{},"Class","mapped"]},{"entry":[{},{},{},"recipient file"]},{"entry":["public String","GetErrorMessage( );","Mapper","Get error"]},{"entry":[{},{},{},"message text"]},{"entry":["public String","getEventId( );","Mapper","Get event id"]},{"entry":["public","isUserError( );","Mapper","True if user"]},{"entry":["boolean",{},{},"error occurred."]},{"entry":["public int","getErrorCode( );","Mapper","Get error code"]},{"entry":["public File","getMappedRecipientFile( );","EnterpriseMapper","Get mapped"]},{"entry":[{},{},{},"recipient file"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"Methods, systems, and computer program products have been disclosed for bulk communication of information to a single set of recipients via multiple delivery media based on the recipients' delivery preferences and incorporating escalation. While only a small number of embodiments have been described, it will be apparent to those skilled in the art that, in the light of this disclosure, modifications and\/or substitutions may be made without departing from the scope and spirit of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A small number of embodiments of the invention are described hereinafter with reference to the accompanying drawings, in which:",{"@attributes":{"id":"p-0020","num":"0023"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0024"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0025"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0026"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0027"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0028"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0029"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0027","num":"0030"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0028","num":"0031"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0029","num":"0032"},"figref":"FIGS. 10","i":["a","c "],"b":"10"},{"@attributes":{"id":"p-0030","num":"0033"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0031","num":"0034"},"figref":["FIG. 12","FIG. 11"]},{"@attributes":{"id":"p-0032","num":"0035"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0033","num":"0036"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0034","num":"0037"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0035","num":"0038"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0036","num":"0039"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0037","num":"0040"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0038","num":"0041"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0039","num":"0042"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0040","num":"0043"},"figref":"FIGS. 21A and 21B"},{"@attributes":{"id":"p-0041","num":"0044"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0042","num":"0045"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0043","num":"0046"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0044","num":"0047"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0045","num":"0048"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0046","num":"0049"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0047","num":"0050"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0048","num":"0051"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0049","num":"0052"},"figref":"FIG. 30"}]},"DETDESC":[{},{}]}
