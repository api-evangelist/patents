---
title: Capturing OLAP analysis thread as refreshable business intelligence data
abstract: Described herein are methods and systems for capturing OLAP analysis thread and transferring the data into a data visualization tool. According to one aspect, OLAP analysis step queries and the corresponding results are recorded and transferred to a data visualization tool. In another aspect, the data in the data visualization tool may be refreshed without affecting the data format.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08892501&OS=08892501&RS=08892501
owner: SAP SE
number: 08892501
owner_city: Walldorf
owner_country: DE
publication_date: 20091222
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims the benefit of and priority to U.S. Provisional Patent Application No. U.S. 61\/176,499, filed 8 May 2009, titled \u201cCAPTURING OLAP ANALYSIS THREAD AS REFRESHABLE BUSINESS INTELLIGENCE DATA,\u201d which is incorporated herein by reference in its entirety.","The invention relates to Online Analytical Processing (OLAP) analysis. More precisely, the invention relates to transforming an OLAP analysis thread into a content to be presented in a data visualization tool.","OLAP analysis is form analysis associated with multi-dimensional data and ad hoc methods. OLAP ad-hoc analysis typically includes analyzing multidimensional data by dissecting, aggregating and filtering the data along a number of dimensions and measures. Often there is a need to convey the insight gained by the analysis to others. One of the most popular means of sharing insights involves building a presentation mixing text and visualizations of the back-end data. However, transferring the data from a Business Intelligence (BI) OLAP client into a data visualization tool such as PowerPoint by Microsoft Corporation or a word processing tool where the data can be presented along with questions, answers or insights, can be very time consuming and often needs to be repeated when the underlying data changes.","There are several tools that allow for an interface to import or connect back-end data into front end tools such as applications in the Microsoft Office suite. For example, SAP BusinessObjects Live Office, available from SAP Americas, Palo Alto, Calif., allows a user to place visualizations of data in a data visualization tool and refresh them periodically. However, when creating or refreshing such visualizations the user has to manually save each query view and import them to the visualization tool one by one. Providing a way to transform the steps followed in generating the reports and the analysis within an OLAP tool and import them into a data visualization tool like Microsoft PowerPoint may reduce the manual intervention and make the transition between reporting and visualization environments more seamless.","Various embodiments of computer implemented methods and systems for converting an OLAP analysis thread into content to be presented via a data visualization tool are described herein. In one embodiment of the invention, the method includes recording an analysis step that changes a corresponding query to a multidimensional data source, wherein the query is associated with a first part of an analysis step record for the analysis step and recording a result set corresponding to the query as a second part of the analysis step record. The method also includes transferring the analysis step record into a data visualization tool.","In another embodiment of the invention, the system includes an OLAP database, a data access interface to provide homogenous data access, and an OLAP client to send requests to the data access interface. The OLAP client is able to keep track of the queries sent and the results received and may transfer the tracked data into a data visualization tool.","These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.","Embodiments of techniques for capturing OLAP analysis thread and transferring the data into a data visualization tool are described herein. In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.","While analyzing multidimensional data by dissecting, aggregating and filtering the data along a number of dimensions and measures, the user leaves a trail. Such trail may comprise member selection, navigation, pivoting (e.g. filter, drilldown), drilling down, drilling up, creating a calculated member, and so on. This trail can be identified as a sequence of query \u201csnapshots\u201d, recorded and added to a data visualization tool.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 1A","FIG. 1B"],"b":["100","150","110"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2","FIG. 2"],"b":"210"},"Referring again to , at block , a result set corresponding to the query is recorded. According to one embodiment, both of the query and the result set form an analysis step record. An analysis step record is a snapshot of the analysis representing exactly one snapshot in a recording of an analysis. In one embodiment, the analysis step record is stored in a file. This file serves as a mediator for transferring the data representing the analysis step record. The mediator file is meant to hold the analysis step record in a format that may be read by other applications, for example, data visualization tools. The feature of reading the mediator file may be implemented as part of an Add-In program to the data visualization tool. Specifically each changed query is saved in the computer's memory. For each changed query an analysis step record is added to a list. Each of these analysis step records can be saved (e.g., serialized) as an Extensible Markup Language (XML) document. Thus, the analysis step records in an XML file may be used by other applications such as data visualization tools.","In one embodiment, the XML document is Business Intelligence Consumer Services (BICS) XML document. Business Explorer (BEx) Analyzer from SAP AG, Walldorf, Germany uses the BICS data access interface, which allows to query data from multiple relational and OLAP data sources. U.S. Pub. No. 2007-0027876 A1 and U.S. Pub. No. 2007-0027829 A1 explain this technology in further detail and are incorporated herein by reference. Hierarchies and other BI specific features are available in the BICS data access interface. BICS data access interface provides an Application Programming Interface (API) for defining queries and retrieving the result set via a proprietary XML document. Thus any query \u201csnapshot\u201d can be exchanged by transferring the BICS XML document.  represents exemplary data that is subject of OLAP analysis and  represent the content of a BICS XML file according to one embodiment. The first part of the content is a structural description of the query, for example, Customer dimension \u00d7Product dimension  on row axis (XML tag <axis \u201crows\u201d> ), Calendar Year dimension \u00d7Measures  (XML tag <axis \u201ccolumns\u201d> ) on column axis, global and dynamic filters (XML tags <Selection Space>  and <Selection_State> ). The second part of the content is the data in the result set  (XML tag <Result_Set> ). The result set  is represented as a matrix with the data.","Turning back to , each analysis step record is transferred from the mediator file, such as a BICS XML document, into a data visualization tool, as shown in block . A data visualization tool can be any type of document editor where the focus is on formatting, arranging and presenting the data (e.g., Microsoft PowerPoint, IBM Lotus Symphony Presentations, etc). In some embodiments, a brief description for the query snapshot is translated into natural language and placed as a title on a slide in the data visualization tool. This may be done, for example, by placing the localized common names of measures, dimensions, filter values, and the like in a sentence with appropriate punctuation and supporting phrases. In some embodiments, the result set of an analysis step record is placed as a visual presentation of data, such as a table or chart, on a separate slide in the data visualization tool. Then the slides in the data visualization tool may be formatted or deleted if it is not needed for conveying the main message of the performed analysis.","In one embodiment, only the query is recorded in a mediator file but not the result set. After transferring the query to the data visualization tool, the result set can be retrieved, because the query exactly defines a description of how to retrieve the result set.","In one embodiment, if the data comes from a spreadsheet grid, it is displayed as a PowerPoint table. In another embodiment, if it was displayed as a chart in a spreadsheet application then the PowerPoint slide will also display a chart. In general, OLAP tools support visualizations, such as, tables (e.g. crosstabs), charts, maps and tag clouds. After the data in the visualization is placed on PowerPoint slides, the data may be converted from one form of visualization to another. For example, from a table to a chart or vice versa. In one embodiment, if a table does not fit on one slide, the data may be split and distributed over several slides.","In another embodiment, a \u201cTable of Contents\u201d slide is generated automatically after all slides have been created: one slide with the list of the selected slide titles, which are hyperlinked to the corresponding slide. This allows fast detection of a concrete analysis step.","Referring again to , at block , the data in the slide presentation or any other data visualization tool is refreshed in a manner that does not affect the formatting of the data. Since a refresh does not change the filters or query definition, the slide title and its edits to it are not affected by the refresh. Only the data in the table\/chart is updated.","In one embodiment, there might be two or more queries in a spreadsheet application, for example Microsoft Excel, Lotus , with two crosstabs based on their own queries with differing dimensions, measures, filter values or the like. If the analysis starts with steps on the first query and continues with some other steps on the second query and switches back and forth, this does not seem to be a very common task for tracing the two threads. If necessary from business user perspective, the analysis step records for the two different queries may be separated by using query name metadata. Thus the data for two threads will be transferred to two separate data visualization tool documents.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 5","b":["510","540","550","510","520","530"]},"An analysis is performed, where an OLAP client , for example in the form of an Application Programming Interface (API), is used to create queries and analyze data from the databases . The OLAP client  sends queries, which are translated to the respective database from the OLAP databases  through the data access interface . The data access interface  is used for translating the data from the OLAP client  into a format native for the different databases . In one embodiment, the data access interface  may also be able to define which database to search in for the required data, depending on the request from the OLAP client . After a query is executed, the result is sent back through the data access interface  to the OLAP client . The OLAP client, by itself, may be operable to keep track of the queries and the responsive results during the analysis. Each analysis query and its correspondent result are saved in a BICS XML file . This is possible because the result set is translated back into the format of the OLAP client  through the data access interface . As the queries come from the OLAP client , the queries can be inserted in the same BICS XML file  together with the result set. Thus, the requested data can be serialized in a BICS XML file  regardless of the nature and the format of the requested data. The data in the BICS XML file  may then be transferred to a data visualization tool document . The data visualization tool document  serves as a basis for a presentation describing the analysis thread being performed. In one embodiment, a previously created data visualization tool document  may refresh the existing data, while preserving the custom format of the data in the data visualization tool document .","According to one embodiment, the process of compiling a set of queries as a slide presentation can also be used for creating a \u201cbriefing book\u201d, where the data can be refreshed periodically. In addition, a presentation may contain an agenda or overview of topics (e.g. table of contents). A link from the overview slide to the specific slide will allow the user to quickly access the information needed.","Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable medium as instructions. The term \u201ccomputer readable medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer readable media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include computer code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with computer readable software instructions.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 6","b":["600","600","605","655","600","640","655","610","615","610","615","605","615","600","625","630","600","625","630","600","635","600","650","650","600","645","600","620","660","660","660","650","660"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transactional, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transactional data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system (e.g., ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments of the invention with particularity. The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
