---
title: Error/exception helper
abstract: An error/exception helper may provide tailored help when an error such as an exception is generated. A source program editor interface may be displayed and/or focus given to the program editor interface. An error/exception bubble or tool tip may be displayed, which, in one embodiment of the invention, points to the line of code that generated the exception. The error/exception bubble may include a link to a help topic or the actual help text may be displayed within the bubble. The bubble may also include one or more actions that may be taken to correct the error or a link to a procedure to perform the action(s). The source code may be edited, actions initiated and execution re-initiated at which time the bubble and editor interface display may be dismissed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07685570&OS=07685570&RS=07685570
owner: Microsoft Corporation
number: 07685570
owner_city: Redmond
owner_country: US
publication_date: 20030609
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS"],"p":["The invention relates to programming tools and in particular to an error\/exception helper that provides tailored assistance when an error or exception occurs in program execution.","A programming error that leads to the abnormal termination of a program is called an error. When an error occurs, an exception may be generated (or \u201craised\u201d). For example, an exception may be generated by an arithmetic logic unit or floating-point unit of a processor when an operation such as dividing by zero is detected or when an overflow or underflow condition occurs. An exception may also be generated by trying to execute an undefined instruction, or by privilege violations.","Today, when an application being debugged generates an exception, typically, a dialog box provides a message such as:\n\n","This type of dialog fails the developer because the dialog is presented out-of-context from the code that generated the exception, making it difficult for the developer to fully understand what went wrong. Also, the choices presented by the dialog are confusing. It is not clear what distinguishes \u201cContinue\u201d from \u201cIgnore\u201d. The \u201cContinue\u201d option can be confusing because when this option is selected, the application may actually shut down. Typically, selecting the \u201cHelp\u201d option launches a topic on using the dialog rather than a topic on how to handle the exception. Finally, the content of the dialog itself is parsimonious, confusing and does little to help the developer solve the problem in her code.","It would be helpful if a programming tool that addresses the above shortcomings were available.","An error\/exception helper may provide tailored help when an error such as an exception is generated when an application is run. A break may be generated and a source program editor interface may be displayed and\/or focus given to the program editor interface. An error\/exception bubble or tool tip may be displayed, which, in one embodiment of the invention, points to the line of code that generated the exception. The error\/exception bubble may include a link to a help topic or the actual help text may be displayed within the bubble. The bubble may also include one or more actions that may be taken to correct the error or to provide debugging help. The bubble may also include a link to a procedure to perform the action(s). The source code may be edited and execution re-initiated at which time the bubble and editor interface display may be dismissed.","Overview","An error\/exception helper may provide tailored help when an error such as an exception is generated when an application is run. A break may be generated and a source program editor interface may be displayed and\/or focus given to the program editor interface. An error\/exception bubble or tool tip may be displayed, which, in one embodiment of the invention, overlays the program editor interface and points to the line of code that generated the exception. If the error was generated in system code, the error\/exception bubble may point to the last line of user-code that was executed before the system error was encountered. The error\/exception bubble may include a link to a help topic or the actual help text may be displayed within the bubble. The bubble may also include one or more actions that may be taken to correct the error or a link to a procedure to perform the action(s). The source code may be edited and execution re-initiated at which time the bubble and editor interface display may be dismissed.","For example, suppose a developer or other user is running an application and an exception is generated. A break may be generated and a user interface such as the one illustrated in  may be displayed. A program editor (e.g., program editor ) may be opened or if already open, may acquire focus. The program editor interface may display the source code (e.g., source code ) containing the error or line of code that generated the error\/exception and an error\/exception bubble or tool tip such as bubble  may be displayed, overlaying the source code. Bubble  may point to the line of code  that generated the exception and may include information such as the type of exception generated , troubleshooting tips and possible actions that may be taken to correct the error . In one embodiment of the invention the type of exception generated may be a link to a relevant help topic in a help file. Alternatively the entire help topic may be displayed in the bubble. The link or help information may be accompanied by particular information associated with the exception ","If the user clicks on a help link such as link in the bubble , an associated help topic may be launched. Alternatively, a user may select or click on an action link, launching an action to be performed. For example, suppose a database query string is improperly formatted (e.g., missing commas). Upon execution, database-access code will raise an exception. An exemplary action in one embodiment of the invention may display a database query editor which may help the user recognize the syntax error of the missing comma. The developer thus may more easily correct the code that generates the query string. Upon dismissal of the help topic or completion of the action, bubble  may remain visible. The source code  may be edited within program editor  and the program or application may be executed. The program editor  may be automatically closed (or may lose focus) and the bubble  may be dismissed when the application is executed. The bubble  may be explicitly dismissed by clicking on an exit indicator such as [X] . Bubble  may be re-opened after dismissal via a bubble icon that hovers over the program editor display. Clicking on or selecting the bubble icon may re-open the error\/exception bubble display interface.","Exemplary Computing Environment",{"@attributes":{"id":"p-0017","num":"0019"},"figref":"FIG. 1"},"Although not required, the invention can be implemented via an application programming interface (API), for use by a developer, and\/or included within the network browsing software which will be described in the general context of computer-executable instructions, such as program modules, being executed by one or more computers, such as client workstations, servers, or other devices. Generally, program modules include routines, programs, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. Typically, the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations. Other well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers (PCs), automated teller machines, server computers, hand-held or laptop devices, multi-processor systems, microprocessor-based systems, programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.",{"@attributes":{"id":"p-0019","num":"0021"},"figref":"FIG. 1","b":["100","100","100","100"]},"With reference to , an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus (also known as Mezzanine bus).","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CDROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation, illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only, illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk , such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in  provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB).","A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . A graphics interface , such as Northbridge, may also be connected to the system bus . Northbridge is a chipset that communicates with the CPU, or host processing unit , and assumes responsibility for accelerated graphics port (AGP) communications. One or more graphics processing units (GPUs)  may communicate with graphics interface . In this regard, GPUs  generally include on-chip memory storage, such as register storage and GPUs  communicate with a video memory . GPUs , however, are but one example of a coprocessor and thus a variety of coprocessing devices may be included in computer . A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface , which may in turn communicate with video memory . In addition to monitor , computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation, illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","One of ordinary skill in the art can appreciate that a computer  or other client device can be deployed as part of a computer network. In this regard, the present invention pertains to any computer system having any number of memory or storage units, and any number of applications and processes occurring across any number of storage units or volumes. The present invention may apply to an environment with server computers and client computers deployed in a network environment, having remote or local storage. The present invention may also apply to a standalone computing device, having programming language functionality, interpretation and execution capabilities.","System and Method for Providing Tailored Error\/Exception Help",{"@attributes":{"id":"p-0029","num":"0031"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["202","216","220","222","224","214","206","212","208","204"]},"Source code file  typically is a set of instructions that a programmer or developer types or edits, and is written in a given programming language or combination of programming languages. Source code  typically comprises one or more statements, each statement typically comprising one or more expressions and\/or entities. The expression and\/or entities in the statement can be made up of multiple components. Source code  may be created or modified by editor  and may be persisted onto a stable storage medium.","Applications may be created from source code  using the design environment (e.g., exemplary integrated design environment (IDE) ). The design environment may include one or more compilers, here represented by compiler , one or more language services (not shown), one or more design tools (represented herein by debugger , one or more editors, here represented by editor , browsers (not shown), and the like. IDE  may represent, for example, MICROSOFT VISUAL STUDIO .NET, or DREAMWEAVER by MACROMEDIA or BORLAND C++ BUILDER STUDIO 6 or any other software development\/design tool, compiler or environment.","A design environment such as IDE  may generate from source code  executable code capable of being run in a stand-alone execution environment (not shown) or may generate an intermediate form of code that is interpreted or compiled again and run by an execution environment. Such an execution environment may include elements required in order to run the compilation produced by the design environment IDE  from the source code . The execution environment may include elements that produce native code from a non-device-specific intermediate language code. The development and execution environments may in addition include various class libraries (not shown). A suitable execution environment may, for example, represent MICROSOFT COMMON LANGUAGE RUNTIME .NET or JAVA or any other suitable execution environment. The application executable may be loaded, along with shared class libraries and the execution environment onto one or more computers (not shown) and run.","Editor  facilitates the development of source code  of a computer program. Editor  may be a BASIC, COBOL, FORTRAN, C, C++, a C#, JAVA, J#, VISUAL BASIC, REAL BASIC, DELPHI, ASP, PASCAL, HTML, XML, ADA, PERL, DYLAN, PYTHON, SMALLTALK, TCL-TK, EIFFEL editor, or the like.","Compiler  may represent a BASIC, COBOL, FORTRAN, C, C++, C#, JAVA, J#, VISUAL BASIC, REAL BASIC, DELPHI, ASP, PASCAL, HTML, XML, ADA, PERL, DYLAN, PYTHON, SMALLTALK, TCL-TK, EIFFEL compiler or interpreter or any other suitable compiler or interpreter.","In one embodiment of the invention, if an error or exception is generated when running executable  in debug mode, debugger  may send a notification to error\/exception helper  that an error or exception has occurred. Debugger  may also send an indication of whether user code or non-user code has generated the exception and whether the user code that generated the exception includes code to handle the exception. In one embodiment of the invention, user code is distinguished from non-user code by the presence of debug information.","In one embodiment, if user code has generated the exception and no code is included in the user code or in the underlying operating system to handle the exception, (referred to herein as an unhandled exception), a break is generated (i.e., the application stops executing) on the last line of user-code that generated the exception and the error\/exception help bubble (e.g., bubble  of ) is displayed, pointing to the lastline of user-code that generated the exception. If the exception was generated in system code called by the user-code, the error\/exception help bubble may likewise point to the last line of user-code executed before the system error was encountered, (i.e., the bubble may point to the line of code that called the system code that generated the exception). If the user clicks on a link in the helper bubble, (e.g., bubble ), a help topic associated with the type of exception generated may be displayed. If the user returns to the source code editor interface, (e.g., source code editor ), after dismissing the help topic, the helper bubble may remain visible. The user may edit the code in break mode and\/or initiate an action and re-initiate execution. In one embodiment of the invention, when execution is initiated, the source code editor interface and the bubble are dismissed. The bubble may be explicitly dismissed by clicking on an exit indicator (e.g., [X] ) and may be reopened by clicking on an exception helper icon that hovers over the editor interface display.","A user-unhandled exception occurs when a block of user code generates an exception that will be handled either in operating system code or in a user code block that occurs further along. For example, an application may have a global exception handler that logs errors (an operating system feature). When a user-unhandled exception occurs, the user may wish to handle the exception in the block that generated the exception or may wish to have the global exception handler handle it. In one embodiment of the invention, to accommodate either option, when a user-unhandled exception occurs, a break is generated (i.e., the application stops executing) on the line of code that generated the exception and a user interface is displayed with options to \u201cbreak\u201d or \u201ccontinue\u201d. If the \u201cbreak\u201d option is selected, a call stack, a data structure used to keep track of the sequence of instructions executed is unwound (i.e., items are popped off the call stack) to the last line of user code that was called before the exception was generated and a break is initiated. At this point the procedure for editing the source code and displaying a help bubble as described above for unhandled exceptions may be enabled.","Alternatively, in one embodiment, if the \u201ccontinue\u201d option is selected, execution continues and the exception is handled by the operating system code and\/or the application aborts. If the user begins to edit the source code without selecting the break option, a break automatically occurs, allowing the editing of the source code.","Finally, if a handled exception is encountered, an icon representing the error\/exception helper appears, enabling the user to select the icon and resulting in initiation of a break in execution and the appearance of the error\/exception bubble. An icon as described above may also be displayed if a user stops program execution by setting a breakpoint inside a section of error-handling user-code.","When the error\/exception helper is initiated, the debugger, in one embodiment of the invention, sends the error\/exception helper information such as information concerning the type of exception, the name of the application programming interface that the user called, and state information. State information may include information such as but not limited to a connection string, a particular file path. The error\/exception helper may use information provided by the debugger to access a table index or look up table of error\/exception help information  to locate and display information or a link to information concerning the exception. The information accessible via information stored in the look up table  may include generic help, particular help and\/or troubleshooting tips and actions that may be taken to correct or diagnose the problem. The error\/exception helper may also or alternatively display particular information concerning the exception derived from the state information from the executing application. Information displayed may also include information concerning actions that may be taken to correct the error that resulted in the generation of the exception. Help concerning the exception type may be launched from within the error\/exception bubble. Actions may involve interactions with the design and\/or execution environment.",{"@attributes":{"id":"p-0041","num":"0043"},"figref":["FIG. 4","FIG. 4"],"b":["402","404","408","410","412"]},"If, at step , the exception is determined to be an unhandled exception, a notification that an unhandled exception has been received is sent at step . Additional information sent in addition to the notification that a unhandled exception has been generated may be information concerning the type of exception, the name of the application programming interface that the user called, and state information. State information may include information such as but not limited to a connection string, or particular file path. At step  a user-determined option is consulted to determine if a user interface is to be displayed. If a user interface is to be displayed, processing continues at step  and the error\/exception bubble is displayed. If the user interface is not to be displayed, execution continues at step . At step , the absence of error handling is detected and the error\/exception bubble is displayed in step .","When the error\/exception bubble is displayed, information (such as state information) received may be used to access a lookup table and display help and action information and links within the bubble. Selecting one of this links at step  may launch a help information display at step  or may initiate an action at step . Processing can continue until the feature is exited at step .","For example, suppose a line of code in an application includes an arithmetic operation, divide by zero. Suppose the application is executed in debug mode. When the divide by zero operation is encountered, an exception is generated (step ). Suppose there is no error trapping logic in the application for catching a divide by zero operation. In this case, an \u201cunhandled\u201d notification may be sent to the error\/exception helper at step . At step , a user-determined option is consulted to determine if a user interface is to be generated at step . If an interface is to be generated, the error\/exception bubble is displayed at step .","Now suppose that a developer wrote the following line of code:","Dim frm As Form","instead of:","Dim frm As New Form","In one embodiment of the invention, the user interface of would be displayed.","Now suppose a developer wrote the following line of code:","Dim conn As New SqlClient.SqlConnection (\u201cInitial Catalog=Northwind; Data Source=XXXXXXXX; Packet Size=4096; Workstation ID=ERICKN1; Integrated Security=SSPI; Persist Security Info=False\u201d)","instead of using a valid server name, such as:","Dim conn As New SqlClient.SqlConnection (\u201cInitial Catalog=Northwind; Data Source=erickn1; Packet Size=4096; Workstation ID=ERICKN1; Integrated Security=SSPI; Persist Security Info=False\u201d)","In one embodiment of the invention, the user interface of would be displayed.","Finally. Suppose a developer write the following line of code:","Dim obj As Object=New DataSet","Dim frm As Form","frm=CType (obj, Form)","instead of:","Dim obj As Object=New DataSet","Dim frm As DataSet","frm=CType (obj, DataSet)","In one embodiment of the invention, the user interface of would be displayed.","The various techniques described herein may be implemented in connection with hardware or software or, where appropriate, with a combination of both. Thus, the methods and apparatus of the present invention, or certain aspects or portions thereof, may take the form of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other machine-readable storage medium, wherein, when the program code is loaded into and executed by a machine, such as a computer, the machine becomes an apparatus for practicing the invention. In the case of program code execution on programmable computers, the computing device will generally include a processor, a storage medium readable by the processor (including volatile and non-volatile memory and\/or storage elements), at least one input device, and at least one output device. One or more programs that may utilize the creation and\/or implementation of domain-specific programming models aspects of the present invention, e.g., through the use of a data processing API or the like, are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However, the program(s) can be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language, and combined with hardware implementations.","While the present invention has been described in connection with the preferred embodiments of the various figures, it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiments for performing the same function of the present invention without deviating therefrom. Therefore, the present invention should not be limited to any single embodiment, but rather should be construed in breadth and scope in accordance with the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing summary, as well as the following detailed description of illustrative embodiments, is better understood when read in conjunction with the appended drawings. For the purpose of illustrating the invention, there is shown in the drawings exemplary constructions of the invention; however, the invention is not limited to the specific methods and instrumentalities disclosed. In the drawings:",{"@attributes":{"id":"p-0009","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0015"},"figref":"FIGS. 5","i":["a","c "]}]},"DETDESC":[{},{}]}
