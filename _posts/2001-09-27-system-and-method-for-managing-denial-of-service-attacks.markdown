---
title: System and method for managing denial of service attacks
abstract: A system and method for monitoring and controlling the total number of SSL port resources that are allowed to be tied up by a malicious or inept client making multiple requests from a single IP address. Smart SSL handshake timeout detection is used to track and deny service to any SSL clients that do denial of service (DOS) attacks.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06851062&OS=06851062&RS=06851062
owner: International Business Machines Corporation
number: 06851062
owner_city: Armonk
owner_country: US
publication_date: 20010927
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","BEST MODE FOR CARRYING OUT THE INVENTION","ADVANTAGES OVER THE PRIOR ART","Alternative Embodiments"],"p":["1. Technical Field of the Invention","This invention pertains to managing denial of service (DOS) attacks. More particularly, it relates to denying service to clients issuing more than a configurable number of outstanding (incompleted) negotiation requests.","2. Background Art","For Secure Sockets Layer (SSL) client\/server applications, it is often the case that an SSL client will attempt to connect to an SSL server application and request a secure SSL connection. For the SSL application server, it is necessary to authenticate such clients using a common certificate store, which must be accessed any time a new SSL session is established. This certificate store contains certificates for those clients that are authorized to the server system and server applications.","As is typical in SSL application server design, application programming interfaces (APIs) are used to access SSL functions. The following SSL functions define a standard sockets API used in TCP\/IP networks.\n\n","Referring to , a server or client application that uses the sockets and SSL APIs contains the following elements:\n\n","A problem can exist in the sequence of calls illustrated in  at two way handshake , . SSL_HANDSHAKE( ) ,  requires two-way communication between the client and server programs to complete successfully. An SSL client program written by a hacker can be written to not complete the client-side handshake , and effectively block the SSL server application hostage\u2014preventing further use of that server. The server is blocked because it is obligated to wait for the client-side handshake  before it can continue. This is the well-known Internet style attack called \u2018denial of service\u2019 or DOS. Its effect is that any new SSL clients that attempt to connect to the application server cannot get a connection, because the blocked server never sees their connect request . Also poorly written clients can inadvertently cause DOS attacks to occur. Whatever the case, a particular SSL application server is blocked while waiting for a client to properly complete the SSL handshake . If the client never responds, the server never continues to process the request .","SSL API developers anticipated a server might block on the call to SSL_HANDSHAKE( ) , and therefore supply a timeout setting . This means an SSL application server can be written to break out of a blocked state with a client in order to continue. This solution is difficult to implement effectively, since if the timeout value  is set too large, a DOS attack is effective for the duration of the timeout period . On the other hand, if the timeout period  is set too short, network delays can make it hard for a valid SSL client to successfully connect.","Single threaded servers are particularly vulnerable to denial of service attacks because total blocking of all processes or functions of the server may be the result.","It is an object of the invention to provide an improved system and method for managing denial of service attacks.","It is a further object of the invention to provide a system and method for reducing the impact of a denial of service attack on server resources.","It is a further object of the invention to provide a system and method for managing denial of service attacks which does not unduly restrict service to legitimate clients.","It is a further object of the invention to deny service to DOS hacker clients and maximize service to legitimate clients.","It is a further object of the invention to provide a system and method for minimizing or eliminating server resources (CPU, storage, etc.) used by malicious clients.","A system and method is provided for operating a server by maintaining a record of the number of pending service requests from a client; upon receiving a request for service from a client having more than a configurable number of pending service requests, denying service to the client; determining when the number of times that negotiations for a service connection from the client exceed a timeout value; and upon that number exceeding a trigger threshold, denying service to the client.","In accordance with an aspect of the invention, there is provided a computer program product configured to be operable to manage denial of service attacks from a client.","Other features and advantages of this invention will become apparent from the following detailed description of the presently preferred embodiment of the invention, taken in conjunction with the accompanying drawings.","In accordance with a preferred embodiment of the invention, a system and method is provided for monitoring and controlling the total number of SSL port resources that are allowed to be tied up by a malicious or inept client making multiple requests from a single IP address.","In a typical implementation there can be many, for example 99, servers listening for new requests from SSL clients and responding by entering into SSL handshake negotiations. At the point when each of the 99 servers are locked up in SSL negotiations the server system is blocked in a denial of service (DOS) scenario. In accordance with this first aspect or embodiment of the invention, a list is maintained of every client by IP address that has an outstanding SSL_HANDSHAKE( ) negotiation in progress, and any new request is denied from any client whose address shows up more than a configurable number of times in the outstanding (that is, incomplete) SSL negotiation list. This client will continue to be denied access until one of the outstanding SSL negotiation requests of that client either completes or times out, the latter to allow for network latency for difference clients. In this way, a single client at a particular IP address can only lock up a small number of the total SSL port resources, and even then only for the duration of the configurable timeout. Alternatively and equivalently, a counter may be maintained for each client address requesting access, which counter is incremented with each new request and decremented with each successful handshake completion.","In accordance with a second aspect of the invention, a system and method is provided for doing smart SSL handshake timeout detection to track and deny service to any SSL clients that do denial of service (DOS) attacks. The parameters to deny service to a client and to restore a client to service may be configurable, and include such considerations as the following:\n\n","SSL handshake timeout setting  may be considered \u201csmart\u201d in that it is dynamically recalculated, using a weighting formula to account for network delays, for each client IP address that connects to the server. Thus, when any SSL client exceeds the smart timeout value, a counter is incremented to reflect this condition. When the tracking counter exceeds a trigger threshold, that client gets added to a denial of service, or access denied list (ADL). When any client is in the ADL, the SSL application server immediately closes any connection from that client and will not attempt to process it.","SSL application servers are written to maintain a common list of clients to be blocked (denied service). Server design can be done to accomplish this in many different ways, but whatever the design, the servers should all maintain a common storage or memory of clients denied service (that is, a server copy of the ADL).","Referring to , the flow of  is modified to implement the above described two aspects of the invention: outstanding negotiation list monitoring and denial of service based on smart timeout. In this description, the variable N represents the timeout period (also referred to as average RTT), variable M is a counter value representing the number of times N has been exceeded, and T is a trigger threshold for M (representing the value of M for which access is to be denied for a given client).","In this embodiment, in step  the SSL application server checks a cache copy of the ADL each time a client connects (step ). If the client is found in the cache copy of the ADL, in step  a server copy of the ADL is accessed to refresh the cache copy, and again in step  the now refreshed cache copy of the ADL is checked to see if the client has been restored to service by action of the system administrator, or if the client is still to be denied service. If still to be denied service, in steps ,  the connection is closed.","If in step step , no entry is found for this client in the ADL, in step  the client is added to an outstanding negotiation list, and in step , if the client appears more than T times (or a counter value M for that client has been incremented to a value greater than T), the request is denied (steps , ). Otherwise, processing continues to step  to conduct the two-way handshake ,  with an initial timeout value of \u201cN\u201d. If timeout period \u201cN\u201d is not exceeded before completion  of the handshake, the relevant client entry is deleted (or its count value M is decremented) from the outstanding negotiation list and steps - executed to request and receive data. If the timeout value \u201cN\u201d  expires before the two-way handshake ,  is complete, then in step  the server increments a counter M and in step  adds this client's IP address to the ADL file if the counter exceeds a trigger value T. The counter will not deny service to a client until it exceeds some configurable threshold or \u201ctrigger\u201d value \u201cT\u201d. At this time, the average round trip timeout period \u201cN\u201d is also recalculated in step  for this client's IP address in order to set a smart value \u201cN\u201d (aka, RTT) for clients that have more delay in their network paths.","An exemplary formula for this timeout calculation N determines for each client a round trip time (RTT) value using an adaptive sampling algorithm to weight the RTT. For example:\n\nAverage Round Trip Time ()=(*Average)+((1)*New)\n\nwhere y is a value between 0 and 1.\n","Using this formula, picking a value for y very close to 1 effectively ignores the last RTT value (New_RTT), making the weighted average RTT value (Average_RTT) more significant. Letting y be almost 0 makes the weighted average change more quickly, making the last RTT value more significant. The value selected for y may be a configuration option for the server. If y is selected or configured at about y=0.9, then rapid changes in the RTT value may be prevented. Therefore, the timeout value can be set to equal double the RTT value, as follows:\n\nTimeout \u201c\u201d=2=2*((Average)+((1)*New+))\n\nThus, the next time the client from this IP address connects, the server will set the handshake timeout value N based on the calculated timeout. N may be set at any value (2 as above, or more or less than 2) times RTT by the system administrator to allow for anticipated communication network delays.\n","In accordance with another embodiment of the invention, steps ,  and  are modified so that a cache copy of the ADL is not kept for performance enhancements, and the system ADL is always accessed.","Once a client is added to the ADL, it is contemplated that a system administrator must remove the client once service is again to be granted. However, this may be automated\u2014such as by purging the client entry in the ADL after some period of time since a last attempted connection (step ).","It is an advantage of the invention that there is provided an improved system and method for managing denial of service attacks.","It is a further advantage of the invention that there is provided a system and method for reducing the impact of a denial of service attack on server resources.","It is a further advantage of the invention that there is provided a system and method for managing denial of service attacks which does not unduly restrict service to legitimate clients.","It is a further advantage of the invention that there is provided a system and method for denying service to DOS hacker clients and maximizing service to legitimate clients.","It is a further advantage of the invention that there is provided a system and method for minimizing or eliminating server resources (CPU, storage, etc.) used by malicious clients.","It will be appreciated that, although specific embodiments of the invention have been described herein for purposes of illustration, various modifications may be made without departing from the spirit and scope of the invention. In particular, it is within the scope of the invention to provide a computer program product or program element, or a program storage or memory device such as a solid or fluid transmission medium, magnetic or optical wire, tape or disc, or the like, for storing signals readable by a machine, for controlling the operation of a computer according to the method of the invention and\/or to structure its components in accordance with the system of the invention.","Further, each step of the method may be executed on any general computer, such as IBM Systems designated as zSeries, iSeries, xSeries, and pSeries, or the like and pursuant to one or more, or a part of one or more, program elements, modules or objects generated from any programming language, such as C++, Java, Pl\/1, Fortran or the like. And still further, each said step, or a file or object or the like implementing each said step, may be executed by special purpose hardware or a circuit module designed for that purpose.","Accordingly, the scope of protection of this invention is limited only by the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"P-00033","num":"00033"},"figref":"FIG. 1"},{"@attributes":{"id":"P-00034","num":"00034"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
