---
title: Apparatus and method to write information to and/or read information from an information storage medium
abstract: A method to write information to an information storage medium. The method creates one or more objects comprising information and provides a first one of those one or more objects. The method writes a header label to an information storage medium, where the header label comprises an object processing indicator. The method assigns a first sequence number to the first object and writes that first object to the information storage medium beginning at a first blockid and ending at a second blockid. The method writes a trailer label to the information storage medium, where that trailer label comprises an embedded object field count. The method writes an object information block to the information storage medium, where that object information block comprises the first sequence number, the first blockid, and the second blockid.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07111113&OS=07111113&RS=07111113
owner: International Business Machines Corporation
number: 07111113
owner_city: Armonk
owner_country: US
publication_date: 20030829
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["Applicant's invention relates to a method and apparatus to write information to, and read information from, an information storage medium.","Automated media storage libraries are known for providing cost effective access to large quantities of stored media. Generally, media storage libraries include a large number of storage slots in which are stored portable information storage media. The portable information storage media are typically housed in a portable container, such as a tape cartridge, an optical cartridge, and the like. One (or more) accessors typically access the information storage media from the storage slots and deliver the accessed media to an information storage drive for reading and\/or writing data on the accessed media. Suitable electronics operate the accessor(s) and operate the data storage drive(s) to transmit to, and\/or to receive data from, an attached on-line host computer system.","In a conventional automated media storage library, the storage slots are arranged in a planar orthogonal arrangement forming a \u201cwall\u201d of storage slots for holding data storage media. The plane may be a flat plane, or may be a cylindrical plane. To double the storage capacity, two \u201cwalls\u201d of storage slots may be provided on either side of the accessor.","A number of different companies manufacture automated media storage libraries today, each model displaying various different features. One example is the IBM TotalStorage\u00ae 3494 Enterprise Tape Library. What is needed, however, is a method and apparatus and method to expedite the writing of information to an information storage medium, and the subsequent reading of that information from the information storage medium, particularly where the information comprises a plurality of individual files. Applicants' method can be used to read\/write information from\/to serial storage devices, where those serial storage devices may, or may not, be disposed within in an automated media library.","Applicants' invention includes an apparatus and method to write information to an information storage medium. The method creates one or more objects comprising information and provides a first one of those one or more objects, where that first object comprises one or more computer files. The method further provides an information storage medium comprising a plurality of blockid addresses, and writes a header label to that information storage medium, where the header label comprises an object processing indicator.","The method then assigns a first sequence number to the first object and writes that first object to the information storage medium beginning at a first blockid and ending at a second blockid. The method then writes a trailer label to the information storage medium, where that trailer label comprises an embedded object field count, and writes an object information block to the information storage medium, where that object information block comprises the first sequence number, the first blockid, and the second blockid.","Applicants' invention further includes an apparatus and a method to read information using an information storage device comprising a read head. The method provides an information storage medium comprising a plurality of blockid addresses, a header label comprising an object processing indicator, a trailer label comprising an embedded object field count, one or more objects comprising information written between the header label and the trailer label, and an object information block comprising a starting blockid and an ending blockid for each of the one or more objects;.","The method receives a request to read a first one of the one or more objects, mounts the information storage medium in the information storage device, and reads the object information block to determine the starting blockid and the ending blockid for the first object. The method then positions the information storage medium such that the read head is disposed adjacent the information storage medium at the starting blockid for the first object, and then reads the first object.","Applicants' invention further includes an article of manufacture comprising a computer useable medium having computer readable program code disposed therein for writing information to an information storage medium using Applicants' method. Applicants' invention further includes an article of manufacture comprising a computer useable medium having computer readable program code disposed therein for reading information from an information storage medium using Applicants' method.","Applicants' invention further includes a computer program product usable with a programmable computer processor having computer readable program code embodied therein for writing information to an information storage medium using Applicants' method. Applicants' invention further includes a computer program product usable with a programmable computer processor having computer readable program code embodied therein for reading information from an information storage medium using Applicants' method.","Referring to the illustrations, like numerals correspond to like parts depicted in the figures. The invention will be described as embodied in an automated data storage and retrieval subsystem for use in a data processing environment. The following description of Applicant's method to write information to, and read information from, a movable tape medium, or to a movable tape medium disposed within a portable data storage cartridge is not meant, however, to limit Applicant's invention to either data storage and retrieval systems, or to magnetic tape applications, as the invention herein can be applied to information storage in general.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3","b":["390","310","312","390"]},"Information is transferred between the host system  and secondary storage devices managed by a data storage and retrieval system, such as tape subsystem , via communication link . Tape subsystem  includes controller . Communication link  comprises a serial interconnection, such as an RS-232 cable or an RS-432 cable, an ethernet interconnection, a SCSI interconnection, a Fibre Channel interconnection, an ESCON interconnection, a FICON interconnection, a Local Area Network (LAN), a private Wide Area Network (WAN), a public wide area network, Storage Area Network (SAN), Transmission Control Protocol\/Internet Protocol (TCP\/IP), the Internet, and combinations thereof.","In the embodiment shown in , tape subsystem  includes tape drives  and . Tape drive  includes device controller . Tape drive  includes device controller . In other embodiments of Applicants' data storage and retrieval system, tape subsystem  includes a single data storage drive. In alternative embodiments, Applicants' data storage and retrieval system  includes more than two data storage drives.","A plurality of portable information storage media  are stored within Applicants' data storage and retrieval system. In certain embodiments, plurality of information storage media  are each housed in a portable data storage cartridge. Each of such portable data storage cartridges may be inserted in one of tape drives, and thereafter accessed by the tape subsystem . In alternative embodiments, alternative storage media may be substituted for the tape media . By \u201cinformation storage medium,\u201d Applicants' mean any type of sequential storage media supporting a sequential access command architecture. By \u201cinformation storage device,\u201d Applicants mean a device capable of writing information to, and\/or reading information from, an information storage medium.","The tape subsystem  further includes program logic to manage tape drives  and , and plurality of tape media . In alternative embodiments, tape subsystem  and host system  may be located on a single computer machine.","Host system  comprises a computer system, such as a mainframe, personal computer, workstation, etc., including an operating system such as Windows, AIX, Unix, MVS, etc. (Windows is a registered trademark of Microsoft Corporation; AIX is a registered trademark and MVS is a trademark of IBM Corporation; and UNIX is a registered trademark in the United States and other countries licensed exclusively through The Open Group.) The HSM program  in the host system  may include the functionality of HSM type programs known in the art that manage the transfer of data to a tape library, such as the IBM DFSMS implemented in the IBM MVS operating system.","In certain embodiments, in addition to including known HSM functions, such as recall and migration, the HSM program  further includes additional program instructions to perform the operations of the embodiments of the present invention. The HSM program  may be implemented within the operating system of the host system  or as a separate, installed application program.","The tape subsystem  comprises a computer system, and manages a plurality of tape drives and tape cartridges. In certain embodiments, information storage devices  and  comprise IBM TotalStorage\u00ae 3590 tape drives and the portable information storage media comprise magnetic tapes housed in IBM TotalStorage\u00ae 3590 tape cartridges. TotalStorage is a registered trademark of the IBM corporation.","The tape subsystem  may be a manual tape library in which the user must manually mount tape cartridges  into the tape drives \/, or an automated tape library (ATL) in which a robotic arm mounts tape cartridges  in the library into the tape drives \/.","For example referring now to , automated data storage and retrieval system  is shown having a first wall of storage slots  and a second wall of storage slots . Portable data storage cartridges, such as tape cartridges , are individually stored in these storage slots.","Data storage and retrieval system  includes one or more accessors, such as accessors  and . An accessor is a robotic device which accesses portable data storage media from first storage wall  or second storage wall , delivers that accessed media to information storage devices \/ for reading and\/or writing data thereon, and returns the media to the proper storage slot.","Library controller  () communicates with host computer  (, ) via communication link . In certain embodiments, library controller  is integral with host . In other embodiments, controller  is external to host . Operator input station  permits a user to communicate with Applicant's automated data storage and retrieval system . Devices  and  each comprise information buffers. In certain embodiments, devices  and\/or  comprise a Direct Access Storage Device (\u201cDASD\u201d) cache. In certain embodiments DASD cache  and  comprise a plurality of hard disk drives which are configured into one or more RAID arrays.","In certain embodiments, information transferred between host computer  and data storage and retrieval system  is buffered in DASD caches  and  before being recorded on other data storage media, such as one or more magnetic tapes. Import\/export station  includes access door  pivotably attached to the side of system . Portable data storage cartridges can be placed in the system, or in the alternative, removed from the system, via station \/access door .",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 2","b":["200","200","202","204","202","204","200","230","230","230","232"]},"System  further includes library controller . Library controller  controls the operation of assessor  and, optionally, information storage device . System  further includes one or a plurality of portable data storage cartridges, such as tape cartridges . Each cartridge contains a data storage media internally disposed therein, such as data storage media  ().","Referring again to , tape subsystem , such as data storage and retrieval system \/, receives commands from the HSM program  in the host system  and performs the operations requested by the HSM program , such as migration and recall, to transfer data between the host system  and the components managed by the tape subsystem . In preferred embodiments, the tape subsystem  can simultaneously process numerous input\/output requests from the host system  and any other attached system directed toward the tape drives \/ and tape cartridges  managed by the tape subsystem . Moreover, in certain embodiments HSM program  in the host system  is capable of multi-tasking, simultaneously executing numerous input\/output operations, and simultaneously transmitting multiple I\/O requests to the tape subsystem  to execute.","In further embodiments, a plurality of host systems  may communicate with the tape subsystem  and\/or a host system  may communicate and transfer data to a plurality of tape subsystems , each subsystem providing access to a library of tape cartridges.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 4","b":["400","400","420","430","420","400","430","500","1","410","500","460","400"]},"File  includes header label , header label , tape mark , data , tape mark , trailer label , trailer label , and tape mark . File  includes header label , header label , tape mark , data , tape mark , trailer label , trailer label , and tape mark .","Tape mark  is disposed after tape mark . Tape mark  in combination with tape mark  comprises double tape mark . Double tape mark  signifies that file  is the last file written on tape . Thus, portion  of tape  contains no information.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIGS. 5A\u20135E","FIG. 5A"],"b":["500","500","516","517","518","519","518","519","500"]},"An attached host computer, such as host computer  (, ), instructs a information storage device, such as information storage device  (), to write new information on a designated information storage medium, such as tape . A robotic accessor, such as accessor  (), retrieves and transports the portable data storage cartridge housing tape . That portable data storage cartridge is inserted, i.e. mounted, in information storage device .","Information storage device  advances tape  in either the forward or the reverse direction as needed until double tape mark \/ is found. As those skilled in the art will appreciate, information storage device  includes a read\/write head internally disposed therein. Referring now to , upon locating double tape mark \/ the movement of tape  is stopped such that the read\/write head is positioned at location  recited in  at time T. Thereafter, a Back Space File command (\u201cBSF\u201d) command is issued to tape drive  and tape  is moved in the reverse direction to position the read\/write head between tape mark  and tape mark , i.e. to position  shown on  at time T.","Referring now to , header label   is written to tape  starting at position . After header label   is written to tape , header label   is written to tape  adjacent header label  . Thereafter, tape mark  is written adjacent header label  , data  is written adjacent tape mark , tape mark  is written adjacent data , trailer label   is written adjacent tape mark , trailer label   is written adjacent trailer label  , tape mark  is written adjacent trailer label  , and end of file tape mark  is written adjacent tape mark .","After writing end of file tape mark , the read\/write head is positioned at location  at time T. Those skilled in the art will appreciate that the time period between Tand T, \u0394T, represents the time required to write file  to tape .","Referring to , to write a another file to tape , prior art methods issue a Back Space File command which causes tape  to move in the reverse direction such that the read\/write head is positioned between tape marks  and , i.e. tape  is moved such that the read\/write head is positioned at location  at time T. Those skilled in the art will appreciate that the time interval between time Tand time T, i.e. \u0394T, represents the time required to reposition tape  such that the read\/write head is position at location .","Using this prior art method, the time interval \u0394Trequired to write file  to tape  and to reposition the tape to write a subsequent file comprises both \u0394Tand \u0394T. Those skilled in the art will appreciate that writing (N) files using this prior art method necessarily requires Total Timewhich equals:",{"@attributes":{"id":"p-0056","num":"0055"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"Total","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"msub":{"mi":"Time","mrow":{"mi":["Prior","Art"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}},{"mrow":[{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"N"},"mo":"\u2062","mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":"Ti","mrow":{"mi":["Information","Write"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}}},{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"N"},"mo":"\u2062","mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":"Ti","mrow":{"mi":["Head","Reposition"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}}}],"mo":"+"}],"mo":"="}}}},"Needless to say, as (N) increases, the aggregate time required to write (N) double tape marks, issue (N) Back Space File commands, and to move the tape backwards (N) times, also increases. In marked contrast, however, Applicants' method eliminates the need to reverse the movement of the tape (N) times and eliminates the need to write a double tape mark (N) times. Using Applicants' method (N) files can be written to a tape storage medium while moving that tape medium in one direction only, i.e. moving tape  in the forward direction but not in the reverse direction.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 6","b":["1","1","620","2","2","625","1","630","2","625"]},"Using Applicants' method, however, a first data object, such as object , is written adjacent tape mark . In certain embodiments, object  comprises a single data file, such as file  (). In certain embodiments, object  comprises a plurality of individual data files. Information storage medium  comprises (M) blockid addresses, where those (M) blockid addresses run in sequence from 1 to (M). Object  is written to medium  beginning at blockid  and ending at blockid .","In the illustrated embodiment of , data objects  and  are sequentially written to information storage medium . Object  is written to information storage medium  beginning at blockid  and ending at blockid . By \u201csequentially written,\u201d Applicants mean that object  is written adjacent object  such that blockid  comprises the (m)th blockid and such that blockid  comprises the next, or (m+1)th, blockid.","In certain embodiments, object  comprises a single data file, such as file  (). In certain embodiments, object  comprises a plurality of individual data files. In the embodiment wherein object  comprises a single file such as file  and wherein object  comprises a single file such as file , file  is written adjacent to and sequentially with file . Thus, in this embodiment files  and  are written to tape  without stopping the tape, without issuing a Back Space File command, and without moving tape  in the reverse direction.","In the illustrated embodiment of , tape mark  is written adjacent second data object . In other embodiments of Applicants' method, a single data object is written between tape marks  and . In still other embodiments, (N) data objects are sequentially written between tape marks  and , wherein (N) is greater than 2.","Trailer label  is written adjacent tape mark . Trailer label  includes an embedded object field count. In the illustrated embodiment of , that embedded object field count is set to 2. Trailer label  is written adjacent trailer label . Object information block  is written adjacent trailer label . Tape mark  is written adjacent object information block . Tape mark  is written adjacent tape mark . Tape marks  and  comprises a double tape mark, i.e. an end of file mark.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 7","FIG. 6","FIG. 7","FIGS. 1"],"b":["705","705","390","3"]},"In step , Applicants' method issues on OPEN SL OUTPUT command, where that command includes an Object Processing Indicator. In certain embodiments, step  is performed by a host computer, such as host computer , using a hierarchical storage management Program, such as HSM . In certain embodiments, step  is performed by an application running on a host computer, such as application . In certain embodiments, such an application includes an application programming interface which includes an Object Processing Indicator.","In certain embodiments, such an Object Processing Indicator comprises a flag which can be turned \u201con\u201d or \u201coff.\u201d In certain embodiments, such as Object Processing Indicator comprises a bit which can be set to indicate object processing.","In step , Applicants' method forms an expandable in-storage table. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in Applicants' data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, such a library controller comprises a computer useable medium, such as computer useable medium  (), having computer readable program code disposed therein, where that computer program code comprises a series of computer readable steps comprising a service sometimes referred to as the OPEN service.","In certain embodiments, Applicants' method transitions from step  to step . In certain embodiments, Applicants' method transitions from step  to step  wherein the in-storage table of step  is anchored in a second Data Extend Block extension. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in Applicants' data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the OPEN service. Applicants' method transitions from step  to step .","In step , Applicants' method writes a header label to the information storage medium, where that header label includes an Object Processing Indicator. Step  is performed by a information storage device, such as information storage device  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by a host computer, such as host computer  (, ). In certain embodiments, operation of the information storage device in step  is controlled by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  in step  is controlled by the OPEN program. In certain embodiments, operation of the information storage device in step  is controlled by a device controller, such as device controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, the information storage device in step  is operated by both a library controller and a device controller.","In certain embodiments, Applicants' method transitions from step  to step . In certain embodiments, Applicants' method transition from step  to step  wherein the method writes a header label, such as header label  () to an information storage medium, such as tape medium  (). Applicants' method transitions from step  to step  wherein the method writes a header label, such as header label  (), adjacent the header label. Applicants' method transitions from step  to step  wherein the method writes a file mark, such as tape mark  (), adjacent the header label.","Steps , , and , are performed by a information storage device, such as information storage device  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in these steps is controlled by a host computer, such as host computer  (, ). In certain embodiments, operation of the information storage device in these steps is controlled by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in these steps is controlled by the OPEN program. In certain embodiments, operation of the information storage device in these steps is controlled by a device controller, such as device controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, the information storage device is operated in these steps by both a library controller and a device controller.","Applicants' method transitions from step  to step . In steps  and , Applicants' method provides to the data storage and retrieval system a first one of the (N) objects of step , i.e. sets (n) to 1 in step  and provides that first object in step . In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by the host computer application which created the dataset in step . In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by the host computer application which created the dataset in step .","Applicants' method transitions from step  to step  wherein the method assigns a sequence number to the (n)th object. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the OPEN program.","Applicants' method transitions from step  to step  wherein the method writes the (n)th object to the information storage medium. Step  is performed by a information storage device, such as information storage device  (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by a host computer, such as host computer  (, ). In certain embodiments, operation of the information storage device in step  is controlled by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by the OPEN program. In certain embodiments, operation of the information storage device in step  is controlled by a device controller, such as device controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, the information storage device in step  is operated by both a library controller and a device controller.","In certain embodiments, following execution of step  control is passed from the OPEN program to the application on the host computer which created the (n)th object. Thereafter, that host computer application calls a software routine comprising a computer readable program code, where that computer program code includes a series of computer readable steps comprising a service sometimes referred to as the TCLOSE service.","Applicants' method transitions from step  to step  wherein the method writes the (n)th sequence number, the starting blockid number for the (n)th object, and the ending blockid for the (n)th object, and the identifier for the first volume the object resides on, to the table of step .","In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","Applicants' method transitions from step  to step  wherein the method quiesces input\/output to\/from the data storage and retrieval system. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program. Applicants' method transitions from step  to step  where the method leaves the information storage medium positioned such that the write head is disposed immediately adjacent the last data block written to the medium.","Applicants' method transitions from step  to step  wherein the method determines if the user assigned a name to the (n)th object. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","If Applicants' method determines in step  that the user has assigned a name to the (n)th object, then the method transitions from step  to step  wherein the method writes that user name to the table of step . Applicants' method transitions from step  to step . If Applicants' method determines in step  that the user has not assigned a name to the (n)th object, then the method transitions from step  to step  wherein the method determines if each of the (N) objects of step  have been written to the information storage medium, i.e. if (n) is less than (N).","If Applicants' method determines in step  that not all (N) objects have been written to the information storage medium, i.e. (n) is less than (N), then the method transitions from step  to step  wherein the method increments (n). In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program. Applicants' method transitions from step  to step  and continues.","If Applicants' method determines in step  that all (N) objects have been written to the information storage medium, i.e. (n) is not less than (N), then the method transitions from step  to step  wherein the method writes a trailer label, such as trailer label  (), to the storage medium, wherein that trailer label includes an embedded object count field. In certain embodiments, step  includes writing a second trailer label, such as trailer label  ().","Step  is performed by a information storage device, such as information storage device  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by a host computer, such as host computer  (, ). In certain embodiments, operation of the information storage device in step  is controlled by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by the TCLOSE program. In certain embodiments, operation of the information storage device in step  is controlled by a device controller, such as device controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, the information storage device in step  is operated by both a library controller and a device controller.","Applicants' method transitions from step  to step  wherein the method writes an object information block, such as object information block  (), to the information storage medium. The object information block of step  includes the information written in step , and optionally step , to the table of step . In certain embodiments, the object information block on each volume of a multivolume data set is accumulative, i.e. the object information block written to any one of those multiple volumes includes the identifiers for all previous volumes in addition to the current volume. In certain embodiments, these volume identifiers comprises Volume Serial Numbers sometimes referred to as VOLSERs.","Step  is performed by a information storage device, such as information storage device  (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by a host computer, such as host computer  (, ). In certain embodiments, operation of the information storage device in step  is controlled by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by the TCLOSE program. In certain embodiments, operation of the information storage device in step  is controlled by a device controller, such as device controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, the information storage device is operated in step  by both a library controller and a device controller.","Applicants' method transitions from step  to step  wherein the method writes an end of file mark to the information storage medium. In certain embodiments, the end of file mark of step  comprises a double tape mark, such as tape mark  () in combination with tape mark  (). Step  is performed by a information storage device, such as information storage device  (FIG. )\/ (FIG. 2). In certain embodiments, operation of the information storage device in step  is controlled by a host computer, such as host computer  (, ). In certain embodiments, operation of the information storage device in step  is controlled by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by the TCLOSE program. In certain embodiments, operation of the information storage device in step  is controlled by a device controller, such as device controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, the information storage device is operated in step  by both a library controller and a device controller.","In certain embodiments, Applicants' method transitions from step  to step . Referring now to , in step  Applicants' method sets parameter TCLOSE MAX. In certain embodiments, TCLOSE MAX is set in firmware disposed in a library controller such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, TCLOSE MAX is set by a host computer, such as host computer  (, ). In certain embodiments, TCLOSE MAX is entered by a user using an operator input station, such as operator input station  (). In certain embodiments, TCLOSE MAX is set to about 40. In certain embodiments, TCLOSE MAX is less than about 40. In certain embodiments, TCLOSE MAX is greater than about 40.","In step , Applicants' method maintains a running count of TCLOSE issues for the designated information storage medium. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the OPEN program.","In step , Applicants' method determines if the running count of TCLOSE issues of step  is less than TCLOSE MAX. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the OPEN program.","If Applicants' method determines in step  that the running count of TCLOSE issues of step  is less than TCLOSE MAX, then the method transitions from step  to step  wherein the method writes the (n)th object to the information storage medium. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the OPEN program.","If Applicants' method determines in step  that the running count of TCLOSE issues of step  is not less than TCLOSE MAX, then the method transitions from step  to step  wherein the method issues a Medium Sense Command. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the OPEN program.","Applicants' method transitions from step  to step  wherein the method determines if an End Of Tape Condition exists. Such an End Of Tape Condition could comprise, for example, approaching the physical end of the information storage medium. Alternatively, such an End Of Tape Condition could comprise reaching the logical end of the information storage medium. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the OPEN program.","If Applicants' method determines in step  that an End Of Tape Condition exists, then the method transitions from step  to step  wherein the method calls an End Of Volume Processing service. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the OPEN program. Applicants' method transitions from step  to step  ().","If Applicants' method determines in step  that an End Of Tape Condition does not exist, then the method transitions from step  to step  wherein the method writes the (n)th object to the information storage medium. Step  is performed by a information storage device, such as information storage device  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by a host computer, such as host computer  (, ). In certain embodiments, operation of the information storage device in step  is controlled by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by the OPEN program. In certain embodiments, operation of the information storage device in step  is controlled by a device controller, such as device controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, the information storage device is operated in step  by both a library controller and a device controller.","Applicants' method transitions from step  to step  wherein the method calls the TCLOSE service and updates the running count of step . In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the OPEN program.","Applicants' method transitions from step  to step  wherein the method sets the DCBOWRIT bit to indicate an output path. The CLOSE service subsequently examines this DCBOWRIT bit, and if that bit is set to indicate an output path, then CLOSE in steps  and  will write the trailer labels, and in step  will write the Object Information Block. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program. In step , the method leaves the information storage medium positioned such that the write head is disposed immediately adjacent the last data block, i.e. the (n)th object, written to the medium.","Applicants' method transitions from step  to step  wherein the method quiesces input\/output to\/from the data storage and retrieval system. In this embodiment, step  is performed by the TCLOSE program. Applicants' method transitions from step  to step  wherein the method writes the (n)th sequence number, the starting blockid number for the (n)th object, and the ending blockid for the (n)th object to the table of step  (). In this embodiment, step  is performed by the TCLOSE program.","Applicants' method transitions from step  to step  wherein TCLOSE looks for a type \u201807\u2019 data control block (\u201cDCB\u201d) exit comprising a pointer to a user job file control block, sometimes referred to as a \u201cJFCB.\u201d If TCLOSE does not detect a type \u201807\u2019 DCB exit comprising a pointer to a user JFCB, then Applicants' method transitions from step  to step  ().","If in step  TCLOSE detects a type \u201807\u2019 DCB exit comprising a pointer to a user JFCB, then Applicants' method transitions from step  to step  wherein the method assigns the name in that user JFCB as the user name for the (n)th object. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","Applicants' method transitions from step  to step  wherein the method writes the user name assigned in step  to the table of step  (). In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","Referring now to , Applicants' method transitions from step  to step  wherein the method determines if a catalog request is detected. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","If Applicants' method does not detect a catalog request in step , then the method transitions from step  to step . Alternatively, if Applicants' method does detect a catalog request in step , then the method transitions from step  to step  wherein the method calls the catalog. Applicants' method transitions from step  to step  wherein the method writes to the catalog a list of volumes comprising the (n)th object, the system name assigned to that (n)th object, the sequence number assigned to that (n)th object, and optionally, the user name assigned to that (n)th object. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","Applicants' method transitions from step  to step  wherein the method determines if all the (N) objects of step  have been written to the information storage medium, i.e. if (n) is less than (N). In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","If Applicants' method determines in step  that (n) is less than (N), then the method transitions from step  to step  () and continues. Alternatively, if Applicants' method determines in step  that (n) is not less than (N), then the method transitions from step  to step  wherein Applicants' method issues the CLOSE command.","In certain embodiments, step  is performed by a host computer, such as host computer  (, ). The host computer application need not issue the CLOSE command. In the event the host computer application does not provide an object in step , a Task Termination routine will detect an ending of processing condition, and will issue a CLOSE SERVICE  routine. Therefore, in certain embodiments step  is performed by a controller disposed in a data storage and retrieval system, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","In step , the CLOSE program detects that the DCBOWRIT bit is set to output, and instructs the information storage device to write to the information storage medium a trailer label, such as trailer label  () comprising an embedded object count field. Applicants' method transitions from step  to step  wherein the CLOSE program instructs the information storage device to write to the information storage medium a trailer label, such as trailer label  (). Applicants' method transitions from step  to step  wherein the CLOSE program instructs the information storage device to write to the information storage medium an Object Information Block, such as Object Information Block  ().","Applicants' method transitions from step  to step  wherein the CLOSE program writes a file mark, such as tape mark  (), adjacent the Object Information Block of step . Applicants' method transitions from step  to step  wherein the CLOSE program writes an end of file mark, such as end of file mark  ().",{"@attributes":{"id":"p-0108","num":"0107"},"figref":["FIG. 9","FIG. 6","FIG. 3"],"b":"390"},"Such access methods operate the computing system to move information between virtual storage and external storage, and maintain it in external storage. As those skilled in the art will appreciate, a variety of techniques and data set organizations are known for gaining access to a data set. Using Applicants' method to read information written to an information storage medium using the format of , a variety of data set organizations may be employed, including sequential access methods. Basic access methods include, for example, basic sequential access methods (BSAM). BSAM sequentially organizes data and stores or retrieves physical blocks of data.","Queued access methods, which can be used only with sequential data set organizations, include queued sequential access methods (\u201cQSAM\u201d). QSAM organizes data sequentially. It retrieves and stores logical records as requested. QSAM anticipates the need for records based on their sequential order, and normally has the desired record in virtual storage, ready for use before the request for retrieval. When writing data to external storage, the program normally continues as if the record has been written immediately although QSAM's routines may block it with other logical records, and defer the actual writing until the output buffer has been filled.","Referring now to , in step  Applicants' method issues an OPEN SL OUTPUT command comprising an Object Processing Indicator. In certain embodiments, step  is performed by a host computer, such as host computer  (, ). In certain embodiments, step  is performed by an application running on a host computer. In certain embodiments, such an application includes an application programming interface which includes an Object Processing Indicator. In certain embodiments, such an Object Processing Indicator comprises a flag which can be turned \u201con\u201d or \u201coff.\u201d In certain embodiments, such as Object Processing Indicator comprises a bit which can be set to indicate object processing.","Applicants' method transitions from step  to step  wherein the method issues a TCLOSE INPUT command comprising the name of the object requested or a volume list and the sequence number of the object requested. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by an application running on a host computer.","Applicants' method transitions from step  to step  wherein the method determines if the requested object is cataloged. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","If Applicants' method determines in step  that the requested object is cataloged, then the method transitions from step  to step  wherein the method calls the catalog and determines a subset volume list. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program. Applicants' method transitions from step  to step .","If Applicants' method determines in step  that the requested object is not cataloged, then the method transitions from step  to step  wherein the method verifies that the first volume recited in the volume list of step  comprises the first volume to which the requested object is written. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","Applicants' method transitions from step  to step  wherein the method builds an in-storage table using the information of step  or step . In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","Applicants' method transitions from step  to step  wherein the method mounts the first volume comprising the requested object. In certain embodiments, step  includes causing an accessor, such as accessor  (FIG. )\/ (), to retrieve a designated information storage medium, such as information storage medium  () or tape  ), transport that designated information storage medium to a designated information storage device, such as information storage device  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (), and insert that designated information storage medium into the designated information storage device. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","Applicants' method transitions from step  to step  wherein the method locates and reads the object information block, such as object information block  (), written to the designated information storage medium. In certain embodiments, step  further includes copying information read from the Object Information Block to the in-storage table of step .","In certain embodiments, operation of the information storage device in step  is controlled by a host computer, such as host computer  (, ). In certain embodiments, operation of the information storage device in step  is controlled by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by the OPEN program. In certain embodiments, operation of the information storage device in step  is controlled by a device controller, such as device controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, the information storage device is operated in step  by both a library controller and a device controller.","Applicants' method transitions from step  to step  wherein the method fast positions the information storage medium such that the requested object can be read from the designated information storage medium by the information storage device. As those skilled in the art will appreciate, step  includes moving the information storage medium such that the read head disposed in the information storage device is positioned at\/above the starting blockid for the requested object.","In certain embodiments, operation of the information storage device in step  is controlled by a host computer, such as host computer  (, ). In certain embodiments, operation of the information storage device in step  is controlled by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by the TCLOSE program. In certain embodiments, operation of the information storage device in step  is controlled by a device controller, such as device controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, the information storage device is operated in step  by both a library controller and a device controller.","Applicants' method transitions from step  to step  wherein the method reads the requested object. In certain embodiments, operation of the information storage device in step  is controlled by a host computer, such as host computer  (, ). In certain embodiments, operation of the information storage device in step  is controlled by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by the TCLOSE program. In certain embodiments, operation of the information storage device in step  is controlled by a device controller, such as device controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, the information storage device is operated in step  by both a library controller and a device controller.","Applicants' method transitions from step  to step  wherein the method obtains the ending blockid for the requested object from the table of step , and determines if that ending blockid has been read. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the OPEN program.","If Applicants' method determines in step  that the ending blockid has not been read, then the method continues to read the requested object from the information storage medium. Alternatively, if the method determines in step  that the ending blockid has been read, then Applicants' method transitions from step  to step  wherein the method passes control back to the requesting host computer application. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the OPEN program.","Applicants' method transitions from step  to step  wherein the method determines if there are additional objects to read. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by an application running on a host computer. If Applicants' method determines in step  that no further read requests are pending, then the method transitions from step  to step  and ends. Alternatively, if Applicants' method determines in step  that additional read requests are pending, then the method transitions from step  to step  ().","Referring now to , in step  Applicants' method issues a TCLOSE INPUT command comprising a second object name or a second object sequence number\/volume list. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by an application running on a host computer.","Applicants' method transitions from step  to step  wherein the method determines if the second object name, or alternatively the second object sequence number\/volume list of step  differs from the first object name, or alternatively the first object sequence number\/volume list of step . In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","If Applicants' method determines in step  that the second object name, or alternatively the second object sequence number\/volume list differs from the first object name, or alternatively the first object sequence number\/volume list, then the method transitions from step  to step  wherein the method determines if the requested object is cataloged. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","If Applicants' method determines in step  that the requested object is cataloged, then the method transitions from step  to step  wherein the method calls the catalog and determines a subset volume list. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program. Applicants' method transitions from step  to step .","If Applicants' method determines in step  that the requested object is not cataloged, then the method transitions from step  to step  wherein the method verifies that the first volume recited in the volume list of step  comprises the first volume to which the requested object is written. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","Applicants' method transitions from step  to step  wherein the method builds an in-storage table using the information of step  or step . In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","Applicants' method transitions from step  to step  wherein the method mounts the first volume comprising the requested object. In certain embodiments, step  includes causing an accessor, such as accessor  (FIG. )\/ (), to retrieve a designated information storage medium, such as information storage medium  () or tape  (), transport that designated information storage medium to a designated information storage device, such as information storage device  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (), and insert that designated information storage medium into the designated information storage device. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","Applicants' method transitions from step  to step  wherein the method locates and reads the object information block, such as object information block  (), written to the designated information storage medium. In certain embodiments, step  further includes copying information read from the Object Information Block to the in-storage table of step .","In certain embodiments, operation of the information storage device in step  is controlled by a host computer, such as host computer  (, ). In certain embodiments, operation of the information storage device in step  is controlled by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by the OPEN program. In certain embodiments, operation of the information storage device in step  is controlled by a device controller, such as device controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, the information storage device is operated in step  by both a library controller and a device controller.","Applicants' method transitions from step  to step  wherein the method fast positions the information storage medium such that the requested object can be read from the designated information storage medium by the information storage device. In certain embodiments, operation of the information storage device in step  is controlled by a host computer, such as host computer  (, ). In certain embodiments, operation of the information storage device in step  is controlled by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by the OPEN program. In certain embodiments, operation of the information storage device in step  is controlled by a device controller, such as device controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, the information storage device is operated in step  by both a library controller and a device controller.","Applicants' method transitions from step  to step  wherein the method reads the requested object. In certain embodiments, operation of the information storage device in step  is controlled by a host computer, such as host computer  (, ). In certain embodiments, operation of the information storage device in step  is controlled by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, operation of the information storage device in step  is controlled by the OPEN program. In certain embodiments, operation of the information storage device in step  is controlled by a device controller, such as device controller  (FIG. )\/ (FIG. )\/ (FIG. )\/ (FIG. )\/ (). In certain embodiments, the information storage device is operated in step  by both a library controller and a device controller.","Applicants' method transitions from step  to step  wherein the method obtains the ending blockid for the requested object from the table of step , and determines if that ending blockid has been read. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the OPEN program.","If Applicants' method determines in step  that the ending blockid has not been read, then the method continues to read the requested object from the information storage medium. Alternatively, if the method determines in step  that the ending blockid has been read, then Applicants' method transitions from step  to step  wherein the method passes control back to the requesting host computer application and continues.","If Applicants' method determines in step  that the second object name, or alternatively the second object sequence number\/volume list, does not differ from the first object name, or alternatively from the first object sequence number\/volume list, then Applicants' method transitions from step  to step  wherein the method determines if concatenation is detected. As those skilled in the art will appreciate, concatenation is detected where the requested object comprises two or more object names in sequence. In certain embodiments, step  is performed by a host computer. In certain embodiments, step  is performed by a library controller, such as controller  (FIG. )\/ (FIG. )\/ (). In certain embodiments, step  is performed by the TCLOSE program.","If Applicants' method determines in step  that concatenation is detected, then Applicants' method transitions from step  to step  wherein the method reads the next concatenated object. Applicants' method transitions from step  to step . If Applicants' method determines in step  that concatenation is not detected, then Applicants' method transitions from step  to step  and again reads the first requested object.","The embodiments of Applicants' method recited in , , , and\/or , may be implemented separately. Moreover, in certain embodiments, the individual steps recited in , A, B, , and\/or , may be combined, eliminated, or reordered.","Applicants' invention includes an article of manufacture comprising a computer useable medium, such as computer useable medium  () and\/or  (), having computer readable program code disposed therein for implementing the steps of , and\/or A, and\/or B. Applicants' invention includes an article of manufacture comprising a computer useable medium, such as computer useable medium  () and\/or  (), having computer readable program code disposed therein for implementing the steps of  and\/or .","Applicants' invention further includes computer program products, such as computer program product  () and\/or  (), embodied as program code disposed therein for implementing the steps of , and\/or A, and\/or B. Applicants' invention further includes computer program products, such as computer program product  () and\/or  (), embodied as program code disposed therein for implementing the steps of  and\/or . Such program readable code may be stored in one or more memory devices, such as a magnetic disk, a magnetic tape, or other non-volatile memory devices.","While the preferred embodiments of the present invention have been illustrated in detail, it should be apparent that modifications and adaptations to those embodiments may occur to one skilled in the art without departing from the scope of the present invention as set forth in the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention will be better understood from a reading of the following detailed description taken in conjunction with the drawings in which like reference designators are used to designate like elements, and in which:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 5B","FIG. 5A"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 5C","FIG. 5B"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 5D","FIG. 5B"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 5E","FIG. 5B"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8A"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 8B","FIG. 8A"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
