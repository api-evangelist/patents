---
title: Method and apparatus for managing input focus and z-order
abstract: An improved system for managing user inputs and z-order in a graphic user interface (GUI) environment is disclosed. A GUI element may include a plurality of keys corresponding to keys on a typical keyboard, and may serve as a replacement for the keyboard. The system permits an application having an input focus to retain the input focus while inputs are received in the GUI element, and even transient user interface elements (e.g., menus) will remain displayed in those applications after the user inputs are entered. Input pen and mouse events may first be forwarded to the input area application, which may remove the events from the normal circulation, preventing other applications from learning of the events, and then post those events to the input panel application separately.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06928619&OS=06928619&RS=06928619
owner: Microsoft Corporation
number: 06928619
owner_city: Redmond
owner_country: US
publication_date: 20020510
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The present invention relates generally to graphical user interfaces. Specifically, aspects of the present invention relate to providing a user input panel that may be used to provide input, such as textual input, to a targeted application operating on a computer system. In further aspects, an input focus of the computer system may remain with the target application while the input is received at the user input panel.","Human beings are visual creatures by nature, and it should come as no surprise that the graphical user interface (GUI) has become the preferred method through which users have chosen to interact with their computers. Current GUIs, such as those in the MICROSOFT WINDOWS\u2122 line of products, display a number of graphical panels, often referred to as \u201cwindows,\u201d through which users may interact with various computer applications.","To illustrate, depicts an example GUI in which a display area  contains a number of graphical panels , that represent two applications operating on the system. These applications may be, for example, a word processing program (for example, MICROSOFT WORD\u2122) and a drawing creation program (for example, MICROSOFT VISIO\u2122) . The various panels  are overlaid atop one another (if they overlap one another), in what is often referred to as the \u201cz-order\u201d of panels (the hierarchy of panels that determines which panel is on top when two or more panels overlap), where the topmost panel in the z-order receives the so-called \u201cinput focus.\u201d This input focus identifies the application whose panel is currently being used by the user, and helps the computer operating system identify the application that should receive certain inputs to the system. For example, if the user presses keys on a keyboard, the input focus identifies the application that will receive and process those key presses.","The system assigns the input focus according to the user's commands. For example, the GUI often includes an onscreen pointer , which may be moved about the display area  by the user with an input device, such as a trackball or mouse (not shown). By positioning the pointer  over a particular panel , and pressing or \u201cclicking\u201d the left mouse button, the user can determine which panel is to receive the input focus. In , panel currently has the input focus, and is at the top of the z-order (it appears above other panels). The user has positioned the pointer  over panel , and after pressing the designated key (e.g., entering a mouse click), panel is given the input focus and is brought to the foreground, resulting in the display shown in . Subsequently, user inputs to the computer's keyboard will be forwarded to the application corresponding to panel , as opposed to panel ","The mouse click that selects panel is also reported by the operating system to the application corresponding to panel , which in turn prepares to lose the input focus. In preparing to lose input focus, the application corresponding to panel prepares to be placed in the background, and closes any \u201ctransient\u201d user interface (UI) elements, such as menus.","While the existing GUI described generally above is suitable for users of many typical personal computers, a new generation of computing devices has introduced a unique perspective, and problem. The computers in this new generation can be operated without the traditional keyboard and\/or mouse to which we have become accustomed. Examples include the tablet, or pen-based, line of computer products introduced by Microsoft Corp.","Since these pen-based computing devices may not always include a separate keyboard, alternative approaches to providing user inputs will be needed. However, existing options for providing user inputs, without a keyboard, are not fully adequate. One existing option is the Accessibility Keyboard offered by the MICROSOFT WINDOWS\u2122 operating system. The Accessibility Keyboard appears as a panel resembling the traditional keyboard with the \u201cqwerty\u201d arrangement of character keys. After opening the Accessibility Keyboard, the user is prompted to select the application panel that is to have the input focus (by \u201cmouse-clicking\u201d on it), and subsequent selections of the displayed character keys on the Accessibility Keyboard will cause the selected characters to be sent to the designated application panel.","The Accessibility Keyboard is not, however, a complete replacement for the keyboard. For example, mouse clicking on a key in the Accessibility Keyboard causes transient UI elements (e.g., menus) in other application panels to close. This occurs because the Accessibility Keyboard is implemented as if it were another application panel, and is treated as such. Accordingly, keyboard interaction with such transient UI elements (e.g., selecting a menu item by pressing a key) is not possible using the Accessibility Keyboard (e.g., the menus disappear, rather than respond to the character). Accordingly, there is a need for an improved approach to managing user inputs and z-ordering of application panels.","In some embodiments of the present invention, a separate GUI input panel is used as an input device for providing user inputs to other GUI application panels on the computer display. One embodiment of such a separate GUI input panel is a text or alphanumeric input panel resembling, and replacing, the hardware keyboard that is traditionally associated with computers. The input panel is not limited to text, nor does it necessarily include text, and can in fact receive other inputs such as speech, electronic ink and gestures from an electronic stylus, pen, mouse, or other input device.","Aspects of some embodiments of the present invention allow application panels to retain the input focus, even while the user enters data in the input panel.","In some embodiments, the input panel receives mouse and\/or pen inputs before those inputs are supplied to other applications in the computer system. In further embodiments, the input panel determines whether the mouse and\/or pen inputs should be forwarded to the other applications in the system.","In further embodiments, the input panel is configured to avoid receiving the input focus of the computer system.","In some embodiments, a separate application receives inputs from a stylus or pen, and determines whether the inputs are within the input panel. In further embodiments, a separate application registers with the underlying operating system to receive mouse inputs prior to other applications.","In further embodiments, the input panel is accompanied by a preview area. In further embodiments, the preview area displays textual data entered by the user, but before the textual data is forwarded to a designated application, to allow the user to verify the accuracy of the data before it is forwarded. In some embodiments, the preview area is permitted to obtain the input focus of the system, to allow editing of the displayed data before it is forwarded.","In some embodiments, the preview area is implemented as a separate application from the input panel, and communicates with the input panel.","According to some embodiments, the input area and\/or preview area is\/are placed above other applications in the z-order of the system.","I. Example Hardware","The present invention may be more readily described with reference to .  illustrates a schematic diagram of an example conventional general-purpose digital computing environment that can be used to implement various aspects of the present invention. In , a computer  includes a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory  includes read only memory (ROM)  and random access memory (RAM) .","A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within the computer , such as during startup, is stored in the ROM . The computer  also includes a hard disk drive  for reading from and writing to a hard disk (not shown), a magnetic disk drive  for reading from or writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical disk drive interface , respectively. The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the personal computer . It will be appreciated by those skilled in the art that other types of computer readable media that can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, random access memories (RAMs), read only memories (ROMs), and the like, may also be used in the example operating environment.","A number of program modules can be stored on the hard disk drive , magnetic disk , optical disk , ROM  or RAM , including an operating system , one or more application programs , other program modules , and program data . A user can enter commands and information into the computer  through input devices such as a keyboard  and pointing device . Other input devices (not shown) may include the user's finger, a microphone, joystick, game pad, satellite dish, scanner or the like. These and other input devices are often connected to the processing, unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port or a universal serial bus (USB). Further still, these devices may be coupled directly to the system bus  via an appropriate interface (not shown). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown), such as speakers and printers. In a preferred embodiment, a pen digitizer  and accompanying pen or stylus  are provided in order to digitally capture freehand input. Although a direct connection between the pen digitizer  and the processing unit  is shown, in practice, the pen digitizer  may be coupled to the processing unit  via a serial port, parallel port or other interface and the system bus  as known in the art. Furthermore, although the digitizer  is shown apart from the monitor , it is preferred that the usable input area of the digitizer  be co-extensive with the display area of the monitor . Further still, the digitizer  may be integrated in the monitor , or may exist as a separate device overlaying or otherwise appended to the monitor .","The computer  can operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  can be a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in FIG. . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the local network  through a network interface or adapter . When used in a WAN networking environment, the personal computer  typically includes a modem  or other means for establishing a communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device.","It will be appreciated that the network connections shown are examples and other techniques for establishing a communications link between the computers can be used. The existence of any of various well-known protocols such as TCP\/IP, Ethernet, FTP, HTTP and the like is presumed, and the system can be operated in a client-server configuration to permit a user to retrieve web pages from a web-based server. Any of various conventional web browsers can be used to display and manipulate data on web pages.","Although the  environment shows an example environment, it will be understood that other computing environments may also be used. For example, one or more embodiments of the present invention may use an environment having fewer or more than all of the various elements shown in FIG.  and described above, and these elements may appear in various combinations and subcombinations that will be apparent to one of ordinary skill.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 2","FIG. 1"],"b":["201","2","201","202","203","204","201","204"]},"A stylus could be equipped with buttons or other features to augment its selection capabilities. In one embodiment, a stylus could be implemented as a \u201cpencil\u201d or \u201cpen\u201d, in which one end constitutes a writing portion and the other end constitutes an \u201ceraser\u201d end, and which, when moved across the display, indicates portions of the display are to be erased. Other types of input devices, such as a mouse, trackball, or the like could be used. Additionally, a user's own finger could be used for selecting or indicating portions of the displayed image on a touch-sensitive or proximity-sensitive display. Consequently, the term \u201cuser input device\u201d, as used herein, is intended to have a broad definition and encompasses many variations on well-known input devices.","II. Example Gui Elements",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 3","FIG. 3"],"b":["301","302","302","301","303","301","301","204","303","301"],"i":["a,b ","a,b "]},"An input panel  may also be displayed on the display area . The input panel  may include one or more keys  to be used to enter data. In some embodiments, the keys  correspond to keys found on a conventional physical keyboard, and can be used to enter text by positioning the pointer  and\/or stylus over the keys , and entering a selection input on one or more of the keys. However, the keys  may be any desired keys and\/or any combination or subcombination of the keys normally found on a conventional physical keyboard. For example, in some embodiments, the keys  may include one or more \u201cquick keys\u201d that correspond to keyboard keys that are used more often than others. By placing such common keys in the readily-accessible input panel, overall throughput may be improved. Furthermore, some embodiments may remove certain keys  from the input panel if they are not used often. By removing such keys, the overall size of the input panel  may be reduced, allowing improved use of the available space on the display. In some embodiments, these quick keys may be arranged in a distinct area of input panel  in order of their frequency of use.","In some embodiments, the input panel  may also be accompanied by a separate input area  that may be called up as needed. For example, separate input area  may contain additional keys  corresponding to character symbols that are less frequently used (such as \u201c\u00a7\u201d, or certain characters in non-english languages). The separate input area  may remain hidden until needed, and may be called up using any known form of input (e.g., pressing a particular key , tapping the stylus in a predetermined manner, selecting it from a menu, etc.). Use of such separate input areas provides flexibility to the user. In some embodiments, the separate input area  may behave as a separate panel from input panel , and may be repositioned on the display area separately. In some embodiments, the separate input area  may initially appear as part of the input panel , and may be \u201ctorn away\u201d upon request by the user. For example, the user might wish to reposition the separate input area  to be closer to a particular area of the display area, but may wish to leave the remainder of the input panel  at a different location. By entering a predefined command, such as clicking and dragging a portion of the input panel , the user may cause the separate input area  to be displayed and\/or repositioned at a different location.","The selection input may be a depression of a button on the stylus, a touch of the stylus to the screen, a depression of a button on a keyboard, a depression of a button on the computer system itself (e.g., on its housing), a depression of a button on a mouse, and\/or in any known method for selection using a GUI pointer. The keys  may include textual keys (e.g., \u201cA,\u201d \u201ca,\u201d \u201cB,\u201d \u201cb,\u201d \u201c1,\u201d \u201c2,\u201d \u201c$,\u201d etc.) and\/or functional keys such as SHIFT, CTRL, ESC, UP ARROW, PAGE DOWN, ENTER, etc.","Input panel  may be used as a keyboard substitute to enter data (e.g., textual data) into the various application panels . In the  example, the user may use a stylus and select (or \u201cpress\u201d) a series of onscreen keys  to enter textual data, such as \u201ctesting, 123,\u201d and the textual data corresponding to those key selections would be transmitted to the application that had the input focus. In the  example, the application corresponding to panel appears on top of the z-order, and this panel has the input focus.","It should be noted that in this example, panel retains the input focus, even after the user has selected keys  appearing in input panel . Additionally, any transient UI elements, such as a pull-down menu  or a pop-up window , that were displayed on the panel prior to the user selection of keys  would remain displayed so that the user could continue to interact with the transient UI element (e.g., to select from the pull-down menu ). In other words, as desired, the display of the transient UI element would not be affected by user selection of the keys , and the transient UI element may remain onscreen, for example, one or more seconds after the user selected one or more of the keys . Indeed, the entered textual data would, in some embodiments, be transmitted to the panel as if the user had typed the keystrokes on a keyboard while the input focus remained with the panel . For example, if a menu option could have been selected from menu  with the text string \u201ctesting, 123,\u201d then that option would be selected in some embodiments upon the user entering that data in the input panel .","To allow the input panel  to more easily serve as a keyboard substitute, in some embodiments of the present invention, the input panel  is displayed at the top of the z-order of application panels , allowing the input panel  to always remain visible. The input panel  need not, however, be the absolute highest ranking panel in the z-order. For example, the input panel  may, in some embodiment, be given a z-order ranking below that of the application panel having the input focus. In such embodiments, the user would be able to view the entire panel of the application he\/she is currently using. In other embodiments, the input panel  may be given a priority that is higher than most applications, but is still below some UI elements that are used for the underlying computer system. For example, in the MICROSOFT WINDOWS\u2122 environment, the input panel  might be given a priority that is higher than all \u201cnormal\u201d applications (e.g., word processors, email programs, graphic editors, etc. commonly used by the user), but below \u201csystem level\u201d applications and\/or UI elements associated with the underlying computer system, such as the WINDOWS\u2122 task bar, a UI element relating to the operation of the underlying WINDOWS\u2122 operating system. Placing such system level applications and\/or UI elements above the input panel  and all \u201cnormal\u201d applications helps ensure that the system-level elements are always accessible to the user.","Although the z-order may help determine the manner in which overlapping panels are depicted, the highest ranking panel in the z-order is not necessarily the one having the input focus. Accordingly, it is possible for a particular panel to be displayed above other applications, and yet still not have the input focus. This may be helpful, for example, where the user wishes to view information depicted in a panel, but does not require the ability to edit or interact with that panel (e.g., a map legend may have a higher rank in the z-order than its corresponding map, but the user might not need to edit the legend, and may wish instead to have the input focus remain with the map).","In some embodiments of the present invention, the input panel  may be configured to never be given the input focus of the system, even if it is the highest ranking panel in the z-order. Denying input focus to the input panel  may be most beneficial in embodiments where the input panel  is determined to be simply an input device, such as a keyboard, intended for supplying data to other applications. In such situations, denying input focus may simplify actions where, for example, the user inadvertently clicks a mouse on a location between keys  on input area .",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 4","b":["401","3","401","402","403","402","304","302","402","305","305","304","402","302","403"],"i":["a ","a "]},"If there are errors in the data displayed in the preview area , the user may select the preview area  and\/or preview panel  to temporarily give it the input focus, and the displayed data may be edited as with any text editor. This editing may be accomplished using additional key presses on input panel , key presses on a keyboard, stylus, or housing of the computer system, and\/or any other method of editing electronic text and\/or other data.","If preview panel  or preview area  is temporarily given the input focus for this correction, the computer system may note the application panel that previously had the input focus. When the user is finished editing the data in the preview area , the data may then be forwarded to the application panel that previously had the input focus. Granting the preview panel  and\/or preview area  this temporary input focus allows further inputs, such as those from a hardware keyboard, to be forwarded to the preview panel\/area \/ to simplify the correction process.","As an additional feature, the preview panel  and area  may be used to display data entered by other input applications and\/or devices. For example, the preview area  may be used to display spoken text that is detected by a speech recognition program operating on the computer system. In this manner, the user is given the opportunity to review and\/or edit the text, prior to forwarding it to the desired application. The preview panel  may also include a speech recognition progress meter , to provide the user with feedback regarding the amount of detected sound that has been processed by the speech recognition application.","The input panel  and\/or preview panel  may also include graphical objects, such as buttons , that are used by the speech recognition program. For example, the preview panel  may include a button that is used to switch the speech recognition program between so-called \u201ccommand\u201d and \u201cdictation\u201d modes. In a \u201ccommand\u201d mode, the speech recognition application may interpret spoken words and phrases as commands, such as a command to open an application file, open a menu, make a menu selection, etc. Alternatively, in a \u201cdictation\u201d mode, the speech recognition application may interpret spoke words and phrases as spoken text. When used with a speech recognition program, the input panel and\/or preview panel  may include graphical buttons  that are used to control the speech recognition program itself, such as switching between modes, turning on\/off the microphone, etc. When received at the preview panel , an input on such graphical objects might be processed by the speech recognition program, but not the underlying desired application. As will be discussed below, this may be accomplished by \u201cconsuming\u201d the user input so that, in some embodiments, the desired application (e.g., application having panel ) does not receive the input at all.","Furthermore, the preview area  is not limited to the display of entered textual data, but may also be used to display entered graphic data, before forwarding such data to the intended application(s).","In some embodiments, the preview panel  and\/or area  may be associated or linked with the input panel , such that actions affecting one may also affect the other. For example, since the input panel  may be displayed as a panel, it may be moved and\/or resized. The preview panel  and\/or area  may be configured to move and\/or resize in accordance with, and responsive to, the moving and\/or resizing of the input panel. The reverse may also be true, where moving and\/or resizing of the preview panel  and\/or area  may have a corresponding effect on the input panel .","IV. Example Applications and Processes","The various embodiments discussed above may be implemented on any number of computer systems, including, among others, MICROSOFT WINDOWS\u2122 computer systems and environments. The following discussion of the methods for implementing the various features and embodiments discussed above uses the MICROSOFT WINDOWS\u2122 environment as an example, and it should be understood that similar methods may be implemented in other computer systems as well.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 5","b":"501"},"Operating in conjunction with the operating system  is an application  that handles the detection and interpretation of inputs from a user's stylus, or pen. In one example embodiment in the WINDOWS\u2122 system, this is performed by the Windows Ink Services Platform, (a.k.a. WISP or WISP PEN), which includes a series of application programming interface (API) functions that can be used by applications in the computer system.","Additional applications and\/or processes may be implemented as well. The input area application  handles the various steps, functions and features regarding the input panel  discussed above, while the preview area application  handles the same for the preview panel , preview area , and preview panel buttons  discussed above. Other applications  may also operate in connection with the operating system. For example, one or more of applications  may be responsible for interpreting user inputs from various devices, such as the system keyboard, mouse, and\/or other pointing device. These user input applications may operate in conjunction with the WISP PEN application .","To implement an example embodiment, the WISP functionality may automatically be initiated upon bootup of the operating system. The input area application  may be initiated by the user's request, or it may be automatically created by the operating system . In some embodiments, the input area application  may be automatically initiated upon booting up of the operating system . Alternatively, the input area application  may be initiated when the user starts another application, such as a word processing application, that uses the input area .","The input panel  corresponding to the input area application  may be assigned a predetermined ranking in the z-order. In one example, this may be accomplished by first calling the WINDOWS\u2122 WS_EX-TOPMOST function, and subsequently using the FindWindow and SetWindowPos to define a position in the z-order that is beneath the WINDOWS\u2122 Taskbar, but above other applications. In some embodiments, when the application having the input focus is run in full screen mode, the Taskbar may become invisible, and as such, the input area  may simply be assigned to the very top of the z-order.","The individual elements in the input panel , such as keys , may be implemented individually as separate ActiveX controls, and may register themselves with WISP  to establish themselves as \u201cpre-hooks\u201d to capture user input events, such as pen down events stemming from the display surface detecting the user's pen or stylus. By registering themselves as \u201cpre-hooks,\u201d the individual elements receive notification of the user input events before other applications.","In some embodiments, the input panel  may be configured to never take the input focus of the system. This may be accomplished, in one example, by using the WS_EX_NOACTIVATE WINDOWS\u2122 function call.","The preview panel\/area application  may be initiated when the input area application  is initiated. Alternatively, the preview panel\/area application  may be initiated at some time after the input area application , for example, after the user enters data using the input panel , or upon specific request by the user. In some embodiments, the input panel  and preview panel\/area \/ are implemented as separate applications, and may be separate Component Object Model (COM) objects that have references to one another. By implementing them as separate applications, it is possible to deny input focus from the input panel , and yet still allow input focus to the preview panel\/area \/ for the temporary instances in which the user wishes to edit the displayed data before forwarding it to the designated application. Furthermore, having these objects reference one another allows a linking between them, allowing them both to respond to a move and\/or resizing command that is made to one of them.","In some embodiments, the input panel  and\/or preview panel  may be moved using a set of function calls separate and distinct from panel movement functions offered in the underlying operating system . In such embodiments, the original position of the pointer is recorded, as is the relative position of the pointer as it is moved by the user. The input panel  and\/or preview panel  may simply be rendered in its new position when movement is complete, or may be rendered in a new position periodically (e.g., 15, 25, 30, 45, 60, etc. times per second). In one example embodiment, the rendering occurs 30 times per second to give the appearance of a smooth movement. This may be particularly beneficial when the underlying operating system would automatically give the input focus to a panel that is being resized and\/or moved, and the input panel  is configured to not accept any input focus.","V. Process Of Receiving And Managing User Inputs","When the various applications and panels have been established, use of the input panel  will be described herein using the following general types of example inputs: 1) pen\/stylus inputs; and 2) mouse\/pointer inputs, and the flow diagram shown in and ","As shown in , upon receiving a pen (or stylus) input, the location and type of the input may be forwarded to the WISP application  in step . Then, in step , the WISP application  determines whether the location of the input is within the boundaries of the input panel . If the pen input is within the boundaries of the input panel , then the input is forwarded in step  to the input panel application  for processing. The boundaries of input panel  may be any area assigned to the panel, such as the area of the display occupied by the panel.","In step , the input panel application  determines whether the input is of a proper location and type to complete a user's selection of a key . To determine the location of the input, the input panel application  may check the location with the boundaries of the various keys . To determine the type of the input, the input panel application  may compare the input type (e.g., pen down, pen up, pen hold, etc.) with the type required for activation of the particular key .","If the input is of a type that completes the selection of a particular key , then the input panel application  may take the appropriate action in step . The appropriate action may include sending a response to the WISP , indicating that the particular pen input is to be \u201cconsumed,\u201d and that it is not to be forwarded to other applications. By \u201cconsuming\u201d the input, the input panel application  is able to prevent other applications from responding to the input, which can, among other features, prevent those other applications from closing transient UI elements. The appropriate action in step  may also include forwarding (or posting) the data (e.g., the letter of the key  that was selected) to the appropriate application. The application may be a word processing application that currently has the input focus, which would then respond as if the user pressed the corresponding button on a hardware keyboard.","In some embodiments, if the preview panel  and\/or area  are used, this data may first be sent to the preview area  for display. In this case, the data would be displayed on the preview area , and after confirmation by the user (e.g., the user presses an \u201cAccept\u201d button  on the preview panel ), it would be forwarded or posted to the application that had the input focus.","If, in step , the user input does not correspond to the selection of a particular key, then the input is not used by the input panel application , and a message is returned to the WISP to this effect in step . The WISP may then take whatever further action is desired for such an unused input in the input panel . In some embodiments, this input is simply discarded. Other embodiments may forward the input on to other applications. In some embodiments, the pen input is not discarded until the WISP  and input panel application  both decide it should be discarded. This allows the WISP  to take further action based on the pen input (even if the input panel  believes the input should be consumed).","If, in step , the WISP  determines that the pen input is not within the boundaries of the input panel , then the pen input is passed on, in step  to the next registered \u201cpre-hook,\u201d or if there are no more pre-hooks, then the input is forwarded to the operating system for further distribution according to the operating system's own protocol.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 6","i":"b ","b":["651","32"]},"In step , the mouse input is provided to the input panel application , which determines whether the input is within the boundaries of the input panel . In alternative embodiments, the mouse hook may first be sent to the WISP  (or a similar application), which can make the boundary determination.","To help ensure that the input panel  gets the first opportunity at reviewing the mouse input, the input panel  (or the individual keys ) may register for priority Low Level Mouse Hooks. In the exemplary operating system, mouse input events are distributed to applications having registered hooks before they are distributed to other applications.","If the input is within the boundaries of the input panel in step , the input panel application  (or the individual key  ActiveX controls) determines, in step , whether the received mouse input completes a user selection of a particular key .","If the mouse input completes such a user selection of a key, then in step , the input panel application indicates that the mouse input should be consumed, and the data corresponding to the selected key (e.g., the selected character) is forwarded, or posted, to the application having the input focus. In some embodiments, this may be the designated application, such as a word processing program, that ultimately needs the inputted data. In alternate embodiments, the preview application  may first receive the data to display in a preview panel , before forwarding the data on to the designated application. As discussed above with respect to pen inputs, this may occur after the user has selected or pressed the \u201cAccept\u201d button  in the preview application.","If, in step , the mouse input does not complete the selection of a key , then the mouse input may be returned to the operating system in step . The operating system may, in turn, forward the mouse event on to other registered applications. In some embodiments, these other registered applications may include the WISP , which may determine that the mouse input should be consumed. This may occur when the input is within the boundary of the input panel  (as determined by the WISP  and\/or input panel application ). If both the WISP  and input panel application  request that the mouse input be consumed, then the operating system  will simply discard the input, and will not forward it to other applications. In this manner, the designated application having the input focus will not \u201cknow\u201d that the mouse event ever occurred, and as such, will not take certain actions (such as closing transient UI elements) that it otherwise would have taken.","If, in step , it is determined that the input is not within the boundaries of the input panel, then the mouse event may simply be returned to the operating system in step  for further processing as described above.","VI. Conclusion","Various embodiments and aspects of the present invention have been described above, and it will be understood by those of ordinary skill that the present invention includes within its scope all combinations and subcombinations of these embodiments and aspects. The full scope of the present invention should only be limited by the claims, which read as follows:"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIGS. 6","i":"a-b "},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIGS. 7","i":"a-c "}]},"DETDESC":[{},{}]}
